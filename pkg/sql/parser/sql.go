// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:73

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}

//line sql-gen.y:675
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLJOB",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCONTROLJOB",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11636

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1314,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	219, 197,
	444, 197,
	-2, 0,
	-1, 79,
	208, 1118,
	221, 1118,
	237, 337,
	335, 337,
	344, 912,
	376, 337,
	388, 912,
	429, 912,
	454, 337,
	479, 912,
	-2, 0,
	-1, 85,
	237, 341,
	-2, 0,
	-1, 86,
	122, 1314,
	214, 1314,
	464, 1314,
	465, 1314,
	-2, 0,
	-1, 102,
	139, 1285,
	157, 1285,
	170, 1285,
	217, 1285,
	250, 1285,
	294, 1285,
	304, 1285,
	459, 1285,
	-2, 1256,
	-1, 136,
	147, 797,
	236, 797,
	338, 766,
	393, 766,
	447, 797,
	-2, 0,
	-1, 138,
	4, 1316,
	21, 1316,
	22, 1316,
	23, 1316,
	24, 1316,
	25, 1316,
	26, 1316,
	28, 1316,
	29, 1316,
	35, 1316,
	40, 1316,
	41, 1316,
	42, 1316,
	43, 1316,
	44, 1316,
	45, 1316,
	46, 1316,
	47, 1316,
	48, 1316,
	49, 1316,
	51, 1316,
	52, 1316,
	53, 1316,
	54, 1316,
	56, 1316,
	57, 1316,
	58, 1316,
	59, 1316,
	60, 1316,
	61, 1316,
	65, 1316,
	66, 1316,
	67, 1316,
	68, 1316,
	70, 1316,
	71, 1316,
	72, 1316,
	76, 1316,
	77, 1316,
	78, 1316,
	79, 1316,
	80, 1316,
	81, 1316,
	82, 1316,
	85, 1316,
	86, 1316,
	87, 1316,
	88, 1316,
	90, 1316,
	92, 1316,
	93, 1316,
	94, 1316,
	95, 1316,
	97, 1316,
	99, 1316,
	100, 1316,
	108, 1316,
	109, 1316,
	110, 1316,
	111, 1316,
	113, 1316,
	114, 1316,
	115, 1316,
	117, 1316,
	118, 1316,
	119, 1316,
	121, 1316,
	122, 1316,
	124, 1316,
	125, 1316,
	126, 1316,
	129, 1316,
	130, 1316,
	131, 1316,
	133, 1316,
	134, 1316,
	136, 1316,
	137, 1316,
	138, 1316,
	140, 1316,
	141, 1316,
	142, 1316,
	143, 1316,
	144, 1316,
	145, 1316,
	146, 1316,
	147, 1316,
	148, 1316,
	149, 1316,
	150, 1316,
	151, 1316,
	152, 1316,
	153, 1316,
	154, 1316,
	156, 1316,
	162, 1316,
	163, 1316,
	164, 1316,
	165, 1316,
	169, 1316,
	171, 1316,
	175, 1316,
	176, 1316,
	177, 1316,
	178, 1316,
	179, 1316,
	180, 1316,
	182, 1316,
	183, 1316,
	185, 1316,
	186, 1316,
	188, 1316,
	189, 1316,
	190, 1316,
	191, 1316,
	192, 1316,
	193, 1316,
	194, 1316,
	195, 1316,
	196, 1316,
	198, 1316,
	199, 1316,
	201, 1316,
	202, 1316,
	203, 1316,
	204, 1316,
	208, 1316,
	209, 1316,
	210, 1316,
	211, 1316,
	214, 1316,
	215, 1316,
	216, 1316,
	218, 1316,
	220, 1316,
	221, 1316,
	223, 1316,
	225, 1316,
	226, 1316,
	227, 1316,
	229, 1316,
	233, 1316,
	234, 1316,
	235, 1316,
	236, 1316,
	237, 1316,
	238, 1316,
	240, 1316,
	241, 1316,
	242, 1316,
	244, 1316,
	245, 1316,
	247, 1316,
	248, 1316,
	251, 1316,
	252, 1316,
	253, 1316,
	256, 1316,
	257, 1316,
	258, 1316,
	259, 1316,
	261, 1316,
	262, 1316,
	263, 1316,
	264, 1316,
	265, 1316,
	266, 1316,
	267, 1316,
	268, 1316,
	269, 1316,
	270, 1316,
	271, 1316,
	273, 1316,
	275, 1316,
	276, 1316,
	277, 1316,
	278, 1316,
	279, 1316,
	280, 1316,
	281, 1316,
	283, 1316,
	285, 1316,
	287, 1316,
	289, 1316,
	290, 1316,
	291, 1316,
	292, 1316,
	293, 1316,
	296, 1316,
	299, 1316,
	300, 1316,
	301, 1316,
	302, 1316,
	305, 1316,
	306, 1316,
	307, 1316,
	309, 1316,
	311, 1316,
	312, 1316,
	313, 1316,
	314, 1316,
	315, 1316,
	316, 1316,
	317, 1316,
	318, 1316,
	319, 1316,
	320, 1316,
	321, 1316,
	322, 1316,
	324, 1316,
	325, 1316,
	326, 1316,
	327, 1316,
	328, 1316,
	329, 1316,
	330, 1316,
	331, 1316,
	332, 1316,
	334, 1316,
	336, 1316,
	337, 1316,
	338, 1316,
	339, 1316,
	340, 1316,
	341, 1316,
	342, 1316,
	343, 1316,
	344, 1316,
	345, 1316,
	346, 1316,
	348, 1316,
	354, 1316,
	356, 1316,
	357, 1316,
	358, 1316,
	359, 1316,
	360, 1316,
	361, 1316,
	362, 1316,
	363, 1316,
	365, 1316,
	366, 1316,
	367, 1316,
	369, 1316,
	370, 1316,
	371, 1316,
	372, 1316,
	373, 1316,
	374, 1316,
	376, 1316,
	377, 1316,
	378, 1316,
	379, 1316,
	380, 1316,
	381, 1316,
	382, 1316,
	383, 1316,
	384, 1316,
	385, 1316,
	386, 1316,
	388, 1316,
	389, 1316,
	390, 1316,
	391, 1316,
	392, 1316,
	393, 1316,
	395, 1316,
	396, 1316,
	397, 1316,
	398, 1316,
	399, 1316,
	401, 1316,
	402, 1316,
	403, 1316,
	404, 1316,
	405, 1316,
	406, 1316,
	407, 1316,
	409, 1316,
	411, 1316,
	412, 1316,
	413, 1316,
	414, 1316,
	415, 1316,
	416, 1316,
	417, 1316,
	418, 1316,
	419, 1316,
	420, 1316,
	421, 1316,
	422, 1316,
	423, 1316,
	425, 1316,
	426, 1316,
	428, 1316,
	430, 1316,
	431, 1316,
	432, 1316,
	433, 1316,
	434, 1316,
	435, 1316,
	436, 1316,
	437, 1316,
	439, 1316,
	440, 1316,
	441, 1316,
	442, 1316,
	443, 1316,
	445, 1316,
	447, 1316,
	448, 1316,
	449, 1316,
	450, 1316,
	451, 1316,
	453, 1316,
	454, 1316,
	455, 1316,
	457, 1316,
	458, 1316,
	461, 1316,
	462, 1316,
	463, 1316,
	464, 1316,
	465, 1316,
	466, 1316,
	467, 1316,
	469, 1316,
	472, 1316,
	473, 1316,
	474, 1316,
	475, 1316,
	476, 1316,
	477, 1316,
	479, 1316,
	480, 1316,
	481, 1316,
	486, 1316,
	487, 1316,
	488, 1316,
	489, 1316,
	490, 1316,
	491, 1316,
	-2, 0,
	-1, 139,
	1, 1190,
	225, 1190,
	334, 1190,
	342, 1190,
	494, 1190,
	518, 1190,
	-2, 0,
	-1, 141,
	1, 1190,
	518, 1190,
	-2, 0,
	-1, 142,
	1, 1190,
	518, 1190,
	-2, 0,
	-1, 143,
	1, 1190,
	444, 1190,
	518, 1190,
	-2, 0,
	-1, 172,
	139, 1284,
	157, 1284,
	170, 1284,
	217, 1284,
	250, 1284,
	294, 1284,
	304, 1284,
	459, 1284,
	-2, 1259,
	-1, 209,
	4, 1323,
	5, 1323,
	6, 1323,
	7, 1323,
	8, 1323,
	9, 1323,
	10, 1323,
	21, 1323,
	22, 1323,
	23, 1323,
	24, 1323,
	25, 1323,
	26, 1323,
	28, 1323,
	29, 1323,
	35, 1323,
	36, 1323,
	40, 1323,
	41, 1323,
	42, 1323,
	43, 1323,
	44, 1323,
	45, 1323,
	46, 1323,
	47, 1323,
	48, 1323,
	49, 1323,
	51, 1323,
	52, 1323,
	53, 1323,
	54, 1323,
	56, 1323,
	57, 1323,
	58, 1323,
	59, 1323,
	60, 1323,
	61, 1323,
	62, 1323,
	63, 1323,
	64, 1323,
	65, 1323,
	66, 1323,
	67, 1323,
	68, 1323,
	70, 1323,
	71, 1323,
	72, 1323,
	74, 1323,
	76, 1323,
	77, 1323,
	78, 1323,
	79, 1323,
	80, 1323,
	81, 1323,
	82, 1323,
	85, 1323,
	86, 1323,
	87, 1323,
	88, 1323,
	90, 1323,
	92, 1323,
	93, 1323,
	94, 1323,
	95, 1323,
	97, 1323,
	98, 1323,
	99, 1323,
	100, 1323,
	101, 1323,
	102, 1323,
	103, 1323,
	104, 1323,
	105, 1323,
	106, 1323,
	107, 1323,
	108, 1323,
	109, 1323,
	110, 1323,
	111, 1323,
	112, 1323,
	113, 1323,
	114, 1323,
	115, 1323,
	116, 1323,
	117, 1323,
	118, 1323,
	119, 1323,
	121, 1323,
	122, 1323,
	124, 1323,
	125, 1323,
	126, 1323,
	129, 1323,
	130, 1323,
	131, 1323,
	133, 1323,
	134, 1323,
	136, 1323,
	137, 1323,
	138, 1323,
	140, 1323,
	141, 1323,
	142, 1323,
	143, 1323,
	144, 1323,
	145, 1323,
	146, 1323,
	147, 1323,
	148, 1323,
	149, 1323,
	150, 1323,
	151, 1323,
	152, 1323,
	153, 1323,
	154, 1323,
	155, 1323,
	156, 1323,
	162, 1323,
	163, 1323,
	164, 1323,
	165, 1323,
	169, 1323,
	171, 1323,
	174, 1323,
	175, 1323,
	176, 1323,
	177, 1323,
	178, 1323,
	179, 1323,
	180, 1323,
	182, 1323,
	183, 1323,
	185, 1323,
	186, 1323,
	188, 1323,
	189, 1323,
	190, 1323,
	191, 1323,
	192, 1323,
	193, 1323,
	194, 1323,
	195, 1323,
	196, 1323,
	197, 1323,
	198, 1323,
	199, 1323,
	201, 1323,
	202, 1323,
	203, 1323,
	204, 1323,
	208, 1323,
	209, 1323,
	210, 1323,
	211, 1323,
	213, 1323,
	214, 1323,
	215, 1323,
	216, 1323,
	218, 1323,
	220, 1323,
	221, 1323,
	222, 1323,
	223, 1323,
	224, 1323,
	225, 1323,
	226, 1323,
	227, 1323,
	228, 1323,
	229, 1323,
	233, 1323,
	234, 1323,
	235, 1323,
	236, 1323,
	237, 1323,
	238, 1323,
	240, 1323,
	241, 1323,
	242, 1323,
	244, 1323,
	245, 1323,
	246, 1323,
	247, 1323,
	248, 1323,
	249, 1323,
	251, 1323,
	252, 1323,
	253, 1323,
	254, 1323,
	255, 1323,
	256, 1323,
	257, 1323,
	258, 1323,
	259, 1323,
	261, 1323,
	262, 1323,
	263, 1323,
	264, 1323,
	265, 1323,
	266, 1323,
	267, 1323,
	268, 1323,
	269, 1323,
	270, 1323,
	271, 1323,
	273, 1323,
	274, 1323,
	275, 1323,
	276, 1323,
	277, 1323,
	278, 1323,
	279, 1323,
	280, 1323,
	281, 1323,
	282, 1323,
	283, 1323,
	284, 1323,
	285, 1323,
	286, 1323,
	287, 1323,
	288, 1323,
	289, 1323,
	290, 1323,
	291, 1323,
	292, 1323,
	293, 1323,
	296, 1323,
	300, 1323,
	301, 1323,
	302, 1323,
	305, 1323,
	306, 1323,
	307, 1323,
	308, 1323,
	309, 1323,
	310, 1323,
	311, 1323,
	312, 1323,
	313, 1323,
	314, 1323,
	315, 1323,
	316, 1323,
	317, 1323,
	318, 1323,
	319, 1323,
	320, 1323,
	321, 1323,
	322, 1323,
	324, 1323,
	325, 1323,
	326, 1323,
	327, 1323,
	328, 1323,
	329, 1323,
	330, 1323,
	331, 1323,
	332, 1323,
	334, 1323,
	336, 1323,
	337, 1323,
	338, 1323,
	339, 1323,
	340, 1323,
	341, 1323,
	342, 1323,
	343, 1323,
	344, 1323,
	345, 1323,
	346, 1323,
	348, 1323,
	354, 1323,
	356, 1323,
	357, 1323,
	358, 1323,
	359, 1323,
	360, 1323,
	361, 1323,
	362, 1323,
	363, 1323,
	365, 1323,
	366, 1323,
	367, 1323,
	368, 1323,
	369, 1323,
	370, 1323,
	371, 1323,
	372, 1323,
	373, 1323,
	374, 1323,
	376, 1323,
	377, 1323,
	378, 1323,
	379, 1323,
	380, 1323,
	381, 1323,
	382, 1323,
	383, 1323,
	384, 1323,
	385, 1323,
	386, 1323,
	388, 1323,
	389, 1323,
	390, 1323,
	391, 1323,
	392, 1323,
	393, 1323,
	394, 1323,
	395, 1323,
	396, 1323,
	397, 1323,
	398, 1323,
	399, 1323,
	400, 1323,
	401, 1323,
	402, 1323,
	403, 1323,
	404, 1323,
	405, 1323,
	406, 1323,
	407, 1323,
	409, 1323,
	411, 1323,
	412, 1323,
	413, 1323,
	414, 1323,
	415, 1323,
	416, 1323,
	417, 1323,
	418, 1323,
	419, 1323,
	420, 1323,
	421, 1323,
	422, 1323,
	423, 1323,
	425, 1323,
	426, 1323,
	427, 1323,
	428, 1323,
	430, 1323,
	431, 1323,
	432, 1323,
	433, 1323,
	434, 1323,
	435, 1323,
	436, 1323,
	437, 1323,
	439, 1323,
	440, 1323,
	441, 1323,
	442, 1323,
	443, 1323,
	445, 1323,
	447, 1323,
	448, 1323,
	449, 1323,
	450, 1323,
	451, 1323,
	452, 1323,
	453, 1323,
	454, 1323,
	455, 1323,
	457, 1323,
	458, 1323,
	460, 1323,
	461, 1323,
	462, 1323,
	463, 1323,
	464, 1323,
	465, 1323,
	466, 1323,
	467, 1323,
	468, 1323,
	469, 1323,
	472, 1323,
	473, 1323,
	474, 1323,
	475, 1323,
	476, 1323,
	477, 1323,
	479, 1323,
	480, 1323,
	481, 1323,
	486, 1323,
	487, 1323,
	488, 1323,
	489, 1323,
	490, 1323,
	491, 1323,
	492, 1323,
	499, 1323,
	506, 1323,
	507, 1323,
	508, 1323,
	515, 1323,
	519, 1323,
	-2, 0,
	-1, 626,
	173, 2032,
	444, 2032,
	498, 2032,
	517, 2032,
	-2, 0,
	-1, 627,
	173, 2120,
	444, 2120,
	498, 2120,
	517, 2120,
	-2, 0,
	-1, 628,
	173, 2020,
	444, 2020,
	498, 2020,
	517, 2020,
	-2, 0,
	-1, 630,
	173, 2220,
	444, 2220,
	498, 2220,
	517, 2220,
	-2, 0,
	-1, 632,
	173, 2254,
	444, 2254,
	498, 2254,
	517, 2254,
	-2, 0,
	-1, 639,
	173, 2135,
	444, 2135,
	498, 2135,
	517, 2135,
	-2, 614,
	-1, 670,
	517, 1971,
	520, 1971,
	-2, 851,
	-1, 671,
	517, 1973,
	520, 1973,
	-2, 852,
	-1, 672,
	517, 1972,
	520, 1972,
	-2, 853,
	-1, 673,
	520, 1906,
	-2, 854,
	-1, 695,
	170, 211,
	-2, 0,
	-1, 717,
	479, 1095,
	-2, 913,
	-1, 757,
	4, 1116,
	21, 1116,
	22, 1116,
	23, 1116,
	24, 1116,
	25, 1116,
	26, 1116,
	28, 1116,
	29, 1116,
	35, 1116,
	40, 1116,
	41, 1116,
	42, 1116,
	43, 1116,
	44, 1116,
	45, 1116,
	46, 1116,
	47, 1116,
	48, 1116,
	49, 1116,
	51, 1116,
	52, 1116,
	53, 1116,
	54, 1116,
	56, 1116,
	57, 1116,
	58, 1116,
	59, 1116,
	60, 1116,
	61, 1116,
	65, 1116,
	66, 1116,
	67, 1116,
	68, 1116,
	70, 1116,
	71, 1116,
	72, 1116,
	76, 1116,
	77, 1116,
	78, 1116,
	79, 1116,
	80, 1116,
	81, 1116,
	82, 1116,
	85, 1116,
	86, 1116,
	87, 1116,
	88, 1116,
	90, 1116,
	92, 1116,
	93, 1116,
	94, 1116,
	95, 1116,
	97, 1116,
	99, 1116,
	100, 1116,
	108, 1116,
	109, 1116,
	110, 1116,
	111, 1116,
	113, 1116,
	114, 1116,
	115, 1116,
	117, 1116,
	118, 1116,
	119, 1116,
	121, 1116,
	122, 1116,
	124, 1116,
	125, 1116,
	126, 1116,
	129, 1116,
	130, 1116,
	131, 1116,
	133, 1116,
	134, 1116,
	136, 1116,
	137, 1116,
	138, 1116,
	140, 1116,
	141, 1116,
	142, 1116,
	143, 1116,
	144, 1116,
	145, 1116,
	146, 1116,
	147, 1116,
	148, 1116,
	149, 1116,
	150, 1116,
	151, 1116,
	152, 1116,
	153, 1116,
	154, 1116,
	156, 1116,
	162, 1116,
	163, 1116,
	164, 1116,
	165, 1116,
	169, 1116,
	171, 1116,
	175, 1116,
	176, 1116,
	177, 1116,
	178, 1116,
	179, 1116,
	180, 1116,
	182, 1116,
	183, 1116,
	185, 1116,
	186, 1116,
	188, 1116,
	189, 1116,
	190, 1116,
	191, 1116,
	192, 1116,
	193, 1116,
	194, 1116,
	195, 1116,
	196, 1116,
	198, 1116,
	199, 1116,
	201, 1116,
	202, 1116,
	203, 1116,
	204, 1116,
	208, 1116,
	209, 1116,
	210, 1116,
	211, 1116,
	214, 1116,
	215, 1116,
	216, 1116,
	218, 1116,
	220, 1116,
	221, 1116,
	223, 1116,
	225, 1116,
	226, 1116,
	227, 1116,
	229, 1116,
	233, 1116,
	234, 1116,
	235, 1116,
	236, 1116,
	237, 1116,
	238, 1116,
	240, 1116,
	241, 1116,
	242, 1116,
	244, 1116,
	245, 1116,
	247, 1116,
	248, 1116,
	251, 1116,
	252, 1116,
	253, 1116,
	256, 1116,
	257, 1116,
	258, 1116,
	259, 1116,
	261, 1116,
	262, 1116,
	263, 1116,
	264, 1116,
	265, 1116,
	266, 1116,
	267, 1116,
	268, 1116,
	269, 1116,
	270, 1116,
	271, 1116,
	273, 1116,
	275, 1116,
	276, 1116,
	277, 1116,
	278, 1116,
	279, 1116,
	280, 1116,
	281, 1116,
	283, 1116,
	285, 1116,
	287, 1116,
	289, 1116,
	290, 1116,
	291, 1116,
	292, 1116,
	293, 1116,
	296, 1116,
	300, 1116,
	301, 1116,
	302, 1116,
	305, 1116,
	306, 1116,
	307, 1116,
	309, 1116,
	311, 1116,
	312, 1116,
	313, 1116,
	314, 1116,
	315, 1116,
	316, 1116,
	317, 1116,
	318, 1116,
	319, 1116,
	320, 1116,
	321, 1116,
	322, 1116,
	324, 1116,
	325, 1116,
	326, 1116,
	327, 1116,
	328, 1116,
	329, 1116,
	330, 1116,
	331, 1116,
	332, 1116,
	334, 1116,
	336, 1116,
	337, 1116,
	338, 1116,
	339, 1116,
	340, 1116,
	341, 1116,
	342, 1116,
	343, 1116,
	344, 1116,
	345, 1116,
	346, 1116,
	348, 1116,
	354, 1116,
	356, 1116,
	357, 1116,
	358, 1116,
	359, 1116,
	360, 1116,
	361, 1116,
	362, 1116,
	363, 1116,
	365, 1116,
	366, 1116,
	367, 1116,
	369, 1116,
	370, 1116,
	371, 1116,
	372, 1116,
	373, 1116,
	374, 1116,
	376, 1116,
	377, 1116,
	378, 1116,
	379, 1116,
	380, 1116,
	381, 1116,
	382, 1116,
	383, 1116,
	384, 1116,
	385, 1116,
	386, 1116,
	388, 1116,
	389, 1116,
	390, 1116,
	391, 1116,
	392, 1116,
	393, 1116,
	395, 1116,
	396, 1116,
	397, 1116,
	398, 1116,
	399, 1116,
	401, 1116,
	402, 1116,
	403, 1116,
	404, 1116,
	405, 1116,
	406, 1116,
	407, 1116,
	409, 1116,
	411, 1116,
	412, 1116,
	413, 1116,
	414, 1116,
	415, 1116,
	416, 1116,
	417, 1116,
	418, 1116,
	419, 1116,
	420, 1116,
	421, 1116,
	422, 1116,
	423, 1116,
	425, 1116,
	426, 1116,
	428, 1116,
	430, 1116,
	431, 1116,
	432, 1116,
	433, 1116,
	434, 1116,
	435, 1116,
	436, 1116,
	437, 1116,
	439, 1116,
	440, 1116,
	441, 1116,
	442, 1116,
	443, 1116,
	445, 1116,
	447, 1116,
	448, 1116,
	449, 1116,
	450, 1116,
	451, 1116,
	453, 1116,
	454, 1116,
	455, 1116,
	457, 1116,
	458, 1116,
	461, 1116,
	462, 1116,
	463, 1116,
	464, 1116,
	465, 1116,
	466, 1116,
	467, 1116,
	469, 1116,
	472, 1116,
	473, 1116,
	474, 1116,
	475, 1116,
	476, 1116,
	477, 1116,
	479, 1116,
	480, 1116,
	481, 1116,
	486, 1116,
	487, 1116,
	488, 1116,
	489, 1116,
	490, 1116,
	491, 1116,
	-2, 0,
	-1, 836,
	338, 767,
	393, 767,
	-2, 0,
	-1, 837,
	338, 766,
	393, 766,
	-2, 710,
	-1, 841,
	1, 807,
	514, 807,
	516, 807,
	518, 807,
	-2, 0,
	-1, 842,
	1, 745,
	514, 745,
	516, 745,
	518, 745,
	-2, 0,
	-1, 843,
	1, 850,
	170, 850,
	514, 850,
	516, 850,
	518, 850,
	-2, 0,
	-1, 851,
	1, 770,
	514, 770,
	516, 770,
	518, 770,
	-2, 0,
	-1, 857,
	1, 807,
	514, 807,
	516, 807,
	518, 807,
	-2, 0,
	-1, 858,
	1, 809,
	514, 809,
	516, 809,
	518, 809,
	-2, 0,
	-1, 859,
	1, 812,
	514, 812,
	516, 812,
	518, 812,
	-2, 0,
	-1, 865,
	1, 829,
	514, 829,
	516, 829,
	518, 829,
	-2, 0,
	-1, 866,
	1, 831,
	514, 831,
	516, 831,
	518, 831,
	-2, 0,
	-1, 915,
	157, 1325,
	170, 1325,
	250, 1325,
	294, 1325,
	-2, 1263,
	-1, 930,
	157, 1324,
	170, 1324,
	250, 1324,
	294, 1324,
	-2, 1260,
	-1, 956,
	517, 1970,
	-2, 622,
	-1, 984,
	5, 1962,
	515, 1960,
	-2, 1951,
	-1, 992,
	5, 1983,
	515, 1980,
	-2, 1971,
	-1, 993,
	5, 1984,
	515, 1981,
	-2, 1972,
	-1, 1001,
	517, 1968,
	-2, 1950,
	-1, 1002,
	515, 2333,
	-2, 1969,
	-1, 1025,
	515, 2332,
	-2, 1985,
	-1, 1026,
	5, 1490,
	-2, 2303,
	-1, 1027,
	5, 1491,
	-2, 2304,
	-1, 1028,
	5, 1492,
	-2, 2318,
	-1, 1029,
	5, 1493,
	-2, 2282,
	-1, 1030,
	5, 1494,
	-2, 2316,
	-1, 1031,
	5, 1502,
	-2, 2295,
	-1, 1032,
	5, 1489,
	-2, 2291,
	-1, 1033,
	5, 1489,
	-2, 2290,
	-1, 1034,
	5, 1489,
	-2, 2309,
	-1, 1035,
	5, 1500,
	-2, 2284,
	-1, 1036,
	5, 1505,
	-2, 2283,
	-1, 1037,
	5, 1507,
	-2, 2328,
	-1, 1040,
	5, 1529,
	-2, 2321,
	-1, 1041,
	5, 1521,
	-2, 2322,
	-1, 1042,
	5, 1529,
	-2, 2323,
	-1, 1043,
	5, 1525,
	-2, 2324,
	-1, 1044,
	5, 1475,
	-2, 2296,
	-1, 1045,
	5, 1476,
	-2, 2297,
	-1, 1046,
	5, 1477,
	-2, 2285,
	-1, 1073,
	5, 1512,
	-2, 2329,
	-1, 1074,
	5, 1513,
	-2, 2319,
	-1, 1075,
	5, 1514,
	480, 1514,
	-2, 2286,
	-1, 1076,
	5, 1515,
	480, 1515,
	-2, 2287,
	-1, 1113,
	515, 1980,
	-2, 1971,
	-1, 1114,
	515, 1981,
	-2, 1972,
	-1, 1144,
	173, 2254,
	444, 2254,
	498, 2254,
	517, 2254,
	-2, 0,
	-1, 1147,
	1, 600,
	518, 600,
	-2, 1198,
	-1, 1272,
	356, 1946,
	395, 1946,
	508, 1946,
	-2, 1944,
	-1, 1284,
	519, 1946,
	-2, 1947,
	-1, 1291,
	1, 1092,
	514, 1092,
	516, 1092,
	518, 1092,
	-2, 1312,
	-1, 1345,
	344, 912,
	479, 912,
	-2, 336,
	-1, 1366,
	1, 1092,
	514, 1092,
	516, 1092,
	518, 1092,
	-2, 1312,
	-1, 1373,
	4, 1116,
	21, 1116,
	22, 1116,
	23, 1116,
	24, 1116,
	25, 1116,
	26, 1116,
	28, 1116,
	29, 1116,
	35, 1116,
	40, 1116,
	41, 1116,
	42, 1116,
	43, 1116,
	44, 1116,
	45, 1116,
	46, 1116,
	47, 1116,
	48, 1116,
	49, 1116,
	51, 1116,
	52, 1116,
	53, 1116,
	54, 1116,
	56, 1116,
	57, 1116,
	58, 1116,
	59, 1116,
	60, 1116,
	61, 1116,
	65, 1116,
	66, 1116,
	67, 1116,
	68, 1116,
	70, 1116,
	71, 1116,
	72, 1116,
	76, 1116,
	77, 1116,
	78, 1116,
	79, 1116,
	80, 1116,
	81, 1116,
	82, 1116,
	85, 1116,
	86, 1116,
	87, 1116,
	88, 1116,
	90, 1116,
	92, 1116,
	93, 1116,
	94, 1116,
	95, 1116,
	97, 1116,
	99, 1116,
	100, 1116,
	108, 1116,
	109, 1116,
	110, 1116,
	111, 1116,
	113, 1116,
	114, 1116,
	115, 1116,
	117, 1116,
	118, 1116,
	119, 1116,
	121, 1116,
	122, 1116,
	124, 1116,
	125, 1116,
	126, 1116,
	129, 1116,
	130, 1116,
	131, 1116,
	133, 1116,
	134, 1116,
	136, 1116,
	137, 1116,
	138, 1116,
	140, 1116,
	141, 1116,
	142, 1116,
	143, 1116,
	144, 1116,
	145, 1116,
	146, 1116,
	147, 1116,
	148, 1116,
	149, 1116,
	150, 1116,
	151, 1116,
	152, 1116,
	153, 1116,
	154, 1116,
	162, 1116,
	163, 1116,
	164, 1116,
	165, 1116,
	169, 1116,
	171, 1116,
	175, 1116,
	176, 1116,
	177, 1116,
	178, 1116,
	179, 1116,
	180, 1116,
	182, 1116,
	183, 1116,
	185, 1116,
	186, 1116,
	188, 1116,
	189, 1116,
	190, 1116,
	191, 1116,
	192, 1116,
	193, 1116,
	194, 1116,
	195, 1116,
	196, 1116,
	198, 1116,
	199, 1116,
	201, 1116,
	202, 1116,
	203, 1116,
	204, 1116,
	209, 1116,
	210, 1116,
	211, 1116,
	214, 1116,
	215, 1116,
	216, 1116,
	218, 1116,
	220, 1116,
	221, 1116,
	223, 1116,
	225, 1116,
	226, 1116,
	227, 1116,
	229, 1116,
	233, 1116,
	234, 1116,
	235, 1116,
	236, 1116,
	237, 1116,
	238, 1116,
	240, 1116,
	241, 1116,
	242, 1116,
	244, 1116,
	245, 1116,
	247, 1116,
	248, 1116,
	251, 1116,
	252, 1116,
	253, 1116,
	256, 1116,
	257, 1116,
	258, 1116,
	259, 1116,
	261, 1116,
	262, 1116,
	263, 1116,
	264, 1116,
	265, 1116,
	266, 1116,
	267, 1116,
	268, 1116,
	269, 1116,
	270, 1116,
	271, 1116,
	273, 1116,
	275, 1116,
	276, 1116,
	277, 1116,
	278, 1116,
	279, 1116,
	280, 1116,
	281, 1116,
	283, 1116,
	287, 1116,
	289, 1116,
	290, 1116,
	291, 1116,
	292, 1116,
	293, 1116,
	296, 1116,
	298, 1116,
	300, 1116,
	301, 1116,
	302, 1116,
	305, 1116,
	306, 1116,
	307, 1116,
	309, 1116,
	311, 1116,
	312, 1116,
	313, 1116,
	314, 1116,
	315, 1116,
	316, 1116,
	317, 1116,
	318, 1116,
	319, 1116,
	320, 1116,
	321, 1116,
	322, 1116,
	324, 1116,
	325, 1116,
	326, 1116,
	327, 1116,
	328, 1116,
	329, 1116,
	330, 1116,
	331, 1116,
	332, 1116,
	334, 1116,
	336, 1116,
	337, 1116,
	338, 1116,
	339, 1116,
	340, 1116,
	341, 1116,
	342, 1116,
	343, 1116,
	344, 1116,
	345, 1116,
	346, 1116,
	348, 1116,
	354, 1116,
	356, 1116,
	357, 1116,
	358, 1116,
	359, 1116,
	360, 1116,
	361, 1116,
	362, 1116,
	363, 1116,
	365, 1116,
	366, 1116,
	367, 1116,
	369, 1116,
	370, 1116,
	371, 1116,
	372, 1116,
	373, 1116,
	374, 1116,
	376, 1116,
	377, 1116,
	378, 1116,
	379, 1116,
	380, 1116,
	381, 1116,
	382, 1116,
	383, 1116,
	384, 1116,
	385, 1116,
	386, 1116,
	388, 1116,
	389, 1116,
	390, 1116,
	391, 1116,
	392, 1116,
	393, 1116,
	395, 1116,
	396, 1116,
	397, 1116,
	398, 1116,
	399, 1116,
	401, 1116,
	402, 1116,
	403, 1116,
	404, 1116,
	405, 1116,
	406, 1116,
	407, 1116,
	409, 1116,
	411, 1116,
	412, 1116,
	413, 1116,
	414, 1116,
	415, 1116,
	416, 1116,
	417, 1116,
	418, 1116,
	419, 1116,
	420, 1116,
	421, 1116,
	422, 1116,
	423, 1116,
	425, 1116,
	426, 1116,
	428, 1116,
	430, 1116,
	431, 1116,
	432, 1116,
	433, 1116,
	434, 1116,
	435, 1116,
	436, 1116,
	437, 1116,
	439, 1116,
	440, 1116,
	441, 1116,
	442, 1116,
	443, 1116,
	445, 1116,
	447, 1116,
	448, 1116,
	449, 1116,
	450, 1116,
	451, 1116,
	453, 1116,
	454, 1116,
	455, 1116,
	457, 1116,
	458, 1116,
	461, 1116,
	462, 1116,
	463, 1116,
	464, 1116,
	465, 1116,
	466, 1116,
	467, 1116,
	469, 1116,
	472, 1116,
	473, 1116,
	474, 1116,
	475, 1116,
	476, 1116,
	477, 1116,
	479, 1116,
	480, 1116,
	481, 1116,
	486, 1116,
	487, 1116,
	488, 1116,
	489, 1116,
	490, 1116,
	491, 1116,
	-2, 0,
	-1, 1446,
	1, 475,
	514, 475,
	516, 475,
	518, 475,
	-2, 1283,
	-1, 1449,
	4, 2327,
	11, 2327,
	12, 2327,
	14, 2327,
	15, 2327,
	16, 2327,
	17, 2327,
	18, 2327,
	19, 2327,
	21, 2327,
	22, 2327,
	23, 2327,
	24, 2327,
	25, 2327,
	26, 2327,
	28, 2327,
	29, 2327,
	32, 2327,
	33, 2327,
	35, 2327,
	37, 2327,
	40, 2327,
	41, 2327,
	42, 2327,
	43, 2327,
	44, 2327,
	45, 2327,
	46, 2327,
	47, 2327,
	48, 2327,
	49, 2327,
	51, 2327,
	52, 2327,
	53, 2327,
	54, 2327,
	56, 2327,
	57, 2327,
	58, 2327,
	59, 2327,
	60, 2327,
	61, 2327,
	65, 2327,
	66, 2327,
	67, 2327,
	68, 2327,
	70, 2327,
	71, 2327,
	72, 2327,
	73, 2327,
	76, 2327,
	77, 2327,
	78, 2327,
	79, 2327,
	80, 2327,
	81, 2327,
	82, 2327,
	83, 2327,
	85, 2327,
	86, 2327,
	87, 2327,
	88, 2327,
	90, 2327,
	91, 2327,
	92, 2327,
	93, 2327,
	94, 2327,
	95, 2327,
	97, 2327,
	98, 2327,
	99, 2327,
	100, 2327,
	108, 2327,
	109, 2327,
	110, 2327,
	111, 2327,
	113, 2327,
	114, 2327,
	115, 2327,
	117, 2327,
	118, 2327,
	119, 2327,
	121, 2327,
	122, 2327,
	124, 2327,
	125, 2327,
	126, 2327,
	129, 2327,
	130, 2327,
	131, 2327,
	133, 2327,
	134, 2327,
	136, 2327,
	137, 2327,
	138, 2327,
	140, 2327,
	141, 2327,
	142, 2327,
	143, 2327,
	144, 2327,
	145, 2327,
	146, 2327,
	147, 2327,
	148, 2327,
	149, 2327,
	150, 2327,
	151, 2327,
	152, 2327,
	153, 2327,
	154, 2327,
	158, 2327,
	159, 2327,
	160, 2327,
	161, 2327,
	162, 2327,
	163, 2327,
	164, 2327,
	165, 2327,
	168, 2327,
	169, 2327,
	171, 2327,
	174, 2327,
	175, 2327,
	176, 2327,
	177, 2327,
	178, 2327,
	179, 2327,
	180, 2327,
	182, 2327,
	183, 2327,
	185, 2327,
	186, 2327,
	188, 2327,
	189, 2327,
	190, 2327,
	191, 2327,
	192, 2327,
	193, 2327,
	194, 2327,
	195, 2327,
	196, 2327,
	197, 2327,
	198, 2327,
	199, 2327,
	200, 2327,
	201, 2327,
	202, 2327,
	203, 2327,
	204, 2327,
	206, 2327,
	207, 2327,
	209, 2327,
	210, 2327,
	211, 2327,
	213, 2327,
	214, 2327,
	215, 2327,
	216, 2327,
	218, 2327,
	220, 2327,
	221, 2327,
	222, 2327,
	223, 2327,
	224, 2327,
	225, 2327,
	226, 2327,
	227, 2327,
	228, 2327,
	229, 2327,
	231, 2327,
	232, 2327,
	233, 2327,
	234, 2327,
	235, 2327,
	236, 2327,
	237, 2327,
	238, 2327,
	240, 2327,
	241, 2327,
	242, 2327,
	244, 2327,
	245, 2327,
	246, 2327,
	247, 2327,
	248, 2327,
	249, 2327,
	251, 2327,
	252, 2327,
	253, 2327,
	256, 2327,
	257, 2327,
	258, 2327,
	259, 2327,
	260, 2327,
	261, 2327,
	262, 2327,
	263, 2327,
	264, 2327,
	265, 2327,
	266, 2327,
	267, 2327,
	268, 2327,
	269, 2327,
	270, 2327,
	271, 2327,
	273, 2327,
	274, 2327,
	275, 2327,
	276, 2327,
	277, 2327,
	278, 2327,
	279, 2327,
	280, 2327,
	281, 2327,
	283, 2327,
	286, 2327,
	287, 2327,
	289, 2327,
	290, 2327,
	291, 2327,
	292, 2327,
	293, 2327,
	296, 2327,
	300, 2327,
	301, 2327,
	302, 2327,
	303, 2327,
	305, 2327,
	306, 2327,
	307, 2327,
	309, 2327,
	311, 2327,
	312, 2327,
	313, 2327,
	314, 2327,
	315, 2327,
	316, 2327,
	317, 2327,
	318, 2327,
	319, 2327,
	320, 2327,
	321, 2327,
	322, 2327,
	324, 2327,
	325, 2327,
	326, 2327,
	327, 2327,
	328, 2327,
	329, 2327,
	330, 2327,
	331, 2327,
	332, 2327,
	334, 2327,
	336, 2327,
	337, 2327,
	338, 2327,
	339, 2327,
	340, 2327,
	341, 2327,
	342, 2327,
	343, 2327,
	344, 2327,
	345, 2327,
	346, 2327,
	348, 2327,
	354, 2327,
	355, 2327,
	356, 2327,
	357, 2327,
	358, 2327,
	359, 2327,
	360, 2327,
	361, 2327,
	362, 2327,
	363, 2327,
	365, 2327,
	366, 2327,
	367, 2327,
	368, 2327,
	369, 2327,
	370, 2327,
	371, 2327,
	372, 2327,
	373, 2327,
	374, 2327,
	375, 2327,
	376, 2327,
	377, 2327,
	378, 2327,
	379, 2327,
	380, 2327,
	381, 2327,
	382, 2327,
	383, 2327,
	384, 2327,
	385, 2327,
	386, 2327,
	388, 2327,
	389, 2327,
	390, 2327,
	391, 2327,
	392, 2327,
	393, 2327,
	395, 2327,
	396, 2327,
	397, 2327,
	398, 2327,
	399, 2327,
	400, 2327,
	401, 2327,
	402, 2327,
	403, 2327,
	404, 2327,
	405, 2327,
	406, 2327,
	407, 2327,
	409, 2327,
	411, 2327,
	412, 2327,
	413, 2327,
	414, 2327,
	415, 2327,
	416, 2327,
	417, 2327,
	418, 2327,
	419, 2327,
	420, 2327,
	421, 2327,
	422, 2327,
	423, 2327,
	425, 2327,
	426, 2327,
	428, 2327,
	430, 2327,
	431, 2327,
	432, 2327,
	433, 2327,
	434, 2327,
	435, 2327,
	436, 2327,
	437, 2327,
	439, 2327,
	440, 2327,
	441, 2327,
	442, 2327,
	443, 2327,
	445, 2327,
	447, 2327,
	448, 2327,
	449, 2327,
	450, 2327,
	451, 2327,
	453, 2327,
	454, 2327,
	455, 2327,
	457, 2327,
	458, 2327,
	461, 2327,
	462, 2327,
	463, 2327,
	464, 2327,
	465, 2327,
	466, 2327,
	467, 2327,
	469, 2327,
	472, 2327,
	473, 2327,
	474, 2327,
	475, 2327,
	476, 2327,
	477, 2327,
	479, 2327,
	480, 2327,
	481, 2327,
	486, 2327,
	487, 2327,
	488, 2327,
	489, 2327,
	490, 2327,
	491, 2327,
	492, 2327,
	493, 2327,
	496, 2327,
	497, 2327,
	498, 2327,
	499, 2327,
	500, 2327,
	501, 2327,
	503, 2327,
	504, 2327,
	505, 2327,
	506, 2327,
	507, 2327,
	508, 2327,
	509, 2327,
	510, 2327,
	511, 2327,
	513, 2327,
	516, 2327,
	517, 2327,
	519, 2327,
	520, 2327,
	-2, 0,
	-1, 1454,
	173, 2220,
	444, 2220,
	498, 2220,
	517, 2220,
	-2, 0,
	-1, 1503,
	338, 767,
	393, 767,
	-2, 0,
	-1, 1528,
	1, 762,
	514, 762,
	516, 762,
	518, 762,
	-2, 0,
	-1, 1529,
	1, 798,
	514, 798,
	516, 798,
	518, 798,
	-2, 0,
	-1, 1530,
	1, 769,
	514, 769,
	516, 769,
	518, 769,
	-2, 0,
	-1, 1532,
	1, 773,
	514, 773,
	516, 773,
	518, 773,
	-2, 0,
	-1, 1538,
	1, 780,
	514, 780,
	516, 780,
	518, 780,
	-2, 0,
	-1, 1566,
	1, 2274,
	514, 2274,
	516, 2274,
	517, 2274,
	518, 2274,
	-2, 827,
	-1, 1567,
	1, 2217,
	514, 2217,
	516, 2217,
	517, 2217,
	518, 2217,
	-2, 828,
	-1, 1582,
	1, 1193,
	518, 1193,
	-2, 1198,
	-1, 1585,
	157, 1324,
	170, 1324,
	250, 1324,
	294, 1324,
	-2, 1264,
	-1, 1679,
	139, 1285,
	157, 1285,
	170, 1285,
	217, 1285,
	250, 1285,
	294, 1285,
	304, 1285,
	459, 1285,
	-2, 1690,
	-1, 1739,
	516, 1840,
	-2, 0,
	-1, 1774,
	139, 1285,
	157, 1285,
	170, 1285,
	217, 1285,
	250, 1285,
	294, 1285,
	304, 1285,
	459, 1285,
	-2, 1405,
	-1, 1822,
	515, 1517,
	-2, 1505,
	-1, 1858,
	1, 602,
	518, 602,
	-2, 1198,
	-1, 2094,
	1, 764,
	514, 764,
	516, 764,
	518, 764,
	-2, 0,
	-1, 2095,
	1, 800,
	514, 800,
	516, 800,
	518, 800,
	-2, 0,
	-1, 2125,
	1, 782,
	514, 782,
	516, 782,
	518, 782,
	-2, 0,
	-1, 2171,
	373, 1351,
	374, 1351,
	-2, 1550,
	-1, 2202,
	14, 0,
	15, 0,
	16, 0,
	496, 0,
	497, 0,
	498, 0,
	-2, 1570,
	-1, 2203,
	14, 0,
	15, 0,
	16, 0,
	496, 0,
	497, 0,
	498, 0,
	-2, 1571,
	-1, 2204,
	91, 0,
	231, 0,
	232, 0,
	500, 0,
	501, 0,
	-2, 1572,
	-1, 2205,
	91, 0,
	231, 0,
	232, 0,
	500, 0,
	501, 0,
	-2, 1573,
	-1, 2206,
	91, 0,
	231, 0,
	232, 0,
	500, 0,
	501, 0,
	-2, 1574,
	-1, 2207,
	91, 0,
	231, 0,
	232, 0,
	500, 0,
	501, 0,
	-2, 1575,
	-1, 2208,
	91, 0,
	231, 0,
	232, 0,
	500, 0,
	501, 0,
	-2, 1576,
	-1, 2209,
	14, 0,
	15, 0,
	16, 0,
	496, 0,
	497, 0,
	498, 0,
	-2, 1577,
	-1, 2221,
	14, 0,
	15, 0,
	16, 0,
	496, 0,
	497, 0,
	498, 0,
	-2, 1589,
	-1, 2222,
	14, 0,
	15, 0,
	16, 0,
	496, 0,
	497, 0,
	498, 0,
	-2, 1590,
	-1, 2223,
	14, 0,
	15, 0,
	16, 0,
	496, 0,
	497, 0,
	498, 0,
	-2, 1591,
	-1, 2226,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1596,
	-1, 2232,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1600,
	-1, 2234,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1608,
	-1, 2235,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1609,
	-1, 2236,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1610,
	-1, 2237,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1611,
	-1, 2349,
	5, 1983,
	173, 1851,
	515, 1980,
	-2, 1971,
	-1, 2350,
	173, 1852,
	-2, 2278,
	-1, 2351,
	173, 1853,
	-2, 2134,
	-1, 2352,
	173, 1854,
	-2, 2044,
	-1, 2353,
	173, 1855,
	-2, 2088,
	-1, 2354,
	173, 1856,
	-2, 2129,
	-1, 2355,
	173, 1857,
	-2, 2215,
	-1, 2356,
	173, 1858,
	-2, 1673,
	-1, 2425,
	1, 1406,
	2, 1406,
	98, 1406,
	139, 1406,
	157, 1406,
	170, 1406,
	174, 1406,
	184, 1406,
	187, 1406,
	213, 1406,
	217, 1406,
	228, 1406,
	246, 1406,
	250, 1406,
	274, 1406,
	294, 1406,
	298, 1406,
	304, 1406,
	364, 1406,
	368, 1406,
	459, 1406,
	470, 1406,
	483, 1406,
	484, 1406,
	485, 1406,
	494, 1406,
	514, 1406,
	516, 1406,
	518, 1406,
	520, 1406,
	-2, 1405,
	-1, 2438,
	515, 1952,
	-2, 1966,
	-1, 2440,
	1, 273,
	-2, 1312,
	-1, 2464,
	515, 1516,
	-2, 1506,
	-1, 2587,
	1, 1092,
	514, 1092,
	516, 1092,
	518, 1092,
	-2, 1312,
	-1, 2758,
	299, 1354,
	-2, 2317,
	-1, 2759,
	299, 1355,
	-2, 2201,
	-1, 2763,
	373, 1917,
	374, 1917,
	-2, 1671,
	-1, 2764,
	373, 1921,
	374, 1921,
	-2, 1672,
	-1, 2765,
	373, 1918,
	374, 1918,
	-2, 1671,
	-1, 2766,
	373, 1922,
	374, 1922,
	-2, 1672,
	-1, 2779,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1598,
	-1, 2780,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1602,
	-1, 2786,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1604,
	-1, 2986,
	225, 1198,
	334, 1198,
	342, 1198,
	494, 1198,
	-2, 599,
	-1, 3118,
	1, 1092,
	514, 1092,
	516, 1092,
	518, 1092,
	-2, 1312,
	-1, 3226,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1606,
	-1, 3233,
	222, 0,
	224, 0,
	286, 0,
	-2, 1625,
	-1, 3300,
	14, 0,
	15, 0,
	16, 0,
	496, 0,
	497, 0,
	498, 0,
	-2, 1654,
	-1, 3301,
	14, 0,
	15, 0,
	16, 0,
	496, 0,
	497, 0,
	498, 0,
	-2, 1655,
	-1, 3302,
	14, 0,
	15, 0,
	16, 0,
	496, 0,
	497, 0,
	498, 0,
	-2, 1656,
	-1, 3306,
	14, 0,
	15, 0,
	16, 0,
	496, 0,
	497, 0,
	498, 0,
	-2, 1660,
	-1, 3307,
	14, 0,
	15, 0,
	16, 0,
	496, 0,
	497, 0,
	498, 0,
	-2, 1661,
	-1, 3308,
	14, 0,
	15, 0,
	16, 0,
	496, 0,
	497, 0,
	498, 0,
	-2, 1662,
	-1, 3354,
	515, 1953,
	-2, 1967,
	-1, 3485,
	517, 2433,
	-2, 1242,
	-1, 3543,
	222, 0,
	224, 0,
	286, 0,
	-2, 1626,
	-1, 3546,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1629,
	-1, 3547,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1631,
	-1, 3755,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1630,
	-1, 3756,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	197, 0,
	200, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 1632,
	-1, 3767,
	222, 0,
	-2, 1663,
	-1, 3916,
	222, 0,
	-2, 1664,
	-1, 4066,
	48, 0,
	197, 0,
	249, 0,
	400, 0,
	492, 0,
	499, 0,
	-2, 2281,
}

const sqlPrivate = 57344

const sqlLast = 105730

var sqlAct = [...]int{

	243, 3959, 3802, 3799, 2677, 3680, 3938, 2913, 4076, 4065,
	4174, 4040, 4021, 4034, 3103, 4024, 4077, 3382, 4006, 4124,
	4078, 2647, 3265, 3844, 3787, 3851, 3104, 3920, 1117, 2914,
	3712, 2063, 3707, 940, 3526, 1311, 4064, 3663, 2181, 1437,
	3004, 3135, 3477, 3744, 2072, 3860, 3420, 3694, 3883, 2047,
	3612, 2249, 1809, 1594, 3717, 3454, 2499, 3099, 3128, 2189,
	1469, 3089, 3439, 3437, 37, 3218, 1911, 3130, 3383, 2686,
	672, 637, 1780, 3772, 1432, 2562, 1176, 2182, 3181, 2618,
	2772, 1294, 2381, 2699, 931, 3183, 2636, 2609, 2008, 2688,
	3356, 1106, 2956, 2936, 672, 1269, 2919, 2928, 2896, 3525,
	2696, 2631, 771, 1511, 2679, 2685, 2917, 3582, 2633, 1921,
	2648, 1960, 1749, 2418, 2895, 2538, 3921, 3325, 1961, 2291,
	2501, 2186, 2262, 1725, 1687, 2045, 939, 163, 667, 1277,
	4, 1468, 1955, 1097, 2417, 2576, 2756, 2070, 1946, 1939,
	237, 2695, 2420, 988, 1810, 2619, 3023, 101, 2537, 1894,
	1160, 236, 3845, 1897, 2399, 2246, 2282, 1412, 1582, 2378,
	995, 2963, 1884, 2170, 2151, 2153, 1447, 3101, 1433, 2641,
	2450, 1423, 1750, 1769, 1364, 673, 993, 1997, 674, 1149,
	1274, 2689, 603, 1720, 2285, 1100, 2449, 2407, 1079, 2490,
	589, 1759, 2345, 2389, 611, 1672, 2263, 1595, 172, 2152,
	2293, 631, 1436, 2335, 173, 1296, 619, 1538, 1596, 2154,
	678, 1996, 1114, 163, 1388, 669, 1445, 765, 2020, 744,
	1910, 681, 717, 1306, 2175, 969, 606, 42, 41, 39,
	1038, 30, 28, 26, 678, 614, 1077, 2807, 1102, 1601,
	1317, 1581, 849, 830, 3339, 681, 3340, 2036, 1609, 1610,
	2803, 2915, 2036, 2036, 4237, 2036, 2036, 4231, 2398, 935,
	4216, 3162, 4215, 68, 2398, 1157, 2398, 4191, 4189, 1766,
	1640, 3628, 3628, 3145, 4185, 935, 2984, 1612, 1971, 69,
	1096, 4106, 4100, 4098, 2391, 4107, 2398, 2398, 3144, 4095,
	4092, 2071, 4087, 4096, 4093, 73, 1971, 1133, 4062, 4061,
	4060, 2034, 1971, 1971, 2056, 3162, 2644, 4055, 1094, 786,
	1611, 2056, 1609, 1610, 1128, 1642, 1643, 1644, 1652, 1653,
	1654, 4054, 936, 4049, 4047, 2056, 4019, 3628, 3628, 2771,
	3628, 79, 4000, 1645, 1640, 3993, 2455, 2398, 3992, 2398,
	3987, 1612, 2398, 1157, 3628, 4001, 1080, 1080, 3986, 1658,
	3980, 3952, 3628, 3918, 1971, 3672, 3900, 2455, 2816, 3897,
	3514, 3894, 916, 1971, 2817, 3628, 85, 3853, 915, 3329,
	3913, 3854, 2868, 2869, 1611, 3819, 3901, 3818, 3810, 1971,
	100, 1971, 1971, 3809, 1631, 86, 97, 3628, 2056, 235,
	1129, 1083, 1628, 1084, 1609, 1610, 3329, 1642, 1643, 1644,
	1652, 1653, 1654, 3778, 2390, 1617, 3757, 1971, 986, 3736,
	2455, 930, 3706, 2056, 3725, 925, 1640, 3658, 3162, 3672,
	3647, 2398, 3627, 1612, 2398, 3545, 3628, 3648, 3493, 2455,
	2451, 1658, 3178, 3487, 87, 3452, 3349, 3178, 3347, 3453,
	3350, 1081, 3348, 1639, 1641, 3332, 3249, 3245, 3177, 2398,
	1971, 2398, 3178, 3169, 2912, 1971, 1611, 3170, 2398, 1634,
	1635, 1636, 1637, 2907, 2906, 1971, 1631, 2398, 2398, 1617,
	3514, 3170, 2859, 2857, 1628, 2398, 2860, 2858, 2849, 2847,
	2818, 2702, 2850, 2398, 2398, 2056, 2675, 2553, 2674, 2474,
	2059, 2806, 2059, 2398, 1915, 2454, 2447, 1632, 1649, 2455,
	2398, 1659, 2441, 2489, 1864, 2397, 1971, 1639, 1641, 2398,
	2868, 2869, 2058, 2886, 2887, 2888, 2059, 2035, 209, 2615,
	2051, 1970, 2570, 1655, 2487, 1656, 1745, 1305, 3412, 2874,
	3221, 3541, 1626, 1627, 3199, 2453, 1767, 1949, 2434, 1531,
	2288, 1634, 1635, 1636, 1637, 3146, 1513, 2433, 2037, 2432,
	1647, 1617, 2431, 2037, 2037, 90, 2037, 2037, 2430, 1085,
	211, 1632, 1082, 924, 3147, 2318, 923, 922, 921, 209,
	2868, 2869, 920, 2886, 2887, 2888, 919, 209, 2736, 3598,
	1649, 918, 2883, 1659, 914, 913, 912, 1657, 911, 1639,
	1641, 3540, 910, 909, 908, 171, 93, 907, 96, 906,
	905, 904, 903, 902, 1646, 901, 210, 900, 1477, 899,
	898, 211, 1633, 880, 1626, 1627, 203, 828, 2289, 211,
	3144, 2884, 209, 1129, 204, 827, 826, 825, 824, 3557,
	770, 2390, 1647, 823, 136, 822, 993, 821, 820, 819,
	993, 818, 2883, 1632, 1129, 817, 174, 816, 815, 3904,
	814, 813, 812, 811, 810, 1179, 1638, 210, 809, 1179,
	808, 807, 806, 1299, 211, 210, 805, 2874, 804, 1159,
	803, 802, 801, 1164, 800, 203, 1633, 1153, 799, 789,
	788, 784, 783, 204, 2868, 2869, 777, 993, 138, 993,
	776, 993, 735, 2290, 2287, 734, 1299, 174, 694, 693,
	3365, 1650, 175, 692, 3343, 2643, 2663, 1319, 1310, 1280,
	210, 2035, 2054, 3179, 2051, 2146, 684, 683, 682, 1299,
	203, 2889, 651, 643, 642, 641, 625, 2874, 204, 231,
	230, 1331, 229, 228, 227, 1285, 2885, 226, 1638, 225,
	1622, 1620, 1621, 1613, 1614, 1615, 1616, 1618, 1619, 1309,
	174, 224, 1316, 2959, 1323, 2829, 1329, 223, 1633, 2884,
	222, 221, 1299, 993, 220, 1325, 219, 218, 1299, 217,
	1463, 216, 1299, 215, 214, 213, 1319, 212, 2812, 2596,
	993, 2889, 993, 1650, 2627, 2459, 1299, 1172, 2439, 1266,
	1271, 1147, 993, 1648, 993, 1370, 1372, 1623, 1624, 1630,
	1651, 1629, 1625, 1770, 1622, 1620, 1621, 1613, 1614, 1615,
	1616, 1618, 1619, 2292, 1728, 2424, 678, 3567, 2910, 2884,
	1727, 3566, 1892, 1793, 2868, 2869, 1608, 681, 1443, 2868,
	2869, 2304, 1142, 1728, 1698, 2066, 1299, 1313, 2302, 1727,
	2911, 2874, 1731, 1166, 4083, 1461, 1116, 1466, 4063, 3966,
	3910, 1308, 3902, 993, 1307, 3797, 993, 1475, 3771, 1480,
	3726, 1726, 3922, 3705, 1288, 2877, 2878, 2870, 2871, 2872,
	2873, 2875, 2876, 3721, 2885, 1648, 1689, 2868, 2869, 1623,
	1624, 1630, 1651, 1629, 1625, 3605, 1622, 1620, 1621, 1613,
	1614, 1615, 1616, 1618, 1619, 163, 163, 3580, 1482, 1450,
	1452, 3579, 2868, 2869, 1375, 2886, 2887, 2888, 3573, 3572,
	3571, 3564, 2065, 1417, 1420, 936, 1532, 2286, 3563, 1360,
	3561, 3556, 1330, 3236, 209, 3553, 3410, 2868, 2869, 1153,
	1429, 3552, 1153, 984, 2885, 3451, 3369, 3368, 1319, 1426,
	3457, 3367, 2468, 3173, 3353, 3320, 993, 993, 993, 993,
	993, 993, 993, 3319, 2558, 3318, 1324, 3241, 3237, 2954,
	2903, 1547, 2894, 2867, 2864, 2863, 211, 2861, 2856, 2855,
	1310, 2854, 2851, 1448, 2883, 2848, 2828, 993, 2811, 2804,
	2676, 2874, 1696, 993, 2425, 2275, 2874, 1608, 2629, 1093,
	2011, 1609, 1610, 209, 1689, 2880, 2881, 2882, 1607, 2883,
	1586, 4230, 2879, 2877, 2878, 2870, 2871, 2872, 2873, 2875,
	2876, 4183, 210, 1640, 1391, 1580, 1690, 1978, 1688, 1533,
	1612, 1462, 203, 1318, 4182, 3458, 4116, 4114, 2523, 4105,
	204, 1976, 1118, 1476, 2874, 211, 3267, 3958, 3948, 3945,
	3944, 3943, 3937, 3930, 3898, 3882, 1272, 1678, 3881, 1284,
	1287, 2252, 174, 1611, 3869, 2880, 2881, 2882, 3866, 2874,
	3815, 3793, 2879, 2877, 2878, 2870, 2871, 2872, 2873, 2875,
	2876, 2908, 3769, 2884, 3700, 1487, 3752, 3751, 3601, 2317,
	1504, 210, 1481, 1470, 2874, 1609, 1610, 993, 993, 993,
	3720, 203, 1534, 993, 1609, 1610, 3733, 209, 3732, 204,
	1114, 3697, 1114, 3673, 3597, 3578, 3515, 1640, 3509, 1747,
	1287, 1287, 86, 2889, 1612, 3506, 209, 1179, 3400, 3399,
	3386, 174, 3385, 1612, 936, 993, 2884, 3335, 672, 1583,
	3323, 1591, 1827, 672, 3232, 1676, 2258, 3905, 916, 211,
	3180, 1590, 993, 3163, 915, 1112, 1299, 1611, 1617, 1287,
	209, 2884, 3121, 1585, 1796, 209, 1611, 1631, 211, 3458,
	3062, 993, 3036, 2628, 1806, 3007, 1730, 1179, 1784, 1852,
	1587, 209, 1801, 1604, 1605, 1756, 2884, 3006, 2978, 2870,
	2871, 2872, 2873, 2875, 2876, 210, 1639, 1641, 2885, 1153,
	2976, 1319, 211, 2833, 1890, 203, 2832, 211, 1777, 2827,
	1753, 1754, 2795, 204, 210, 2608, 1734, 1803, 1733, 1732,
	1729, 1855, 1721, 211, 203, 3549, 2951, 1722, 1723, 1719,
	2466, 1080, 204, 2465, 1856, 174, 2436, 1861, 2429, 2396,
	163, 2300, 1634, 1635, 1636, 1637, 1792, 1748, 210, 1743,
	1632, 2885, 1617, 210, 174, 1742, 1741, 1740, 203, 936,
	3007, 1617, 1739, 203, 2067, 1738, 204, 1737, 1736, 210,
	1735, 204, 1716, 1715, 1714, 1799, 2885, 1713, 678, 203,
	1712, 1711, 1710, 678, 1881, 1709, 1778, 204, 174, 681,
	1639, 1641, 1708, 174, 681, 1707, 1706, 1775, 1705, 1704,
	1703, 2885, 1821, 1702, 1691, 1677, 1675, 1670, 1141, 174,
	1797, 1131, 1124, 1858, 1299, 1299, 3364, 3346, 1854, 3338,
	2815, 2457, 2427, 3782, 1179, 1746, 2879, 2877, 2878, 2870,
	2871, 2872, 2873, 2875, 2876, 1903, 2872, 2873, 2875, 2876,
	3603, 1787, 1786, 1785, 1632, 1783, 1782, 1781, 1772, 3363,
	3903, 1936, 1788, 1804, 1938, 2303, 1690, 1943, 1850, 209,
	1609, 1610, 2301, 2868, 2869, 1633, 1807, 2974, 1673, 3650,
	4180, 136, 1824, 1163, 1966, 1968, 4173, 1768, 3796, 3946,
	3131, 2878, 2870, 2871, 2872, 2873, 2875, 2876, 1467, 1612,
	1883, 1444, 3856, 1886, 1876, 3039, 3855, 2880, 2881, 2882,
	1711, 211, 3724, 1161, 2879, 2877, 2878, 2870, 2871, 2872,
	2873, 2875, 2876, 1883, 1711, 1883, 3675, 3674, 209, 1609,
	1610, 3649, 1611, 3600, 3861, 1920, 3518, 1162, 3517, 2879,
	2877, 2878, 2870, 2871, 2872, 2873, 2875, 2876, 3516, 1638,
	2542, 3341, 3165, 1947, 3164, 1154, 1964, 210, 1612, 3461,
	1157, 1770, 2853, 2852, 3398, 1728, 678, 203, 1157, 1633,
	211, 1727, 1299, 896, 1299, 204, 1299, 681, 2777, 2001,
	1578, 2525, 1158, 1157, 3106, 2086, 3105, 209, 2012, 1700,
	2364, 1611, 1299, 1299, 1512, 4059, 2064, 174, 2006, 3852,
	1548, 1308, 1870, 1299, 1307, 1621, 1613, 1614, 1615, 1616,
	1618, 1619, 1697, 897, 2017, 1299, 210, 1299, 1299, 1299,
	4103, 1942, 1092, 4088, 4075, 1503, 203, 1617, 3090, 211,
	938, 2073, 1284, 2700, 204, 1513, 1962, 3417, 672, 3403,
	3196, 3773, 2915, 3269, 2283, 2464, 944, 2085, 4084, 1969,
	1744, 1724, 3097, 2025, 2005, 1915, 174, 1416, 1369, 1302,
	1815, 1136, 1859, 4097, 1155, 2014, 2821, 4094, 3140, 3377,
	4141, 2567, 1156, 2564, 3939, 210, 1491, 3708, 4018, 3927,
	3010, 2069, 3393, 2683, 2640, 203, 1989, 1148, 1988, 3084,
	4140, 3835, 2090, 204, 2039, 991, 3213, 1622, 1620, 1621,
	1613, 1614, 1615, 1616, 1618, 1619, 3638, 1337, 4085, 1613,
	1614, 1615, 1616, 1618, 1619, 174, 3979, 2019, 993, 936,
	993, 936, 2988, 1347, 2074, 2023, 2475, 993, 894, 4225,
	1827, 1827, 1179, 3430, 993, 993, 993, 993, 993, 993,
	993, 993, 993, 993, 993, 993, 993, 993, 993, 993,
	993, 993, 993, 993, 993, 993, 993, 993, 993, 993,
	993, 993, 993, 993, 993, 993, 993, 993, 993, 2163,
	993, 1546, 993, 993, 993, 993, 1142, 1448, 678, 1448,
	2150, 2027, 2028, 1391, 1163, 2022, 2078, 2022, 2060, 681,
	2061, 892, 1871, 3429, 993, 1303, 3828, 993, 993, 2161,
	2493, 1348, 2868, 2869, 890, 993, 3821, 876, 2131, 993,
	888, 993, 993, 885, 2491, 2077, 2975, 2129, 3671, 1179,
	1545, 3426, 3425, 1163, 1157, 993, 993, 993, 993, 2990,
	993, 993, 993, 993, 993, 993, 993, 993, 1162, 2041,
	730, 3419, 2043, 2159, 1489, 3416, 3414, 3374, 2048, 3038,
	3373, 2050, 3087, 2108, 2970, 2053, 993, 993, 993, 993,
	993, 993, 993, 993, 993, 2826, 1291, 2825, 2125, 993,
	2064, 2161, 2288, 2004, 2187, 2188, 2824, 1162, 2823, 2264,
	2265, 1114, 2174, 209, 2781, 1154, 209, 2574, 1179, 2493,
	1821, 1821, 2573, 2264, 2280, 3978, 2569, 1114, 2560, 1334,
	2552, 2551, 2550, 2491, 2529, 2516, 2149, 1109, 2458, 1544,
	1154, 2147, 2162, 993, 1179, 2159, 2148, 2448, 2233, 2326,
	916, 2155, 1366, 916, 916, 211, 2178, 1584, 211, 2179,
	2180, 2331, 731, 1284, 2330, 2279, 2637, 2191, 2348, 2348,
	2362, 3197, 2264, 936, 3750, 2382, 2384, 1912, 649, 2581,
	2289, 2388, 936, 1484, 2577, 1987, 936, 934, 2144, 2874,
	1824, 1824, 1402, 2412, 2160, 1440, 882, 1615, 1616, 1618,
	1619, 210, 2527, 2876, 210, 1456, 1381, 2404, 1380, 1908,
	2157, 203, 2082, 1299, 203, 3651, 1379, 2260, 1378, 204,
	1355, 4168, 204, 1777, 1155, 2437, 2482, 2440, 2539, 2540,
	2546, 2145, 1156, 1913, 1914, 1875, 1874, 2277, 1080, 1883,
	1885, 174, 4140, 1179, 174, 209, 2283, 2140, 1557, 1155,
	1304, 2539, 2540, 2539, 2540, 2290, 2287, 1156, 1153, 1619,
	2158, 1909, 2248, 2426, 2403, 933, 2160, 1343, 2515, 1495,
	2135, 2754, 2328, 1827, 936, 1505, 648, 2329, 1915, 2357,
	2332, 2884, 2333, 2334, 2386, 163, 2373, 211, 2344, 2452,
	2411, 1485, 2416, 2472, 1861, 2422, 2423, 2394, 2395, 1577,
	1179, 2409, 2410, 2405, 2566, 4169, 1788, 1513, 2503, 2248,
	4081, 1898, 1775, 1513, 1299, 1730, 1899, 2143, 2495, 3436,
	1609, 1610, 1589, 3053, 1121, 2522, 993, 993, 2256, 993,
	2987, 1140, 2158, 210, 2565, 2254, 2563, 990, 2769, 3804,
	4052, 3634, 1640, 203, 2579, 1501, 2514, 1878, 2561, 1612,
	1543, 204, 935, 2098, 1922, 2024, 2473, 2557, 3435, 1119,
	2467, 3389, 3052, 3204, 2460, 2582, 2578, 2580, 1815, 1815,
	1722, 1723, 601, 174, 1490, 2292, 1926, 967, 2547, 3380,
	2531, 2612, 1611, 1112, 1157, 1112, 2471, 2625, 2470, 2597,
	2792, 2518, 2600, 2476, 2602, 3749, 2885, 596, 4171, 3401,
	2093, 3203, 3624, 2530, 886, 1800, 2585, 1299, 1299, 1157,
	1299, 2506, 733, 732, 1561, 2142, 2548, 2532, 2790, 1900,
	2733, 3258, 1299, 2526, 3670, 1923, 2541, 2543, 2544, 2545,
	2498, 2651, 2292, 1821, 3620, 2642, 1902, 1299, 2642, 2508,
	2511, 728, 3415, 727, 2621, 3806, 2101, 2671, 3046, 1880,
	2094, 2589, 4082, 2768, 2591, 1528, 2593, 1122, 2705, 2706,
	2739, 678, 1934, 3413, 797, 1918, 4177, 886, 2139, 2712,
	2713, 2714, 681, 993, 1540, 2697, 2666, 1617, 1365, 2286,
	886, 3621, 2701, 2130, 1879, 685, 887, 3045, 2492, 886,
	2588, 2722, 2128, 2723, 650, 3402, 1308, 647, 1904, 2594,
	3086, 1933, 2720, 1824, 1917, 2095, 2568, 932, 1906, 3632,
	1529, 2549, 1401, 2606, 2528, 1639, 1641, 993, 2682, 2653,
	1927, 2494, 1363, 993, 993, 4184, 2616, 2870, 2871, 2872,
	2873, 2875, 2876, 3997, 2787, 163, 2730, 4080, 2635, 2672,
	2744, 2292, 2746, 2646, 2102, 1287, 2657, 1945, 4157, 1108,
	2660, 2788, 2661, 2717, 4156, 2793, 1975, 1974, 2742, 2586,
	4170, 2446, 2703, 2724, 3137, 2726, 2707, 2728, 2708, 1632,
	1944, 2230, 2505, 2667, 2669, 4194, 2673, 4129, 993, 993,
	2665, 1928, 1929, 3255, 993, 2684, 2737, 1342, 3531, 1110,
	3530, 1287, 2761, 2762, 1924, 1345, 3138, 993, 993, 871,
	1915, 1905, 1940, 993, 993, 1906, 3940, 2668, 1365, 993,
	1486, 3954, 2244, 1609, 1610, 1448, 2989, 1555, 993, 993,
	993, 4207, 929, 883, 993, 3390, 1913, 1914, 2036, 1925,
	2749, 764, 2719, 2784, 993, 1640, 2141, 1558, 1906, 4109,
	2242, 2725, 1612, 2727, 3031, 2729, 3633, 2783, 4110, 3616,
	3442, 993, 1717, 3617, 1941, 2478, 1758, 2760, 3256, 3440,
	2814, 1556, 3137, 2750, 952, 2751, 3805, 2741, 3689, 2972,
	2480, 1959, 1272, 4128, 2747, 1611, 1906, 3065, 1120, 2174,
	2755, 1815, 4175, 3032, 1633, 2770, 3527, 3995, 1284, 3762,
	2738, 2658, 4150, 4029, 2247, 597, 3021, 2662, 3619, 2504,
	2805, 2809, 2810, 2481, 3442, 872, 2813, 1669, 3957, 686,
	687, 2255, 3622, 3440, 1958, 2789, 1588, 993, 993, 993,
	2228, 3996, 2479, 2231, 2791, 1139, 993, 993, 993, 3746,
	1930, 993, 1762, 927, 2274, 871, 2782, 1887, 1888, 1500,
	1502, 993, 1114, 1179, 2831, 3020, 1559, 993, 2097, 993,
	936, 3027, 2922, 2923, 2493, 2408, 2238, 1114, 929, 598,
	3443, 1901, 4195, 2421, 935, 2100, 3271, 4176, 2509, 2239,
	1617, 1765, 2227, 2240, 4205, 1179, 3699, 2245, 2292, 2740,
	3521, 3360, 1134, 798, 3029, 3532, 1760, 1114, 2820, 3215,
	1179, 1287, 1287, 2752, 1516, 2092, 3960, 3456, 1931, 2944,
	4178, 599, 928, 600, 1763, 1762, 1827, 4079, 1639, 1641,
	1179, 3576, 4139, 2905, 3443, 1613, 1614, 1615, 1616, 1618,
	1619, 689, 688, 1599, 993, 3618, 1935, 1560, 4137, 2924,
	3975, 3868, 1761, 4127, 2969, 3475, 2934, 3124, 993, 3028,
	1995, 872, 1284, 1755, 1765, 3690, 1132, 1127, 3745, 4108,
	1827, 588, 2953, 2932, 3528, 2982, 2930, 2985, 2177, 2406,
	3625, 1916, 1632, 1872, 3219, 1598, 993, 1299, 873, 1937,
	1153, 2991, 2958, 3812, 790, 690, 691, 1763, 2957, 2964,
	1284, 3438, 1284, 3926, 2415, 2900, 2901, 2902, 3811, 2062,
	4200, 3441, 2950, 778, 3791, 3476, 2933, 2994, 2995, 3423,
	3012, 2942, 1299, 3017, 3018, 1440, 2075, 2945, 2946, 2962,
	2931, 1179, 2943, 2916, 3376, 3011, 2076, 2999, 3015, 3125,
	1299, 3309, 4208, 2229, 3324, 1299, 1764, 3041, 2084, 2037,
	2087, 2088, 2089, 3117, 3033, 3034, 1299, 2241, 3035, 3002,
	2998, 2626, 2620, 1299, 2610, 3441, 2243, 1179, 3024, 2948,
	2973, 2949, 3637, 2018, 672, 2966, 2967, 2968, 1597, 3636,
	2007, 2000, 3747, 3254, 1983, 1299, 1821, 1950, 3044, 3059,
	3060, 3068, 1957, 3061, 3071, 1299, 3577, 1633, 3076, 3078,
	1488, 3191, 871, 3024, 2986, 624, 3063, 4007, 2167, 874,
	3184, 1114, 1903, 2992, 3003, 3111, 3055, 3133, 2400, 1764,
	3116, 3024, 1599, 3091, 873, 929, 3024, 1669, 3961, 3216,
	1821, 1598, 2510, 2136, 1865, 3102, 2979, 2980, 3030, 2981,
	3478, 1903, 1598, 3713, 1593, 1109, 3037, 1109, 2929, 3850,
	3048, 2938, 2607, 1299, 1299, 875, 1824, 1404, 3142, 3848,
	3792, 3049, 3058, 3051, 1112, 3050, 2533, 2997, 3056, 3085,
	2697, 3064, 3013, 3074, 3009, 1299, 1947, 3533, 3161, 2697,
	1112, 3081, 4199, 3154, 1947, 3008, 3073, 2775, 2402, 2753,
	2083, 3080, 3337, 2401, 3088, 1956, 3186, 2927, 3310, 2531,
	1824, 3043, 3095, 3057, 2445, 2926, 3311, 3126, 872, 1179,
	1517, 3185, 1179, 3198, 678, 1530, 3447, 3134, 791, 792,
	2168, 2444, 3054, 2443, 1597, 681, 1620, 1621, 1613, 1614,
	1615, 1616, 1618, 1619, 1869, 1597, 2939, 779, 780, 2442,
	2614, 3072, 993, 926, 933, 874, 3079, 3635, 993, 993,
	1387, 3534, 993, 993, 993, 3139, 993, 3192, 3141, 3933,
	3155, 936, 3210, 3172, 3148, 993, 1827, 1373, 1599, 1385,
	796, 163, 163, 3176, 993, 3159, 3160, 993, 3182, 3681,
	1374, 1898, 2965, 1179, 2937, 3174, 1899, 3151, 3209, 3132,
	3114, 875, 993, 3800, 2016, 3093, 3962, 4147, 4015, 3200,
	1179, 3201, 3846, 3202, 1867, 3730, 3193, 2704, 2592, 2941,
	1827, 1827, 993, 993, 1494, 993, 993, 993, 3234, 3217,
	4004, 3583, 2534, 2535, 3066, 4010, 3191, 3934, 1868, 3326,
	3789, 2299, 4033, 993, 1815, 3184, 4149, 993, 3206, 1827,
	1827, 993, 993, 993, 993, 993, 993, 993, 993, 993,
	993, 993, 993, 993, 993, 993, 993, 993, 993, 993,
	1575, 993, 3214, 3243, 3244, 623, 3729, 3790, 993, 993,
	1827, 873, 793, 794, 1573, 993, 1552, 1953, 1815, 3187,
	3188, 3189, 3190, 4099, 3947, 3801, 993, 1284, 3768, 1900,
	3207, 781, 782, 1550, 2940, 1527, 3239, 1114, 1114, 3575,
	3446, 993, 4011, 1525, 3935, 1523, 1902, 2897, 1521, 3231,
	2004, 1519, 3250, 3194, 3257, 3259, 3260, 2983, 3266, 2862,
	1951, 3186, 2794, 2611, 2559, 2524, 1821, 2469, 1795, 3150,
	1179, 3273, 3152, 3153, 1791, 1576, 3185, 3156, 1472, 3157,
	2898, 3158, 3342, 3212, 3283, 3281, 3284, 1510, 1508, 3282,
	3286, 1383, 2127, 3211, 2187, 3274, 1593, 3321, 2735, 1952,
	3288, 993, 2734, 2710, 3313, 2156, 2138, 1386, 1904, 1539,
	1821, 1821, 2105, 1980, 1853, 1701, 3359, 993, 993, 1483,
	1359, 3314, 4074, 2187, 3289, 2298, 1384, 795, 3657, 3370,
	3371, 3646, 874, 3333, 3334, 4151, 1824, 4003, 3261, 1821,
	1821, 884, 3711, 3662, 3609, 163, 3474, 993, 993, 3322,
	3330, 3331, 3067, 3466, 3317, 3428, 3251, 2587, 3396, 3394,
	3375, 3280, 3120, 1284, 1284, 3328, 3115, 3107, 2664, 2659,
	1821, 1574, 3344, 993, 2638, 4141, 2624, 2617, 875, 1001,
	1824, 1824, 2604, 3875, 2590, 1572, 2057, 1551, 4125, 2055,
	1758, 4043, 2052, 2049, 3345, 1299, 2044, 1108, 2042, 1108,
	2038, 2029, 1979, 1977, 1549, 1963, 1526, 1948, 1932, 1824,
	1824, 1905, 1919, 1827, 1524, 1906, 1522, 3409, 3411, 1520,
	3408, 1907, 1518, 239, 239, 239, 3129, 591, 592, 3404,
	607, 591, 607, 617, 622, 3379, 2171, 1110, 640, 1110,
	1824, 1299, 1284, 646, 3187, 3188, 3189, 3190, 993, 239,
	2670, 1440, 1602, 3424, 2993, 3418, 1114, 993, 1509, 1507,
	2126, 3488, 1382, 3462, 3445, 1802, 1762, 775, 3735, 2773,
	3728, 2531, 3727, 239, 3669, 1299, 1299, 1299, 3497, 2698,
	2711, 1089, 1891, 889, 891, 893, 3434, 1339, 3483, 3366,
	3075, 1299, 1898, 3463, 3468, 1957, 3449, 1899, 2493, 1177,
	3877, 3358, 2493, 1278, 3892, 1765, 1090, 3479, 2513, 3501,
	1179, 2651, 2491, 1915, 1815, 2015, 2512, 3486, 2096, 3469,
	1760, 3464, 3480, 2343, 2339, 1570, 1571, 1424, 3482, 1425,
	3513, 2122, 1179, 2121, 4042, 993, 993, 2103, 1763, 3444,
	3467, 993, 993, 1827, 662, 2697, 993, 993, 3639, 993,
	1609, 1610, 1603, 993, 2774, 3884, 3664, 3003, 1815, 1815,
	3484, 3481, 3490, 1506, 993, 3489, 1761, 3885, 3912, 3520,
	3584, 1901, 3562, 1821, 3357, 2365, 2536, 3496, 2517, 1612,
	993, 3502, 3503, 591, 591, 3507, 3504, 1815, 1815, 3511,
	3510, 239, 1606, 3508, 3886, 3544, 2337, 1425, 1956, 3433,
	1900, 1681, 1609, 1610, 4143, 1686, 1091, 3536, 4135, 1425,
	602, 3535, 1611, 2341, 2342, 2340, 4104, 1902, 1815, 3524,
	3529, 3422, 232, 2603, 718, 2124, 1862, 3395, 2564, 3397,
	761, 3548, 2556, 2572, 2571, 1112, 2521, 2554, 2519, 4002,
	1114, 3519, 3421, 1824, 3970, 2555, 1109, 3967, 1114, 2520,
	1112, 3932, 1179, 3888, 1179, 3864, 3843, 3465, 3455, 3352,
	1764, 1114, 1109, 613, 1611, 3119, 2645, 585, 2387, 3887,
	1857, 2336, 2338, 1808, 4172, 3798, 1179, 4035, 2971, 1904,
	1112, 3589, 4036, 4198, 2868, 2869, 3889, 4035, 3427, 1609,
	1610, 1310, 4036, 2485, 2486, 3574, 993, 2483, 2484, 3969,
	1493, 4153, 3554, 1821, 2294, 3362, 1492, 2485, 2483, 2327,
	3865, 1554, 3829, 3630, 1553, 3665, 3661, 3660, 3550, 3472,
	3361, 3262, 3069, 1179, 1695, 1694, 4186, 3592, 4158, 3923,
	1179, 3595, 3631, 3825, 3783, 3780, 3585, 3692, 3602, 3512,
	3606, 3607, 3588, 3591, 3590, 3642, 3643, 3641, 3586, 3587,
	3492, 3450, 2957, 3596, 3448, 3608, 3599, 1299, 1299, 3392,
	163, 3640, 3387, 3494, 3581, 3149, 3123, 3495, 1287, 3122,
	2732, 2716, 2715, 1824, 2655, 3629, 2630, 2605, 2462, 2461,
	1800, 2259, 1905, 2123, 2120, 1179, 1906, 2119, 3679, 2118,
	1299, 2117, 2032, 3666, 2031, 3667, 3677, 2030, 2013, 1990,
	1986, 1985, 1984, 1982, 1981, 3659, 1569, 1568, 3704, 1514,
	1411, 1410, 1409, 3654, 3668, 2004, 3676, 993, 3678, 1408,
	3682, 1815, 3656, 1407, 1406, 1895, 1405, 1299, 1299, 1299,
	3691, 1403, 1398, 1397, 3731, 1396, 1395, 1394, 1179, 1354,
	3702, 1353, 1352, 1351, 1350, 1349, 3718, 1344, 1338, 1336,
	993, 993, 993, 3683, 3701, 3734, 3714, 3698, 1335, 1170,
	3709, 1169, 3722, 1168, 1896, 3703, 1167, 1138, 1179, 1137,
	1072, 3715, 1863, 993, 895, 881, 993, 993, 3716, 3803,
	3623, 1563, 84, 3723, 1112, 1346, 993, 706, 3740, 1827,
	78, 3890, 1954, 3391, 993, 993, 3891, 854, 4032, 1332,
	3953, 713, 4017, 3019, 3738, 2575, 2104, 1515, 2106, 1179,
	3737, 1299, 2952, 3742, 3748, 3645, 2428, 3994, 3558, 2830,
	3919, 3761, 2297, 1699, 1179, 2909, 3653, 3753, 3655, 80,
	977, 1023, 993, 3688, 3687, 3610, 3378, 2687, 3685, 993,
	3684, 3770, 1901, 1812, 1814, 943, 3758, 993, 1182, 1827,
	3764, 1815, 1873, 983, 1889, 1882, 2463, 993, 2347, 1000,
	993, 1794, 3785, 997, 1816, 1818, 999, 998, 993, 1817,
	3776, 3777, 1718, 1125, 996, 1179, 3779, 3775, 1811, 3082,
	3471, 3470, 2613, 3786, 2649, 1299, 1299, 1390, 856, 3784,
	1877, 2253, 2281, 3824, 2819, 1692, 958, 979, 2278, 1130,
	968, 1135, 957, 2757, 2935, 3808, 3136, 3807, 3112, 3351,
	640, 1893, 3719, 2166, 722, 2865, 3834, 2284, 3118, 1123,
	2370, 2363, 1179, 3858, 3849, 1299, 2359, 2796, 2797, 3826,
	3822, 2639, 1579, 239, 3831, 239, 239, 1275, 1671, 239,
	239, 1290, 3863, 993, 993, 3838, 3841, 3839, 3847, 1821,
	3842, 2650, 1165, 961, 3862, 239, 2251, 1312, 1108, 1683,
	3895, 3896, 993, 993, 3102, 3857, 3876, 2799, 3880, 3874,
	3837, 2176, 3143, 2955, 1108, 2456, 3167, 3168, 3899, 993,
	1827, 4039, 1341, 2365, 2365, 3873, 3879, 3718, 3878, 3893,
	3270, 3871, 1994, 3814, 1358, 1088, 1290, 3870, 1110, 1087,
	239, 239, 1086, 1275, 993, 4023, 3872, 993, 4020, 1821,
	3907, 3505, 3100, 239, 1110, 1866, 2004, 2477, 3936, 1824,
	1661, 1400, 3108, 973, 3925, 1283, 993, 2920, 3175, 1287,
	1356, 645, 3917, 239, 985, 239, 239, 1660, 1275, 239,
	1290, 2584, 2583, 3942, 3908, 3909, 3924, 2891, 2892, 2893,
	640, 3929, 239, 239, 1152, 1151, 3911, 1150, 1972, 3001,
	4206, 3388, 3941, 208, 2767, 1600, 993, 993, 1592, 3956,
	1112, 1112, 205, 207, 206, 775, 3693, 993, 3355, 1824,
	993, 2961, 1299, 3836, 4102, 3406, 3949, 3092, 21, 20,
	19, 105, 1299, 1299, 3972, 40, 18, 3974, 119, 3964,
	3965, 135, 134, 2365, 2365, 2365, 133, 132, 131, 1299,
	137, 3985, 3963, 130, 3862, 3968, 129, 124, 3955, 128,
	3951, 127, 126, 993, 993, 125, 3977, 123, 3981, 122,
	3982, 3983, 3984, 121, 120, 118, 117, 116, 115, 3971,
	1821, 114, 113, 112, 239, 111, 110, 109, 3988, 3990,
	108, 3991, 3816, 3817, 4014, 3989, 993, 993, 107, 993,
	106, 239, 3999, 3976, 636, 633, 57, 56, 4037, 104,
	4012, 103, 17, 38, 14, 3830, 61, 1109, 3832, 3833,
	62, 16, 4044, 4013, 13, 33, 83, 95, 4022, 4025,
	4027, 94, 1109, 34, 2257, 92, 91, 1815, 4056, 4031,
	32, 15, 89, 4057, 88, 3998, 993, 993, 993, 1681,
	1824, 31, 29, 11, 9, 8, 4048, 35, 4051, 1779,
	4053, 12, 1109, 5, 4058, 4041, 4086, 168, 167, 993,
	170, 166, 169, 82, 165, 4073, 4091, 164, 4026, 4072,
	81, 4030, 4045, 4070, 4071, 4046, 27, 10, 160, 3859,
	3460, 76, 162, 161, 159, 4089, 158, 1815, 157, 77,
	74, 156, 4115, 2369, 4113, 155, 75, 154, 25, 6,
	4121, 60, 4120, 7, 3743, 3195, 4122, 993, 4111, 98,
	99, 4112, 36, 72, 4117, 71, 4126, 70, 24, 1112,
	59, 23, 197, 196, 195, 194, 4118, 4119, 193, 192,
	4132, 4133, 4123, 187, 4142, 4138, 186, 4145, 4136, 4134,
	191, 189, 188, 190, 185, 200, 4146, 199, 4144, 2651,
	198, 202, 4148, 184, 4160, 993, 4161, 993, 4152, 4155,
	182, 4163, 178, 177, 181, 4165, 4159, 4167, 4022, 183,
	180, 4025, 4162, 179, 4164, 176, 3950, 201, 152, 153,
	1284, 4154, 67, 151, 4166, 150, 2190, 149, 591, 148,
	147, 146, 4179, 4181, 145, 66, 22, 2, 1, 0,
	0, 4187, 0, 0, 4041, 0, 0, 4188, 3431, 239,
	0, 239, 0, 993, 993, 239, 0, 0, 1815, 0,
	0, 993, 4196, 993, 993, 4202, 0, 4190, 1312, 1275,
	239, 4193, 239, 4192, 4212, 0, 4210, 239, 1312, 607,
	4213, 0, 239, 1312, 0, 0, 0, 0, 0, 640,
	4217, 0, 4209, 4220, 0, 0, 1109, 4211, 4222, 4221,
	4214, 0, 4223, 4226, 0, 1287, 4228, 4227, 0, 0,
	0, 993, 0, 2295, 0, 0, 4219, 0, 0, 4224,
	0, 4236, 0, 4238, 0, 0, 4229, 3624, 3498, 3499,
	3500, 0, 4232, 3227, 3228, 0, 4233, 0, 0, 4235,
	0, 4239, 0, 1112, 1440, 4203, 4204, 0, 0, 0,
	0, 1112, 0, 0, 0, 0, 0, 0, 0, 3620,
	0, 0, 0, 3613, 1112, 0, 0, 0, 0, 0,
	0, 0, 0, 2868, 2869, 0, 2886, 2887, 2888, 3611,
	0, 0, 0, 0, 0, 0, 3615, 0, 0, 2365,
	2365, 0, 0, 4234, 3235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3621, 0, 2438, 0,
	0, 0, 0, 4101, 0, 0, 0, 0, 0, 0,
	0, 3290, 3291, 3292, 3293, 3294, 3295, 3296, 3297, 3298,
	3299, 3300, 3301, 3302, 3303, 3304, 3305, 3306, 3307, 3308,
	0, 3312, 0, 0, 0, 2883, 3614, 0, 0, 0,
	0, 0, 239, 0, 0, 239, 0, 0, 0, 1108,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1108, 0, 0, 2365, 2365, 2365,
	2365, 2365, 2365, 2365, 2365, 2365, 2365, 2365, 2365, 2365,
	2365, 2365, 2365, 2365, 2365, 2365, 0, 2365, 0, 1110,
	0, 0, 0, 0, 1108, 239, 0, 2488, 0, 239,
	0, 0, 0, 239, 1110, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2874, 241, 239, 0, 239, 0, 239, 0, 0, 0,
	591, 0, 0, 0, 1110, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2033, 0, 0, 0, 0, 0,
	0, 2369, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 239, 3616, 0, 0, 0, 3617, 0,
	0, 0, 1109, 1109, 2889, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1609, 1610, 0,
	0, 0, 0, 0, 640, 0, 144, 0, 775, 0,
	1440, 0, 0, 68, 0, 44, 43, 0, 0, 1640,
	0, 0, 2884, 3619, 0, 0, 1612, 0, 0, 69,
	0, 0, 139, 239, 0, 1275, 239, 3622, 0, 0,
	0, 2369, 2369, 0, 0, 73, 0, 0, 0, 0,
	640, 0, 0, 0, 0, 63, 0, 239, 0, 1611,
	0, 0, 46, 0, 141, 0, 0, 239, 239, 1631,
	239, 0, 239, 0, 239, 652, 239, 1628, 0, 45,
	3739, 79, 3741, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2132, 0, 0, 2133,
	0, 2134, 0, 48, 64, 0, 0, 956, 1108, 0,
	0, 49, 0, 239, 0, 0, 85, 0, 0, 0,
	142, 0, 0, 0, 3539, 0, 0, 0, 47, 0,
	100, 0, 0, 0, 622, 86, 97, 2885, 640, 0,
	0, 0, 0, 0, 1634, 1635, 1636, 1637, 1110, 0,
	3618, 0, 0, 0, 1617, 0, 0, 0, 0, 0,
	0, 2369, 2369, 2369, 3781, 0, 50, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 657, 87, 3625, 0, 0, 0, 0,
	0, 0, 1639, 1641, 0, 0, 0, 0, 0, 0,
	0, 1109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1626, 1627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3840, 0,
	0, 0, 0, 0, 0, 0, 1632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 665, 2880, 2881,
	2882, 0, 0, 0, 0, 2879, 2877, 2878, 2870, 2871,
	2872, 2873, 2875, 2876, 0, 0, 0, 0, 0, 0,
	0, 659, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 591, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 90, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 51, 0, 0, 591,
	0, 0, 0, 0, 0, 0, 239, 0, 591, 0,
	0, 0, 0, 55, 0, 663, 0, 0, 0, 65,
	239, 1638, 0, 0, 54, 171, 93, 0, 96, 0,
	0, 0, 52, 0, 0, 239, 143, 0, 0, 0,
	0, 1633, 0, 53, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	58, 0, 0, 0, 136, 1109, 0, 0, 0, 0,
	654, 0, 0, 1109, 1108, 1108, 0, 0, 140, 0,
	0, 239, 0, 607, 239, 0, 1109, 2921, 0, 0,
	0, 0, 0, 658, 211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1110, 1110, 0, 0, 138, 2947,
	0, 0, 664, 0, 0, 1440, 1440, 0, 2502, 0,
	0, 0, 175, 0, 2960, 661, 0, 239, 0, 0,
	210, 656, 1440, 0, 0, 0, 0, 0, 0, 239,
	203, 0, 0, 1757, 2977, 0, 0, 0, 204, 0,
	0, 0, 239, 0, 0, 0, 1629, 1625, 0, 1622,
	1620, 1621, 1613, 1614, 1615, 1616, 1618, 1619, 239, 0,
	174, 0, 653, 3, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 2595, 0, 0, 0, 0, 3767, 0, 660, 0,
	0, 2868, 2869, 0, 2886, 2887, 2888, 0, 0, 0,
	0, 666, 0, 0, 0, 1312, 0, 0, 239, 0,
	0, 0, 655, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 2634, 0, 0, 956, 0, 0,
	0, 956, 3794, 0, 2502, 0, 591, 2369, 2369, 2654,
	0, 0, 2365, 0, 0, 239, 1263, 0, 239, 0,
	1263, 0, 239, 0, 239, 0, 0, 0, 0, 1275,
	0, 239, 239, 2883, 1290, 1290, 0, 0, 0, 0,
	0, 2960, 0, 1108, 2680, 775, 0, 2502, 2502, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2365, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 2868,
	2869, 0, 2886, 2887, 2888, 0, 0, 0, 0, 942,
	239, 1275, 239, 1110, 0, 1312, 0, 1312, 0, 0,
	1275, 0, 1275, 0, 1275, 2369, 2369, 2369, 2369, 2369,
	2369, 2369, 2369, 2369, 2369, 2369, 2369, 2369, 2369, 2369,
	2369, 2369, 2369, 2369, 0, 2369, 0, 0, 2874, 239,
	239, 239, 239, 1275, 239, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2883, 0, 0, 0, 0, 0, 0, 0, 3916,
	2890, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	1609, 1610, 0, 0, 0, 239, 1652, 1653, 1654, 0,
	0, 0, 2889, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1640, 1278, 0, 0, 1177, 0, 0, 1612,
	0, 0, 0, 0, 0, 0, 0, 1658, 0, 0,
	0, 0, 0, 0, 0, 2365, 0, 0, 0, 0,
	2884, 0, 0, 0, 0, 1609, 1610, 0, 0, 0,
	0, 0, 1611, 0, 0, 0, 2874, 1108, 0, 0,
	0, 0, 1631, 0, 0, 1108, 0, 1640, 0, 0,
	1628, 0, 0, 0, 1612, 0, 0, 0, 1108, 0,
	0, 0, 0, 0, 1312, 0, 0, 3247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1110, 0, 0,
	0, 0, 0, 0, 3263, 1110, 0, 1611, 0, 0,
	2889, 0, 0, 0, 0, 0, 0, 1631, 1110, 0,
	0, 0, 0, 0, 0, 1628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1634, 1635, 1636,
	1637, 0, 0, 0, 0, 0, 0, 1617, 2884, 0,
	0, 0, 0, 0, 0, 2885, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3230, 0, 0, 0, 1649, 0, 0, 1659,
	0, 0, 0, 0, 0, 1639, 1641, 0, 0, 0,
	0, 0, 1634, 1635, 1636, 1637, 0, 0, 0, 0,
	0, 239, 1617, 0, 0, 0, 0, 0, 0, 0,
	1626, 1627, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 591, 0, 0, 0, 0, 591, 0, 1647, 591,
	0, 0, 591, 591, 3354, 0, 0, 0, 591, 1632,
	1639, 1641, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1312, 0,
	0, 0, 0, 2885, 0, 1626, 1627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2880, 2881, 2882, 1312,
	0, 0, 0, 2879, 2877, 2878, 2870, 2871, 2872, 2873,
	2875, 2876, 0, 0, 1632, 0, 0, 0, 0, 0,
	2502, 2502, 239, 0, 1290, 0, 0, 2502, 1263, 0,
	3005, 0, 0, 0, 0, 0, 0, 0, 2502, 3005,
	0, 2502, 3005, 3005, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1638, 0, 239, 239, 1290, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 956, 0, 1633, 0, 0, 0, 1263, 1290,
	239, 0, 1275, 0, 0, 0, 0, 0, 0, 942,
	0, 0, 0, 942, 2502, 0, 3070, 2502, 1290, 1650,
	0, 2502, 2502, 1290, 2880, 2881, 2882, 0, 0, 1638,
	0, 2879, 2877, 2878, 2870, 2871, 2872, 2873, 2875, 2876,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 1633,
	0, 0, 0, 239, 3096, 0, 0, 3098, 2502, 0,
	1314, 239, 1320, 0, 1326, 239, 0, 1290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2634, 0, 0, 1275, 0,
	239, 0, 0, 2502, 0, 591, 0, 0, 0, 0,
	0, 0, 2502, 0, 0, 0, 0, 0, 0, 239,
	0, 1648, 0, 239, 239, 0, 0, 0, 1651, 1629,
	1625, 0, 1622, 1620, 1621, 1613, 1614, 1615, 1616, 1618,
	1619, 0, 0, 0, 0, 0, 1441, 0, 0, 0,
	239, 2634, 0, 0, 2634, 1263, 0, 0, 0, 0,
	0, 0, 0, 1459, 0, 1464, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1473, 0, 1478, 0, 0,
	0, 0, 0, 0, 1629, 1625, 0, 1622, 1620, 1621,
	1613, 1614, 1615, 1616, 1618, 1619, 3205, 0, 0, 1275,
	239, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1609, 1610, 0, 1642,
	1643, 1644, 1652, 1653, 1654, 239, 1535, 0, 0, 1541,
	0, 0, 0, 0, 0, 0, 0, 1645, 1640, 0,
	0, 0, 0, 0, 0, 1612, 0, 0, 0, 0,
	0, 0, 0, 1658, 0, 0, 0, 0, 3594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2369, 0, 0, 0, 0, 0, 0, 0, 1611, 0,
	3604, 3268, 0, 0, 0, 0, 0, 0, 1631, 0,
	0, 0, 0, 0, 0, 0, 1628, 0, 0, 0,
	0, 0, 0, 766, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2369, 0, 0, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 0, 0, 0, 68,
	0, 769, 768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 69, 0, 0, 0, 0,
	1680, 0, 0, 0, 0, 0, 1693, 0, 0, 0,
	0, 73, 0, 1634, 1635, 1636, 1637, 0, 0, 0,
	0, 0, 0, 1617, 0, 0, 239, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1609, 1610, 0, 79, 591, 591,
	0, 0, 1649, 0, 0, 1659, 0, 0, 0, 0,
	0, 1639, 1641, 0, 0, 0, 1640, 0, 0, 0,
	1312, 0, 0, 1612, 0, 0, 0, 1655, 0, 1656,
	0, 0, 85, 1312, 1312, 0, 1626, 1627, 0, 0,
	0, 0, 1177, 1263, 2868, 2869, 100, 2886, 2887, 2888,
	0, 86, 97, 0, 1647, 0, 1611, 0, 0, 0,
	1751, 1751, 1751, 2369, 0, 1632, 1631, 0, 0, 0,
	68, 0, 3759, 0, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 0, 640, 0,
	0, 1657, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 73, 0, 0, 0, 0, 0, 1646, 0,
	0, 0, 0, 3759, 0, 0, 2883, 0, 239, 0,
	0, 3225, 0, 0, 0, 0, 0, 0, 2190, 0,
	1263, 0, 0, 0, 942, 0, 1290, 239, 79, 0,
	0, 1634, 1635, 1636, 1637, 0, 0, 239, 0, 0,
	0, 1617, 0, 0, 0, 0, 0, 239, 0, 0,
	1638, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	239, 0, 0, 85, 239, 0, 0, 0, 0, 2190,
	1633, 0, 0, 0, 0, 0, 0, 100, 0, 1639,
	1641, 0, 86, 97, 2502, 239, 0, 0, 0, 1263,
	0, 2874, 0, 0, 0, 1650, 0, 0, 0, 0,
	0, 0, 2680, 2680, 1626, 1627, 0, 0, 775, 775,
	2502, 90, 0, 2634, 2634, 1263, 0, 775, 2502, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 1632, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 93, 0, 96, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 2884, 0, 0, 770, 1648, 0, 0,
	136, 1623, 1624, 1630, 1651, 1629, 1625, 0, 1622, 1620,
	1621, 1613, 1614, 1615, 1616, 1618, 1619, 3559, 0, 0,
	0, 2843, 0, 0, 1263, 2844, 0, 0, 0, 0,
	211, 0, 0, 0, 0, 0, 0, 0, 1638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 0, 1633, 0,
	0, 0, 90, 0, 0, 0, 0, 0, 175, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 239,
	0, 1263, 0, 0, 0, 1312, 203, 239, 0, 0,
	0, 0, 0, 0, 204, 0, 0, 0, 0, 0,
	239, 68, 171, 93, 0, 96, 0, 0, 2885, 0,
	0, 0, 0, 0, 0, 0, 767, 69, 0, 0,
	0, 0, 0, 2502, 2502, 2502, 0, 0, 0, 209,
	0, 0, 0, 73, 0, 0, 1312, 770, 0, 0,
	0, 136, 0, 0, 2502, 0, 3005, 0, 0, 1312,
	1312, 239, 1290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1290, 239, 1290, 239, 0, 0, 79,
	0, 211, 0, 0, 0, 0, 2502, 0, 2502, 239,
	0, 0, 0, 1629, 1625, 0, 1622, 1620, 1621, 1613,
	1614, 1615, 1616, 1618, 1619, 138, 0, 0, 0, 0,
	0, 0, 0, 2502, 85, 0, 0, 0, 3695, 175,
	0, 0, 0, 0, 0, 0, 239, 210, 100, 0,
	0, 0, 0, 86, 97, 239, 0, 203, 0, 2880,
	2881, 2882, 0, 0, 0, 204, 2879, 2877, 2878, 2870,
	2871, 2872, 2873, 2875, 2876, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 1312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2165, 87, 2169, 0, 0, 0, 0, 0, 0,
	2183, 0, 0, 0, 0, 0, 0, 2192, 2193, 2194,
	2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204,
	2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214,
	2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224,
	2225, 2226, 0, 2232, 0, 2234, 2235, 2236, 2237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1680, 2502,
	0, 3005, 2276, 0, 3788, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 2306, 2309,
	2312, 2315, 0, 2319, 2320, 2321, 2322, 2323, 2324, 2325,
	0, 0, 0, 90, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2361, 0, 2372, 2374, 2379, 0, 0, 0, 0,
	1290, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 93, 0, 96, 0, 0, 3788,
	0, 0, 0, 0, 0, 0, 0, 2502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3867, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 770, 0,
	1312, 0, 136, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	239, 0, 211, 0, 0, 0, 0, 0, 0, 1002,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3268, 1263, 0, 138, 0, 1609, 1610,
	0, 1642, 1643, 1644, 1652, 1653, 1654, 0, 0, 3788,
	175, 0, 0, 0, 0, 0, 0, 0, 210, 1645,
	1640, 0, 0, 240, 240, 240, 1263, 1612, 203, 0,
	0, 0, 0, 0, 0, 1658, 204, 0, 0, 0,
	0, 1263, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 239, 0, 0, 1453, 0,
	1611, 1263, 0, 0, 0, 0, 0, 0, 0, 0,
	1631, 0, 0, 240, 3695, 956, 0, 0, 1628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 956,
	0, 0, 0, 0, 0, 0, 0, 3005, 0, 0,
	68, 0, 1609, 1610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 0, 0, 2598,
	2599, 0, 2601, 1312, 1640, 1312, 0, 0, 0, 0,
	0, 1612, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1634, 1635, 1636, 1637, 0,
	4008, 0, 0, 0, 0, 1617, 0, 1312, 0, 0,
	239, 0, 1263, 0, 1611, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 1631, 0, 0, 239, 2502, 0,
	0, 0, 1628, 0, 1649, 0, 0, 1659, 0, 0,
	0, 0, 0, 1639, 1641, 239, 0, 0, 1263, 0,
	0, 0, 0, 85, 0, 0, 0, 0, 0, 1655,
	0, 1656, 0, 0, 0, 0, 0, 100, 1626, 1627,
	0, 3268, 86, 97, 0, 0, 0, 0, 0, 3224,
	0, 0, 0, 0, 0, 0, 1647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1632, 0, 1634,
	1635, 1636, 1637, 0, 0, 0, 0, 0, 0, 1617,
	0, 0, 0, 0, 0, 0, 2731, 0, 0, 0,
	0, 87, 2502, 1657, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1646, 0, 0, 0, 3788, 0, 0, 1639, 1641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1662, 1663, 0, 0,
	0, 0, 1626, 1627, 0, 1312, 0, 2502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1263, 0, 1638, 1263, 0, 0, 0, 0, 0, 0,
	0, 1632, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1633, 0, 0, 0, 0, 0, 0, 0,
	0, 2779, 2780, 0, 0, 0, 0, 2786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1650, 0, 0,
	0, 0, 90, 0, 0, 0, 2800, 2801, 0, 0,
	0, 0, 2276, 0, 0, 0, 0, 0, 0, 0,
	0, 2808, 0, 0, 1263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2680, 0, 2822, 0, 0,
	0, 1263, 171, 93, 0, 96, 0, 0, 2680, 0,
	0, 0, 0, 0, 2834, 0, 1638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 1633, 770, 0, 0,
	0, 136, 0, 0, 0, 0, 0, 0, 0, 1648,
	0, 0, 0, 1623, 1624, 1630, 1651, 1629, 1625, 0,
	1622, 1620, 1621, 1613, 1614, 1615, 1616, 1618, 1619, 0,
	0, 211, 0, 2272, 0, 0, 0, 2273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2379,
	2379, 2379, 0, 0, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 1751, 0, 0, 0, 0, 175,
	0, 0, 2925, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 1263, 0, 0, 0, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1451, 0, 0,
	0, 1629, 1625, 0, 1622, 1620, 1621, 1613, 1614, 1615,
	1616, 1618, 1619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 942, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 942, 0, 240, 1183, 240, 240, 0, 1183, 240,
	240, 0, 1183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 3022,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1183, 0,
	240, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 240, 240, 0, 0, 240,
	0, 1183, 0, 0, 0, 0, 0, 1183, 0, 0,
	0, 1183, 240, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1183, 0, 0, 0, 0,
	0, 0, 0, 1263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1609, 1610, 0, 1642, 1643, 1644,
	1652, 1653, 1654, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 1640, 0, 0, 0,
	0, 240, 0, 1612, 0, 0, 0, 0, 0, 0,
	0, 1658, 0, 0, 989, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1611, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1631, 0, 0, 0,
	0, 0, 0, 0, 1628, 2183, 0, 0, 238, 238,
	238, 3222, 3223, 0, 0, 3226, 0, 0, 0, 3229,
	0, 0, 0, 0, 0, 0, 0, 0, 3233, 0,
	0, 0, 0, 1263, 679, 1263, 0, 3240, 0, 0,
	2925, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3252, 0, 1263, 679, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1634, 1635, 1636, 1637, 3275, 3276, 0, 3277, 3278,
	3279, 1617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3285, 0, 0, 0,
	3287, 0, 0, 0, 1263, 0, 0, 0, 0, 0,
	1649, 1263, 0, 1659, 0, 0, 0, 0, 0, 1639,
	1641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3315, 3316, 0, 0, 1655, 0, 1656, 0, 0,
	0, 0, 0, 0, 1626, 1627, 0, 0, 0, 3327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1647, 0, 3336, 0, 1263, 0, 0, 0,
	0, 0, 0, 1632, 0, 240, 1111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1183, 0, 0, 0,
	240, 240, 240, 0, 0, 0, 0, 240, 0, 1657,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1183, 1646, 0, 0, 1263,
	0, 0, 0, 0, 3372, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1183, 0, 0, 0,
	3381, 3384, 0, 0, 0, 0, 0, 0, 0, 1263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1638, 0,
	0, 3405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1633, 0,
	1263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1263, 0, 0, 0, 0,
	0, 0, 0, 1650, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 956, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1751, 240, 1183, 1183, 240, 0, 0, 0, 0,
	3491, 0, 0, 1183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1263, 0, 1648, 0, 0, 0, 1623,
	1624, 1630, 1651, 1629, 1625, 0, 1622, 1620, 1621, 1613,
	1614, 1615, 1616, 1618, 1619, 240, 0, 2802, 0, 240,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 240, 0, 240, 0, 3537, 3538,
	0, 0, 0, 0, 3542, 3543, 0, 0, 0, 3546,
	3547, 0, 0, 0, 0, 0, 3551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 3555, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3560, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1183, 0, 1183, 0, 1183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1183, 1183, 0, 0, 0, 0, 956, 956, 0,
	0, 0, 1183, 240, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 1183, 0, 1183, 1183, 1183, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 240, 0,
	240, 0, 240, 0, 240, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 3384,
	238, 238, 0, 0, 238, 238, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 956, 0,
	679, 0, 0, 0, 0, 1104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1183, 0, 0, 0, 238, 238, 0, 0, 234,
	234, 587, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	238, 238, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 238, 0,
	3384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1183, 0,
	0, 0, 0, 3754, 3755, 3756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1609, 1610, 0,
	1642, 1643, 1644, 1652, 1653, 1654, 2183, 0, 0, 3765,
	3766, 0, 0, 0, 0, 0, 0, 0, 1645, 1640,
	0, 0, 0, 0, 0, 0, 1612, 3774, 0, 0,
	0, 0, 0, 0, 1658, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 1183, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 1611,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1631,
	240, 0, 3384, 1183, 0, 0, 0, 1628, 0, 0,
	3813, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	3820, 0, 0, 942, 0, 0, 0, 0, 0, 0,
	0, 3827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 1183, 0, 1634, 1635, 1636, 1637, 0, 0,
	0, 0, 0, 0, 1617, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1183, 0, 0, 0, 3384, 3384, 0, 0,
	0, 0, 0, 1649, 0, 0, 1659, 240, 0, 0,
	0, 0, 1639, 1641, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 1655, 0,
	1656, 0, 240, 0, 0, 0, 0, 1626, 1627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 1183,
	0, 0, 0, 0, 0, 1647, 0, 3928, 0, 0,
	3931, 0, 0, 1183, 0, 0, 1632, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 3384,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 0, 1773, 0, 1111, 0, 240, 0,
	238, 0, 0, 0, 0, 240, 0, 0, 0, 1646,
	0, 0, 0, 0, 0, 238, 1773, 238, 0, 942,
	942, 0, 679, 0, 0, 0, 0, 679, 0, 0,
	3384, 0, 0, 3384, 0, 240, 0, 0, 240, 0,
	0, 0, 240, 0, 240, 0, 0, 0, 0, 0,
	0, 240, 240, 0, 0, 0, 1183, 1183, 0, 1183,
	0, 1638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1183, 0, 0, 0, 0, 0, 2183, 0, 0,
	0, 1633, 240, 0, 0, 0, 1183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 240, 0, 0, 0, 1650, 0, 0, 0,
	942, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	240, 240, 240, 0, 240, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4069,
	4069, 4069, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 4090, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 1648, 0,
	679, 0, 1623, 1624, 1630, 1651, 1629, 1625, 0, 1622,
	1620, 1621, 1613, 1614, 1615, 1616, 1618, 1619, 0, 0,
	0, 0, 0, 0, 0, 0, 3565, 0, 0, 1174,
	4069, 0, 0, 0, 0, 1282, 978, 102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 0, 238, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 3384, 238,
	3384, 238, 0, 0, 1609, 1610, 0, 1642, 1643, 1644,
	1652, 1653, 1654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 1640, 0, 0, 1392,
	0, 238, 0, 1612, 0, 0, 0, 0, 238, 0,
	0, 1658, 0, 102, 0, 0, 0, 0, 0, 1415,
	0, 1415, 1415, 0, 0, 0, 4069, 4197, 0, 0,
	0, 0, 0, 0, 4201, 0, 1611, 0, 1457, 1458,
	0, 0, 0, 0, 0, 0, 1631, 0, 0, 0,
	0, 0, 0, 0, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1183, 0, 0, 0, 0, 0, 0, 0,
	917, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 937, 679, 238, 0, 238, 0, 238, 0, 238,
	0, 238, 0, 0, 1183, 0, 0, 0, 0, 0,
	0, 1634, 1635, 1636, 1637, 0, 0, 0, 0, 1183,
	1562, 1617, 0, 0, 0, 0, 0, 0, 1098, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 1183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1649, 0, 0, 1659, 0, 0, 0, 0, 0, 1639,
	1641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 1655, 0, 1656, 0, 0,
	0, 0, 0, 0, 1626, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1183, 0, 0, 0,
	0, 0, 1647, 0, 0, 0, 240, 240, 0, 240,
	0, 0, 0, 1632, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 696, 0, 0, 0, 0, 0, 0,
	240, 1183, 0, 0, 0, 0, 0, 0, 0, 1657,
	1183, 0, 0, 0, 0, 0, 0, 697, 0, 1183,
	0, 0, 0, 0, 1183, 0, 1646, 0, 0, 0,
	0, 0, 0, 0, 0, 1183, 0, 0, 0, 0,
	240, 0, 1183, 0, 0, 0, 1183, 0, 0, 0,
	0, 0, 0, 240, 698, 0, 715, 0, 0, 0,
	0, 240, 0, 0, 1183, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 1183, 0, 0, 0, 1638, 0,
	699, 0, 0, 0, 700, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1633, 0,
	0, 723, 0, 0, 0, 1111, 0, 701, 0, 240,
	0, 0, 0, 240, 240, 1025, 0, 0, 0, 0,
	721, 1111, 0, 1650, 0, 0, 0, 0, 0, 0,
	0, 1789, 1183, 1183, 0, 238, 0, 0, 0, 0,
	240, 0, 0, 702, 0, 0, 1798, 0, 1282, 0,
	238, 0, 0, 0, 1183, 0, 0, 0, 0, 0,
	0, 0, 0, 703, 0, 0, 704, 0, 0, 0,
	0, 725, 0, 0, 0, 665, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1183, 0,
	240, 1183, 240, 0, 0, 0, 238, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1648, 0, 0, 0, 1623,
	1624, 1630, 1651, 1629, 1625, 240, 1622, 1620, 1621, 1613,
	1614, 1615, 1616, 1618, 1619, 0, 0, 0, 0, 0,
	0, 0, 0, 3238, 724, 0, 0, 0, 0, 0,
	0, 0, 238, 719, 0, 0, 0, 0, 0, 0,
	0, 0, 1183, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 1183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1115, 708, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 695, 0, 716, 102, 0, 102, 0, 102, 0,
	238, 1992, 709, 238, 0, 1999, 0, 238, 0, 238,
	0, 0, 0, 0, 0, 2010, 238, 238, 0, 0,
	0, 0, 0, 0, 0, 714, 0, 0, 1392, 1183,
	2021, 0, 2021, 0, 0, 0, 0, 0, 0, 710,
	0, 0, 728, 0, 727, 0, 0, 238, 711, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 712, 1415, 0, 0, 238, 720, 238, 0, 1282,
	102, 729, 0, 726, 937, 102, 102, 0, 0, 666,
	0, 0, 0, 0, 0, 0, 0, 102, 0, 102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 102,
	0, 102, 0, 0, 238, 238, 238, 238, 0, 238,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1999,
	0, 0, 2080, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 2099, 1183, 0, 0, 240, 102, 0,
	0, 0, 0, 0, 2109, 0, 2111, 240, 2113, 0,
	2115, 0, 2116, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	240, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	1183, 0, 0, 0, 0, 0, 0, 0, 0, 2137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1609, 1610, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1183, 1183, 1183, 0, 0, 0,
	0, 0, 1640, 0, 0, 0, 917, 0, 0, 1612,
	1183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1674, 240, 0, 1183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1611, 1679, 0, 0, 0, 1685, 0, 0,
	0, 1183, 1631, 0, 0, 0, 0, 0, 0, 0,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2785, 0, 0,
	0, 0, 0, 0, 0, 0, 1111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1634, 1635, 1636,
	1637, 1111, 0, 0, 0, 0, 0, 1617, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1115, 0, 0, 0, 1115, 0, 0, 0, 1115, 0,
	0, 1773, 0, 0, 0, 0, 1771, 0, 1774, 0,
	102, 1183, 0, 1183, 0, 1639, 1641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1115, 0, 0, 0, 1183, 2435, 0, 0, 0,
	1626, 1627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1115, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1632,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1183, 0, 240, 0, 240, 0, 0, 1183,
	0, 238, 238, 0, 238, 0, 0, 1115, 0, 240,
	2010, 1773, 0, 1115, 0, 0, 0, 1115, 0, 0,
	0, 0, 0, 0, 0, 238, 1183, 1183, 0, 0,
	0, 1115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 1183, 240, 0, 0, 0, 1183,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 1638, 0, 0, 0, 679, 0,
	0, 1115, 0, 0, 0, 0, 238, 0, 0, 0,
	238, 0, 0, 0, 1633, 0, 1183, 1183, 1183, 0,
	0, 0, 0, 0, 1282, 0, 0, 1183, 0, 0,
	0, 0, 0, 0, 0, 1111, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 1183, 238, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1999, 0, 0, 0, 0, 0,
	0, 2010, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1183, 0,
	1183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2656, 0, 1183, 1415, 0, 0, 0, 1415, 0,
	1415, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 238, 0, 1629,
	1625, 0, 1622, 1620, 1621, 1613, 1614, 1615, 1616, 1618,
	1619, 0, 0, 0, 0, 0, 0, 0, 2709, 0,
	0, 0, 0, 0, 1183, 0, 0, 0, 0, 0,
	238, 240, 0, 0, 1183, 1183, 2718, 244, 2721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 937, 0,
	937, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1609, 1610, 0, 0,
	0, 1183, 0, 0, 1183, 2743, 1282, 2745, 1282, 0,
	2748, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 0, 0, 0, 1612, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 671, 0, 240,
	240, 0, 0, 1415, 0, 0, 0, 0, 0, 0,
	0, 2776, 0, 0, 0, 1115, 0, 1115, 1611, 0,
	0, 671, 0, 0, 0, 0, 0, 994, 1631, 0,
	0, 0, 1115, 0, 0, 0, 1628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1111, 1111, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1115, 2778, 0, 240, 0, 0, 917, 0,
	0, 917, 917, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1634, 1635, 1636, 1637, 0, 0, 0,
	0, 0, 0, 1617, 0, 0, 0, 0, 240, 0,
	0, 1183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1183, 1183, 0, 0, 0, 1609, 1610, 0, 0,
	0, 0, 0, 0, 0, 0, 2250, 0, 1183, 0,
	0, 1639, 1641, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 937, 0, 0, 1612, 0, 0, 0, 0,
	0, 1679, 0, 0, 0, 1679, 1626, 1627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 1611, 0,
	0, 0, 0, 0, 0, 1632, 0, 240, 1631, 0,
	0, 0, 0, 238, 0, 0, 1628, 0, 0, 1115,
	1115, 0, 0, 0, 0, 240, 0, 0, 0, 1115,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 1098, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 1774, 0, 238, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1634, 1635, 1636, 1637, 0, 0, 0,
	1111, 0, 0, 1617, 0, 102, 0, 0, 0, 0,
	1638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2996, 0,
	1633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1639, 1641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3040, 3042, 0, 2010, 1626, 1627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1115, 0, 1115,
	0, 1115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1632, 0, 1115, 1115, 0,
	0, 0, 0, 0, 0, 0, 0, 102, 1115, 0,
	0, 0, 0, 0, 0, 0, 0, 752, 0, 0,
	1115, 0, 1115, 1115, 1115, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 102,
	0, 736, 0, 0, 0, 0, 0, 3109, 0, 0,
	0, 3113, 0, 0, 0, 1629, 1625, 0, 1622, 1620,
	1621, 1613, 1614, 1615, 1616, 1618, 1619, 0, 0, 0,
	0, 102, 0, 0, 102, 0, 102, 0, 737, 0,
	0, 0, 0, 0, 1111, 0, 0, 0, 0, 738,
	1638, 0, 1111, 0, 0, 1415, 0, 0, 0, 1282,
	1282, 0, 0, 0, 0, 1773, 0, 0, 739, 0,
	1633, 0, 0, 0, 0, 0, 0, 102, 0, 0,
	102, 0, 0, 0, 0, 758, 3171, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 1828, 1115, 0, 0,
	0, 0, 0, 0, 740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 741, 0, 238,
	0, 238, 0, 0, 0, 0, 3208, 0, 1282, 0,
	0, 0, 0, 0, 238, 0, 0, 742, 0, 0,
	743, 0, 1180, 0, 0, 0, 1180, 0, 0, 665,
	1300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3220, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 238, 0, 757, 1115, 0, 0, 0, 0, 0,
	238, 0, 0, 1300, 0, 1629, 1625, 0, 1622, 1620,
	1621, 1613, 1614, 1615, 1616, 1618, 1619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 754, 0, 0,
	0, 0, 0, 0, 0, 0, 1115, 0, 0, 0,
	0, 0, 1181, 1115, 0, 0, 1181, 0, 0, 1300,
	1301, 0, 1115, 0, 0, 1300, 0, 0, 0, 1300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1115,
	0, 0, 0, 1300, 0, 0, 0, 0, 2250, 745,
	0, 0, 0, 1301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1679,
	764, 0, 746, 0, 0, 0, 1301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1300, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 664, 0, 0, 0, 1115, 0,
	0, 747, 0, 0, 0, 762, 763, 760, 0, 1301,
	0, 0, 0, 755, 0, 1301, 748, 0, 0, 1301,
	0, 0, 0, 0, 0, 0, 0, 0, 1115, 0,
	0, 0, 0, 1301, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 749, 756, 0, 0, 0, 1828, 0,
	0, 0, 750, 0, 0, 0, 0, 829, 0, 871,
	0, 0, 0, 0, 0, 751, 0, 0, 0, 0,
	759, 0, 0, 1301, 0, 1115, 0, 0, 0, 0,
	0, 0, 837, 666, 0, 0, 0, 0, 1098, 1115,
	0, 0, 0, 0, 753, 0, 0, 0, 850, 835,
	834, 0, 0, 1098, 238, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2010, 0, 0, 836, 0, 0, 0,
	0, 839, 0, 2010, 0, 0, 879, 0, 0, 0,
	0, 0, 0, 3459, 847, 848, 0, 0, 0, 0,
	0, 864, 0, 0, 0, 0, 2010, 0, 0, 0,
	3473, 0, 0, 0, 0, 872, 841, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1115, 1115, 0, 1115, 0, 0, 0, 0,
	238, 0, 842, 0, 0, 0, 0, 1115, 0, 0,
	0, 870, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1115, 0, 0, 0, 102, 102, 0, 0,
	102, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3522, 0, 0, 0, 843, 0, 0,
	0, 0, 0, 0, 0, 833, 0, 0, 0, 0,
	0, 102, 102, 0, 1180, 102, 0, 0, 0, 0,
	0, 0, 0, 844, 845, 671, 0, 0, 0, 0,
	671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 852, 851, 1300, 0, 0, 0, 0, 0, 846,
	0, 0, 0, 861, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 1180, 0, 0, 0, 876, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 873, 0,
	238, 0, 0, 0, 0, 0, 0, 1098, 0, 0,
	937, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 102, 102, 840, 0, 0, 878, 0, 0, 0,
	0, 0, 0, 1301, 0, 0, 0, 0, 0, 0,
	0, 838, 0, 0, 0, 868, 869, 0, 0, 0,
	0, 0, 0, 0, 1181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 866, 0, 0, 0, 0,
	0, 0, 877, 862, 0, 855, 853, 3644, 858, 0,
	0, 1300, 1300, 0, 859, 0, 0, 831, 0, 874,
	2010, 1180, 0, 0, 1609, 1610, 0, 1642, 1643, 1644,
	1652, 1653, 1654, 0, 0, 0, 0, 0, 0, 832,
	0, 0, 0, 0, 0, 1645, 1640, 0, 0, 0,
	860, 0, 0, 1612, 0, 857, 0, 0, 0, 0,
	0, 1658, 0, 0, 0, 875, 0, 0, 0, 0,
	0, 0, 2010, 863, 0, 0, 0, 0, 0, 0,
	0, 3710, 0, 0, 0, 0, 1611, 1115, 1115, 0,
	0, 0, 0, 0, 865, 0, 1631, 0, 0, 0,
	0, 0, 1115, 0, 1628, 0, 0, 0, 0, 0,
	0, 1301, 1301, 0, 0, 0, 867, 0, 0, 0,
	1115, 1181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1115, 0, 0, 1115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 1115, 0, 0, 0, 1300,
	0, 1300, 0, 1300, 0, 0, 0, 0, 0, 0,
	0, 1634, 1635, 1636, 1637, 102, 0, 0, 0, 1300,
	1300, 1617, 0, 0, 0, 0, 0, 0, 0, 0,
	1300, 0, 0, 1098, 1098, 1828, 0, 0, 0, 0,
	0, 0, 1300, 0, 1300, 1300, 1300, 0, 0, 0,
	1649, 0, 1115, 1659, 0, 0, 0, 0, 0, 1639,
	1641, 0, 0, 0, 0, 671, 0, 0, 3795, 0,
	0, 0, 0, 0, 0, 1655, 0, 1656, 0, 0,
	0, 0, 0, 0, 1626, 1627, 0, 1115, 0, 0,
	0, 0, 0, 0, 0, 0, 1115, 0, 0, 1301,
	0, 1301, 1647, 1301, 0, 1115, 0, 0, 0, 0,
	1115, 0, 0, 1632, 0, 0, 0, 2010, 0, 1301,
	1301, 1115, 0, 0, 0, 0, 0, 0, 1115, 0,
	1301, 0, 1115, 0, 0, 0, 0, 0, 0, 1657,
	0, 0, 1301, 0, 1301, 1301, 1301, 0, 0, 0,
	1115, 0, 0, 0, 0, 0, 1646, 0, 0, 1180,
	1115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3906, 1282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1115, 1115,
	0, 0, 0, 0, 0, 0, 102, 0, 1633, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1115, 0, 0, 0, 0, 0, 1180, 0, 0, 0,
	0, 0, 1098, 1650, 0, 0, 0, 0, 0, 1181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1115, 0, 0, 1115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3973, 1180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1180, 0, 0, 0, 1648, 1181, 0, 1115, 1623,
	1624, 1630, 1651, 1629, 1625, 0, 1622, 1620, 1621, 1613,
	1614, 1615, 1616, 1618, 1619, 1115, 0, 0, 0, 0,
	0, 0, 0, 2846, 0, 1828, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4016, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4038, 1828, 1828, 0, 0, 0, 0,
	1300, 0, 0, 0, 0, 1181, 0, 0, 0, 0,
	0, 4050, 0, 0, 0, 0, 0, 0, 0, 0,
	102, 0, 0, 0, 0, 1828, 1098, 0, 0, 0,
	1180, 1181, 0, 0, 1098, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1115, 1115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1115, 0, 1180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1301, 1300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 1181, 0, 0,
	0, 0, 0, 0, 1300, 1300, 0, 1300, 0, 0,
	0, 1301, 0, 0, 0, 0, 0, 0, 0, 1300,
	1115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1300, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1115, 1115, 1115, 0, 1301, 1301, 0, 1301, 0, 0,
	0, 0, 0, 0, 0, 0, 1115, 0, 0, 1301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1301, 1115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1115, 0, 0, 0, 0,
	0, 0, 0, 1115, 0, 0, 0, 1115, 0, 1115,
	0, 0, 0, 0, 0, 0, 1115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1180, 0, 0, 0, 0, 0, 0, 0, 1115, 0,
	102, 0, 0, 0, 0, 1115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 102, 1180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1115, 1115, 0, 0, 0, 1180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1180, 0, 0,
	1115, 0, 0, 0, 0, 1115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1115, 1115, 1115, 0, 0, 0, 0, 0,
	0, 0, 0, 1115, 1300, 0, 0, 0, 0, 0,
	0, 0, 1181, 0, 102, 0, 0, 102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1181, 0, 0,
	0, 0, 0, 1115, 0, 0, 0, 0, 0, 1300,
	0, 0, 0, 0, 0, 0, 0, 1181, 1180, 0,
	0, 0, 0, 0, 1828, 0, 0, 1300, 0, 0,
	0, 0, 1300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1300, 1115, 0, 1115, 0, 0, 0,
	1300, 0, 0, 0, 1180, 0, 0, 0, 0, 1115,
	0, 671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1300, 0, 1301, 0, 0, 0, 0, 0,
	0, 0, 1300, 0, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1301,
	1115, 0, 0, 0, 0, 0, 0, 0, 1181, 0,
	1115, 1115, 0, 0, 0, 0, 0, 1301, 0, 0,
	0, 0, 1301, 0, 0, 0, 0, 0, 0, 0,
	1300, 1300, 0, 1301, 0, 0, 0, 0, 0, 0,
	1301, 0, 0, 0, 1181, 0, 0, 1115, 0, 0,
	1115, 0, 1300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1180, 0, 0, 1180,
	0, 0, 0, 0, 0, 1609, 1610, 0, 1642, 1643,
	1644, 1652, 1653, 1654, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1645, 1640, 0, 0,
	0, 0, 0, 0, 1612, 0, 0, 0, 0, 0,
	1301, 1301, 1658, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1301, 0, 0, 0, 0, 1611, 0, 0,
	1180, 0, 0, 0, 0, 0, 0, 1631, 0, 0,
	0, 0, 0, 0, 0, 1628, 0, 1180, 0, 0,
	0, 0, 0, 0, 0, 0, 1181, 0, 0, 1181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1115, 1115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1115, 0, 0, 0, 0, 0,
	0, 0, 1634, 1635, 1636, 1637, 0, 0, 0, 0,
	0, 0, 1617, 0, 0, 0, 0, 0, 0, 0,
	1181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1181, 0, 0,
	0, 1649, 0, 0, 1659, 0, 0, 0, 0, 0,
	1639, 1641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1655, 1180, 1656, 0,
	0, 0, 0, 0, 0, 1626, 1627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1657, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1300, 0, 0, 0, 0, 0, 0, 1638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1300, 0,
	0, 0, 0, 0, 1650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1300, 1300, 1300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1300, 0,
	0, 0, 1301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1180,
	0, 0, 0, 0, 0, 0, 1648, 0, 1301, 0,
	1623, 1624, 1630, 1651, 1629, 1625, 0, 1622, 1620, 1621,
	1613, 1614, 1615, 1616, 1618, 1619, 0, 0, 0, 0,
	0, 0, 0, 0, 2845, 0, 0, 0, 0, 0,
	0, 0, 1301, 1301, 1301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1180,
	0, 1180, 0, 1609, 1610, 0, 1642, 1643, 1644, 1652,
	1653, 1654, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1180, 1645, 1640, 0, 0, 0, 0,
	0, 0, 1612, 0, 0, 0, 0, 0, 0, 0,
	1658, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1611, 0, 0, 0, 0,
	1180, 0, 0, 0, 0, 1631, 0, 1180, 0, 0,
	0, 0, 0, 1628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1181,
	0, 1181, 0, 0, 1300, 1300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1181, 0, 0, 0, 0, 0, 0,
	0, 0, 1180, 0, 0, 0, 0, 1300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1634, 1635, 1636, 1637, 0, 0, 0, 0, 0, 0,
	1617, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1181, 0, 0, 0, 1300, 1300, 1300, 1181, 0, 0,
	0, 0, 0, 0, 0, 1180, 0, 0, 0, 1649,
	0, 0, 1659, 0, 0, 0, 0, 0, 1639, 1641,
	0, 0, 0, 0, 1301, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 1655, 1180, 1656, 0, 0, 0,
	0, 0, 0, 1626, 1627, 0, 0, 0, 0, 0,
	0, 0, 1181, 0, 0, 0, 0, 1301, 0, 0,
	0, 1647, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1632, 0, 0, 0, 1180, 0, 1300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1180, 0, 0, 1301, 1301, 1301, 0, 1657, 0,
	0, 0, 0, 0, 0, 1181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1181, 0, 0, 0, 0,
	0, 0, 1180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1300, 1300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1638, 0, 0,
	0, 0, 0, 0, 0, 0, 1181, 0, 1301, 0,
	0, 0, 0, 0, 0, 0, 0, 1633, 0, 1180,
	0, 1181, 1300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1650, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1301, 1301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1181,
	0, 0, 1301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1648, 0, 0, 0, 1623, 1624,
	1630, 1651, 1629, 1625, 0, 1622, 1620, 1621, 1613, 1614,
	1615, 1616, 1618, 1619, 0, 0, 0, 0, 0, 0,
	0, 0, 2842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1300,
	1300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1178, 0, 1301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1301,
	1301, 0, 0, 0, 248, 249, 250, 251, 252, 253,
	1184, 254, 255, 1185, 1186, 1187, 1301, 1188, 533, 1189,
	1190, 1191, 1192, 256, 257, 259, 258, 260, 261, 262,
	263, 534, 535, 0, 264, 536, 265, 537, 1193, 538,
	266, 267, 268, 269, 270, 1194, 1195, 0, 271, 539,
	540, 541, 1196, 272, 273, 542, 1197, 1264, 1198, 274,
	275, 276, 277, 278, 279, 280, 0, 1199, 282, 283,
	284, 281, 1200, 285, 0, 286, 287, 288, 289, 1201,
	290, 1056, 291, 292, 1202, 1203, 1205, 1204, 1206, 1207,
	1208, 293, 294, 295, 296, 0, 297, 543, 544, 1209,
	301, 298, 299, 1210, 302, 300, 1211, 303, 304, 305,
	1212, 1213, 306, 307, 308, 1214, 309, 310, 1215, 311,
	312, 313, 1216, 314, 315, 545, 316, 317, 318, 320,
	322, 319, 323, 324, 325, 326, 546, 547, 1217, 245,
	1218, 0, 0, 0, 0, 327, 328, 329, 548, 0,
	0, 0, 330, 1219, 331, 1220, 1221, 1057, 332, 333,
	549, 550, 334, 335, 1222, 336, 551, 1223, 552, 337,
	1224, 338, 339, 340, 341, 342, 553, 554, 555, 400,
	1059, 343, 344, 1225, 345, 346, 347, 348, 0, 0,
	0, 246, 349, 350, 352, 1226, 1058, 351, 556, 557,
	1227, 558, 1228, 353, 354, 1060, 559, 1061, 355, 356,
	357, 1062, 358, 0, 0, 0, 359, 360, 361, 362,
	363, 364, 1229, 365, 367, 366, 1230, 368, 560, 1063,
	369, 370, 1064, 1231, 371, 372, 373, 1232, 1233, 374,
	375, 376, 377, 0, 378, 379, 381, 383, 380, 382,
	387, 384, 385, 386, 389, 0, 388, 1065, 390, 391,
	392, 396, 395, 397, 394, 1066, 393, 1234, 247, 1067,
	398, 1235, 561, 399, 562, 401, 402, 1236, 0, 403,
	0, 1237, 1238, 405, 406, 407, 1239, 1240, 408, 409,
	563, 1068, 410, 1069, 564, 411, 412, 404, 413, 414,
	415, 416, 417, 418, 419, 420, 1241, 421, 422, 565,
	566, 567, 423, 568, 424, 425, 1242, 426, 0, 427,
	428, 429, 430, 431, 432, 433, 569, 435, 434, 436,
	1243, 437, 0, 0, 0, 0, 0, 438, 0, 440,
	441, 442, 439, 443, 444, 445, 446, 1244, 447, 448,
	449, 1070, 450, 451, 452, 453, 570, 454, 0, 455,
	456, 462, 463, 457, 458, 464, 465, 466, 467, 468,
	1245, 470, 471, 469, 472, 473, 474, 1246, 475, 459,
	460, 476, 477, 1071, 478, 479, 480, 481, 482, 483,
	571, 0, 484, 1247, 485, 486, 487, 488, 461, 489,
	494, 572, 490, 491, 492, 493, 573, 1248, 496, 497,
	0, 495, 1249, 498, 499, 500, 501, 502, 503, 321,
	504, 1250, 505, 574, 575, 576, 577, 1251, 512, 1252,
	506, 507, 578, 508, 579, 1253, 509, 510, 511, 0,
	513, 514, 1254, 1255, 515, 516, 517, 519, 520, 518,
	521, 1256, 522, 1257, 0, 523, 524, 525, 580, 581,
	582, 1258, 527, 526, 583, 1259, 1260, 1261, 1262, 528,
	529, 584, 530, 531, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1178, 0,
	0, 0, 0, 0, 0, 0, 2413, 0, 0, 0,
	0, 0, 0, 0, 2414, 248, 249, 250, 251, 252,
	253, 1184, 254, 255, 1185, 1186, 1187, 0, 1188, 533,
	1189, 1190, 1191, 1192, 256, 257, 259, 258, 260, 261,
	262, 263, 534, 535, 0, 264, 536, 265, 537, 1193,
	538, 266, 267, 268, 269, 270, 1194, 1195, 0, 271,
	539, 540, 541, 1196, 272, 273, 542, 1197, 1264, 1198,
	274, 275, 276, 277, 278, 279, 280, 0, 1199, 282,
	283, 284, 281, 1200, 285, 0, 286, 287, 288, 289,
	1201, 290, 1056, 291, 292, 1202, 1203, 1205, 1204, 1206,
	1207, 1208, 293, 294, 295, 296, 0, 297, 543, 544,
	1209, 301, 298, 299, 1210, 302, 300, 1211, 303, 304,
	305, 1212, 1213, 306, 307, 308, 1214, 309, 310, 1215,
	311, 312, 313, 1216, 314, 315, 545, 316, 317, 318,
	320, 322, 319, 323, 324, 325, 326, 546, 547, 1217,
	245, 1218, 0, 0, 0, 0, 327, 328, 329, 548,
	0, 0, 0, 330, 1219, 331, 1220, 1221, 1057, 332,
	333, 549, 550, 334, 335, 1222, 336, 551, 1223, 552,
	337, 1224, 338, 339, 340, 341, 342, 553, 554, 555,
	400, 1059, 343, 344, 1225, 345, 346, 347, 348, 0,
	0, 0, 246, 349, 350, 352, 1226, 1058, 351, 556,
	557, 1227, 558, 1228, 353, 354, 1060, 559, 1061, 355,
	356, 357, 1062, 358, 0, 0, 0, 359, 360, 361,
	362, 363, 364, 1229, 365, 367, 366, 1230, 368, 560,
	1063, 369, 370, 1064, 1231, 371, 372, 373, 1232, 1233,
	374, 375, 376, 377, 0, 378, 379, 381, 383, 380,
	382, 387, 384, 385, 386, 389, 0, 388, 1065, 390,
	391, 392, 396, 395, 397, 394, 1066, 393, 1234, 247,
	1067, 398, 1235, 561, 399, 562, 401, 402, 1236, 0,
	403, 0, 1237, 1238, 405, 406, 407, 1239, 1240, 408,
	409, 563, 1068, 410, 1069, 564, 411, 412, 404, 413,
	414, 415, 416, 417, 418, 419, 420, 1241, 421, 422,
	565, 566, 567, 423, 568, 424, 425, 1242, 426, 0,
	427, 428, 429, 430, 431, 432, 433, 569, 435, 434,
	436, 1243, 437, 0, 0, 0, 0, 0, 438, 0,
	440, 441, 442, 439, 443, 444, 445, 446, 1244, 447,
	448, 449, 1070, 450, 451, 452, 453, 570, 454, 0,
	455, 456, 462, 463, 457, 458, 464, 465, 466, 467,
	468, 1245, 470, 471, 469, 472, 473, 474, 1246, 475,
	459, 460, 476, 477, 1071, 478, 479, 480, 481, 482,
	483, 571, 0, 484, 1247, 485, 486, 487, 488, 461,
	489, 494, 572, 490, 491, 492, 493, 573, 1248, 496,
	497, 0, 495, 1249, 498, 499, 500, 501, 502, 503,
	321, 504, 1250, 505, 574, 575, 576, 577, 1251, 512,
	1252, 506, 507, 578, 508, 579, 1253, 509, 510, 511,
	0, 513, 514, 1254, 1255, 515, 516, 517, 519, 520,
	518, 521, 1256, 522, 1257, 0, 523, 524, 525, 580,
	581, 582, 1258, 527, 526, 583, 1259, 1260, 1261, 1262,
	528, 529, 584, 530, 531, 532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1178, 0, 0,
	0, 0, 3246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3248, 248, 249, 250, 251, 252, 253,
	1184, 254, 255, 1185, 1186, 1187, 0, 1188, 533, 1189,
	1190, 1191, 1192, 256, 257, 259, 258, 260, 261, 262,
	263, 534, 535, 0, 264, 536, 265, 537, 1193, 538,
	266, 267, 268, 269, 270, 1194, 1195, 0, 271, 539,
	540, 541, 1196, 272, 273, 542, 1197, 1264, 1198, 274,
	275, 276, 277, 278, 279, 280, 0, 1199, 282, 283,
	284, 281, 1200, 285, 0, 286, 287, 288, 289, 1201,
	290, 1056, 291, 292, 1202, 1203, 1205, 1204, 1206, 1207,
	1208, 293, 294, 295, 296, 0, 297, 543, 544, 1209,
	301, 298, 299, 1210, 302, 300, 1211, 303, 304, 305,
	1212, 1213, 306, 307, 308, 1214, 309, 310, 1215, 311,
	312, 313, 1216, 314, 315, 545, 316, 317, 318, 320,
	322, 319, 323, 324, 325, 326, 546, 547, 1217, 245,
	1218, 0, 0, 0, 0, 327, 328, 329, 548, 0,
	0, 0, 330, 1219, 331, 1220, 1221, 1057, 332, 333,
	549, 550, 334, 335, 1222, 336, 551, 1223, 552, 337,
	1224, 338, 339, 340, 341, 342, 553, 554, 555, 400,
	1059, 343, 344, 1225, 345, 346, 347, 348, 0, 0,
	0, 246, 349, 350, 352, 1226, 1058, 351, 556, 557,
	1227, 558, 1228, 353, 354, 1060, 559, 1061, 355, 356,
	357, 1062, 358, 0, 0, 0, 359, 360, 361, 362,
	363, 364, 1229, 365, 367, 366, 1230, 368, 560, 1063,
	369, 370, 1064, 1231, 371, 372, 373, 1232, 1233, 374,
	375, 376, 377, 0, 378, 379, 381, 383, 380, 382,
	387, 384, 385, 386, 389, 0, 388, 1065, 390, 391,
	392, 396, 395, 397, 394, 1066, 393, 1234, 247, 1067,
	398, 1235, 561, 399, 562, 401, 402, 1236, 0, 403,
	0, 1237, 1238, 405, 406, 407, 1239, 1240, 408, 409,
	563, 1068, 410, 1069, 564, 411, 412, 404, 413, 414,
	415, 416, 417, 418, 419, 420, 1241, 421, 422, 565,
	566, 567, 423, 568, 424, 425, 1242, 426, 0, 427,
	428, 429, 430, 431, 432, 433, 569, 435, 434, 436,
	1243, 437, 0, 0, 0, 0, 0, 438, 0, 440,
	441, 442, 439, 443, 444, 445, 446, 1244, 447, 448,
	449, 1070, 450, 451, 452, 453, 570, 454, 0, 455,
	456, 462, 463, 457, 458, 464, 465, 466, 467, 468,
	1245, 470, 471, 469, 472, 473, 474, 1246, 475, 459,
	460, 476, 477, 1071, 478, 479, 480, 481, 482, 483,
	571, 0, 484, 1247, 485, 486, 487, 488, 461, 489,
	494, 572, 490, 491, 492, 493, 573, 1248, 496, 497,
	0, 495, 1249, 498, 499, 500, 501, 502, 503, 321,
	504, 1250, 505, 574, 575, 576, 577, 1251, 512, 1252,
	506, 507, 578, 508, 579, 1253, 509, 510, 511, 0,
	513, 514, 1254, 1255, 515, 516, 517, 519, 520, 518,
	521, 1256, 522, 1257, 0, 523, 524, 525, 580, 581,
	582, 1258, 527, 526, 583, 1259, 1260, 1261, 1262, 528,
	529, 584, 530, 531, 532, 0, 0, 0, 0, 0,
	1178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3593, 248, 249, 250,
	251, 252, 253, 1184, 254, 255, 1185, 1186, 1187, 0,
	1188, 533, 1189, 1190, 1191, 1192, 256, 257, 259, 258,
	260, 261, 262, 263, 534, 535, 0, 264, 536, 265,
	537, 1193, 538, 266, 267, 268, 269, 270, 1194, 1195,
	0, 271, 539, 540, 541, 1196, 272, 273, 542, 1197,
	1264, 1198, 274, 275, 276, 277, 278, 279, 280, 0,
	1199, 282, 283, 284, 281, 1200, 285, 0, 286, 287,
	288, 289, 1201, 290, 1056, 291, 292, 1202, 1203, 1205,
	1204, 1206, 1207, 1208, 293, 294, 295, 296, 0, 297,
	543, 544, 1209, 301, 298, 299, 1210, 302, 300, 1211,
	303, 304, 305, 1212, 1213, 306, 307, 308, 1214, 309,
	310, 1215, 311, 312, 313, 1216, 314, 315, 545, 316,
	317, 318, 320, 322, 319, 323, 324, 325, 326, 546,
	547, 1217, 245, 1218, 0, 0, 0, 0, 327, 328,
	329, 548, 0, 0, 0, 330, 1219, 331, 1220, 1221,
	1057, 332, 333, 549, 550, 334, 335, 1222, 336, 551,
	1223, 552, 337, 1224, 338, 339, 340, 341, 342, 553,
	554, 555, 400, 1059, 343, 344, 1225, 345, 346, 347,
	348, 0, 0, 0, 246, 349, 350, 352, 1226, 1058,
	351, 556, 557, 1227, 558, 1228, 353, 354, 1060, 559,
	1061, 355, 356, 357, 1062, 358, 0, 0, 0, 359,
	360, 361, 362, 363, 364, 1229, 365, 367, 366, 1230,
	368, 560, 1063, 369, 370, 1064, 1231, 371, 372, 373,
	1232, 1233, 374, 375, 376, 377, 0, 378, 379, 381,
	383, 380, 382, 387, 384, 385, 386, 389, 0, 388,
	1065, 390, 391, 392, 396, 395, 397, 394, 1066, 393,
	1234, 247, 1067, 398, 1235, 561, 399, 562, 401, 402,
	1236, 0, 403, 0, 1237, 1238, 405, 406, 407, 1239,
	1240, 408, 409, 563, 1068, 410, 1069, 564, 411, 412,
	404, 413, 414, 415, 416, 417, 418, 419, 420, 1241,
	421, 422, 565, 566, 567, 423, 568, 424, 425, 1242,
	426, 0, 427, 428, 429, 430, 431, 432, 433, 569,
	435, 434, 436, 1243, 437, 0, 0, 0, 0, 0,
	438, 0, 440, 441, 442, 439, 443, 444, 445, 446,
	1244, 447, 448, 449, 1070, 450, 451, 452, 453, 570,
	454, 0, 455, 456, 462, 463, 457, 458, 464, 465,
	466, 467, 468, 1245, 470, 471, 469, 472, 473, 474,
	1246, 475, 459, 460, 476, 477, 1071, 478, 479, 480,
	481, 482, 483, 571, 0, 484, 1247, 485, 486, 487,
	488, 461, 489, 494, 572, 490, 491, 492, 493, 573,
	1248, 496, 497, 0, 495, 1249, 498, 499, 500, 501,
	502, 503, 321, 504, 1250, 505, 574, 575, 576, 577,
	1251, 512, 1252, 506, 507, 578, 508, 579, 1253, 509,
	510, 511, 0, 513, 514, 1254, 1255, 515, 516, 517,
	519, 520, 518, 521, 1256, 522, 1257, 0, 523, 524,
	525, 580, 581, 582, 1258, 527, 526, 583, 1259, 1260,
	1261, 1262, 528, 529, 584, 530, 531, 532, 1178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3760, 248, 249, 250, 251, 252,
	253, 1184, 254, 255, 1185, 1186, 1187, 0, 1188, 533,
	1189, 1190, 1191, 1192, 256, 257, 259, 258, 260, 261,
	262, 263, 534, 535, 0, 264, 536, 265, 537, 1193,
	538, 266, 267, 268, 269, 270, 1194, 1195, 0, 271,
	539, 540, 541, 1196, 272, 273, 542, 1197, 1264, 1198,
	274, 275, 276, 277, 278, 279, 280, 0, 1199, 282,
	283, 284, 281, 1200, 285, 0, 286, 287, 288, 289,
	1201, 290, 1056, 291, 292, 1202, 1203, 1205, 1204, 1206,
	1207, 1208, 293, 294, 295, 296, 0, 297, 543, 544,
	1209, 301, 298, 299, 1210, 302, 300, 1211, 303, 304,
	305, 1212, 1213, 306, 307, 308, 1214, 309, 310, 1215,
	311, 312, 313, 1216, 314, 315, 545, 316, 317, 318,
	320, 322, 319, 323, 324, 325, 326, 546, 547, 1217,
	245, 1218, 0, 0, 0, 0, 327, 328, 329, 548,
	0, 0, 0, 330, 1219, 331, 1220, 1221, 1057, 332,
	333, 549, 550, 334, 335, 1222, 336, 551, 1223, 552,
	337, 1224, 338, 339, 340, 341, 342, 553, 554, 555,
	400, 1059, 343, 344, 1225, 345, 346, 347, 348, 0,
	0, 0, 246, 349, 350, 352, 1226, 1058, 351, 556,
	557, 1227, 558, 1228, 353, 354, 1060, 559, 1061, 355,
	356, 357, 1062, 358, 0, 0, 0, 359, 360, 361,
	362, 363, 364, 1229, 365, 367, 366, 1230, 368, 560,
	1063, 369, 370, 1064, 1231, 371, 372, 373, 1232, 1233,
	374, 375, 376, 377, 0, 378, 379, 381, 383, 380,
	382, 387, 384, 385, 386, 389, 0, 388, 1065, 390,
	391, 392, 396, 395, 397, 394, 1066, 393, 1234, 247,
	1067, 398, 1235, 561, 399, 562, 401, 402, 1236, 0,
	403, 0, 1237, 1238, 405, 406, 407, 1239, 1240, 408,
	409, 563, 1068, 410, 1069, 564, 411, 412, 404, 413,
	414, 415, 416, 417, 418, 419, 420, 1241, 421, 422,
	565, 566, 567, 423, 568, 424, 425, 1242, 426, 0,
	427, 428, 429, 430, 431, 432, 433, 569, 435, 434,
	436, 1243, 437, 0, 0, 0, 0, 0, 438, 0,
	440, 441, 442, 439, 443, 444, 445, 446, 1244, 447,
	448, 449, 1070, 450, 451, 452, 453, 570, 454, 0,
	455, 456, 462, 463, 457, 458, 464, 465, 466, 467,
	468, 1245, 470, 471, 469, 472, 473, 474, 1246, 475,
	459, 460, 476, 477, 1071, 478, 479, 480, 481, 482,
	483, 571, 0, 484, 1247, 485, 486, 487, 488, 461,
	489, 494, 572, 490, 491, 492, 493, 573, 1248, 496,
	497, 0, 495, 1249, 498, 499, 500, 501, 502, 503,
	321, 504, 1250, 505, 574, 575, 576, 577, 1251, 512,
	1252, 506, 507, 578, 508, 579, 1253, 509, 510, 511,
	0, 513, 514, 1254, 1255, 515, 516, 517, 519, 520,
	518, 521, 1256, 522, 1257, 0, 523, 524, 525, 580,
	581, 582, 1258, 527, 526, 583, 1259, 1260, 1261, 1262,
	528, 529, 584, 530, 531, 532, 1178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3652, 248, 249, 250, 251, 252, 253, 1184,
	254, 255, 1185, 1186, 1187, 0, 1188, 533, 1189, 1190,
	1191, 1192, 256, 257, 259, 258, 260, 261, 262, 263,
	534, 535, 0, 264, 536, 265, 537, 1193, 538, 266,
	267, 268, 269, 270, 1194, 1195, 0, 271, 539, 540,
	541, 1196, 272, 273, 542, 1197, 1264, 1198, 274, 275,
	276, 277, 278, 279, 280, 0, 1199, 282, 283, 284,
	281, 1200, 285, 0, 286, 287, 288, 289, 1201, 290,
	1056, 291, 292, 1202, 1203, 1205, 1204, 1206, 1207, 1208,
	293, 294, 295, 296, 0, 297, 543, 544, 1209, 301,
	298, 299, 1210, 302, 300, 1211, 303, 304, 305, 1212,
	1213, 306, 307, 308, 1214, 309, 310, 1215, 311, 312,
	313, 1216, 314, 315, 545, 316, 317, 318, 320, 322,
	319, 323, 324, 325, 326, 546, 547, 1217, 245, 1218,
	0, 0, 0, 0, 327, 328, 329, 548, 0, 0,
	0, 330, 1219, 331, 1220, 1221, 1057, 332, 333, 549,
	550, 334, 335, 1222, 336, 551, 1223, 552, 337, 1224,
	338, 339, 340, 341, 342, 553, 554, 555, 400, 1059,
	343, 344, 1225, 345, 346, 347, 348, 0, 0, 0,
	246, 349, 350, 352, 1226, 1058, 351, 556, 557, 1227,
	558, 1228, 353, 354, 1060, 559, 1061, 355, 356, 357,
	1062, 358, 0, 0, 0, 359, 360, 361, 362, 363,
	364, 1229, 365, 367, 366, 1230, 368, 560, 1063, 369,
	370, 1064, 1231, 371, 372, 373, 1232, 1233, 374, 375,
	376, 377, 0, 378, 379, 381, 383, 380, 382, 387,
	384, 385, 386, 389, 0, 388, 1065, 390, 391, 392,
	396, 395, 397, 394, 1066, 393, 1234, 247, 1067, 398,
	1235, 561, 399, 562, 401, 402, 1236, 0, 403, 0,
	1237, 1238, 405, 406, 407, 1239, 1240, 408, 409, 563,
	1068, 410, 1069, 564, 411, 412, 404, 413, 414, 415,
	416, 417, 418, 419, 420, 1241, 421, 422, 565, 566,
	567, 423, 568, 424, 425, 1242, 426, 0, 427, 428,
	429, 430, 431, 432, 433, 569, 435, 434, 436, 1243,
	437, 0, 0, 0, 0, 0, 438, 0, 440, 441,
	442, 439, 443, 444, 445, 446, 1244, 447, 448, 449,
	1070, 450, 451, 452, 453, 570, 454, 0, 455, 456,
	462, 463, 457, 458, 464, 465, 466, 467, 468, 1245,
	470, 471, 469, 472, 473, 474, 1246, 475, 459, 460,
	476, 477, 1071, 478, 479, 480, 481, 482, 483, 571,
	0, 484, 1247, 485, 486, 487, 488, 461, 489, 494,
	572, 490, 491, 492, 493, 573, 1248, 496, 497, 0,
	495, 1249, 498, 499, 500, 501, 502, 503, 321, 504,
	1250, 505, 574, 575, 576, 577, 1251, 512, 1252, 506,
	507, 578, 508, 579, 1253, 509, 510, 511, 0, 513,
	514, 1254, 1255, 515, 516, 517, 519, 520, 518, 521,
	1256, 522, 1257, 0, 523, 524, 525, 580, 581, 582,
	1258, 527, 526, 583, 1259, 1260, 1261, 1262, 528, 529,
	584, 530, 531, 532, 1178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3523, 248, 249, 250, 251, 252, 253, 1184, 254, 255,
	1185, 1186, 1187, 0, 1188, 533, 1189, 1190, 1191, 1192,
	256, 257, 259, 258, 260, 261, 262, 263, 534, 535,
	0, 264, 536, 265, 537, 1193, 538, 266, 267, 268,
	269, 270, 1194, 1195, 0, 271, 539, 540, 541, 1196,
	272, 273, 542, 1197, 1264, 1198, 274, 275, 276, 277,
	278, 279, 280, 0, 1199, 282, 283, 284, 281, 1200,
	285, 0, 286, 287, 288, 289, 1201, 290, 1056, 291,
	292, 1202, 1203, 1205, 1204, 1206, 1207, 1208, 293, 294,
	295, 296, 0, 297, 543, 544, 1209, 301, 298, 299,
	1210, 302, 300, 1211, 303, 304, 305, 1212, 1213, 306,
	307, 308, 1214, 309, 310, 1215, 311, 312, 313, 1216,
	314, 315, 545, 316, 317, 318, 320, 322, 319, 323,
	324, 325, 326, 546, 547, 1217, 245, 1218, 0, 0,
	0, 0, 327, 328, 329, 548, 0, 0, 0, 330,
	1219, 331, 1220, 1221, 1057, 332, 333, 549, 550, 334,
	335, 1222, 336, 551, 1223, 552, 337, 1224, 338, 339,
	340, 341, 342, 553, 554, 555, 400, 1059, 343, 344,
	1225, 345, 346, 347, 348, 0, 0, 0, 246, 349,
	350, 352, 1226, 1058, 351, 556, 557, 1227, 558, 1228,
	353, 354, 1060, 559, 1061, 355, 356, 357, 1062, 358,
	0, 0, 0, 359, 360, 361, 362, 363, 364, 1229,
	365, 367, 366, 1230, 368, 560, 1063, 369, 370, 1064,
	1231, 371, 372, 373, 1232, 1233, 374, 375, 376, 377,
	0, 378, 379, 381, 383, 380, 382, 387, 384, 385,
	386, 389, 0, 388, 1065, 390, 391, 392, 396, 395,
	397, 394, 1066, 393, 1234, 247, 1067, 398, 1235, 561,
	399, 562, 401, 402, 1236, 0, 403, 0, 1237, 1238,
	405, 406, 407, 1239, 1240, 408, 409, 563, 1068, 410,
	1069, 564, 411, 412, 404, 413, 414, 415, 416, 417,
	418, 419, 420, 1241, 421, 422, 565, 566, 567, 423,
	568, 424, 425, 1242, 426, 0, 427, 428, 429, 430,
	431, 432, 433, 569, 435, 434, 436, 1243, 437, 0,
	0, 0, 0, 0, 438, 0, 440, 441, 442, 439,
	443, 444, 445, 446, 1244, 447, 448, 449, 1070, 450,
	451, 452, 453, 570, 454, 0, 455, 456, 462, 463,
	457, 458, 464, 465, 466, 467, 468, 1245, 470, 471,
	469, 472, 473, 474, 1246, 475, 459, 460, 476, 477,
	1071, 478, 479, 480, 481, 482, 483, 571, 0, 484,
	1247, 485, 486, 487, 488, 461, 489, 494, 572, 490,
	491, 492, 493, 573, 1248, 496, 497, 0, 495, 1249,
	498, 499, 500, 501, 502, 503, 321, 504, 1250, 505,
	574, 575, 576, 577, 1251, 512, 1252, 506, 507, 578,
	508, 579, 1253, 509, 510, 511, 0, 513, 514, 1254,
	1255, 515, 516, 517, 519, 520, 518, 521, 1256, 522,
	1257, 0, 523, 524, 525, 580, 581, 582, 1258, 527,
	526, 583, 1259, 1260, 1261, 1262, 528, 529, 584, 530,
	531, 532, 1178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3264, 248,
	249, 250, 251, 252, 253, 1184, 254, 255, 1185, 1186,
	1187, 0, 1188, 533, 1189, 1190, 1191, 1192, 256, 257,
	259, 258, 260, 261, 262, 263, 534, 535, 0, 264,
	536, 265, 537, 1193, 538, 266, 267, 268, 269, 270,
	1194, 1195, 0, 271, 539, 540, 541, 1196, 272, 273,
	542, 1197, 1264, 1198, 274, 275, 276, 277, 278, 279,
	280, 0, 1199, 282, 283, 284, 281, 1200, 285, 0,
	286, 287, 288, 289, 1201, 290, 1056, 291, 292, 1202,
	1203, 1205, 1204, 1206, 1207, 1208, 293, 294, 295, 296,
	0, 297, 543, 544, 1209, 301, 298, 299, 1210, 302,
	300, 1211, 303, 304, 305, 1212, 1213, 306, 307, 308,
	1214, 309, 310, 1215, 311, 312, 313, 1216, 314, 315,
	545, 316, 317, 318, 320, 322, 319, 323, 324, 325,
	326, 546, 547, 1217, 245, 1218, 0, 0, 0, 0,
	327, 328, 329, 548, 0, 0, 0, 330, 1219, 331,
	1220, 1221, 1057, 332, 333, 549, 550, 334, 335, 1222,
	336, 551, 1223, 552, 337, 1224, 338, 339, 340, 341,
	342, 553, 554, 555, 400, 1059, 343, 344, 1225, 345,
	346, 347, 348, 0, 0, 0, 246, 349, 350, 352,
	1226, 1058, 351, 556, 557, 1227, 558, 1228, 353, 354,
	1060, 559, 1061, 355, 356, 357, 1062, 358, 0, 0,
	0, 359, 360, 361, 362, 363, 364, 1229, 365, 367,
	366, 1230, 368, 560, 1063, 369, 370, 1064, 1231, 371,
	372, 373, 1232, 1233, 374, 375, 376, 377, 0, 378,
	379, 381, 383, 380, 382, 387, 384, 385, 386, 389,
	0, 388, 1065, 390, 391, 392, 396, 395, 397, 394,
	1066, 393, 1234, 247, 1067, 398, 1235, 561, 399, 562,
	401, 402, 1236, 0, 403, 0, 1237, 1238, 405, 406,
	407, 1239, 1240, 408, 409, 563, 1068, 410, 1069, 564,
	411, 412, 404, 413, 414, 415, 416, 417, 418, 419,
	420, 1241, 421, 422, 565, 566, 567, 423, 568, 424,
	425, 1242, 426, 0, 427, 428, 429, 430, 431, 432,
	433, 569, 435, 434, 436, 1243, 437, 0, 0, 0,
	0, 0, 438, 0, 440, 441, 442, 439, 443, 444,
	445, 446, 1244, 447, 448, 449, 1070, 450, 451, 452,
	453, 570, 454, 0, 455, 456, 462, 463, 457, 458,
	464, 465, 466, 467, 468, 1245, 470, 471, 469, 472,
	473, 474, 1246, 475, 459, 460, 476, 477, 1071, 478,
	479, 480, 481, 482, 483, 571, 0, 484, 1247, 485,
	486, 487, 488, 461, 489, 494, 572, 490, 491, 492,
	493, 573, 1248, 496, 497, 0, 495, 1249, 498, 499,
	500, 501, 502, 503, 321, 504, 1250, 505, 574, 575,
	576, 577, 1251, 512, 1252, 506, 507, 578, 508, 579,
	1253, 509, 510, 511, 0, 513, 514, 1254, 1255, 515,
	516, 517, 519, 520, 518, 521, 1256, 522, 1257, 0,
	523, 524, 525, 580, 581, 582, 1258, 527, 526, 583,
	1259, 1260, 1261, 1262, 528, 529, 584, 530, 531, 532,
	1178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3094, 248, 249, 250,
	251, 252, 253, 1184, 254, 255, 1185, 1186, 1187, 0,
	1188, 533, 1189, 1190, 1191, 1192, 256, 257, 259, 258,
	260, 261, 262, 263, 534, 535, 0, 264, 536, 265,
	537, 1193, 538, 266, 267, 268, 269, 270, 1194, 1195,
	0, 271, 539, 540, 541, 1196, 272, 273, 542, 1197,
	1264, 1198, 274, 275, 276, 277, 278, 279, 280, 0,
	1199, 282, 283, 284, 281, 1200, 285, 0, 286, 287,
	288, 289, 1201, 290, 1056, 291, 292, 1202, 1203, 1205,
	1204, 1206, 1207, 1208, 293, 294, 295, 296, 0, 297,
	543, 544, 1209, 301, 298, 299, 1210, 302, 300, 1211,
	303, 304, 305, 1212, 1213, 306, 307, 308, 1214, 309,
	310, 1215, 311, 312, 313, 1216, 314, 315, 545, 316,
	317, 318, 320, 322, 319, 323, 324, 325, 326, 546,
	547, 1217, 245, 1218, 0, 0, 0, 0, 327, 328,
	329, 548, 0, 0, 0, 330, 1219, 331, 1220, 1221,
	1057, 332, 333, 549, 550, 334, 335, 1222, 336, 551,
	1223, 552, 337, 1224, 338, 339, 340, 341, 342, 553,
	554, 555, 400, 1059, 343, 344, 1225, 345, 346, 347,
	348, 0, 0, 0, 246, 349, 350, 352, 1226, 1058,
	351, 556, 557, 1227, 558, 1228, 353, 354, 1060, 559,
	1061, 355, 356, 357, 1062, 358, 0, 0, 0, 359,
	360, 361, 362, 363, 364, 1229, 365, 367, 366, 1230,
	368, 560, 1063, 369, 370, 1064, 1231, 371, 372, 373,
	1232, 1233, 374, 375, 376, 377, 0, 378, 379, 381,
	383, 380, 382, 387, 384, 385, 386, 389, 0, 388,
	1065, 390, 391, 392, 396, 395, 397, 394, 1066, 393,
	1234, 247, 1067, 398, 1235, 561, 399, 562, 401, 402,
	1236, 0, 403, 0, 1237, 1238, 405, 406, 407, 1239,
	1240, 408, 409, 563, 1068, 410, 1069, 564, 411, 412,
	404, 413, 414, 415, 416, 417, 418, 419, 420, 1241,
	421, 422, 565, 566, 567, 423, 568, 424, 425, 1242,
	426, 0, 427, 428, 429, 430, 431, 432, 433, 569,
	435, 434, 436, 1243, 437, 0, 0, 0, 0, 0,
	438, 0, 440, 441, 442, 439, 443, 444, 445, 446,
	1244, 447, 448, 449, 1070, 450, 451, 452, 453, 570,
	454, 0, 455, 456, 462, 463, 457, 458, 464, 465,
	466, 467, 468, 1245, 470, 471, 469, 472, 473, 474,
	1246, 475, 459, 460, 476, 477, 1071, 478, 479, 480,
	481, 482, 483, 571, 0, 484, 1247, 485, 486, 487,
	488, 461, 489, 494, 572, 490, 491, 492, 493, 573,
	1248, 496, 497, 0, 495, 1249, 498, 499, 500, 501,
	502, 503, 321, 504, 1250, 505, 574, 575, 576, 577,
	1251, 512, 1252, 506, 507, 578, 508, 579, 1253, 509,
	510, 511, 0, 513, 514, 1254, 1255, 515, 516, 517,
	519, 520, 518, 521, 1256, 522, 1257, 0, 523, 524,
	525, 580, 581, 582, 1258, 527, 526, 583, 1259, 1260,
	1261, 1262, 528, 529, 584, 530, 531, 532, 1178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2296, 248, 249, 250, 251, 252,
	253, 1184, 254, 255, 1185, 1186, 1187, 0, 1188, 533,
	1189, 1190, 1191, 1192, 256, 257, 259, 258, 260, 261,
	262, 263, 534, 535, 0, 264, 536, 265, 537, 1193,
	538, 266, 267, 268, 269, 270, 1194, 1195, 0, 271,
	539, 540, 541, 1196, 272, 273, 542, 1197, 1264, 1198,
	274, 275, 276, 277, 278, 279, 280, 0, 1199, 282,
	283, 284, 281, 1200, 285, 0, 286, 287, 288, 289,
	1201, 290, 1056, 291, 292, 1202, 1203, 1205, 1204, 1206,
	1207, 1208, 293, 294, 295, 296, 0, 297, 543, 544,
	1209, 301, 298, 299, 1210, 302, 300, 1211, 303, 304,
	305, 1212, 1213, 306, 307, 308, 1214, 309, 310, 1215,
	311, 312, 313, 1216, 314, 315, 545, 316, 317, 318,
	320, 322, 319, 323, 324, 325, 326, 546, 547, 1217,
	245, 1218, 0, 0, 0, 0, 327, 328, 329, 548,
	0, 0, 0, 330, 1219, 331, 1220, 1221, 1057, 332,
	333, 549, 550, 334, 335, 1222, 336, 551, 1223, 552,
	337, 1224, 338, 339, 340, 341, 342, 553, 554, 555,
	400, 1059, 343, 344, 1225, 345, 346, 347, 348, 0,
	0, 0, 246, 349, 350, 352, 1226, 1058, 351, 556,
	557, 1227, 558, 1228, 353, 354, 1060, 559, 1061, 355,
	356, 357, 1062, 358, 0, 0, 0, 359, 360, 361,
	362, 363, 364, 1229, 365, 367, 366, 1230, 368, 560,
	1063, 369, 370, 1064, 1231, 371, 372, 373, 1232, 1233,
	374, 375, 376, 377, 0, 378, 379, 381, 383, 380,
	382, 387, 384, 385, 386, 389, 0, 388, 1065, 390,
	391, 392, 396, 395, 397, 394, 1066, 393, 1234, 247,
	1067, 398, 1235, 561, 399, 562, 401, 402, 1236, 0,
	403, 0, 1237, 1238, 405, 406, 407, 1239, 1240, 408,
	409, 563, 1068, 410, 1069, 564, 411, 412, 404, 413,
	414, 415, 416, 417, 418, 419, 420, 1241, 421, 422,
	565, 566, 567, 423, 568, 424, 425, 1242, 426, 0,
	427, 428, 429, 430, 431, 432, 433, 569, 435, 434,
	436, 1243, 437, 0, 0, 0, 0, 0, 438, 0,
	440, 441, 442, 439, 443, 444, 445, 446, 1244, 447,
	448, 449, 1070, 450, 451, 452, 453, 570, 454, 0,
	455, 456, 462, 463, 457, 458, 464, 465, 466, 467,
	468, 1245, 470, 471, 469, 472, 473, 474, 1246, 475,
	459, 460, 476, 477, 1071, 478, 479, 480, 481, 482,
	483, 571, 0, 484, 1247, 485, 486, 487, 488, 461,
	489, 494, 572, 490, 491, 492, 493, 573, 1248, 496,
	497, 0, 495, 1249, 498, 499, 500, 501, 502, 503,
	321, 504, 1250, 505, 574, 575, 576, 577, 1251, 512,
	1252, 506, 507, 578, 508, 579, 1253, 509, 510, 511,
	0, 513, 514, 1254, 1255, 515, 516, 517, 519, 520,
	518, 521, 1256, 522, 1257, 0, 523, 524, 525, 580,
	581, 582, 1258, 527, 526, 583, 1259, 1260, 1261, 1262,
	528, 529, 584, 530, 531, 532, 1276, 0, 1178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1973, 0, 0, 248, 249, 250, 251, 252,
	253, 1184, 254, 255, 1185, 1186, 1187, 0, 1188, 533,
	1189, 1190, 1191, 1192, 256, 257, 259, 258, 260, 261,
	262, 263, 534, 535, 0, 264, 536, 265, 537, 1193,
	538, 266, 267, 268, 269, 270, 1194, 1195, 0, 271,
	539, 540, 541, 1196, 272, 273, 542, 1197, 1264, 1198,
	274, 275, 276, 277, 278, 279, 280, 0, 1199, 282,
	283, 284, 281, 1200, 285, 0, 286, 287, 288, 289,
	1201, 290, 1056, 291, 292, 1202, 1203, 1205, 1204, 1206,
	1207, 1208, 293, 294, 295, 296, 0, 297, 543, 544,
	1209, 301, 298, 299, 1210, 302, 300, 1211, 303, 304,
	305, 1212, 1213, 306, 307, 308, 1214, 309, 310, 1215,
	311, 312, 313, 1216, 314, 315, 545, 316, 317, 318,
	320, 322, 319, 323, 324, 325, 326, 546, 547, 1217,
	245, 1218, 0, 0, 0, 0, 327, 328, 329, 548,
	0, 0, 0, 330, 1219, 331, 1220, 1221, 1057, 332,
	333, 549, 550, 334, 335, 1222, 336, 551, 1223, 552,
	337, 1224, 338, 339, 340, 341, 342, 553, 554, 555,
	400, 1059, 343, 344, 1225, 345, 346, 347, 348, 0,
	0, 0, 246, 349, 350, 352, 1226, 1058, 351, 556,
	557, 1227, 558, 1228, 353, 354, 1060, 559, 1061, 355,
	356, 357, 1062, 358, 0, 0, 0, 359, 360, 361,
	362, 363, 364, 1229, 365, 367, 366, 1230, 368, 560,
	1063, 369, 370, 1064, 1231, 371, 372, 373, 1232, 1233,
	374, 375, 376, 377, 0, 378, 379, 381, 383, 380,
	382, 387, 384, 385, 386, 389, 0, 388, 1065, 390,
	391, 392, 396, 395, 397, 394, 1066, 393, 1234, 247,
	1067, 398, 1235, 561, 399, 562, 401, 402, 1236, 0,
	403, 0, 1237, 1238, 405, 406, 407, 1239, 1240, 408,
	409, 563, 1068, 410, 1069, 564, 411, 412, 404, 413,
	414, 415, 416, 417, 418, 419, 420, 1241, 421, 422,
	565, 566, 567, 423, 568, 424, 425, 1242, 426, 0,
	427, 428, 429, 430, 431, 432, 433, 569, 435, 434,
	436, 1243, 437, 0, 0, 0, 0, 0, 438, 0,
	440, 441, 442, 439, 443, 444, 445, 446, 1244, 447,
	448, 449, 1070, 450, 451, 452, 453, 570, 454, 0,
	455, 456, 462, 463, 457, 458, 464, 465, 466, 467,
	468, 1245, 470, 471, 469, 472, 473, 474, 1246, 475,
	459, 460, 476, 477, 1071, 478, 479, 480, 481, 482,
	483, 571, 0, 484, 1247, 485, 486, 487, 488, 461,
	489, 494, 572, 490, 491, 492, 493, 573, 1248, 496,
	497, 0, 495, 1249, 498, 499, 500, 501, 502, 503,
	321, 504, 1250, 505, 574, 575, 576, 577, 1251, 512,
	1252, 506, 507, 578, 508, 579, 1253, 509, 510, 511,
	0, 513, 514, 1254, 1255, 515, 516, 517, 519, 520,
	518, 521, 1256, 522, 1257, 0, 523, 524, 525, 580,
	581, 582, 1258, 527, 526, 583, 1259, 1260, 1261, 1262,
	528, 529, 584, 530, 531, 532, 1175, 0, 1178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 249, 250, 251, 252,
	253, 1184, 254, 255, 1185, 1186, 1187, 0, 1188, 533,
	1189, 1190, 1191, 1192, 256, 257, 259, 258, 260, 261,
	262, 263, 534, 535, 0, 264, 536, 265, 537, 1193,
	538, 266, 267, 268, 269, 270, 1194, 1195, 0, 271,
	539, 540, 541, 1196, 272, 273, 542, 1197, 1264, 1198,
	274, 275, 276, 277, 278, 279, 280, 0, 1199, 282,
	283, 284, 281, 1200, 285, 0, 286, 287, 288, 289,
	1201, 290, 1056, 291, 292, 1202, 1203, 1205, 1204, 1206,
	1207, 1208, 293, 294, 295, 296, 0, 297, 543, 544,
	1209, 301, 298, 299, 1210, 302, 300, 1211, 303, 304,
	305, 1212, 1213, 306, 307, 308, 1214, 309, 310, 1215,
	311, 312, 313, 1216, 314, 315, 545, 316, 317, 318,
	320, 322, 319, 323, 324, 325, 326, 546, 547, 1217,
	245, 1218, 0, 0, 0, 0, 327, 328, 329, 548,
	0, 0, 0, 330, 1219, 331, 1220, 1221, 1057, 332,
	333, 549, 550, 334, 335, 1222, 336, 551, 1223, 552,
	337, 1224, 338, 339, 340, 341, 342, 553, 554, 555,
	400, 1059, 343, 344, 1225, 345, 346, 347, 348, 0,
	0, 0, 246, 349, 350, 352, 1226, 1058, 351, 556,
	557, 1227, 558, 1228, 353, 354, 1060, 559, 1061, 355,
	356, 357, 1062, 358, 0, 0, 0, 359, 360, 361,
	362, 363, 364, 1229, 365, 367, 366, 1230, 368, 560,
	1063, 369, 370, 1064, 1231, 371, 372, 373, 1232, 1233,
	374, 375, 376, 377, 0, 378, 379, 381, 383, 380,
	382, 387, 384, 385, 386, 389, 0, 388, 1065, 390,
	391, 392, 396, 395, 397, 394, 1066, 393, 1234, 247,
	1067, 398, 1235, 561, 399, 562, 401, 402, 1236, 0,
	403, 0, 1237, 1238, 405, 406, 407, 1239, 1240, 408,
	409, 563, 1068, 410, 1069, 564, 411, 412, 404, 413,
	414, 415, 416, 417, 418, 419, 420, 1241, 421, 422,
	565, 566, 567, 423, 568, 424, 425, 1242, 426, 0,
	427, 428, 429, 430, 431, 432, 433, 569, 435, 434,
	436, 1243, 437, 0, 0, 0, 0, 0, 438, 0,
	440, 441, 442, 439, 443, 444, 445, 446, 1244, 447,
	448, 449, 1070, 450, 451, 452, 453, 570, 454, 0,
	455, 456, 462, 463, 457, 458, 464, 465, 466, 467,
	468, 1245, 470, 471, 469, 472, 473, 474, 1246, 475,
	459, 460, 476, 477, 1071, 478, 479, 480, 481, 482,
	483, 571, 0, 484, 1247, 485, 486, 487, 488, 461,
	489, 494, 572, 490, 491, 492, 493, 573, 1248, 496,
	497, 0, 495, 1249, 498, 499, 500, 501, 502, 503,
	321, 504, 1250, 505, 574, 575, 576, 577, 1251, 512,
	1252, 506, 507, 578, 508, 579, 1253, 509, 510, 511,
	0, 513, 514, 1254, 1255, 515, 516, 517, 519, 520,
	518, 521, 1256, 522, 1257, 0, 523, 524, 525, 580,
	581, 582, 1258, 527, 526, 583, 1259, 1260, 1261, 1262,
	528, 529, 584, 530, 531, 532, 1178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 249, 250, 251, 252, 253, 1184,
	254, 255, 1185, 1186, 1187, 0, 1188, 533, 1189, 1190,
	1191, 1192, 256, 257, 259, 258, 260, 261, 262, 263,
	534, 535, 0, 264, 536, 265, 537, 1193, 538, 266,
	267, 268, 269, 270, 1194, 1195, 0, 271, 539, 540,
	541, 1196, 272, 273, 542, 1197, 1264, 1198, 274, 275,
	276, 277, 278, 279, 280, 0, 1199, 282, 283, 284,
	281, 1200, 285, 0, 286, 287, 288, 289, 1201, 290,
	1056, 291, 292, 1202, 1203, 1205, 1204, 1206, 1207, 1208,
	293, 294, 295, 296, 0, 297, 543, 544, 1209, 301,
	298, 299, 1210, 302, 300, 1211, 303, 304, 305, 1212,
	1213, 306, 307, 308, 1214, 309, 310, 1215, 311, 312,
	313, 1216, 314, 315, 545, 316, 317, 318, 320, 322,
	319, 323, 324, 325, 326, 546, 547, 1217, 245, 1218,
	0, 0, 0, 0, 327, 328, 329, 548, 0, 0,
	0, 330, 1219, 331, 1220, 1221, 1057, 332, 333, 549,
	550, 334, 335, 1222, 336, 551, 1223, 552, 337, 1224,
	338, 339, 340, 341, 342, 553, 554, 555, 400, 1059,
	343, 344, 1225, 345, 346, 347, 348, 0, 0, 0,
	246, 349, 350, 352, 1226, 1058, 351, 556, 557, 1227,
	558, 1228, 353, 354, 1060, 559, 1061, 355, 356, 357,
	1062, 358, 0, 0, 0, 359, 360, 361, 362, 363,
	364, 1229, 365, 367, 366, 1230, 368, 560, 1063, 369,
	370, 1064, 1231, 371, 372, 373, 1232, 1233, 374, 375,
	376, 377, 0, 378, 379, 381, 383, 380, 382, 387,
	384, 385, 386, 389, 0, 388, 1065, 390, 391, 392,
	396, 395, 397, 394, 1066, 393, 1234, 247, 1067, 398,
	1235, 561, 399, 562, 401, 402, 1236, 0, 403, 0,
	1237, 1238, 405, 406, 407, 1239, 1240, 408, 409, 563,
	1068, 410, 1069, 564, 411, 412, 404, 413, 414, 415,
	416, 417, 418, 419, 420, 1241, 421, 422, 565, 566,
	567, 423, 568, 424, 425, 1242, 426, 0, 427, 428,
	429, 430, 431, 432, 433, 569, 435, 434, 436, 1243,
	437, 0, 0, 0, 0, 0, 438, 0, 440, 441,
	442, 439, 443, 444, 445, 446, 1244, 447, 448, 449,
	1070, 450, 451, 452, 453, 570, 454, 0, 455, 456,
	462, 463, 457, 458, 464, 465, 466, 467, 468, 1245,
	470, 471, 469, 472, 473, 474, 1246, 475, 459, 460,
	476, 477, 1071, 478, 479, 480, 481, 482, 483, 571,
	0, 484, 1247, 485, 486, 487, 488, 461, 489, 494,
	572, 490, 491, 492, 493, 573, 1248, 496, 497, 0,
	495, 1249, 498, 499, 500, 501, 502, 503, 321, 504,
	1250, 505, 574, 575, 576, 577, 1251, 512, 1252, 506,
	507, 578, 508, 579, 1253, 509, 510, 511, 0, 513,
	514, 1254, 1255, 515, 516, 517, 519, 520, 518, 521,
	1256, 522, 1257, 0, 523, 524, 525, 580, 581, 582,
	1258, 527, 526, 583, 1259, 1260, 1261, 1262, 528, 529,
	584, 530, 531, 532, 2271, 0, 992, 964, 965, 966,
	962, 963, 975, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 249, 250, 251, 252, 253, 2268,
	254, 255, 0, 0, 0, 0, 0, 1016, 980, 0,
	0, 0, 256, 257, 259, 258, 260, 261, 262, 263,
	534, 1029, 0, 264, 1036, 265, 1035, 0, 1046, 266,
	267, 268, 269, 270, 982, 1015, 949, 271, 1075, 1076,
	541, 0, 272, 273, 1022, 0, 1003, 0, 274, 275,
	276, 277, 278, 279, 280, 0, 0, 282, 283, 284,
	281, 0, 285, 0, 286, 287, 288, 289, 0, 290,
	1056, 291, 292, 1006, 1004, 1005, 1012, 1008, 1007, 1011,
	293, 294, 295, 296, 1039, 297, 1033, 1032, 953, 301,
	298, 299, 0, 302, 300, 0, 303, 304, 305, 2269,
	0, 306, 1024, 308, 0, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 959, 316, 317, 318, 320, 322,
	319, 323, 324, 325, 326, 1047, 1048, 971, 245, 0,
	0, 0, 0, 0, 327, 328, 329, 1031, 0, 0,
	0, 330, 0, 331, 0, 0, 1057, 332, 333, 1044,
	1045, 334, 335, 0, 336, 1054, 0, 981, 337, 0,
	338, 339, 340, 341, 342, 1017, 1018, 1021, 400, 1059,
	343, 344, 0, 345, 346, 347, 348, 0, 0, 0,
	246, 349, 350, 352, 0, 1058, 351, 1026, 1027, 0,
	987, 0, 353, 354, 1060, 1019, 1061, 355, 356, 357,
	1062, 358, 0, 0, 0, 359, 360, 361, 362, 363,
	364, 0, 365, 367, 366, 0, 368, 1055, 1063, 369,
	370, 1064, 0, 371, 372, 373, 1010, 1009, 374, 375,
	376, 377, 0, 378, 379, 381, 383, 380, 382, 387,
	384, 385, 386, 389, 0, 388, 1065, 390, 391, 392,
	396, 395, 397, 394, 1066, 393, 950, 247, 1067, 398,
	972, 1020, 399, 1034, 401, 402, 0, 0, 403, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 409, 563,
	1068, 410, 1069, 1049, 411, 412, 404, 413, 414, 415,
	416, 417, 418, 419, 420, 0, 421, 422, 565, 566,
	1050, 423, 568, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 431, 432, 433, 1030, 435, 434, 436, 0,
	437, 0, 0, 0, 0, 0, 438, 0, 440, 441,
	442, 439, 443, 444, 445, 446, 0, 447, 448, 449,
	1070, 450, 451, 452, 453, 960, 454, 0, 455, 456,
	462, 463, 457, 458, 464, 465, 466, 467, 468, 0,
	470, 471, 469, 472, 473, 474, 1013, 475, 459, 460,
	476, 477, 1071, 478, 479, 480, 481, 482, 483, 1028,
	0, 484, 0, 485, 486, 487, 488, 461, 489, 494,
	1074, 490, 491, 492, 493, 1051, 0, 496, 497, 948,
	495, 0, 498, 499, 500, 501, 502, 503, 321, 504,
	0, 505, 1040, 1041, 1042, 1043, 0, 512, 0, 506,
	507, 1052, 508, 1053, 970, 509, 510, 511, 0, 513,
	514, 0, 954, 515, 516, 517, 519, 520, 518, 521,
	1014, 522, 0, 0, 523, 524, 525, 580, 1037, 1073,
	2267, 527, 526, 583, 0, 0, 0, 0, 528, 529,
	584, 530, 531, 532, 951, 0, 0, 0, 0, 0,
	0, 947, 0, 0, 0, 0, 0, 0, 945, 946,
	2270, 0, 0, 0, 0, 0, 0, 976, 2266, 0,
	938, 974, 992, 964, 965, 966, 962, 963, 975, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	249, 250, 251, 252, 253, 0, 254, 255, 0, 0,
	0, 0, 0, 1016, 980, 0, 0, 0, 256, 257,
	259, 258, 260, 261, 262, 263, 534, 1029, 0, 264,
	1036, 265, 1035, 0, 1046, 266, 267, 268, 269, 270,
	982, 1015, 949, 271, 1075, 1076, 541, 0, 272, 273,
	1022, 0, 1003, 0, 274, 275, 276, 277, 278, 279,
	280, 0, 0, 282, 283, 284, 281, 0, 285, 0,
	286, 287, 288, 289, 0, 290, 1056, 291, 292, 1006,
	1004, 1005, 1012, 1008, 1007, 1011, 293, 294, 295, 296,
	1039, 297, 1033, 1032, 953, 301, 298, 299, 0, 302,
	300, 0, 303, 304, 305, 0, 0, 306, 1024, 308,
	0, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	959, 316, 317, 318, 320, 322, 319, 323, 324, 325,
	326, 1047, 1048, 971, 245, 0, 0, 0, 0, 0,
	327, 328, 329, 1031, 0, 0, 0, 330, 0, 331,
	0, 0, 1057, 332, 333, 1044, 1045, 334, 335, 0,
	336, 1054, 0, 981, 337, 0, 338, 339, 340, 341,
	342, 1017, 1018, 1021, 400, 1059, 343, 344, 0, 345,
	346, 347, 348, 0, 0, 0, 246, 349, 350, 352,
	0, 1058, 351, 1026, 1027, 0, 987, 0, 353, 354,
	1060, 1019, 1061, 355, 356, 357, 1062, 358, 0, 0,
	0, 359, 360, 361, 362, 363, 364, 0, 365, 367,
	366, 0, 368, 1055, 1063, 369, 370, 1064, 0, 371,
	372, 373, 1010, 1009, 374, 375, 376, 377, 0, 378,
	379, 381, 383, 380, 382, 387, 384, 385, 386, 389,
	0, 388, 1065, 390, 391, 392, 396, 395, 397, 394,
	1066, 393, 950, 247, 1067, 398, 972, 1020, 399, 1034,
	401, 402, 0, 0, 403, 0, 0, 0, 405, 406,
	407, 0, 0, 408, 409, 563, 1068, 410, 1069, 1049,
	411, 412, 404, 413, 414, 415, 416, 417, 418, 419,
	420, 0, 421, 422, 565, 566, 1050, 423, 568, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 431, 432,
	433, 1030, 435, 434, 436, 0, 437, 0, 0, 0,
	0, 0, 438, 0, 440, 441, 442, 439, 443, 444,
	445, 446, 0, 447, 448, 449, 1070, 450, 451, 452,
	453, 960, 454, 0, 455, 456, 462, 463, 457, 458,
	464, 465, 466, 467, 468, 209, 470, 471, 469, 472,
	473, 474, 1013, 475, 459, 460, 476, 477, 1071, 478,
	479, 480, 481, 482, 483, 1028, 0, 484, 0, 485,
	486, 487, 488, 461, 489, 494, 1074, 490, 491, 492,
	493, 1051, 0, 496, 497, 948, 495, 211, 498, 499,
	500, 501, 502, 503, 321, 504, 0, 505, 1040, 1041,
	1042, 1043, 0, 512, 0, 506, 507, 1052, 508, 1053,
	970, 509, 510, 511, 0, 513, 514, 0, 954, 515,
	516, 517, 519, 520, 518, 521, 1014, 522, 0, 0,
	523, 524, 525, 1449, 1037, 1073, 0, 527, 526, 583,
	0, 0, 0, 203, 528, 529, 584, 530, 531, 532,
	951, 204, 0, 0, 0, 0, 0, 947, 0, 0,
	0, 0, 0, 0, 945, 946, 992, 964, 965, 966,
	962, 963, 975, 1684, 1682, 0, 0, 974, 0, 0,
	0, 0, 0, 248, 249, 250, 251, 252, 253, 0,
	254, 255, 0, 0, 0, 0, 0, 1016, 980, 0,
	0, 0, 256, 257, 259, 258, 260, 261, 262, 263,
	534, 1029, 0, 264, 1036, 265, 1035, 0, 1046, 266,
	267, 268, 269, 270, 982, 1015, 949, 271, 1075, 1076,
	541, 0, 272, 273, 1022, 0, 1003, 0, 274, 275,
	276, 277, 278, 279, 280, 0, 0, 282, 283, 284,
	281, 0, 285, 0, 286, 287, 288, 289, 0, 290,
	1056, 291, 292, 1006, 1004, 1005, 1012, 1008, 1007, 1011,
	293, 294, 295, 296, 1039, 297, 1033, 1032, 953, 301,
	298, 299, 0, 302, 300, 0, 303, 304, 305, 0,
	0, 306, 1024, 308, 0, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 959, 316, 317, 318, 320, 322,
	319, 323, 324, 325, 326, 1047, 1048, 971, 245, 0,
	0, 0, 0, 0, 327, 328, 329, 1031, 0, 0,
	0, 330, 0, 331, 0, 0, 1057, 332, 333, 1044,
	1045, 334, 335, 0, 336, 1054, 0, 981, 337, 0,
	338, 339, 340, 341, 342, 1017, 1018, 1021, 400, 1059,
	343, 344, 0, 345, 346, 347, 348, 0, 0, 0,
	246, 349, 350, 352, 0, 1058, 351, 1026, 1027, 0,
	987, 0, 353, 354, 1060, 1019, 1061, 355, 356, 357,
	1062, 358, 0, 0, 0, 359, 360, 361, 362, 363,
	364, 0, 365, 367, 366, 0, 368, 1055, 1063, 369,
	370, 1064, 0, 371, 372, 373, 1010, 1009, 374, 375,
	376, 377, 0, 378, 379, 381, 383, 380, 382, 387,
	384, 385, 386, 389, 0, 388, 1065, 390, 391, 392,
	396, 395, 397, 394, 1066, 393, 950, 247, 1067, 398,
	972, 1020, 399, 1034, 401, 402, 0, 0, 403, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 409, 563,
	1068, 410, 1069, 1049, 411, 412, 404, 413, 414, 415,
	416, 417, 418, 419, 420, 0, 421, 422, 565, 566,
	1050, 423, 568, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 431, 432, 433, 1030, 435, 434, 436, 0,
	437, 0, 0, 0, 0, 0, 438, 0, 440, 441,
	442, 439, 443, 444, 445, 446, 0, 447, 448, 449,
	1070, 450, 451, 452, 453, 960, 454, 0, 455, 456,
	462, 463, 457, 458, 464, 465, 466, 467, 468, 209,
	470, 471, 469, 472, 473, 474, 1013, 475, 459, 460,
	476, 477, 1071, 478, 479, 480, 481, 482, 483, 1028,
	0, 484, 0, 485, 486, 487, 488, 461, 489, 494,
	1074, 490, 491, 492, 493, 1051, 0, 496, 497, 948,
	495, 211, 498, 499, 500, 501, 502, 503, 321, 504,
	0, 505, 1040, 1041, 1042, 1043, 0, 512, 0, 506,
	507, 1052, 508, 1053, 970, 509, 510, 511, 0, 513,
	514, 0, 954, 515, 516, 517, 519, 520, 518, 521,
	1014, 522, 0, 0, 523, 524, 525, 1449, 1037, 1073,
	0, 527, 526, 583, 0, 0, 0, 203, 528, 529,
	584, 530, 531, 532, 951, 204, 0, 0, 0, 0,
	0, 947, 0, 0, 0, 0, 0, 0, 945, 946,
	992, 964, 965, 966, 962, 963, 975, 1684, 2798, 0,
	0, 974, 0, 0, 0, 0, 0, 248, 249, 250,
	251, 252, 253, 0, 254, 255, 0, 0, 0, 0,
	0, 1016, 980, 0, 0, 0, 256, 257, 259, 258,
	260, 261, 262, 263, 534, 1029, 0, 264, 1036, 265,
	1035, 0, 1046, 266, 267, 268, 269, 270, 982, 1015,
	949, 271, 1075, 1076, 541, 0, 272, 273, 1022, 0,
	1003, 0, 274, 275, 276, 277, 278, 279, 280, 0,
	0, 282, 283, 284, 281, 0, 285, 0, 286, 287,
	288, 289, 0, 290, 1056, 291, 292, 1006, 1004, 1005,
	1012, 1008, 1007, 1011, 293, 294, 295, 296, 1039, 297,
	1033, 1032, 953, 301, 298, 299, 0, 302, 300, 0,
	303, 304, 305, 0, 0, 306, 1024, 308, 0, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 959, 316,
	317, 318, 320, 322, 319, 323, 324, 325, 326, 1047,
	1048, 971, 245, 0, 0, 0, 0, 0, 327, 328,
	329, 1031, 0, 0, 0, 330, 0, 331, 0, 0,
	1057, 332, 333, 1044, 1045, 334, 335, 0, 336, 1054,
	0, 981, 337, 0, 338, 339, 340, 341, 342, 1017,
	1018, 1021, 400, 1059, 343, 344, 0, 345, 346, 347,
	348, 0, 0, 0, 246, 349, 350, 352, 0, 1058,
	351, 1026, 1027, 0, 987, 0, 353, 354, 1060, 1019,
	1061, 355, 356, 357, 1062, 358, 0, 0, 0, 359,
	360, 361, 362, 363, 364, 0, 365, 367, 366, 0,
	368, 1055, 1063, 369, 370, 1064, 0, 371, 372, 373,
	1010, 1009, 374, 375, 376, 377, 0, 378, 379, 381,
	383, 380, 382, 387, 384, 385, 386, 389, 0, 388,
	1065, 390, 391, 392, 396, 395, 397, 394, 1066, 393,
	950, 247, 1067, 398, 972, 1020, 399, 1034, 401, 402,
	0, 0, 403, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 409, 563, 1068, 410, 1069, 1049, 411, 412,
	404, 413, 414, 415, 416, 417, 418, 419, 420, 0,
	421, 422, 565, 566, 1050, 423, 568, 424, 425, 0,
	426, 0, 427, 428, 429, 430, 431, 432, 433, 1030,
	435, 434, 436, 0, 437, 0, 0, 0, 0, 0,
	438, 0, 440, 441, 442, 439, 443, 444, 445, 446,
	0, 447, 448, 449, 1070, 450, 451, 452, 453, 960,
	454, 0, 455, 456, 462, 463, 457, 458, 464, 465,
	466, 467, 468, 209, 470, 471, 469, 472, 473, 474,
	1013, 475, 459, 460, 476, 477, 1071, 478, 479, 480,
	481, 482, 483, 1028, 0, 484, 0, 485, 486, 487,
	488, 461, 489, 494, 1074, 490, 491, 492, 493, 1051,
	0, 496, 497, 948, 495, 211, 498, 499, 500, 501,
	502, 503, 321, 504, 0, 505, 1040, 1041, 1042, 1043,
	0, 512, 0, 506, 507, 1052, 508, 1053, 970, 509,
	510, 511, 0, 513, 514, 0, 954, 515, 516, 517,
	519, 520, 518, 521, 1014, 522, 0, 0, 523, 524,
	525, 1449, 1037, 1073, 0, 527, 526, 583, 0, 0,
	0, 203, 528, 529, 584, 530, 531, 532, 951, 204,
	0, 0, 0, 0, 0, 947, 0, 0, 0, 0,
	0, 0, 945, 946, 992, 964, 965, 966, 962, 963,
	975, 1684, 1682, 0, 0, 974, 0, 0, 0, 0,
	0, 248, 249, 250, 251, 252, 253, 0, 254, 255,
	0, 0, 0, 0, 0, 1016, 980, 0, 0, 0,
	256, 257, 259, 258, 260, 261, 262, 263, 534, 1029,
	0, 264, 1036, 265, 1035, 2375, 1046, 266, 267, 268,
	269, 270, 982, 1015, 949, 271, 1075, 1076, 541, 0,
	272, 273, 1022, 0, 1003, 0, 274, 275, 276, 277,
	278, 279, 280, 0, 0, 282, 283, 284, 281, 0,
	285, 0, 286, 287, 288, 289, 0, 290, 1056, 291,
	292, 1006, 1004, 1005, 1012, 1008, 1007, 1011, 293, 294,
	295, 296, 1039, 297, 1033, 1032, 953, 301, 298, 299,
	0, 302, 300, 0, 303, 304, 305, 0, 0, 306,
	1024, 308, 0, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 959, 316, 317, 318, 320, 322, 319, 323,
	324, 325, 326, 1047, 1048, 971, 245, 0, 0, 0,
	0, 0, 327, 328, 329, 1031, 0, 0, 0, 330,
	0, 331, 0, 2380, 1057, 332, 333, 1044, 1045, 334,
	335, 0, 336, 1054, 0, 981, 337, 0, 338, 339,
	340, 341, 342, 1017, 1018, 1021, 400, 1059, 343, 344,
	0, 345, 346, 347, 348, 0, 0, 0, 246, 349,
	350, 352, 0, 1058, 351, 1026, 1027, 0, 987, 0,
	353, 354, 1060, 1019, 1061, 355, 356, 357, 1062, 358,
	0, 0, 0, 359, 360, 361, 362, 363, 364, 0,
	365, 367, 366, 2376, 368, 1055, 1063, 369, 370, 1064,
	0, 371, 372, 373, 1010, 1009, 374, 375, 376, 377,
	0, 378, 379, 381, 383, 380, 382, 387, 384, 385,
	386, 389, 0, 388, 1065, 390, 391, 392, 396, 395,
	397, 394, 1066, 393, 950, 247, 1067, 398, 972, 1020,
	399, 1034, 401, 402, 0, 0, 403, 0, 0, 0,
	405, 406, 407, 0, 0, 408, 409, 563, 1068, 410,
	1069, 1049, 411, 412, 404, 413, 414, 415, 416, 417,
	418, 419, 420, 0, 421, 422, 565, 566, 1050, 423,
	568, 424, 425, 0, 426, 0, 427, 428, 429, 430,
	431, 432, 433, 1030, 435, 434, 436, 0, 437, 0,
	0, 0, 0, 0, 438, 0, 440, 441, 442, 439,
	443, 444, 445, 446, 0, 447, 448, 449, 1070, 450,
	451, 452, 453, 960, 454, 0, 455, 456, 462, 463,
	457, 458, 464, 465, 466, 467, 468, 0, 470, 471,
	469, 472, 473, 474, 1013, 475, 459, 460, 476, 477,
	1071, 478, 479, 480, 481, 482, 483, 1028, 0, 484,
	0, 485, 486, 487, 488, 461, 489, 494, 1074, 490,
	491, 492, 493, 1051, 0, 496, 497, 948, 495, 0,
	498, 499, 500, 501, 502, 503, 321, 504, 0, 505,
	1040, 1041, 1042, 1043, 0, 512, 2377, 506, 507, 1052,
	508, 1053, 970, 509, 510, 511, 0, 513, 514, 0,
	954, 515, 516, 517, 519, 520, 518, 521, 1014, 522,
	0, 0, 523, 524, 525, 580, 1037, 1073, 0, 527,
	526, 583, 0, 0, 0, 0, 528, 529, 584, 530,
	531, 532, 951, 0, 0, 0, 0, 0, 0, 947,
	0, 0, 0, 0, 0, 0, 945, 946, 0, 0,
	0, 0, 0, 0, 0, 976, 0, 0, 2316, 974,
	992, 964, 965, 966, 962, 963, 975, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 249, 250,
	251, 252, 253, 0, 254, 255, 0, 0, 0, 0,
	0, 1016, 980, 0, 0, 0, 256, 257, 259, 258,
	260, 261, 262, 263, 534, 1029, 0, 264, 1036, 265,
	1035, 0, 1046, 266, 267, 268, 269, 270, 982, 1015,
	949, 271, 1075, 1076, 541, 0, 272, 273, 1022, 0,
	1003, 0, 274, 275, 276, 277, 278, 279, 280, 0,
	0, 282, 283, 284, 281, 0, 285, 0, 286, 287,
	288, 289, 0, 290, 1056, 291, 292, 1006, 1004, 1005,
	1012, 1008, 1007, 1011, 293, 294, 295, 296, 1039, 297,
	1033, 1032, 953, 301, 298, 299, 0, 302, 300, 0,
	303, 304, 305, 0, 0, 306, 1024, 308, 0, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 959, 316,
	317, 318, 320, 322, 319, 323, 324, 325, 326, 1047,
	1048, 971, 245, 0, 0, 0, 0, 0, 327, 328,
	329, 1031, 0, 0, 0, 330, 0, 331, 0, 0,
	1057, 332, 333, 1044, 1045, 334, 335, 0, 336, 1054,
	0, 981, 337, 0, 338, 339, 340, 341, 342, 1017,
	1018, 1021, 400, 1059, 343, 344, 0, 345, 346, 347,
	348, 0, 0, 0, 246, 349, 350, 352, 0, 1058,
	351, 1026, 1027, 0, 987, 0, 353, 354, 1060, 1019,
	1061, 355, 356, 357, 1062, 358, 0, 0, 0, 359,
	360, 361, 362, 363, 364, 0, 365, 367, 366, 0,
	368, 1055, 1063, 369, 370, 1064, 0, 371, 372, 373,
	1010, 1009, 374, 375, 376, 377, 0, 378, 379, 381,
	383, 380, 382, 387, 384, 385, 386, 389, 0, 388,
	1065, 390, 391, 392, 396, 395, 397, 394, 1066, 393,
	950, 247, 1067, 398, 972, 1020, 399, 1034, 401, 402,
	0, 0, 403, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 409, 563, 1068, 410, 1069, 1049, 411, 412,
	404, 413, 414, 415, 416, 417, 418, 419, 420, 0,
	421, 422, 565, 566, 1050, 423, 568, 424, 425, 0,
	426, 0, 427, 428, 429, 430, 431, 432, 433, 1030,
	435, 434, 436, 0, 437, 0, 0, 0, 0, 0,
	438, 0, 440, 441, 442, 439, 443, 444, 445, 446,
	0, 447, 448, 449, 1070, 450, 451, 452, 453, 960,
	454, 0, 455, 456, 462, 463, 457, 458, 464, 465,
	466, 467, 468, 0, 470, 471, 469, 472, 473, 474,
	1013, 475, 459, 460, 476, 477, 1071, 478, 479, 480,
	481, 482, 483, 1028, 0, 484, 0, 485, 486, 487,
	488, 461, 489, 494, 1074, 490, 491, 492, 493, 1051,
	0, 496, 497, 948, 495, 0, 498, 499, 500, 501,
	502, 503, 321, 504, 0, 505, 1040, 1041, 1042, 1043,
	0, 512, 0, 506, 507, 1052, 508, 1053, 970, 509,
	510, 511, 0, 513, 514, 0, 954, 515, 516, 517,
	519, 520, 518, 521, 1014, 522, 0, 0, 523, 524,
	525, 580, 1037, 1073, 0, 527, 526, 583, 0, 0,
	0, 0, 528, 529, 584, 530, 531, 532, 951, 0,
	0, 0, 0, 0, 0, 947, 0, 0, 0, 0,
	0, 0, 945, 946, 0, 0, 0, 0, 0, 0,
	0, 976, 2314, 0, 2313, 974, 992, 964, 965, 966,
	962, 963, 975, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 249, 250, 251, 252, 253, 0,
	254, 255, 0, 0, 0, 0, 0, 1016, 980, 0,
	0, 0, 256, 257, 259, 258, 260, 261, 262, 263,
	534, 1029, 0, 264, 1036, 265, 1035, 0, 1046, 266,
	267, 268, 269, 270, 982, 1015, 949, 271, 1075, 1076,
	541, 0, 272, 273, 1022, 0, 1003, 0, 274, 275,
	276, 277, 278, 279, 280, 0, 0, 282, 283, 284,
	281, 0, 285, 0, 286, 287, 288, 289, 0, 290,
	1056, 291, 292, 1006, 1004, 1005, 1012, 1008, 1007, 1011,
	293, 294, 295, 296, 1039, 297, 1033, 1032, 953, 301,
	298, 299, 0, 302, 300, 0, 303, 304, 305, 0,
	0, 306, 1024, 308, 0, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 959, 316, 317, 318, 320, 322,
	319, 323, 324, 325, 326, 1047, 1048, 971, 245, 0,
	0, 0, 0, 0, 327, 328, 329, 1031, 0, 0,
	0, 330, 0, 331, 0, 0, 1057, 332, 333, 1044,
	1045, 334, 335, 0, 336, 1054, 0, 981, 337, 0,
	338, 339, 340, 341, 342, 1017, 1018, 1021, 400, 1059,
	343, 344, 0, 345, 346, 347, 348, 0, 0, 0,
	246, 349, 350, 352, 0, 1058, 351, 1026, 1027, 0,
	987, 0, 353, 354, 1060, 1019, 1061, 355, 356, 357,
	1062, 358, 0, 0, 0, 359, 360, 361, 362, 363,
	364, 0, 365, 367, 366, 0, 368, 1055, 1063, 369,
	370, 1064, 0, 371, 372, 373, 1010, 1009, 374, 375,
	376, 377, 0, 378, 379, 381, 383, 380, 382, 387,
	384, 385, 386, 389, 0, 388, 1065, 390, 391, 392,
	396, 395, 397, 394, 1066, 393, 950, 247, 1067, 398,
	972, 1020, 399, 1034, 401, 402, 0, 0, 403, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 409, 563,
	1068, 410, 1069, 1049, 411, 412, 404, 413, 414, 415,
	416, 417, 418, 419, 420, 0, 421, 422, 565, 566,
	1050, 423, 568, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 431, 432, 433, 1030, 435, 434, 436, 0,
	437, 0, 0, 0, 0, 0, 438, 0, 440, 441,
	442, 439, 443, 444, 445, 446, 0, 447, 448, 449,
	1070, 450, 451, 452, 453, 960, 454, 0, 455, 456,
	462, 463, 457, 458, 464, 465, 466, 467, 468, 0,
	470, 471, 469, 472, 473, 474, 1013, 475, 459, 460,
	476, 477, 1071, 478, 479, 480, 481, 482, 483, 1028,
	0, 484, 0, 485, 486, 487, 488, 461, 489, 494,
	1074, 490, 491, 492, 493, 1051, 0, 496, 497, 948,
	495, 0, 498, 499, 500, 501, 502, 503, 321, 504,
	0, 505, 1040, 1041, 1042, 1043, 0, 512, 0, 506,
	507, 1052, 508, 1053, 970, 509, 510, 511, 0, 513,
	514, 0, 954, 515, 516, 517, 519, 520, 518, 521,
	1014, 522, 0, 0, 523, 524, 525, 580, 1037, 1073,
	0, 527, 526, 583, 0, 0, 0, 0, 528, 529,
	584, 530, 531, 532, 951, 0, 0, 0, 0, 0,
	0, 947, 0, 0, 0, 0, 0, 0, 945, 946,
	0, 0, 0, 0, 0, 0, 0, 976, 2311, 0,
	2310, 974, 992, 964, 965, 966, 962, 963, 975, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	249, 250, 251, 252, 253, 0, 254, 255, 0, 0,
	0, 0, 0, 1016, 980, 0, 0, 0, 256, 257,
	259, 258, 260, 261, 262, 263, 534, 1029, 0, 264,
	1036, 265, 1035, 0, 1046, 266, 267, 268, 269, 270,
	982, 1015, 949, 271, 1075, 1076, 541, 0, 272, 273,
	1022, 0, 1003, 0, 274, 275, 276, 277, 278, 279,
	280, 0, 0, 282, 283, 284, 281, 0, 285, 0,
	286, 287, 288, 289, 0, 290, 1056, 291, 292, 1006,
	1004, 1005, 1012, 1008, 1007, 1011, 293, 294, 295, 296,
	1039, 297, 1033, 1032, 953, 301, 298, 299, 0, 302,
	300, 0, 303, 304, 305, 0, 0, 306, 1024, 308,
	0, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	959, 316, 317, 318, 320, 322, 319, 323, 324, 325,
	326, 1047, 1048, 971, 245, 0, 0, 0, 0, 0,
	327, 328, 329, 1031, 0, 0, 0, 330, 0, 331,
	0, 0, 1057, 332, 333, 1044, 1045, 334, 335, 0,
	336, 1054, 0, 981, 337, 0, 338, 339, 340, 341,
	342, 1017, 1018, 1021, 400, 1059, 343, 344, 0, 345,
	346, 347, 348, 0, 0, 0, 246, 349, 350, 352,
	0, 1058, 351, 1026, 1027, 0, 987, 0, 353, 354,
	1060, 1019, 1061, 355, 356, 357, 1062, 358, 0, 0,
	0, 359, 360, 361, 362, 363, 364, 0, 365, 367,
	366, 0, 368, 1055, 1063, 369, 370, 1064, 0, 371,
	372, 373, 1010, 1009, 374, 375, 376, 377, 0, 378,
	379, 381, 383, 380, 382, 387, 384, 385, 386, 389,
	0, 388, 1065, 390, 391, 392, 396, 395, 397, 394,
	1066, 393, 950, 247, 1067, 398, 972, 1020, 399, 1034,
	401, 402, 0, 0, 403, 0, 0, 0, 405, 406,
	407, 0, 0, 408, 409, 563, 1068, 410, 1069, 1049,
	411, 412, 404, 413, 414, 415, 416, 417, 418, 419,
	420, 0, 421, 422, 565, 566, 1050, 423, 568, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 431, 432,
	433, 1030, 435, 434, 436, 0, 437, 0, 0, 0,
	0, 0, 438, 0, 440, 441, 442, 439, 443, 444,
	445, 446, 0, 447, 448, 449, 1070, 450, 451, 452,
	453, 960, 454, 0, 455, 456, 462, 463, 457, 458,
	464, 465, 466, 467, 468, 0, 470, 471, 469, 472,
	473, 474, 1013, 475, 459, 460, 476, 477, 1071, 478,
	479, 480, 481, 482, 483, 1028, 0, 484, 0, 485,
	486, 487, 488, 461, 489, 494, 1074, 490, 491, 492,
	493, 1051, 0, 496, 497, 948, 495, 0, 498, 499,
	500, 501, 502, 503, 321, 504, 0, 505, 1040, 1041,
	1042, 1043, 0, 512, 0, 506, 507, 1052, 508, 1053,
	970, 509, 510, 511, 0, 513, 514, 0, 954, 515,
	516, 517, 519, 520, 518, 521, 1014, 522, 0, 0,
	523, 524, 525, 580, 1037, 1073, 0, 527, 526, 583,
	0, 0, 0, 0, 528, 529, 584, 530, 531, 532,
	951, 0, 0, 0, 0, 0, 0, 947, 0, 0,
	0, 0, 0, 0, 945, 946, 0, 0, 0, 0,
	0, 0, 0, 976, 2308, 0, 2307, 974, 992, 964,
	965, 966, 962, 963, 975, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 249, 250, 251, 252,
	253, 0, 254, 255, 0, 0, 0, 0, 0, 1016,
	980, 0, 0, 0, 256, 257, 259, 258, 260, 261,
	262, 263, 534, 1029, 0, 264, 1036, 265, 1035, 0,
	1046, 266, 267, 268, 269, 270, 982, 1015, 949, 271,
	1075, 1076, 541, 0, 272, 273, 1022, 0, 1003, 0,
	274, 275, 276, 277, 278, 279, 280, 0, 0, 282,
	283, 284, 281, 0, 285, 0, 286, 287, 288, 289,
	0, 290, 1056, 291, 292, 1006, 1004, 1005, 1012, 1008,
	1007, 1011, 293, 294, 295, 296, 1039, 297, 1033, 1032,
	953, 301, 298, 299, 0, 302, 300, 0, 303, 304,
	305, 0, 0, 306, 1024, 308, 0, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 959, 316, 317, 318,
	320, 322, 319, 323, 324, 325, 326, 1047, 1048, 971,
	245, 0, 0, 0, 0, 0, 327, 328, 329, 1031,
	0, 0, 0, 330, 0, 331, 0, 0, 1057, 332,
	333, 1044, 1045, 334, 335, 0, 336, 1054, 0, 981,
	337, 0, 338, 339, 340, 341, 342, 1017, 1018, 1021,
	400, 1059, 343, 344, 0, 345, 346, 347, 348, 0,
	0, 0, 246, 349, 350, 352, 0, 1058, 351, 1026,
	1027, 0, 987, 0, 353, 354, 1060, 1019, 1061, 355,
	356, 357, 1062, 358, 0, 0, 0, 359, 360, 361,
	362, 363, 364, 0, 365, 367, 366, 0, 368, 1055,
	1063, 369, 370, 1064, 0, 371, 372, 373, 1010, 1009,
	374, 375, 376, 377, 0, 378, 379, 381, 383, 380,
	382, 387, 384, 385, 386, 389, 0, 388, 1065, 390,
	391, 392, 396, 395, 397, 394, 1066, 393, 950, 247,
	1067, 398, 972, 1020, 399, 1034, 401, 402, 0, 0,
	403, 0, 0, 0, 405, 406, 407, 0, 0, 408,
	409, 563, 1068, 410, 1069, 1049, 411, 412, 404, 413,
	414, 415, 416, 417, 418, 419, 420, 0, 421, 422,
	565, 566, 1050, 423, 568, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 431, 432, 433, 1030, 435, 434,
	436, 0, 437, 0, 0, 0, 0, 0, 438, 0,
	440, 441, 442, 439, 443, 444, 445, 446, 0, 447,
	448, 449, 1070, 450, 451, 452, 453, 960, 454, 0,
	455, 456, 462, 463, 457, 458, 464, 465, 466, 467,
	468, 0, 470, 471, 469, 472, 473, 474, 1013, 475,
	459, 460, 476, 477, 1071, 478, 479, 480, 481, 482,
	483, 1028, 0, 484, 0, 485, 486, 487, 488, 461,
	489, 494, 1074, 490, 491, 492, 493, 1051, 0, 496,
	497, 948, 495, 0, 498, 499, 500, 501, 502, 503,
	321, 504, 0, 505, 1040, 1041, 1042, 1043, 0, 512,
	0, 506, 507, 1052, 508, 1053, 970, 509, 510, 511,
	0, 513, 514, 0, 954, 515, 516, 517, 519, 520,
	518, 521, 1014, 522, 0, 0, 523, 524, 525, 580,
	1037, 1073, 0, 527, 526, 583, 0, 0, 0, 0,
	528, 529, 584, 530, 531, 532, 951, 0, 0, 0,
	0, 0, 0, 947, 0, 0, 0, 0, 0, 0,
	945, 946, 0, 0, 0, 0, 0, 0, 0, 976,
	2305, 0, 1537, 974, 992, 964, 965, 966, 962, 963,
	975, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 249, 250, 251, 252, 253, 0, 254, 255,
	0, 0, 0, 0, 0, 1016, 980, 0, 0, 0,
	256, 257, 259, 258, 260, 261, 262, 263, 534, 1029,
	0, 264, 1036, 265, 1035, 0, 1046, 266, 267, 268,
	269, 270, 982, 1015, 949, 271, 1075, 1076, 541, 0,
	272, 273, 1022, 0, 1003, 0, 274, 275, 276, 277,
	278, 279, 280, 0, 0, 282, 283, 284, 281, 0,
	285, 0, 286, 287, 288, 289, 0, 290, 1056, 291,
	292, 1006, 1004, 1005, 1012, 1008, 1007, 1011, 293, 294,
	295, 296, 1039, 297, 1033, 1032, 953, 301, 298, 299,
	0, 302, 300, 0, 303, 304, 305, 0, 0, 306,
	1024, 308, 0, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 959, 316, 317, 318, 320, 322, 319, 323,
	324, 325, 326, 1047, 1048, 971, 245, 0, 0, 0,
	0, 0, 327, 328, 329, 1031, 0, 0, 0, 330,
	0, 331, 0, 0, 1057, 332, 333, 1044, 1045, 334,
	335, 0, 336, 1054, 0, 981, 337, 0, 338, 339,
	340, 341, 342, 1017, 1018, 1021, 400, 1059, 343, 344,
	0, 345, 346, 347, 348, 0, 0, 0, 246, 349,
	350, 352, 0, 1058, 351, 1026, 1027, 0, 987, 0,
	353, 354, 1060, 1019, 1061, 355, 356, 357, 1062, 358,
	0, 0, 0, 359, 360, 361, 362, 363, 364, 0,
	365, 367, 366, 0, 368, 1055, 1063, 369, 370, 1064,
	0, 371, 372, 373, 1010, 1009, 374, 375, 376, 377,
	0, 378, 379, 381, 383, 380, 382, 387, 384, 385,
	386, 389, 0, 388, 1065, 390, 391, 392, 396, 395,
	397, 394, 1066, 393, 950, 247, 1067, 398, 972, 1020,
	399, 1034, 401, 402, 0, 0, 403, 0, 0, 0,
	405, 406, 407, 0, 0, 408, 409, 563, 1068, 410,
	1069, 1049, 411, 412, 404, 413, 414, 415, 416, 417,
	418, 419, 420, 0, 421, 422, 565, 566, 1050, 423,
	568, 424, 425, 0, 426, 0, 427, 428, 429, 430,
	431, 432, 433, 1030, 435, 434, 436, 0, 437, 0,
	0, 0, 0, 0, 438, 0, 440, 441, 442, 439,
	443, 444, 445, 446, 0, 447, 448, 449, 1070, 450,
	451, 452, 453, 960, 454, 0, 455, 456, 462, 463,
	457, 458, 464, 465, 466, 467, 468, 0, 470, 471,
	469, 472, 473, 474, 1013, 475, 459, 460, 476, 477,
	1071, 478, 479, 480, 481, 482, 483, 1028, 0, 484,
	0, 485, 486, 487, 488, 461, 489, 494, 1074, 490,
	491, 492, 493, 1051, 0, 496, 497, 948, 495, 0,
	498, 499, 500, 501, 502, 503, 321, 504, 0, 505,
	1040, 1041, 1042, 1043, 0, 512, 0, 506, 507, 1052,
	508, 1053, 970, 509, 510, 511, 0, 513, 514, 0,
	954, 515, 516, 517, 519, 520, 518, 521, 1014, 522,
	0, 0, 523, 524, 525, 580, 1037, 1073, 0, 527,
	526, 583, 1536, 0, 0, 0, 528, 529, 584, 530,
	531, 532, 951, 0, 0, 0, 0, 0, 0, 947,
	0, 0, 0, 0, 0, 0, 945, 946, 0, 0,
	0, 0, 0, 0, 0, 976, 0, 0, 941, 974,
	992, 964, 965, 966, 962, 963, 975, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 249, 250,
	251, 252, 253, 0, 254, 255, 0, 0, 0, 0,
	0, 1016, 980, 0, 0, 0, 256, 257, 259, 258,
	260, 261, 262, 263, 534, 1029, 0, 264, 1036, 265,
	1035, 0, 1046, 266, 267, 268, 269, 270, 982, 1015,
	949, 271, 1075, 1076, 541, 0, 272, 273, 1022, 0,
	1003, 0, 274, 275, 276, 277, 278, 279, 280, 0,
	0, 282, 283, 284, 281, 0, 285, 0, 286, 287,
	288, 289, 0, 290, 1056, 291, 292, 1006, 1004, 1005,
	1012, 1008, 1007, 1011, 293, 294, 295, 296, 1039, 297,
	1033, 1032, 953, 301, 298, 299, 0, 302, 300, 0,
	303, 304, 305, 0, 0, 306, 1024, 308, 0, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 959, 316,
	317, 318, 320, 322, 319, 323, 324, 325, 326, 1047,
	1048, 971, 245, 0, 0, 0, 0, 0, 327, 328,
	329, 1031, 0, 0, 0, 330, 0, 331, 0, 0,
	1057, 332, 333, 1044, 1045, 334, 335, 0, 336, 1054,
	0, 981, 337, 0, 338, 339, 340, 341, 342, 1017,
	1018, 1021, 400, 1059, 343, 344, 0, 345, 346, 347,
	348, 0, 0, 0, 246, 349, 350, 352, 0, 1058,
	351, 1026, 1027, 0, 987, 0, 353, 354, 1060, 1019,
	1061, 355, 356, 357, 1062, 358, 0, 0, 0, 359,
	360, 361, 362, 363, 364, 0, 365, 367, 366, 0,
	368, 1055, 1063, 369, 370, 1064, 0, 371, 372, 373,
	1010, 1009, 374, 375, 376, 377, 0, 378, 379, 381,
	383, 380, 382, 387, 384, 385, 386, 389, 0, 388,
	1065, 390, 391, 392, 396, 395, 397, 394, 1066, 393,
	950, 247, 1067, 398, 972, 1020, 399, 1034, 401, 402,
	0, 0, 403, 0, 955, 0, 405, 406, 407, 0,
	0, 408, 409, 563, 1068, 410, 1069, 1049, 411, 412,
	404, 413, 414, 415, 416, 417, 418, 419, 420, 0,
	421, 422, 565, 566, 1050, 423, 568, 424, 425, 0,
	426, 0, 427, 428, 429, 430, 431, 432, 433, 1030,
	435, 434, 436, 0, 437, 0, 0, 0, 0, 0,
	438, 0, 440, 441, 442, 439, 443, 444, 445, 446,
	0, 447, 448, 449, 1070, 450, 451, 452, 453, 960,
	454, 0, 455, 456, 462, 463, 457, 458, 464, 465,
	466, 467, 468, 0, 470, 471, 469, 472, 473, 474,
	1013, 475, 459, 460, 476, 477, 1071, 478, 479, 480,
	481, 482, 483, 1028, 0, 484, 0, 485, 486, 487,
	488, 461, 489, 494, 1074, 490, 491, 492, 493, 1051,
	0, 496, 497, 948, 495, 0, 498, 499, 500, 501,
	502, 503, 321, 504, 0, 505, 1040, 1041, 1042, 1043,
	0, 512, 0, 506, 507, 1052, 508, 1053, 970, 509,
	510, 511, 0, 513, 514, 0, 954, 515, 516, 517,
	519, 520, 518, 521, 1014, 522, 0, 0, 523, 524,
	525, 580, 1037, 1073, 0, 527, 526, 583, 0, 0,
	0, 0, 528, 529, 584, 530, 531, 532, 951, 0,
	0, 0, 0, 0, 0, 947, 0, 0, 0, 0,
	0, 0, 945, 946, 992, 964, 965, 966, 962, 963,
	975, 976, 0, 0, 0, 974, 0, 0, 0, 0,
	0, 248, 249, 250, 251, 252, 253, 0, 254, 255,
	0, 0, 0, 0, 0, 1016, 980, 0, 0, 0,
	256, 257, 259, 258, 260, 261, 262, 263, 534, 1029,
	0, 264, 1036, 265, 1035, 0, 1046, 266, 267, 268,
	269, 270, 982, 1015, 949, 271, 1075, 1076, 541, 0,
	272, 273, 1022, 0, 1003, 0, 274, 275, 276, 277,
	278, 279, 280, 0, 0, 282, 283, 284, 281, 0,
	285, 0, 286, 287, 4028, 289, 0, 290, 1056, 291,
	292, 1006, 1004, 1005, 1012, 1008, 1007, 1011, 293, 294,
	295, 296, 1039, 297, 1033, 1032, 953, 301, 298, 299,
	0, 302, 300, 0, 303, 304, 305, 0, 0, 306,
	1024, 308, 0, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 959, 316, 317, 318, 320, 322, 319, 323,
	324, 325, 326, 1047, 1048, 971, 245, 0, 0, 0,
	0, 0, 327, 328, 329, 1031, 0, 0, 0, 330,
	0, 331, 0, 0, 1057, 332, 333, 1044, 1045, 334,
	335, 0, 336, 1054, 0, 981, 337, 0, 338, 339,
	340, 341, 342, 1017, 1018, 1021, 400, 1059, 343, 344,
	0, 345, 346, 347, 348, 0, 0, 0, 246, 349,
	350, 352, 0, 1058, 351, 1026, 1027, 0, 987, 0,
	353, 354, 1060, 1019, 1061, 355, 356, 357, 1062, 358,
	0, 0, 0, 359, 360, 361, 362, 363, 364, 0,
	365, 367, 366, 0, 368, 1055, 1063, 369, 370, 1064,
	0, 371, 372, 373, 1010, 1009, 374, 375, 376, 377,
	0, 378, 379, 381, 383, 380, 382, 387, 384, 385,
	386, 389, 0, 388, 1065, 390, 391, 392, 396, 395,
	397, 394, 1066, 393, 950, 247, 1067, 398, 972, 1020,
	399, 1034, 401, 402, 0, 0, 403, 0, 955, 0,
	405, 406, 407, 0, 0, 408, 409, 563, 1068, 410,
	1069, 1049, 411, 412, 404, 413, 414, 415, 416, 417,
	418, 419, 420, 0, 421, 422, 565, 566, 1050, 423,
	568, 424, 425, 0, 426, 0, 427, 428, 429, 430,
	431, 432, 433, 1030, 435, 434, 436, 0, 437, 0,
	0, 0, 0, 0, 438, 0, 440, 441, 442, 439,
	443, 444, 445, 446, 0, 447, 448, 449, 1070, 450,
	451, 452, 453, 960, 454, 0, 455, 456, 462, 463,
	457, 458, 464, 465, 466, 467, 468, 0, 470, 471,
	469, 472, 473, 474, 1013, 475, 459, 460, 476, 477,
	1071, 478, 479, 480, 481, 482, 483, 1028, 0, 484,
	0, 485, 486, 487, 488, 461, 489, 494, 1074, 490,
	491, 492, 493, 1051, 0, 496, 497, 948, 495, 0,
	498, 499, 500, 501, 502, 503, 321, 504, 0, 505,
	1040, 1041, 1042, 1043, 0, 512, 0, 506, 507, 1052,
	508, 1053, 970, 509, 510, 511, 0, 513, 514, 0,
	954, 515, 516, 517, 519, 520, 518, 521, 1014, 522,
	0, 0, 523, 524, 525, 580, 1037, 1073, 0, 527,
	526, 583, 0, 0, 0, 0, 528, 529, 584, 530,
	531, 532, 951, 0, 0, 0, 0, 0, 0, 947,
	0, 0, 0, 0, 0, 0, 945, 946, 992, 964,
	965, 966, 962, 963, 975, 976, 0, 0, 0, 974,
	0, 0, 0, 0, 0, 248, 249, 250, 251, 252,
	253, 0, 254, 255, 0, 0, 0, 0, 0, 1016,
	980, 0, 0, 0, 256, 257, 259, 258, 260, 261,
	262, 263, 534, 1029, 0, 264, 1036, 265, 1035, 0,
	1046, 266, 267, 268, 269, 270, 982, 1015, 949, 271,
	1075, 1076, 541, 0, 272, 273, 1022, 0, 1003, 0,
	274, 275, 276, 277, 278, 279, 280, 0, 0, 282,
	283, 284, 281, 0, 285, 0, 286, 287, 288, 289,
	0, 290, 1056, 291, 292, 1006, 1004, 1005, 1012, 1008,
	1007, 1011, 293, 294, 295, 296, 1039, 297, 1033, 1032,
	953, 301, 298, 299, 0, 302, 300, 0, 303, 304,
	305, 0, 0, 306, 1024, 308, 0, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 959, 316, 317, 318,
	320, 322, 319, 323, 324, 325, 326, 1047, 1048, 971,
	245, 0, 0, 0, 0, 0, 327, 328, 329, 1031,
	0, 0, 0, 330, 0, 331, 0, 0, 1057, 332,
	333, 1044, 1045, 334, 335, 0, 336, 1054, 0, 981,
	337, 0, 338, 339, 340, 341, 342, 1017, 1018, 1021,
	400, 1059, 343, 344, 0, 345, 346, 347, 348, 0,
	0, 0, 2185, 349, 350, 352, 0, 1058, 351, 1026,
	1027, 0, 987, 0, 353, 354, 1060, 1019, 1061, 355,
	356, 357, 1062, 358, 0, 0, 0, 359, 360, 361,
	362, 363, 364, 0, 365, 367, 366, 0, 368, 1055,
	1063, 369, 370, 1064, 0, 371, 372, 373, 1010, 1009,
	374, 375, 376, 377, 0, 378, 379, 381, 383, 380,
	382, 387, 384, 385, 386, 389, 0, 388, 1065, 390,
	391, 392, 396, 395, 397, 394, 1066, 393, 950, 247,
	1067, 398, 972, 1020, 399, 1034, 401, 402, 0, 0,
	403, 0, 0, 0, 405, 406, 407, 0, 0, 408,
	409, 563, 1068, 410, 1069, 1049, 411, 412, 404, 413,
	414, 415, 416, 417, 418, 419, 420, 0, 421, 422,
	565, 566, 1050, 423, 568, 424, 425, 2184, 426, 0,
	427, 428, 429, 430, 431, 432, 433, 1030, 435, 434,
	436, 0, 437, 0, 0, 0, 0, 0, 438, 0,
	440, 441, 442, 439, 443, 444, 445, 446, 0, 447,
	448, 449, 1070, 450, 451, 452, 453, 960, 454, 0,
	455, 456, 462, 463, 457, 458, 464, 465, 466, 467,
	468, 0, 470, 471, 469, 472, 473, 474, 1013, 475,
	459, 460, 476, 477, 1071, 478, 479, 480, 481, 482,
	483, 1028, 0, 484, 0, 485, 486, 487, 488, 461,
	489, 494, 1074, 490, 491, 492, 493, 1051, 0, 496,
	497, 948, 495, 0, 498, 499, 500, 501, 502, 503,
	321, 504, 0, 505, 1040, 1041, 1042, 1043, 0, 512,
	0, 506, 507, 1052, 508, 1053, 970, 509, 510, 511,
	0, 513, 514, 0, 954, 515, 516, 517, 519, 520,
	518, 521, 1014, 522, 0, 0, 523, 524, 525, 580,
	1037, 1073, 0, 527, 526, 583, 0, 0, 0, 0,
	528, 529, 584, 530, 531, 532, 951, 0, 0, 0,
	0, 0, 0, 947, 0, 0, 0, 0, 0, 0,
	945, 946, 992, 964, 965, 966, 962, 963, 975, 976,
	0, 0, 0, 974, 0, 0, 0, 0, 0, 248,
	249, 250, 251, 252, 253, 0, 254, 255, 0, 0,
	0, 0, 0, 1016, 980, 0, 0, 0, 256, 257,
	259, 258, 260, 261, 262, 263, 534, 1029, 0, 264,
	1036, 265, 1035, 0, 1046, 266, 267, 268, 269, 270,
	982, 1015, 949, 271, 1075, 1076, 541, 0, 272, 273,
	1022, 0, 1003, 0, 274, 275, 276, 277, 278, 279,
	280, 0, 0, 282, 283, 284, 281, 0, 285, 0,
	286, 287, 288, 289, 0, 290, 1056, 291, 292, 1006,
	1004, 1005, 1012, 1008, 1007, 1011, 293, 294, 295, 296,
	1039, 297, 1033, 1032, 953, 301, 298, 299, 0, 302,
	300, 0, 303, 304, 305, 0, 0, 306, 1024, 308,
	0, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	959, 316, 317, 318, 320, 322, 319, 323, 324, 325,
	326, 1047, 1048, 971, 245, 0, 0, 0, 0, 0,
	327, 328, 329, 1031, 0, 0, 0, 330, 0, 331,
	0, 0, 1057, 332, 333, 1044, 1045, 334, 335, 0,
	336, 1054, 0, 981, 337, 0, 338, 339, 340, 341,
	342, 1017, 1018, 1021, 400, 1059, 343, 344, 0, 345,
	346, 347, 348, 0, 0, 0, 246, 349, 350, 352,
	0, 1058, 351, 1026, 1027, 0, 987, 0, 353, 354,
	1060, 1019, 1061, 355, 356, 357, 1062, 358, 0, 0,
	0, 359, 360, 361, 362, 363, 364, 0, 365, 367,
	366, 0, 368, 1055, 1063, 369, 370, 1064, 0, 371,
	372, 373, 1010, 1009, 374, 375, 376, 377, 0, 378,
	379, 381, 383, 380, 382, 387, 384, 385, 386, 389,
	0, 388, 1065, 390, 391, 392, 396, 395, 397, 394,
	1066, 393, 950, 247, 1067, 398, 972, 1020, 399, 1034,
	401, 402, 0, 0, 403, 0, 955, 0, 405, 406,
	407, 0, 0, 408, 409, 563, 1068, 410, 1069, 1049,
	411, 412, 404, 413, 414, 415, 416, 417, 418, 419,
	420, 0, 421, 422, 565, 566, 1050, 423, 568, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 431, 432,
	433, 1030, 435, 434, 436, 0, 437, 0, 0, 0,
	0, 0, 438, 0, 440, 441, 442, 439, 443, 444,
	445, 446, 0, 447, 448, 449, 1070, 450, 451, 452,
	453, 960, 454, 0, 455, 456, 462, 463, 457, 458,
	464, 465, 466, 467, 468, 0, 470, 471, 469, 472,
	473, 474, 1013, 475, 459, 460, 476, 477, 1071, 478,
	479, 480, 481, 482, 483, 1028, 0, 484, 0, 485,
	486, 487, 488, 461, 489, 494, 1074, 490, 491, 492,
	493, 1051, 0, 496, 497, 948, 495, 0, 498, 499,
	500, 501, 502, 503, 321, 504, 0, 505, 1040, 1041,
	1042, 1043, 0, 512, 0, 506, 507, 1052, 508, 1053,
	970, 509, 510, 511, 0, 513, 514, 0, 954, 515,
	516, 517, 519, 520, 518, 521, 1014, 522, 0, 0,
	523, 524, 525, 580, 1037, 1073, 0, 527, 526, 583,
	0, 0, 0, 0, 528, 529, 584, 530, 531, 532,
	951, 0, 0, 0, 0, 0, 0, 947, 0, 0,
	0, 0, 0, 0, 945, 946, 992, 964, 965, 966,
	962, 963, 975, 976, 0, 0, 0, 974, 0, 0,
	0, 0, 0, 248, 249, 250, 251, 252, 253, 0,
	254, 255, 0, 0, 0, 0, 0, 1016, 980, 0,
	0, 0, 256, 257, 259, 258, 260, 261, 262, 263,
	534, 1029, 0, 264, 1036, 265, 1035, 0, 1046, 266,
	267, 268, 269, 270, 982, 1015, 949, 271, 1075, 1076,
	541, 0, 272, 273, 1022, 0, 1003, 0, 274, 275,
	276, 277, 278, 279, 280, 0, 0, 282, 283, 284,
	281, 0, 285, 0, 286, 287, 3823, 289, 0, 290,
	1056, 291, 292, 1006, 1004, 1005, 1012, 1008, 1007, 1011,
	293, 294, 295, 296, 1039, 297, 1033, 1032, 953, 301,
	298, 299, 0, 302, 300, 0, 303, 304, 305, 0,
	0, 306, 1024, 308, 0, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 959, 316, 317, 318, 320, 322,
	319, 323, 324, 325, 326, 1047, 1048, 971, 245, 0,
	0, 0, 0, 0, 327, 328, 329, 1031, 0, 0,
	0, 330, 0, 331, 0, 0, 1057, 332, 333, 1044,
	1045, 334, 335, 0, 336, 1054, 0, 981, 337, 0,
	338, 339, 340, 341, 342, 1017, 1018, 1021, 400, 1059,
	343, 344, 0, 345, 346, 347, 348, 0, 0, 0,
	246, 349, 350, 352, 0, 1058, 351, 1026, 1027, 0,
	987, 0, 353, 354, 1060, 1019, 1061, 355, 356, 357,
	1062, 358, 0, 0, 0, 359, 360, 361, 362, 363,
	364, 0, 365, 367, 366, 0, 368, 1055, 1063, 369,
	370, 1064, 0, 371, 372, 373, 1010, 1009, 374, 375,
	376, 377, 0, 378, 379, 381, 383, 380, 382, 387,
	384, 385, 386, 389, 0, 388, 1065, 390, 391, 392,
	396, 395, 397, 394, 1066, 393, 950, 247, 1067, 398,
	972, 1020, 399, 1034, 401, 402, 0, 0, 403, 0,
	955, 0, 405, 406, 407, 0, 0, 408, 409, 563,
	1068, 410, 1069, 1049, 411, 412, 404, 413, 414, 415,
	416, 417, 418, 419, 420, 0, 421, 422, 565, 566,
	1050, 423, 568, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 431, 432, 433, 1030, 435, 434, 436, 0,
	437, 0, 0, 0, 0, 0, 438, 0, 440, 441,
	442, 439, 443, 444, 445, 446, 0, 447, 448, 449,
	1070, 450, 451, 452, 453, 960, 454, 0, 455, 456,
	462, 463, 457, 458, 464, 465, 466, 467, 468, 0,
	470, 471, 469, 472, 473, 474, 1013, 475, 459, 460,
	476, 477, 1071, 478, 479, 480, 481, 482, 483, 1028,
	0, 484, 0, 485, 486, 487, 488, 461, 489, 494,
	1074, 490, 491, 492, 493, 1051, 0, 496, 497, 948,
	495, 0, 498, 499, 500, 501, 502, 503, 321, 504,
	0, 505, 1040, 1041, 1042, 1043, 0, 512, 0, 506,
	507, 1052, 508, 1053, 970, 509, 510, 511, 0, 513,
	514, 0, 954, 515, 516, 517, 519, 520, 518, 521,
	1014, 522, 0, 0, 523, 524, 525, 580, 1037, 1073,
	0, 527, 526, 583, 0, 0, 0, 0, 528, 529,
	584, 530, 531, 532, 951, 0, 0, 0, 0, 0,
	0, 947, 0, 0, 0, 0, 0, 0, 945, 946,
	992, 964, 965, 966, 962, 963, 975, 976, 0, 0,
	0, 974, 0, 0, 0, 0, 0, 248, 249, 250,
	251, 252, 253, 0, 254, 255, 0, 0, 0, 0,
	0, 1016, 980, 0, 0, 0, 256, 257, 259, 258,
	260, 261, 262, 263, 534, 1029, 0, 264, 1036, 265,
	1035, 0, 1046, 266, 267, 268, 269, 270, 982, 1015,
	949, 271, 1075, 1076, 541, 0, 272, 273, 1022, 0,
	1003, 0, 274, 275, 276, 277, 278, 279, 280, 0,
	0, 282, 283, 284, 281, 0, 285, 0, 286, 287,
	288, 289, 0, 290, 1056, 291, 292, 1006, 1004, 1005,
	1012, 1008, 1007, 1011, 293, 294, 295, 296, 1039, 297,
	1033, 1032, 953, 301, 298, 299, 0, 302, 300, 0,
	303, 304, 305, 0, 0, 306, 1024, 308, 0, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 959, 316,
	317, 318, 320, 322, 319, 323, 324, 325, 326, 1047,
	1048, 971, 245, 0, 0, 0, 0, 0, 327, 328,
	329, 1031, 0, 0, 0, 330, 0, 331, 0, 0,
	1057, 332, 333, 1044, 1045, 334, 335, 0, 336, 1054,
	0, 981, 337, 0, 338, 339, 340, 341, 342, 1017,
	1018, 1021, 400, 1059, 343, 344, 0, 345, 346, 347,
	348, 0, 0, 0, 246, 349, 350, 352, 0, 1058,
	351, 1026, 1027, 0, 987, 0, 353, 354, 1060, 1019,
	1061, 355, 356, 357, 1062, 358, 0, 0, 0, 359,
	360, 361, 362, 363, 364, 0, 365, 367, 366, 0,
	368, 1055, 1063, 369, 370, 1064, 0, 371, 372, 373,
	1010, 1009, 374, 375, 376, 377, 0, 378, 379, 381,
	383, 380, 382, 387, 384, 385, 386, 389, 0, 388,
	1065, 390, 391, 392, 396, 395, 397, 394, 1066, 393,
	950, 3485, 1067, 398, 972, 1020, 399, 1034, 401, 402,
	0, 0, 403, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 409, 563, 1068, 410, 1069, 1049, 411, 412,
	404, 413, 414, 415, 416, 417, 418, 419, 420, 0,
	421, 422, 565, 566, 1050, 423, 568, 424, 425, 0,
	426, 0, 427, 428, 429, 430, 431, 432, 433, 1030,
	435, 434, 436, 0, 437, 0, 0, 0, 0, 0,
	438, 0, 440, 441, 442, 439, 443, 444, 445, 446,
	0, 447, 448, 449, 1070, 450, 451, 452, 453, 960,
	454, 0, 455, 456, 462, 463, 457, 458, 464, 465,
	466, 467, 468, 0, 470, 471, 469, 472, 473, 474,
	1013, 475, 459, 460, 476, 477, 1071, 478, 479, 480,
	481, 482, 483, 1028, 0, 484, 0, 485, 486, 487,
	488, 461, 489, 494, 1074, 490, 491, 492, 493, 1051,
	0, 496, 497, 948, 495, 0, 498, 499, 500, 501,
	502, 503, 321, 504, 0, 505, 1040, 1041, 1042, 1043,
	0, 512, 0, 506, 507, 1052, 508, 1053, 970, 509,
	510, 511, 0, 513, 514, 0, 954, 515, 516, 517,
	519, 520, 518, 521, 1014, 522, 0, 0, 523, 524,
	525, 580, 1037, 1073, 0, 527, 526, 583, 0, 0,
	0, 0, 528, 529, 584, 530, 531, 532, 951, 0,
	0, 0, 0, 0, 0, 947, 0, 0, 0, 0,
	0, 0, 945, 946, 1752, 0, 0, 0, 0, 0,
	0, 976, 0, 0, 0, 974, 992, 964, 965, 966,
	962, 963, 975, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 249, 250, 251, 252, 253, 0,
	254, 255, 0, 0, 0, 0, 0, 1016, 980, 0,
	0, 0, 256, 257, 259, 258, 260, 261, 262, 263,
	534, 1029, 0, 264, 1036, 265, 1035, 0, 1046, 266,
	267, 268, 269, 270, 982, 1015, 949, 271, 1075, 1076,
	541, 0, 272, 273, 1022, 0, 1003, 0, 274, 275,
	276, 277, 278, 279, 280, 0, 0, 282, 283, 284,
	281, 0, 285, 0, 286, 287, 288, 289, 0, 290,
	1056, 291, 292, 1006, 1004, 1005, 1012, 1008, 1007, 1011,
	293, 294, 295, 296, 1039, 297, 1033, 1032, 953, 301,
	298, 299, 0, 302, 300, 0, 303, 304, 305, 0,
	0, 306, 1024, 308, 0, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 959, 316, 317, 318, 320, 322,
	319, 323, 324, 325, 326, 1047, 1048, 971, 245, 0,
	0, 0, 0, 0, 327, 328, 329, 1031, 0, 0,
	0, 330, 0, 331, 0, 0, 1057, 332, 333, 1044,
	1045, 334, 335, 0, 336, 1054, 0, 981, 337, 0,
	338, 339, 340, 341, 342, 1017, 1018, 1021, 400, 1059,
	343, 344, 0, 345, 346, 347, 348, 0, 0, 0,
	246, 349, 350, 352, 0, 1058, 351, 1026, 1027, 0,
	987, 0, 353, 354, 1060, 1019, 1061, 355, 356, 357,
	1062, 358, 0, 0, 0, 359, 360, 361, 362, 363,
	364, 0, 365, 367, 366, 0, 368, 1055, 1063, 369,
	370, 1064, 0, 371, 372, 373, 1010, 1009, 374, 375,
	376, 377, 0, 378, 379, 381, 383, 380, 382, 387,
	384, 385, 386, 389, 0, 388, 1065, 390, 391, 392,
	396, 395, 397, 394, 1066, 393, 950, 247, 1067, 398,
	972, 1020, 399, 1034, 401, 402, 0, 0, 403, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 409, 563,
	1068, 410, 1069, 1049, 411, 412, 404, 413, 414, 415,
	416, 417, 418, 419, 420, 0, 421, 422, 565, 566,
	1050, 423, 568, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 431, 432, 433, 1030, 435, 434, 436, 0,
	437, 0, 0, 0, 0, 0, 438, 0, 440, 441,
	442, 439, 443, 444, 445, 446, 0, 447, 448, 449,
	1070, 450, 451, 452, 453, 960, 454, 0, 455, 456,
	462, 463, 457, 458, 464, 465, 466, 467, 468, 0,
	470, 471, 469, 472, 473, 474, 1013, 475, 459, 460,
	476, 477, 1071, 478, 479, 480, 481, 482, 483, 1028,
	0, 484, 0, 485, 486, 487, 488, 461, 489, 494,
	1074, 490, 491, 492, 493, 1051, 0, 496, 497, 948,
	495, 0, 498, 499, 500, 501, 502, 503, 321, 504,
	0, 505, 1040, 1041, 1042, 1043, 0, 512, 0, 506,
	507, 1052, 508, 1053, 970, 509, 510, 511, 0, 513,
	514, 0, 954, 515, 516, 517, 519, 520, 518, 521,
	1014, 522, 0, 0, 523, 524, 525, 580, 1037, 1073,
	3242, 527, 526, 583, 0, 0, 0, 0, 528, 529,
	584, 530, 531, 532, 951, 0, 0, 0, 0, 0,
	0, 947, 0, 0, 0, 0, 0, 0, 945, 946,
	992, 964, 965, 966, 962, 963, 975, 976, 0, 0,
	0, 974, 0, 0, 0, 0, 0, 248, 249, 250,
	251, 252, 253, 0, 254, 255, 0, 0, 0, 0,
	0, 1016, 980, 0, 0, 0, 256, 257, 259, 258,
	260, 261, 262, 263, 534, 1029, 0, 264, 1036, 265,
	1035, 0, 1046, 266, 267, 268, 269, 270, 982, 1015,
	949, 271, 1075, 1076, 541, 0, 272, 273, 1022, 0,
	1003, 0, 274, 275, 276, 277, 278, 279, 280, 0,
	0, 282, 283, 284, 281, 0, 285, 0, 286, 287,
	288, 289, 0, 290, 1056, 291, 292, 1006, 1004, 1005,
	1012, 1008, 1007, 1011, 293, 294, 295, 296, 1039, 297,
	1033, 1032, 953, 301, 298, 299, 0, 302, 300, 0,
	303, 304, 305, 0, 0, 306, 1024, 308, 0, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 959, 316,
	317, 318, 320, 322, 319, 323, 324, 325, 326, 1047,
	1048, 971, 245, 0, 0, 0, 0, 0, 327, 328,
	329, 1031, 0, 0, 0, 330, 0, 331, 0, 0,
	1057, 332, 333, 1044, 1045, 334, 335, 0, 336, 1054,
	0, 981, 337, 0, 338, 339, 340, 341, 342, 1017,
	1018, 1021, 400, 1059, 343, 344, 0, 345, 346, 347,
	348, 0, 0, 0, 246, 349, 350, 352, 0, 1058,
	351, 1026, 1027, 0, 987, 0, 353, 354, 1060, 1019,
	1061, 355, 356, 357, 1062, 358, 0, 0, 0, 359,
	360, 361, 362, 363, 364, 0, 365, 367, 366, 0,
	368, 1055, 1063, 369, 370, 1064, 0, 371, 372, 373,
	1010, 1009, 374, 375, 376, 377, 0, 378, 379, 381,
	383, 380, 382, 387, 384, 385, 386, 389, 0, 388,
	1065, 390, 391, 392, 396, 395, 397, 394, 1066, 393,
	950, 247, 1067, 398, 972, 1020, 399, 1034, 401, 402,
	0, 0, 403, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 409, 563, 1068, 410, 1069, 1049, 411, 412,
	404, 413, 414, 415, 416, 417, 418, 419, 420, 0,
	421, 422, 565, 566, 1050, 423, 568, 424, 425, 0,
	426, 0, 427, 428, 429, 430, 431, 432, 433, 1030,
	435, 434, 436, 0, 437, 0, 0, 0, 0, 0,
	438, 0, 440, 441, 442, 439, 443, 444, 445, 446,
	0, 447, 448, 449, 1070, 450, 451, 452, 453, 960,
	454, 0, 455, 456, 462, 463, 457, 458, 464, 465,
	466, 467, 468, 0, 470, 471, 469, 472, 473, 474,
	1013, 475, 459, 460, 476, 477, 1071, 478, 479, 480,
	481, 482, 483, 1028, 0, 484, 0, 485, 486, 487,
	488, 461, 489, 494, 1074, 490, 491, 492, 493, 1051,
	0, 496, 497, 948, 495, 0, 498, 499, 500, 501,
	502, 503, 321, 504, 0, 505, 1040, 1041, 1042, 1043,
	0, 512, 0, 506, 507, 1052, 508, 1053, 970, 509,
	510, 511, 0, 513, 514, 0, 954, 515, 516, 517,
	519, 520, 518, 521, 1014, 522, 0, 0, 523, 524,
	525, 580, 1037, 1073, 0, 527, 526, 583, 0, 0,
	0, 0, 528, 529, 584, 530, 531, 532, 951, 0,
	0, 0, 0, 0, 0, 947, 0, 0, 0, 0,
	0, 0, 945, 946, 1752, 0, 0, 0, 0, 0,
	0, 976, 0, 0, 0, 974, 992, 964, 965, 966,
	962, 963, 975, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 249, 250, 251, 252, 253, 0,
	254, 255, 0, 0, 0, 0, 0, 1016, 980, 0,
	0, 0, 256, 257, 259, 258, 260, 261, 262, 263,
	534, 1029, 0, 264, 1036, 265, 1035, 0, 1046, 266,
	267, 268, 269, 270, 982, 1015, 949, 271, 1075, 1076,
	541, 0, 272, 273, 1022, 0, 1003, 0, 274, 275,
	276, 277, 278, 279, 280, 0, 0, 282, 283, 284,
	281, 0, 285, 0, 286, 287, 288, 289, 0, 290,
	1056, 291, 292, 1006, 1004, 1005, 1012, 1008, 1007, 1011,
	293, 294, 295, 296, 1039, 297, 1033, 1032, 953, 301,
	298, 299, 0, 302, 300, 0, 303, 304, 305, 0,
	0, 306, 1024, 308, 0, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 959, 316, 317, 318, 320, 322,
	319, 323, 324, 325, 326, 1047, 1048, 971, 245, 0,
	0, 0, 0, 0, 327, 328, 329, 1031, 0, 0,
	0, 330, 0, 331, 0, 2380, 1057, 332, 333, 1044,
	1045, 334, 335, 0, 336, 1054, 0, 981, 337, 0,
	338, 339, 340, 341, 342, 1017, 1018, 1021, 400, 1059,
	343, 344, 0, 345, 346, 347, 348, 0, 0, 0,
	246, 349, 350, 352, 0, 1058, 351, 1026, 1027, 0,
	987, 0, 353, 354, 1060, 1019, 1061, 355, 356, 357,
	1062, 358, 0, 0, 0, 359, 360, 361, 362, 363,
	364, 0, 365, 367, 366, 0, 368, 1055, 1063, 369,
	370, 1064, 0, 371, 372, 373, 1010, 1009, 374, 375,
	376, 377, 0, 378, 379, 381, 383, 380, 382, 387,
	384, 385, 386, 389, 0, 388, 1065, 390, 391, 392,
	396, 395, 397, 394, 1066, 393, 950, 247, 1067, 398,
	972, 1020, 399, 1034, 401, 402, 0, 0, 403, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 409, 563,
	1068, 410, 1069, 1049, 411, 412, 404, 413, 414, 415,
	416, 417, 418, 419, 420, 0, 421, 422, 565, 566,
	1050, 423, 568, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 431, 432, 433, 1030, 435, 434, 436, 0,
	437, 0, 0, 0, 0, 0, 438, 0, 440, 441,
	442, 439, 443, 444, 445, 446, 0, 447, 448, 449,
	1070, 450, 451, 452, 453, 960, 454, 0, 455, 456,
	462, 463, 457, 458, 464, 465, 466, 467, 468, 0,
	470, 471, 469, 472, 473, 474, 1013, 475, 459, 460,
	476, 477, 1071, 478, 479, 480, 481, 482, 483, 1028,
	0, 484, 0, 485, 486, 487, 488, 461, 489, 494,
	1074, 490, 491, 492, 493, 1051, 0, 496, 497, 948,
	495, 0, 498, 499, 500, 501, 502, 503, 321, 504,
	0, 505, 1040, 1041, 1042, 1043, 0, 512, 0, 506,
	507, 1052, 508, 1053, 970, 509, 510, 511, 0, 513,
	514, 0, 954, 515, 516, 517, 519, 520, 518, 521,
	1014, 522, 0, 0, 523, 524, 525, 580, 1037, 1073,
	0, 527, 526, 583, 0, 0, 0, 0, 528, 529,
	584, 530, 531, 532, 951, 0, 0, 0, 0, 0,
	0, 947, 0, 0, 0, 0, 0, 0, 945, 946,
	992, 964, 965, 966, 962, 963, 975, 976, 0, 0,
	0, 974, 0, 0, 0, 0, 0, 248, 249, 250,
	251, 252, 253, 0, 254, 255, 0, 0, 0, 0,
	0, 1016, 980, 0, 0, 0, 256, 257, 259, 258,
	260, 261, 262, 263, 534, 1029, 0, 264, 1036, 265,
	1035, 0, 1046, 266, 267, 268, 269, 270, 982, 1015,
	949, 271, 1075, 1076, 541, 0, 272, 273, 1022, 0,
	1003, 0, 274, 275, 276, 277, 278, 279, 280, 0,
	0, 282, 283, 284, 281, 0, 285, 0, 286, 287,
	288, 289, 0, 290, 1056, 291, 292, 1006, 1004, 1005,
	1012, 1008, 1007, 1011, 293, 294, 295, 296, 1039, 297,
	1033, 1032, 953, 301, 298, 299, 0, 302, 300, 0,
	303, 304, 305, 0, 0, 306, 1024, 308, 0, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 959, 316,
	317, 318, 320, 322, 319, 323, 324, 325, 326, 1047,
	1048, 971, 245, 0, 0, 0, 0, 0, 327, 328,
	329, 1031, 0, 0, 0, 330, 0, 331, 0, 0,
	1057, 332, 333, 1044, 1045, 334, 335, 0, 336, 1054,
	0, 981, 337, 0, 338, 339, 340, 341, 342, 1017,
	1018, 1021, 400, 1059, 343, 344, 0, 345, 346, 347,
	348, 0, 0, 0, 246, 349, 350, 352, 0, 1058,
	351, 1026, 1027, 0, 987, 0, 353, 354, 1060, 1019,
	1061, 355, 356, 357, 1062, 358, 0, 0, 0, 359,
	360, 361, 362, 363, 364, 0, 365, 367, 366, 0,
	368, 1055, 1063, 369, 370, 1064, 0, 371, 372, 373,
	1010, 1009, 374, 375, 376, 377, 0, 378, 379, 381,
	383, 380, 382, 387, 384, 385, 386, 389, 0, 388,
	1065, 390, 391, 392, 396, 395, 397, 394, 1066, 393,
	950, 247, 1067, 398, 972, 1020, 399, 1034, 401, 402,
	0, 0, 403, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 409, 563, 1068, 410, 1069, 1049, 411, 412,
	404, 413, 414, 415, 416, 417, 418, 419, 420, 0,
	421, 422, 565, 566, 1050, 423, 568, 424, 425, 0,
	426, 0, 427, 428, 429, 430, 431, 432, 433, 1030,
	435, 434, 436, 0, 437, 0, 0, 0, 0, 0,
	438, 0, 440, 441, 442, 439, 443, 444, 445, 446,
	0, 447, 448, 449, 1070, 450, 451, 452, 453, 960,
	454, 0, 455, 456, 462, 463, 457, 458, 464, 465,
	466, 467, 468, 0, 470, 471, 469, 472, 473, 474,
	1013, 475, 459, 460, 476, 477, 1071, 478, 479, 480,
	481, 482, 483, 1028, 0, 484, 0, 485, 486, 487,
	488, 461, 489, 494, 1074, 490, 491, 492, 493, 1051,
	0, 496, 497, 948, 495, 0, 498, 499, 500, 501,
	502, 503, 321, 504, 0, 505, 1040, 1041, 1042, 1043,
	0, 512, 0, 506, 507, 1052, 508, 1053, 970, 509,
	510, 511, 0, 513, 514, 0, 954, 515, 516, 517,
	519, 520, 518, 521, 1014, 522, 0, 0, 523, 524,
	525, 580, 1037, 1073, 0, 527, 526, 583, 0, 0,
	0, 0, 528, 529, 584, 530, 531, 532, 951, 0,
	0, 0, 0, 0, 0, 947, 0, 0, 0, 0,
	0, 0, 945, 946, 0, 0, 0, 0, 0, 0,
	0, 976, 1682, 0, 2385, 974, 992, 964, 965, 966,
	962, 963, 975, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 249, 250, 251, 252, 253, 0,
	254, 255, 0, 0, 0, 0, 0, 1016, 980, 0,
	0, 0, 256, 257, 259, 258, 260, 261, 262, 263,
	534, 1029, 0, 264, 1036, 265, 1035, 0, 1046, 266,
	267, 268, 269, 270, 982, 1015, 949, 271, 1075, 1076,
	541, 0, 272, 273, 1022, 0, 1003, 0, 274, 275,
	276, 277, 278, 279, 280, 0, 0, 282, 283, 284,
	281, 0, 285, 0, 286, 287, 288, 289, 0, 290,
	1056, 291, 292, 1006, 1004, 1005, 1012, 1008, 1007, 1011,
	293, 294, 295, 296, 1039, 297, 1033, 1032, 953, 301,
	298, 299, 0, 302, 300, 0, 303, 304, 305, 0,
	0, 306, 1024, 308, 0, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 959, 316, 317, 318, 320, 322,
	319, 323, 324, 325, 326, 1047, 1048, 971, 245, 0,
	0, 0, 0, 0, 327, 328, 329, 1031, 0, 0,
	0, 330, 0, 331, 0, 0, 1057, 332, 333, 1044,
	1045, 334, 335, 0, 336, 1054, 0, 981, 337, 0,
	338, 339, 340, 341, 342, 1017, 1018, 1021, 400, 1059,
	343, 344, 0, 345, 346, 347, 348, 0, 0, 0,
	246, 349, 350, 352, 0, 1058, 351, 1026, 1027, 0,
	987, 0, 353, 354, 1060, 1019, 1061, 355, 356, 357,
	1062, 358, 0, 0, 0, 359, 360, 361, 362, 363,
	364, 0, 365, 367, 366, 0, 368, 1055, 1063, 369,
	370, 1064, 0, 371, 372, 373, 1010, 1009, 374, 375,
	376, 377, 0, 378, 379, 381, 383, 380, 382, 387,
	384, 385, 386, 389, 0, 388, 1065, 390, 391, 392,
	396, 395, 397, 394, 1066, 393, 950, 247, 1067, 398,
	972, 1020, 399, 1034, 401, 402, 0, 0, 403, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 409, 563,
	1068, 410, 1069, 1049, 411, 412, 404, 413, 414, 415,
	416, 417, 418, 419, 420, 0, 421, 422, 565, 566,
	1050, 423, 568, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 431, 432, 433, 1030, 435, 434, 436, 0,
	437, 0, 0, 0, 0, 0, 438, 0, 440, 441,
	442, 439, 443, 444, 445, 446, 0, 447, 448, 449,
	1070, 450, 451, 452, 453, 960, 454, 0, 455, 456,
	462, 463, 457, 458, 464, 465, 466, 467, 468, 0,
	470, 471, 469, 472, 473, 474, 1013, 475, 459, 460,
	476, 477, 1071, 478, 479, 480, 481, 482, 483, 1028,
	0, 484, 0, 485, 486, 487, 488, 461, 489, 494,
	1074, 490, 491, 492, 493, 1051, 0, 496, 497, 948,
	495, 0, 498, 499, 500, 501, 502, 503, 321, 504,
	0, 505, 1040, 1041, 1042, 1043, 0, 512, 0, 506,
	507, 1052, 508, 1053, 970, 509, 510, 511, 0, 513,
	514, 0, 954, 515, 516, 517, 519, 520, 518, 521,
	1014, 522, 0, 0, 523, 524, 525, 580, 1037, 1073,
	0, 527, 526, 583, 0, 0, 0, 0, 528, 529,
	584, 530, 531, 532, 951, 0, 0, 0, 0, 0,
	0, 947, 0, 0, 0, 0, 0, 0, 945, 946,
	0, 0, 0, 0, 0, 0, 0, 976, 0, 0,
	2383, 974, 992, 964, 965, 966, 962, 963, 975, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	249, 250, 251, 252, 253, 0, 254, 255, 0, 0,
	0, 0, 0, 1016, 980, 0, 0, 0, 256, 257,
	259, 258, 260, 261, 262, 263, 534, 1029, 0, 264,
	1036, 265, 1035, 0, 1046, 266, 267, 268, 269, 270,
	982, 1015, 949, 271, 1075, 1076, 541, 0, 272, 273,
	1022, 0, 1003, 0, 274, 275, 276, 277, 278, 279,
	280, 0, 0, 282, 283, 284, 281, 0, 285, 0,
	286, 287, 288, 289, 0, 290, 1056, 291, 292, 1006,
	1004, 1005, 1012, 1008, 1007, 1011, 293, 294, 295, 296,
	1039, 297, 1033, 1032, 953, 301, 298, 299, 0, 302,
	300, 0, 303, 304, 305, 0, 0, 306, 1024, 308,
	0, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	959, 316, 317, 318, 320, 322, 319, 323, 324, 325,
	326, 1047, 1048, 971, 245, 0, 0, 0, 0, 0,
	327, 328, 329, 1031, 0, 0, 0, 330, 0, 331,
	0, 0, 1057, 332, 333, 1044, 1045, 334, 335, 0,
	336, 1054, 0, 981, 337, 0, 338, 339, 340, 341,
	342, 1017, 1018, 1021, 400, 1059, 343, 344, 0, 345,
	346, 347, 348, 0, 0, 0, 246, 349, 350, 352,
	0, 1058, 351, 1026, 1027, 0, 987, 0, 353, 354,
	1060, 1019, 1061, 355, 356, 357, 1062, 358, 0, 0,
	0, 359, 360, 361, 362, 363, 364, 0, 365, 367,
	366, 0, 368, 1055, 1063, 369, 370, 1064, 0, 371,
	372, 373, 1010, 1009, 374, 375, 376, 377, 0, 378,
	379, 381, 383, 380, 382, 387, 384, 385, 386, 389,
	0, 388, 1065, 390, 391, 392, 396, 395, 397, 394,
	1066, 393, 950, 247, 1067, 398, 972, 1020, 399, 1034,
	401, 402, 0, 0, 403, 0, 0, 0, 405, 406,
	407, 0, 0, 408, 409, 563, 1068, 410, 1069, 1049,
	411, 412, 404, 413, 414, 415, 416, 417, 418, 419,
	420, 0, 421, 422, 565, 566, 1050, 423, 568, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 431, 432,
	433, 1030, 435, 434, 436, 0, 437, 0, 0, 0,
	0, 0, 438, 0, 440, 441, 442, 439, 443, 444,
	445, 446, 0, 447, 448, 449, 1070, 450, 451, 452,
	453, 960, 454, 0, 455, 456, 462, 463, 457, 458,
	464, 465, 466, 467, 468, 0, 470, 471, 469, 472,
	473, 474, 1013, 475, 459, 460, 476, 477, 1071, 478,
	479, 480, 481, 482, 483, 1028, 0, 484, 0, 485,
	486, 487, 488, 461, 489, 494, 1074, 490, 491, 492,
	493, 1051, 0, 496, 497, 948, 495, 0, 498, 499,
	500, 501, 502, 503, 321, 504, 0, 505, 1040, 1041,
	1042, 1043, 0, 512, 0, 506, 507, 1052, 508, 1053,
	970, 509, 510, 511, 0, 513, 514, 0, 954, 515,
	516, 517, 519, 520, 518, 521, 1014, 522, 0, 0,
	523, 524, 525, 580, 1037, 1073, 0, 527, 526, 583,
	0, 0, 0, 0, 528, 529, 584, 530, 531, 532,
	951, 0, 0, 0, 0, 0, 0, 947, 0, 0,
	0, 0, 0, 0, 945, 946, 0, 0, 0, 0,
	0, 0, 0, 976, 0, 0, 2371, 974, 992, 964,
	965, 966, 962, 963, 975, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 249, 250, 251, 252,
	253, 0, 254, 255, 0, 0, 0, 0, 0, 1016,
	980, 0, 0, 0, 256, 257, 259, 258, 260, 261,
	262, 263, 534, 1029, 0, 264, 1036, 265, 1035, 0,
	1046, 266, 267, 268, 269, 270, 982, 1015, 949, 271,
	1075, 1076, 541, 0, 272, 273, 1022, 0, 1003, 0,
	274, 275, 276, 277, 278, 279, 280, 0, 0, 282,
	283, 284, 281, 0, 285, 0, 286, 287, 288, 289,
	0, 290, 1056, 291, 292, 1006, 1004, 1005, 1012, 1008,
	1007, 1011, 293, 294, 295, 296, 1039, 297, 1033, 1032,
	953, 301, 298, 299, 0, 302, 300, 0, 303, 304,
	305, 0, 0, 306, 1024, 308, 0, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 959, 316, 317, 318,
	320, 322, 319, 323, 324, 325, 326, 1047, 1048, 971,
	245, 0, 0, 0, 0, 0, 327, 328, 329, 1031,
	0, 0, 0, 330, 0, 331, 0, 0, 1057, 332,
	333, 1044, 1045, 334, 335, 0, 336, 1054, 0, 981,
	337, 0, 338, 339, 340, 341, 342, 1017, 1018, 1021,
	400, 1059, 343, 344, 0, 345, 346, 347, 348, 0,
	0, 0, 246, 349, 350, 352, 0, 1058, 351, 1026,
	1027, 0, 987, 0, 353, 354, 1060, 1019, 1061, 355,
	356, 357, 1062, 358, 0, 0, 0, 359, 360, 361,
	362, 363, 364, 0, 365, 367, 366, 0, 368, 1055,
	1063, 369, 370, 1064, 0, 371, 372, 373, 1010, 1009,
	374, 375, 376, 377, 0, 378, 379, 381, 383, 380,
	382, 387, 384, 385, 386, 389, 0, 388, 1065, 390,
	391, 392, 396, 395, 397, 394, 1066, 393, 950, 247,
	1067, 398, 972, 1020, 399, 1034, 401, 402, 0, 0,
	403, 0, 0, 0, 405, 406, 407, 0, 0, 408,
	409, 563, 1068, 410, 1069, 1049, 411, 412, 404, 413,
	414, 415, 416, 417, 418, 419, 420, 0, 421, 422,
	565, 566, 1050, 423, 568, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 431, 432, 433, 1030, 435, 434,
	436, 0, 437, 0, 0, 0, 0, 0, 438, 0,
	440, 441, 442, 439, 443, 444, 445, 446, 0, 447,
	448, 449, 1070, 450, 451, 452, 453, 960, 454, 0,
	455, 456, 462, 463, 457, 458, 464, 465, 466, 467,
	468, 0, 470, 471, 469, 472, 473, 474, 1013, 475,
	459, 460, 476, 477, 1071, 478, 479, 480, 481, 482,
	483, 1028, 0, 484, 0, 485, 486, 487, 488, 461,
	489, 494, 1074, 490, 491, 492, 493, 1051, 0, 496,
	497, 948, 495, 0, 498, 499, 500, 501, 502, 503,
	321, 504, 0, 505, 1040, 1041, 1042, 1043, 0, 512,
	0, 506, 507, 1052, 508, 1053, 970, 509, 510, 511,
	0, 513, 514, 0, 954, 515, 516, 517, 519, 520,
	518, 521, 1014, 522, 0, 0, 523, 524, 525, 580,
	1037, 1073, 0, 527, 526, 583, 0, 0, 0, 0,
	528, 529, 584, 530, 531, 532, 951, 0, 0, 0,
	0, 0, 0, 947, 0, 0, 0, 0, 0, 0,
	945, 946, 0, 0, 0, 0, 0, 0, 0, 976,
	0, 0, 2360, 974, 992, 964, 965, 966, 962, 963,
	975, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 249, 250, 251, 252, 253, 0, 254, 255,
	0, 0, 0, 0, 0, 1016, 980, 0, 0, 0,
	256, 257, 259, 258, 260, 261, 262, 263, 534, 1029,
	0, 264, 1036, 265, 1035, 0, 1046, 266, 267, 268,
	269, 270, 982, 1015, 949, 271, 1075, 1076, 541, 0,
	272, 273, 1022, 0, 1003, 0, 274, 275, 276, 277,
	278, 279, 280, 0, 0, 282, 283, 284, 281, 0,
	285, 0, 286, 287, 288, 289, 0, 290, 1056, 291,
	292, 1006, 1004, 1005, 1012, 1008, 1007, 1011, 293, 294,
	295, 296, 1039, 297, 1033, 1032, 953, 301, 298, 299,
	0, 302, 300, 0, 303, 304, 305, 0, 0, 306,
	1024, 308, 0, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 959, 316, 317, 318, 320, 322, 319, 323,
	324, 325, 326, 1047, 1048, 971, 245, 0, 0, 0,
	0, 0, 327, 328, 329, 1031, 0, 0, 0, 330,
	0, 331, 0, 0, 1057, 332, 333, 1044, 1045, 334,
	335, 0, 336, 1054, 0, 981, 337, 0, 338, 339,
	340, 341, 342, 1017, 1018, 1021, 400, 1059, 343, 344,
	0, 345, 346, 347, 348, 0, 0, 0, 246, 349,
	350, 352, 0, 1058, 351, 1026, 1027, 0, 987, 0,
	353, 354, 1060, 1019, 1061, 355, 356, 357, 1062, 358,
	0, 0, 0, 359, 360, 361, 362, 363, 364, 0,
	365, 367, 366, 0, 368, 1055, 1063, 369, 370, 1064,
	0, 371, 372, 373, 1010, 1009, 374, 375, 376, 377,
	0, 378, 379, 381, 383, 380, 382, 387, 384, 385,
	386, 389, 0, 388, 1065, 390, 391, 392, 396, 395,
	397, 394, 1066, 393, 950, 247, 1067, 398, 972, 1020,
	399, 1034, 401, 402, 0, 0, 403, 0, 0, 0,
	405, 406, 407, 0, 0, 408, 409, 563, 1068, 410,
	1069, 1049, 411, 412, 404, 413, 414, 415, 416, 417,
	418, 419, 420, 0, 421, 422, 565, 566, 1050, 423,
	568, 424, 425, 0, 426, 0, 427, 428, 429, 430,
	431, 432, 433, 1030, 435, 434, 436, 0, 437, 0,
	0, 0, 0, 0, 438, 0, 440, 441, 442, 439,
	443, 444, 445, 446, 0, 447, 448, 449, 1070, 450,
	451, 452, 453, 960, 454, 0, 455, 456, 462, 463,
	457, 458, 464, 465, 466, 467, 468, 0, 470, 471,
	469, 472, 473, 474, 1013, 475, 459, 460, 476, 477,
	1071, 478, 479, 480, 481, 482, 483, 1028, 0, 484,
	0, 485, 486, 487, 488, 461, 489, 494, 1074, 490,
	491, 492, 493, 1051, 0, 496, 497, 948, 495, 0,
	498, 499, 500, 501, 502, 503, 321, 504, 0, 505,
	1040, 1041, 1042, 1043, 0, 512, 0, 506, 507, 1052,
	508, 1053, 970, 509, 510, 511, 0, 513, 514, 0,
	954, 515, 516, 517, 519, 520, 518, 521, 1014, 522,
	0, 0, 523, 524, 525, 580, 1037, 1073, 0, 527,
	526, 583, 0, 0, 0, 0, 528, 529, 584, 530,
	531, 532, 951, 0, 0, 0, 0, 0, 0, 947,
	0, 0, 0, 0, 0, 0, 945, 946, 0, 0,
	0, 0, 0, 0, 0, 976, 0, 0, 2358, 974,
	2349, 2356, 965, 966, 962, 963, 975, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 249, 250,
	251, 252, 253, 0, 254, 255, 0, 0, 0, 0,
	0, 1016, 980, 0, 0, 0, 256, 257, 259, 258,
	260, 261, 262, 263, 534, 1029, 0, 264, 1036, 265,
	1035, 0, 1046, 266, 267, 268, 269, 270, 982, 1015,
	949, 271, 1075, 1076, 541, 0, 272, 273, 1022, 0,
	1003, 0, 274, 275, 276, 277, 278, 279, 280, 0,
	0, 282, 283, 284, 281, 0, 285, 0, 286, 287,
	288, 289, 0, 290, 1056, 291, 292, 1006, 1004, 1005,
	1012, 1008, 1007, 1011, 293, 294, 295, 296, 1039, 2352,
	1033, 1032, 953, 301, 298, 299, 0, 302, 300, 0,
	303, 304, 305, 0, 0, 306, 1024, 308, 0, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 959, 316,
	317, 318, 320, 322, 319, 323, 324, 325, 326, 1047,
	1048, 971, 245, 0, 0, 0, 0, 0, 327, 328,
	329, 1031, 0, 0, 0, 330, 0, 331, 0, 0,
	1057, 332, 333, 1044, 1045, 334, 335, 0, 336, 1054,
	0, 981, 337, 0, 338, 339, 340, 2353, 342, 1017,
	1018, 1021, 400, 1059, 343, 344, 0, 345, 346, 347,
	348, 0, 0, 0, 246, 349, 350, 352, 0, 1058,
	351, 1026, 1027, 0, 987, 0, 353, 354, 1060, 1019,
	1061, 355, 356, 357, 1062, 358, 0, 0, 0, 359,
	360, 361, 362, 363, 364, 0, 365, 367, 366, 0,
	368, 1055, 1063, 369, 370, 1064, 0, 371, 372, 373,
	1010, 1009, 374, 375, 376, 377, 0, 378, 379, 381,
	383, 380, 2354, 2351, 384, 385, 386, 389, 0, 388,
	1065, 390, 391, 392, 396, 395, 397, 394, 1066, 393,
	950, 247, 1067, 398, 972, 1020, 399, 1034, 401, 402,
	0, 0, 403, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 409, 563, 1068, 410, 1069, 1049, 411, 412,
	404, 413, 414, 415, 416, 417, 418, 419, 420, 0,
	421, 422, 565, 566, 1050, 423, 568, 424, 425, 0,
	426, 0, 427, 428, 429, 430, 431, 432, 433, 1030,
	435, 434, 436, 0, 437, 0, 0, 0, 0, 0,
	438, 0, 440, 441, 442, 439, 443, 444, 445, 446,
	0, 447, 448, 449, 1070, 450, 451, 452, 453, 960,
	454, 0, 455, 456, 462, 463, 457, 458, 464, 465,
	466, 467, 2355, 0, 470, 471, 469, 472, 473, 474,
	1013, 475, 459, 460, 476, 477, 1071, 478, 479, 480,
	481, 482, 483, 1028, 0, 484, 0, 485, 486, 487,
	488, 461, 489, 494, 1074, 490, 491, 492, 493, 1051,
	0, 496, 497, 948, 495, 0, 498, 499, 500, 501,
	502, 503, 321, 504, 0, 505, 1040, 1041, 1042, 1043,
	0, 512, 0, 506, 507, 1052, 508, 1053, 970, 509,
	510, 511, 0, 513, 514, 0, 954, 515, 516, 517,
	519, 520, 518, 521, 1014, 522, 0, 0, 523, 524,
	525, 580, 1037, 1073, 0, 527, 526, 583, 0, 0,
	0, 0, 528, 529, 584, 530, 2350, 532, 951, 0,
	0, 0, 0, 0, 0, 947, 0, 0, 0, 0,
	0, 0, 945, 946, 0, 0, 0, 0, 0, 0,
	0, 976, 0, 0, 2346, 974, 2349, 2356, 965, 966,
	962, 963, 975, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 249, 250, 251, 252, 253, 0,
	254, 255, 0, 0, 0, 0, 0, 1016, 980, 0,
	0, 0, 256, 257, 259, 258, 260, 261, 262, 263,
	534, 1029, 0, 264, 1036, 265, 1035, 0, 1046, 266,
	267, 268, 269, 270, 982, 1015, 949, 271, 1075, 1076,
	541, 0, 272, 273, 1022, 0, 1003, 0, 274, 275,
	276, 277, 278, 279, 280, 0, 0, 282, 283, 284,
	281, 0, 285, 0, 286, 287, 288, 289, 0, 290,
	1056, 291, 292, 1006, 1004, 1005, 1012, 1008, 1007, 1011,
	293, 294, 295, 296, 1039, 2352, 1033, 1032, 953, 301,
	298, 299, 0, 302, 300, 0, 303, 304, 305, 0,
	0, 306, 1024, 308, 0, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 959, 316, 317, 318, 320, 322,
	319, 323, 324, 325, 326, 1047, 1048, 971, 245, 0,
	0, 0, 0, 0, 327, 328, 329, 1031, 0, 0,
	0, 330, 0, 331, 0, 0, 1057, 332, 333, 1044,
	1045, 334, 335, 0, 336, 1054, 0, 981, 337, 0,
	338, 339, 340, 2353, 342, 1017, 1018, 1021, 400, 1059,
	343, 344, 0, 345, 346, 347, 348, 0, 0, 0,
	246, 349, 350, 352, 0, 1058, 351, 1026, 1027, 0,
	987, 0, 353, 354, 1060, 1019, 1061, 355, 356, 357,
	1062, 358, 0, 0, 0, 359, 360, 361, 362, 363,
	364, 0, 365, 367, 366, 0, 368, 1055, 1063, 369,
	370, 1064, 0, 371, 372, 373, 1010, 1009, 374, 375,
	376, 377, 0, 378, 379, 381, 383, 380, 2354, 2351,
	384, 385, 386, 389, 0, 388, 1065, 390, 391, 392,
	396, 395, 397, 394, 1066, 393, 950, 247, 1067, 398,
	972, 1020, 399, 1034, 401, 402, 0, 0, 403, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 409, 563,
	1068, 410, 1069, 1049, 411, 412, 404, 413, 414, 415,
	416, 417, 418, 419, 420, 0, 421, 422, 565, 566,
	1050, 423, 568, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 431, 432, 433, 1030, 435, 434, 436, 0,
	437, 0, 0, 0, 0, 0, 438, 0, 440, 441,
	442, 439, 443, 444, 445, 446, 0, 447, 448, 449,
	1070, 450, 451, 452, 453, 960, 454, 0, 455, 456,
	462, 463, 457, 458, 464, 465, 466, 467, 2355, 0,
	470, 471, 469, 472, 473, 474, 1013, 475, 459, 460,
	476, 477, 1071, 478, 479, 480, 481, 482, 483, 1028,
	0, 484, 0, 485, 486, 487, 488, 461, 489, 494,
	1074, 490, 491, 492, 493, 1051, 0, 496, 497, 948,
	495, 0, 498, 499, 500, 501, 502, 503, 321, 504,
	0, 505, 1040, 1041, 1042, 1043, 0, 512, 0, 506,
	507, 1052, 508, 1053, 970, 509, 510, 511, 0, 513,
	514, 0, 954, 515, 516, 517, 519, 520, 518, 521,
	1014, 522, 0, 0, 523, 524, 525, 580, 1037, 1073,
	0, 527, 526, 583, 0, 0, 0, 0, 528, 529,
	584, 530, 2350, 532, 951, 0, 0, 0, 0, 0,
	0, 947, 0, 0, 0, 0, 0, 0, 945, 946,
	992, 964, 965, 966, 962, 963, 975, 976, 0, 0,
	0, 974, 0, 0, 0, 0, 0, 248, 249, 250,
	251, 252, 253, 0, 254, 255, 0, 0, 0, 0,
	0, 1016, 980, 0, 0, 0, 256, 257, 259, 258,
	260, 261, 262, 263, 534, 1029, 0, 264, 1036, 265,
	1035, 0, 1046, 266, 267, 268, 269, 270, 982, 1015,
	949, 271, 1075, 1076, 541, 0, 272, 273, 1022, 0,
	1003, 0, 274, 275, 276, 277, 278, 279, 280, 0,
	0, 282, 283, 284, 281, 0, 285, 0, 286, 287,
	288, 289, 0, 290, 1056, 291, 292, 1006, 1004, 1005,
	1012, 1008, 1007, 1011, 293, 294, 295, 296, 1039, 297,
	1033, 1032, 953, 301, 298, 299, 0, 302, 300, 0,
	303, 304, 305, 0, 0, 306, 1024, 308, 0, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 959, 316,
	317, 318, 320, 322, 319, 323, 324, 325, 326, 1047,
	1048, 971, 245, 0, 0, 0, 0, 0, 327, 328,
	329, 1031, 0, 0, 0, 330, 0, 331, 0, 0,
	1057, 332, 333, 1044, 1045, 334, 335, 0, 336, 1054,
	0, 981, 337, 0, 338, 339, 340, 341, 342, 1017,
	1018, 1021, 400, 1059, 343, 344, 0, 345, 346, 347,
	348, 0, 0, 0, 246, 349, 350, 352, 0, 1058,
	351, 1026, 1027, 0, 987, 0, 353, 354, 1060, 1019,
	1061, 355, 356, 357, 1062, 358, 0, 0, 0, 359,
	360, 361, 362, 363, 364, 0, 365, 367, 366, 0,
	368, 1055, 1063, 369, 370, 1064, 0, 371, 372, 373,
	1010, 1009, 374, 375, 376, 377, 0, 378, 379, 381,
	383, 380, 382, 387, 384, 385, 386, 389, 0, 388,
	1065, 390, 391, 392, 396, 395, 397, 394, 1066, 393,
	950, 247, 1067, 398, 972, 1020, 399, 1034, 401, 402,
	0, 0, 403, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 409, 563, 1068, 410, 1069, 1049, 411, 412,
	404, 413, 414, 415, 416, 417, 418, 419, 420, 0,
	421, 422, 565, 566, 1050, 423, 568, 424, 425, 0,
	426, 0, 427, 428, 429, 430, 431, 432, 433, 1030,
	435, 434, 436, 0, 437, 0, 0, 0, 0, 0,
	438, 0, 440, 441, 442, 439, 443, 444, 445, 446,
	0, 447, 448, 449, 1070, 450, 451, 452, 453, 960,
	454, 0, 455, 456, 462, 463, 457, 458, 464, 465,
	466, 467, 468, 0, 470, 471, 469, 472, 473, 474,
	1013, 475, 459, 460, 476, 477, 1071, 478, 479, 480,
	481, 482, 483, 1028, 0, 484, 0, 485, 486, 487,
	488, 461, 489, 494, 1074, 490, 491, 492, 493, 1051,
	0, 496, 497, 948, 495, 0, 498, 499, 500, 501,
	502, 503, 321, 504, 0, 505, 1040, 1041, 1042, 1043,
	0, 512, 0, 506, 507, 1052, 508, 1053, 970, 509,
	510, 511, 0, 513, 514, 0, 954, 515, 516, 517,
	519, 520, 518, 521, 1014, 522, 0, 0, 523, 524,
	525, 580, 1037, 1073, 0, 527, 526, 583, 0, 0,
	0, 0, 528, 529, 584, 530, 531, 532, 951, 0,
	0, 0, 0, 0, 0, 947, 0, 0, 0, 0,
	0, 0, 945, 946, 0, 0, 0, 0, 0, 1690,
	0, 976, 0, 0, 0, 974, 992, 964, 965, 966,
	962, 963, 975, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 249, 250, 251, 252, 253, 2164,
	254, 255, 0, 0, 0, 0, 0, 1016, 980, 0,
	0, 0, 256, 257, 259, 258, 260, 261, 262, 263,
	534, 1029, 0, 264, 1036, 265, 1035, 0, 1046, 266,
	267, 268, 269, 270, 982, 1015, 949, 271, 1075, 1076,
	541, 0, 272, 273, 1022, 0, 1003, 0, 274, 275,
	276, 277, 278, 279, 280, 0, 0, 282, 283, 284,
	281, 0, 285, 0, 286, 287, 288, 289, 0, 290,
	1056, 291, 292, 1006, 1004, 1005, 1012, 1008, 1007, 1011,
	293, 294, 295, 296, 1039, 297, 1033, 1032, 953, 301,
	298, 299, 0, 302, 300, 0, 303, 304, 305, 0,
	0, 306, 1024, 308, 0, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 959, 316, 317, 318, 320, 322,
	319, 323, 324, 325, 326, 1047, 1048, 971, 245, 0,
	0, 0, 0, 0, 327, 328, 329, 1031, 0, 0,
	0, 330, 0, 331, 0, 0, 1057, 332, 333, 1044,
	1045, 334, 335, 0, 336, 1054, 0, 981, 337, 0,
	338, 339, 340, 341, 342, 1017, 1018, 1021, 400, 1059,
	343, 344, 0, 345, 346, 347, 348, 0, 0, 0,
	246, 349, 350, 352, 0, 1058, 351, 1026, 1027, 0,
	987, 0, 353, 354, 1060, 1019, 1061, 355, 356, 357,
	1062, 358, 0, 0, 0, 359, 360, 361, 362, 363,
	364, 0, 365, 367, 366, 0, 368, 1055, 1063, 369,
	370, 1064, 0, 371, 372, 373, 1010, 1009, 374, 375,
	376, 377, 0, 378, 379, 381, 383, 380, 382, 387,
	384, 385, 386, 389, 0, 388, 1065, 390, 391, 392,
	396, 395, 397, 394, 1066, 393, 950, 247, 1067, 398,
	972, 1020, 399, 1034, 401, 402, 0, 0, 403, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 409, 563,
	1068, 410, 1069, 1049, 411, 412, 404, 413, 414, 415,
	416, 417, 418, 419, 420, 0, 421, 422, 565, 566,
	1050, 423, 568, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 431, 432, 433, 1030, 435, 434, 436, 0,
	437, 0, 0, 0, 0, 0, 438, 0, 440, 441,
	442, 439, 443, 444, 445, 446, 0, 447, 448, 449,
	1070, 450, 451, 452, 453, 960, 454, 0, 455, 456,
	462, 463, 457, 458, 464, 465, 466, 467, 468, 0,
	470, 471, 469, 472, 473, 474, 1013, 475, 459, 460,
	476, 477, 1071, 478, 479, 480, 481, 482, 483, 1028,
	0, 484, 0, 485, 486, 487, 488, 461, 489, 494,
	1074, 490, 491, 492, 493, 1051, 0, 496, 497, 948,
	495, 0, 498, 499, 500, 501, 502, 503, 321, 504,
	0, 505, 1040, 1041, 1042, 1043, 0, 512, 0, 506,
	507, 1052, 508, 1053, 970, 509, 510, 511, 0, 513,
	514, 0, 954, 515, 516, 517, 519, 520, 518, 521,
	1014, 522, 0, 0, 523, 524, 525, 580, 1037, 1073,
	0, 527, 526, 583, 0, 0, 0, 0, 528, 529,
	584, 530, 531, 532, 951, 0, 0, 0, 0, 0,
	0, 947, 0, 0, 0, 0, 0, 0, 945, 946,
	0, 0, 0, 0, 0, 0, 0, 976, 0, 0,
	1542, 974, 992, 964, 965, 966, 962, 963, 975, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	249, 250, 251, 252, 253, 0, 254, 255, 0, 0,
	0, 0, 0, 1016, 980, 0, 0, 0, 256, 257,
	259, 258, 260, 261, 262, 263, 534, 1029, 0, 264,
	1036, 265, 1035, 0, 1046, 266, 267, 268, 269, 270,
	982, 1015, 949, 271, 1075, 1076, 541, 0, 272, 273,
	1022, 0, 1003, 0, 274, 275, 276, 277, 278, 279,
	280, 0, 0, 282, 283, 284, 281, 0, 285, 0,
	286, 287, 288, 289, 0, 290, 1056, 291, 292, 1006,
	1004, 1005, 1012, 1008, 1007, 1011, 293, 294, 295, 296,
	1039, 297, 1033, 1032, 953, 301, 298, 299, 0, 302,
	300, 0, 303, 304, 305, 0, 0, 306, 1024, 308,
	0, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	959, 316, 317, 318, 320, 322, 319, 323, 324, 325,
	326, 1047, 1048, 971, 245, 0, 0, 0, 0, 0,
	327, 328, 329, 1031, 0, 0, 0, 330, 0, 331,
	0, 0, 1057, 332, 333, 1044, 1045, 334, 335, 0,
	336, 1054, 0, 981, 337, 0, 338, 339, 340, 341,
	342, 1017, 1018, 1021, 400, 1059, 343, 344, 0, 345,
	346, 347, 348, 0, 0, 0, 246, 349, 350, 352,
	0, 1058, 351, 1026, 1027, 0, 987, 0, 353, 354,
	1060, 1019, 1061, 355, 356, 357, 1062, 358, 0, 0,
	0, 359, 360, 361, 362, 363, 364, 0, 365, 367,
	366, 0, 368, 1055, 1063, 369, 370, 1064, 0, 371,
	372, 373, 1010, 1009, 374, 375, 376, 377, 0, 378,
	379, 381, 383, 380, 382, 387, 384, 385, 386, 389,
	0, 388, 1065, 390, 391, 392, 396, 395, 397, 394,
	1066, 393, 950, 247, 1067, 398, 972, 1020, 399, 1034,
	401, 402, 0, 0, 403, 0, 0, 0, 405, 406,
	407, 0, 0, 408, 409, 563, 1068, 410, 1069, 1049,
	411, 412, 404, 413, 414, 415, 416, 417, 418, 419,
	420, 0, 421, 422, 565, 566, 1050, 423, 568, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 431, 432,
	433, 1030, 435, 434, 436, 0, 437, 0, 0, 0,
	0, 0, 438, 0, 440, 441, 442, 439, 443, 444,
	445, 446, 0, 447, 448, 449, 1070, 450, 451, 452,
	453, 960, 454, 0, 455, 456, 462, 463, 457, 458,
	464, 465, 466, 467, 468, 0, 470, 471, 469, 472,
	473, 474, 1013, 475, 459, 460, 476, 477, 1071, 478,
	479, 480, 481, 482, 483, 1028, 0, 484, 0, 485,
	486, 487, 488, 461, 489, 494, 1074, 490, 491, 492,
	493, 1051, 0, 496, 497, 948, 495, 0, 498, 499,
	500, 501, 502, 503, 321, 504, 0, 505, 1040, 1041,
	1042, 1043, 0, 512, 0, 506, 507, 1052, 508, 1053,
	970, 509, 510, 511, 0, 513, 514, 0, 954, 515,
	516, 517, 519, 520, 518, 521, 1014, 522, 0, 0,
	523, 524, 525, 580, 1037, 1073, 0, 527, 526, 583,
	0, 0, 0, 0, 528, 529, 584, 530, 531, 532,
	951, 0, 0, 0, 0, 0, 0, 947, 0, 0,
	0, 0, 0, 0, 945, 946, 0, 0, 0, 0,
	0, 0, 0, 976, 0, 0, 1479, 974, 992, 964,
	965, 966, 962, 963, 975, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 249, 250, 251, 252,
	253, 0, 254, 255, 0, 0, 0, 0, 0, 1016,
	980, 0, 0, 0, 256, 257, 259, 258, 260, 261,
	262, 263, 534, 1029, 0, 264, 1036, 265, 1035, 0,
	1046, 266, 267, 268, 269, 270, 982, 1015, 949, 271,
	1075, 1076, 541, 0, 272, 273, 1022, 0, 1003, 0,
	274, 275, 276, 277, 278, 279, 280, 0, 0, 282,
	283, 284, 281, 0, 285, 0, 286, 287, 288, 289,
	0, 290, 1056, 291, 292, 1006, 1004, 1005, 1012, 1008,
	1007, 1011, 293, 294, 295, 296, 1039, 297, 1033, 1032,
	953, 301, 298, 299, 0, 302, 300, 0, 303, 304,
	305, 0, 0, 306, 1024, 308, 0, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 959, 316, 317, 318,
	320, 322, 319, 323, 324, 325, 326, 1047, 1048, 971,
	245, 0, 0, 0, 0, 0, 327, 328, 329, 1031,
	0, 0, 0, 330, 0, 331, 0, 0, 1057, 332,
	333, 1044, 1045, 334, 335, 0, 336, 1054, 0, 981,
	337, 0, 338, 339, 340, 341, 342, 1017, 1018, 1021,
	400, 1059, 343, 344, 0, 345, 346, 347, 348, 0,
	0, 0, 246, 349, 350, 352, 0, 1058, 351, 1026,
	1027, 0, 987, 0, 353, 354, 1060, 1019, 1061, 355,
	356, 357, 1062, 358, 0, 0, 0, 359, 360, 361,
	362, 363, 364, 0, 365, 367, 366, 0, 368, 1055,
	1063, 369, 370, 1064, 0, 371, 372, 373, 1010, 1009,
	374, 375, 376, 377, 0, 378, 379, 381, 383, 380,
	382, 387, 384, 385, 386, 389, 0, 388, 1065, 390,
	391, 392, 396, 395, 397, 394, 1066, 393, 950, 247,
	1067, 398, 972, 1020, 399, 1034, 401, 402, 0, 0,
	403, 0, 0, 0, 405, 406, 407, 0, 0, 408,
	409, 563, 1068, 410, 1069, 1049, 411, 412, 404, 413,
	414, 415, 416, 417, 418, 419, 420, 0, 421, 422,
	565, 566, 1050, 423, 568, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 431, 432, 433, 1030, 435, 434,
	436, 0, 437, 0, 0, 0, 0, 0, 438, 0,
	440, 441, 442, 439, 443, 444, 445, 446, 0, 447,
	448, 449, 1070, 450, 451, 452, 453, 960, 454, 0,
	455, 456, 462, 463, 457, 458, 464, 465, 466, 467,
	468, 0, 470, 471, 469, 472, 473, 474, 1013, 475,
	459, 460, 476, 477, 1071, 478, 479, 480, 481, 482,
	483, 1028, 0, 484, 0, 485, 486, 487, 488, 461,
	489, 494, 1074, 490, 491, 492, 493, 1051, 0, 496,
	497, 948, 495, 0, 498, 499, 500, 501, 502, 503,
	321, 504, 0, 505, 1040, 1041, 1042, 1043, 0, 512,
	0, 506, 507, 1052, 508, 1053, 970, 509, 510, 511,
	0, 513, 514, 0, 954, 515, 516, 517, 519, 520,
	518, 521, 1014, 522, 0, 0, 523, 524, 525, 580,
	1037, 1073, 0, 527, 526, 583, 0, 0, 0, 0,
	528, 529, 584, 530, 531, 532, 951, 0, 0, 0,
	0, 0, 0, 947, 0, 0, 0, 0, 0, 0,
	945, 946, 0, 0, 0, 0, 0, 0, 0, 976,
	0, 0, 1474, 974, 992, 964, 965, 966, 962, 963,
	975, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 249, 250, 251, 252, 253, 0, 254, 255,
	0, 0, 0, 0, 0, 1016, 980, 0, 0, 0,
	256, 257, 259, 258, 260, 261, 262, 263, 534, 1029,
	0, 264, 1036, 265, 1035, 0, 1046, 266, 267, 268,
	269, 270, 982, 1015, 949, 271, 1075, 1076, 541, 0,
	272, 273, 1022, 0, 1003, 0, 274, 275, 276, 277,
	278, 279, 280, 0, 0, 282, 283, 284, 281, 0,
	285, 0, 286, 287, 288, 289, 0, 290, 1056, 291,
	292, 1006, 1004, 1005, 1012, 1008, 1007, 1011, 293, 294,
	295, 296, 1039, 297, 1033, 1032, 953, 301, 298, 299,
	0, 302, 300, 0, 303, 304, 305, 0, 0, 306,
	1024, 308, 0, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 959, 316, 317, 318, 320, 322, 319, 323,
	324, 325, 326, 1047, 1048, 971, 245, 0, 0, 0,
	0, 0, 327, 328, 329, 1031, 0, 0, 0, 330,
	0, 331, 0, 0, 1057, 332, 333, 1044, 1045, 334,
	335, 0, 336, 1054, 0, 981, 337, 0, 338, 339,
	340, 341, 342, 1017, 1018, 1021, 400, 1059, 343, 344,
	0, 345, 346, 347, 348, 0, 0, 0, 246, 349,
	350, 352, 0, 1058, 351, 1026, 1027, 0, 987, 0,
	353, 354, 1060, 1019, 1061, 355, 356, 357, 1062, 358,
	0, 0, 0, 359, 360, 361, 362, 363, 364, 0,
	365, 367, 366, 0, 368, 1055, 1063, 369, 370, 1064,
	0, 371, 372, 373, 1010, 1009, 374, 375, 376, 377,
	0, 378, 379, 381, 383, 380, 382, 387, 384, 385,
	386, 389, 0, 388, 1065, 390, 391, 392, 396, 395,
	397, 394, 1066, 393, 950, 247, 1067, 398, 972, 1020,
	399, 1034, 401, 402, 0, 0, 403, 0, 0, 0,
	405, 406, 407, 0, 0, 408, 409, 563, 1068, 410,
	1069, 1049, 411, 412, 404, 413, 414, 415, 416, 417,
	418, 419, 420, 0, 421, 422, 565, 566, 1050, 423,
	568, 424, 425, 0, 426, 0, 427, 428, 429, 430,
	431, 432, 433, 1030, 435, 434, 436, 0, 437, 0,
	0, 0, 0, 0, 438, 0, 440, 441, 442, 439,
	443, 444, 445, 446, 0, 447, 448, 449, 1070, 450,
	451, 452, 453, 960, 454, 0, 455, 456, 462, 463,
	457, 458, 464, 465, 466, 467, 468, 0, 470, 471,
	469, 472, 473, 474, 1013, 475, 459, 460, 476, 477,
	1071, 478, 479, 480, 481, 482, 483, 1028, 0, 484,
	0, 485, 486, 487, 488, 461, 489, 494, 1074, 490,
	491, 492, 493, 1051, 0, 496, 497, 948, 495, 0,
	498, 499, 500, 501, 502, 503, 321, 504, 0, 505,
	1040, 1041, 1042, 1043, 0, 512, 0, 506, 507, 1052,
	508, 1053, 970, 509, 510, 511, 0, 513, 514, 0,
	954, 515, 516, 517, 519, 520, 518, 521, 1014, 522,
	0, 0, 523, 524, 525, 580, 1037, 1073, 0, 527,
	526, 583, 0, 0, 0, 0, 528, 529, 584, 530,
	531, 532, 951, 0, 0, 0, 0, 0, 0, 947,
	0, 0, 0, 0, 0, 0, 945, 946, 0, 0,
	0, 0, 0, 0, 0, 976, 0, 0, 1465, 974,
	992, 964, 965, 966, 962, 963, 975, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 249, 250,
	251, 252, 253, 0, 254, 255, 0, 0, 0, 0,
	0, 1016, 980, 0, 0, 0, 256, 257, 259, 258,
	260, 261, 262, 263, 534, 1029, 0, 264, 1036, 265,
	1035, 0, 1046, 266, 267, 268, 269, 270, 982, 1015,
	949, 271, 1075, 1076, 541, 0, 272, 273, 1022, 0,
	1003, 0, 274, 275, 276, 277, 278, 279, 280, 0,
	0, 282, 283, 284, 281, 0, 285, 0, 286, 287,
	288, 289, 0, 290, 1056, 291, 292, 1006, 1004, 1005,
	1012, 1008, 1007, 1011, 293, 294, 295, 296, 1039, 297,
	1033, 1032, 953, 301, 298, 299, 0, 302, 300, 0,
	303, 304, 305, 0, 0, 306, 1024, 308, 0, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 959, 316,
	317, 318, 320, 322, 319, 323, 324, 325, 326, 1047,
	1048, 971, 245, 0, 0, 0, 0, 0, 327, 328,
	329, 1031, 0, 0, 0, 330, 0, 331, 0, 0,
	1057, 332, 333, 1044, 1045, 334, 335, 0, 336, 1054,
	0, 981, 337, 0, 338, 339, 340, 341, 342, 1017,
	1018, 1021, 400, 1059, 343, 344, 0, 345, 346, 347,
	348, 0, 0, 0, 246, 349, 350, 352, 0, 1058,
	351, 1026, 1027, 0, 987, 0, 353, 354, 1060, 1019,
	1061, 355, 356, 357, 1062, 358, 0, 0, 0, 359,
	360, 361, 362, 363, 364, 0, 365, 367, 366, 0,
	368, 1055, 1063, 369, 370, 1064, 0, 371, 372, 373,
	1010, 1009, 374, 375, 376, 377, 0, 378, 379, 381,
	383, 380, 382, 387, 384, 385, 386, 389, 0, 388,
	1065, 390, 391, 392, 396, 395, 397, 394, 1066, 393,
	950, 247, 1067, 398, 972, 1020, 399, 1034, 401, 402,
	0, 0, 403, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 409, 563, 1068, 410, 1069, 1049, 411, 412,
	404, 413, 414, 415, 416, 417, 418, 419, 420, 0,
	421, 422, 565, 566, 1050, 423, 568, 424, 425, 0,
	426, 0, 427, 428, 429, 430, 431, 432, 433, 1030,
	435, 434, 436, 0, 437, 0, 0, 0, 0, 0,
	438, 0, 440, 441, 442, 439, 443, 444, 445, 446,
	0, 447, 448, 449, 1070, 450, 451, 452, 453, 960,
	454, 0, 455, 456, 462, 463, 457, 458, 464, 465,
	466, 467, 468, 0, 470, 471, 469, 472, 473, 474,
	1013, 475, 459, 460, 476, 477, 1071, 478, 479, 480,
	481, 482, 483, 1028, 0, 484, 0, 485, 486, 487,
	488, 461, 489, 494, 1074, 490, 491, 492, 493, 1051,
	0, 496, 497, 948, 495, 0, 498, 499, 500, 501,
	502, 503, 321, 504, 0, 505, 1040, 1041, 1042, 1043,
	0, 512, 0, 506, 507, 1052, 508, 1053, 970, 509,
	510, 511, 0, 513, 514, 0, 954, 515, 516, 517,
	519, 520, 518, 521, 1014, 522, 0, 0, 523, 524,
	525, 580, 1037, 1073, 0, 527, 526, 583, 0, 0,
	0, 0, 528, 529, 584, 530, 531, 532, 951, 0,
	0, 0, 0, 0, 0, 947, 0, 0, 0, 0,
	0, 0, 945, 946, 0, 0, 0, 0, 0, 0,
	0, 976, 0, 0, 1460, 974, 992, 964, 965, 966,
	962, 963, 975, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 249, 250, 251, 252, 253, 0,
	254, 255, 0, 0, 0, 0, 0, 1016, 980, 0,
	0, 0, 256, 257, 259, 258, 260, 261, 262, 263,
	534, 1029, 0, 264, 1036, 265, 1035, 0, 1046, 266,
	267, 268, 269, 270, 982, 1015, 949, 271, 1075, 1076,
	541, 0, 272, 273, 1022, 0, 1003, 0, 274, 275,
	276, 277, 278, 279, 280, 0, 0, 282, 283, 284,
	281, 0, 285, 0, 286, 287, 288, 289, 0, 290,
	1056, 291, 292, 1006, 1004, 1005, 1012, 1008, 1007, 1011,
	293, 294, 295, 296, 1039, 297, 1033, 1032, 953, 301,
	298, 299, 0, 302, 300, 0, 303, 304, 305, 0,
	0, 306, 1024, 308, 0, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 959, 316, 317, 318, 320, 322,
	319, 323, 324, 325, 326, 1047, 1048, 971, 245, 0,
	0, 0, 0, 0, 327, 328, 329, 1031, 0, 0,
	0, 330, 0, 331, 0, 0, 1057, 332, 333, 1044,
	1045, 334, 335, 0, 336, 1054, 0, 981, 337, 0,
	338, 339, 340, 341, 342, 1017, 1018, 1021, 400, 1059,
	343, 344, 0, 345, 346, 347, 348, 0, 0, 0,
	246, 349, 350, 352, 0, 1058, 351, 1026, 1027, 0,
	987, 0, 353, 354, 1060, 1019, 1061, 355, 356, 357,
	1062, 358, 0, 0, 0, 359, 360, 361, 362, 363,
	364, 0, 365, 367, 366, 0, 368, 1055, 1063, 369,
	370, 1064, 0, 371, 372, 373, 1010, 1009, 374, 375,
	376, 377, 0, 378, 379, 381, 383, 380, 382, 387,
	384, 385, 386, 389, 0, 388, 1065, 390, 391, 392,
	396, 395, 397, 394, 1066, 393, 950, 247, 1067, 398,
	972, 1020, 399, 1034, 401, 402, 0, 0, 403, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 409, 563,
	1068, 410, 1069, 1049, 411, 412, 404, 413, 414, 415,
	416, 417, 418, 419, 420, 0, 421, 422, 565, 566,
	1050, 423, 568, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 431, 432, 433, 1030, 435, 434, 436, 0,
	437, 0, 0, 0, 0, 0, 438, 0, 440, 441,
	442, 439, 443, 444, 445, 446, 0, 447, 448, 449,
	1070, 450, 451, 452, 453, 960, 454, 0, 455, 456,
	462, 463, 457, 458, 464, 465, 466, 467, 468, 0,
	470, 471, 469, 472, 473, 474, 1013, 475, 459, 460,
	476, 477, 1071, 478, 479, 480, 481, 482, 483, 1028,
	0, 484, 0, 485, 486, 487, 488, 461, 489, 494,
	1074, 490, 491, 492, 493, 1051, 0, 496, 497, 948,
	495, 0, 498, 499, 500, 501, 502, 503, 321, 504,
	0, 505, 1040, 1041, 1042, 1043, 0, 512, 0, 506,
	507, 1052, 508, 1053, 970, 509, 510, 511, 0, 513,
	514, 0, 954, 515, 516, 517, 519, 520, 518, 521,
	1014, 522, 0, 0, 523, 524, 525, 580, 1037, 1073,
	0, 527, 526, 583, 0, 0, 0, 0, 528, 529,
	584, 530, 531, 532, 951, 0, 0, 0, 0, 0,
	0, 947, 0, 0, 0, 0, 0, 0, 945, 946,
	0, 0, 0, 0, 0, 0, 0, 976, 0, 0,
	1442, 974, 992, 964, 965, 966, 962, 963, 975, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	249, 250, 251, 252, 253, 0, 254, 255, 0, 0,
	0, 0, 0, 1016, 980, 0, 0, 0, 256, 257,
	259, 258, 260, 261, 262, 263, 534, 1029, 0, 264,
	1036, 265, 1035, 0, 1046, 266, 267, 268, 269, 270,
	982, 1015, 949, 271, 1075, 1076, 541, 0, 272, 273,
	1022, 0, 1003, 0, 274, 275, 276, 277, 278, 279,
	280, 0, 0, 282, 283, 284, 281, 0, 285, 0,
	286, 287, 288, 289, 0, 290, 1056, 291, 292, 1006,
	1004, 1005, 1012, 1008, 1007, 1011, 293, 294, 295, 296,
	1039, 297, 1033, 1032, 953, 301, 298, 299, 0, 302,
	300, 0, 303, 304, 305, 0, 0, 306, 1024, 308,
	0, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	959, 316, 317, 318, 320, 322, 319, 323, 324, 325,
	326, 1047, 1048, 971, 245, 0, 0, 0, 0, 0,
	327, 328, 329, 1031, 0, 0, 0, 330, 0, 331,
	0, 0, 1057, 332, 333, 1044, 1045, 334, 335, 0,
	336, 1054, 0, 981, 337, 0, 338, 339, 340, 341,
	342, 1017, 1018, 1021, 400, 1059, 343, 344, 0, 345,
	346, 347, 348, 0, 0, 0, 246, 349, 350, 352,
	0, 1058, 351, 1026, 1027, 0, 987, 0, 353, 354,
	1060, 1019, 1061, 355, 356, 357, 1062, 358, 0, 0,
	0, 359, 360, 361, 362, 363, 364, 0, 365, 367,
	366, 0, 368, 1055, 1063, 369, 370, 1064, 0, 371,
	372, 373, 1010, 1009, 374, 375, 376, 377, 0, 378,
	379, 381, 383, 380, 382, 387, 384, 385, 386, 389,
	0, 388, 1065, 390, 391, 392, 396, 395, 397, 394,
	1066, 393, 950, 247, 1067, 398, 972, 1020, 399, 1034,
	401, 402, 0, 0, 403, 0, 0, 0, 405, 406,
	407, 0, 0, 408, 409, 563, 1068, 410, 1069, 1049,
	411, 412, 404, 413, 414, 415, 416, 417, 418, 419,
	420, 0, 421, 422, 565, 566, 1050, 423, 568, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 431, 432,
	433, 1030, 435, 434, 436, 0, 437, 0, 0, 0,
	0, 0, 438, 0, 440, 441, 442, 439, 443, 444,
	445, 446, 0, 447, 448, 449, 1070, 450, 451, 452,
	453, 960, 454, 0, 455, 456, 462, 463, 457, 458,
	464, 465, 466, 467, 468, 0, 470, 471, 469, 472,
	473, 474, 1013, 475, 459, 460, 476, 477, 1071, 478,
	479, 480, 481, 482, 483, 1028, 0, 484, 0, 485,
	486, 487, 488, 461, 489, 494, 1074, 490, 491, 492,
	493, 1051, 0, 496, 497, 948, 495, 0, 498, 499,
	500, 501, 502, 503, 321, 504, 0, 505, 1040, 1041,
	1042, 1043, 0, 512, 0, 506, 507, 1052, 508, 1053,
	970, 509, 510, 511, 0, 513, 514, 0, 954, 515,
	516, 517, 519, 520, 518, 521, 1014, 522, 0, 0,
	523, 524, 525, 580, 1037, 1073, 0, 527, 526, 583,
	0, 0, 0, 0, 528, 529, 584, 530, 531, 532,
	951, 0, 0, 0, 0, 0, 0, 947, 0, 0,
	0, 0, 0, 0, 945, 946, 0, 0, 0, 0,
	0, 0, 0, 976, 0, 0, 1328, 974, 992, 964,
	965, 966, 962, 963, 975, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 249, 250, 251, 252,
	253, 0, 254, 255, 0, 0, 0, 0, 0, 1016,
	980, 0, 0, 0, 256, 257, 259, 258, 260, 261,
	262, 263, 534, 1029, 0, 264, 1036, 265, 1035, 0,
	1046, 266, 267, 268, 269, 270, 982, 1015, 949, 271,
	1075, 1076, 541, 0, 272, 273, 1022, 0, 1003, 0,
	274, 275, 276, 277, 278, 279, 280, 0, 0, 282,
	283, 284, 281, 0, 285, 0, 286, 287, 288, 289,
	0, 290, 1056, 291, 292, 1006, 1004, 1005, 1012, 1008,
	1007, 1011, 293, 294, 295, 296, 1039, 297, 1033, 1032,
	953, 301, 298, 299, 0, 302, 300, 0, 303, 304,
	305, 0, 0, 306, 1024, 308, 0, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 959, 316, 317, 318,
	320, 322, 319, 323, 324, 325, 326, 1047, 1048, 971,
	245, 0, 0, 0, 0, 0, 327, 328, 329, 1031,
	0, 0, 0, 330, 0, 331, 0, 0, 1057, 332,
	333, 1044, 1045, 334, 335, 0, 336, 1054, 0, 981,
	337, 0, 338, 339, 340, 341, 342, 1327, 1018, 1021,
	400, 1059, 343, 344, 0, 345, 346, 347, 348, 0,
	0, 0, 246, 349, 350, 352, 0, 1058, 351, 1026,
	1027, 0, 987, 0, 353, 354, 1060, 1019, 1061, 355,
	356, 357, 1062, 358, 0, 0, 0, 359, 360, 361,
	362, 363, 364, 0, 365, 367, 366, 0, 368, 1055,
	1063, 369, 370, 1064, 0, 371, 372, 373, 1010, 1009,
	374, 375, 376, 377, 0, 378, 379, 381, 383, 380,
	382, 387, 384, 385, 386, 389, 0, 388, 1065, 390,
	391, 392, 396, 395, 397, 394, 1066, 393, 950, 247,
	1067, 398, 972, 1020, 399, 1034, 401, 402, 0, 0,
	403, 0, 0, 0, 405, 406, 407, 0, 0, 408,
	409, 563, 1068, 410, 1069, 1049, 411, 412, 404, 413,
	414, 415, 416, 417, 418, 419, 420, 0, 421, 422,
	565, 566, 1050, 423, 568, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 431, 432, 433, 1030, 435, 434,
	436, 0, 437, 0, 0, 0, 0, 0, 438, 0,
	440, 441, 442, 439, 443, 444, 445, 446, 0, 447,
	448, 449, 1070, 450, 451, 452, 453, 960, 454, 0,
	455, 456, 462, 463, 457, 458, 464, 465, 466, 467,
	468, 0, 470, 471, 469, 472, 473, 474, 1013, 475,
	459, 460, 476, 477, 1071, 478, 479, 480, 481, 482,
	483, 1028, 0, 484, 0, 485, 486, 487, 488, 461,
	489, 494, 1074, 490, 491, 492, 493, 1051, 0, 496,
	497, 948, 495, 0, 498, 499, 500, 501, 502, 503,
	321, 504, 0, 505, 1040, 1041, 1042, 1043, 0, 512,
	0, 506, 507, 1052, 508, 1053, 970, 509, 510, 511,
	0, 513, 514, 0, 954, 515, 516, 517, 519, 520,
	518, 521, 1014, 522, 0, 0, 523, 524, 525, 580,
	1037, 1073, 0, 527, 526, 583, 0, 0, 0, 0,
	528, 529, 584, 530, 531, 532, 951, 0, 0, 0,
	0, 0, 0, 947, 0, 0, 0, 0, 0, 0,
	945, 946, 0, 0, 0, 0, 0, 0, 0, 976,
	0, 0, 1322, 974, 992, 964, 965, 966, 962, 963,
	975, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 249, 250, 251, 252, 253, 0, 254, 255,
	0, 0, 0, 0, 0, 1016, 980, 0, 0, 0,
	256, 257, 259, 258, 260, 261, 262, 263, 534, 1029,
	0, 264, 1036, 265, 1035, 0, 1046, 266, 267, 268,
	269, 270, 982, 1015, 949, 271, 1075, 1076, 541, 0,
	272, 273, 1022, 0, 1003, 0, 274, 275, 276, 277,
	278, 279, 280, 0, 0, 282, 283, 284, 281, 0,
	285, 0, 286, 287, 288, 289, 0, 290, 1056, 291,
	292, 1006, 1004, 1005, 1012, 1008, 1007, 1011, 293, 294,
	295, 296, 1039, 297, 1033, 1032, 953, 301, 298, 299,
	0, 302, 300, 0, 303, 304, 305, 0, 0, 306,
	1024, 308, 0, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 959, 316, 317, 318, 320, 322, 319, 323,
	324, 325, 326, 1047, 1048, 971, 245, 0, 0, 0,
	0, 0, 327, 328, 329, 1031, 0, 0, 0, 330,
	0, 331, 0, 0, 1057, 332, 333, 1044, 1045, 334,
	335, 0, 336, 1054, 0, 981, 337, 0, 338, 339,
	340, 341, 342, 1321, 1018, 1021, 400, 1059, 343, 344,
	0, 345, 346, 347, 348, 0, 0, 0, 246, 349,
	350, 352, 0, 1058, 351, 1026, 1027, 0, 987, 0,
	353, 354, 1060, 1019, 1061, 355, 356, 357, 1062, 358,
	0, 0, 0, 359, 360, 361, 362, 363, 364, 0,
	365, 367, 366, 0, 368, 1055, 1063, 369, 370, 1064,
	0, 371, 372, 373, 1010, 1009, 374, 375, 376, 377,
	0, 378, 379, 381, 383, 380, 382, 387, 384, 385,
	386, 389, 0, 388, 1065, 390, 391, 392, 396, 395,
	397, 394, 1066, 393, 950, 247, 1067, 398, 972, 1020,
	399, 1034, 401, 402, 0, 0, 403, 0, 0, 0,
	405, 406, 407, 0, 0, 408, 409, 563, 1068, 410,
	1069, 1049, 411, 412, 404, 413, 414, 415, 416, 417,
	418, 419, 420, 0, 421, 422, 565, 566, 1050, 423,
	568, 424, 425, 0, 426, 0, 427, 428, 429, 430,
	431, 432, 433, 1030, 435, 434, 436, 0, 437, 0,
	0, 0, 0, 0, 438, 0, 440, 441, 442, 439,
	443, 444, 445, 446, 0, 447, 448, 449, 1070, 450,
	451, 452, 453, 960, 454, 0, 455, 456, 462, 463,
	457, 458, 464, 465, 466, 467, 468, 0, 470, 471,
	469, 472, 473, 474, 1013, 475, 459, 460, 476, 477,
	1071, 478, 479, 480, 481, 482, 483, 1028, 0, 484,
	0, 485, 486, 487, 488, 461, 489, 494, 1074, 490,
	491, 492, 493, 1051, 0, 496, 497, 948, 495, 0,
	498, 499, 500, 501, 502, 503, 321, 504, 0, 505,
	1040, 1041, 1042, 1043, 0, 512, 0, 506, 507, 1052,
	508, 1053, 970, 509, 510, 511, 0, 513, 514, 0,
	954, 515, 516, 517, 519, 520, 518, 521, 1014, 522,
	0, 0, 523, 524, 525, 580, 1037, 1073, 0, 527,
	526, 583, 0, 0, 0, 0, 528, 529, 584, 530,
	531, 532, 951, 0, 0, 0, 0, 0, 0, 947,
	0, 0, 0, 0, 0, 0, 945, 946, 0, 0,
	0, 0, 0, 0, 0, 976, 0, 0, 1315, 974,
	992, 964, 965, 966, 962, 963, 975, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 249, 250,
	251, 252, 253, 0, 254, 255, 0, 0, 0, 0,
	0, 1016, 980, 0, 0, 0, 256, 257, 259, 258,
	260, 261, 262, 263, 534, 1029, 0, 264, 1036, 265,
	1035, 0, 1046, 266, 267, 268, 269, 270, 982, 1015,
	949, 271, 1075, 1076, 541, 0, 272, 273, 1022, 0,
	1003, 0, 274, 275, 276, 277, 278, 279, 280, 0,
	0, 282, 283, 284, 281, 0, 285, 0, 286, 287,
	288, 289, 0, 290, 1056, 291, 292, 1006, 1004, 1005,
	1012, 1008, 1007, 1011, 293, 294, 295, 296, 1039, 297,
	1033, 1032, 953, 301, 298, 299, 0, 302, 300, 0,
	303, 304, 305, 0, 0, 306, 1024, 308, 0, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 959, 316,
	317, 318, 320, 322, 319, 323, 324, 325, 326, 1047,
	1048, 971, 245, 0, 0, 0, 0, 0, 327, 328,
	329, 1031, 0, 0, 0, 330, 0, 331, 0, 0,
	1057, 332, 333, 1044, 1045, 334, 335, 0, 336, 1054,
	0, 981, 337, 0, 338, 339, 340, 341, 342, 1017,
	1018, 1021, 400, 1059, 343, 344, 0, 345, 346, 347,
	348, 0, 0, 0, 246, 349, 350, 352, 0, 1058,
	351, 1026, 1027, 0, 987, 0, 353, 354, 1060, 1019,
	1061, 355, 356, 357, 1062, 358, 0, 0, 0, 359,
	360, 361, 362, 363, 364, 0, 365, 367, 366, 0,
	368, 1055, 1063, 369, 370, 1064, 0, 371, 372, 373,
	1010, 1009, 374, 375, 376, 377, 0, 378, 379, 381,
	383, 380, 382, 387, 384, 385, 386, 389, 0, 388,
	1065, 390, 391, 392, 396, 395, 397, 394, 1066, 393,
	950, 247, 1067, 398, 972, 1020, 399, 1034, 401, 402,
	0, 0, 403, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 409, 563, 1068, 410, 1069, 1049, 411, 412,
	404, 413, 414, 415, 416, 417, 418, 419, 420, 0,
	421, 422, 565, 566, 1050, 423, 568, 424, 425, 0,
	426, 0, 427, 428, 429, 430, 431, 432, 433, 1030,
	435, 434, 436, 0, 437, 0, 0, 0, 0, 0,
	438, 0, 440, 441, 442, 439, 443, 444, 445, 446,
	0, 447, 448, 449, 1070, 450, 451, 452, 453, 960,
	454, 0, 455, 456, 462, 463, 457, 458, 464, 465,
	466, 467, 468, 0, 470, 471, 469, 472, 473, 474,
	1013, 475, 459, 460, 476, 477, 1071, 478, 479, 480,
	481, 482, 483, 1028, 0, 484, 0, 485, 486, 487,
	488, 461, 489, 494, 1074, 490, 491, 492, 493, 1051,
	0, 496, 497, 948, 495, 0, 498, 499, 500, 501,
	502, 503, 321, 504, 0, 505, 1040, 1041, 1042, 1043,
	0, 512, 0, 506, 507, 1052, 508, 1053, 970, 509,
	510, 511, 0, 513, 514, 0, 954, 515, 516, 517,
	519, 520, 518, 521, 1014, 522, 0, 0, 523, 524,
	525, 580, 1037, 1073, 0, 527, 526, 583, 0, 0,
	0, 0, 528, 529, 584, 530, 531, 532, 951, 0,
	0, 0, 0, 0, 0, 947, 0, 0, 0, 0,
	0, 0, 945, 946, 992, 964, 965, 966, 962, 963,
	975, 976, 0, 0, 0, 974, 0, 0, 0, 0,
	0, 248, 249, 250, 251, 252, 253, 0, 254, 255,
	0, 0, 0, 0, 0, 1016, 980, 0, 0, 0,
	256, 257, 259, 258, 260, 261, 262, 263, 534, 1029,
	0, 264, 1036, 265, 1035, 0, 1046, 266, 267, 268,
	269, 270, 982, 1015, 949, 271, 1075, 1076, 541, 0,
	272, 273, 1022, 0, 1003, 0, 274, 275, 276, 277,
	278, 279, 280, 0, 0, 282, 283, 284, 281, 0,
	285, 0, 286, 287, 288, 289, 0, 290, 1056, 291,
	292, 1006, 1004, 1005, 1012, 1008, 1007, 1011, 293, 294,
	295, 296, 1039, 297, 1033, 1032, 953, 301, 298, 299,
	0, 302, 300, 0, 303, 304, 305, 0, 0, 306,
	1024, 308, 0, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 959, 316, 317, 318, 320, 322, 319, 323,
	324, 325, 326, 1047, 1048, 971, 245, 0, 0, 0,
	0, 0, 327, 328, 329, 1031, 0, 0, 0, 330,
	0, 331, 0, 0, 1057, 332, 333, 1044, 1045, 334,
	335, 0, 336, 1054, 0, 981, 337, 0, 338, 339,
	340, 341, 342, 1017, 1018, 1021, 400, 1059, 343, 344,
	0, 345, 346, 347, 348, 0, 0, 0, 246, 349,
	350, 352, 0, 1058, 351, 1026, 1027, 0, 987, 0,
	353, 354, 1060, 1019, 1061, 355, 356, 357, 1062, 358,
	0, 0, 0, 359, 360, 361, 362, 363, 364, 0,
	365, 367, 366, 0, 368, 1055, 1063, 369, 370, 1064,
	0, 371, 372, 373, 1010, 1009, 374, 375, 376, 377,
	0, 378, 379, 381, 383, 380, 382, 387, 384, 385,
	386, 389, 0, 388, 1065, 390, 391, 392, 396, 395,
	397, 394, 1066, 393, 950, 247, 1067, 398, 972, 1020,
	399, 1034, 401, 402, 0, 0, 403, 0, 0, 0,
	405, 406, 407, 0, 0, 408, 409, 563, 1068, 410,
	1069, 1049, 411, 412, 404, 413, 414, 415, 416, 417,
	418, 419, 420, 0, 421, 422, 565, 566, 1050, 423,
	568, 424, 425, 0, 426, 0, 427, 428, 429, 430,
	431, 432, 433, 1030, 435, 434, 436, 0, 437, 0,
	0, 0, 0, 0, 438, 0, 440, 441, 442, 439,
	443, 444, 445, 446, 0, 447, 448, 449, 1070, 450,
	451, 452, 453, 960, 454, 0, 455, 456, 462, 463,
	457, 458, 464, 465, 466, 467, 468, 0, 470, 471,
	469, 472, 473, 474, 1013, 475, 459, 460, 476, 477,
	1071, 478, 479, 480, 481, 482, 483, 1028, 0, 484,
	0, 485, 486, 487, 488, 461, 489, 494, 1074, 490,
	491, 492, 493, 1051, 0, 496, 497, 948, 495, 0,
	498, 499, 500, 501, 502, 503, 321, 504, 0, 505,
	1040, 1041, 1042, 1043, 0, 512, 0, 506, 507, 1052,
	508, 1053, 970, 509, 510, 511, 0, 513, 514, 0,
	954, 515, 516, 517, 519, 520, 518, 521, 1014, 522,
	0, 0, 523, 524, 525, 580, 1037, 1073, 0, 527,
	526, 583, 0, 0, 0, 0, 528, 529, 584, 530,
	531, 532, 951, 0, 0, 0, 0, 0, 0, 947,
	0, 0, 0, 0, 0, 0, 945, 946, 992, 964,
	965, 966, 962, 963, 975, 976, 0, 0, 0, 974,
	0, 0, 0, 0, 0, 248, 249, 250, 251, 252,
	253, 0, 254, 255, 0, 0, 0, 0, 0, 1016,
	980, 0, 0, 0, 256, 257, 259, 258, 260, 261,
	262, 263, 534, 1029, 0, 264, 1036, 265, 1035, 0,
	1046, 266, 267, 268, 269, 270, 982, 1015, 949, 271,
	1075, 1076, 541, 0, 272, 273, 1022, 0, 1003, 0,
	274, 275, 276, 277, 278, 279, 280, 0, 0, 282,
	283, 284, 281, 0, 285, 0, 286, 287, 288, 289,
	0, 290, 1056, 291, 4068, 1006, 1004, 1005, 1012, 1008,
	1007, 1011, 293, 294, 295, 296, 1039, 297, 1033, 1032,
	953, 301, 298, 299, 0, 302, 300, 0, 303, 304,
	305, 0, 0, 306, 1024, 308, 0, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 959, 316, 317, 318,
	320, 322, 319, 323, 324, 325, 326, 1047, 1048, 971,
	245, 0, 0, 0, 0, 0, 327, 328, 329, 1031,
	0, 0, 0, 330, 0, 331, 0, 0, 1057, 332,
	333, 1044, 1045, 334, 335, 0, 336, 1054, 0, 981,
	337, 0, 338, 339, 340, 341, 342, 1017, 1018, 1021,
	400, 1059, 343, 344, 0, 345, 346, 347, 348, 0,
	0, 0, 246, 349, 350, 352, 0, 1058, 351, 1026,
	1027, 0, 987, 0, 353, 354, 1060, 1019, 1061, 355,
	356, 357, 1062, 358, 0, 0, 0, 359, 360, 361,
	362, 363, 364, 0, 365, 367, 366, 0, 368, 1055,
	1063, 369, 370, 1064, 0, 371, 372, 373, 1010, 1009,
	374, 375, 376, 377, 0, 378, 379, 381, 383, 380,
	382, 387, 384, 385, 386, 389, 0, 388, 1065, 390,
	391, 392, 396, 395, 397, 394, 1066, 393, 950, 247,
	1067, 398, 972, 1020, 399, 1034, 401, 402, 0, 0,
	403, 0, 0, 0, 405, 406, 407, 0, 0, 408,
	409, 563, 1068, 410, 1069, 1049, 411, 412, 404, 413,
	414, 415, 416, 417, 418, 419, 420, 0, 421, 422,
	565, 566, 1050, 423, 568, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 431, 432, 433, 1030, 435, 434,
	436, 0, 437, 0, 0, 0, 0, 0, 438, 0,
	440, 441, 442, 439, 443, 444, 445, 446, 0, 447,
	448, 449, 1070, 450, 451, 452, 453, 960, 454, 0,
	455, 456, 462, 463, 457, 458, 464, 465, 466, 467,
	468, 0, 470, 471, 469, 472, 473, 474, 1013, 475,
	459, 460, 476, 477, 1071, 478, 479, 480, 481, 482,
	483, 1028, 0, 484, 0, 485, 486, 487, 488, 461,
	489, 494, 1074, 490, 491, 492, 493, 1051, 0, 496,
	497, 948, 495, 0, 498, 499, 500, 501, 502, 503,
	321, 504, 0, 505, 1040, 1041, 1042, 1043, 0, 512,
	0, 506, 507, 1052, 508, 1053, 970, 509, 510, 511,
	0, 4067, 514, 0, 954, 515, 516, 517, 519, 520,
	518, 521, 1014, 522, 0, 0, 523, 524, 525, 580,
	1037, 1073, 0, 527, 526, 583, 0, 0, 0, 0,
	528, 529, 584, 530, 531, 532, 951, 0, 0, 0,
	0, 0, 0, 947, 0, 0, 0, 0, 0, 0,
	945, 946, 992, 964, 965, 966, 962, 963, 975, 976,
	0, 0, 0, 974, 0, 0, 0, 0, 0, 248,
	249, 250, 251, 252, 253, 0, 254, 255, 0, 0,
	0, 0, 0, 1016, 980, 0, 0, 0, 256, 257,
	259, 258, 260, 261, 262, 263, 4066, 1029, 0, 264,
	1036, 265, 1035, 0, 1046, 266, 267, 268, 269, 270,
	982, 1015, 949, 271, 1075, 1076, 541, 0, 272, 273,
	1022, 0, 1003, 0, 274, 275, 276, 277, 278, 279,
	280, 0, 0, 282, 283, 284, 281, 0, 285, 0,
	286, 287, 288, 289, 0, 290, 1056, 291, 4068, 1006,
	1004, 1005, 1012, 1008, 1007, 1011, 293, 294, 295, 296,
	1039, 297, 1033, 1032, 953, 301, 298, 299, 0, 302,
	300, 0, 303, 304, 305, 0, 0, 306, 1024, 308,
	0, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	959, 316, 317, 318, 320, 322, 319, 323, 324, 325,
	326, 1047, 1048, 971, 245, 0, 0, 0, 0, 0,
	327, 328, 329, 1031, 0, 0, 0, 330, 0, 331,
	0, 0, 1057, 332, 333, 1044, 1045, 334, 335, 0,
	336, 1054, 0, 981, 337, 0, 338, 339, 340, 341,
	342, 1017, 1018, 1021, 400, 1059, 343, 344, 0, 345,
	346, 347, 348, 0, 0, 0, 246, 349, 350, 352,
	0, 1058, 351, 1026, 1027, 0, 987, 0, 353, 354,
	1060, 1019, 1061, 355, 356, 357, 1062, 358, 0, 0,
	0, 359, 360, 361, 362, 363, 364, 0, 365, 367,
	366, 0, 368, 1055, 1063, 369, 370, 1064, 0, 371,
	372, 373, 1010, 1009, 374, 375, 376, 377, 0, 378,
	379, 381, 383, 380, 382, 387, 384, 385, 386, 389,
	0, 388, 1065, 390, 391, 392, 396, 395, 397, 394,
	1066, 393, 950, 247, 1067, 398, 972, 1020, 399, 1034,
	401, 402, 0, 0, 403, 0, 0, 0, 405, 406,
	407, 0, 0, 408, 409, 563, 1068, 410, 1069, 1049,
	411, 412, 404, 413, 414, 415, 416, 417, 418, 419,
	420, 0, 421, 422, 565, 566, 1050, 423, 568, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 431, 432,
	433, 1030, 435, 434, 436, 0, 437, 0, 0, 0,
	0, 0, 438, 0, 440, 441, 442, 439, 443, 444,
	445, 446, 0, 447, 448, 449, 1070, 450, 451, 452,
	453, 960, 454, 0, 455, 456, 462, 463, 457, 458,
	464, 465, 466, 467, 468, 0, 470, 471, 469, 472,
	473, 474, 1013, 475, 459, 460, 476, 477, 1071, 478,
	479, 480, 481, 482, 483, 1028, 0, 484, 0, 485,
	486, 487, 488, 461, 489, 494, 1074, 490, 491, 492,
	493, 1051, 0, 496, 497, 948, 495, 0, 498, 499,
	500, 501, 502, 503, 321, 504, 0, 505, 1040, 1041,
	1042, 1043, 0, 512, 0, 506, 507, 1052, 508, 1053,
	970, 509, 510, 511, 0, 4067, 514, 0, 954, 515,
	516, 517, 519, 520, 518, 521, 1014, 522, 0, 0,
	523, 524, 525, 580, 1037, 1073, 0, 527, 526, 583,
	0, 0, 0, 0, 528, 529, 584, 530, 531, 532,
	951, 0, 0, 0, 0, 0, 0, 947, 0, 0,
	0, 0, 0, 0, 945, 946, 992, 964, 965, 966,
	2765, 2766, 975, 976, 0, 0, 0, 974, 0, 0,
	0, 0, 0, 248, 249, 250, 251, 252, 253, 0,
	254, 255, 0, 0, 0, 0, 0, 1016, 980, 0,
	0, 0, 256, 257, 259, 258, 260, 261, 262, 263,
	534, 1029, 0, 264, 1036, 265, 1035, 0, 1046, 266,
	267, 268, 269, 270, 982, 1015, 949, 271, 1075, 1076,
	541, 0, 272, 273, 1022, 0, 1003, 0, 274, 275,
	276, 277, 278, 279, 280, 0, 0, 282, 283, 284,
	281, 0, 285, 0, 286, 287, 288, 289, 0, 290,
	1056, 291, 292, 1006, 1004, 1005, 1012, 1008, 1007, 1011,
	293, 294, 295, 296, 1039, 297, 1033, 1032, 953, 301,
	298, 299, 0, 302, 300, 0, 303, 304, 305, 0,
	0, 306, 1024, 308, 0, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 959, 316, 317, 318, 320, 322,
	319, 323, 324, 325, 326, 1047, 1048, 971, 245, 0,
	0, 0, 0, 0, 327, 328, 329, 1031, 0, 0,
	0, 330, 0, 331, 0, 0, 1057, 332, 333, 1044,
	1045, 334, 335, 0, 336, 1054, 0, 981, 337, 0,
	338, 339, 340, 341, 342, 1017, 1018, 1021, 400, 1059,
	343, 344, 0, 345, 346, 347, 348, 0, 0, 0,
	246, 349, 350, 352, 0, 1058, 351, 1026, 1027, 0,
	987, 0, 353, 354, 1060, 1019, 1061, 355, 356, 357,
	1062, 358, 0, 0, 0, 359, 360, 361, 362, 363,
	364, 0, 365, 367, 366, 0, 368, 1055, 1063, 369,
	370, 1064, 0, 371, 372, 373, 1010, 1009, 374, 375,
	376, 377, 0, 378, 379, 381, 383, 380, 382, 387,
	384, 385, 386, 389, 0, 388, 1065, 390, 391, 392,
	396, 395, 397, 394, 1066, 393, 950, 247, 1067, 398,
	972, 1020, 399, 1034, 401, 402, 0, 0, 403, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 409, 563,
	1068, 410, 1069, 1049, 411, 412, 404, 413, 414, 415,
	416, 417, 418, 419, 420, 0, 421, 422, 565, 566,
	1050, 423, 568, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 431, 432, 433, 1030, 435, 434, 436, 0,
	437, 0, 0, 0, 0, 0, 438, 0, 440, 441,
	442, 439, 443, 444, 445, 446, 0, 447, 448, 449,
	1070, 450, 451, 452, 453, 960, 454, 0, 455, 456,
	462, 463, 457, 458, 464, 465, 466, 467, 468, 0,
	470, 471, 469, 472, 473, 474, 1013, 475, 459, 460,
	476, 477, 1071, 478, 479, 480, 481, 482, 483, 1028,
	0, 484, 0, 485, 486, 487, 488, 461, 489, 494,
	1074, 490, 491, 492, 493, 1051, 0, 496, 497, 948,
	495, 0, 498, 499, 500, 501, 502, 503, 321, 504,
	0, 505, 1040, 1041, 1042, 1043, 0, 512, 0, 506,
	507, 1052, 508, 1053, 970, 509, 510, 511, 0, 513,
	514, 0, 954, 515, 516, 517, 519, 520, 518, 521,
	1014, 522, 0, 0, 523, 524, 525, 580, 1037, 1073,
	0, 527, 526, 583, 0, 0, 0, 0, 528, 529,
	584, 530, 531, 532, 951, 0, 0, 0, 0, 0,
	0, 947, 0, 0, 0, 0, 0, 0, 945, 946,
	992, 964, 965, 966, 2763, 2764, 975, 976, 0, 0,
	0, 974, 0, 0, 0, 0, 0, 248, 249, 250,
	251, 252, 253, 0, 254, 255, 0, 0, 0, 0,
	0, 1016, 980, 0, 0, 0, 256, 257, 259, 258,
	260, 261, 262, 263, 534, 1029, 0, 264, 1036, 265,
	1035, 0, 1046, 266, 267, 268, 269, 270, 982, 1015,
	949, 271, 1075, 1076, 541, 0, 272, 273, 1022, 0,
	1003, 0, 274, 275, 276, 277, 278, 279, 280, 0,
	0, 282, 283, 284, 281, 0, 285, 0, 286, 287,
	288, 289, 0, 290, 1056, 291, 292, 1006, 1004, 1005,
	1012, 1008, 1007, 1011, 293, 294, 295, 296, 1039, 297,
	1033, 1032, 953, 301, 298, 299, 0, 302, 300, 0,
	303, 304, 305, 0, 0, 306, 1024, 308, 0, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 959, 316,
	317, 318, 320, 322, 319, 323, 324, 325, 326, 1047,
	1048, 971, 245, 0, 0, 0, 0, 0, 327, 328,
	329, 1031, 0, 0, 0, 330, 0, 331, 0, 0,
	1057, 332, 333, 1044, 1045, 334, 335, 0, 336, 1054,
	0, 981, 337, 0, 338, 339, 340, 341, 342, 1017,
	1018, 1021, 400, 1059, 343, 344, 0, 345, 346, 347,
	348, 0, 0, 0, 246, 349, 350, 352, 0, 1058,
	351, 1026, 1027, 0, 987, 0, 353, 354, 1060, 1019,
	1061, 355, 356, 357, 1062, 358, 0, 0, 0, 359,
	360, 361, 362, 363, 364, 0, 365, 367, 366, 0,
	368, 1055, 1063, 369, 370, 1064, 0, 371, 372, 373,
	1010, 1009, 374, 375, 376, 377, 0, 378, 379, 381,
	383, 380, 382, 387, 384, 385, 386, 389, 0, 388,
	1065, 390, 391, 392, 396, 395, 397, 394, 1066, 393,
	950, 247, 1067, 398, 972, 1020, 399, 1034, 401, 402,
	0, 0, 403, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 409, 563, 1068, 410, 1069, 1049, 411, 412,
	404, 413, 414, 415, 416, 417, 418, 419, 420, 0,
	421, 422, 565, 566, 1050, 423, 568, 424, 425, 0,
	426, 0, 427, 428, 429, 430, 431, 432, 433, 1030,
	435, 434, 436, 0, 437, 0, 0, 0, 0, 0,
	438, 0, 440, 441, 442, 439, 443, 444, 445, 446,
	0, 447, 448, 449, 1070, 450, 451, 452, 453, 960,
	454, 0, 455, 456, 462, 463, 457, 458, 464, 465,
	466, 467, 468, 0, 470, 471, 469, 472, 473, 474,
	1013, 475, 459, 460, 476, 477, 1071, 478, 479, 480,
	481, 482, 483, 1028, 0, 484, 0, 485, 486, 487,
	488, 461, 489, 494, 1074, 490, 491, 492, 493, 1051,
	0, 496, 497, 948, 495, 0, 498, 499, 500, 501,
	502, 503, 321, 504, 0, 505, 1040, 1041, 1042, 1043,
	0, 512, 0, 506, 507, 1052, 508, 1053, 970, 509,
	510, 511, 0, 513, 514, 0, 954, 515, 516, 517,
	519, 520, 518, 521, 1014, 522, 0, 0, 523, 524,
	525, 580, 1037, 1073, 0, 527, 526, 583, 0, 0,
	0, 0, 528, 529, 584, 530, 531, 532, 951, 0,
	0, 0, 0, 0, 0, 947, 0, 0, 0, 0,
	0, 0, 945, 946, 992, 964, 965, 966, 962, 963,
	975, 976, 0, 0, 0, 974, 0, 0, 0, 0,
	0, 248, 249, 250, 251, 252, 253, 0, 254, 255,
	0, 0, 0, 0, 0, 1016, 980, 0, 0, 0,
	256, 257, 259, 258, 260, 261, 262, 263, 534, 1029,
	0, 264, 1036, 265, 1035, 0, 1046, 266, 267, 268,
	269, 270, 982, 1015, 949, 271, 1075, 1076, 541, 0,
	272, 273, 1022, 0, 1003, 0, 274, 275, 276, 277,
	278, 279, 280, 0, 0, 282, 283, 284, 281, 0,
	285, 0, 286, 287, 288, 289, 0, 290, 1056, 291,
	292, 1006, 1004, 1005, 1012, 1008, 1007, 1011, 293, 294,
	295, 296, 1039, 297, 1033, 1032, 953, 301, 298, 299,
	0, 302, 300, 0, 303, 304, 305, 0, 0, 306,
	1024, 308, 0, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 959, 316, 317, 318, 320, 322, 319, 323,
	324, 325, 326, 1047, 1048, 971, 245, 0, 0, 0,
	0, 0, 327, 328, 329, 1031, 0, 0, 0, 330,
	0, 331, 0, 0, 1057, 332, 333, 1044, 1045, 334,
	335, 0, 336, 1054, 0, 981, 337, 0, 338, 339,
	340, 341, 342, 1017, 1018, 1021, 400, 1059, 343, 344,
	0, 345, 346, 347, 348, 0, 0, 0, 246, 349,
	350, 352, 0, 1058, 351, 1026, 1027, 0, 987, 0,
	353, 354, 1060, 1019, 1061, 355, 356, 357, 1062, 358,
	0, 0, 0, 359, 360, 361, 362, 363, 364, 0,
	365, 367, 366, 0, 368, 1055, 1063, 369, 370, 1064,
	0, 371, 372, 373, 1010, 1009, 374, 375, 376, 377,
	0, 378, 379, 381, 383, 380, 382, 387, 384, 385,
	386, 389, 0, 388, 1065, 390, 391, 392, 396, 395,
	397, 394, 1066, 393, 950, 247, 1067, 398, 972, 1020,
	399, 1034, 401, 402, 0, 0, 403, 0, 0, 0,
	405, 406, 407, 0, 0, 408, 409, 563, 1068, 410,
	1069, 1049, 411, 412, 404, 413, 414, 415, 416, 417,
	418, 419, 420, 0, 421, 422, 565, 566, 1050, 423,
	568, 424, 425, 0, 426, 0, 427, 428, 429, 430,
	431, 432, 433, 1030, 435, 434, 436, 0, 437, 0,
	0, 0, 0, 0, 438, 0, 440, 441, 442, 439,
	443, 444, 445, 446, 0, 447, 448, 449, 1070, 450,
	451, 452, 453, 960, 454, 0, 455, 456, 462, 463,
	457, 458, 464, 465, 466, 467, 468, 0, 470, 471,
	469, 472, 473, 474, 1013, 475, 459, 460, 476, 477,
	1071, 478, 479, 480, 481, 482, 483, 1028, 0, 484,
	0, 485, 486, 487, 488, 461, 489, 494, 1074, 490,
	491, 492, 493, 1051, 0, 496, 497, 948, 495, 0,
	498, 499, 500, 501, 502, 503, 321, 504, 0, 505,
	1040, 1041, 1042, 1043, 0, 512, 0, 506, 507, 1052,
	508, 1053, 970, 509, 510, 511, 0, 513, 514, 0,
	954, 515, 516, 517, 519, 520, 518, 521, 1014, 522,
	0, 0, 523, 524, 525, 580, 1037, 1073, 0, 527,
	526, 583, 0, 0, 0, 0, 528, 529, 584, 530,
	531, 532, 951, 0, 0, 0, 0, 0, 0, 947,
	0, 0, 0, 0, 0, 0, 2172, 2173, 992, 964,
	965, 966, 962, 963, 975, 976, 0, 0, 0, 974,
	0, 0, 0, 0, 0, 248, 249, 250, 251, 252,
	253, 0, 254, 255, 0, 0, 0, 0, 0, 1016,
	980, 0, 0, 0, 256, 257, 259, 258, 260, 261,
	262, 263, 534, 1029, 0, 264, 1036, 265, 1035, 0,
	1046, 266, 267, 268, 269, 270, 982, 1015, 0, 271,
	1075, 1076, 541, 0, 272, 273, 1022, 0, 1003, 0,
	274, 275, 276, 277, 278, 279, 280, 0, 0, 282,
	283, 284, 281, 0, 285, 0, 286, 287, 288, 289,
	0, 290, 1056, 291, 292, 1006, 1004, 1005, 1012, 1008,
	1007, 1011, 293, 294, 295, 296, 1039, 297, 1033, 1032,
	0, 301, 298, 299, 0, 302, 300, 0, 303, 304,
	305, 0, 0, 306, 1024, 308, 0, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 959, 316, 317, 318,
	320, 322, 319, 323, 324, 325, 326, 1047, 1048, 971,
	245, 0, 0, 0, 0, 0, 327, 328, 329, 1031,
	0, 0, 0, 330, 0, 331, 0, 0, 1057, 332,
	333, 1044, 1045, 334, 335, 0, 336, 1054, 0, 981,
	337, 0, 338, 339, 340, 341, 342, 1017, 1018, 1021,
	400, 1059, 343, 344, 0, 345, 346, 347, 348, 0,
	0, 0, 246, 349, 350, 352, 0, 1058, 351, 1026,
	1027, 0, 987, 0, 353, 354, 1060, 1019, 1061, 355,
	356, 357, 1062, 358, 0, 0, 0, 359, 360, 361,
	362, 363, 364, 0, 365, 367, 366, 0, 368, 1055,
	1063, 369, 370, 1064, 0, 371, 372, 373, 1010, 1009,
	374, 375, 376, 377, 0, 378, 379, 381, 383, 380,
	382, 387, 384, 385, 386, 389, 0, 388, 1065, 390,
	391, 392, 396, 395, 397, 394, 1066, 393, 0, 247,
	1067, 398, 972, 1020, 399, 1034, 401, 402, 0, 0,
	403, 0, 0, 0, 405, 406, 407, 0, 0, 408,
	409, 563, 1068, 410, 1069, 1049, 411, 412, 404, 413,
	414, 415, 416, 417, 418, 419, 420, 0, 421, 422,
	565, 566, 1050, 423, 568, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 431, 432, 433, 1030, 435, 434,
	436, 0, 437, 0, 0, 0, 0, 0, 438, 0,
	440, 441, 442, 439, 443, 444, 445, 446, 0, 447,
	448, 449, 1070, 450, 451, 452, 453, 960, 454, 0,
	455, 456, 462, 463, 457, 458, 464, 465, 466, 467,
	468, 0, 470, 471, 469, 472, 473, 474, 1013, 475,
	459, 460, 476, 477, 1071, 478, 479, 480, 481, 482,
	483, 1028, 0, 484, 0, 485, 486, 487, 488, 461,
	489, 494, 1074, 490, 491, 492, 493, 1051, 0, 496,
	497, 0, 495, 0, 498, 499, 500, 501, 502, 503,
	321, 504, 0, 505, 1040, 1041, 1042, 1043, 0, 512,
	0, 506, 507, 1052, 508, 1053, 970, 509, 510, 511,
	0, 513, 514, 0, 0, 515, 516, 517, 519, 520,
	518, 521, 1014, 522, 0, 0, 523, 524, 525, 580,
	1037, 1073, 0, 527, 526, 583, 0, 0, 0, 0,
	528, 529, 584, 530, 531, 532, 992, 964, 965, 966,
	962, 963, 975, 2368, 0, 0, 0, 0, 0, 0,
	2366, 2367, 0, 248, 249, 250, 251, 252, 253, 976,
	254, 255, 0, 974, 0, 0, 0, 1016, 980, 0,
	0, 0, 256, 257, 259, 258, 260, 261, 262, 263,
	534, 1029, 0, 264, 1036, 265, 1035, 0, 1046, 266,
	267, 268, 269, 270, 982, 1015, 0, 271, 1075, 1076,
	541, 0, 272, 273, 1022, 0, 1003, 0, 274, 275,
	276, 277, 278, 279, 280, 0, 0, 282, 283, 284,
	281, 0, 285, 0, 286, 287, 288, 289, 0, 290,
	1056, 291, 292, 1006, 1004, 1005, 1012, 1008, 1007, 1011,
	293, 294, 295, 296, 1039, 297, 1033, 1032, 0, 301,
	298, 299, 0, 302, 300, 0, 303, 304, 305, 0,
	0, 306, 1024, 308, 0, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 959, 316, 317, 318, 320, 322,
	319, 323, 324, 325, 326, 1047, 1048, 971, 245, 0,
	0, 0, 0, 0, 327, 328, 329, 1031, 0, 0,
	0, 330, 0, 331, 0, 0, 1057, 332, 333, 1044,
	1045, 334, 335, 0, 336, 1054, 0, 981, 337, 0,
	338, 339, 340, 341, 342, 1017, 1018, 1021, 400, 1059,
	343, 344, 0, 345, 346, 347, 348, 0, 0, 0,
	246, 349, 350, 352, 0, 1058, 351, 1026, 1027, 0,
	987, 0, 353, 354, 1060, 1019, 1061, 355, 356, 357,
	1062, 358, 0, 0, 0, 359, 360, 361, 362, 363,
	364, 0, 365, 367, 366, 0, 368, 1055, 1063, 369,
	370, 1064, 0, 371, 372, 373, 1010, 1009, 374, 375,
	376, 377, 0, 378, 379, 381, 383, 380, 382, 387,
	384, 385, 386, 389, 0, 388, 1065, 390, 391, 392,
	396, 395, 397, 394, 1066, 393, 0, 247, 1067, 398,
	972, 1020, 399, 1034, 401, 402, 0, 0, 403, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 409, 563,
	1068, 410, 1069, 1049, 411, 412, 404, 413, 414, 415,
	416, 417, 418, 419, 420, 0, 421, 422, 565, 566,
	1050, 423, 568, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 431, 432, 433, 1030, 435, 434, 436, 0,
	437, 0, 0, 0, 0, 0, 438, 0, 440, 441,
	442, 439, 443, 444, 445, 446, 0, 447, 448, 449,
	1070, 450, 451, 452, 453, 2758, 2759, 0, 455, 456,
	462, 463, 457, 458, 464, 465, 466, 467, 468, 0,
	470, 471, 469, 472, 473, 474, 1013, 475, 459, 460,
	476, 477, 1071, 478, 479, 480, 481, 482, 483, 1028,
	0, 484, 0, 485, 486, 487, 488, 461, 489, 494,
	1074, 490, 491, 492, 493, 1051, 0, 496, 497, 0,
	495, 0, 498, 499, 500, 501, 502, 503, 321, 504,
	0, 505, 1040, 1041, 1042, 1043, 0, 512, 0, 506,
	507, 1052, 508, 1053, 970, 509, 510, 511, 0, 513,
	514, 0, 0, 515, 516, 517, 519, 520, 518, 521,
	1014, 522, 0, 0, 523, 524, 525, 580, 1037, 1073,
	0, 527, 526, 583, 0, 0, 0, 0, 528, 529,
	584, 530, 531, 532, 992, 964, 965, 966, 962, 963,
	975, 0, 0, 0, 0, 0, 0, 0, 1887, 1888,
	0, 248, 249, 250, 251, 252, 253, 976, 254, 255,
	0, 974, 0, 0, 0, 1016, 980, 0, 0, 0,
	256, 257, 259, 258, 260, 261, 262, 263, 0, 1029,
	0, 264, 1036, 265, 1035, 0, 1046, 266, 267, 268,
	269, 270, 982, 1015, 949, 271, 1075, 1076, 541, 0,
	272, 273, 1022, 0, 1003, 0, 274, 275, 276, 277,
	278, 279, 280, 0, 0, 282, 283, 284, 281, 0,
	285, 0, 286, 287, 288, 289, 0, 290, 1056, 291,
	4068, 1006, 1004, 1005, 1012, 1008, 1007, 1011, 293, 294,
	295, 296, 1039, 297, 1033, 1032, 953, 301, 298, 299,
	0, 302, 300, 0, 303, 304, 305, 0, 0, 306,
	1024, 308, 0, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 959, 316, 317, 318, 320, 322, 319, 323,
	324, 325, 326, 1047, 1048, 971, 245, 0, 0, 0,
	0, 0, 327, 328, 329, 1031, 0, 0, 0, 330,
	0, 331, 0, 0, 1057, 332, 333, 1044, 1045, 334,
	335, 0, 336, 1054, 0, 981, 337, 0, 338, 339,
	340, 341, 342, 1017, 1018, 1021, 400, 0, 343, 344,
	0, 345, 346, 347, 348, 0, 0, 0, 246, 349,
	350, 352, 0, 1058, 351, 1026, 1027, 0, 987, 0,
	353, 354, 0, 1019, 0, 355, 356, 357, 1062, 358,
	0, 0, 0, 359, 360, 361, 362, 363, 364, 0,
	365, 367, 366, 0, 368, 1055, 1063, 369, 370, 0,
	0, 371, 372, 373, 1010, 1009, 374, 375, 376, 377,
	0, 378, 379, 381, 383, 380, 382, 387, 384, 385,
	386, 389, 0, 388, 1065, 390, 391, 392, 396, 395,
	397, 394, 1066, 393, 950, 247, 0, 398, 972, 1020,
	399, 1034, 401, 402, 0, 0, 403, 0, 0, 0,
	405, 406, 407, 0, 0, 408, 409, 563, 1068, 410,
	1069, 1049, 411, 412, 404, 413, 414, 415, 416, 417,
	418, 419, 420, 0, 421, 422, 565, 566, 1050, 423,
	568, 424, 425, 0, 426, 0, 427, 428, 429, 430,
	431, 432, 433, 1030, 435, 434, 436, 0, 437, 0,
	0, 0, 0, 0, 438, 0, 440, 441, 442, 439,
	443, 444, 445, 446, 0, 447, 448, 449, 1070, 450,
	451, 452, 453, 960, 454, 0, 455, 456, 462, 463,
	457, 458, 464, 465, 466, 467, 468, 0, 470, 471,
	469, 472, 473, 474, 1013, 475, 459, 460, 476, 477,
	0, 478, 479, 480, 481, 482, 483, 1028, 0, 484,
	0, 485, 486, 487, 488, 461, 489, 494, 1074, 490,
	491, 492, 493, 1051, 0, 496, 497, 948, 495, 0,
	498, 499, 500, 501, 502, 503, 321, 504, 0, 505,
	1040, 1041, 1042, 1043, 0, 512, 0, 506, 507, 1052,
	508, 1053, 970, 509, 510, 511, 0, 4067, 514, 0,
	954, 515, 516, 517, 519, 520, 518, 521, 1014, 522,
	0, 0, 523, 524, 525, 580, 1037, 1073, 0, 527,
	526, 583, 0, 0, 0, 0, 528, 529, 584, 530,
	531, 532, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 938, 0, 1113, 0, 0, 945, 946, 0, 0,
	0, 0, 0, 0, 0, 976, 0, 0, 0, 974,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 0, 1016, 0, 0, 0, 0, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 1015, 0, 271, 539, 540, 541, 0, 272,
	273, 1022, 0, 1003, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 1056, 291, 292,
	1006, 1004, 1005, 1012, 1008, 1007, 1011, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 1047, 1048, 0, 245, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 1057, 332, 333, 549, 550, 334, 335,
	0, 336, 1054, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 1017, 1018, 1021, 400, 1059, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 246, 349, 350,
	352, 0, 1058, 351, 556, 557, 0, 558, 0, 353,
	354, 1060, 1019, 1061, 355, 356, 357, 1062, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 1099, 365,
	367, 366, 0, 368, 1055, 1063, 369, 370, 1064, 0,
	371, 372, 373, 1010, 1009, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 388, 1065, 390, 391, 392, 396, 395, 397,
	394, 1066, 393, 0, 247, 1067, 398, 0, 1020, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 1105, 405,
	406, 407, 0, 0, 408, 409, 563, 1068, 410, 1069,
	1049, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 1050, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 1070, 450, 451,
	452, 453, 570, 1107, 0, 455, 456, 462, 463, 457,
	458, 464, 465, 466, 467, 468, 209, 470, 471, 469,
	472, 473, 474, 1013, 475, 459, 460, 476, 477, 1071,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 1051, 0, 496, 497, 0, 495, 211, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 574,
	575, 576, 577, 0, 512, 0, 506, 507, 1052, 508,
	1053, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 1014, 522, 0,
	0, 523, 524, 525, 1449, 581, 582, 0, 527, 526,
	583, 0, 1113, 0, 203, 528, 529, 584, 530, 531,
	532, 0, 204, 0, 0, 0, 0, 0, 0, 248,
	249, 250, 251, 252, 253, 0, 254, 255, 0, 0,
	0, 0, 1103, 1016, 1776, 0, 0, 0, 256, 257,
	259, 258, 260, 261, 262, 263, 534, 535, 0, 264,
	536, 265, 537, 0, 538, 266, 267, 268, 269, 270,
	0, 1015, 0, 271, 539, 540, 541, 0, 272, 273,
	1022, 0, 1003, 0, 274, 275, 276, 277, 278, 279,
	280, 0, 0, 282, 283, 284, 281, 0, 285, 0,
	286, 287, 288, 289, 0, 290, 1056, 291, 292, 1006,
	1004, 1005, 1012, 1008, 1007, 1011, 293, 294, 295, 296,
	0, 297, 543, 544, 0, 301, 298, 299, 0, 302,
	300, 0, 303, 304, 305, 0, 0, 306, 307, 308,
	0, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	545, 316, 317, 318, 320, 322, 319, 323, 324, 325,
	326, 1047, 1048, 0, 245, 0, 0, 0, 0, 0,
	327, 328, 329, 548, 0, 0, 0, 330, 0, 331,
	0, 0, 1057, 332, 333, 549, 550, 334, 335, 0,
	336, 1054, 0, 552, 337, 0, 338, 339, 340, 341,
	342, 1017, 1018, 1021, 400, 1059, 343, 344, 0, 345,
	346, 347, 348, 0, 0, 0, 246, 349, 350, 352,
	0, 1058, 351, 556, 557, 0, 558, 0, 353, 354,
	1060, 1019, 1061, 355, 356, 357, 1062, 358, 0, 0,
	0, 359, 360, 361, 362, 363, 364, 1099, 365, 367,
	366, 0, 368, 1055, 1063, 369, 370, 1064, 0, 371,
	372, 373, 1010, 1009, 374, 375, 376, 377, 0, 378,
	379, 381, 383, 380, 382, 387, 384, 385, 386, 389,
	0, 388, 1065, 390, 391, 392, 396, 395, 397, 394,
	1066, 393, 0, 247, 1067, 398, 0, 1020, 399, 562,
	401, 402, 0, 0, 403, 0, 0, 1105, 405, 406,
	407, 0, 0, 408, 409, 563, 1068, 410, 1069, 1049,
	411, 412, 404, 413, 414, 415, 416, 417, 418, 419,
	420, 0, 421, 422, 565, 566, 1050, 423, 568, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 431, 432,
	433, 569, 435, 434, 436, 0, 437, 0, 0, 0,
	0, 0, 438, 0, 440, 441, 442, 439, 443, 444,
	445, 446, 0, 447, 448, 449, 1070, 450, 451, 452,
	453, 570, 1107, 0, 455, 456, 462, 463, 457, 458,
	464, 465, 466, 467, 468, 209, 470, 471, 469, 472,
	473, 474, 1013, 475, 459, 460, 476, 477, 1071, 478,
	479, 480, 481, 482, 483, 571, 0, 484, 0, 485,
	486, 487, 488, 461, 489, 494, 572, 490, 491, 492,
	493, 1051, 0, 496, 497, 0, 495, 211, 498, 499,
	500, 501, 502, 503, 321, 504, 0, 505, 574, 575,
	576, 577, 0, 512, 0, 506, 507, 1052, 508, 1053,
	0, 509, 510, 511, 0, 513, 514, 0, 0, 515,
	516, 517, 519, 520, 518, 521, 1014, 522, 0, 0,
	523, 524, 525, 1449, 581, 582, 0, 527, 526, 583,
	0, 0, 0, 203, 528, 529, 584, 530, 531, 532,
	0, 204, 0, 0, 0, 2918, 0, 1113, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1103, 0, 1776, 248, 249, 250, 251, 252, 253,
	0, 254, 255, 0, 0, 0, 0, 0, 1016, 0,
	0, 0, 0, 256, 257, 259, 258, 260, 261, 262,
	263, 534, 535, 0, 264, 536, 265, 537, 0, 538,
	266, 267, 268, 269, 270, 0, 1015, 0, 271, 539,
	540, 541, 0, 272, 273, 1022, 0, 1003, 0, 274,
	275, 276, 277, 278, 279, 280, 0, 0, 282, 283,
	284, 281, 0, 285, 0, 286, 287, 288, 289, 0,
	290, 1056, 291, 292, 1006, 1004, 1005, 1012, 1008, 1007,
	1011, 293, 294, 295, 296, 0, 297, 543, 544, 0,
	301, 298, 299, 0, 302, 300, 0, 303, 304, 305,
	0, 0, 306, 307, 308, 0, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 545, 316, 317, 318, 320,
	322, 319, 323, 324, 325, 326, 1047, 1048, 0, 245,
	0, 0, 0, 0, 0, 327, 328, 329, 548, 0,
	0, 0, 330, 0, 331, 0, 0, 1057, 332, 333,
	549, 550, 334, 335, 0, 336, 1054, 0, 552, 337,
	0, 338, 339, 340, 341, 342, 1017, 1018, 1021, 400,
	1059, 343, 344, 0, 345, 346, 347, 348, 0, 0,
	0, 246, 349, 350, 352, 0, 1058, 351, 556, 557,
	0, 558, 0, 353, 354, 1060, 1019, 1061, 355, 356,
	357, 1062, 358, 0, 0, 0, 359, 360, 361, 362,
	363, 364, 1099, 365, 367, 366, 0, 368, 1055, 1063,
	369, 370, 1064, 0, 371, 372, 373, 1010, 1009, 374,
	375, 376, 377, 0, 378, 379, 381, 383, 380, 382,
	387, 384, 385, 386, 389, 0, 388, 1065, 390, 391,
	392, 396, 395, 397, 394, 1066, 393, 0, 247, 1067,
	398, 0, 1020, 399, 562, 401, 402, 0, 0, 403,
	0, 0, 1105, 405, 406, 407, 0, 0, 408, 409,
	563, 1068, 410, 1069, 1049, 411, 412, 404, 413, 414,
	415, 416, 417, 418, 419, 420, 0, 421, 422, 565,
	566, 1050, 423, 568, 424, 425, 0, 426, 0, 427,
	428, 429, 430, 431, 432, 433, 569, 435, 434, 436,
	0, 437, 0, 0, 0, 0, 0, 438, 0, 440,
	441, 442, 439, 443, 444, 445, 446, 0, 447, 448,
	449, 1070, 450, 451, 452, 453, 570, 1107, 0, 455,
	456, 462, 463, 457, 458, 464, 465, 466, 467, 468,
	0, 470, 471, 469, 472, 473, 474, 1013, 475, 459,
	460, 476, 477, 1071, 478, 479, 480, 481, 482, 483,
	571, 0, 484, 0, 485, 486, 487, 488, 461, 489,
	494, 572, 490, 491, 492, 493, 1051, 0, 496, 497,
	0, 495, 0, 498, 499, 500, 501, 502, 503, 321,
	504, 0, 505, 574, 575, 576, 577, 0, 512, 0,
	506, 507, 1052, 508, 1053, 0, 509, 510, 511, 0,
	513, 514, 0, 0, 515, 516, 517, 519, 520, 518,
	521, 1014, 522, 0, 0, 523, 524, 525, 580, 581,
	582, 0, 527, 526, 583, 0, 1095, 0, 1113, 528,
	529, 584, 530, 531, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 249, 250, 251, 252,
	253, 0, 254, 255, 0, 0, 1103, 0, 1101, 1016,
	0, 0, 0, 0, 256, 257, 259, 258, 260, 261,
	262, 263, 534, 535, 0, 264, 536, 265, 537, 0,
	538, 266, 267, 268, 269, 270, 0, 1015, 0, 271,
	539, 540, 541, 0, 272, 273, 1022, 0, 1003, 0,
	274, 275, 276, 277, 278, 279, 280, 0, 0, 282,
	283, 284, 281, 0, 285, 0, 286, 287, 288, 289,
	0, 290, 1056, 291, 292, 1006, 1004, 1005, 1012, 1008,
	1007, 1011, 293, 294, 295, 296, 0, 297, 543, 544,
	0, 301, 298, 299, 0, 302, 300, 0, 303, 304,
	305, 0, 0, 306, 307, 308, 0, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 545, 316, 317, 318,
	320, 322, 319, 323, 324, 325, 326, 1047, 1048, 0,
	245, 0, 0, 0, 0, 0, 327, 328, 329, 548,
	0, 0, 0, 330, 0, 331, 0, 0, 1057, 332,
	333, 549, 550, 334, 335, 0, 336, 1054, 0, 552,
	337, 0, 338, 339, 340, 341, 342, 1017, 1018, 1021,
	400, 1059, 343, 344, 0, 345, 346, 347, 348, 0,
	0, 0, 246, 349, 350, 352, 0, 1058, 351, 556,
	557, 0, 558, 0, 353, 354, 1060, 1019, 1061, 355,
	356, 357, 1062, 358, 0, 0, 0, 359, 360, 361,
	362, 363, 364, 1099, 365, 367, 366, 0, 368, 1055,
	1063, 369, 370, 1064, 0, 371, 372, 373, 1010, 1009,
	374, 375, 376, 377, 0, 378, 379, 381, 383, 380,
	382, 387, 384, 385, 386, 389, 0, 388, 1065, 390,
	391, 392, 396, 395, 397, 394, 1066, 393, 0, 247,
	1067, 398, 0, 1020, 399, 562, 401, 402, 0, 0,
	403, 0, 0, 1105, 405, 406, 407, 0, 0, 408,
	409, 563, 1068, 410, 1069, 1049, 411, 412, 404, 413,
	414, 415, 416, 417, 418, 419, 420, 0, 421, 422,
	565, 566, 1050, 423, 568, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 431, 432, 433, 569, 435, 434,
	436, 0, 437, 0, 0, 0, 0, 0, 438, 0,
	440, 441, 442, 439, 443, 444, 445, 446, 0, 447,
	448, 449, 1070, 450, 451, 452, 453, 570, 1107, 0,
	455, 456, 462, 463, 457, 458, 464, 465, 466, 467,
	468, 0, 470, 471, 469, 472, 473, 474, 1013, 475,
	459, 460, 476, 477, 1071, 478, 479, 480, 481, 482,
	483, 571, 0, 484, 0, 485, 486, 487, 488, 461,
	489, 494, 572, 490, 491, 492, 493, 1051, 0, 496,
	497, 0, 495, 0, 498, 499, 500, 501, 502, 503,
	321, 504, 0, 505, 574, 575, 576, 577, 0, 512,
	0, 506, 507, 1052, 508, 1053, 0, 509, 510, 511,
	0, 513, 514, 0, 0, 515, 516, 517, 519, 520,
	518, 521, 1014, 522, 0, 0, 523, 524, 525, 580,
	581, 582, 0, 527, 526, 583, 0, 1113, 0, 0,
	528, 529, 584, 530, 531, 532, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 249, 250, 251, 252, 253,
	0, 254, 255, 0, 0, 0, 0, 1103, 1016, 1101,
	0, 0, 0, 256, 257, 259, 258, 260, 261, 262,
	263, 534, 535, 0, 264, 536, 265, 537, 0, 538,
	266, 267, 268, 269, 270, 0, 1015, 0, 271, 539,
	540, 541, 0, 272, 273, 1022, 0, 1003, 0, 274,
	275, 276, 277, 278, 279, 280, 0, 0, 282, 283,
	284, 281, 0, 285, 0, 286, 287, 288, 289, 0,
	290, 1056, 291, 292, 1006, 1004, 1005, 1012, 1008, 1007,
	1011, 293, 294, 295, 296, 0, 297, 543, 544, 0,
	301, 298, 299, 0, 302, 300, 0, 303, 304, 305,
	0, 0, 306, 307, 308, 0, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 545, 316, 317, 318, 320,
	322, 319, 323, 324, 325, 326, 1047, 1048, 0, 245,
	0, 0, 0, 0, 0, 327, 328, 329, 548, 0,
	0, 0, 330, 0, 331, 0, 0, 1057, 332, 333,
	549, 550, 334, 335, 0, 336, 1054, 0, 552, 337,
	0, 338, 339, 340, 341, 342, 1017, 1018, 1021, 400,
	1059, 343, 344, 0, 345, 346, 347, 348, 0, 0,
	0, 246, 349, 350, 352, 0, 1058, 351, 556, 557,
	0, 558, 0, 353, 354, 1060, 1019, 1061, 355, 356,
	357, 1062, 358, 0, 0, 0, 359, 360, 361, 362,
	363, 364, 1099, 365, 367, 366, 0, 368, 1055, 1063,
	369, 370, 1064, 0, 371, 372, 373, 1010, 1009, 374,
	375, 376, 377, 0, 378, 379, 381, 383, 380, 382,
	387, 384, 385, 386, 389, 0, 388, 1065, 390, 391,
	392, 396, 395, 397, 394, 1066, 393, 0, 247, 1067,
	398, 0, 1020, 399, 562, 401, 402, 0, 0, 403,
	0, 0, 1105, 405, 406, 407, 0, 0, 408, 409,
	563, 1068, 410, 1069, 1049, 411, 412, 404, 413, 414,
	415, 416, 417, 418, 419, 420, 0, 421, 422, 565,
	566, 1050, 423, 568, 424, 425, 0, 426, 0, 427,
	428, 429, 430, 431, 432, 433, 569, 435, 434, 436,
	0, 437, 0, 0, 0, 0, 0, 438, 0, 440,
	441, 442, 439, 443, 444, 445, 446, 0, 447, 448,
	449, 1070, 450, 451, 452, 453, 570, 1107, 0, 455,
	456, 462, 463, 457, 458, 464, 465, 466, 467, 468,
	0, 470, 471, 469, 472, 473, 474, 1013, 475, 459,
	460, 476, 477, 1071, 478, 479, 480, 481, 482, 483,
	571, 0, 484, 0, 485, 486, 487, 488, 461, 489,
	494, 572, 490, 491, 492, 493, 1051, 0, 496, 497,
	0, 495, 0, 498, 499, 500, 501, 502, 503, 321,
	504, 0, 505, 574, 575, 576, 577, 0, 512, 0,
	506, 507, 1052, 508, 1053, 0, 509, 510, 511, 0,
	513, 514, 0, 0, 515, 516, 517, 519, 520, 518,
	521, 1014, 522, 0, 0, 523, 524, 525, 580, 581,
	582, 0, 527, 526, 583, 0, 1113, 0, 0, 528,
	529, 584, 530, 531, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 249, 250, 251, 252, 253, 0,
	254, 255, 0, 0, 0, 0, 1103, 1016, 1101, 0,
	0, 0, 256, 257, 259, 258, 260, 261, 262, 263,
	534, 535, 0, 264, 536, 265, 537, 0, 538, 266,
	267, 268, 269, 270, 0, 1015, 0, 271, 539, 540,
	541, 0, 272, 273, 1022, 0, 1003, 0, 274, 275,
	276, 277, 278, 279, 280, 0, 0, 282, 283, 284,
	281, 0, 285, 0, 286, 287, 288, 289, 0, 290,
	1056, 291, 292, 1006, 1004, 1005, 1012, 1008, 1007, 1011,
	293, 294, 295, 296, 0, 297, 543, 544, 0, 301,
	298, 299, 0, 302, 300, 0, 303, 304, 305, 0,
	0, 306, 307, 308, 0, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 545, 316, 317, 318, 320, 322,
	319, 323, 324, 325, 326, 1047, 1048, 0, 245, 0,
	0, 0, 0, 0, 327, 328, 329, 548, 0, 0,
	0, 330, 0, 331, 0, 0, 1057, 332, 333, 549,
	550, 334, 335, 0, 336, 1054, 0, 552, 337, 0,
	338, 339, 340, 341, 342, 1017, 1018, 1021, 400, 1059,
	343, 344, 0, 345, 346, 347, 348, 0, 0, 0,
	246, 349, 350, 352, 0, 1058, 351, 556, 557, 0,
	558, 0, 353, 354, 1060, 1019, 1061, 355, 356, 357,
	1062, 358, 0, 0, 0, 359, 360, 361, 362, 363,
	364, 0, 365, 367, 366, 0, 368, 1055, 1063, 369,
	370, 1064, 0, 371, 372, 373, 1010, 1009, 374, 375,
	376, 377, 0, 378, 379, 381, 383, 380, 382, 387,
	384, 385, 386, 389, 0, 388, 1065, 390, 391, 392,
	396, 395, 397, 394, 1066, 393, 0, 247, 1067, 398,
	0, 1020, 399, 562, 401, 402, 0, 0, 403, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 409, 563,
	1068, 410, 1069, 1049, 411, 412, 404, 413, 414, 415,
	416, 417, 418, 419, 420, 0, 421, 422, 565, 566,
	1050, 423, 568, 424, 425, 0, 426, 0, 427, 428,
	429, 430, 431, 432, 433, 569, 435, 434, 436, 0,
	437, 0, 0, 0, 0, 0, 438, 0, 440, 441,
	442, 439, 443, 444, 445, 446, 0, 447, 448, 449,
	1070, 450, 451, 452, 453, 570, 1107, 0, 455, 456,
	462, 463, 457, 458, 464, 465, 466, 467, 468, 0,
	470, 471, 469, 472, 473, 474, 1013, 475, 459, 460,
	476, 477, 1071, 478, 479, 480, 481, 482, 483, 571,
	0, 484, 0, 485, 486, 487, 488, 461, 489, 494,
	572, 490, 491, 492, 493, 1051, 0, 496, 497, 0,
	495, 0, 498, 499, 500, 501, 502, 503, 321, 504,
	0, 505, 574, 575, 576, 577, 0, 512, 0, 506,
	507, 1052, 508, 1053, 0, 509, 510, 511, 0, 513,
	514, 0, 0, 515, 516, 517, 519, 520, 518, 521,
	1014, 522, 0, 0, 523, 524, 525, 580, 581, 582,
	0, 527, 526, 583, 0, 938, 0, 1298, 528, 529,
	584, 530, 531, 532, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 249, 250, 251, 252, 253,
	0, 254, 255, 0, 0, 0, 0, 1675, 533, 0,
	0, 0, 0, 256, 257, 259, 258, 260, 261, 262,
	263, 534, 535, 0, 264, 536, 265, 537, 0, 538,
	266, 267, 268, 269, 270, 0, 0, 0, 271, 539,
	540, 541, 0, 272, 273, 542, 0, 1264, 0, 274,
	275, 276, 277, 278, 279, 280, 0, 0, 282, 283,
	284, 281, 0, 285, 0, 286, 287, 288, 289, 0,
	290, 1056, 291, 292, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 295, 296, 0, 297, 543, 544, 0,
	301, 298, 299, 0, 302, 300, 0, 303, 304, 305,
	0, 0, 306, 307, 308, 0, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 545, 316, 317, 318, 320,
	322, 319, 323, 324, 325, 326, 546, 547, 0, 245,
	0, 0, 0, 0, 0, 327, 328, 329, 548, 0,
	0, 0, 330, 0, 331, 0, 0, 1057, 332, 333,
	549, 550, 334, 335, 0, 336, 551, 0, 552, 337,
	0, 338, 339, 340, 341, 342, 553, 554, 555, 400,
	1059, 343, 344, 0, 345, 346, 347, 348, 0, 0,
	0, 0, 349, 350, 352, 0, 1058, 351, 556, 557,
	0, 558, 0, 353, 354, 1060, 559, 1061, 355, 356,
	357, 1062, 358, 0, 0, 0, 359, 360, 361, 362,
	363, 364, 0, 365, 367, 366, 0, 368, 560, 1063,
	369, 370, 1064, 0, 371, 372, 373, 0, 0, 374,
	375, 376, 377, 0, 378, 379, 381, 383, 380, 382,
	387, 384, 385, 386, 389, 0, 388, 1065, 390, 391,
	392, 396, 395, 397, 394, 1066, 393, 0, 0, 1067,
	398, 0, 561, 399, 562, 401, 402, 0, 0, 403,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 409,
	563, 1068, 410, 1069, 564, 411, 412, 404, 413, 414,
	415, 416, 417, 418, 419, 420, 0, 421, 422, 565,
	566, 567, 423, 568, 424, 425, 0, 426, 0, 427,
	428, 429, 430, 431, 432, 433, 569, 435, 434, 436,
	0, 437, 0, 0, 0, 0, 0, 438, 0, 440,
	441, 442, 439, 443, 444, 445, 446, 0, 447, 448,
	449, 1070, 450, 451, 452, 453, 570, 454, 0, 455,
	456, 462, 463, 457, 458, 464, 465, 466, 467, 468,
	209, 470, 471, 469, 472, 473, 474, 0, 475, 459,
	460, 476, 477, 1071, 478, 479, 480, 481, 482, 483,
	571, 0, 484, 0, 485, 486, 487, 488, 461, 489,
	494, 572, 490, 491, 492, 493, 573, 0, 496, 497,
	0, 495, 211, 498, 499, 500, 501, 502, 503, 321,
	504, 0, 505, 574, 575, 576, 577, 0, 512, 0,
	506, 507, 578, 508, 579, 0, 509, 510, 511, 0,
	513, 514, 0, 0, 515, 516, 517, 519, 520, 518,
	521, 0, 522, 0, 0, 523, 524, 525, 1449, 581,
	582, 0, 527, 526, 583, 0, 0, 0, 203, 528,
	529, 584, 530, 531, 532, 0, 204, 0, 0, 0,
	1446, 0, 1298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 174, 248,
	249, 250, 251, 252, 253, 0, 254, 255, 0, 0,
	0, 0, 0, 533, 0, 0, 0, 0, 256, 257,
	259, 258, 260, 261, 262, 263, 534, 535, 0, 264,
	536, 265, 537, 0, 538, 266, 267, 268, 269, 270,
	0, 0, 0, 271, 539, 540, 541, 0, 272, 273,
	542, 0, 1264, 0, 274, 275, 276, 277, 278, 279,
	280, 0, 0, 282, 283, 284, 281, 0, 285, 0,
	286, 287, 288, 289, 0, 290, 1056, 291, 292, 0,
	0, 0, 0, 0, 0, 0, 293, 294, 295, 296,
	0, 297, 543, 544, 0, 301, 298, 299, 0, 302,
	300, 0, 303, 304, 305, 0, 0, 306, 307, 308,
	0, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	545, 316, 317, 318, 320, 322, 319, 323, 324, 325,
	326, 546, 547, 0, 245, 0, 0, 0, 0, 0,
	327, 328, 329, 548, 0, 0, 0, 330, 0, 331,
	0, 0, 1057, 332, 333, 549, 550, 334, 335, 0,
	336, 551, 0, 552, 337, 0, 338, 339, 340, 341,
	342, 553, 554, 555, 400, 1059, 343, 344, 0, 345,
	346, 347, 348, 0, 0, 0, 0, 349, 350, 352,
	0, 1058, 351, 556, 557, 0, 558, 0, 353, 354,
	1060, 559, 1061, 355, 356, 357, 1062, 358, 0, 0,
	0, 359, 360, 361, 362, 363, 364, 0, 365, 367,
	366, 0, 368, 560, 1063, 369, 370, 1064, 0, 371,
	372, 373, 0, 0, 374, 375, 376, 377, 0, 378,
	379, 381, 383, 380, 382, 387, 384, 385, 386, 389,
	0, 388, 1065, 390, 391, 392, 396, 395, 397, 394,
	1066, 393, 0, 0, 1067, 398, 0, 561, 399, 562,
	401, 402, 0, 0, 403, 0, 0, 0, 405, 406,
	407, 0, 0, 408, 409, 563, 1068, 410, 1069, 564,
	411, 412, 404, 413, 414, 415, 416, 417, 418, 419,
	420, 0, 421, 422, 565, 566, 567, 423, 568, 424,
	425, 0, 426, 0, 427, 428, 429, 430, 431, 432,
	433, 569, 435, 434, 436, 0, 437, 0, 0, 0,
	0, 0, 438, 0, 440, 441, 442, 439, 443, 444,
	445, 446, 0, 447, 448, 449, 1070, 450, 451, 452,
	453, 570, 454, 0, 455, 456, 462, 463, 457, 458,
	464, 465, 466, 467, 468, 209, 470, 471, 469, 472,
	473, 474, 0, 475, 459, 460, 476, 477, 1071, 478,
	479, 480, 481, 482, 483, 571, 0, 484, 0, 485,
	486, 487, 488, 461, 489, 494, 572, 490, 491, 492,
	493, 573, 0, 496, 497, 0, 495, 211, 498, 499,
	500, 501, 502, 503, 321, 504, 0, 505, 574, 575,
	576, 577, 0, 512, 0, 506, 507, 578, 508, 579,
	0, 509, 510, 511, 0, 513, 514, 0, 0, 515,
	516, 517, 519, 520, 518, 521, 0, 522, 0, 0,
	523, 524, 525, 1449, 581, 582, 0, 527, 526, 583,
	0, 0, 0, 203, 528, 529, 584, 530, 531, 532,
	0, 204, 0, 0, 0, 0, 0, 1298, 1297, 0,
	0, 0, 0, 1295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 174, 248, 249, 250, 251, 252, 253,
	0, 254, 255, 0, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 256, 257, 259, 258, 260, 261, 262,
	263, 534, 535, 0, 264, 536, 265, 537, 0, 538,
	266, 267, 268, 269, 270, 0, 0, 0, 271, 539,
	540, 541, 0, 272, 273, 542, 0, 1264, 0, 274,
	275, 276, 277, 278, 279, 280, 0, 0, 282, 283,
	284, 281, 0, 285, 0, 286, 287, 288, 289, 0,
	290, 1056, 291, 292, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 295, 296, 0, 297, 543, 544, 0,
	301, 298, 299, 0, 302, 300, 0, 303, 304, 305,
	0, 0, 306, 307, 308, 0, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 545, 316, 317, 318, 320,
	322, 319, 323, 324, 325, 326, 546, 547, 0, 245,
	0, 0, 0, 0, 0, 327, 328, 329, 548, 0,
	0, 0, 330, 0, 331, 0, 0, 1057, 332, 333,
	549, 550, 334, 335, 0, 336, 551, 0, 552, 337,
	0, 338, 339, 340, 341, 342, 553, 554, 555, 400,
	1059, 343, 344, 0, 345, 346, 347, 348, 0, 0,
	0, 0, 349, 350, 352, 0, 1058, 351, 556, 557,
	0, 558, 0, 353, 354, 1060, 559, 1061, 355, 356,
	357, 1062, 358, 0, 0, 0, 359, 360, 361, 362,
	363, 364, 0, 365, 367, 366, 0, 368, 560, 1063,
	369, 370, 1064, 0, 371, 372, 373, 0, 0, 374,
	375, 376, 377, 0, 378, 379, 381, 383, 380, 382,
	387, 384, 385, 386, 389, 0, 388, 1065, 390, 391,
	392, 396, 395, 397, 394, 1066, 393, 0, 0, 1067,
	398, 0, 561, 399, 562, 401, 402, 0, 0, 403,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 409,
	563, 1068, 410, 1069, 564, 411, 412, 404, 413, 414,
	415, 416, 417, 418, 419, 420, 0, 421, 422, 565,
	566, 567, 423, 568, 424, 425, 0, 426, 0, 427,
	428, 429, 430, 431, 432, 433, 569, 435, 434, 436,
	0, 437, 0, 0, 0, 0, 0, 438, 0, 440,
	441, 442, 439, 443, 444, 445, 446, 0, 447, 448,
	449, 1070, 450, 451, 452, 453, 570, 454, 0, 455,
	456, 462, 463, 457, 458, 464, 465, 466, 467, 468,
	0, 470, 471, 469, 472, 473, 474, 0, 475, 459,
	460, 476, 477, 1071, 478, 479, 480, 481, 482, 483,
	571, 0, 484, 0, 485, 486, 487, 488, 461, 489,
	494, 572, 490, 491, 492, 493, 573, 0, 496, 497,
	0, 495, 0, 498, 499, 500, 501, 502, 503, 321,
	504, 0, 505, 574, 575, 576, 577, 0, 512, 0,
	506, 507, 578, 508, 579, 0, 509, 510, 511, 0,
	513, 514, 0, 0, 515, 516, 517, 519, 520, 518,
	521, 0, 522, 0, 0, 523, 524, 525, 580, 581,
	582, 0, 527, 526, 583, 0, 0, 0, 0, 528,
	529, 584, 530, 531, 532, 1298, 1297, 0, 0, 0,
	0, 1295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 249, 250, 251, 252, 253, 1471, 254,
	255, 0, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 256, 257, 259, 258, 260, 261, 262, 263, 534,
	535, 0, 264, 536, 265, 537, 0, 538, 266, 267,
	268, 269, 270, 0, 0, 0, 271, 539, 540, 541,
	0, 272, 273, 542, 0, 1264, 0, 274, 275, 276,
	277, 278, 279, 280, 0, 0, 282, 283, 284, 281,
	0, 285, 0, 286, 287, 288, 289, 0, 290, 1056,
	291, 292, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 295, 296, 0, 297, 543, 544, 0, 301, 298,
	299, 0, 302, 300, 0, 303, 304, 305, 0, 0,
	306, 307, 308, 0, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 545, 316, 317, 318, 320, 322, 319,
	323, 324, 325, 326, 546, 547, 0, 245, 0, 0,
	0, 0, 0, 327, 328, 329, 548, 0, 0, 0,
	330, 0, 331, 0, 0, 1057, 332, 333, 549, 550,
	334, 335, 0, 336, 551, 0, 552, 337, 0, 338,
	339, 340, 341, 342, 553, 554, 555, 400, 1059, 343,
	344, 0, 345, 346, 347, 348, 0, 0, 0, 0,
	349, 350, 352, 0, 1058, 351, 556, 557, 0, 558,
	0, 353, 354, 1060, 559, 1061, 355, 356, 357, 1062,
	358, 0, 0, 0, 359, 360, 361, 362, 363, 364,
	0, 365, 367, 366, 0, 368, 560, 1063, 369, 370,
	1064, 0, 371, 372, 373, 0, 0, 374, 375, 376,
	377, 0, 378, 379, 381, 383, 380, 382, 387, 384,
	385, 386, 389, 0, 388, 1065, 390, 391, 392, 396,
	395, 397, 394, 1066, 393, 0, 0, 1067, 398, 0,
	561, 399, 562, 401, 402, 0, 0, 403, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 409, 563, 1068,
	410, 1069, 564, 411, 412, 404, 413, 414, 415, 416,
	417, 418, 419, 420, 0, 421, 422, 565, 566, 567,
	423, 568, 424, 425, 0, 426, 0, 427, 428, 429,
	430, 431, 432, 433, 569, 435, 434, 436, 0, 437,
	0, 0, 0, 0, 0, 438, 0, 440, 441, 442,
	439, 443, 444, 445, 446, 0, 447, 448, 449, 1070,
	450, 451, 452, 453, 570, 454, 0, 455, 456, 462,
	463, 457, 458, 464, 465, 466, 467, 468, 0, 470,
	471, 469, 472, 473, 474, 0, 475, 459, 460, 476,
	477, 1071, 478, 479, 480, 481, 482, 483, 571, 0,
	484, 0, 485, 486, 487, 488, 461, 489, 494, 572,
	490, 491, 492, 493, 573, 0, 496, 497, 0, 495,
	0, 498, 499, 500, 501, 502, 503, 321, 504, 0,
	505, 574, 575, 576, 577, 0, 512, 0, 506, 507,
	578, 508, 579, 0, 509, 510, 511, 0, 513, 514,
	0, 0, 515, 516, 517, 519, 520, 518, 521, 0,
	522, 0, 0, 523, 524, 525, 580, 581, 582, 0,
	527, 526, 583, 0, 0, 0, 0, 528, 529, 584,
	530, 531, 532, 1298, 1297, 0, 0, 0, 0, 1295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 3166, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 541, 0, 272,
	273, 542, 0, 1264, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 1056, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 245, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 1057, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 553, 554, 555, 400, 1059, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 0, 349, 350,
	352, 0, 1058, 351, 556, 557, 0, 558, 0, 353,
	354, 1060, 559, 1061, 355, 356, 357, 1062, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 1967,
	367, 366, 0, 368, 560, 1063, 369, 370, 1064, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 388, 1065, 390, 391, 392, 396, 395, 397,
	394, 1066, 393, 0, 0, 1067, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 1068, 410, 1069,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 1070, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 462, 463, 457,
	458, 464, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 473, 474, 0, 475, 459, 460, 476, 477, 1071,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 0, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 574,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 0, 527, 526,
	583, 0, 0, 0, 0, 528, 529, 584, 530, 531,
	532, 1298, 1297, 0, 0, 0, 0, 1295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 1471, 254, 255, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 534, 535, 0, 264, 536,
	265, 537, 0, 538, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 539, 540, 541, 0, 272, 273, 542,
	0, 1264, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 0, 285, 0, 286,
	287, 288, 289, 0, 290, 1056, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 295, 296, 0,
	297, 543, 544, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 307, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 545,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	546, 547, 0, 245, 0, 0, 0, 0, 0, 327,
	328, 329, 548, 0, 0, 0, 330, 0, 331, 0,
	0, 1057, 332, 333, 549, 550, 334, 335, 0, 336,
	551, 0, 552, 337, 0, 338, 339, 340, 341, 342,
	553, 554, 555, 400, 1059, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 0, 349, 350, 352, 0,
	1058, 351, 556, 557, 0, 558, 0, 353, 354, 1060,
	559, 1061, 355, 356, 357, 1062, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 560, 1063, 369, 370, 1064, 0, 371, 372,
	373, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	388, 1065, 390, 391, 392, 396, 395, 397, 394, 1066,
	393, 0, 0, 1067, 398, 0, 561, 399, 562, 401,
	402, 0, 0, 403, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 409, 563, 1068, 410, 1069, 564, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 565, 566, 567, 423, 568, 424, 425,
	0, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 1070, 450, 451, 452, 453,
	570, 454, 0, 455, 456, 462, 463, 457, 458, 464,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 473,
	474, 0, 475, 459, 460, 476, 477, 1071, 478, 479,
	480, 481, 482, 483, 571, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 572, 490, 491, 492, 493,
	573, 0, 496, 497, 0, 495, 0, 498, 499, 500,
	501, 502, 503, 321, 504, 0, 505, 574, 575, 576,
	577, 0, 512, 0, 506, 507, 578, 508, 579, 0,
	509, 510, 511, 0, 513, 514, 0, 0, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 580, 581, 582, 0, 527, 526, 583, 1113,
	0, 0, 0, 528, 529, 584, 530, 531, 532, 0,
	0, 0, 0, 0, 0, 0, 248, 249, 250, 251,
	252, 253, 0, 254, 255, 0, 0, 0, 0, 0,
	1016, 0, 1455, 0, 0, 256, 257, 259, 258, 260,
	261, 262, 263, 534, 535, 0, 264, 536, 265, 537,
	0, 538, 266, 267, 268, 269, 270, 0, 1015, 0,
	271, 539, 540, 541, 0, 272, 273, 1022, 0, 1003,
	0, 274, 275, 276, 277, 278, 279, 280, 0, 0,
	282, 283, 284, 281, 0, 285, 0, 286, 287, 288,
	289, 0, 290, 1056, 291, 292, 1006, 1004, 1005, 1012,
	1008, 1007, 1011, 293, 294, 295, 296, 0, 297, 543,
	544, 0, 301, 298, 299, 0, 302, 300, 0, 303,
	304, 305, 0, 0, 306, 307, 308, 0, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 545, 316, 317,
	318, 320, 322, 319, 323, 324, 325, 326, 1047, 1048,
	0, 245, 0, 0, 0, 0, 0, 327, 328, 329,
	548, 0, 0, 0, 330, 0, 331, 0, 0, 1057,
	332, 333, 549, 550, 334, 335, 0, 336, 1054, 0,
	552, 337, 0, 338, 339, 340, 341, 342, 1017, 1018,
	1021, 400, 1059, 343, 344, 0, 345, 346, 347, 348,
	0, 0, 0, 246, 349, 350, 352, 0, 1058, 351,
	556, 557, 0, 558, 0, 353, 354, 1060, 1019, 1061,
	355, 356, 357, 1062, 358, 0, 0, 0, 359, 360,
	361, 362, 363, 364, 0, 365, 367, 366, 0, 368,
	1055, 1063, 369, 370, 1064, 0, 371, 372, 373, 1010,
	1009, 374, 375, 376, 377, 0, 378, 379, 381, 383,
	380, 382, 387, 384, 385, 386, 389, 0, 388, 1065,
	390, 391, 392, 396, 395, 397, 394, 1066, 393, 0,
	247, 1067, 398, 0, 1020, 399, 562, 401, 402, 0,
	0, 403, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 409, 563, 1068, 410, 1069, 1049, 411, 412, 404,
	413, 414, 415, 416, 417, 418, 419, 420, 0, 421,
	422, 565, 566, 1050, 423, 568, 424, 425, 0, 426,
	0, 427, 428, 429, 430, 431, 432, 433, 569, 435,
	434, 436, 0, 437, 0, 0, 0, 0, 0, 438,
	0, 440, 441, 442, 439, 443, 444, 445, 446, 0,
	447, 448, 449, 1070, 450, 451, 452, 453, 570, 454,
	0, 455, 456, 462, 463, 457, 458, 464, 465, 466,
	467, 468, 0, 470, 471, 469, 472, 473, 474, 1013,
	475, 459, 460, 476, 477, 1071, 478, 479, 480, 481,
	482, 483, 571, 0, 484, 0, 485, 486, 487, 488,
	461, 489, 494, 572, 490, 491, 492, 493, 1051, 0,
	496, 497, 0, 495, 0, 498, 499, 500, 501, 502,
	503, 321, 504, 0, 505, 574, 575, 576, 577, 0,
	512, 0, 506, 507, 1052, 508, 1053, 0, 509, 510,
	511, 0, 513, 514, 0, 0, 515, 516, 517, 519,
	520, 518, 521, 1014, 522, 0, 0, 523, 524, 525,
	580, 581, 582, 0, 527, 526, 583, 938, 0, 242,
	0, 528, 529, 584, 530, 531, 532, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 249, 250, 251,
	252, 253, 0, 254, 255, 0, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 256, 257, 259, 258, 260,
	261, 262, 263, 534, 535, 0, 264, 536, 265, 537,
	0, 538, 266, 267, 268, 269, 270, 0, 0, 0,
	271, 539, 540, 541, 0, 272, 273, 542, 0, 0,
	0, 274, 275, 276, 277, 278, 279, 280, 0, 0,
	282, 283, 284, 281, 0, 285, 0, 286, 287, 288,
	289, 0, 290, 0, 291, 292, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 295, 296, 0, 297, 543,
	544, 0, 301, 298, 299, 0, 302, 300, 0, 303,
	304, 305, 0, 0, 306, 307, 308, 0, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 545, 316, 317,
	318, 320, 322, 319, 323, 324, 325, 326, 546, 547,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	548, 0, 0, 0, 330, 0, 331, 0, 0, 0,
	332, 333, 549, 550, 334, 335, 0, 336, 551, 0,
	552, 337, 0, 338, 339, 340, 341, 342, 553, 554,
	555, 400, 0, 343, 344, 0, 345, 346, 347, 348,
	0, 0, 0, 0, 349, 350, 352, 0, 0, 351,
	556, 557, 0, 558, 0, 353, 354, 0, 559, 0,
	355, 356, 357, 0, 358, 0, 0, 0, 359, 360,
	361, 362, 363, 364, 0, 365, 367, 366, 0, 368,
	560, 0, 369, 370, 0, 0, 371, 372, 373, 0,
	0, 374, 375, 376, 377, 0, 378, 379, 381, 383,
	380, 382, 387, 384, 385, 386, 389, 0, 388, 0,
	390, 391, 392, 396, 395, 397, 394, 0, 393, 0,
	0, 0, 398, 0, 561, 399, 562, 401, 402, 0,
	0, 403, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 409, 563, 0, 410, 0, 564, 411, 412, 404,
	413, 414, 415, 416, 417, 418, 419, 420, 0, 421,
	422, 565, 566, 567, 423, 568, 424, 425, 0, 426,
	0, 427, 428, 429, 430, 431, 432, 433, 569, 435,
	434, 436, 0, 437, 0, 0, 0, 0, 0, 438,
	0, 440, 441, 442, 439, 443, 444, 445, 446, 0,
	447, 448, 449, 0, 450, 451, 452, 453, 570, 454,
	0, 455, 456, 462, 463, 457, 458, 464, 465, 466,
	467, 468, 209, 470, 471, 469, 472, 473, 474, 0,
	475, 459, 460, 476, 477, 0, 478, 479, 480, 481,
	482, 483, 571, 0, 484, 0, 485, 486, 487, 488,
	461, 489, 494, 572, 490, 491, 492, 493, 573, 0,
	496, 497, 0, 495, 211, 498, 499, 500, 501, 502,
	503, 321, 504, 0, 505, 574, 575, 576, 577, 0,
	512, 0, 506, 507, 578, 508, 579, 0, 509, 510,
	511, 0, 513, 514, 0, 0, 515, 516, 517, 519,
	520, 518, 521, 0, 522, 0, 0, 523, 524, 525,
	1449, 581, 582, 0, 527, 526, 583, 242, 0, 0,
	203, 528, 529, 584, 530, 531, 532, 0, 204, 0,
	0, 0, 0, 0, 248, 249, 250, 251, 252, 253,
	0, 254, 255, 0, 0, 0, 0, 0, 533, 0,
	174, 0, 0, 256, 257, 259, 258, 260, 261, 262,
	263, 534, 535, 0, 264, 536, 265, 537, 0, 538,
	266, 267, 268, 269, 270, 0, 0, 0, 271, 539,
	540, 541, 0, 272, 273, 542, 0, 0, 0, 274,
	275, 276, 277, 278, 279, 280, 0, 0, 282, 283,
	284, 281, 0, 285, 0, 286, 287, 288, 289, 0,
	290, 0, 291, 292, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 295, 296, 0, 297, 543, 544, 0,
	301, 298, 299, 0, 302, 300, 0, 303, 304, 305,
	0, 0, 306, 307, 308, 0, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 545, 316, 317, 318, 320,
	322, 319, 323, 324, 325, 326, 546, 547, 0, 245,
	0, 0, 0, 0, 0, 327, 328, 329, 548, 0,
	0, 0, 330, 0, 331, 0, 0, 0, 332, 333,
	549, 550, 334, 335, 0, 336, 551, 0, 552, 337,
	0, 338, 339, 340, 341, 342, 553, 554, 555, 400,
	0, 343, 344, 0, 345, 346, 347, 348, 0, 0,
	0, 246, 349, 350, 352, 0, 0, 351, 556, 557,
	0, 558, 0, 353, 354, 0, 559, 0, 355, 356,
	357, 0, 358, 0, 0, 0, 359, 360, 361, 362,
	363, 364, 0, 365, 367, 366, 0, 368, 560, 0,
	369, 370, 0, 0, 371, 372, 373, 0, 0, 374,
	375, 376, 377, 0, 378, 379, 381, 383, 380, 382,
	387, 384, 385, 386, 389, 0, 388, 0, 390, 391,
	392, 396, 395, 397, 394, 0, 393, 0, 247, 0,
	398, 0, 561, 399, 562, 401, 402, 0, 0, 403,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 409,
	563, 0, 410, 0, 564, 411, 412, 404, 413, 414,
	415, 416, 417, 418, 419, 420, 0, 421, 422, 565,
	566, 567, 423, 568, 424, 425, 0, 426, 0, 427,
	428, 429, 430, 431, 432, 433, 569, 435, 434, 436,
	0, 437, 0, 0, 0, 0, 0, 438, 0, 440,
	441, 442, 439, 443, 444, 445, 446, 0, 447, 448,
	449, 0, 450, 451, 452, 453, 570, 454, 0, 455,
	456, 462, 463, 457, 458, 464, 465, 466, 467, 468,
	0, 470, 471, 469, 472, 473, 474, 0, 475, 459,
	460, 476, 477, 0, 478, 479, 480, 481, 482, 483,
	571, 0, 484, 0, 485, 486, 487, 488, 461, 489,
	494, 572, 490, 491, 492, 493, 573, 0, 496, 497,
	0, 495, 0, 498, 499, 500, 501, 502, 503, 321,
	504, 0, 505, 574, 575, 576, 577, 0, 512, 0,
	506, 507, 578, 508, 579, 0, 509, 510, 511, 0,
	513, 514, 0, 0, 515, 516, 517, 519, 520, 518,
	521, 0, 522, 0, 0, 523, 524, 525, 580, 581,
	582, 0, 527, 526, 583, 0, 1389, 0, 242, 528,
	529, 584, 530, 531, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 249, 250, 251, 252,
	253, 0, 254, 255, 0, 0, 0, 0, 1790, 533,
	0, 0, 0, 0, 256, 257, 259, 258, 260, 261,
	262, 263, 534, 535, 0, 264, 536, 265, 537, 0,
	538, 266, 267, 268, 269, 270, 0, 0, 0, 271,
	539, 540, 541, 0, 272, 273, 542, 0, 0, 0,
	274, 275, 276, 277, 278, 279, 280, 0, 0, 282,
	283, 284, 281, 0, 285, 0, 286, 287, 288, 289,
	0, 290, 0, 291, 292, 0, 0, 0, 0, 0,
	0, 0, 293, 294, 295, 296, 0, 297, 543, 544,
	0, 301, 298, 299, 0, 302, 300, 0, 303, 304,
	305, 0, 0, 306, 307, 308, 0, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 545, 316, 317, 318,
	320, 322, 319, 323, 324, 325, 326, 546, 547, 0,
	245, 0, 0, 0, 0, 0, 327, 328, 329, 548,
	0, 0, 0, 330, 0, 331, 0, 0, 0, 332,
	333, 549, 550, 334, 335, 0, 336, 551, 0, 552,
	337, 0, 338, 339, 340, 341, 342, 553, 554, 555,
	400, 0, 343, 344, 0, 345, 346, 347, 348, 0,
	0, 0, 246, 349, 350, 352, 0, 0, 351, 556,
	557, 0, 558, 0, 353, 354, 0, 559, 0, 355,
	356, 357, 0, 358, 0, 0, 0, 359, 360, 361,
	362, 363, 364, 0, 365, 367, 366, 0, 368, 560,
	0, 369, 370, 0, 0, 371, 372, 373, 0, 0,
	374, 375, 376, 377, 0, 378, 379, 381, 383, 380,
	382, 387, 384, 385, 386, 389, 0, 388, 0, 390,
	391, 392, 396, 395, 397, 394, 0, 393, 0, 247,
	0, 398, 0, 561, 399, 562, 401, 402, 0, 0,
	403, 0, 0, 0, 405, 406, 407, 0, 0, 408,
	409, 563, 0, 410, 0, 564, 411, 412, 404, 413,
	414, 415, 416, 417, 418, 419, 420, 0, 421, 422,
	565, 566, 567, 423, 568, 424, 425, 0, 426, 0,
	427, 428, 429, 430, 431, 432, 433, 569, 435, 434,
	436, 0, 437, 0, 0, 0, 0, 0, 438, 0,
	440, 441, 442, 439, 443, 444, 445, 446, 0, 447,
	448, 449, 0, 450, 451, 452, 453, 570, 454, 0,
	455, 456, 462, 463, 457, 458, 464, 465, 466, 467,
	468, 0, 470, 471, 469, 472, 473, 474, 0, 475,
	459, 460, 476, 477, 0, 478, 479, 480, 481, 482,
	483, 571, 0, 484, 0, 485, 486, 487, 488, 461,
	489, 494, 572, 490, 491, 492, 493, 573, 0, 496,
	497, 0, 495, 0, 498, 499, 500, 501, 502, 503,
	321, 504, 0, 505, 574, 575, 576, 577, 0, 512,
	0, 506, 507, 578, 508, 579, 0, 509, 510, 511,
	0, 513, 514, 0, 0, 515, 516, 517, 519, 520,
	518, 521, 0, 522, 0, 0, 523, 524, 525, 580,
	581, 582, 0, 527, 526, 583, 0, 242, 2681, 0,
	528, 529, 584, 530, 531, 532, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 249, 250, 251, 252, 253,
	0, 254, 255, 0, 0, 0, 0, 1393, 533, 0,
	0, 0, 0, 256, 257, 259, 258, 260, 261, 262,
	263, 534, 535, 0, 264, 536, 265, 537, 0, 538,
	266, 267, 268, 269, 270, 0, 0, 0, 271, 539,
	540, 541, 0, 272, 273, 542, 0, 0, 0, 274,
	275, 276, 277, 278, 279, 280, 0, 0, 282, 283,
	284, 281, 0, 285, 0, 286, 287, 288, 289, 0,
	290, 0, 291, 292, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 295, 296, 0, 297, 543, 544, 0,
	301, 298, 299, 0, 302, 300, 0, 303, 304, 305,
	0, 0, 306, 307, 308, 0, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 545, 316, 317, 318, 320,
	322, 319, 323, 324, 325, 326, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 548, 0,
	0, 0, 330, 0, 331, 0, 0, 0, 332, 333,
	549, 550, 334, 335, 0, 336, 551, 0, 552, 337,
	0, 338, 339, 340, 341, 342, 553, 554, 555, 400,
	0, 343, 344, 0, 345, 346, 347, 348, 0, 0,
	0, 0, 349, 350, 352, 0, 0, 351, 556, 557,
	0, 558, 0, 353, 354, 0, 559, 0, 355, 356,
	357, 0, 358, 0, 0, 0, 359, 360, 361, 362,
	363, 364, 0, 365, 367, 366, 0, 368, 560, 0,
	369, 370, 0, 0, 371, 372, 373, 0, 0, 374,
	375, 376, 377, 0, 378, 379, 381, 383, 380, 382,
	387, 384, 385, 386, 389, 0, 388, 0, 390, 391,
	392, 396, 395, 397, 394, 0, 393, 0, 0, 0,
	398, 0, 561, 399, 562, 401, 402, 0, 0, 403,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 409,
	563, 0, 410, 0, 564, 411, 412, 404, 413, 414,
	415, 416, 417, 418, 419, 420, 0, 421, 422, 565,
	566, 567, 423, 568, 424, 425, 0, 426, 0, 427,
	428, 429, 430, 431, 432, 433, 569, 435, 434, 436,
	0, 437, 0, 0, 0, 0, 0, 438, 0, 440,
	441, 442, 439, 443, 444, 445, 446, 0, 447, 448,
	449, 0, 450, 451, 452, 453, 570, 454, 0, 455,
	456, 462, 463, 457, 458, 464, 465, 466, 467, 468,
	0, 470, 471, 469, 472, 473, 474, 0, 475, 459,
	460, 476, 477, 0, 478, 479, 480, 481, 482, 483,
	571, 0, 484, 0, 485, 486, 487, 488, 461, 489,
	494, 572, 490, 491, 492, 493, 573, 0, 496, 497,
	0, 495, 0, 498, 499, 500, 501, 502, 503, 321,
	504, 0, 505, 574, 575, 576, 577, 0, 512, 0,
	506, 507, 578, 508, 579, 0, 509, 510, 511, 0,
	513, 514, 0, 0, 515, 516, 517, 519, 520, 518,
	521, 0, 522, 0, 0, 523, 524, 525, 580, 581,
	582, 0, 527, 526, 583, 242, 0, 0, 0, 528,
	529, 584, 530, 531, 532, 0, 0, 0, 0, 0,
	0, 0, 248, 249, 250, 251, 252, 253, 0, 254,
	255, 0, 0, 0, 0, 0, 533, 0, 4218, 0,
	0, 256, 257, 259, 258, 260, 261, 262, 263, 534,
	535, 0, 264, 536, 265, 537, 0, 538, 266, 267,
	268, 269, 270, 0, 0, 0, 271, 539, 540, 541,
	0, 272, 273, 542, 0, 0, 0, 274, 275, 276,
	277, 278, 279, 280, 0, 0, 282, 283, 284, 281,
	0, 285, 0, 286, 287, 288, 289, 0, 290, 0,
	291, 292, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 295, 296, 0, 297, 543, 544, 0, 301, 298,
	299, 0, 302, 300, 0, 303, 304, 305, 0, 0,
	306, 307, 308, 0, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 545, 316, 317, 318, 320, 322, 319,
	323, 324, 325, 326, 546, 547, 0, 245, 0, 0,
	0, 0, 0, 327, 328, 329, 548, 0, 0, 0,
	330, 0, 331, 0, 0, 0, 332, 333, 549, 550,
	334, 335, 0, 336, 551, 0, 552, 337, 0, 338,
	339, 340, 341, 342, 553, 554, 555, 400, 0, 343,
	344, 0, 345, 346, 347, 348, 0, 0, 0, 246,
	349, 350, 352, 0, 0, 351, 556, 557, 0, 558,
	0, 353, 354, 0, 559, 0, 355, 356, 357, 0,
	358, 0, 0, 0, 359, 360, 361, 362, 363, 364,
	0, 365, 367, 366, 0, 368, 560, 0, 369, 370,
	0, 0, 371, 372, 373, 0, 0, 374, 375, 376,
	377, 0, 378, 379, 381, 383, 380, 382, 387, 384,
	385, 386, 389, 0, 388, 0, 390, 391, 392, 396,
	395, 397, 394, 0, 393, 0, 247, 0, 398, 0,
	561, 399, 562, 401, 402, 0, 0, 403, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 409, 563, 0,
	410, 0, 564, 411, 412, 404, 413, 414, 415, 416,
	417, 418, 419, 420, 0, 421, 422, 565, 566, 567,
	423, 568, 424, 425, 0, 426, 0, 427, 428, 429,
	430, 431, 432, 433, 569, 435, 434, 436, 0, 437,
	0, 0, 0, 0, 0, 438, 0, 440, 441, 442,
	439, 443, 444, 445, 446, 0, 447, 448, 449, 0,
	450, 451, 452, 453, 570, 454, 0, 455, 456, 462,
	463, 457, 458, 464, 465, 466, 467, 468, 0, 470,
	471, 469, 472, 473, 474, 0, 475, 459, 460, 476,
	477, 0, 478, 479, 480, 481, 482, 483, 571, 0,
	484, 0, 485, 486, 487, 488, 461, 489, 494, 572,
	490, 491, 492, 493, 573, 0, 496, 497, 0, 495,
	0, 498, 499, 500, 501, 502, 503, 321, 504, 0,
	505, 574, 575, 576, 577, 0, 512, 0, 506, 507,
	578, 508, 579, 0, 509, 510, 511, 0, 513, 514,
	0, 0, 515, 516, 517, 519, 520, 518, 521, 0,
	522, 0, 0, 523, 524, 525, 580, 581, 582, 242,
	527, 526, 583, 0, 0, 0, 0, 528, 529, 584,
	530, 531, 532, 0, 0, 0, 248, 249, 250, 251,
	252, 253, 0, 254, 255, 0, 0, 0, 0, 0,
	533, 0, 0, 0, 3110, 256, 257, 259, 258, 260,
	261, 262, 263, 534, 535, 0, 264, 536, 265, 537,
	0, 538, 266, 267, 268, 269, 270, 0, 0, 0,
	271, 539, 540, 541, 0, 272, 273, 542, 0, 0,
	0, 274, 275, 276, 277, 278, 279, 280, 0, 0,
	282, 283, 284, 281, 0, 285, 0, 286, 287, 288,
	289, 0, 290, 0, 291, 292, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 295, 296, 0, 297, 543,
	544, 0, 301, 298, 299, 0, 302, 300, 0, 303,
	304, 305, 0, 0, 306, 307, 308, 0, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 545, 316, 317,
	318, 320, 322, 319, 323, 324, 325, 326, 546, 547,
	0, 245, 0, 0, 0, 0, 0, 327, 328, 329,
	548, 0, 0, 0, 330, 0, 331, 0, 0, 0,
	332, 333, 549, 550, 334, 335, 0, 336, 551, 0,
	552, 337, 0, 338, 339, 340, 341, 342, 553, 554,
	555, 400, 0, 343, 344, 0, 345, 346, 347, 348,
	0, 0, 0, 246, 349, 350, 352, 0, 0, 351,
	556, 557, 0, 558, 0, 353, 354, 0, 559, 0,
	355, 356, 357, 0, 358, 0, 0, 0, 359, 360,
	361, 362, 363, 364, 0, 365, 367, 366, 0, 368,
	560, 0, 369, 370, 0, 0, 371, 372, 373, 0,
	0, 374, 375, 376, 377, 0, 378, 379, 381, 383,
	380, 382, 387, 384, 385, 386, 389, 0, 388, 0,
	390, 391, 392, 396, 395, 397, 394, 0, 393, 0,
	247, 0, 398, 0, 561, 399, 562, 401, 402, 0,
	0, 403, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 409, 563, 0, 410, 0, 564, 411, 412, 404,
	413, 414, 415, 416, 417, 418, 419, 420, 0, 421,
	422, 565, 566, 567, 423, 568, 424, 425, 0, 426,
	0, 427, 428, 429, 430, 431, 432, 433, 569, 435,
	434, 436, 0, 437, 0, 0, 0, 0, 0, 438,
	0, 440, 441, 442, 439, 443, 444, 445, 446, 0,
	447, 448, 449, 0, 450, 451, 452, 453, 570, 454,
	0, 455, 456, 462, 463, 457, 458, 464, 465, 466,
	467, 468, 0, 470, 471, 469, 472, 473, 474, 0,
	475, 459, 460, 476, 477, 0, 478, 479, 480, 481,
	482, 483, 571, 0, 484, 0, 485, 486, 487, 488,
	461, 489, 494, 572, 490, 491, 492, 493, 573, 0,
	496, 497, 0, 495, 0, 498, 499, 500, 501, 502,
	503, 321, 504, 0, 505, 574, 575, 576, 577, 0,
	512, 0, 506, 507, 578, 508, 579, 0, 509, 510,
	511, 0, 513, 514, 0, 0, 515, 516, 517, 519,
	520, 518, 521, 0, 522, 0, 0, 523, 524, 525,
	580, 581, 582, 242, 527, 526, 583, 0, 0, 0,
	0, 528, 529, 584, 530, 531, 532, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 1393, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 541, 0, 272,
	273, 542, 0, 0, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 0, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 0, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 553, 554, 555, 400, 0, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 0, 349, 350,
	352, 0, 0, 351, 556, 557, 0, 558, 0, 353,
	354, 0, 559, 0, 355, 356, 357, 0, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 0, 369, 370, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 388, 0, 390, 391, 392, 396, 395, 397,
	394, 0, 393, 0, 0, 0, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 0, 410, 0,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 0, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 462, 463, 457,
	458, 464, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 473, 474, 0, 475, 459, 460, 476, 477, 0,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 0, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 574,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 0, 527, 526,
	583, 242, 0, 0, 0, 528, 529, 584, 530, 531,
	532, 0, 0, 0, 0, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 0, 254, 255, 0, 0, 0,
	0, 0, 533, 0, 2652, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 534, 535, 0, 264, 536,
	265, 537, 0, 538, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 539, 540, 541, 0, 272, 273, 542,
	0, 0, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 0, 285, 0, 286,
	287, 288, 289, 0, 290, 0, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 295, 296, 0,
	297, 543, 544, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 307, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 545,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	546, 547, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 548, 0, 0, 0, 330, 0, 331, 0,
	0, 0, 332, 333, 549, 550, 334, 335, 0, 336,
	551, 0, 552, 337, 0, 338, 339, 340, 341, 342,
	553, 554, 555, 400, 0, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 0, 349, 350, 352, 0,
	0, 351, 556, 557, 0, 558, 0, 353, 354, 0,
	559, 0, 355, 356, 357, 0, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 560, 0, 369, 370, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	388, 0, 390, 391, 392, 396, 395, 397, 394, 0,
	393, 0, 0, 0, 398, 0, 561, 399, 562, 401,
	402, 0, 0, 403, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 409, 563, 0, 410, 0, 564, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 565, 566, 567, 423, 568, 424, 425,
	0, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 0, 450, 451, 452, 453,
	570, 454, 0, 455, 456, 462, 463, 457, 458, 464,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 473,
	474, 0, 475, 459, 460, 476, 477, 0, 478, 479,
	480, 481, 482, 483, 571, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 572, 490, 491, 492, 493,
	573, 0, 496, 497, 0, 495, 0, 498, 499, 500,
	501, 502, 503, 321, 504, 0, 505, 574, 575, 576,
	577, 0, 512, 0, 506, 507, 578, 508, 579, 0,
	509, 510, 511, 0, 513, 514, 0, 0, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 580, 581, 582, 0, 527, 526, 583, 242,
	0, 0, 0, 528, 529, 584, 530, 531, 532, 0,
	0, 0, 0, 0, 0, 0, 248, 249, 250, 251,
	252, 253, 0, 254, 255, 0, 0, 0, 0, 0,
	533, 0, 3267, 0, 0, 256, 257, 259, 258, 260,
	261, 262, 263, 534, 535, 0, 264, 536, 265, 537,
	0, 538, 266, 267, 268, 269, 270, 0, 0, 0,
	271, 539, 540, 541, 0, 272, 273, 542, 0, 0,
	0, 274, 275, 276, 277, 278, 279, 280, 0, 0,
	282, 283, 284, 281, 0, 285, 0, 286, 287, 288,
	289, 0, 290, 0, 291, 292, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 295, 296, 0, 297, 543,
	544, 0, 301, 298, 299, 0, 302, 300, 0, 303,
	304, 305, 0, 0, 306, 307, 308, 0, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 545, 316, 317,
	318, 320, 322, 319, 323, 324, 325, 326, 546, 547,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	548, 0, 0, 0, 330, 0, 331, 0, 0, 0,
	332, 333, 549, 550, 334, 335, 0, 336, 551, 0,
	552, 337, 0, 338, 339, 340, 341, 342, 553, 554,
	555, 400, 0, 343, 344, 0, 345, 346, 347, 348,
	0, 0, 0, 0, 349, 350, 352, 0, 0, 351,
	556, 557, 0, 558, 0, 353, 354, 0, 559, 0,
	355, 356, 357, 0, 358, 0, 0, 0, 359, 360,
	361, 362, 363, 364, 0, 365, 367, 366, 0, 368,
	560, 0, 369, 370, 0, 0, 371, 372, 373, 0,
	0, 374, 375, 376, 377, 0, 378, 379, 381, 383,
	380, 382, 387, 384, 385, 386, 389, 0, 388, 0,
	390, 391, 392, 396, 395, 397, 394, 0, 393, 0,
	0, 0, 398, 0, 561, 399, 562, 401, 402, 0,
	0, 403, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 409, 563, 0, 410, 0, 564, 411, 412, 404,
	413, 414, 415, 416, 417, 418, 419, 420, 0, 421,
	422, 565, 566, 567, 423, 568, 424, 425, 0, 426,
	0, 427, 428, 429, 430, 431, 432, 433, 569, 435,
	434, 436, 0, 437, 0, 0, 0, 0, 0, 438,
	0, 440, 441, 442, 439, 443, 444, 445, 446, 0,
	447, 448, 449, 0, 450, 451, 452, 453, 570, 454,
	0, 455, 456, 462, 463, 457, 458, 464, 465, 466,
	467, 468, 0, 470, 471, 469, 472, 473, 474, 0,
	475, 459, 460, 476, 477, 0, 478, 479, 480, 481,
	482, 483, 571, 0, 484, 0, 485, 486, 487, 488,
	461, 489, 494, 572, 490, 491, 492, 493, 573, 0,
	496, 497, 0, 495, 0, 498, 499, 500, 501, 502,
	503, 321, 504, 0, 505, 574, 575, 576, 577, 0,
	512, 0, 506, 507, 578, 508, 579, 0, 509, 510,
	511, 0, 513, 514, 0, 0, 515, 516, 517, 519,
	520, 518, 521, 0, 522, 0, 0, 523, 524, 525,
	580, 581, 582, 0, 527, 526, 583, 0, 787, 0,
	670, 528, 529, 584, 530, 531, 532, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 249, 250,
	251, 252, 253, 0, 254, 255, 0, 0, 0, 0,
	2068, 533, 0, 0, 0, 0, 256, 257, 259, 258,
	260, 261, 262, 263, 534, 535, 0, 264, 536, 265,
	537, 0, 538, 266, 267, 268, 269, 270, 0, 0,
	0, 271, 539, 540, 541, 0, 272, 273, 542, 0,
	0, 0, 274, 275, 276, 277, 278, 279, 280, 0,
	0, 282, 283, 284, 281, 0, 285, 0, 286, 287,
	288, 289, 0, 290, 0, 291, 292, 0, 0, 0,
	0, 0, 0, 0, 293, 294, 677, 296, 0, 297,
	543, 544, 0, 301, 298, 299, 0, 302, 300, 0,
	303, 304, 305, 0, 0, 306, 307, 308, 0, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 545, 316,
	317, 318, 320, 322, 319, 323, 324, 325, 326, 546,
	547, 0, 245, 0, 0, 0, 0, 0, 327, 328,
	329, 548, 0, 0, 0, 330, 0, 331, 0, 785,
	0, 332, 333, 549, 550, 334, 335, 0, 336, 551,
	0, 552, 337, 0, 338, 339, 340, 341, 342, 553,
	554, 555, 400, 0, 343, 344, 0, 345, 346, 347,
	348, 0, 0, 0, 246, 349, 350, 352, 0, 0,
	351, 556, 557, 0, 558, 0, 353, 354, 0, 559,
	0, 355, 356, 357, 0, 358, 0, 0, 0, 359,
	360, 361, 362, 363, 364, 0, 365, 367, 366, 0,
	368, 560, 0, 369, 370, 0, 0, 371, 372, 373,
	0, 0, 374, 375, 376, 377, 0, 378, 379, 381,
	383, 380, 382, 387, 384, 385, 386, 389, 0, 388,
	0, 390, 391, 392, 396, 395, 397, 394, 0, 393,
	0, 247, 0, 398, 0, 561, 399, 562, 401, 402,
	0, 0, 403, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 409, 563, 0, 410, 0, 564, 411, 412,
	404, 413, 414, 415, 416, 417, 418, 419, 420, 0,
	421, 422, 565, 566, 567, 423, 568, 424, 425, 0,
	426, 0, 427, 428, 429, 430, 431, 432, 433, 569,
	435, 434, 436, 0, 437, 0, 0, 0, 0, 0,
	438, 0, 440, 441, 442, 439, 443, 444, 445, 446,
	0, 447, 448, 449, 0, 450, 451, 452, 453, 570,
	454, 0, 455, 456, 462, 463, 457, 458, 464, 465,
	466, 467, 468, 0, 470, 471, 469, 472, 473, 474,
	0, 475, 459, 460, 476, 477, 0, 478, 479, 480,
	481, 482, 483, 571, 0, 484, 0, 485, 486, 487,
	488, 461, 489, 494, 572, 490, 491, 492, 493, 573,
	0, 496, 497, 0, 495, 675, 498, 499, 500, 501,
	676, 503, 321, 504, 0, 505, 574, 575, 576, 577,
	0, 512, 0, 506, 507, 578, 508, 579, 0, 509,
	510, 511, 0, 513, 514, 0, 0, 515, 516, 517,
	519, 520, 518, 521, 0, 522, 0, 0, 523, 524,
	525, 580, 581, 582, 0, 527, 526, 583, 0, 668,
	0, 670, 528, 529, 584, 530, 531, 532, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 680, 254, 255, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 534, 535, 0, 264, 536,
	265, 537, 0, 538, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 539, 540, 541, 0, 272, 273, 542,
	0, 0, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 0, 285, 0, 286,
	287, 288, 289, 0, 290, 0, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 677, 296, 0,
	297, 543, 544, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 307, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 545,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	546, 547, 0, 245, 0, 0, 0, 0, 0, 327,
	328, 329, 548, 0, 0, 0, 330, 0, 331, 0,
	0, 0, 332, 333, 549, 550, 334, 335, 0, 336,
	551, 0, 552, 337, 0, 338, 339, 340, 341, 342,
	553, 554, 555, 400, 0, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 246, 349, 350, 352, 0,
	0, 351, 556, 557, 0, 558, 0, 353, 354, 0,
	559, 0, 355, 356, 357, 0, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 560, 0, 369, 370, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	388, 0, 390, 391, 392, 396, 395, 397, 394, 0,
	393, 0, 247, 0, 398, 0, 561, 399, 562, 401,
	402, 0, 0, 403, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 409, 563, 0, 410, 0, 564, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 565, 566, 567, 423, 568, 424, 425,
	0, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 0, 450, 451, 452, 453,
	570, 454, 0, 455, 456, 462, 463, 457, 458, 464,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 473,
	474, 0, 475, 459, 460, 476, 477, 0, 478, 479,
	480, 481, 482, 483, 571, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 572, 490, 491, 492, 493,
	573, 0, 496, 497, 0, 495, 675, 498, 499, 500,
	501, 676, 503, 321, 504, 0, 505, 574, 575, 576,
	577, 0, 512, 0, 506, 507, 578, 508, 579, 0,
	509, 510, 511, 0, 513, 514, 0, 0, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 580, 581, 582, 670, 527, 526, 583, 0,
	0, 0, 0, 528, 529, 584, 530, 531, 532, 0,
	0, 0, 248, 249, 250, 251, 252, 253, 0, 254,
	255, 0, 0, 0, 0, 680, 533, 0, 0, 0,
	0, 256, 257, 259, 258, 260, 261, 262, 263, 534,
	535, 0, 264, 536, 265, 537, 0, 538, 266, 267,
	268, 269, 270, 0, 0, 0, 271, 539, 540, 541,
	0, 272, 273, 542, 0, 0, 0, 274, 275, 276,
	277, 278, 279, 280, 0, 0, 282, 283, 284, 281,
	0, 285, 0, 286, 287, 288, 289, 0, 290, 0,
	291, 292, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 677, 296, 0, 297, 543, 544, 0, 301, 298,
	299, 0, 302, 300, 0, 303, 304, 305, 0, 0,
	306, 307, 308, 0, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 545, 316, 317, 318, 320, 322, 319,
	323, 324, 325, 326, 546, 547, 0, 245, 0, 0,
	0, 0, 0, 327, 328, 329, 548, 0, 0, 0,
	330, 0, 331, 0, 0, 0, 332, 333, 549, 550,
	334, 335, 0, 336, 551, 0, 552, 337, 0, 338,
	339, 340, 341, 342, 553, 554, 555, 400, 0, 343,
	344, 0, 345, 346, 347, 348, 0, 0, 0, 246,
	349, 350, 352, 0, 0, 351, 556, 557, 0, 558,
	0, 353, 354, 0, 559, 0, 355, 356, 357, 0,
	358, 0, 0, 0, 359, 360, 361, 362, 363, 364,
	0, 365, 367, 366, 0, 368, 560, 0, 369, 370,
	0, 0, 371, 372, 373, 0, 0, 374, 375, 376,
	377, 0, 378, 379, 381, 383, 380, 382, 387, 384,
	385, 386, 389, 0, 388, 0, 390, 391, 392, 396,
	395, 397, 394, 0, 393, 0, 247, 0, 398, 0,
	561, 399, 562, 401, 402, 0, 0, 403, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 409, 563, 0,
	410, 0, 564, 411, 412, 404, 413, 414, 415, 416,
	417, 418, 419, 420, 0, 421, 422, 565, 566, 567,
	423, 568, 424, 425, 0, 426, 0, 427, 428, 429,
	430, 431, 432, 433, 569, 435, 434, 436, 0, 437,
	0, 0, 0, 0, 0, 438, 0, 440, 441, 442,
	439, 443, 444, 445, 446, 0, 447, 448, 449, 0,
	450, 451, 452, 453, 570, 454, 0, 455, 456, 462,
	463, 457, 458, 464, 465, 466, 467, 468, 0, 470,
	471, 469, 472, 473, 474, 0, 475, 459, 460, 476,
	477, 0, 478, 479, 480, 481, 482, 483, 571, 0,
	484, 0, 485, 486, 487, 488, 461, 489, 494, 572,
	490, 491, 492, 493, 573, 0, 496, 497, 0, 495,
	675, 498, 499, 500, 501, 676, 503, 321, 504, 0,
	505, 574, 575, 576, 577, 0, 512, 0, 506, 507,
	578, 508, 579, 0, 509, 510, 511, 0, 513, 514,
	0, 0, 515, 516, 517, 519, 520, 518, 521, 0,
	522, 0, 0, 523, 524, 525, 580, 581, 582, 670,
	527, 526, 583, 0, 0, 0, 0, 528, 529, 584,
	530, 531, 532, 0, 0, 0, 248, 249, 250, 251,
	252, 253, 0, 254, 255, 0, 0, 0, 0, 680,
	533, 0, 0, 0, 0, 256, 257, 259, 258, 260,
	261, 262, 263, 534, 535, 0, 264, 536, 265, 537,
	0, 538, 266, 267, 268, 269, 270, 0, 0, 0,
	271, 539, 540, 541, 0, 272, 273, 542, 0, 0,
	0, 274, 275, 276, 277, 278, 279, 280, 0, 0,
	282, 283, 284, 281, 0, 285, 0, 286, 287, 288,
	289, 0, 290, 0, 291, 292, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 677, 296, 0, 297, 543,
	544, 0, 301, 298, 299, 0, 302, 300, 0, 303,
	304, 305, 0, 0, 306, 307, 308, 0, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 545, 316, 317,
	318, 320, 322, 319, 323, 324, 325, 326, 546, 547,
	0, 245, 0, 0, 0, 0, 0, 327, 328, 329,
	548, 0, 0, 0, 330, 0, 331, 0, 0, 0,
	332, 333, 549, 550, 334, 335, 0, 336, 551, 0,
	552, 337, 0, 338, 339, 340, 341, 342, 553, 554,
	555, 400, 0, 343, 344, 0, 345, 346, 347, 348,
	0, 0, 0, 246, 349, 350, 352, 0, 0, 351,
	556, 557, 0, 558, 0, 353, 354, 0, 559, 0,
	355, 356, 357, 0, 358, 0, 0, 0, 359, 360,
	361, 362, 363, 364, 0, 365, 367, 366, 0, 368,
	560, 0, 369, 370, 0, 0, 371, 372, 373, 0,
	0, 374, 375, 376, 377, 0, 378, 379, 381, 383,
	380, 382, 387, 384, 385, 386, 389, 0, 388, 0,
	390, 391, 392, 396, 395, 397, 394, 0, 393, 0,
	247, 0, 398, 0, 561, 399, 562, 401, 402, 0,
	0, 403, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 409, 563, 0, 410, 0, 564, 411, 412, 404,
	413, 414, 415, 416, 417, 418, 419, 420, 0, 421,
	422, 565, 566, 567, 423, 568, 424, 425, 0, 426,
	0, 427, 428, 429, 430, 431, 432, 433, 569, 435,
	434, 436, 0, 437, 0, 0, 0, 0, 0, 438,
	0, 440, 441, 442, 439, 443, 444, 445, 446, 0,
	447, 448, 449, 0, 2107, 451, 452, 453, 570, 454,
	0, 455, 456, 462, 463, 457, 458, 464, 465, 466,
	467, 468, 0, 470, 471, 469, 472, 473, 474, 0,
	475, 459, 460, 476, 477, 0, 478, 479, 480, 481,
	482, 483, 571, 0, 484, 0, 485, 486, 487, 488,
	461, 489, 494, 572, 490, 491, 492, 493, 573, 0,
	496, 497, 0, 495, 675, 498, 499, 500, 501, 676,
	503, 321, 504, 0, 505, 574, 575, 576, 577, 0,
	512, 0, 506, 507, 578, 508, 579, 0, 509, 510,
	511, 0, 513, 514, 0, 0, 515, 516, 517, 519,
	520, 518, 521, 0, 522, 0, 0, 523, 524, 525,
	580, 581, 582, 670, 527, 526, 583, 0, 0, 0,
	0, 528, 529, 584, 530, 531, 532, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 680, 533, 0, 0, 0, 0, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 541, 0, 272,
	273, 542, 0, 0, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 0, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 677,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 245, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 0, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 553, 554, 555, 400, 0, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 246, 349, 350,
	352, 0, 0, 351, 556, 557, 0, 558, 0, 353,
	354, 0, 559, 0, 355, 356, 357, 0, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 0, 369, 370, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 388, 0, 390, 391, 392, 396, 395, 397,
	394, 0, 393, 0, 247, 0, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 0, 410, 0,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 0, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 462, 463, 457,
	458, 464, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 473, 474, 0, 475, 459, 460, 476, 477, 0,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 675, 498,
	499, 500, 501, 676, 503, 321, 504, 0, 505, 574,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 1851, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 670, 527, 526,
	583, 0, 0, 0, 0, 528, 529, 584, 530, 531,
	532, 0, 0, 0, 248, 249, 250, 251, 252, 253,
	0, 254, 255, 0, 0, 0, 0, 680, 533, 0,
	0, 0, 0, 256, 257, 259, 258, 260, 261, 262,
	263, 534, 535, 0, 264, 536, 265, 537, 0, 538,
	266, 267, 268, 269, 270, 0, 0, 0, 271, 539,
	540, 541, 0, 272, 273, 542, 0, 0, 0, 274,
	275, 276, 277, 278, 279, 280, 0, 0, 282, 283,
	284, 281, 0, 285, 0, 286, 287, 288, 289, 0,
	290, 0, 291, 292, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 677, 296, 0, 297, 543, 544, 0,
	301, 298, 299, 0, 302, 300, 0, 303, 304, 305,
	0, 0, 306, 307, 308, 0, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 545, 316, 317, 318, 320,
	322, 319, 323, 324, 325, 326, 546, 547, 0, 245,
	0, 0, 0, 0, 0, 327, 328, 329, 548, 0,
	0, 0, 330, 0, 331, 0, 0, 0, 332, 333,
	549, 550, 334, 335, 0, 336, 551, 0, 552, 337,
	0, 338, 339, 340, 341, 342, 553, 554, 555, 400,
	0, 343, 344, 0, 345, 346, 347, 348, 0, 0,
	0, 246, 349, 350, 352, 0, 0, 351, 556, 557,
	0, 558, 0, 353, 354, 0, 559, 0, 355, 356,
	357, 0, 358, 0, 0, 0, 359, 360, 361, 362,
	363, 364, 0, 365, 367, 366, 0, 368, 560, 0,
	369, 370, 0, 0, 371, 372, 373, 0, 0, 374,
	375, 376, 377, 0, 378, 379, 381, 383, 380, 382,
	387, 384, 385, 386, 389, 0, 388, 0, 390, 391,
	392, 396, 395, 397, 394, 0, 393, 0, 247, 0,
	398, 0, 561, 399, 562, 401, 402, 0, 0, 403,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 409,
	563, 0, 410, 0, 564, 411, 412, 404, 413, 414,
	415, 416, 417, 418, 419, 420, 0, 421, 422, 565,
	566, 567, 423, 568, 424, 425, 0, 426, 0, 427,
	428, 429, 430, 431, 432, 433, 569, 435, 434, 436,
	0, 437, 0, 0, 0, 0, 0, 438, 0, 440,
	441, 442, 439, 443, 444, 445, 446, 0, 447, 448,
	449, 0, 450, 451, 452, 453, 570, 454, 0, 455,
	456, 462, 463, 457, 458, 464, 465, 466, 467, 468,
	0, 470, 471, 469, 472, 473, 474, 0, 475, 459,
	460, 476, 477, 0, 478, 479, 480, 481, 482, 483,
	571, 0, 484, 0, 485, 486, 487, 488, 461, 489,
	494, 572, 490, 491, 492, 493, 573, 0, 496, 497,
	0, 495, 675, 498, 499, 500, 501, 676, 503, 321,
	504, 0, 505, 574, 575, 576, 577, 0, 512, 0,
	506, 507, 578, 508, 579, 0, 509, 510, 1805, 0,
	513, 514, 0, 0, 515, 516, 517, 519, 520, 518,
	521, 0, 522, 0, 0, 523, 524, 525, 580, 581,
	582, 1826, 527, 526, 583, 0, 0, 0, 0, 528,
	529, 584, 530, 531, 532, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 0, 254, 255, 0, 0, 0,
	0, 680, 0, 0, 0, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 0, 1832, 0, 264, 1822,
	265, 1838, 0, 1845, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 1848, 1849, 0, 0, 272, 273, 0,
	0, 1264, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 0, 285, 0, 286,
	287, 288, 289, 0, 290, 1056, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 295, 296, 1039,
	297, 1836, 1835, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 1024, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 0,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 1834, 0, 0, 0, 330, 0, 331, 0,
	0, 1057, 332, 333, 1843, 1844, 334, 335, 0, 336,
	0, 0, 0, 337, 0, 338, 339, 340, 341, 342,
	0, 0, 0, 400, 1059, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 0, 349, 350, 352, 0,
	1058, 351, 1829, 1830, 0, 1825, 0, 353, 354, 1060,
	0, 1061, 355, 356, 357, 1062, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 0, 1063, 369, 370, 1064, 0, 371, 372,
	373, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	388, 1065, 390, 391, 392, 396, 395, 397, 394, 1066,
	393, 0, 0, 1067, 398, 0, 0, 399, 1837, 401,
	402, 0, 0, 403, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 409, 0, 1068, 410, 1069, 0, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 1819, 1820, 0, 423, 0, 424, 425,
	0, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	1833, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 1070, 450, 451, 452, 453,
	0, 454, 0, 455, 456, 462, 463, 457, 458, 464,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 473,
	474, 0, 475, 459, 460, 476, 477, 1071, 478, 479,
	480, 481, 482, 483, 1831, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 1847, 490, 491, 492, 493,
	0, 0, 496, 497, 0, 495, 0, 498, 499, 500,
	501, 502, 503, 321, 504, 0, 505, 1839, 1840, 1841,
	1842, 0, 512, 0, 506, 507, 0, 508, 0, 0,
	509, 510, 511, 0, 513, 514, 0, 0, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 0, 1823, 1846, 0, 527, 526, 0, 0,
	0, 0, 0, 528, 529, 0, 530, 531, 532, 1298,
	1297, 0, 0, 0, 0, 1295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 249, 250, 251,
	252, 253, 0, 254, 255, 0, 1813, 0, 0, 0,
	533, 0, 0, 0, 0, 256, 257, 259, 258, 260,
	261, 262, 263, 534, 535, 0, 264, 536, 265, 537,
	0, 538, 266, 267, 268, 269, 270, 0, 0, 0,
	271, 539, 540, 541, 0, 272, 273, 542, 0, 1264,
	0, 274, 275, 276, 277, 278, 279, 280, 0, 0,
	282, 283, 284, 281, 0, 285, 0, 286, 287, 288,
	289, 0, 290, 1056, 291, 292, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 295, 296, 0, 297, 543,
	544, 0, 301, 298, 299, 0, 302, 300, 0, 303,
	304, 305, 0, 0, 306, 307, 308, 0, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 545, 316, 317,
	318, 320, 322, 319, 323, 324, 325, 326, 546, 547,
	0, 245, 0, 0, 0, 0, 0, 327, 328, 329,
	548, 0, 0, 0, 330, 0, 331, 0, 0, 1057,
	332, 333, 549, 550, 334, 335, 0, 336, 551, 0,
	552, 337, 0, 338, 339, 340, 341, 342, 553, 554,
	555, 400, 1059, 343, 344, 0, 345, 346, 347, 348,
	0, 0, 0, 0, 349, 350, 352, 0, 1058, 351,
	556, 557, 0, 558, 0, 353, 354, 1060, 559, 1061,
	355, 356, 357, 1062, 358, 0, 0, 0, 359, 360,
	361, 362, 363, 364, 0, 365, 367, 366, 0, 368,
	560, 1063, 369, 370, 1064, 0, 371, 372, 373, 0,
	0, 374, 375, 376, 377, 0, 378, 379, 381, 383,
	380, 382, 387, 384, 385, 386, 389, 0, 388, 1065,
	390, 391, 392, 396, 395, 397, 394, 1066, 393, 0,
	0, 1067, 398, 3432, 561, 399, 562, 401, 402, 0,
	0, 403, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 409, 563, 1068, 410, 1069, 564, 411, 412, 404,
	413, 414, 415, 416, 417, 418, 419, 420, 0, 421,
	422, 565, 566, 567, 423, 568, 424, 425, 0, 426,
	0, 427, 428, 429, 430, 431, 432, 433, 569, 435,
	434, 436, 0, 437, 0, 0, 0, 0, 0, 438,
	0, 440, 441, 442, 439, 443, 444, 445, 446, 0,
	447, 448, 449, 1070, 450, 451, 452, 453, 570, 454,
	0, 455, 456, 462, 463, 457, 458, 464, 465, 466,
	467, 468, 0, 470, 471, 469, 472, 473, 474, 0,
	475, 459, 460, 476, 477, 1071, 478, 479, 480, 481,
	482, 483, 571, 0, 484, 0, 485, 486, 487, 488,
	461, 489, 494, 572, 490, 491, 492, 493, 573, 0,
	496, 497, 0, 495, 0, 498, 499, 500, 501, 502,
	503, 321, 504, 0, 505, 574, 575, 576, 577, 0,
	512, 0, 506, 507, 578, 508, 579, 0, 509, 510,
	511, 0, 513, 514, 0, 0, 515, 516, 517, 519,
	520, 518, 521, 0, 522, 0, 0, 523, 524, 525,
	580, 581, 582, 0, 527, 526, 583, 0, 0, 0,
	0, 528, 529, 584, 530, 531, 532, 1298, 1297, 0,
	0, 0, 0, 1295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 249, 250, 251, 252, 253,
	0, 254, 255, 0, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 256, 257, 259, 258, 260, 261, 262,
	263, 534, 535, 0, 264, 536, 265, 537, 0, 538,
	266, 267, 268, 269, 270, 0, 0, 0, 271, 539,
	540, 541, 0, 272, 273, 542, 0, 1264, 0, 274,
	275, 276, 277, 278, 279, 280, 0, 0, 282, 283,
	284, 281, 0, 285, 0, 286, 287, 288, 289, 0,
	290, 1056, 291, 292, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 295, 296, 0, 297, 543, 544, 0,
	301, 298, 299, 0, 302, 300, 0, 303, 304, 305,
	0, 0, 306, 307, 308, 0, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 545, 316, 317, 318, 320,
	322, 319, 323, 324, 325, 326, 546, 547, 0, 245,
	0, 0, 0, 0, 0, 327, 328, 329, 548, 0,
	0, 0, 330, 0, 331, 0, 0, 1057, 332, 333,
	549, 550, 334, 335, 0, 336, 551, 0, 552, 337,
	0, 338, 339, 340, 341, 342, 553, 554, 555, 400,
	1059, 343, 344, 0, 345, 346, 347, 348, 0, 0,
	0, 0, 349, 350, 352, 0, 1058, 351, 556, 557,
	0, 558, 0, 353, 354, 1060, 559, 1061, 355, 356,
	357, 1062, 358, 0, 0, 0, 359, 360, 361, 362,
	363, 364, 0, 365, 367, 366, 0, 368, 560, 1063,
	369, 370, 1064, 0, 371, 372, 373, 0, 0, 374,
	375, 376, 377, 0, 378, 379, 381, 383, 380, 382,
	387, 384, 385, 386, 389, 0, 388, 1065, 390, 391,
	392, 396, 395, 397, 394, 1066, 393, 0, 0, 1067,
	398, 3083, 561, 399, 562, 401, 402, 0, 0, 403,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 409,
	563, 1068, 410, 1069, 564, 411, 412, 404, 413, 414,
	415, 416, 417, 418, 419, 420, 0, 421, 422, 565,
	566, 567, 423, 568, 424, 425, 0, 426, 0, 427,
	428, 429, 430, 431, 432, 433, 569, 435, 434, 436,
	0, 437, 0, 0, 0, 0, 0, 438, 0, 440,
	441, 442, 439, 443, 444, 445, 446, 0, 447, 448,
	449, 1070, 450, 451, 452, 453, 570, 454, 0, 455,
	456, 462, 463, 457, 458, 464, 465, 466, 467, 468,
	0, 470, 471, 469, 472, 473, 474, 0, 475, 459,
	460, 476, 477, 1071, 478, 479, 480, 481, 482, 483,
	571, 0, 484, 0, 485, 486, 487, 488, 461, 489,
	494, 572, 490, 491, 492, 493, 573, 0, 496, 497,
	0, 495, 0, 498, 499, 500, 501, 502, 503, 321,
	504, 0, 505, 574, 575, 576, 577, 0, 512, 0,
	506, 507, 578, 508, 579, 0, 509, 510, 511, 0,
	513, 514, 0, 0, 515, 516, 517, 519, 520, 518,
	521, 0, 522, 0, 0, 523, 524, 525, 580, 581,
	582, 0, 527, 526, 583, 1298, 1297, 0, 0, 528,
	529, 584, 530, 531, 532, 0, 0, 0, 0, 0,
	0, 0, 248, 249, 250, 251, 252, 253, 0, 254,
	255, 0, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 256, 257, 259, 258, 260, 261, 262, 263, 534,
	535, 0, 264, 536, 265, 537, 0, 538, 266, 267,
	268, 269, 270, 0, 0, 0, 271, 539, 540, 541,
	0, 272, 273, 542, 0, 1264, 0, 274, 275, 276,
	277, 278, 279, 280, 0, 0, 282, 283, 284, 281,
	0, 285, 0, 286, 287, 288, 289, 0, 290, 1056,
	291, 292, 0, 0, 0, 0, 0, 0, 3025, 293,
	294, 295, 296, 0, 297, 543, 544, 0, 301, 298,
	299, 0, 302, 300, 0, 303, 304, 305, 0, 0,
	306, 307, 308, 0, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 545, 316, 317, 318, 320, 322, 319,
	323, 324, 325, 326, 546, 547, 0, 245, 0, 0,
	0, 0, 0, 327, 328, 329, 548, 0, 0, 0,
	330, 0, 331, 0, 0, 1057, 332, 333, 549, 550,
	334, 335, 0, 336, 551, 0, 552, 337, 0, 338,
	339, 340, 341, 342, 553, 554, 555, 400, 1059, 343,
	344, 0, 345, 346, 347, 348, 0, 0, 0, 0,
	349, 350, 352, 0, 1058, 351, 556, 557, 0, 558,
	0, 353, 354, 1060, 559, 1061, 355, 356, 357, 1062,
	358, 0, 0, 0, 359, 360, 361, 362, 363, 364,
	0, 365, 367, 366, 0, 368, 560, 1063, 369, 370,
	1064, 0, 371, 372, 373, 0, 0, 374, 375, 376,
	377, 0, 378, 379, 381, 383, 380, 382, 387, 384,
	385, 386, 389, 0, 388, 1065, 390, 391, 392, 396,
	395, 397, 394, 1066, 393, 0, 0, 1067, 398, 0,
	561, 399, 562, 401, 402, 0, 0, 403, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 409, 563, 1068,
	410, 1069, 564, 411, 412, 404, 413, 414, 415, 416,
	417, 418, 419, 420, 0, 421, 422, 565, 566, 567,
	423, 568, 424, 425, 0, 426, 0, 427, 428, 429,
	430, 431, 432, 433, 569, 435, 434, 436, 0, 437,
	0, 0, 0, 0, 0, 438, 0, 440, 441, 442,
	439, 443, 444, 445, 446, 0, 447, 448, 449, 1070,
	450, 451, 452, 453, 570, 454, 0, 455, 456, 462,
	463, 457, 458, 464, 465, 466, 467, 468, 0, 470,
	471, 469, 472, 473, 474, 3026, 475, 459, 460, 476,
	477, 1071, 478, 479, 480, 481, 482, 483, 571, 0,
	484, 0, 485, 486, 487, 488, 461, 489, 494, 572,
	490, 491, 492, 493, 573, 0, 496, 497, 0, 495,
	0, 498, 499, 500, 501, 502, 503, 321, 504, 0,
	505, 574, 575, 576, 577, 0, 512, 0, 506, 507,
	578, 508, 579, 0, 509, 510, 511, 0, 513, 514,
	0, 0, 515, 516, 517, 519, 520, 518, 521, 0,
	522, 0, 0, 523, 524, 525, 580, 581, 582, 242,
	527, 526, 583, 0, 0, 0, 0, 528, 529, 584,
	530, 531, 532, 0, 0, 0, 248, 249, 250, 251,
	252, 253, 0, 254, 255, 0, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 256, 257, 259, 258, 260,
	261, 262, 263, 534, 535, 0, 264, 536, 265, 537,
	0, 538, 266, 267, 268, 269, 270, 0, 0, 0,
	271, 539, 540, 541, 0, 272, 273, 542, 0, 0,
	0, 274, 275, 276, 277, 278, 279, 280, 0, 0,
	282, 283, 284, 281, 0, 285, 0, 286, 287, 288,
	289, 0, 290, 0, 291, 292, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 295, 296, 0, 297, 543,
	544, 0, 301, 298, 299, 0, 302, 300, 0, 303,
	304, 305, 0, 0, 306, 307, 308, 0, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 545, 316, 317,
	318, 320, 322, 319, 323, 324, 325, 326, 546, 547,
	0, 245, 0, 0, 0, 0, 0, 327, 328, 329,
	548, 0, 0, 0, 330, 0, 331, 0, 0, 0,
	332, 333, 549, 550, 334, 335, 0, 336, 551, 0,
	552, 337, 0, 338, 339, 340, 341, 342, 553, 554,
	555, 400, 0, 343, 344, 0, 345, 346, 347, 348,
	0, 0, 0, 246, 349, 350, 352, 0, 0, 351,
	556, 557, 0, 558, 0, 353, 354, 0, 559, 0,
	355, 356, 357, 0, 358, 0, 0, 0, 359, 360,
	361, 362, 363, 364, 0, 365, 367, 366, 0, 368,
	560, 0, 369, 370, 0, 0, 371, 372, 373, 0,
	0, 374, 375, 376, 377, 0, 378, 379, 381, 383,
	380, 382, 387, 384, 385, 386, 389, 0, 388, 0,
	390, 391, 392, 396, 395, 397, 394, 0, 393, 0,
	247, 0, 398, 0, 561, 399, 562, 401, 402, 0,
	0, 403, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 409, 563, 0, 410, 0, 564, 411, 412, 404,
	413, 414, 415, 416, 417, 418, 419, 420, 0, 421,
	422, 565, 566, 567, 423, 568, 424, 425, 0, 426,
	0, 427, 428, 429, 430, 431, 432, 433, 569, 435,
	434, 436, 0, 437, 0, 0, 0, 0, 0, 438,
	0, 440, 441, 442, 439, 443, 444, 445, 446, 0,
	447, 448, 449, 0, 450, 451, 452, 453, 570, 454,
	0, 455, 456, 462, 463, 457, 458, 464, 465, 466,
	467, 468, 0, 470, 471, 469, 472, 473, 474, 0,
	475, 459, 460, 476, 477, 0, 478, 479, 480, 481,
	482, 483, 571, 0, 484, 0, 485, 486, 487, 488,
	461, 489, 494, 572, 490, 491, 492, 493, 573, 0,
	496, 497, 0, 495, 0, 498, 499, 500, 501, 502,
	503, 321, 504, 0, 505, 574, 575, 576, 577, 0,
	512, 0, 506, 507, 578, 508, 579, 0, 509, 510,
	511, 0, 513, 514, 0, 0, 515, 516, 517, 519,
	520, 518, 521, 0, 522, 0, 0, 523, 524, 525,
	580, 581, 582, 0, 527, 526, 583, 0, 0, 0,
	0, 528, 529, 584, 530, 531, 532, 1499, 0, 1298,
	1297, 0, 0, 0, 0, 1295, 0, 0, 0, 0,
	0, 0, 0, 680, 0, 0, 248, 249, 250, 251,
	252, 253, 0, 254, 255, 0, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 256, 257, 259, 258, 260,
	261, 262, 263, 534, 535, 0, 264, 536, 265, 537,
	0, 538, 266, 267, 268, 269, 270, 0, 0, 0,
	271, 539, 540, 541, 0, 272, 273, 542, 0, 1264,
	0, 274, 275, 276, 277, 278, 279, 280, 0, 0,
	282, 283, 284, 281, 0, 285, 0, 286, 287, 288,
	289, 0, 290, 1056, 291, 292, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 295, 296, 0, 297, 543,
	544, 0, 301, 298, 299, 0, 302, 300, 0, 303,
	304, 305, 0, 0, 306, 307, 308, 0, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 545, 316, 317,
	318, 320, 322, 319, 323, 324, 325, 326, 546, 547,
	0, 245, 0, 0, 0, 0, 0, 1498, 328, 329,
	548, 0, 0, 0, 330, 0, 331, 0, 0, 1057,
	332, 333, 549, 550, 334, 335, 0, 336, 551, 0,
	552, 337, 0, 338, 339, 340, 341, 342, 553, 554,
	555, 400, 1059, 343, 344, 0, 345, 346, 347, 348,
	0, 0, 0, 0, 349, 350, 352, 0, 1058, 351,
	556, 557, 0, 558, 0, 353, 354, 1060, 559, 1061,
	355, 356, 357, 1062, 358, 0, 0, 0, 359, 360,
	361, 362, 363, 364, 0, 365, 367, 366, 0, 368,
	560, 1063, 369, 370, 1064, 0, 371, 372, 373, 0,
	0, 374, 375, 376, 377, 0, 378, 379, 381, 383,
	380, 382, 387, 384, 385, 386, 389, 0, 388, 1065,
	390, 391, 392, 396, 395, 397, 394, 1066, 393, 0,
	0, 1067, 398, 0, 561, 399, 562, 401, 402, 0,
	0, 403, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 409, 563, 1068, 410, 1069, 564, 411, 412, 404,
	413, 414, 415, 416, 417, 418, 419, 420, 0, 421,
	422, 565, 566, 567, 423, 568, 424, 425, 0, 426,
	0, 427, 428, 429, 430, 431, 1497, 433, 569, 435,
	434, 436, 0, 437, 0, 0, 0, 0, 0, 438,
	0, 440, 441, 442, 439, 443, 444, 445, 446, 0,
	447, 448, 449, 1070, 450, 451, 452, 453, 570, 454,
	0, 455, 456, 462, 463, 457, 458, 464, 1496, 466,
	467, 468, 0, 470, 471, 469, 472, 473, 474, 0,
	475, 459, 460, 476, 477, 1071, 478, 479, 480, 481,
	482, 483, 571, 0, 484, 0, 485, 486, 487, 488,
	461, 489, 494, 572, 490, 491, 492, 493, 573, 0,
	496, 497, 0, 495, 0, 498, 499, 500, 501, 502,
	503, 321, 504, 0, 505, 574, 575, 576, 577, 0,
	512, 0, 506, 507, 578, 508, 579, 0, 509, 510,
	511, 0, 513, 514, 0, 0, 515, 516, 517, 519,
	520, 518, 521, 0, 522, 0, 0, 523, 524, 525,
	580, 581, 582, 0, 527, 526, 583, 0, 0, 0,
	0, 528, 529, 584, 530, 531, 532, 1439, 0, 1298,
	1297, 0, 0, 0, 0, 1295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 249, 250, 251,
	252, 253, 0, 254, 255, 0, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 256, 257, 259, 258, 260,
	261, 262, 263, 534, 535, 0, 264, 536, 265, 537,
	0, 538, 266, 267, 268, 269, 270, 0, 0, 0,
	271, 539, 540, 541, 0, 272, 273, 542, 0, 1264,
	0, 274, 275, 276, 277, 278, 279, 280, 0, 0,
	282, 283, 284, 281, 0, 285, 0, 286, 287, 288,
	289, 0, 290, 1056, 291, 292, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 295, 296, 0, 297, 543,
	544, 0, 301, 298, 299, 0, 302, 300, 0, 303,
	304, 305, 0, 0, 306, 307, 308, 0, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 545, 316, 317,
	318, 320, 322, 319, 323, 324, 325, 326, 546, 547,
	0, 245, 0, 0, 0, 0, 0, 327, 328, 329,
	548, 0, 0, 0, 330, 0, 331, 0, 0, 1057,
	332, 333, 549, 550, 334, 335, 0, 336, 551, 0,
	552, 337, 0, 338, 339, 340, 341, 342, 1438, 554,
	555, 400, 1059, 343, 344, 0, 345, 346, 347, 348,
	0, 0, 0, 0, 349, 350, 352, 0, 1058, 351,
	556, 557, 0, 558, 0, 353, 354, 1060, 559, 1061,
	355, 356, 357, 1062, 358, 0, 0, 0, 359, 360,
	361, 362, 363, 364, 0, 365, 367, 366, 0, 368,
	560, 1063, 369, 370, 1064, 0, 371, 372, 373, 0,
	0, 374, 375, 376, 377, 0, 378, 379, 381, 383,
	380, 382, 387, 384, 385, 386, 389, 0, 388, 1065,
	390, 391, 392, 396, 395, 397, 394, 1066, 393, 0,
	0, 1067, 398, 0, 561, 399, 562, 401, 402, 0,
	0, 403, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 409, 563, 1068, 410, 1069, 564, 411, 412, 404,
	413, 414, 415, 416, 417, 418, 419, 420, 0, 421,
	422, 565, 566, 567, 423, 568, 424, 425, 0, 426,
	0, 427, 428, 429, 430, 431, 432, 433, 569, 435,
	434, 436, 0, 437, 0, 0, 0, 0, 0, 438,
	0, 440, 441, 442, 439, 443, 444, 445, 446, 0,
	447, 448, 449, 1070, 450, 451, 452, 453, 570, 454,
	0, 455, 456, 462, 463, 457, 458, 464, 465, 466,
	467, 468, 0, 470, 471, 469, 472, 473, 474, 0,
	475, 459, 460, 476, 477, 1071, 478, 479, 480, 481,
	482, 483, 571, 0, 484, 0, 485, 486, 487, 488,
	461, 489, 494, 572, 490, 491, 492, 493, 573, 0,
	496, 497, 0, 495, 0, 498, 499, 500, 501, 502,
	503, 321, 504, 0, 505, 574, 575, 576, 577, 0,
	512, 0, 506, 507, 578, 508, 579, 0, 509, 510,
	511, 0, 513, 514, 0, 0, 515, 516, 517, 519,
	520, 518, 521, 0, 522, 0, 0, 523, 524, 525,
	580, 581, 582, 0, 527, 526, 583, 0, 0, 0,
	0, 528, 529, 584, 530, 531, 532, 1368, 0, 1298,
	1297, 0, 0, 0, 0, 1295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 249, 250, 251,
	252, 253, 0, 254, 255, 0, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 256, 257, 259, 258, 260,
	261, 262, 263, 534, 535, 0, 264, 536, 265, 537,
	0, 538, 266, 267, 268, 269, 270, 0, 0, 0,
	271, 539, 540, 541, 0, 272, 273, 542, 0, 1264,
	0, 274, 275, 276, 277, 278, 279, 280, 0, 0,
	282, 283, 284, 281, 0, 285, 0, 286, 287, 288,
	289, 0, 290, 1056, 291, 292, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 295, 296, 0, 297, 543,
	544, 0, 301, 298, 299, 0, 302, 300, 0, 303,
	304, 305, 0, 0, 306, 307, 308, 0, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 545, 316, 317,
	318, 320, 322, 319, 323, 324, 325, 326, 546, 547,
	0, 245, 0, 0, 0, 0, 0, 327, 328, 329,
	548, 0, 0, 0, 330, 0, 331, 0, 0, 1057,
	332, 333, 549, 550, 334, 335, 0, 336, 551, 0,
	552, 337, 0, 338, 339, 340, 341, 342, 1367, 554,
	555, 400, 1059, 343, 344, 0, 345, 346, 347, 348,
	0, 0, 0, 0, 349, 350, 352, 0, 1058, 351,
	556, 557, 0, 558, 0, 353, 354, 1060, 559, 1061,
	355, 356, 357, 1062, 358, 0, 0, 0, 359, 360,
	361, 362, 363, 364, 0, 365, 367, 366, 0, 368,
	560, 1063, 369, 370, 1064, 0, 371, 372, 373, 0,
	0, 374, 375, 376, 377, 0, 378, 379, 381, 383,
	380, 382, 387, 384, 385, 386, 389, 0, 388, 1065,
	390, 391, 392, 396, 395, 397, 394, 1066, 393, 0,
	0, 1067, 398, 0, 561, 399, 562, 401, 402, 0,
	0, 403, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 409, 563, 1068, 410, 1069, 564, 411, 412, 404,
	413, 414, 415, 416, 417, 418, 419, 420, 0, 421,
	422, 565, 566, 567, 423, 568, 424, 425, 0, 426,
	0, 427, 428, 429, 430, 431, 432, 433, 569, 435,
	434, 436, 0, 437, 0, 0, 0, 0, 0, 438,
	0, 440, 441, 442, 439, 443, 444, 445, 446, 0,
	447, 448, 449, 1070, 450, 451, 452, 453, 570, 454,
	0, 455, 456, 462, 463, 457, 458, 464, 465, 466,
	467, 468, 0, 470, 471, 469, 472, 473, 474, 0,
	475, 459, 460, 476, 477, 1071, 478, 479, 480, 481,
	482, 483, 571, 0, 484, 0, 485, 486, 487, 488,
	461, 489, 494, 572, 490, 491, 492, 493, 573, 0,
	496, 497, 0, 495, 0, 498, 499, 500, 501, 502,
	503, 321, 504, 0, 505, 574, 575, 576, 577, 0,
	512, 0, 506, 507, 578, 508, 579, 0, 509, 510,
	511, 0, 513, 514, 0, 0, 515, 516, 517, 519,
	520, 518, 521, 0, 522, 0, 0, 523, 524, 525,
	580, 581, 582, 0, 527, 526, 583, 0, 0, 0,
	0, 528, 529, 584, 530, 531, 532, 1333, 0, 1298,
	1297, 0, 0, 0, 0, 1295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 249, 250, 251,
	252, 253, 0, 254, 255, 0, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 256, 257, 259, 258, 260,
	261, 262, 263, 534, 535, 0, 264, 536, 265, 537,
	0, 538, 266, 267, 268, 269, 270, 0, 0, 0,
	271, 539, 540, 541, 0, 272, 273, 542, 0, 1264,
	0, 274, 275, 276, 277, 278, 279, 280, 0, 0,
	282, 283, 284, 281, 0, 285, 0, 286, 287, 288,
	289, 0, 290, 1056, 291, 292, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 295, 296, 0, 297, 543,
	544, 0, 301, 298, 299, 0, 302, 300, 0, 303,
	304, 305, 0, 0, 306, 307, 308, 0, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 545, 316, 317,
	318, 320, 322, 319, 323, 324, 325, 326, 546, 547,
	0, 245, 0, 0, 0, 0, 0, 327, 328, 329,
	548, 0, 0, 0, 330, 0, 331, 0, 0, 1057,
	332, 333, 549, 550, 334, 335, 0, 336, 551, 0,
	552, 337, 0, 338, 339, 340, 341, 342, 553, 554,
	555, 400, 1059, 343, 344, 0, 345, 346, 347, 348,
	0, 0, 0, 0, 349, 350, 352, 0, 1058, 351,
	556, 557, 0, 558, 0, 353, 354, 1060, 559, 1061,
	355, 356, 357, 1062, 358, 0, 0, 0, 359, 360,
	361, 362, 363, 364, 0, 365, 367, 366, 0, 368,
	560, 1063, 369, 370, 1064, 0, 371, 372, 373, 0,
	0, 374, 375, 376, 377, 0, 378, 379, 381, 383,
	380, 382, 387, 384, 385, 386, 389, 0, 388, 1065,
	390, 391, 392, 396, 395, 397, 394, 1066, 393, 0,
	0, 1067, 398, 0, 561, 399, 562, 401, 402, 0,
	0, 403, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 409, 563, 1068, 410, 1069, 564, 411, 412, 404,
	413, 414, 415, 416, 417, 418, 419, 420, 0, 421,
	422, 565, 566, 567, 423, 568, 424, 425, 0, 426,
	0, 427, 428, 429, 430, 431, 432, 433, 569, 435,
	434, 436, 0, 437, 0, 0, 0, 0, 0, 438,
	0, 440, 441, 442, 439, 443, 444, 445, 446, 0,
	447, 448, 449, 1070, 450, 451, 452, 453, 570, 454,
	0, 455, 456, 462, 463, 457, 458, 464, 465, 466,
	467, 468, 0, 470, 471, 469, 472, 473, 474, 0,
	475, 459, 460, 476, 477, 1071, 478, 479, 480, 481,
	482, 483, 571, 0, 484, 0, 485, 486, 487, 488,
	461, 489, 494, 572, 490, 491, 492, 493, 573, 0,
	496, 497, 0, 495, 0, 498, 499, 500, 501, 502,
	503, 321, 504, 0, 505, 574, 575, 576, 577, 0,
	512, 0, 506, 507, 578, 508, 579, 0, 509, 510,
	511, 0, 513, 514, 0, 0, 515, 516, 517, 519,
	520, 518, 521, 0, 522, 0, 0, 523, 524, 525,
	580, 581, 582, 0, 527, 526, 583, 0, 0, 0,
	0, 528, 529, 584, 530, 531, 532, 1293, 0, 1298,
	1297, 0, 0, 0, 0, 1295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 249, 250, 251,
	252, 253, 0, 254, 255, 0, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 256, 257, 259, 258, 260,
	261, 262, 263, 534, 535, 0, 264, 536, 265, 537,
	0, 538, 266, 267, 268, 269, 270, 0, 0, 0,
	271, 539, 540, 541, 0, 272, 273, 542, 0, 1264,
	0, 274, 275, 276, 277, 278, 279, 280, 0, 0,
	282, 283, 284, 281, 0, 285, 0, 286, 287, 288,
	289, 0, 290, 1056, 291, 292, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 295, 296, 0, 297, 543,
	544, 0, 301, 298, 299, 0, 302, 300, 0, 303,
	304, 305, 0, 0, 306, 307, 308, 0, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 545, 316, 317,
	318, 320, 322, 319, 323, 324, 325, 326, 546, 547,
	0, 245, 0, 0, 0, 0, 0, 327, 328, 329,
	548, 0, 0, 0, 330, 0, 331, 0, 0, 1057,
	332, 333, 549, 550, 334, 335, 0, 336, 551, 0,
	552, 337, 0, 338, 339, 340, 341, 342, 1292, 554,
	555, 400, 1059, 343, 344, 0, 345, 346, 347, 348,
	0, 0, 0, 0, 349, 350, 352, 0, 1058, 351,
	556, 557, 0, 558, 0, 353, 354, 1060, 559, 1061,
	355, 356, 357, 1062, 358, 0, 0, 0, 359, 360,
	361, 362, 363, 364, 0, 365, 367, 366, 0, 368,
	560, 1063, 369, 370, 1064, 0, 371, 372, 373, 0,
	0, 374, 375, 376, 377, 0, 378, 379, 381, 383,
	380, 382, 387, 384, 385, 386, 389, 0, 388, 1065,
	390, 391, 392, 396, 395, 397, 394, 1066, 393, 0,
	0, 1067, 398, 0, 561, 399, 562, 401, 402, 0,
	0, 403, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 409, 563, 1068, 410, 1069, 564, 411, 412, 404,
	413, 414, 415, 416, 417, 418, 419, 420, 0, 421,
	422, 565, 566, 567, 423, 568, 424, 425, 0, 426,
	0, 427, 428, 429, 430, 431, 432, 433, 569, 435,
	434, 436, 0, 437, 0, 0, 0, 0, 0, 438,
	0, 440, 441, 442, 439, 443, 444, 445, 446, 0,
	447, 448, 449, 1070, 450, 451, 452, 453, 570, 454,
	0, 455, 456, 462, 463, 457, 458, 464, 465, 466,
	467, 468, 0, 470, 471, 469, 472, 473, 474, 0,
	475, 459, 460, 476, 477, 1071, 478, 479, 480, 481,
	482, 483, 571, 0, 484, 0, 485, 486, 487, 488,
	461, 489, 494, 572, 490, 491, 492, 493, 573, 0,
	496, 497, 0, 495, 0, 498, 499, 500, 501, 502,
	503, 321, 504, 0, 505, 574, 575, 576, 577, 0,
	512, 0, 506, 507, 578, 508, 579, 0, 509, 510,
	511, 0, 513, 514, 0, 0, 515, 516, 517, 519,
	520, 518, 521, 0, 522, 0, 0, 523, 524, 525,
	580, 581, 582, 0, 527, 526, 583, 0, 0, 0,
	0, 528, 529, 584, 530, 531, 532, 1298, 1297, 0,
	0, 0, 0, 1295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 249, 250, 251, 252, 253,
	0, 254, 255, 0, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 256, 257, 259, 258, 260, 261, 262,
	263, 534, 535, 0, 264, 536, 265, 537, 0, 538,
	266, 267, 268, 269, 270, 0, 0, 0, 271, 539,
	540, 541, 0, 272, 273, 542, 0, 1264, 0, 274,
	275, 276, 277, 278, 279, 280, 0, 0, 282, 283,
	284, 281, 0, 285, 0, 286, 287, 288, 289, 0,
	290, 1056, 291, 292, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 295, 296, 0, 297, 543, 544, 0,
	301, 298, 299, 0, 302, 300, 0, 303, 304, 305,
	0, 0, 306, 307, 308, 0, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 545, 316, 317, 318, 320,
	322, 319, 323, 324, 325, 326, 546, 547, 0, 245,
	0, 0, 0, 0, 0, 327, 328, 329, 548, 0,
	0, 0, 330, 0, 331, 0, 0, 1057, 332, 333,
	549, 550, 334, 335, 0, 336, 551, 0, 552, 337,
	0, 338, 339, 340, 341, 342, 553, 554, 555, 400,
	1059, 343, 344, 0, 345, 346, 347, 348, 0, 0,
	0, 0, 349, 350, 352, 0, 1058, 351, 556, 557,
	0, 558, 0, 353, 354, 1060, 559, 1061, 355, 356,
	357, 1062, 358, 0, 0, 0, 359, 360, 361, 362,
	363, 364, 0, 365, 367, 366, 0, 368, 560, 1063,
	369, 370, 1064, 0, 371, 372, 373, 0, 0, 374,
	375, 376, 377, 0, 378, 379, 381, 383, 380, 382,
	387, 384, 385, 386, 389, 0, 388, 1065, 390, 391,
	392, 396, 395, 397, 394, 1066, 393, 0, 0, 1067,
	398, 0, 561, 399, 562, 401, 402, 0, 0, 403,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 409,
	563, 1068, 410, 1069, 564, 411, 412, 404, 413, 414,
	415, 416, 417, 418, 419, 420, 0, 421, 422, 565,
	566, 567, 423, 568, 424, 425, 0, 426, 0, 427,
	428, 429, 430, 431, 432, 433, 569, 435, 434, 436,
	0, 437, 0, 0, 0, 0, 0, 438, 0, 440,
	441, 442, 439, 443, 444, 445, 446, 0, 447, 448,
	449, 1070, 450, 451, 452, 453, 570, 454, 0, 455,
	456, 462, 463, 457, 458, 464, 465, 466, 467, 468,
	0, 470, 471, 469, 472, 473, 474, 0, 475, 459,
	460, 476, 477, 1071, 478, 479, 480, 481, 482, 483,
	571, 0, 484, 0, 485, 486, 487, 488, 461, 489,
	494, 572, 490, 491, 492, 493, 573, 0, 496, 497,
	0, 495, 0, 498, 499, 500, 501, 502, 503, 321,
	504, 0, 505, 574, 575, 576, 577, 0, 512, 0,
	506, 507, 578, 508, 579, 0, 509, 510, 511, 0,
	513, 514, 0, 0, 515, 516, 517, 519, 520, 518,
	521, 0, 522, 0, 0, 523, 524, 525, 580, 581,
	582, 0, 527, 526, 583, 1298, 1297, 0, 0, 528,
	529, 584, 530, 531, 532, 0, 0, 0, 0, 0,
	0, 0, 248, 249, 250, 251, 252, 253, 0, 254,
	255, 0, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 256, 257, 259, 258, 260, 261, 262, 263, 534,
	535, 0, 264, 536, 265, 537, 0, 538, 266, 267,
	268, 269, 270, 0, 0, 0, 271, 539, 540, 541,
	0, 272, 273, 542, 0, 1264, 0, 274, 275, 276,
	277, 278, 279, 280, 0, 0, 282, 283, 284, 281,
	0, 285, 0, 286, 287, 288, 289, 0, 290, 1056,
	291, 292, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 295, 296, 0, 297, 543, 544, 1860, 301, 298,
	299, 0, 302, 300, 0, 303, 304, 305, 0, 0,
	306, 307, 308, 0, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 545, 316, 317, 318, 320, 322, 319,
	323, 324, 325, 326, 546, 547, 0, 245, 0, 0,
	0, 0, 0, 327, 328, 329, 548, 0, 0, 0,
	330, 0, 331, 0, 0, 1057, 332, 333, 549, 550,
	334, 335, 0, 336, 551, 0, 552, 337, 0, 338,
	339, 340, 341, 342, 553, 554, 555, 400, 1059, 343,
	344, 0, 345, 346, 347, 348, 0, 0, 0, 0,
	349, 350, 352, 0, 1058, 351, 556, 557, 0, 558,
	0, 353, 354, 1060, 559, 1061, 355, 356, 357, 1062,
	358, 0, 0, 0, 359, 360, 361, 362, 363, 364,
	0, 365, 367, 366, 0, 368, 560, 1063, 369, 370,
	1064, 0, 371, 372, 373, 0, 0, 374, 375, 376,
	377, 0, 378, 379, 381, 383, 380, 382, 387, 384,
	385, 386, 389, 0, 388, 1065, 390, 391, 392, 396,
	395, 397, 394, 1066, 393, 0, 0, 1067, 398, 0,
	561, 399, 562, 401, 402, 0, 0, 403, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 409, 563, 1068,
	410, 1069, 564, 411, 412, 404, 413, 414, 415, 416,
	417, 418, 419, 420, 0, 421, 422, 565, 566, 567,
	423, 568, 424, 425, 0, 426, 0, 427, 428, 429,
	430, 431, 432, 433, 569, 435, 434, 436, 0, 437,
	0, 0, 0, 0, 0, 438, 0, 440, 441, 442,
	439, 443, 444, 445, 446, 0, 447, 448, 449, 1070,
	450, 451, 452, 453, 570, 454, 0, 455, 456, 462,
	463, 457, 458, 464, 465, 466, 467, 468, 0, 470,
	471, 469, 472, 473, 474, 0, 475, 459, 460, 476,
	477, 1071, 478, 479, 480, 481, 482, 483, 571, 0,
	484, 0, 485, 486, 487, 488, 461, 489, 494, 572,
	490, 491, 492, 493, 573, 0, 496, 497, 0, 495,
	0, 498, 499, 500, 501, 502, 503, 321, 504, 0,
	505, 574, 575, 576, 577, 0, 512, 0, 506, 507,
	578, 508, 579, 0, 509, 510, 511, 0, 513, 514,
	0, 0, 515, 516, 517, 519, 520, 518, 521, 0,
	522, 0, 0, 523, 524, 525, 580, 581, 582, 0,
	527, 526, 583, 1298, 1297, 0, 0, 528, 529, 584,
	530, 531, 532, 0, 0, 0, 0, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 541, 0, 272,
	273, 542, 0, 1264, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 1056, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 245, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 1057, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 553, 554, 555, 400, 1059, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 0, 349, 350,
	352, 0, 1058, 351, 556, 557, 0, 558, 0, 353,
	354, 1060, 559, 1061, 355, 356, 357, 1062, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 1063, 369, 370, 1064, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 388, 1065, 390, 391, 392, 396, 395, 397,
	394, 1066, 393, 0, 0, 1067, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 1068, 410, 1069,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 1070, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 462, 463, 457,
	458, 464, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 473, 474, 0, 475, 459, 460, 476, 477, 1071,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 0, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 574,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 1298, 527, 526,
	583, 0, 0, 0, 0, 528, 529, 584, 530, 531,
	532, 0, 0, 0, 248, 249, 250, 251, 252, 253,
	0, 254, 255, 0, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 256, 257, 259, 258, 260, 261, 262,
	263, 534, 535, 0, 264, 536, 265, 537, 0, 538,
	266, 267, 268, 269, 270, 0, 0, 0, 271, 539,
	540, 541, 0, 272, 273, 542, 0, 1264, 0, 274,
	275, 276, 277, 278, 279, 280, 0, 0, 282, 283,
	284, 281, 0, 285, 0, 286, 287, 288, 289, 0,
	290, 1056, 291, 292, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 295, 296, 0, 297, 543, 544, 0,
	301, 298, 299, 0, 302, 300, 0, 303, 304, 305,
	0, 0, 306, 307, 308, 0, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 545, 316, 317, 318, 320,
	322, 319, 323, 324, 325, 326, 546, 547, 0, 245,
	0, 0, 0, 0, 0, 327, 328, 329, 548, 0,
	0, 0, 330, 0, 331, 0, 0, 1057, 332, 333,
	549, 550, 334, 335, 0, 336, 551, 0, 552, 337,
	0, 338, 339, 340, 341, 342, 553, 554, 555, 400,
	1059, 343, 344, 0, 345, 346, 347, 348, 0, 0,
	0, 0, 349, 350, 352, 0, 1058, 351, 556, 557,
	0, 558, 0, 353, 354, 1060, 559, 1061, 355, 356,
	357, 1062, 358, 0, 0, 0, 359, 360, 361, 362,
	363, 364, 0, 365, 367, 366, 0, 368, 560, 1063,
	369, 370, 1064, 0, 371, 372, 373, 0, 0, 374,
	375, 376, 377, 0, 378, 379, 381, 383, 380, 382,
	387, 384, 385, 386, 389, 0, 388, 1065, 390, 391,
	392, 396, 395, 397, 394, 1066, 393, 0, 0, 1067,
	398, 0, 561, 399, 562, 401, 402, 0, 0, 403,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 409,
	563, 1068, 410, 1069, 564, 411, 412, 404, 413, 414,
	415, 416, 417, 418, 419, 420, 0, 421, 422, 565,
	566, 567, 423, 568, 424, 425, 0, 426, 0, 427,
	428, 429, 430, 431, 432, 433, 569, 435, 434, 436,
	0, 437, 0, 0, 0, 0, 0, 438, 0, 440,
	441, 442, 439, 443, 444, 445, 446, 0, 447, 448,
	449, 1070, 450, 451, 452, 453, 570, 454, 0, 455,
	456, 462, 463, 457, 458, 464, 465, 466, 467, 468,
	0, 470, 471, 469, 472, 473, 474, 0, 475, 459,
	460, 476, 477, 1071, 478, 479, 480, 481, 482, 483,
	571, 0, 484, 0, 485, 486, 487, 488, 461, 489,
	494, 572, 490, 491, 492, 493, 573, 0, 496, 497,
	0, 495, 0, 498, 499, 500, 501, 502, 503, 321,
	504, 0, 505, 574, 575, 576, 577, 0, 512, 0,
	506, 507, 578, 508, 579, 0, 509, 510, 511, 0,
	513, 514, 0, 0, 515, 516, 517, 519, 520, 518,
	521, 0, 522, 0, 0, 523, 524, 525, 580, 581,
	582, 242, 527, 526, 583, 0, 0, 0, 0, 528,
	529, 584, 530, 531, 532, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 0, 254, 255, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 534, 535, 0, 264, 536,
	265, 537, 0, 538, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 539, 540, 541, 2503, 272, 273, 542,
	0, 0, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 2500, 285, 0, 286,
	287, 288, 289, 0, 290, 0, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 295, 296, 0,
	297, 543, 544, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 307, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 2507, 315, 545,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	546, 547, 0, 2694, 0, 0, 0, 0, 0, 327,
	328, 329, 548, 0, 0, 0, 330, 0, 331, 2506,
	0, 0, 332, 333, 549, 550, 334, 335, 0, 336,
	551, 0, 552, 337, 0, 338, 339, 340, 341, 342,
	553, 554, 555, 400, 0, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 2691, 349, 350, 352, 0,
	0, 351, 556, 557, 0, 558, 0, 353, 2693, 0,
	559, 0, 355, 356, 357, 0, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 560, 0, 369, 370, 2690, 0, 371, 372,
	373, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	388, 0, 390, 391, 392, 396, 395, 397, 394, 0,
	393, 0, 0, 0, 398, 0, 561, 399, 562, 401,
	402, 0, 0, 403, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 409, 563, 0, 410, 0, 564, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 565, 566, 567, 423, 568, 424, 425,
	2505, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 0, 450, 451, 452, 453,
	570, 454, 0, 455, 456, 462, 463, 457, 458, 464,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 473,
	474, 0, 475, 459, 460, 476, 477, 0, 478, 479,
	480, 481, 482, 483, 571, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 572, 490, 491, 492, 493,
	573, 0, 496, 497, 0, 495, 0, 498, 499, 500,
	501, 502, 503, 321, 504, 0, 505, 574, 575, 576,
	577, 0, 512, 0, 506, 507, 578, 508, 579, 0,
	509, 510, 511, 0, 513, 514, 0, 2692, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 580, 581, 582, 242, 527, 526, 583, 0,
	0, 0, 0, 528, 529, 584, 530, 531, 532, 0,
	0, 0, 248, 249, 250, 251, 252, 253, 0, 254,
	255, 0, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 256, 257, 259, 258, 260, 261, 262, 263, 534,
	535, 0, 264, 536, 265, 537, 0, 538, 266, 267,
	268, 269, 270, 0, 0, 0, 271, 539, 540, 541,
	2503, 272, 273, 542, 0, 0, 2497, 274, 275, 276,
	277, 278, 279, 280, 0, 0, 282, 283, 284, 281,
	2500, 285, 0, 286, 287, 288, 289, 0, 290, 0,
	291, 292, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 295, 296, 0, 297, 543, 544, 0, 301, 298,
	299, 0, 302, 300, 0, 303, 304, 305, 0, 0,
	306, 307, 308, 0, 309, 310, 0, 311, 312, 313,
	0, 2507, 315, 545, 316, 317, 318, 320, 322, 319,
	323, 324, 325, 326, 546, 547, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 548, 0, 0, 0,
	330, 0, 331, 2506, 0, 0, 332, 333, 549, 550,
	334, 335, 0, 336, 551, 0, 552, 337, 0, 338,
	339, 340, 341, 342, 2496, 554, 555, 400, 0, 343,
	344, 0, 345, 346, 347, 348, 0, 0, 0, 0,
	349, 350, 352, 0, 0, 351, 556, 557, 0, 558,
	0, 353, 354, 0, 559, 0, 355, 356, 357, 0,
	358, 0, 0, 0, 359, 360, 361, 362, 363, 364,
	0, 365, 367, 366, 0, 368, 560, 0, 369, 370,
	0, 0, 371, 372, 373, 0, 0, 374, 375, 376,
	377, 0, 378, 379, 381, 383, 380, 382, 387, 384,
	385, 386, 389, 0, 388, 0, 390, 391, 392, 396,
	395, 397, 394, 0, 393, 0, 0, 0, 398, 0,
	561, 399, 562, 401, 402, 0, 0, 403, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 409, 563, 0,
	410, 0, 564, 411, 412, 404, 413, 414, 415, 416,
	417, 418, 419, 420, 0, 421, 422, 565, 566, 567,
	423, 568, 424, 425, 2505, 426, 0, 427, 428, 429,
	430, 431, 432, 433, 569, 435, 434, 436, 0, 437,
	0, 0, 0, 0, 0, 438, 0, 440, 441, 442,
	439, 443, 444, 445, 446, 0, 447, 448, 449, 0,
	450, 451, 452, 453, 570, 454, 0, 455, 456, 462,
	463, 457, 458, 464, 465, 466, 467, 468, 0, 470,
	471, 469, 472, 473, 474, 0, 475, 459, 460, 476,
	477, 0, 478, 479, 480, 481, 482, 483, 571, 0,
	484, 0, 485, 486, 487, 488, 461, 489, 494, 572,
	490, 491, 492, 493, 573, 0, 496, 497, 0, 495,
	0, 498, 499, 500, 501, 502, 503, 321, 504, 0,
	505, 574, 575, 576, 577, 0, 512, 0, 506, 507,
	578, 508, 579, 0, 509, 510, 511, 0, 513, 514,
	0, 2504, 515, 516, 517, 519, 520, 518, 521, 0,
	522, 0, 0, 523, 524, 525, 580, 581, 582, 0,
	527, 526, 583, 1564, 0, 242, 0, 528, 529, 584,
	530, 531, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 249, 250, 251, 252, 253, 0, 254,
	255, 0, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 256, 257, 259, 258, 260, 261, 262, 263, 534,
	535, 0, 264, 536, 265, 537, 0, 538, 266, 267,
	268, 269, 270, 0, 0, 0, 271, 539, 540, 541,
	0, 272, 273, 542, 0, 0, 0, 274, 275, 276,
	277, 278, 279, 280, 0, 0, 282, 283, 284, 281,
	0, 285, 0, 286, 287, 288, 289, 0, 290, 0,
	291, 292, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 295, 296, 0, 297, 543, 544, 0, 301, 298,
	299, 0, 302, 300, 0, 303, 304, 305, 0, 0,
	306, 307, 308, 0, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 545, 316, 317, 318, 320, 322, 319,
	323, 324, 325, 326, 546, 547, 0, 245, 0, 0,
	0, 0, 0, 327, 328, 329, 548, 0, 0, 0,
	330, 0, 331, 0, 0, 0, 332, 333, 549, 550,
	334, 335, 0, 336, 551, 0, 552, 337, 0, 338,
	339, 340, 341, 342, 553, 554, 555, 400, 0, 343,
	344, 0, 345, 346, 347, 348, 0, 0, 0, 246,
	349, 350, 352, 0, 0, 351, 556, 557, 0, 558,
	0, 353, 354, 0, 559, 0, 355, 356, 357, 0,
	358, 0, 0, 0, 359, 360, 361, 362, 363, 364,
	0, 365, 367, 366, 0, 368, 560, 0, 369, 370,
	0, 0, 371, 372, 373, 0, 0, 374, 375, 376,
	377, 0, 378, 379, 381, 383, 380, 382, 387, 384,
	385, 386, 389, 0, 388, 0, 390, 391, 392, 396,
	395, 397, 394, 0, 393, 0, 247, 0, 398, 0,
	561, 399, 562, 401, 402, 0, 0, 403, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 409, 563, 0,
	410, 0, 564, 411, 412, 404, 413, 414, 415, 416,
	417, 418, 419, 420, 0, 421, 422, 565, 566, 567,
	423, 568, 424, 425, 0, 426, 0, 427, 428, 429,
	430, 431, 432, 433, 569, 435, 434, 436, 0, 437,
	0, 0, 0, 0, 0, 438, 0, 440, 441, 442,
	439, 443, 444, 445, 446, 0, 447, 448, 449, 0,
	450, 451, 452, 453, 570, 454, 0, 455, 456, 462,
	463, 457, 458, 464, 465, 466, 467, 468, 0, 1567,
	471, 469, 472, 473, 474, 0, 475, 459, 460, 476,
	477, 0, 478, 479, 480, 481, 482, 483, 571, 0,
	484, 0, 485, 486, 487, 488, 461, 489, 494, 572,
	490, 491, 492, 493, 573, 0, 496, 497, 0, 495,
	1565, 498, 499, 500, 501, 502, 503, 321, 504, 0,
	505, 574, 575, 576, 577, 0, 512, 0, 506, 507,
	578, 508, 579, 0, 509, 510, 511, 0, 513, 514,
	0, 0, 515, 516, 517, 519, 520, 518, 521, 0,
	522, 0, 0, 523, 524, 525, 580, 581, 582, 0,
	1566, 526, 583, 1268, 0, 242, 0, 528, 529, 584,
	530, 531, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 249, 250, 251, 252, 253, 0, 254,
	255, 0, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 256, 257, 259, 258, 260, 261, 262, 263, 534,
	535, 0, 264, 536, 265, 537, 0, 538, 266, 267,
	268, 269, 270, 0, 0, 0, 271, 539, 540, 541,
	0, 272, 273, 542, 0, 0, 0, 274, 275, 276,
	277, 278, 279, 280, 0, 0, 282, 283, 284, 281,
	0, 285, 0, 286, 287, 288, 289, 0, 290, 0,
	291, 292, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 295, 296, 0, 297, 543, 544, 0, 301, 298,
	299, 0, 302, 300, 0, 303, 304, 305, 0, 0,
	306, 307, 308, 0, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 545, 316, 317, 318, 320, 322, 319,
	323, 324, 325, 326, 546, 547, 0, 245, 0, 0,
	0, 0, 0, 327, 328, 329, 548, 0, 0, 0,
	330, 0, 331, 0, 0, 0, 332, 333, 549, 550,
	334, 335, 0, 336, 551, 0, 552, 337, 0, 338,
	339, 340, 341, 342, 1270, 554, 555, 400, 0, 343,
	344, 0, 345, 346, 347, 348, 0, 0, 0, 246,
	349, 350, 352, 0, 0, 351, 556, 557, 0, 558,
	0, 353, 354, 0, 559, 0, 355, 356, 357, 0,
	358, 0, 0, 0, 359, 360, 361, 362, 363, 364,
	0, 365, 367, 366, 0, 368, 560, 0, 369, 370,
	0, 0, 371, 372, 373, 0, 0, 374, 375, 376,
	377, 0, 378, 379, 381, 383, 380, 382, 387, 384,
	385, 386, 389, 0, 388, 0, 390, 391, 392, 396,
	395, 397, 394, 0, 393, 0, 247, 0, 398, 0,
	561, 399, 562, 401, 402, 0, 0, 403, 0, 0,
	1105, 405, 406, 407, 0, 0, 408, 409, 563, 0,
	410, 0, 564, 411, 412, 404, 413, 414, 415, 416,
	417, 418, 419, 420, 0, 421, 422, 565, 566, 567,
	423, 568, 424, 425, 0, 426, 0, 427, 428, 429,
	430, 431, 432, 433, 569, 435, 434, 436, 0, 437,
	0, 0, 0, 0, 0, 438, 0, 440, 441, 442,
	439, 443, 444, 445, 446, 0, 447, 448, 449, 0,
	450, 451, 452, 453, 570, 454, 0, 455, 456, 462,
	463, 457, 458, 464, 465, 466, 467, 468, 0, 470,
	471, 469, 472, 473, 474, 0, 475, 459, 460, 476,
	477, 0, 478, 479, 480, 481, 482, 483, 571, 0,
	484, 0, 485, 486, 487, 488, 461, 489, 494, 572,
	490, 491, 492, 493, 573, 0, 496, 497, 0, 495,
	0, 498, 499, 500, 501, 502, 503, 321, 504, 0,
	505, 574, 575, 576, 577, 0, 512, 0, 506, 507,
	578, 508, 579, 0, 509, 510, 511, 0, 513, 514,
	0, 0, 515, 516, 517, 519, 520, 518, 521, 0,
	522, 0, 0, 523, 524, 525, 580, 581, 582, 0,
	527, 526, 583, 1265, 0, 242, 0, 528, 529, 584,
	530, 531, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 249, 250, 251, 252, 253, 0, 254,
	255, 0, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 256, 257, 259, 258, 260, 261, 262, 263, 534,
	535, 0, 264, 536, 265, 537, 0, 538, 266, 267,
	268, 269, 270, 0, 0, 0, 271, 539, 540, 541,
	0, 272, 273, 542, 0, 0, 0, 274, 275, 276,
	277, 278, 279, 280, 0, 0, 282, 283, 284, 281,
	0, 285, 0, 286, 287, 288, 289, 0, 290, 0,
	291, 292, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 295, 296, 0, 297, 543, 544, 0, 301, 298,
	299, 0, 302, 300, 0, 303, 304, 305, 0, 0,
	306, 307, 308, 0, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 545, 316, 317, 318, 320, 322, 319,
	323, 324, 325, 326, 546, 547, 0, 245, 0, 0,
	0, 0, 0, 327, 328, 329, 548, 0, 0, 0,
	330, 0, 331, 0, 0, 0, 332, 333, 549, 550,
	334, 335, 0, 336, 551, 0, 552, 337, 0, 338,
	339, 340, 341, 342, 1267, 554, 555, 400, 0, 343,
	344, 0, 345, 346, 347, 348, 0, 0, 0, 246,
	349, 350, 352, 0, 0, 351, 556, 557, 0, 558,
	0, 353, 354, 0, 559, 0, 355, 356, 357, 0,
	358, 0, 0, 0, 359, 360, 361, 362, 363, 364,
	0, 365, 367, 366, 0, 368, 560, 0, 369, 370,
	0, 0, 371, 372, 373, 0, 0, 374, 375, 376,
	377, 0, 378, 379, 381, 383, 380, 382, 387, 384,
	385, 386, 389, 0, 388, 0, 390, 391, 392, 396,
	395, 397, 394, 0, 393, 0, 247, 0, 398, 0,
	561, 399, 562, 401, 402, 0, 0, 403, 0, 0,
	1105, 405, 406, 407, 0, 0, 408, 409, 563, 0,
	410, 0, 564, 411, 412, 404, 413, 414, 415, 416,
	417, 418, 419, 420, 0, 421, 422, 565, 566, 567,
	423, 568, 424, 425, 0, 426, 0, 427, 428, 429,
	430, 431, 432, 433, 569, 435, 434, 436, 0, 437,
	0, 0, 0, 0, 0, 438, 0, 440, 441, 442,
	439, 443, 444, 445, 446, 0, 447, 448, 449, 0,
	450, 451, 452, 453, 570, 454, 0, 455, 456, 462,
	463, 457, 458, 464, 465, 466, 467, 468, 0, 470,
	471, 469, 472, 473, 474, 0, 475, 459, 460, 476,
	477, 0, 478, 479, 480, 481, 482, 483, 571, 0,
	484, 0, 485, 486, 487, 488, 461, 489, 494, 572,
	490, 491, 492, 493, 573, 0, 496, 497, 0, 495,
	0, 498, 499, 500, 501, 502, 503, 321, 504, 0,
	505, 574, 575, 576, 577, 0, 512, 0, 506, 507,
	578, 508, 579, 0, 509, 510, 511, 0, 513, 514,
	0, 0, 515, 516, 517, 519, 520, 518, 521, 0,
	522, 0, 0, 523, 524, 525, 580, 581, 582, 0,
	527, 526, 583, 1171, 0, 242, 0, 528, 529, 584,
	530, 531, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 249, 250, 251, 252, 253, 0, 254,
	255, 0, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 256, 257, 259, 258, 260, 261, 262, 263, 534,
	535, 0, 264, 536, 265, 537, 0, 538, 266, 267,
	268, 269, 270, 0, 0, 0, 271, 539, 540, 541,
	0, 272, 273, 542, 0, 0, 0, 274, 275, 276,
	277, 278, 279, 280, 0, 0, 282, 283, 284, 281,
	0, 285, 0, 286, 287, 288, 289, 0, 290, 0,
	291, 292, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 295, 296, 0, 297, 543, 544, 0, 301, 298,
	299, 0, 302, 300, 0, 303, 304, 305, 0, 0,
	306, 307, 308, 0, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 545, 316, 317, 318, 320, 322, 319,
	323, 324, 325, 326, 546, 547, 0, 245, 0, 0,
	0, 0, 0, 327, 328, 329, 548, 0, 0, 0,
	330, 0, 331, 0, 0, 0, 332, 333, 549, 550,
	334, 335, 0, 336, 551, 0, 552, 337, 0, 338,
	339, 340, 341, 342, 1173, 554, 555, 400, 0, 343,
	344, 0, 345, 346, 347, 348, 0, 0, 0, 246,
	349, 350, 352, 0, 0, 351, 556, 557, 0, 558,
	0, 353, 354, 0, 559, 0, 355, 356, 357, 0,
	358, 0, 0, 0, 359, 360, 361, 362, 363, 364,
	0, 365, 367, 366, 0, 368, 560, 0, 369, 370,
	0, 0, 371, 372, 373, 0, 0, 374, 375, 376,
	377, 0, 378, 379, 381, 383, 380, 382, 387, 384,
	385, 386, 389, 0, 388, 0, 390, 391, 392, 396,
	395, 397, 394, 0, 393, 0, 247, 0, 398, 0,
	561, 399, 562, 401, 402, 0, 0, 403, 0, 0,
	1105, 405, 406, 407, 0, 0, 408, 409, 563, 0,
	410, 0, 564, 411, 412, 404, 413, 414, 415, 416,
	417, 418, 419, 420, 0, 421, 422, 565, 566, 567,
	423, 568, 424, 425, 0, 426, 0, 427, 428, 429,
	430, 431, 432, 433, 569, 435, 434, 436, 0, 437,
	0, 0, 0, 0, 0, 438, 0, 440, 441, 442,
	439, 443, 444, 445, 446, 0, 447, 448, 449, 0,
	450, 451, 452, 453, 570, 454, 0, 455, 456, 462,
	463, 457, 458, 464, 465, 466, 467, 468, 0, 470,
	471, 469, 472, 473, 474, 0, 475, 459, 460, 476,
	477, 0, 478, 479, 480, 481, 482, 483, 571, 0,
	484, 0, 485, 486, 487, 488, 461, 489, 494, 572,
	490, 491, 492, 493, 573, 0, 496, 497, 0, 495,
	0, 498, 499, 500, 501, 502, 503, 321, 504, 0,
	505, 574, 575, 576, 577, 0, 512, 0, 506, 507,
	578, 508, 579, 0, 509, 510, 511, 0, 513, 514,
	0, 0, 515, 516, 517, 519, 520, 518, 521, 0,
	522, 0, 0, 523, 524, 525, 580, 581, 582, 0,
	527, 526, 583, 616, 0, 242, 0, 528, 529, 584,
	530, 531, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 249, 250, 615, 252, 253, 605, 254,
	255, 0, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 256, 257, 259, 258, 260, 261, 262, 263, 534,
	535, 0, 264, 536, 265, 537, 0, 538, 266, 267,
	268, 269, 270, 0, 0, 0, 271, 539, 540, 541,
	0, 272, 273, 542, 0, 0, 0, 274, 275, 276,
	277, 278, 279, 280, 0, 0, 282, 283, 284, 281,
	0, 285, 0, 286, 287, 288, 289, 608, 290, 0,
	291, 292, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 295, 296, 0, 297, 543, 544, 0, 301, 298,
	299, 0, 302, 300, 0, 303, 304, 305, 0, 0,
	306, 307, 308, 0, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 545, 316, 317, 318, 320, 322, 319,
	323, 324, 325, 326, 546, 547, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 548, 0, 0, 0,
	330, 0, 331, 0, 0, 0, 332, 333, 549, 550,
	334, 335, 609, 336, 551, 0, 552, 337, 0, 338,
	339, 340, 341, 342, 553, 554, 555, 400, 0, 343,
	344, 0, 345, 346, 347, 348, 0, 0, 0, 0,
	349, 350, 352, 0, 0, 351, 556, 557, 0, 558,
	0, 353, 354, 0, 559, 0, 355, 356, 357, 0,
	358, 0, 0, 0, 359, 360, 361, 362, 363, 364,
	0, 365, 367, 366, 0, 368, 560, 0, 369, 370,
	0, 0, 371, 372, 373, 0, 0, 374, 375, 376,
	377, 0, 378, 379, 381, 383, 380, 382, 387, 384,
	385, 386, 389, 0, 388, 0, 390, 391, 392, 396,
	395, 397, 394, 0, 393, 0, 0, 0, 398, 0,
	561, 399, 562, 401, 402, 0, 0, 403, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 409, 563, 0,
	410, 0, 564, 411, 412, 404, 413, 414, 415, 416,
	417, 418, 419, 420, 0, 421, 422, 565, 566, 567,
	423, 568, 424, 425, 0, 426, 0, 427, 428, 429,
	430, 431, 432, 433, 569, 435, 434, 436, 0, 437,
	0, 0, 0, 0, 0, 438, 0, 440, 441, 442,
	439, 443, 444, 445, 446, 0, 447, 448, 449, 0,
	450, 451, 452, 453, 570, 454, 0, 455, 456, 462,
	463, 457, 458, 464, 465, 466, 467, 468, 610, 470,
	471, 469, 472, 473, 474, 0, 475, 459, 460, 476,
	477, 0, 478, 479, 480, 481, 482, 483, 571, 0,
	484, 0, 485, 486, 487, 488, 461, 489, 494, 572,
	490, 491, 492, 493, 573, 0, 496, 497, 0, 495,
	0, 498, 499, 500, 501, 502, 503, 321, 504, 0,
	505, 574, 575, 576, 577, 0, 512, 0, 506, 507,
	578, 508, 579, 0, 509, 510, 511, 0, 513, 514,
	0, 0, 515, 516, 517, 519, 520, 518, 521, 0,
	522, 0, 0, 523, 524, 525, 580, 581, 582, 0,
	527, 526, 583, 604, 0, 242, 0, 528, 529, 584,
	530, 531, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 249, 250, 251, 252, 253, 605, 254,
	255, 0, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 256, 257, 259, 258, 260, 261, 262, 263, 534,
	535, 0, 264, 536, 265, 537, 0, 538, 266, 267,
	268, 269, 270, 0, 0, 0, 271, 539, 540, 541,
	0, 272, 273, 542, 0, 0, 0, 274, 275, 276,
	277, 278, 279, 280, 0, 0, 282, 283, 284, 281,
	0, 285, 0, 286, 287, 288, 289, 608, 290, 0,
	291, 292, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 295, 296, 0, 297, 543, 544, 0, 301, 298,
	299, 0, 302, 300, 0, 303, 304, 305, 0, 0,
	306, 307, 308, 0, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 545, 316, 317, 318, 320, 322, 319,
	323, 324, 325, 326, 546, 547, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 548, 0, 0, 0,
	330, 0, 331, 0, 0, 0, 332, 333, 549, 550,
	334, 335, 609, 336, 551, 0, 552, 337, 0, 338,
	339, 340, 341, 342, 553, 554, 555, 400, 0, 343,
	344, 0, 345, 346, 347, 348, 0, 0, 0, 0,
	349, 350, 352, 0, 0, 351, 556, 557, 0, 558,
	0, 353, 354, 0, 559, 0, 355, 356, 357, 0,
	358, 0, 0, 0, 359, 360, 361, 362, 363, 364,
	0, 365, 367, 366, 0, 368, 560, 0, 369, 370,
	0, 0, 371, 372, 373, 0, 0, 374, 375, 376,
	377, 0, 378, 379, 381, 383, 380, 382, 387, 384,
	385, 386, 389, 0, 388, 0, 390, 391, 392, 396,
	395, 397, 394, 0, 393, 0, 0, 0, 398, 0,
	561, 399, 562, 401, 402, 0, 0, 403, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 409, 563, 0,
	410, 0, 564, 411, 412, 404, 413, 414, 415, 416,
	417, 418, 419, 420, 0, 421, 422, 565, 566, 567,
	423, 568, 424, 425, 0, 426, 0, 427, 428, 429,
	430, 431, 432, 433, 569, 435, 434, 436, 0, 437,
	0, 0, 0, 0, 0, 438, 0, 440, 441, 442,
	439, 443, 444, 445, 446, 0, 447, 448, 449, 0,
	450, 451, 452, 453, 570, 454, 0, 455, 456, 462,
	463, 457, 458, 464, 465, 466, 467, 468, 610, 470,
	471, 469, 472, 473, 474, 0, 475, 459, 460, 476,
	477, 0, 478, 479, 480, 481, 482, 483, 571, 0,
	484, 0, 485, 486, 487, 488, 461, 489, 494, 572,
	490, 491, 492, 493, 573, 0, 496, 497, 0, 495,
	0, 498, 499, 500, 501, 502, 503, 321, 504, 0,
	505, 574, 575, 576, 577, 0, 512, 0, 506, 507,
	578, 508, 579, 0, 509, 510, 511, 0, 513, 514,
	0, 0, 515, 516, 517, 519, 520, 518, 521, 0,
	522, 0, 0, 523, 524, 525, 580, 581, 582, 242,
	527, 526, 583, 0, 0, 0, 0, 528, 529, 584,
	530, 531, 532, 0, 0, 0, 248, 249, 250, 251,
	252, 253, 0, 254, 255, 0, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 256, 257, 259, 258, 260,
	261, 262, 263, 534, 535, 0, 264, 536, 265, 537,
	0, 538, 266, 267, 268, 269, 270, 0, 0, 0,
	271, 539, 540, 541, 0, 272, 273, 542, 0, 0,
	0, 274, 275, 276, 277, 278, 279, 280, 0, 0,
	282, 283, 284, 281, 0, 285, 0, 286, 287, 288,
	289, 0, 290, 0, 291, 292, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 295, 296, 0, 297, 543,
	544, 0, 301, 298, 299, 0, 302, 300, 0, 303,
	304, 305, 0, 0, 306, 307, 308, 0, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 545, 316, 317,
	318, 320, 322, 319, 323, 324, 325, 326, 546, 547,
	0, 245, 0, 0, 0, 0, 0, 327, 328, 329,
	548, 0, 0, 0, 330, 0, 331, 0, 0, 0,
	332, 333, 549, 550, 334, 335, 0, 336, 551, 0,
	552, 337, 0, 338, 339, 340, 341, 342, 553, 554,
	555, 400, 0, 343, 344, 0, 345, 346, 347, 348,
	0, 0, 0, 246, 349, 350, 352, 0, 0, 351,
	556, 557, 0, 558, 0, 353, 354, 0, 559, 0,
	355, 356, 357, 0, 358, 0, 0, 0, 359, 360,
	361, 362, 363, 364, 0, 365, 367, 366, 0, 368,
	560, 0, 369, 370, 0, 0, 371, 372, 373, 0,
	0, 374, 375, 376, 377, 0, 378, 379, 381, 383,
	380, 382, 387, 384, 385, 386, 389, 0, 388, 0,
	390, 391, 392, 396, 395, 397, 394, 0, 393, 0,
	247, 0, 398, 0, 561, 399, 562, 401, 402, 0,
	0, 403, 0, 0, 1105, 405, 406, 407, 0, 0,
	408, 409, 563, 0, 410, 0, 564, 411, 412, 404,
	413, 414, 415, 416, 417, 418, 419, 420, 0, 421,
	422, 565, 566, 567, 423, 568, 424, 425, 0, 426,
	0, 427, 428, 429, 430, 431, 432, 433, 569, 435,
	434, 436, 0, 437, 0, 0, 0, 0, 0, 438,
	0, 440, 441, 442, 439, 443, 444, 445, 446, 0,
	447, 448, 449, 0, 450, 451, 452, 453, 570, 454,
	0, 455, 456, 462, 463, 457, 458, 464, 465, 466,
	467, 468, 0, 470, 471, 469, 472, 473, 474, 0,
	475, 459, 460, 476, 477, 0, 478, 479, 480, 481,
	482, 483, 571, 0, 484, 0, 485, 486, 487, 488,
	461, 489, 494, 572, 490, 491, 492, 493, 573, 0,
	496, 497, 0, 495, 0, 498, 499, 500, 501, 502,
	503, 321, 504, 0, 505, 574, 575, 576, 577, 0,
	512, 0, 506, 507, 578, 508, 579, 0, 509, 510,
	511, 0, 513, 514, 0, 0, 515, 516, 517, 519,
	520, 518, 521, 0, 522, 0, 0, 523, 524, 525,
	580, 581, 582, 242, 527, 526, 583, 0, 0, 0,
	0, 528, 529, 584, 530, 531, 532, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 541, 0, 272,
	273, 542, 0, 0, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 0, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 245, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 0, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 553, 554, 555, 400, 0, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 246, 349, 350,
	352, 0, 0, 351, 556, 557, 0, 558, 0, 353,
	354, 0, 559, 0, 355, 356, 357, 0, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 0, 369, 370, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 388, 0, 390, 391, 392, 396, 395, 397,
	394, 3047, 393, 0, 247, 0, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 0, 410, 0,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 0, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 462, 463, 457,
	458, 464, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 473, 474, 0, 475, 459, 460, 476, 477, 0,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 0, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 574,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 0, 527, 526,
	583, 2623, 0, 242, 0, 528, 529, 584, 530, 531,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 541, 0, 272,
	273, 542, 0, 0, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 0, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 245, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 0, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 2622, 554, 555, 400, 0, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 246, 349, 350,
	352, 0, 0, 351, 556, 557, 0, 558, 0, 353,
	354, 0, 559, 0, 355, 356, 357, 0, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 0, 369, 370, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 388, 0, 390, 391, 392, 396, 395, 397,
	394, 0, 393, 0, 247, 0, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 0, 410, 0,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 0, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 462, 463, 457,
	458, 464, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 473, 474, 0, 475, 459, 460, 476, 477, 0,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 0, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 574,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 0, 527, 526,
	583, 2081, 0, 242, 0, 528, 529, 584, 530, 531,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 541, 0, 272,
	273, 542, 0, 0, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 0, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 245, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 0, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 553, 554, 555, 400, 0, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 246, 349, 350,
	352, 0, 0, 351, 556, 557, 0, 558, 0, 353,
	354, 0, 559, 0, 355, 356, 357, 0, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 0, 369, 370, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 388, 0, 390, 391, 392, 396, 395, 397,
	394, 0, 393, 0, 247, 0, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 0, 410, 0,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 0, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 462, 463, 457,
	458, 464, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 473, 474, 0, 475, 459, 460, 476, 477, 0,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 0, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 574,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 242, 527, 526,
	583, 0, 0, 0, 0, 528, 529, 584, 530, 531,
	532, 0, 0, 0, 248, 249, 250, 251, 252, 253,
	0, 254, 255, 0, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 256, 257, 259, 258, 260, 261, 262,
	263, 534, 535, 0, 264, 536, 265, 537, 0, 538,
	266, 267, 268, 269, 270, 0, 0, 0, 271, 539,
	540, 541, 0, 272, 273, 542, 0, 0, 0, 274,
	275, 276, 277, 278, 279, 280, 0, 0, 282, 283,
	284, 281, 0, 285, 0, 286, 287, 288, 289, 0,
	290, 0, 291, 292, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 295, 296, 0, 297, 543, 544, 0,
	301, 298, 299, 0, 302, 300, 0, 303, 304, 305,
	0, 0, 306, 307, 308, 0, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 545, 316, 317, 318, 320,
	322, 319, 323, 324, 325, 326, 546, 547, 0, 245,
	0, 0, 0, 0, 0, 327, 328, 329, 548, 0,
	0, 0, 330, 0, 331, 0, 0, 0, 332, 333,
	549, 550, 334, 335, 0, 336, 551, 0, 552, 337,
	0, 338, 339, 340, 341, 342, 553, 554, 555, 400,
	0, 343, 344, 0, 345, 346, 347, 348, 0, 0,
	0, 246, 349, 350, 352, 0, 0, 351, 556, 557,
	0, 558, 0, 353, 354, 0, 559, 0, 355, 356,
	357, 0, 358, 0, 0, 0, 359, 360, 361, 362,
	363, 364, 0, 365, 367, 366, 0, 368, 560, 0,
	369, 370, 0, 0, 371, 372, 373, 0, 0, 374,
	375, 376, 377, 0, 378, 379, 381, 383, 380, 382,
	387, 384, 385, 386, 389, 0, 388, 0, 390, 391,
	392, 396, 395, 397, 394, 0, 393, 0, 247, 0,
	398, 0, 561, 399, 562, 401, 402, 0, 0, 403,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 409,
	563, 0, 410, 0, 564, 411, 412, 404, 413, 414,
	415, 416, 417, 418, 419, 420, 0, 421, 422, 565,
	566, 567, 423, 568, 424, 425, 0, 426, 0, 427,
	428, 429, 430, 431, 432, 433, 569, 435, 434, 436,
	0, 437, 0, 0, 0, 0, 0, 438, 0, 440,
	441, 442, 439, 443, 444, 445, 446, 0, 447, 448,
	449, 0, 450, 451, 452, 453, 570, 454, 0, 455,
	456, 462, 463, 457, 458, 464, 465, 466, 467, 468,
	0, 470, 471, 469, 472, 473, 474, 0, 475, 459,
	460, 476, 477, 0, 478, 479, 480, 481, 482, 483,
	571, 0, 484, 0, 485, 486, 487, 488, 461, 489,
	494, 572, 490, 491, 492, 493, 573, 0, 496, 497,
	0, 495, 1998, 498, 499, 500, 501, 502, 503, 321,
	504, 0, 505, 574, 575, 576, 577, 0, 512, 0,
	506, 507, 578, 508, 579, 0, 509, 510, 511, 0,
	513, 514, 0, 0, 515, 516, 517, 519, 520, 518,
	521, 0, 522, 0, 0, 523, 524, 525, 580, 581,
	582, 0, 527, 526, 583, 2003, 0, 242, 0, 528,
	529, 584, 530, 531, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 249, 250, 251, 252, 253,
	0, 254, 255, 0, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 256, 257, 259, 258, 260, 261, 262,
	263, 534, 535, 0, 264, 536, 265, 537, 0, 538,
	266, 267, 268, 269, 270, 0, 0, 0, 271, 539,
	540, 541, 0, 272, 273, 542, 0, 0, 0, 274,
	275, 276, 277, 278, 279, 280, 0, 0, 282, 283,
	284, 281, 0, 285, 0, 286, 287, 288, 289, 0,
	290, 0, 291, 292, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 295, 296, 0, 297, 543, 544, 0,
	301, 298, 299, 0, 302, 300, 0, 303, 304, 305,
	0, 0, 306, 307, 308, 0, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 545, 316, 317, 318, 320,
	322, 319, 323, 324, 325, 326, 546, 547, 0, 245,
	0, 0, 0, 0, 0, 327, 328, 329, 548, 0,
	0, 0, 330, 0, 331, 0, 0, 0, 332, 333,
	549, 550, 334, 335, 0, 336, 551, 0, 552, 337,
	0, 338, 339, 340, 341, 342, 2002, 554, 555, 400,
	0, 343, 344, 0, 345, 346, 347, 348, 0, 0,
	0, 246, 349, 350, 352, 0, 0, 351, 556, 557,
	0, 558, 0, 353, 354, 0, 559, 0, 355, 356,
	357, 0, 358, 0, 0, 0, 359, 360, 361, 362,
	363, 364, 0, 365, 367, 366, 0, 368, 560, 0,
	369, 370, 0, 0, 371, 372, 373, 0, 0, 374,
	375, 376, 377, 0, 378, 379, 381, 383, 380, 382,
	387, 384, 385, 386, 389, 0, 388, 0, 390, 391,
	392, 396, 395, 397, 394, 0, 393, 0, 247, 0,
	398, 0, 561, 399, 562, 401, 402, 0, 0, 403,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 409,
	563, 0, 410, 0, 564, 411, 412, 404, 413, 414,
	415, 416, 417, 418, 419, 420, 0, 421, 422, 565,
	566, 567, 423, 568, 424, 425, 0, 426, 0, 427,
	428, 429, 430, 431, 432, 433, 569, 435, 434, 436,
	0, 437, 0, 0, 0, 0, 0, 438, 0, 440,
	441, 442, 439, 443, 444, 445, 446, 0, 447, 448,
	449, 0, 450, 451, 452, 453, 570, 454, 0, 455,
	456, 462, 463, 457, 458, 464, 465, 466, 467, 468,
	0, 470, 471, 469, 472, 473, 474, 0, 475, 459,
	460, 476, 477, 0, 478, 479, 480, 481, 482, 483,
	571, 0, 484, 0, 485, 486, 487, 488, 461, 489,
	494, 572, 490, 491, 492, 493, 573, 0, 496, 497,
	0, 495, 0, 498, 499, 500, 501, 502, 503, 321,
	504, 0, 505, 574, 575, 576, 577, 0, 512, 0,
	506, 507, 578, 508, 579, 0, 509, 510, 511, 0,
	513, 514, 0, 0, 515, 516, 517, 519, 520, 518,
	521, 0, 522, 0, 0, 523, 524, 525, 580, 581,
	582, 0, 527, 526, 583, 1991, 0, 242, 0, 528,
	529, 584, 530, 531, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 249, 250, 251, 252, 253,
	0, 254, 255, 0, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 256, 257, 259, 258, 260, 261, 262,
	263, 534, 535, 0, 264, 536, 265, 537, 0, 538,
	266, 267, 268, 269, 270, 0, 0, 0, 271, 539,
	540, 541, 0, 272, 273, 542, 0, 0, 0, 274,
	275, 276, 277, 278, 279, 280, 0, 0, 282, 283,
	284, 281, 0, 285, 0, 286, 287, 288, 289, 0,
	290, 0, 291, 292, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 295, 296, 0, 297, 543, 544, 0,
	301, 298, 299, 0, 302, 300, 0, 303, 304, 305,
	0, 0, 306, 307, 308, 0, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 545, 316, 317, 318, 320,
	322, 319, 323, 324, 325, 326, 546, 547, 0, 245,
	0, 0, 0, 0, 0, 327, 328, 329, 548, 0,
	0, 0, 330, 0, 331, 0, 0, 0, 332, 333,
	549, 550, 334, 335, 0, 336, 551, 0, 552, 337,
	0, 338, 339, 340, 341, 342, 1993, 554, 555, 400,
	0, 343, 344, 0, 345, 346, 347, 348, 0, 0,
	0, 246, 349, 350, 352, 0, 0, 351, 556, 557,
	0, 558, 0, 353, 354, 0, 559, 0, 355, 356,
	357, 0, 358, 0, 0, 0, 359, 360, 361, 362,
	363, 364, 0, 365, 367, 366, 0, 368, 560, 0,
	369, 370, 0, 0, 371, 372, 373, 0, 0, 374,
	375, 376, 377, 0, 378, 379, 381, 383, 380, 382,
	387, 384, 385, 386, 389, 0, 388, 0, 390, 391,
	392, 396, 395, 397, 394, 0, 393, 0, 247, 0,
	398, 0, 561, 399, 562, 401, 402, 0, 0, 403,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 409,
	563, 0, 410, 0, 564, 411, 412, 404, 413, 414,
	415, 416, 417, 418, 419, 420, 0, 421, 422, 565,
	566, 567, 423, 568, 424, 425, 0, 426, 0, 427,
	428, 429, 430, 431, 432, 433, 569, 435, 434, 436,
	0, 437, 0, 0, 0, 0, 0, 438, 0, 440,
	441, 442, 439, 443, 444, 445, 446, 0, 447, 448,
	449, 0, 450, 451, 452, 453, 570, 454, 0, 455,
	456, 462, 463, 457, 458, 464, 465, 466, 467, 468,
	0, 470, 471, 469, 472, 473, 474, 0, 475, 459,
	460, 476, 477, 0, 478, 479, 480, 481, 482, 483,
	571, 0, 484, 0, 485, 486, 487, 488, 461, 489,
	494, 572, 490, 491, 492, 493, 573, 0, 496, 497,
	0, 495, 0, 498, 499, 500, 501, 502, 503, 321,
	504, 0, 505, 574, 575, 576, 577, 0, 512, 0,
	506, 507, 578, 508, 579, 0, 509, 510, 511, 0,
	513, 514, 0, 0, 515, 516, 517, 519, 520, 518,
	521, 0, 522, 0, 0, 523, 524, 525, 580, 581,
	582, 242, 527, 526, 583, 0, 0, 0, 0, 528,
	529, 584, 530, 531, 532, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 0, 254, 255, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 534, 535, 0, 264, 536,
	265, 537, 0, 538, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 539, 540, 541, 0, 272, 273, 542,
	0, 0, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 0, 285, 0, 286,
	287, 288, 289, 0, 290, 0, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 295, 296, 0,
	297, 543, 544, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 307, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 545,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	546, 547, 0, 245, 0, 0, 0, 0, 0, 327,
	328, 329, 548, 0, 0, 0, 330, 0, 331, 0,
	0, 0, 332, 333, 549, 550, 334, 335, 0, 336,
	551, 0, 552, 337, 0, 338, 339, 340, 341, 342,
	1965, 554, 555, 400, 0, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 246, 349, 350, 352, 0,
	0, 351, 556, 557, 0, 558, 0, 353, 354, 0,
	559, 0, 355, 356, 357, 0, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 560, 0, 369, 370, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	388, 0, 390, 391, 392, 396, 395, 397, 394, 0,
	393, 0, 247, 0, 398, 0, 561, 399, 562, 401,
	402, 0, 0, 403, 0, 0, 1105, 405, 406, 407,
	0, 0, 408, 409, 563, 0, 410, 0, 564, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 565, 566, 567, 423, 568, 424, 425,
	0, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 0, 450, 451, 452, 453,
	570, 454, 0, 455, 456, 462, 463, 457, 458, 464,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 473,
	474, 0, 475, 459, 460, 476, 477, 0, 478, 479,
	480, 481, 482, 483, 571, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 572, 490, 491, 492, 493,
	573, 0, 496, 497, 0, 495, 0, 498, 499, 500,
	501, 502, 503, 321, 504, 0, 505, 574, 575, 576,
	577, 0, 512, 0, 506, 507, 578, 508, 579, 0,
	509, 510, 511, 0, 513, 514, 0, 0, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 580, 581, 582, 0, 527, 526, 583, 1431,
	0, 242, 0, 528, 529, 584, 530, 531, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 0, 254, 255, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 534, 535, 0, 264, 536,
	265, 537, 0, 538, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 539, 540, 541, 0, 272, 273, 542,
	0, 0, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 0, 285, 0, 286,
	287, 288, 289, 0, 290, 0, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 295, 296, 0,
	297, 543, 544, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 307, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 545,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	546, 547, 0, 245, 0, 0, 0, 0, 0, 327,
	328, 329, 548, 0, 0, 0, 330, 0, 331, 0,
	0, 0, 332, 333, 549, 550, 334, 335, 0, 336,
	551, 0, 552, 337, 0, 338, 339, 340, 341, 342,
	1430, 554, 555, 400, 0, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 246, 349, 350, 352, 0,
	0, 351, 556, 557, 0, 558, 0, 353, 354, 0,
	559, 0, 355, 356, 357, 0, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 560, 0, 369, 370, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	388, 0, 390, 391, 392, 396, 395, 397, 394, 0,
	393, 0, 247, 0, 398, 0, 561, 399, 562, 401,
	402, 0, 0, 403, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 409, 563, 0, 410, 0, 564, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 565, 566, 567, 423, 568, 424, 425,
	0, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 0, 450, 451, 452, 453,
	570, 454, 0, 455, 456, 462, 463, 457, 458, 464,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 473,
	474, 0, 475, 459, 460, 476, 477, 0, 478, 479,
	480, 481, 482, 483, 571, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 572, 490, 491, 492, 493,
	573, 0, 496, 497, 0, 495, 0, 498, 499, 500,
	501, 502, 503, 321, 504, 0, 505, 574, 575, 576,
	577, 0, 512, 0, 506, 507, 578, 508, 579, 0,
	509, 510, 511, 0, 513, 514, 0, 0, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 580, 581, 582, 0, 527, 526, 583, 1422,
	0, 242, 0, 528, 529, 584, 530, 531, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 0, 254, 255, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 534, 535, 0, 264, 536,
	265, 537, 0, 538, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 539, 540, 541, 0, 272, 273, 542,
	0, 0, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 0, 285, 0, 286,
	287, 288, 289, 0, 290, 0, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 295, 296, 0,
	297, 543, 544, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 307, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 545,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	546, 547, 0, 245, 0, 0, 0, 0, 0, 327,
	328, 329, 548, 0, 0, 0, 330, 0, 331, 0,
	0, 0, 332, 333, 549, 550, 334, 335, 0, 336,
	551, 0, 552, 337, 0, 338, 339, 340, 341, 342,
	1421, 554, 555, 400, 0, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 246, 349, 350, 352, 0,
	0, 351, 556, 557, 0, 558, 0, 353, 354, 0,
	559, 0, 355, 356, 357, 0, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 560, 0, 369, 370, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	388, 0, 390, 391, 392, 396, 395, 397, 394, 0,
	393, 0, 247, 0, 398, 0, 561, 399, 562, 401,
	402, 0, 0, 403, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 409, 563, 0, 410, 0, 564, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 565, 566, 567, 423, 568, 424, 425,
	0, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 0, 450, 451, 452, 453,
	570, 454, 0, 455, 456, 462, 463, 457, 458, 464,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 473,
	474, 0, 475, 459, 460, 476, 477, 0, 478, 479,
	480, 481, 482, 483, 571, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 572, 490, 491, 492, 493,
	573, 0, 496, 497, 0, 495, 0, 498, 499, 500,
	501, 502, 503, 321, 504, 0, 505, 574, 575, 576,
	577, 0, 512, 0, 506, 507, 578, 508, 579, 0,
	509, 510, 511, 0, 513, 514, 0, 0, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 580, 581, 582, 0, 527, 526, 583, 1419,
	0, 242, 0, 528, 529, 584, 530, 531, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 0, 254, 255, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 534, 535, 0, 264, 536,
	265, 537, 0, 538, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 539, 540, 541, 0, 272, 273, 542,
	0, 0, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 0, 285, 0, 286,
	287, 288, 289, 0, 290, 0, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 295, 296, 0,
	297, 543, 544, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 307, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 545,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	546, 547, 0, 245, 0, 0, 0, 0, 0, 327,
	328, 329, 548, 0, 0, 0, 330, 0, 331, 0,
	0, 0, 332, 333, 549, 550, 334, 335, 0, 336,
	551, 0, 552, 337, 0, 338, 339, 340, 341, 342,
	1418, 554, 555, 400, 0, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 246, 349, 350, 352, 0,
	0, 351, 556, 557, 0, 558, 0, 353, 354, 0,
	559, 0, 355, 356, 357, 0, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 560, 0, 369, 370, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	388, 0, 390, 391, 392, 396, 395, 397, 394, 0,
	393, 0, 247, 0, 398, 0, 561, 399, 562, 401,
	402, 0, 0, 403, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 409, 563, 0, 410, 0, 564, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 565, 566, 567, 423, 568, 424, 425,
	0, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 0, 450, 451, 452, 453,
	570, 454, 0, 455, 456, 462, 463, 457, 458, 464,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 473,
	474, 0, 475, 459, 460, 476, 477, 0, 478, 479,
	480, 481, 482, 483, 571, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 572, 490, 491, 492, 493,
	573, 0, 496, 497, 0, 495, 0, 498, 499, 500,
	501, 502, 503, 321, 504, 0, 505, 574, 575, 576,
	577, 0, 512, 0, 506, 507, 578, 508, 579, 0,
	509, 510, 511, 0, 513, 514, 0, 0, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 580, 581, 582, 0, 527, 526, 583, 1414,
	0, 242, 0, 528, 529, 584, 530, 531, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 0, 254, 255, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 534, 535, 0, 264, 536,
	265, 537, 0, 538, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 539, 540, 541, 0, 272, 273, 542,
	0, 0, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 0, 285, 0, 286,
	287, 288, 289, 0, 290, 0, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 295, 296, 0,
	297, 543, 544, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 307, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 545,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	546, 547, 0, 245, 0, 0, 0, 0, 0, 327,
	328, 329, 548, 0, 0, 0, 330, 0, 331, 0,
	0, 0, 332, 333, 549, 550, 334, 335, 0, 336,
	551, 0, 552, 337, 0, 338, 339, 340, 341, 342,
	1413, 554, 555, 400, 0, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 246, 349, 350, 352, 0,
	0, 351, 556, 557, 0, 558, 0, 353, 354, 0,
	559, 0, 355, 356, 357, 0, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 560, 0, 369, 370, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	388, 0, 390, 391, 392, 396, 395, 397, 394, 0,
	393, 0, 247, 0, 398, 0, 561, 399, 562, 401,
	402, 0, 0, 403, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 409, 563, 0, 410, 0, 564, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 565, 566, 567, 423, 568, 424, 425,
	0, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 0, 450, 451, 452, 453,
	570, 454, 0, 455, 456, 462, 463, 457, 458, 464,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 473,
	474, 0, 475, 459, 460, 476, 477, 0, 478, 479,
	480, 481, 482, 483, 571, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 572, 490, 491, 492, 493,
	573, 0, 496, 497, 0, 495, 0, 498, 499, 500,
	501, 502, 503, 321, 504, 0, 505, 574, 575, 576,
	577, 0, 512, 0, 506, 507, 578, 508, 579, 0,
	509, 510, 511, 0, 513, 514, 0, 0, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 580, 581, 582, 0, 527, 526, 583, 1371,
	0, 242, 0, 528, 529, 584, 530, 531, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 0, 254, 255, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 534, 535, 0, 264, 536,
	265, 537, 0, 538, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 539, 540, 541, 0, 272, 273, 542,
	0, 0, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 0, 285, 0, 286,
	287, 288, 289, 0, 290, 0, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 295, 296, 0,
	297, 543, 544, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 307, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 545,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	546, 547, 0, 245, 0, 0, 0, 0, 0, 327,
	328, 329, 548, 0, 0, 0, 330, 0, 331, 0,
	0, 0, 332, 333, 549, 550, 334, 335, 0, 336,
	551, 0, 552, 337, 0, 338, 339, 340, 341, 342,
	553, 554, 555, 400, 0, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 246, 349, 350, 352, 0,
	0, 351, 556, 557, 0, 558, 0, 353, 354, 0,
	559, 0, 355, 356, 357, 0, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 560, 0, 369, 370, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	388, 0, 390, 391, 392, 396, 395, 397, 394, 0,
	393, 0, 247, 0, 398, 0, 561, 399, 562, 401,
	402, 0, 0, 403, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 409, 563, 0, 410, 0, 564, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 565, 566, 567, 423, 568, 424, 425,
	0, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 0, 450, 451, 452, 453,
	570, 454, 0, 455, 456, 462, 463, 457, 458, 464,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 473,
	474, 0, 475, 459, 460, 476, 477, 0, 478, 479,
	480, 481, 482, 483, 571, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 572, 490, 491, 492, 493,
	573, 0, 496, 497, 0, 495, 0, 498, 499, 500,
	501, 502, 503, 321, 504, 0, 505, 574, 575, 576,
	577, 0, 512, 0, 506, 507, 578, 508, 579, 0,
	509, 510, 511, 0, 513, 514, 0, 0, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 580, 581, 582, 0, 527, 526, 583, 1286,
	0, 242, 0, 528, 529, 584, 530, 531, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 0, 254, 255, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 534, 535, 0, 264, 536,
	265, 537, 0, 538, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 539, 540, 541, 0, 272, 273, 542,
	0, 0, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 0, 285, 0, 286,
	287, 288, 289, 0, 290, 0, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 295, 296, 0,
	297, 543, 544, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 307, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 545,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	546, 547, 0, 245, 0, 0, 0, 0, 0, 327,
	328, 329, 548, 0, 0, 0, 330, 0, 331, 0,
	0, 0, 332, 333, 549, 550, 334, 335, 0, 336,
	551, 0, 552, 337, 0, 338, 339, 340, 341, 342,
	553, 554, 555, 400, 0, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 246, 349, 350, 352, 0,
	0, 351, 556, 557, 0, 558, 0, 353, 354, 0,
	559, 0, 355, 356, 357, 0, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 560, 0, 369, 370, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	388, 0, 390, 391, 392, 396, 395, 397, 394, 0,
	393, 0, 247, 0, 398, 0, 561, 399, 562, 401,
	402, 0, 0, 403, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 409, 563, 0, 410, 0, 564, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 565, 566, 567, 423, 568, 424, 425,
	0, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 0, 450, 451, 452, 453,
	570, 454, 0, 455, 456, 462, 463, 457, 458, 464,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 473,
	474, 0, 475, 459, 460, 476, 477, 0, 478, 479,
	480, 481, 482, 483, 571, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 572, 490, 491, 492, 493,
	573, 0, 496, 497, 0, 495, 0, 498, 499, 500,
	501, 502, 503, 321, 504, 0, 505, 574, 575, 576,
	577, 0, 512, 0, 506, 507, 578, 508, 579, 0,
	509, 510, 511, 0, 513, 514, 0, 0, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 580, 581, 582, 0, 527, 526, 583, 1279,
	0, 242, 0, 528, 529, 584, 530, 531, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 0, 254, 255, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 534, 535, 0, 264, 536,
	265, 537, 0, 538, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 539, 540, 541, 0, 272, 273, 542,
	0, 0, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 0, 285, 0, 286,
	287, 288, 289, 0, 290, 0, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 295, 296, 0,
	297, 543, 544, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 307, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 545,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	546, 547, 0, 245, 0, 0, 0, 0, 0, 327,
	328, 329, 548, 0, 0, 0, 330, 0, 331, 0,
	0, 0, 332, 333, 549, 550, 334, 335, 0, 336,
	551, 0, 552, 337, 0, 338, 339, 340, 341, 342,
	1281, 554, 555, 400, 0, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 246, 349, 350, 352, 0,
	0, 351, 556, 557, 0, 558, 0, 353, 354, 0,
	559, 0, 355, 356, 357, 0, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 560, 0, 369, 370, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	388, 0, 390, 391, 392, 396, 395, 397, 394, 0,
	393, 0, 247, 0, 398, 0, 561, 399, 562, 401,
	402, 0, 0, 403, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 409, 563, 0, 410, 0, 564, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 565, 566, 567, 423, 568, 424, 425,
	0, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 0, 450, 451, 452, 453,
	570, 454, 0, 455, 456, 462, 463, 457, 458, 464,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 473,
	474, 0, 475, 459, 460, 476, 477, 0, 478, 479,
	480, 481, 482, 483, 571, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 572, 490, 491, 492, 493,
	573, 0, 496, 497, 0, 495, 0, 498, 499, 500,
	501, 502, 503, 321, 504, 0, 505, 574, 575, 576,
	577, 0, 512, 0, 506, 507, 578, 508, 579, 0,
	509, 510, 511, 0, 513, 514, 0, 0, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 580, 581, 582, 0, 527, 526, 583, 586,
	0, 242, 0, 528, 529, 584, 530, 531, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 0, 254, 255, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 534, 535, 0, 264, 536,
	265, 537, 0, 538, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 539, 540, 541, 0, 272, 273, 542,
	0, 0, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 0, 285, 0, 286,
	287, 288, 289, 0, 290, 0, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 295, 296, 0,
	297, 543, 544, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 307, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 545,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	546, 547, 0, 245, 0, 0, 0, 0, 0, 327,
	328, 329, 548, 0, 0, 0, 330, 0, 331, 0,
	0, 0, 332, 333, 549, 550, 334, 335, 0, 336,
	551, 0, 552, 337, 0, 338, 339, 340, 341, 342,
	553, 554, 555, 400, 0, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 246, 349, 350, 352, 0,
	0, 351, 556, 557, 0, 558, 0, 353, 354, 0,
	559, 0, 355, 356, 357, 0, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 560, 0, 369, 370, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	388, 0, 390, 391, 392, 396, 395, 397, 394, 0,
	393, 0, 247, 0, 398, 0, 561, 399, 562, 401,
	402, 0, 0, 403, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 409, 563, 0, 410, 0, 564, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 565, 566, 567, 423, 568, 424, 425,
	0, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 0, 450, 451, 452, 453,
	570, 454, 0, 455, 456, 462, 463, 457, 458, 464,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 473,
	474, 0, 475, 459, 460, 476, 477, 0, 478, 479,
	480, 481, 482, 483, 571, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 572, 490, 491, 492, 493,
	573, 0, 496, 497, 0, 495, 0, 498, 499, 500,
	501, 502, 503, 321, 504, 0, 505, 574, 575, 576,
	577, 0, 512, 0, 506, 507, 578, 508, 579, 0,
	509, 510, 511, 0, 513, 514, 0, 0, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 580, 581, 582, 0, 527, 526, 583, 233,
	0, 242, 0, 528, 529, 584, 530, 531, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 0, 254, 255, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 534, 535, 0, 264, 536,
	265, 537, 0, 538, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 539, 540, 541, 0, 272, 273, 542,
	0, 0, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 0, 285, 0, 286,
	287, 288, 289, 0, 290, 0, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 295, 296, 0,
	297, 543, 544, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 307, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 545,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	546, 547, 0, 245, 0, 0, 0, 0, 0, 327,
	328, 329, 548, 0, 0, 0, 330, 0, 331, 0,
	0, 0, 332, 333, 549, 550, 334, 335, 0, 336,
	551, 0, 552, 337, 0, 338, 339, 340, 341, 342,
	553, 554, 555, 400, 0, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 246, 349, 350, 352, 0,
	0, 351, 556, 557, 0, 558, 0, 353, 354, 0,
	559, 0, 355, 356, 357, 0, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 560, 0, 369, 370, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	388, 0, 390, 391, 392, 396, 395, 397, 394, 0,
	393, 0, 247, 0, 398, 0, 561, 399, 562, 401,
	402, 0, 0, 403, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 409, 563, 0, 410, 0, 564, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 565, 566, 567, 423, 568, 424, 425,
	0, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 0, 450, 451, 452, 453,
	570, 454, 0, 455, 456, 462, 463, 457, 458, 464,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 473,
	474, 0, 475, 459, 460, 476, 477, 0, 478, 479,
	480, 481, 482, 483, 571, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 572, 490, 491, 492, 493,
	573, 0, 496, 497, 0, 495, 0, 498, 499, 500,
	501, 502, 503, 321, 504, 0, 505, 574, 575, 576,
	577, 0, 512, 0, 506, 507, 578, 508, 579, 0,
	509, 510, 511, 0, 513, 514, 0, 0, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 580, 581, 582, 242, 527, 526, 583, 0,
	0, 0, 0, 528, 529, 584, 530, 531, 532, 0,
	0, 0, 248, 249, 250, 251, 252, 253, 0, 254,
	255, 0, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 256, 257, 259, 258, 260, 261, 262, 263, 534,
	535, 0, 264, 536, 265, 537, 0, 538, 266, 267,
	268, 269, 270, 0, 0, 0, 271, 539, 540, 541,
	0, 272, 273, 542, 0, 0, 0, 274, 275, 276,
	277, 278, 279, 280, 0, 0, 282, 283, 284, 281,
	0, 285, 0, 286, 287, 288, 289, 0, 290, 0,
	291, 292, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 295, 296, 0, 297, 543, 544, 0, 301, 298,
	299, 0, 302, 300, 0, 303, 304, 305, 0, 0,
	306, 307, 308, 0, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 545, 316, 317, 318, 320, 322, 319,
	323, 324, 325, 326, 546, 547, 0, 245, 0, 0,
	0, 0, 0, 327, 328, 329, 548, 0, 0, 0,
	330, 0, 331, 0, 0, 0, 332, 333, 549, 550,
	334, 335, 0, 336, 551, 0, 552, 337, 0, 338,
	339, 340, 341, 342, 553, 554, 555, 400, 0, 343,
	344, 0, 345, 346, 347, 348, 0, 0, 0, 246,
	349, 350, 352, 0, 0, 351, 556, 557, 0, 558,
	0, 353, 354, 0, 559, 0, 355, 356, 357, 0,
	358, 0, 0, 0, 359, 360, 361, 362, 363, 364,
	0, 365, 367, 366, 0, 368, 560, 0, 369, 370,
	0, 0, 371, 372, 373, 0, 0, 374, 375, 376,
	377, 0, 378, 379, 381, 383, 380, 382, 387, 384,
	385, 386, 389, 0, 388, 0, 390, 391, 392, 396,
	395, 397, 394, 0, 393, 0, 247, 0, 398, 0,
	561, 399, 562, 401, 402, 0, 0, 403, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 409, 563, 0,
	410, 0, 564, 411, 412, 404, 413, 414, 415, 416,
	417, 418, 419, 420, 0, 421, 422, 565, 566, 567,
	423, 568, 424, 425, 0, 426, 0, 427, 428, 429,
	430, 431, 432, 433, 569, 435, 434, 436, 0, 437,
	0, 0, 0, 0, 0, 438, 0, 440, 441, 442,
	439, 443, 444, 445, 446, 0, 447, 448, 449, 0,
	450, 451, 452, 453, 570, 454, 0, 455, 456, 462,
	463, 457, 458, 464, 465, 466, 467, 468, 0, 470,
	471, 469, 472, 473, 474, 0, 475, 459, 460, 476,
	477, 0, 478, 479, 480, 481, 482, 483, 571, 0,
	484, 0, 485, 486, 487, 488, 461, 489, 494, 572,
	490, 491, 492, 493, 573, 0, 496, 497, 0, 495,
	0, 498, 499, 500, 501, 502, 503, 321, 504, 0,
	505, 574, 575, 576, 577, 0, 512, 0, 506, 507,
	578, 508, 579, 0, 509, 510, 511, 0, 513, 514,
	0, 0, 515, 516, 517, 519, 520, 518, 521, 0,
	522, 0, 0, 523, 524, 525, 580, 581, 582, 242,
	527, 526, 583, 0, 0, 0, 0, 528, 529, 584,
	530, 531, 532, 0, 0, 0, 248, 249, 250, 251,
	252, 253, 0, 254, 255, 0, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 256, 257, 259, 258, 260,
	261, 262, 263, 534, 535, 0, 264, 536, 265, 537,
	0, 538, 266, 267, 268, 269, 270, 0, 0, 0,
	271, 539, 540, 541, 0, 272, 273, 542, 0, 0,
	0, 274, 275, 276, 277, 278, 279, 280, 0, 0,
	282, 283, 284, 281, 0, 285, 0, 286, 287, 288,
	289, 608, 290, 0, 291, 292, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 295, 296, 0, 297, 543,
	544, 0, 301, 298, 299, 0, 302, 300, 0, 303,
	304, 305, 0, 0, 306, 307, 308, 0, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 545, 316, 317,
	318, 320, 322, 319, 323, 324, 325, 326, 546, 547,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	548, 0, 0, 0, 330, 0, 331, 0, 0, 0,
	332, 333, 549, 550, 334, 335, 609, 336, 551, 0,
	552, 337, 0, 338, 339, 340, 341, 342, 553, 554,
	555, 400, 0, 343, 344, 0, 345, 346, 347, 348,
	0, 0, 0, 0, 349, 350, 352, 0, 0, 351,
	556, 557, 0, 558, 0, 353, 354, 0, 559, 0,
	355, 356, 357, 0, 358, 0, 0, 0, 359, 360,
	361, 362, 363, 364, 0, 365, 367, 366, 0, 368,
	560, 0, 369, 370, 0, 0, 371, 372, 373, 0,
	0, 374, 375, 376, 377, 0, 378, 379, 381, 383,
	380, 382, 387, 384, 385, 386, 389, 0, 388, 0,
	390, 391, 392, 396, 395, 397, 394, 0, 393, 0,
	0, 0, 398, 0, 561, 399, 562, 401, 402, 0,
	0, 403, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 409, 563, 0, 410, 0, 564, 411, 412, 404,
	413, 414, 415, 416, 417, 418, 419, 420, 0, 421,
	422, 565, 566, 567, 423, 568, 424, 425, 0, 426,
	0, 427, 428, 429, 430, 431, 432, 433, 569, 435,
	434, 436, 0, 437, 0, 0, 0, 0, 0, 438,
	0, 440, 441, 442, 439, 443, 444, 445, 446, 0,
	447, 448, 449, 0, 450, 451, 452, 453, 570, 454,
	0, 455, 456, 462, 463, 457, 458, 464, 465, 466,
	467, 468, 610, 470, 471, 469, 472, 473, 474, 0,
	475, 459, 460, 476, 477, 0, 478, 479, 480, 481,
	482, 483, 571, 0, 484, 0, 485, 486, 487, 488,
	461, 489, 494, 572, 490, 491, 492, 493, 573, 0,
	496, 497, 0, 495, 0, 498, 499, 500, 501, 502,
	503, 321, 504, 0, 505, 574, 575, 576, 577, 0,
	512, 0, 506, 507, 578, 508, 579, 0, 509, 510,
	511, 0, 513, 514, 0, 0, 515, 516, 517, 519,
	520, 518, 521, 0, 522, 0, 0, 523, 524, 525,
	580, 581, 582, 242, 527, 526, 583, 0, 0, 0,
	0, 528, 529, 584, 530, 531, 532, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 541, 0, 272,
	273, 542, 0, 0, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 0, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 2114,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 245, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 0, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 553, 554, 555, 400, 0, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 246, 349, 350,
	352, 0, 0, 351, 556, 557, 0, 558, 0, 353,
	354, 0, 559, 0, 355, 356, 357, 0, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 0, 369, 370, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 388, 0, 390, 391, 392, 396, 395, 397,
	394, 0, 393, 0, 247, 0, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 0, 410, 0,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 0, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 462, 463, 457,
	458, 464, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 473, 474, 0, 475, 459, 460, 476, 477, 0,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 0, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 574,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 242, 527, 526,
	583, 0, 0, 0, 0, 528, 529, 584, 530, 531,
	532, 0, 0, 0, 248, 249, 250, 251, 252, 253,
	0, 254, 255, 0, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 256, 257, 259, 258, 260, 261, 262,
	263, 534, 535, 0, 264, 536, 265, 537, 0, 538,
	266, 267, 268, 269, 270, 0, 0, 0, 271, 539,
	540, 541, 0, 272, 273, 542, 0, 0, 0, 274,
	275, 276, 277, 278, 279, 280, 0, 0, 282, 283,
	284, 281, 0, 285, 0, 286, 287, 288, 289, 0,
	290, 0, 291, 292, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 2112, 296, 0, 297, 543, 544, 0,
	301, 298, 299, 0, 302, 300, 0, 303, 304, 305,
	0, 0, 306, 307, 308, 0, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 545, 316, 317, 318, 320,
	322, 319, 323, 324, 325, 326, 546, 547, 0, 245,
	0, 0, 0, 0, 0, 327, 328, 329, 548, 0,
	0, 0, 330, 0, 331, 0, 0, 0, 332, 333,
	549, 550, 334, 335, 0, 336, 551, 0, 552, 337,
	0, 338, 339, 340, 341, 342, 553, 554, 555, 400,
	0, 343, 344, 0, 345, 346, 347, 348, 0, 0,
	0, 246, 349, 350, 352, 0, 0, 351, 556, 557,
	0, 558, 0, 353, 354, 0, 559, 0, 355, 356,
	357, 0, 358, 0, 0, 0, 359, 360, 361, 362,
	363, 364, 0, 365, 367, 366, 0, 368, 560, 0,
	369, 370, 0, 0, 371, 372, 373, 0, 0, 374,
	375, 376, 377, 0, 378, 379, 381, 383, 380, 382,
	387, 384, 385, 386, 389, 0, 388, 0, 390, 391,
	392, 396, 395, 397, 394, 0, 393, 0, 247, 0,
	398, 0, 561, 399, 562, 401, 402, 0, 0, 403,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 409,
	563, 0, 410, 0, 564, 411, 412, 404, 413, 414,
	415, 416, 417, 418, 419, 420, 0, 421, 422, 565,
	566, 567, 423, 568, 424, 425, 0, 426, 0, 427,
	428, 429, 430, 431, 432, 433, 569, 435, 434, 436,
	0, 437, 0, 0, 0, 0, 0, 438, 0, 440,
	441, 442, 439, 443, 444, 445, 446, 0, 447, 448,
	449, 0, 450, 451, 452, 453, 570, 454, 0, 455,
	456, 462, 463, 457, 458, 464, 465, 466, 467, 468,
	0, 470, 471, 469, 472, 473, 474, 0, 475, 459,
	460, 476, 477, 0, 478, 479, 480, 481, 482, 483,
	571, 0, 484, 0, 485, 486, 487, 488, 461, 489,
	494, 572, 490, 491, 492, 493, 573, 0, 496, 497,
	0, 495, 0, 498, 499, 500, 501, 502, 503, 321,
	504, 0, 505, 574, 575, 576, 577, 0, 512, 0,
	506, 507, 578, 508, 579, 0, 509, 510, 511, 0,
	513, 514, 0, 0, 515, 516, 517, 519, 520, 518,
	521, 0, 522, 0, 0, 523, 524, 525, 580, 581,
	582, 242, 527, 526, 583, 0, 0, 0, 0, 528,
	529, 584, 530, 531, 532, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 0, 254, 255, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 534, 535, 0, 264, 536,
	265, 537, 0, 538, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 539, 540, 541, 0, 272, 273, 542,
	0, 0, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 0, 285, 0, 286,
	287, 288, 289, 0, 290, 0, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 2110, 296, 0,
	297, 543, 544, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 307, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 545,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	546, 547, 0, 245, 0, 0, 0, 0, 0, 327,
	328, 329, 548, 0, 0, 0, 330, 0, 331, 0,
	0, 0, 332, 333, 549, 550, 334, 335, 0, 336,
	551, 0, 552, 337, 0, 338, 339, 340, 341, 342,
	553, 554, 555, 400, 0, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 246, 349, 350, 352, 0,
	0, 351, 556, 557, 0, 558, 0, 353, 354, 0,
	559, 0, 355, 356, 357, 0, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 560, 0, 369, 370, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	388, 0, 390, 391, 392, 396, 395, 397, 394, 0,
	393, 0, 247, 0, 398, 0, 561, 399, 562, 401,
	402, 0, 0, 403, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 409, 563, 0, 410, 0, 564, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 565, 566, 567, 423, 568, 424, 425,
	0, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 0, 450, 451, 452, 453,
	570, 454, 0, 455, 456, 462, 463, 457, 458, 464,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 473,
	474, 0, 475, 459, 460, 476, 477, 0, 478, 479,
	480, 481, 482, 483, 571, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 572, 490, 491, 492, 493,
	573, 0, 496, 497, 0, 495, 0, 498, 499, 500,
	501, 502, 503, 321, 504, 0, 505, 574, 575, 576,
	577, 0, 512, 0, 506, 507, 578, 508, 579, 0,
	509, 510, 511, 0, 513, 514, 0, 0, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 580, 581, 582, 242, 527, 526, 583, 0,
	0, 0, 0, 528, 529, 584, 530, 531, 532, 0,
	0, 0, 248, 249, 250, 251, 252, 253, 0, 254,
	255, 0, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 256, 257, 259, 258, 260, 261, 262, 263, 534,
	535, 0, 264, 536, 265, 537, 0, 538, 266, 267,
	268, 269, 270, 0, 0, 0, 271, 539, 540, 541,
	0, 272, 273, 542, 0, 0, 0, 274, 275, 276,
	277, 278, 279, 280, 0, 0, 282, 283, 284, 281,
	0, 285, 0, 286, 287, 288, 289, 0, 290, 0,
	291, 292, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 295, 296, 0, 297, 543, 544, 0, 301, 298,
	299, 0, 302, 300, 0, 303, 304, 305, 0, 0,
	306, 307, 308, 0, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 545, 316, 317, 318, 320, 322, 319,
	323, 324, 325, 326, 546, 547, 0, 245, 0, 0,
	0, 0, 0, 327, 328, 329, 548, 0, 0, 0,
	330, 0, 331, 0, 0, 0, 332, 333, 549, 550,
	334, 335, 0, 336, 551, 0, 552, 337, 0, 338,
	339, 340, 341, 342, 2046, 554, 555, 400, 0, 343,
	344, 0, 345, 346, 347, 348, 0, 0, 0, 246,
	349, 350, 352, 0, 0, 351, 556, 557, 0, 558,
	0, 353, 354, 0, 559, 0, 355, 356, 357, 0,
	358, 0, 0, 0, 359, 360, 361, 362, 363, 364,
	0, 365, 367, 366, 0, 368, 560, 0, 369, 370,
	0, 0, 371, 372, 373, 0, 0, 374, 375, 376,
	377, 0, 378, 379, 381, 383, 380, 382, 387, 384,
	385, 386, 389, 0, 388, 0, 390, 391, 392, 396,
	395, 397, 394, 0, 393, 0, 247, 0, 398, 0,
	561, 399, 562, 401, 402, 0, 0, 403, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 409, 563, 0,
	410, 0, 564, 411, 412, 404, 413, 414, 415, 416,
	417, 418, 419, 420, 0, 421, 422, 565, 566, 567,
	423, 568, 424, 425, 0, 426, 0, 427, 428, 429,
	430, 431, 432, 433, 569, 435, 434, 436, 0, 437,
	0, 0, 0, 0, 0, 438, 0, 440, 441, 442,
	439, 443, 444, 445, 446, 0, 447, 448, 449, 0,
	450, 451, 452, 453, 570, 454, 0, 455, 456, 462,
	463, 457, 458, 464, 465, 466, 467, 468, 0, 470,
	471, 469, 472, 473, 474, 0, 475, 459, 460, 476,
	477, 0, 478, 479, 480, 481, 482, 483, 571, 0,
	484, 0, 485, 486, 487, 488, 461, 489, 494, 572,
	490, 491, 492, 493, 573, 0, 496, 497, 0, 495,
	0, 498, 499, 500, 501, 502, 503, 321, 504, 0,
	505, 574, 575, 576, 577, 0, 512, 0, 506, 507,
	578, 508, 579, 0, 509, 510, 511, 0, 513, 514,
	0, 0, 515, 516, 517, 519, 520, 518, 521, 0,
	522, 0, 0, 523, 524, 525, 580, 581, 582, 242,
	527, 526, 583, 0, 0, 0, 0, 528, 529, 584,
	530, 531, 532, 0, 0, 0, 248, 249, 250, 251,
	252, 253, 0, 254, 255, 0, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 256, 257, 259, 258, 260,
	261, 262, 263, 534, 535, 0, 264, 536, 265, 537,
	0, 538, 266, 267, 268, 269, 270, 0, 0, 0,
	271, 539, 540, 541, 0, 272, 273, 542, 0, 0,
	0, 274, 275, 276, 277, 278, 279, 280, 0, 0,
	282, 283, 284, 281, 0, 285, 0, 286, 287, 288,
	289, 0, 290, 0, 291, 292, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 295, 296, 0, 297, 543,
	544, 0, 301, 298, 299, 0, 302, 300, 0, 303,
	304, 305, 0, 0, 306, 307, 308, 0, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 545, 316, 317,
	318, 320, 322, 319, 323, 324, 325, 326, 546, 547,
	0, 245, 0, 0, 0, 0, 0, 327, 328, 329,
	548, 0, 0, 0, 330, 0, 331, 0, 0, 0,
	332, 333, 549, 550, 334, 335, 0, 336, 551, 0,
	552, 337, 0, 338, 339, 340, 341, 342, 2040, 554,
	555, 400, 0, 343, 344, 0, 345, 346, 347, 348,
	0, 0, 0, 246, 349, 350, 352, 0, 0, 351,
	556, 557, 0, 558, 0, 353, 354, 0, 559, 0,
	355, 356, 357, 0, 358, 0, 0, 0, 359, 360,
	361, 362, 363, 364, 0, 365, 367, 366, 0, 368,
	560, 0, 369, 370, 0, 0, 371, 372, 373, 0,
	0, 374, 375, 376, 377, 0, 378, 379, 381, 383,
	380, 382, 387, 384, 385, 386, 389, 0, 388, 0,
	390, 391, 392, 396, 395, 397, 394, 0, 393, 0,
	247, 0, 398, 0, 561, 399, 562, 401, 402, 0,
	0, 403, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 409, 563, 0, 410, 0, 564, 411, 412, 404,
	413, 414, 415, 416, 417, 418, 419, 420, 0, 421,
	422, 565, 566, 567, 423, 568, 424, 425, 0, 426,
	0, 427, 428, 429, 430, 431, 432, 433, 569, 435,
	434, 436, 0, 437, 0, 0, 0, 0, 0, 438,
	0, 440, 441, 442, 439, 443, 444, 445, 446, 0,
	447, 448, 449, 0, 450, 451, 452, 453, 570, 454,
	0, 455, 456, 462, 463, 457, 458, 464, 465, 466,
	467, 468, 0, 470, 471, 469, 472, 473, 474, 0,
	475, 459, 460, 476, 477, 0, 478, 479, 480, 481,
	482, 483, 571, 0, 484, 0, 485, 486, 487, 488,
	461, 489, 494, 572, 490, 491, 492, 493, 573, 0,
	496, 497, 0, 495, 0, 498, 499, 500, 501, 502,
	503, 321, 504, 0, 505, 574, 575, 576, 577, 0,
	512, 0, 506, 507, 578, 508, 579, 0, 509, 510,
	511, 0, 513, 514, 0, 0, 515, 516, 517, 519,
	520, 518, 521, 0, 522, 0, 0, 523, 524, 525,
	580, 581, 582, 242, 527, 526, 583, 0, 0, 0,
	0, 528, 529, 584, 530, 531, 532, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 541, 0, 272,
	273, 542, 0, 0, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 0, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 245, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 0, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 2009, 554, 555, 400, 0, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 246, 349, 350,
	352, 0, 0, 351, 556, 557, 0, 558, 0, 353,
	354, 0, 559, 0, 355, 356, 357, 0, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 0, 369, 370, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 388, 0, 390, 391, 392, 396, 395, 397,
	394, 0, 393, 0, 247, 0, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 0, 410, 0,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 0, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 462, 463, 457,
	458, 464, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 473, 474, 0, 475, 459, 460, 476, 477, 0,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 0, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 574,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 0, 527, 526,
	583, 774, 0, 242, 0, 528, 529, 584, 530, 531,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 541, 0, 272,
	273, 542, 0, 0, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 0, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 0, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 553, 554, 555, 400, 0, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 0, 349, 350,
	352, 0, 0, 351, 556, 557, 0, 558, 773, 353,
	354, 0, 559, 0, 355, 356, 357, 0, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 0, 369, 370, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 388, 0, 390, 391, 392, 396, 395, 397,
	394, 0, 393, 0, 0, 0, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 0, 410, 0,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 0, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 462, 463, 457,
	458, 464, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 473, 474, 0, 475, 459, 460, 476, 477, 0,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 772, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 574,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 242, 527, 526,
	583, 0, 0, 0, 0, 528, 529, 584, 530, 531,
	532, 0, 0, 0, 248, 249, 250, 251, 252, 253,
	0, 254, 255, 0, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 256, 257, 259, 258, 260, 261, 262,
	263, 534, 535, 0, 264, 536, 265, 537, 0, 538,
	266, 267, 268, 269, 270, 0, 0, 0, 271, 539,
	540, 541, 0, 272, 273, 542, 0, 0, 0, 274,
	275, 276, 277, 278, 279, 280, 0, 0, 282, 283,
	284, 281, 0, 285, 0, 286, 287, 288, 289, 0,
	290, 0, 291, 292, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 295, 296, 0, 297, 543, 544, 0,
	301, 298, 299, 0, 302, 300, 0, 303, 304, 305,
	0, 0, 306, 307, 308, 0, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 545, 316, 317, 318, 320,
	322, 319, 323, 324, 325, 326, 546, 547, 0, 2694,
	0, 0, 0, 0, 0, 327, 328, 329, 548, 0,
	0, 0, 330, 0, 331, 0, 0, 0, 332, 333,
	549, 550, 334, 335, 0, 336, 551, 0, 552, 337,
	0, 338, 339, 340, 341, 342, 553, 554, 555, 400,
	0, 343, 344, 0, 345, 346, 347, 348, 0, 0,
	0, 0, 349, 350, 352, 0, 0, 351, 556, 557,
	0, 558, 0, 353, 354, 0, 559, 0, 355, 356,
	357, 0, 358, 0, 0, 0, 359, 360, 361, 362,
	363, 364, 0, 365, 367, 366, 0, 368, 560, 0,
	369, 370, 0, 0, 371, 372, 373, 0, 0, 374,
	375, 376, 377, 0, 378, 379, 381, 383, 380, 382,
	387, 384, 385, 386, 389, 0, 388, 0, 390, 391,
	392, 396, 395, 397, 394, 0, 393, 0, 0, 0,
	398, 0, 561, 399, 562, 401, 402, 0, 0, 403,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 409,
	563, 0, 410, 0, 564, 411, 412, 404, 413, 414,
	415, 416, 417, 418, 419, 420, 0, 421, 422, 565,
	566, 567, 423, 568, 424, 425, 3686, 426, 0, 427,
	428, 429, 430, 431, 432, 433, 569, 435, 434, 436,
	0, 437, 0, 0, 0, 0, 0, 438, 0, 440,
	441, 442, 439, 443, 444, 445, 446, 0, 447, 448,
	449, 0, 450, 451, 452, 453, 570, 454, 0, 455,
	456, 462, 463, 457, 458, 464, 465, 466, 467, 468,
	0, 470, 471, 469, 472, 473, 474, 0, 475, 459,
	460, 476, 477, 0, 478, 479, 480, 481, 482, 483,
	571, 0, 484, 0, 485, 486, 487, 488, 461, 489,
	494, 572, 490, 491, 492, 493, 573, 0, 496, 497,
	0, 495, 0, 498, 499, 500, 501, 502, 503, 321,
	504, 0, 505, 574, 575, 576, 577, 0, 512, 0,
	506, 507, 578, 508, 579, 0, 509, 510, 511, 0,
	513, 514, 0, 0, 515, 516, 517, 519, 520, 518,
	521, 0, 522, 0, 0, 523, 524, 525, 580, 581,
	582, 0, 527, 526, 583, 595, 0, 242, 0, 528,
	529, 584, 530, 531, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 249, 250, 251, 252, 253,
	594, 254, 255, 0, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 256, 257, 259, 258, 260, 261, 262,
	263, 534, 535, 0, 264, 536, 265, 537, 0, 538,
	266, 267, 268, 269, 270, 0, 0, 0, 271, 539,
	540, 541, 0, 272, 273, 542, 0, 0, 0, 274,
	275, 276, 277, 278, 279, 280, 0, 0, 282, 283,
	284, 281, 0, 285, 0, 286, 287, 288, 289, 0,
	290, 0, 291, 292, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 295, 296, 0, 297, 543, 544, 0,
	301, 298, 299, 0, 302, 300, 0, 303, 304, 305,
	0, 0, 306, 307, 308, 0, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 545, 316, 317, 318, 320,
	322, 319, 323, 324, 325, 326, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 548, 0,
	0, 0, 330, 0, 331, 0, 0, 0, 332, 333,
	549, 550, 334, 335, 0, 336, 551, 0, 552, 337,
	0, 338, 339, 340, 341, 342, 553, 554, 555, 400,
	0, 343, 344, 0, 345, 346, 347, 348, 0, 0,
	0, 0, 349, 350, 352, 0, 0, 351, 556, 557,
	0, 558, 0, 353, 354, 0, 559, 0, 355, 356,
	357, 0, 358, 0, 0, 0, 359, 360, 361, 362,
	363, 364, 0, 365, 367, 366, 0, 368, 560, 0,
	369, 370, 0, 0, 371, 372, 373, 0, 0, 374,
	375, 376, 377, 0, 378, 379, 381, 383, 380, 382,
	387, 384, 385, 386, 389, 0, 388, 0, 390, 391,
	392, 396, 395, 397, 394, 0, 393, 0, 0, 0,
	398, 0, 561, 399, 562, 401, 402, 0, 0, 403,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 409,
	563, 0, 410, 0, 564, 411, 412, 404, 413, 414,
	415, 416, 417, 418, 419, 420, 0, 421, 422, 565,
	566, 567, 423, 568, 593, 425, 0, 426, 0, 427,
	428, 429, 430, 431, 432, 433, 569, 435, 434, 436,
	0, 437, 0, 0, 0, 0, 0, 438, 0, 440,
	441, 442, 439, 443, 444, 445, 446, 0, 447, 448,
	449, 0, 450, 451, 452, 453, 570, 454, 0, 455,
	456, 462, 463, 457, 458, 464, 465, 466, 467, 468,
	0, 470, 471, 469, 472, 473, 474, 0, 475, 459,
	460, 476, 477, 0, 478, 479, 480, 481, 482, 483,
	571, 0, 484, 0, 485, 486, 487, 488, 461, 489,
	494, 572, 490, 491, 492, 493, 573, 0, 496, 497,
	0, 495, 0, 498, 499, 500, 501, 502, 503, 321,
	504, 0, 505, 574, 575, 576, 577, 0, 512, 0,
	506, 507, 578, 508, 579, 0, 509, 510, 511, 0,
	513, 514, 0, 0, 515, 516, 517, 519, 520, 518,
	521, 0, 522, 0, 0, 523, 524, 525, 580, 581,
	582, 0, 527, 526, 583, 242, 2681, 0, 0, 528,
	529, 584, 530, 531, 532, 0, 0, 0, 0, 0,
	0, 0, 248, 249, 250, 251, 252, 253, 0, 254,
	255, 0, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 256, 257, 259, 258, 260, 261, 262, 263, 534,
	535, 0, 264, 536, 265, 537, 0, 538, 266, 267,
	268, 269, 270, 0, 0, 0, 271, 539, 540, 541,
	0, 272, 273, 542, 0, 0, 0, 274, 275, 276,
	277, 278, 279, 280, 0, 0, 282, 283, 284, 281,
	0, 285, 0, 286, 287, 288, 289, 0, 290, 0,
	291, 292, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 295, 296, 0, 297, 543, 544, 0, 301, 298,
	299, 0, 302, 300, 0, 303, 304, 305, 0, 0,
	306, 307, 308, 0, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 545, 316, 317, 318, 320, 322, 319,
	323, 324, 325, 326, 546, 547, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 548, 0, 0, 0,
	330, 0, 331, 0, 0, 0, 332, 333, 549, 550,
	334, 335, 0, 336, 551, 0, 552, 337, 0, 338,
	339, 340, 341, 342, 553, 554, 555, 400, 0, 343,
	344, 0, 345, 346, 347, 348, 0, 0, 0, 0,
	349, 350, 352, 0, 0, 351, 556, 557, 0, 558,
	0, 353, 354, 0, 559, 0, 355, 356, 357, 0,
	358, 0, 0, 0, 359, 360, 361, 362, 363, 364,
	0, 365, 367, 366, 0, 368, 560, 0, 369, 370,
	0, 0, 371, 372, 373, 0, 0, 374, 375, 376,
	377, 0, 378, 379, 381, 383, 380, 382, 387, 384,
	385, 386, 389, 0, 388, 0, 390, 391, 392, 396,
	395, 397, 394, 0, 393, 0, 0, 0, 398, 0,
	561, 399, 562, 401, 402, 0, 0, 403, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 409, 563, 0,
	410, 0, 564, 411, 412, 404, 413, 414, 415, 416,
	417, 418, 419, 420, 0, 421, 422, 565, 566, 567,
	423, 568, 424, 425, 0, 426, 0, 427, 428, 429,
	430, 431, 432, 433, 569, 435, 434, 436, 0, 437,
	0, 0, 0, 0, 0, 438, 0, 440, 441, 442,
	439, 443, 444, 445, 446, 0, 447, 448, 449, 0,
	450, 451, 452, 453, 570, 454, 0, 455, 456, 462,
	463, 457, 458, 464, 465, 466, 467, 468, 0, 470,
	471, 469, 472, 473, 474, 0, 475, 459, 460, 476,
	477, 0, 478, 479, 480, 481, 482, 483, 571, 0,
	484, 0, 485, 486, 487, 488, 461, 489, 494, 572,
	490, 491, 492, 493, 573, 0, 496, 497, 0, 495,
	0, 498, 499, 500, 501, 502, 503, 321, 504, 0,
	505, 574, 575, 576, 577, 0, 512, 0, 506, 507,
	578, 508, 579, 0, 509, 510, 511, 0, 513, 514,
	0, 0, 515, 516, 517, 519, 520, 518, 521, 0,
	522, 0, 0, 523, 524, 525, 580, 581, 582, 0,
	527, 526, 583, 242, 3696, 0, 0, 528, 529, 584,
	530, 531, 532, 0, 0, 0, 0, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 541, 0, 272,
	273, 542, 0, 0, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 0, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 0, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 553, 554, 555, 400, 0, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 0, 349, 350,
	352, 0, 0, 351, 556, 557, 0, 558, 0, 353,
	354, 0, 559, 0, 355, 356, 357, 0, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 0, 369, 370, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 388, 0, 390, 391, 392, 396, 395, 397,
	394, 0, 393, 0, 0, 0, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 0, 410, 0,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 0, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 462, 463, 457,
	458, 464, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 473, 474, 0, 475, 459, 460, 476, 477, 0,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 0, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 574,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 242, 527, 526,
	583, 0, 0, 0, 0, 528, 529, 584, 530, 531,
	532, 0, 0, 0, 248, 249, 250, 251, 252, 253,
	0, 254, 255, 0, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 256, 257, 259, 258, 260, 261, 262,
	263, 534, 535, 0, 264, 536, 265, 537, 0, 538,
	266, 267, 268, 269, 270, 0, 0, 0, 271, 539,
	540, 541, 0, 272, 273, 542, 0, 0, 0, 274,
	275, 276, 277, 278, 279, 280, 0, 0, 282, 283,
	284, 281, 0, 285, 0, 286, 287, 288, 289, 0,
	290, 0, 291, 292, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 295, 296, 0, 297, 543, 544, 3407,
	301, 298, 299, 0, 302, 300, 0, 303, 304, 305,
	0, 0, 306, 307, 308, 0, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 545, 316, 317, 318, 320,
	322, 319, 323, 324, 325, 326, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 548, 0,
	0, 0, 330, 0, 331, 0, 0, 0, 332, 333,
	549, 550, 334, 335, 0, 336, 551, 0, 552, 337,
	0, 338, 339, 340, 341, 342, 553, 554, 555, 400,
	0, 343, 344, 0, 345, 346, 347, 348, 0, 0,
	0, 0, 349, 350, 352, 0, 0, 351, 556, 557,
	0, 558, 0, 353, 354, 0, 559, 0, 355, 356,
	357, 0, 358, 0, 0, 0, 359, 360, 361, 362,
	363, 364, 0, 365, 367, 366, 0, 368, 560, 0,
	369, 370, 0, 0, 371, 372, 373, 0, 0, 374,
	375, 376, 377, 0, 378, 379, 381, 383, 380, 382,
	387, 384, 385, 386, 389, 0, 388, 0, 390, 391,
	392, 396, 395, 397, 394, 0, 393, 0, 0, 0,
	398, 0, 561, 399, 562, 401, 402, 0, 0, 403,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 409,
	563, 0, 410, 0, 564, 411, 412, 404, 413, 414,
	415, 416, 417, 418, 419, 420, 0, 421, 422, 565,
	566, 567, 423, 568, 424, 425, 0, 426, 0, 427,
	428, 429, 430, 431, 432, 433, 569, 435, 434, 436,
	0, 437, 0, 0, 0, 0, 0, 438, 0, 440,
	441, 442, 439, 443, 444, 445, 446, 0, 447, 448,
	449, 0, 450, 451, 452, 453, 570, 454, 0, 455,
	456, 462, 463, 457, 458, 464, 465, 466, 467, 468,
	0, 470, 471, 469, 472, 473, 474, 0, 475, 459,
	460, 476, 477, 0, 478, 479, 480, 481, 482, 483,
	571, 0, 484, 0, 485, 486, 487, 488, 461, 489,
	494, 572, 490, 491, 492, 493, 573, 0, 496, 497,
	0, 495, 0, 498, 499, 500, 501, 502, 503, 321,
	504, 0, 505, 574, 575, 576, 577, 0, 512, 0,
	506, 507, 578, 508, 579, 0, 509, 510, 511, 0,
	513, 514, 0, 0, 515, 516, 517, 519, 520, 518,
	521, 0, 522, 0, 0, 523, 524, 525, 580, 581,
	582, 242, 527, 526, 583, 0, 0, 0, 0, 528,
	529, 584, 530, 531, 532, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 0, 254, 255, 0, 0, 0,
	0, 0, 533, 0, 2419, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 534, 535, 0, 264, 536,
	265, 537, 0, 538, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 539, 540, 541, 0, 272, 273, 542,
	0, 0, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 0, 285, 0, 286,
	287, 288, 289, 0, 290, 0, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 295, 296, 0,
	297, 543, 544, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 307, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 545,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	546, 547, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 548, 0, 0, 0, 330, 0, 331, 0,
	0, 0, 332, 333, 549, 550, 334, 335, 0, 336,
	551, 0, 552, 337, 0, 338, 339, 340, 341, 342,
	553, 554, 555, 400, 0, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 0, 349, 350, 352, 0,
	0, 351, 556, 557, 0, 558, 0, 353, 354, 0,
	559, 0, 355, 356, 357, 0, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 560, 0, 369, 370, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	388, 0, 390, 391, 392, 396, 395, 397, 394, 0,
	393, 0, 0, 0, 398, 0, 561, 399, 562, 401,
	402, 0, 0, 403, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 409, 563, 0, 410, 0, 564, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 565, 566, 567, 423, 568, 424, 425,
	0, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 0, 450, 451, 452, 453,
	570, 454, 0, 455, 456, 462, 463, 457, 458, 464,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 473,
	474, 0, 475, 459, 460, 476, 477, 0, 478, 479,
	480, 481, 482, 483, 571, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 572, 490, 491, 492, 493,
	573, 0, 496, 497, 0, 495, 0, 498, 499, 500,
	501, 502, 503, 321, 504, 0, 505, 574, 575, 576,
	577, 0, 512, 0, 506, 507, 578, 508, 579, 0,
	509, 510, 511, 0, 513, 514, 0, 0, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 580, 581, 582, 0, 527, 526, 583, 242,
	2681, 0, 0, 528, 529, 584, 530, 531, 532, 0,
	0, 0, 0, 0, 0, 0, 248, 249, 250, 251,
	252, 253, 0, 254, 255, 0, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 256, 257, 259, 258, 260,
	261, 262, 263, 534, 535, 0, 264, 536, 265, 537,
	0, 538, 266, 267, 268, 269, 270, 0, 0, 0,
	271, 539, 540, 541, 0, 272, 273, 542, 0, 0,
	0, 274, 275, 276, 277, 278, 279, 280, 0, 0,
	282, 283, 284, 281, 0, 285, 0, 286, 287, 288,
	289, 0, 290, 0, 291, 292, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 295, 296, 0, 297, 543,
	544, 0, 301, 298, 299, 0, 302, 300, 0, 303,
	304, 305, 0, 0, 306, 307, 308, 0, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 545, 316, 317,
	318, 320, 322, 319, 323, 324, 325, 326, 546, 547,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	548, 0, 0, 0, 330, 0, 331, 0, 0, 0,
	332, 333, 549, 550, 334, 335, 0, 336, 551, 0,
	552, 337, 0, 338, 339, 340, 341, 342, 553, 554,
	555, 400, 0, 343, 344, 0, 345, 346, 347, 348,
	0, 0, 0, 0, 349, 350, 352, 0, 0, 351,
	556, 557, 0, 558, 0, 353, 354, 0, 559, 0,
	355, 356, 357, 0, 358, 0, 0, 0, 359, 360,
	361, 362, 363, 364, 0, 365, 367, 366, 0, 368,
	560, 0, 369, 370, 0, 0, 371, 372, 373, 0,
	0, 374, 375, 376, 377, 0, 378, 379, 381, 383,
	380, 382, 387, 384, 385, 386, 389, 0, 388, 0,
	390, 391, 392, 396, 395, 397, 394, 0, 393, 0,
	0, 0, 398, 0, 561, 399, 562, 401, 402, 0,
	0, 403, 0, 0, 0, 405, 406, 2678, 0, 0,
	408, 409, 563, 0, 410, 0, 564, 411, 412, 404,
	413, 414, 415, 416, 417, 418, 419, 420, 0, 421,
	422, 565, 566, 567, 423, 568, 424, 425, 0, 426,
	0, 427, 428, 429, 430, 431, 432, 433, 569, 435,
	434, 436, 0, 437, 0, 0, 0, 0, 0, 438,
	0, 440, 441, 442, 439, 443, 444, 445, 446, 0,
	447, 448, 449, 0, 450, 451, 452, 453, 570, 454,
	0, 455, 456, 462, 463, 457, 458, 464, 465, 466,
	467, 468, 0, 470, 471, 469, 472, 473, 474, 0,
	475, 459, 460, 476, 477, 0, 478, 479, 480, 481,
	482, 483, 571, 0, 484, 0, 485, 486, 487, 488,
	461, 489, 494, 572, 490, 491, 492, 493, 573, 0,
	496, 497, 0, 495, 0, 498, 499, 500, 501, 502,
	503, 321, 504, 0, 505, 574, 575, 576, 577, 0,
	512, 0, 506, 507, 578, 508, 579, 0, 509, 510,
	511, 0, 513, 514, 0, 0, 515, 516, 517, 519,
	520, 518, 521, 0, 522, 0, 0, 523, 524, 525,
	580, 581, 582, 242, 527, 526, 583, 0, 0, 0,
	0, 528, 529, 584, 530, 531, 532, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 2091, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 541, 0, 272,
	273, 542, 0, 0, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 0, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 0, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 553, 554, 555, 400, 0, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 0, 349, 350,
	352, 0, 0, 351, 556, 557, 0, 558, 0, 353,
	354, 0, 559, 0, 355, 356, 357, 0, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 0, 369, 370, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 388, 0, 390, 391, 392, 396, 395, 397,
	394, 0, 393, 0, 0, 0, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 0, 410, 0,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 0, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 462, 463, 457,
	458, 464, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 473, 474, 0, 475, 459, 460, 476, 477, 0,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 0, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 574,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 0, 527, 526,
	583, 2079, 0, 242, 0, 528, 529, 584, 530, 531,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 541, 0, 272,
	273, 542, 0, 0, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 0, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 0, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 553, 554, 555, 400, 0, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 0, 349, 350,
	352, 0, 0, 351, 556, 557, 0, 558, 0, 353,
	354, 0, 559, 0, 355, 356, 357, 0, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 0, 369, 370, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 388, 0, 390, 391, 392, 396, 395, 397,
	394, 0, 393, 0, 0, 0, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 0, 410, 0,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 0, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 462, 463, 457,
	458, 464, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 473, 474, 0, 475, 459, 460, 476, 477, 0,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 0, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 574,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 0, 527, 526,
	583, 638, 0, 242, 0, 528, 529, 584, 530, 531,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 256,
	257, 1145, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 1143, 0, 272,
	273, 542, 0, 0, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 0, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 0, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 553, 554, 555, 400, 0, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 0, 349, 350,
	352, 0, 0, 351, 556, 557, 0, 558, 0, 353,
	354, 0, 559, 0, 355, 356, 357, 0, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 0, 369, 370, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 639, 0, 390, 391, 392, 396, 395, 397,
	394, 0, 393, 0, 0, 0, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 0, 410, 0,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 0, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 462, 463, 457,
	458, 635, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 1146, 474, 0, 475, 459, 460, 476, 477, 0,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 0, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 634,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 0, 527, 526,
	583, 638, 0, 242, 0, 528, 529, 584, 530, 531,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 541, 0, 272,
	628, 542, 0, 0, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 0, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 0, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 553, 554, 555, 400, 0, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 0, 349, 350,
	352, 0, 0, 351, 556, 557, 0, 558, 0, 353,
	354, 0, 559, 0, 355, 356, 357, 0, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 0, 369, 370, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 639, 0, 390, 391, 392, 396, 395, 397,
	394, 0, 393, 0, 0, 0, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 0, 410, 0,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 0, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 462, 463, 457,
	458, 635, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 1454, 474, 0, 475, 459, 460, 476, 477, 0,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 0, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 634,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 0, 527, 526,
	583, 1435, 0, 242, 0, 528, 529, 584, 530, 531,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 541, 0, 272,
	273, 542, 0, 0, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 0, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 0, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 1434, 554, 555, 400, 0, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 0, 349, 350,
	352, 0, 0, 351, 556, 557, 0, 558, 0, 353,
	354, 0, 559, 0, 355, 356, 357, 0, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 0, 369, 370, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 388, 0, 390, 391, 392, 396, 395, 397,
	394, 0, 393, 0, 0, 0, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 0, 410, 0,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 0, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 462, 463, 457,
	458, 464, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 473, 474, 0, 475, 459, 460, 476, 477, 0,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 0, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 574,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 0, 527, 526,
	583, 1428, 0, 242, 0, 528, 529, 584, 530, 531,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 541, 0, 272,
	273, 542, 0, 0, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 0, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 0, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 1427, 554, 555, 400, 0, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 0, 349, 350,
	352, 0, 0, 351, 556, 557, 0, 558, 0, 353,
	354, 0, 559, 0, 355, 356, 357, 0, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 0, 369, 370, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 388, 0, 390, 391, 392, 396, 395, 397,
	394, 0, 393, 0, 0, 0, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 0, 410, 0,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 0, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 462, 463, 457,
	458, 464, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 473, 474, 0, 475, 459, 460, 476, 477, 0,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 0, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 574,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 0, 527, 526,
	583, 1377, 0, 242, 0, 528, 529, 584, 530, 531,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 541, 0, 272,
	273, 542, 0, 0, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 0, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 0, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 1376, 554, 555, 400, 0, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 0, 349, 350,
	352, 0, 0, 351, 556, 557, 0, 558, 0, 353,
	354, 0, 559, 0, 355, 356, 357, 0, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 0, 369, 370, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 388, 0, 390, 391, 392, 396, 395, 397,
	394, 0, 393, 0, 0, 0, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 0, 410, 0,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 0, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 462, 463, 457,
	458, 464, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 473, 474, 0, 475, 459, 460, 476, 477, 0,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 0, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 574,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 0, 527, 526,
	583, 1362, 0, 242, 0, 528, 529, 584, 530, 531,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 541, 0, 272,
	273, 542, 0, 0, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 0, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 0, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 1361, 554, 555, 400, 0, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 0, 349, 350,
	352, 0, 0, 351, 556, 557, 0, 558, 0, 353,
	354, 0, 559, 0, 355, 356, 357, 0, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 0, 369, 370, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 388, 0, 390, 391, 392, 396, 395, 397,
	394, 0, 393, 0, 0, 0, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 0, 410, 0,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 0, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 462, 463, 457,
	458, 464, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 473, 474, 0, 475, 459, 460, 476, 477, 0,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 0, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 574,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 0, 527, 526,
	583, 1357, 0, 242, 0, 528, 529, 584, 530, 531,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 541, 0, 272,
	273, 542, 0, 0, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 0, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 0, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 553, 554, 555, 400, 0, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 0, 349, 350,
	352, 0, 0, 351, 556, 557, 0, 558, 0, 353,
	354, 0, 559, 0, 355, 356, 357, 0, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 0, 369, 370, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 388, 0, 390, 391, 392, 396, 395, 397,
	394, 0, 393, 0, 0, 0, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 0, 410, 0,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 0, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 462, 463, 457,
	458, 464, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 473, 474, 0, 475, 459, 460, 476, 477, 0,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 0, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 574,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 0, 527, 526,
	583, 1289, 0, 242, 0, 528, 529, 584, 530, 531,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 541, 0, 272,
	273, 542, 0, 0, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 0, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 0, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 553, 554, 555, 400, 0, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 0, 349, 350,
	352, 0, 0, 351, 556, 557, 0, 558, 0, 353,
	354, 0, 559, 0, 355, 356, 357, 0, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 0, 369, 370, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 388, 0, 390, 391, 392, 396, 395, 397,
	394, 0, 393, 0, 0, 0, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 0, 410, 0,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 0, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 462, 463, 457,
	458, 464, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 473, 474, 0, 475, 459, 460, 476, 477, 0,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 0, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 574,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 0, 527, 526,
	583, 1273, 0, 242, 0, 528, 529, 584, 530, 531,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 541, 0, 272,
	273, 542, 0, 0, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 0, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 0, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 553, 554, 555, 400, 0, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 0, 349, 350,
	352, 0, 0, 351, 556, 557, 0, 558, 0, 353,
	354, 0, 559, 0, 355, 356, 357, 0, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 0, 369, 370, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 388, 0, 390, 391, 392, 396, 395, 397,
	394, 0, 393, 0, 0, 0, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 0, 410, 0,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 0, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 462, 463, 457,
	458, 464, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 473, 474, 0, 475, 459, 460, 476, 477, 0,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 0, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 574,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 0, 527, 526,
	583, 638, 0, 242, 0, 528, 529, 584, 530, 531,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 256,
	257, 1145, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 1143, 0, 272,
	273, 542, 0, 0, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 0, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 0, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 553, 554, 555, 400, 0, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 0, 349, 350,
	352, 0, 0, 351, 556, 557, 0, 558, 0, 353,
	354, 0, 559, 0, 355, 356, 357, 0, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 0, 369, 370, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 639, 0, 390, 391, 392, 396, 395, 397,
	394, 0, 393, 0, 0, 0, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 0, 410, 0,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 0, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 462, 463, 457,
	458, 635, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 1146, 474, 0, 475, 459, 460, 476, 477, 0,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 0, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 634,
	575, 576, 577, 0, 512, 0, 506, 1144, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 242, 527, 526,
	583, 0, 0, 0, 0, 528, 529, 584, 530, 531,
	532, 0, 0, 0, 248, 249, 250, 251, 252, 253,
	1126, 254, 255, 0, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 256, 257, 259, 258, 260, 261, 262,
	263, 534, 535, 0, 264, 536, 265, 537, 0, 538,
	266, 267, 268, 269, 270, 0, 0, 0, 271, 539,
	540, 541, 0, 272, 273, 542, 0, 0, 0, 274,
	275, 276, 277, 278, 279, 280, 0, 0, 282, 283,
	284, 281, 0, 285, 0, 286, 287, 288, 289, 0,
	290, 0, 291, 292, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 295, 296, 0, 297, 543, 544, 0,
	301, 298, 299, 0, 302, 300, 0, 303, 304, 305,
	0, 0, 306, 307, 308, 0, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 545, 316, 317, 318, 320,
	322, 319, 323, 324, 325, 326, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 548, 0,
	0, 0, 330, 0, 331, 0, 0, 0, 332, 333,
	549, 550, 334, 335, 0, 336, 551, 0, 552, 337,
	0, 338, 339, 340, 341, 342, 553, 554, 555, 400,
	0, 343, 344, 0, 345, 346, 347, 348, 0, 0,
	0, 0, 349, 350, 352, 0, 0, 351, 556, 557,
	0, 558, 0, 353, 354, 0, 559, 0, 355, 356,
	357, 0, 358, 0, 0, 0, 359, 360, 361, 362,
	363, 364, 0, 365, 367, 366, 0, 368, 560, 0,
	369, 370, 0, 0, 371, 372, 373, 0, 0, 374,
	375, 376, 377, 0, 378, 379, 381, 383, 380, 382,
	387, 384, 385, 386, 389, 0, 388, 0, 390, 391,
	392, 396, 395, 397, 394, 0, 393, 0, 0, 0,
	398, 0, 561, 399, 562, 401, 402, 0, 0, 403,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 409,
	563, 0, 410, 0, 564, 411, 412, 404, 413, 414,
	415, 416, 417, 418, 419, 420, 0, 421, 422, 565,
	566, 567, 423, 568, 424, 425, 0, 426, 0, 427,
	428, 429, 430, 431, 432, 433, 569, 435, 434, 436,
	0, 437, 0, 0, 0, 0, 0, 438, 0, 440,
	441, 442, 439, 443, 444, 445, 446, 0, 447, 448,
	449, 0, 450, 451, 452, 453, 570, 454, 0, 455,
	456, 462, 463, 457, 458, 464, 465, 466, 467, 468,
	0, 470, 471, 469, 472, 473, 474, 0, 475, 459,
	460, 476, 477, 0, 478, 479, 480, 481, 482, 483,
	571, 0, 484, 0, 485, 486, 487, 488, 461, 489,
	494, 572, 490, 491, 492, 493, 573, 0, 496, 497,
	0, 495, 0, 498, 499, 500, 501, 502, 503, 321,
	504, 0, 505, 574, 575, 576, 577, 0, 512, 0,
	506, 507, 578, 508, 579, 0, 509, 510, 511, 0,
	513, 514, 0, 0, 515, 516, 517, 519, 520, 518,
	521, 0, 522, 0, 0, 523, 524, 525, 580, 581,
	582, 242, 527, 526, 583, 0, 0, 0, 0, 528,
	529, 584, 530, 531, 532, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 644, 254, 255, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 534, 535, 0, 264, 536,
	265, 537, 0, 538, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 539, 540, 541, 0, 272, 273, 542,
	0, 0, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 0, 285, 0, 286,
	287, 288, 289, 0, 290, 0, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 295, 296, 0,
	297, 543, 544, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 307, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 545,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	546, 547, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 548, 0, 0, 0, 330, 0, 331, 0,
	0, 0, 332, 333, 549, 550, 334, 335, 0, 336,
	551, 0, 552, 337, 0, 338, 339, 340, 341, 342,
	553, 554, 555, 400, 0, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 0, 349, 350, 352, 0,
	0, 351, 556, 557, 0, 558, 0, 353, 354, 0,
	559, 0, 355, 356, 357, 0, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 560, 0, 369, 370, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	388, 0, 390, 391, 392, 396, 395, 397, 394, 0,
	393, 0, 0, 0, 398, 0, 561, 399, 562, 401,
	402, 0, 0, 403, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 409, 563, 0, 410, 0, 564, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 565, 566, 567, 423, 568, 424, 425,
	0, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 0, 450, 451, 452, 453,
	570, 454, 0, 455, 456, 462, 463, 457, 458, 464,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 473,
	474, 0, 475, 459, 460, 476, 477, 0, 478, 479,
	480, 481, 482, 483, 571, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 572, 490, 491, 492, 493,
	573, 0, 496, 497, 0, 495, 0, 498, 499, 500,
	501, 502, 503, 321, 504, 0, 505, 574, 575, 576,
	577, 0, 512, 0, 506, 507, 578, 508, 579, 0,
	509, 510, 511, 0, 513, 514, 0, 0, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 580, 581, 582, 0, 527, 526, 583, 638,
	0, 242, 0, 528, 529, 584, 530, 531, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 0, 254, 255, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 534, 535, 0, 264, 536,
	265, 537, 0, 538, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 539, 540, 541, 0, 272, 628, 542,
	0, 0, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 0, 626, 0, 286,
	287, 288, 289, 0, 290, 0, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 295, 296, 0,
	297, 543, 544, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 307, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 545,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	546, 547, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 548, 0, 0, 0, 330, 0, 331, 0,
	0, 0, 332, 333, 549, 550, 334, 335, 0, 336,
	551, 0, 552, 337, 0, 338, 339, 340, 341, 342,
	553, 554, 555, 400, 0, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 0, 349, 350, 352, 0,
	0, 351, 556, 557, 0, 558, 0, 353, 354, 0,
	559, 0, 355, 356, 357, 0, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 560, 0, 369, 370, 0, 0, 371, 372,
	627, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	639, 0, 390, 391, 392, 396, 395, 397, 394, 0,
	393, 0, 0, 0, 398, 0, 561, 399, 562, 401,
	402, 0, 0, 403, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 409, 563, 0, 410, 0, 564, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 565, 566, 567, 423, 568, 424, 425,
	0, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 0, 450, 451, 452, 453,
	629, 454, 0, 455, 456, 462, 463, 457, 458, 635,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 630,
	474, 0, 475, 459, 460, 476, 477, 0, 478, 479,
	480, 481, 482, 483, 571, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 572, 490, 491, 492, 493,
	573, 0, 496, 497, 0, 495, 0, 498, 499, 500,
	501, 502, 503, 321, 504, 0, 505, 634, 575, 576,
	577, 0, 512, 0, 506, 632, 578, 508, 579, 0,
	509, 510, 511, 0, 513, 514, 0, 0, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 580, 581, 582, 0, 527, 526, 583, 620,
	0, 242, 0, 528, 529, 584, 530, 531, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 0, 254, 255, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 534, 535, 0, 264, 536,
	265, 537, 0, 538, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 539, 540, 541, 0, 272, 273, 542,
	0, 0, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 0, 285, 0, 286,
	287, 288, 289, 0, 290, 0, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 295, 296, 0,
	297, 543, 544, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 307, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 545,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	546, 547, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 548, 0, 0, 0, 330, 0, 331, 0,
	0, 0, 332, 333, 549, 550, 334, 335, 0, 336,
	551, 0, 552, 337, 0, 338, 339, 340, 341, 342,
	553, 554, 555, 400, 0, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 0, 349, 350, 352, 0,
	0, 351, 556, 557, 0, 558, 0, 353, 354, 0,
	559, 0, 355, 356, 357, 0, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 560, 0, 369, 370, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	388, 0, 390, 391, 392, 396, 395, 397, 394, 0,
	393, 0, 0, 0, 398, 0, 561, 399, 562, 401,
	402, 0, 0, 403, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 409, 563, 0, 410, 0, 564, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 565, 566, 567, 423, 568, 424, 425,
	0, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 0, 450, 451, 452, 453,
	570, 454, 0, 455, 456, 621, 463, 457, 458, 464,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 473,
	474, 0, 475, 459, 460, 476, 477, 0, 478, 479,
	480, 481, 482, 483, 571, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 572, 490, 491, 492, 493,
	573, 0, 496, 497, 0, 495, 0, 498, 499, 500,
	501, 502, 503, 321, 504, 0, 505, 574, 575, 576,
	577, 0, 512, 0, 506, 507, 578, 508, 579, 0,
	509, 510, 511, 0, 513, 514, 0, 0, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 580, 581, 582, 0, 527, 526, 583, 618,
	0, 242, 0, 528, 529, 584, 530, 531, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 0, 254, 255, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 534, 535, 0, 264, 536,
	265, 537, 0, 538, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 539, 540, 541, 0, 272, 273, 542,
	0, 0, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 0, 285, 0, 286,
	287, 288, 289, 0, 290, 0, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 295, 296, 0,
	297, 543, 544, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 307, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 545,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	546, 547, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 548, 0, 0, 0, 330, 0, 331, 0,
	0, 0, 332, 333, 549, 550, 334, 335, 0, 336,
	551, 0, 552, 337, 0, 338, 339, 340, 341, 342,
	553, 554, 555, 400, 0, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 0, 349, 350, 352, 0,
	0, 351, 556, 557, 0, 558, 0, 353, 354, 0,
	559, 0, 355, 356, 357, 0, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 560, 0, 369, 370, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	388, 0, 390, 391, 392, 396, 395, 397, 394, 0,
	393, 0, 0, 0, 398, 0, 561, 399, 562, 401,
	402, 0, 0, 403, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 409, 563, 0, 410, 0, 564, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 565, 566, 567, 423, 568, 424, 425,
	0, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 0, 450, 451, 452, 453,
	570, 454, 0, 455, 456, 462, 463, 457, 458, 464,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 473,
	474, 0, 475, 459, 460, 476, 477, 0, 478, 479,
	480, 481, 482, 483, 571, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 572, 490, 491, 492, 493,
	573, 0, 496, 497, 0, 495, 0, 498, 499, 500,
	501, 502, 503, 321, 504, 0, 505, 574, 575, 576,
	577, 0, 512, 0, 506, 507, 578, 508, 579, 0,
	509, 510, 511, 0, 513, 514, 0, 0, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 580, 581, 582, 0, 527, 526, 583, 612,
	0, 242, 0, 528, 529, 584, 530, 531, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 0, 254, 255, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 534, 535, 0, 264, 536,
	265, 537, 0, 538, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 539, 540, 541, 0, 272, 273, 542,
	0, 0, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 0, 285, 0, 286,
	287, 288, 289, 0, 290, 0, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 295, 296, 0,
	297, 543, 544, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 307, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 545,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	546, 547, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 548, 0, 0, 0, 330, 0, 331, 0,
	0, 0, 332, 333, 549, 550, 334, 335, 0, 336,
	551, 0, 552, 337, 0, 338, 339, 340, 341, 342,
	553, 554, 555, 400, 0, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 0, 349, 350, 352, 0,
	0, 351, 556, 557, 0, 558, 0, 353, 354, 0,
	559, 0, 355, 356, 357, 0, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 560, 0, 369, 370, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	388, 0, 390, 391, 392, 396, 395, 397, 394, 0,
	393, 0, 0, 0, 398, 0, 561, 399, 562, 401,
	402, 0, 0, 403, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 409, 563, 0, 410, 0, 564, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 565, 566, 567, 423, 568, 424, 425,
	0, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 0, 450, 451, 452, 453,
	570, 454, 0, 455, 456, 462, 463, 457, 458, 464,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 473,
	474, 0, 475, 459, 460, 476, 477, 0, 478, 479,
	480, 481, 482, 483, 571, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 572, 490, 491, 492, 493,
	573, 0, 496, 497, 0, 495, 0, 498, 499, 500,
	501, 502, 503, 321, 504, 0, 505, 574, 575, 576,
	577, 0, 512, 0, 506, 507, 578, 508, 579, 0,
	509, 510, 511, 0, 513, 514, 0, 0, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 580, 581, 582, 0, 527, 526, 583, 590,
	0, 242, 0, 528, 529, 584, 530, 531, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 0, 254, 255, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 534, 535, 0, 264, 536,
	265, 537, 0, 538, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 539, 540, 541, 0, 272, 273, 542,
	0, 0, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 0, 285, 0, 286,
	287, 288, 289, 0, 290, 0, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 295, 296, 0,
	297, 543, 544, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 307, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 545,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	546, 547, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 548, 0, 0, 0, 330, 0, 331, 0,
	0, 0, 332, 333, 549, 550, 334, 335, 0, 336,
	551, 0, 552, 337, 0, 338, 339, 340, 341, 342,
	553, 554, 555, 400, 0, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 0, 349, 350, 352, 0,
	0, 351, 556, 557, 0, 558, 0, 353, 354, 0,
	559, 0, 355, 356, 357, 0, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 560, 0, 369, 370, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	388, 0, 390, 391, 392, 396, 395, 397, 394, 0,
	393, 0, 0, 0, 398, 0, 561, 399, 562, 401,
	402, 0, 0, 403, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 409, 563, 0, 410, 0, 564, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 565, 566, 567, 423, 568, 424, 425,
	0, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 0, 450, 451, 452, 453,
	570, 454, 0, 455, 456, 462, 463, 457, 458, 464,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 473,
	474, 0, 475, 459, 460, 476, 477, 0, 478, 479,
	480, 481, 482, 483, 571, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 572, 490, 491, 492, 493,
	573, 0, 496, 497, 0, 495, 0, 498, 499, 500,
	501, 502, 503, 321, 504, 0, 505, 574, 575, 576,
	577, 0, 512, 0, 506, 507, 578, 508, 579, 0,
	509, 510, 511, 0, 513, 514, 0, 0, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 580, 581, 582, 242, 527, 526, 583, 0,
	0, 0, 0, 528, 529, 584, 530, 531, 532, 0,
	0, 0, 248, 249, 250, 251, 252, 253, 0, 254,
	255, 0, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 256, 257, 259, 258, 260, 261, 262, 263, 534,
	535, 0, 264, 536, 265, 537, 0, 538, 266, 267,
	268, 269, 270, 0, 0, 0, 271, 539, 540, 541,
	0, 272, 273, 542, 0, 0, 0, 274, 275, 276,
	277, 278, 279, 280, 0, 0, 282, 283, 284, 281,
	0, 285, 0, 286, 287, 288, 289, 0, 290, 0,
	291, 292, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 295, 296, 0, 297, 543, 544, 0, 301, 298,
	299, 0, 302, 300, 0, 303, 304, 305, 0, 0,
	306, 307, 308, 0, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 545, 316, 317, 318, 320, 322, 319,
	323, 324, 325, 326, 546, 547, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 548, 0, 0, 0,
	330, 0, 331, 0, 0, 0, 332, 333, 549, 550,
	334, 335, 0, 336, 551, 0, 552, 337, 0, 338,
	339, 340, 341, 342, 553, 554, 555, 400, 0, 343,
	344, 0, 345, 346, 347, 348, 0, 0, 0, 0,
	349, 350, 352, 0, 0, 351, 556, 557, 0, 558,
	0, 353, 354, 0, 559, 0, 355, 356, 357, 0,
	358, 0, 0, 0, 359, 360, 361, 362, 363, 364,
	0, 365, 367, 366, 0, 368, 560, 0, 369, 370,
	0, 0, 371, 372, 373, 0, 0, 374, 375, 376,
	377, 0, 378, 379, 381, 383, 380, 382, 387, 384,
	385, 386, 389, 0, 388, 0, 390, 391, 392, 396,
	395, 397, 394, 0, 393, 0, 0, 0, 398, 0,
	561, 399, 562, 401, 402, 0, 0, 403, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 409, 563, 0,
	410, 0, 564, 411, 412, 404, 413, 414, 415, 416,
	417, 418, 419, 420, 0, 421, 422, 565, 566, 567,
	423, 568, 424, 425, 0, 426, 0, 427, 428, 429,
	430, 431, 432, 433, 569, 435, 434, 436, 0, 437,
	0, 0, 0, 0, 0, 438, 0, 440, 441, 442,
	439, 443, 444, 445, 446, 0, 447, 448, 449, 0,
	450, 451, 452, 453, 570, 454, 0, 455, 456, 462,
	463, 457, 458, 464, 465, 466, 467, 468, 0, 470,
	471, 469, 472, 473, 474, 0, 475, 459, 460, 476,
	477, 0, 478, 479, 480, 481, 482, 483, 571, 0,
	484, 0, 485, 486, 487, 488, 461, 489, 494, 572,
	490, 491, 492, 493, 573, 0, 496, 497, 0, 495,
	0, 498, 499, 500, 501, 502, 503, 321, 504, 0,
	505, 574, 575, 576, 577, 0, 512, 0, 506, 507,
	578, 508, 579, 0, 509, 510, 511, 0, 513, 514,
	0, 0, 515, 516, 517, 519, 520, 518, 521, 0,
	522, 0, 0, 523, 524, 525, 580, 581, 582, 242,
	527, 526, 583, 0, 0, 0, 0, 528, 529, 584,
	530, 531, 532, 0, 0, 0, 248, 249, 250, 251,
	252, 253, 0, 254, 255, 0, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 256, 257, 259, 258, 260,
	261, 262, 263, 534, 535, 0, 264, 536, 265, 537,
	0, 538, 266, 267, 268, 269, 270, 0, 0, 0,
	271, 539, 540, 541, 0, 272, 273, 542, 0, 0,
	0, 274, 275, 276, 277, 278, 279, 280, 0, 0,
	282, 283, 284, 281, 0, 285, 0, 286, 287, 288,
	289, 0, 290, 0, 291, 292, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 295, 296, 0, 297, 543,
	544, 0, 301, 298, 299, 0, 302, 300, 0, 303,
	304, 305, 0, 0, 306, 307, 308, 0, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 545, 316, 317,
	318, 320, 322, 319, 323, 324, 325, 326, 546, 547,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	548, 0, 0, 0, 330, 0, 331, 0, 0, 0,
	332, 333, 549, 550, 334, 335, 0, 336, 551, 0,
	552, 337, 0, 338, 339, 340, 341, 342, 3127, 554,
	555, 400, 0, 343, 344, 0, 345, 346, 347, 348,
	0, 0, 0, 0, 349, 350, 352, 0, 0, 351,
	556, 557, 0, 558, 0, 353, 354, 0, 559, 0,
	355, 356, 357, 0, 358, 0, 0, 0, 359, 360,
	361, 362, 363, 364, 0, 365, 367, 366, 0, 368,
	560, 0, 369, 370, 0, 0, 371, 372, 373, 0,
	0, 374, 375, 376, 377, 0, 378, 379, 381, 383,
	380, 382, 387, 384, 385, 386, 389, 0, 388, 0,
	390, 391, 392, 396, 395, 397, 394, 0, 393, 0,
	0, 0, 398, 0, 561, 399, 562, 401, 402, 0,
	0, 403, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 409, 563, 0, 410, 0, 564, 411, 412, 404,
	413, 414, 415, 416, 417, 418, 419, 420, 0, 421,
	422, 565, 566, 567, 423, 568, 424, 425, 0, 426,
	0, 427, 428, 429, 430, 431, 432, 433, 569, 435,
	434, 436, 0, 437, 0, 0, 0, 0, 0, 438,
	0, 440, 441, 442, 439, 443, 444, 445, 446, 0,
	447, 448, 449, 0, 450, 451, 452, 453, 570, 454,
	0, 455, 456, 462, 463, 457, 458, 464, 465, 466,
	467, 468, 0, 470, 471, 469, 472, 473, 474, 0,
	475, 459, 460, 476, 477, 0, 478, 479, 480, 481,
	482, 483, 571, 0, 484, 0, 485, 486, 487, 488,
	461, 489, 494, 572, 490, 491, 492, 493, 573, 0,
	496, 497, 0, 495, 0, 498, 499, 500, 501, 502,
	503, 321, 504, 0, 505, 574, 575, 576, 577, 0,
	512, 0, 506, 507, 578, 508, 579, 0, 509, 510,
	511, 0, 513, 514, 0, 0, 515, 516, 517, 519,
	520, 518, 521, 0, 522, 0, 0, 523, 524, 525,
	580, 581, 582, 242, 527, 526, 583, 0, 0, 0,
	0, 528, 529, 584, 530, 531, 532, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 541, 0, 272,
	273, 542, 0, 0, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 0, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 0, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 3077, 554, 555, 400, 0, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 0, 349, 350,
	352, 0, 0, 351, 556, 557, 0, 558, 0, 353,
	354, 0, 559, 0, 355, 356, 357, 0, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 0, 369, 370, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 388, 0, 390, 391, 392, 396, 395, 397,
	394, 0, 393, 0, 0, 0, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 0, 410, 0,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 0, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 462, 463, 457,
	458, 464, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 473, 474, 0, 475, 459, 460, 476, 477, 0,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 0, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 574,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 242, 527, 526,
	583, 0, 0, 0, 0, 528, 529, 584, 530, 531,
	532, 0, 0, 0, 248, 249, 250, 251, 252, 253,
	0, 254, 255, 0, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 256, 257, 259, 258, 260, 261, 262,
	263, 534, 535, 0, 264, 536, 265, 537, 0, 538,
	266, 267, 268, 269, 270, 0, 0, 0, 271, 539,
	540, 541, 0, 272, 273, 542, 0, 0, 0, 274,
	275, 276, 277, 278, 279, 280, 0, 0, 282, 283,
	284, 281, 0, 285, 0, 286, 287, 288, 289, 0,
	290, 0, 291, 292, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 295, 296, 0, 297, 543, 544, 0,
	301, 298, 299, 0, 302, 300, 0, 303, 304, 305,
	0, 0, 306, 307, 308, 0, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 545, 316, 317, 318, 320,
	322, 319, 323, 324, 325, 326, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 548, 0,
	0, 0, 330, 0, 331, 0, 0, 0, 332, 333,
	549, 550, 334, 335, 0, 336, 551, 0, 552, 337,
	0, 338, 339, 340, 341, 342, 3016, 554, 555, 400,
	0, 343, 344, 0, 345, 346, 347, 348, 0, 0,
	0, 0, 349, 350, 352, 0, 0, 351, 556, 557,
	0, 558, 0, 353, 354, 0, 559, 0, 355, 356,
	357, 0, 358, 0, 0, 0, 359, 360, 361, 362,
	363, 364, 0, 365, 367, 366, 0, 368, 560, 0,
	369, 370, 0, 0, 371, 372, 373, 0, 0, 374,
	375, 376, 377, 0, 378, 379, 381, 383, 380, 382,
	387, 384, 385, 386, 389, 0, 388, 0, 390, 391,
	392, 396, 395, 397, 394, 0, 393, 0, 0, 0,
	398, 0, 561, 399, 562, 401, 402, 0, 0, 403,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 409,
	563, 0, 410, 0, 564, 411, 412, 404, 413, 414,
	415, 416, 417, 418, 419, 420, 0, 421, 422, 565,
	566, 567, 423, 568, 424, 425, 0, 426, 0, 427,
	428, 429, 430, 431, 432, 433, 569, 435, 434, 436,
	0, 437, 0, 0, 0, 0, 0, 438, 0, 440,
	441, 442, 439, 443, 444, 445, 446, 0, 447, 448,
	449, 0, 450, 451, 452, 453, 570, 454, 0, 455,
	456, 462, 463, 457, 458, 464, 465, 466, 467, 468,
	0, 470, 471, 469, 472, 473, 474, 0, 475, 459,
	460, 476, 477, 0, 478, 479, 480, 481, 482, 483,
	571, 0, 484, 0, 485, 486, 487, 488, 461, 489,
	494, 572, 490, 491, 492, 493, 573, 0, 496, 497,
	0, 495, 0, 498, 499, 500, 501, 502, 503, 321,
	504, 0, 505, 574, 575, 576, 577, 0, 512, 0,
	506, 507, 578, 508, 579, 0, 509, 510, 511, 0,
	513, 514, 0, 0, 515, 516, 517, 519, 520, 518,
	521, 0, 522, 0, 0, 523, 524, 525, 580, 581,
	582, 242, 527, 526, 583, 0, 0, 0, 0, 528,
	529, 584, 530, 531, 532, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 0, 254, 255, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 534, 535, 0, 264, 536,
	265, 537, 0, 538, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 539, 540, 541, 0, 272, 273, 542,
	0, 0, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 0, 285, 0, 286,
	287, 288, 289, 0, 290, 0, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 295, 296, 0,
	297, 543, 544, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 307, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 545,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	546, 547, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 548, 0, 0, 0, 330, 0, 331, 0,
	0, 0, 332, 333, 549, 550, 334, 335, 0, 336,
	551, 0, 552, 337, 0, 338, 339, 340, 341, 342,
	3014, 554, 555, 400, 0, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 0, 349, 350, 352, 0,
	0, 351, 556, 557, 0, 558, 0, 353, 354, 0,
	559, 0, 355, 356, 357, 0, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 560, 0, 369, 370, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	388, 0, 390, 391, 392, 396, 395, 397, 394, 0,
	393, 0, 0, 0, 398, 0, 561, 399, 562, 401,
	402, 0, 0, 403, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 409, 563, 0, 410, 0, 564, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 565, 566, 567, 423, 568, 424, 425,
	0, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 0, 450, 451, 452, 453,
	570, 454, 0, 455, 456, 462, 463, 457, 458, 464,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 473,
	474, 0, 475, 459, 460, 476, 477, 0, 478, 479,
	480, 481, 482, 483, 571, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 572, 490, 491, 492, 493,
	573, 0, 496, 497, 0, 495, 0, 498, 499, 500,
	501, 502, 503, 321, 504, 0, 505, 574, 575, 576,
	577, 0, 512, 0, 506, 507, 578, 508, 579, 0,
	509, 510, 511, 0, 513, 514, 0, 0, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 580, 581, 582, 242, 527, 526, 583, 0,
	0, 0, 0, 528, 529, 584, 530, 531, 532, 0,
	0, 0, 248, 249, 250, 251, 252, 253, 0, 254,
	255, 0, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 256, 257, 259, 258, 260, 261, 262, 263, 534,
	535, 0, 264, 536, 265, 537, 0, 538, 266, 267,
	268, 269, 270, 0, 0, 0, 271, 539, 540, 541,
	0, 272, 273, 542, 0, 0, 0, 274, 275, 276,
	277, 278, 279, 280, 0, 0, 282, 283, 284, 281,
	0, 285, 0, 286, 287, 288, 289, 0, 290, 0,
	291, 292, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 295, 296, 0, 297, 543, 544, 0, 301, 298,
	299, 0, 302, 300, 0, 303, 304, 305, 0, 0,
	306, 307, 308, 0, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 545, 316, 317, 318, 320, 322, 319,
	323, 324, 325, 326, 546, 547, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 548, 0, 0, 0,
	330, 0, 331, 0, 0, 0, 332, 333, 549, 550,
	334, 335, 0, 336, 551, 0, 552, 337, 0, 338,
	339, 340, 341, 342, 3000, 554, 555, 400, 0, 343,
	344, 0, 345, 346, 347, 348, 0, 0, 0, 0,
	349, 350, 352, 0, 0, 351, 556, 557, 0, 558,
	0, 353, 354, 0, 559, 0, 355, 356, 357, 0,
	358, 0, 0, 0, 359, 360, 361, 362, 363, 364,
	0, 365, 367, 366, 0, 368, 560, 0, 369, 370,
	0, 0, 371, 372, 373, 0, 0, 374, 375, 376,
	377, 0, 378, 379, 381, 383, 380, 382, 387, 384,
	385, 386, 389, 0, 388, 0, 390, 391, 392, 396,
	395, 397, 394, 0, 393, 0, 0, 0, 398, 0,
	561, 399, 562, 401, 402, 0, 0, 403, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 409, 563, 0,
	410, 0, 564, 411, 412, 404, 413, 414, 415, 416,
	417, 418, 419, 420, 0, 421, 422, 565, 566, 567,
	423, 568, 424, 425, 0, 426, 0, 427, 428, 429,
	430, 431, 432, 433, 569, 435, 434, 436, 0, 437,
	0, 0, 0, 0, 0, 438, 0, 440, 441, 442,
	439, 443, 444, 445, 446, 0, 447, 448, 449, 0,
	450, 451, 452, 453, 570, 454, 0, 455, 456, 462,
	463, 457, 458, 464, 465, 466, 467, 468, 0, 470,
	471, 469, 472, 473, 474, 0, 475, 459, 460, 476,
	477, 0, 478, 479, 480, 481, 482, 483, 571, 0,
	484, 0, 485, 486, 487, 488, 461, 489, 494, 572,
	490, 491, 492, 493, 573, 0, 496, 497, 0, 495,
	0, 498, 499, 500, 501, 502, 503, 321, 504, 0,
	505, 574, 575, 576, 577, 0, 512, 0, 506, 507,
	578, 508, 579, 0, 509, 510, 511, 0, 513, 514,
	0, 0, 515, 516, 517, 519, 520, 518, 521, 0,
	522, 0, 0, 523, 524, 525, 580, 581, 582, 242,
	527, 526, 583, 0, 0, 0, 0, 528, 529, 584,
	530, 531, 532, 0, 0, 0, 248, 249, 250, 251,
	252, 253, 0, 254, 255, 0, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 256, 257, 259, 258, 260,
	261, 262, 263, 534, 535, 0, 264, 536, 265, 537,
	0, 538, 266, 267, 268, 269, 270, 0, 0, 0,
	271, 539, 540, 541, 0, 272, 273, 542, 0, 0,
	0, 274, 275, 276, 277, 278, 279, 280, 0, 0,
	282, 283, 284, 281, 0, 285, 0, 286, 287, 288,
	289, 0, 290, 0, 291, 292, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 295, 296, 0, 297, 543,
	544, 0, 301, 298, 299, 0, 302, 300, 0, 303,
	304, 305, 0, 0, 306, 307, 308, 0, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 545, 316, 317,
	318, 320, 322, 319, 323, 324, 325, 326, 546, 547,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	548, 0, 0, 0, 330, 0, 331, 0, 0, 0,
	332, 333, 549, 550, 334, 335, 0, 336, 551, 0,
	552, 337, 0, 338, 339, 340, 341, 342, 2632, 554,
	555, 400, 0, 343, 344, 0, 345, 346, 347, 348,
	0, 0, 0, 0, 349, 350, 352, 0, 0, 351,
	556, 557, 0, 558, 0, 353, 354, 0, 559, 0,
	355, 356, 357, 0, 358, 0, 0, 0, 359, 360,
	361, 362, 363, 364, 0, 365, 367, 366, 0, 368,
	560, 0, 369, 370, 0, 0, 371, 372, 373, 0,
	0, 374, 375, 376, 377, 0, 378, 379, 381, 383,
	380, 382, 387, 384, 385, 386, 389, 0, 388, 0,
	390, 391, 392, 396, 395, 397, 394, 0, 393, 0,
	0, 0, 398, 0, 561, 399, 562, 401, 402, 0,
	0, 403, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 409, 563, 0, 410, 0, 564, 411, 412, 404,
	413, 414, 415, 416, 417, 418, 419, 420, 0, 421,
	422, 565, 566, 567, 423, 568, 424, 425, 0, 426,
	0, 427, 428, 429, 430, 431, 432, 433, 569, 435,
	434, 436, 0, 437, 0, 0, 0, 0, 0, 438,
	0, 440, 441, 442, 439, 443, 444, 445, 446, 0,
	447, 448, 449, 0, 450, 451, 452, 453, 570, 454,
	0, 455, 456, 462, 463, 457, 458, 464, 465, 466,
	467, 468, 0, 470, 471, 469, 472, 473, 474, 0,
	475, 459, 460, 476, 477, 0, 478, 479, 480, 481,
	482, 483, 571, 0, 484, 0, 485, 486, 487, 488,
	461, 489, 494, 572, 490, 491, 492, 493, 573, 0,
	496, 497, 0, 495, 0, 498, 499, 500, 501, 502,
	503, 321, 504, 0, 505, 574, 575, 576, 577, 0,
	512, 0, 506, 507, 578, 508, 579, 0, 509, 510,
	511, 0, 513, 514, 0, 0, 515, 516, 517, 519,
	520, 518, 521, 0, 522, 0, 0, 523, 524, 525,
	580, 581, 582, 242, 527, 526, 583, 0, 0, 0,
	0, 528, 529, 584, 530, 531, 532, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 541, 0, 272,
	273, 542, 0, 0, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 0, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 0, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 337, 0, 338, 339, 340,
	341, 342, 553, 554, 555, 400, 0, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 0, 349, 350,
	352, 0, 0, 351, 556, 557, 0, 558, 0, 353,
	354, 0, 559, 0, 355, 356, 357, 0, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 0, 369, 370, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 388, 0, 390, 391, 392, 396, 395, 397,
	394, 0, 393, 0, 0, 0, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 0, 410, 0,
	564, 411, 412, 404, 413, 414, 415, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 431,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 0, 450, 451,
	452, 453, 570, 454, 0, 455, 456, 621, 463, 457,
	458, 464, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 473, 474, 0, 475, 459, 460, 476, 477, 0,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 0, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 574,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 242, 527, 526,
	583, 0, 0, 0, 0, 528, 529, 584, 530, 531,
	532, 0, 0, 0, 248, 249, 250, 251, 252, 253,
	0, 254, 255, 0, 0, 0, 0, 0, 533, 0,
	2026, 0, 0, 256, 257, 259, 258, 260, 261, 262,
	263, 534, 535, 0, 264, 536, 265, 537, 0, 538,
	266, 267, 268, 269, 270, 0, 0, 0, 271, 539,
	540, 541, 0, 272, 273, 542, 0, 0, 0, 274,
	275, 276, 277, 278, 279, 280, 0, 0, 282, 283,
	284, 281, 0, 285, 0, 286, 287, 288, 289, 0,
	290, 0, 291, 292, 0, 0, 0, 0, 0, 0,
	0, 293, 294, 295, 296, 0, 297, 543, 544, 0,
	301, 298, 299, 0, 302, 300, 0, 303, 304, 305,
	0, 0, 306, 307, 308, 0, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 545, 316, 317, 318, 320,
	322, 319, 323, 324, 325, 326, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 548, 0,
	0, 0, 330, 0, 331, 0, 0, 0, 332, 333,
	549, 550, 334, 335, 0, 336, 551, 0, 552, 337,
	0, 338, 339, 340, 341, 342, 553, 554, 555, 400,
	0, 343, 344, 0, 345, 346, 347, 348, 0, 0,
	0, 0, 349, 350, 352, 0, 0, 351, 556, 557,
	0, 558, 0, 353, 354, 0, 559, 0, 355, 356,
	357, 0, 358, 0, 0, 0, 359, 360, 361, 362,
	363, 364, 0, 365, 367, 366, 0, 368, 560, 0,
	369, 370, 0, 0, 371, 372, 373, 0, 0, 374,
	375, 376, 377, 0, 378, 379, 381, 383, 380, 382,
	387, 384, 385, 386, 389, 0, 388, 0, 390, 391,
	392, 396, 395, 397, 394, 0, 393, 0, 0, 0,
	398, 0, 561, 399, 562, 401, 402, 0, 0, 403,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 409,
	563, 0, 410, 0, 564, 411, 412, 404, 413, 414,
	415, 416, 417, 418, 419, 420, 0, 421, 422, 565,
	566, 567, 423, 568, 424, 425, 0, 426, 0, 427,
	428, 429, 430, 431, 432, 433, 569, 435, 434, 436,
	0, 437, 0, 0, 0, 0, 0, 438, 0, 440,
	441, 442, 439, 443, 444, 445, 446, 0, 447, 448,
	449, 0, 450, 451, 452, 453, 570, 454, 0, 455,
	456, 462, 463, 457, 458, 464, 465, 466, 467, 468,
	0, 470, 471, 469, 472, 473, 474, 0, 0, 459,
	460, 476, 477, 0, 478, 479, 480, 481, 482, 483,
	571, 0, 484, 0, 485, 486, 487, 488, 461, 489,
	494, 572, 490, 491, 492, 493, 573, 0, 496, 497,
	0, 495, 0, 498, 499, 500, 501, 502, 503, 321,
	504, 0, 505, 574, 575, 576, 577, 0, 512, 0,
	506, 507, 578, 508, 579, 0, 509, 510, 511, 0,
	513, 514, 0, 0, 515, 516, 517, 519, 520, 518,
	521, 0, 522, 0, 0, 523, 524, 525, 580, 581,
	582, 242, 527, 526, 583, 0, 0, 0, 0, 528,
	529, 584, 530, 531, 532, 0, 0, 0, 248, 249,
	250, 251, 252, 253, 0, 254, 255, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 256, 257, 259,
	258, 260, 261, 262, 263, 534, 535, 0, 264, 536,
	265, 537, 0, 538, 266, 267, 268, 269, 270, 0,
	0, 0, 271, 539, 540, 541, 0, 272, 273, 542,
	0, 0, 0, 274, 275, 276, 277, 278, 279, 280,
	0, 0, 282, 283, 284, 281, 0, 285, 0, 286,
	287, 288, 289, 0, 290, 0, 291, 292, 0, 0,
	0, 0, 0, 0, 0, 293, 294, 295, 296, 0,
	297, 543, 544, 0, 301, 298, 299, 0, 302, 300,
	0, 303, 304, 305, 0, 0, 306, 307, 308, 0,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 545,
	316, 317, 318, 320, 322, 319, 323, 324, 325, 326,
	546, 547, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 548, 0, 0, 0, 330, 0, 331, 0,
	0, 0, 332, 333, 549, 550, 334, 335, 0, 336,
	551, 0, 552, 337, 0, 338, 339, 340, 341, 342,
	1399, 554, 555, 400, 0, 343, 344, 0, 345, 346,
	347, 348, 0, 0, 0, 0, 349, 350, 352, 0,
	0, 351, 556, 557, 0, 558, 0, 353, 354, 0,
	559, 0, 355, 356, 357, 0, 358, 0, 0, 0,
	359, 360, 361, 362, 363, 364, 0, 365, 367, 366,
	0, 368, 560, 0, 369, 370, 0, 0, 371, 372,
	373, 0, 0, 374, 375, 376, 377, 0, 378, 379,
	381, 383, 380, 382, 387, 384, 385, 386, 389, 0,
	388, 0, 390, 391, 392, 396, 395, 397, 394, 0,
	393, 0, 0, 0, 398, 0, 561, 399, 562, 401,
	402, 0, 0, 403, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 409, 563, 0, 410, 0, 564, 411,
	412, 404, 413, 414, 415, 416, 417, 418, 419, 420,
	0, 421, 422, 565, 566, 567, 423, 568, 424, 425,
	0, 426, 0, 427, 428, 429, 430, 431, 432, 433,
	569, 435, 434, 436, 0, 437, 0, 0, 0, 0,
	0, 438, 0, 440, 441, 442, 439, 443, 444, 445,
	446, 0, 447, 448, 449, 0, 450, 451, 452, 453,
	570, 454, 0, 455, 456, 462, 463, 457, 458, 464,
	465, 466, 467, 468, 0, 470, 471, 469, 472, 473,
	474, 0, 475, 459, 460, 476, 477, 0, 478, 479,
	480, 481, 482, 483, 571, 0, 484, 0, 485, 486,
	487, 488, 461, 489, 494, 572, 490, 491, 492, 493,
	573, 0, 496, 497, 0, 495, 0, 498, 499, 500,
	501, 502, 503, 321, 504, 0, 505, 574, 575, 576,
	577, 0, 512, 0, 506, 507, 578, 508, 579, 0,
	509, 510, 511, 0, 513, 514, 0, 0, 515, 516,
	517, 519, 520, 518, 521, 0, 522, 0, 0, 523,
	524, 525, 580, 581, 582, 242, 527, 526, 583, 0,
	0, 0, 0, 528, 529, 584, 530, 531, 532, 0,
	0, 0, 248, 249, 250, 251, 252, 253, 0, 254,
	255, 0, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 256, 257, 259, 258, 260, 261, 262, 263, 534,
	535, 0, 264, 536, 265, 537, 0, 538, 266, 267,
	268, 269, 270, 0, 0, 0, 271, 539, 540, 541,
	0, 272, 273, 542, 0, 0, 0, 274, 275, 276,
	277, 278, 279, 280, 0, 0, 282, 283, 284, 281,
	0, 285, 0, 286, 287, 288, 289, 0, 290, 0,
	291, 292, 0, 0, 0, 0, 0, 0, 0, 293,
	294, 295, 296, 0, 297, 543, 544, 0, 301, 298,
	299, 0, 302, 300, 0, 303, 304, 305, 0, 0,
	306, 307, 308, 0, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 545, 316, 317, 318, 320, 322, 319,
	323, 324, 325, 326, 546, 547, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 548, 0, 0, 0,
	330, 0, 331, 0, 0, 0, 332, 333, 549, 550,
	334, 335, 0, 336, 551, 0, 552, 337, 0, 338,
	339, 340, 341, 342, 1340, 554, 555, 400, 0, 343,
	344, 0, 345, 346, 347, 348, 0, 0, 0, 0,
	349, 350, 352, 0, 0, 351, 556, 557, 0, 558,
	0, 353, 354, 0, 559, 0, 355, 356, 357, 0,
	358, 0, 0, 0, 359, 360, 361, 362, 363, 364,
	0, 365, 367, 366, 0, 368, 560, 0, 369, 370,
	0, 0, 371, 372, 373, 0, 0, 374, 375, 376,
	377, 0, 378, 379, 381, 383, 380, 382, 387, 384,
	385, 386, 389, 0, 388, 0, 390, 391, 392, 396,
	395, 397, 394, 0, 393, 0, 0, 0, 398, 0,
	561, 399, 562, 401, 402, 0, 0, 403, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 409, 563, 0,
	410, 0, 564, 411, 412, 404, 413, 414, 415, 416,
	417, 418, 419, 420, 0, 421, 422, 565, 566, 567,
	423, 568, 424, 425, 0, 426, 0, 427, 428, 429,
	430, 431, 432, 433, 569, 435, 434, 436, 0, 437,
	0, 0, 0, 0, 0, 438, 0, 440, 441, 442,
	439, 443, 444, 445, 446, 0, 447, 448, 449, 0,
	450, 451, 452, 453, 570, 454, 0, 455, 456, 462,
	463, 457, 458, 464, 465, 466, 467, 468, 0, 470,
	471, 469, 472, 473, 474, 0, 475, 459, 460, 476,
	477, 0, 478, 479, 480, 481, 482, 483, 571, 0,
	484, 0, 485, 486, 487, 488, 461, 489, 494, 572,
	490, 491, 492, 493, 573, 0, 496, 497, 0, 495,
	0, 498, 499, 500, 501, 502, 503, 321, 504, 0,
	505, 574, 575, 576, 577, 0, 512, 0, 506, 507,
	578, 508, 579, 0, 509, 510, 511, 0, 513, 514,
	0, 0, 515, 516, 517, 519, 520, 518, 521, 0,
	522, 0, 0, 523, 524, 525, 580, 581, 582, 242,
	527, 526, 583, 0, 0, 0, 0, 528, 529, 584,
	530, 531, 532, 0, 0, 0, 248, 249, 250, 251,
	252, 253, 0, 254, 255, 0, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 256, 257, 259, 258, 260,
	261, 262, 263, 534, 535, 0, 264, 536, 265, 537,
	0, 538, 266, 267, 268, 269, 270, 0, 0, 0,
	271, 539, 540, 541, 0, 272, 273, 542, 0, 0,
	0, 274, 275, 276, 277, 278, 279, 280, 0, 0,
	282, 283, 284, 281, 0, 285, 0, 286, 287, 288,
	289, 0, 290, 0, 291, 292, 0, 0, 0, 0,
	0, 0, 0, 293, 294, 295, 296, 0, 297, 543,
	544, 0, 301, 298, 299, 0, 302, 300, 0, 303,
	304, 305, 0, 0, 306, 307, 308, 0, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 545, 316, 317,
	318, 320, 322, 319, 323, 324, 325, 326, 546, 547,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	548, 0, 0, 0, 330, 0, 331, 0, 0, 0,
	332, 333, 549, 550, 334, 335, 0, 336, 551, 0,
	552, 337, 0, 338, 339, 340, 341, 342, 553, 554,
	555, 400, 0, 343, 344, 0, 345, 346, 347, 348,
	0, 0, 0, 0, 349, 350, 352, 0, 0, 351,
	556, 557, 0, 558, 0, 353, 354, 0, 559, 0,
	355, 356, 357, 0, 358, 0, 0, 0, 359, 360,
	361, 362, 363, 364, 0, 365, 367, 366, 0, 368,
	560, 0, 369, 370, 0, 0, 371, 372, 373, 0,
	0, 374, 375, 376, 377, 0, 378, 379, 381, 383,
	380, 382, 387, 384, 385, 386, 389, 0, 388, 0,
	390, 391, 392, 396, 395, 397, 394, 0, 393, 0,
	0, 0, 398, 0, 561, 399, 562, 401, 402, 0,
	0, 403, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 409, 563, 0, 410, 0, 564, 411, 412, 404,
	413, 414, 415, 416, 417, 418, 419, 420, 0, 421,
	422, 565, 566, 567, 423, 568, 424, 425, 0, 426,
	0, 427, 428, 429, 430, 431, 432, 433, 569, 1078,
	434, 436, 0, 437, 0, 0, 0, 0, 0, 438,
	0, 440, 441, 442, 439, 443, 444, 445, 446, 0,
	447, 448, 449, 0, 450, 451, 452, 453, 570, 454,
	0, 455, 456, 462, 463, 457, 458, 464, 465, 466,
	467, 468, 0, 470, 471, 469, 472, 473, 474, 0,
	475, 459, 460, 476, 477, 0, 478, 479, 480, 481,
	482, 483, 571, 0, 484, 0, 485, 486, 487, 488,
	461, 489, 494, 572, 490, 491, 492, 493, 573, 0,
	496, 497, 0, 495, 0, 498, 499, 500, 501, 502,
	503, 321, 504, 0, 505, 574, 575, 576, 577, 0,
	512, 0, 506, 507, 578, 508, 579, 0, 509, 510,
	511, 0, 513, 514, 0, 0, 515, 516, 517, 519,
	520, 518, 521, 0, 522, 0, 0, 523, 524, 525,
	580, 581, 582, 242, 527, 526, 583, 0, 0, 0,
	0, 528, 529, 584, 530, 531, 532, 0, 0, 0,
	248, 249, 250, 251, 252, 253, 0, 254, 255, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 256,
	257, 259, 258, 260, 261, 262, 263, 534, 535, 0,
	264, 536, 265, 537, 0, 538, 266, 267, 268, 269,
	270, 0, 0, 0, 271, 539, 540, 541, 0, 272,
	273, 542, 0, 0, 0, 274, 275, 276, 277, 278,
	279, 280, 0, 0, 282, 283, 284, 281, 0, 285,
	0, 286, 287, 288, 289, 0, 290, 0, 291, 292,
	0, 0, 0, 0, 0, 0, 0, 293, 294, 295,
	296, 0, 297, 543, 544, 0, 301, 298, 299, 0,
	302, 300, 0, 303, 304, 305, 0, 0, 306, 307,
	308, 0, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 545, 316, 317, 318, 320, 322, 319, 323, 324,
	325, 326, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 548, 0, 0, 0, 330, 0,
	331, 0, 0, 0, 332, 333, 549, 550, 334, 335,
	0, 336, 551, 0, 552, 0, 0, 338, 339, 340,
	341, 342, 553, 554, 555, 400, 0, 343, 344, 0,
	345, 346, 347, 348, 0, 0, 0, 0, 349, 350,
	352, 0, 0, 351, 556, 557, 0, 558, 0, 353,
	354, 0, 559, 0, 355, 356, 357, 0, 358, 0,
	0, 0, 359, 360, 361, 362, 363, 364, 0, 365,
	367, 366, 0, 368, 560, 0, 369, 370, 0, 0,
	371, 372, 373, 0, 0, 374, 375, 376, 377, 0,
	378, 379, 381, 383, 380, 382, 387, 384, 385, 386,
	389, 0, 388, 0, 390, 391, 392, 396, 395, 397,
	394, 0, 393, 0, 0, 0, 398, 0, 561, 399,
	562, 401, 402, 0, 0, 403, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 409, 563, 0, 410, 0,
	564, 411, 412, 404, 413, 414, 0, 416, 417, 418,
	419, 420, 0, 421, 422, 565, 566, 567, 423, 568,
	424, 425, 0, 426, 0, 427, 428, 429, 430, 0,
	432, 433, 569, 435, 434, 436, 0, 437, 0, 0,
	0, 0, 0, 438, 0, 440, 441, 442, 439, 443,
	444, 445, 446, 0, 447, 448, 449, 0, 450, 451,
	452, 453, 570, 0, 0, 455, 456, 462, 463, 457,
	458, 464, 465, 466, 467, 468, 0, 470, 471, 469,
	472, 473, 474, 0, 475, 459, 460, 476, 477, 0,
	478, 479, 480, 481, 482, 483, 571, 0, 484, 0,
	485, 486, 487, 488, 461, 489, 494, 572, 490, 491,
	492, 493, 573, 0, 496, 497, 0, 495, 0, 498,
	499, 500, 501, 502, 503, 321, 504, 0, 505, 574,
	575, 576, 577, 0, 512, 0, 506, 507, 578, 508,
	579, 0, 509, 510, 511, 0, 513, 514, 0, 0,
	515, 516, 517, 519, 520, 518, 521, 0, 522, 0,
	0, 523, 524, 525, 580, 581, 582, 0, 527, 526,
	583, 0, 0, 0, 0, 528, 529, 584, 530, 531,
	532, 1609, 1610, 0, 1642, 1643, 1644, 1652, 1653, 1654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1645, 1640, 0, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 0, 1658, 0,
	0, 0, 0, 0, 0, 1609, 1610, 0, 1642, 1643,
	1644, 1652, 1653, 1654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1611, 0, 0, 1645, 1640, 0, 0,
	0, 0, 0, 1631, 1612, 0, 0, 0, 0, 0,
	0, 1628, 1658, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1611, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1631, 0, 0,
	0, 0, 0, 0, 0, 1628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1609,
	1610, 0, 1642, 1643, 1644, 1652, 1653, 1654, 1634, 1635,
	1636, 1637, 0, 0, 0, 0, 0, 0, 1617, 0,
	1645, 1640, 0, 0, 0, 0, 0, 0, 1612, 0,
	0, 0, 0, 0, 0, 0, 1658, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1649, 0, 0,
	1659, 0, 1634, 1635, 1636, 1637, 1639, 1641, 0, 0,
	0, 1611, 1617, 0, 0, 0, 0, 0, 0, 0,
	0, 1631, 1655, 0, 1656, 0, 0, 0, 0, 1628,
	0, 1626, 1627, 0, 0, 0, 0, 0, 0, 0,
	0, 1649, 0, 0, 1659, 0, 0, 0, 0, 1647,
	1639, 1641, 0, 0, 0, 0, 0, 0, 0, 0,
	1632, 0, 0, 0, 0, 0, 1655, 0, 1656, 0,
	0, 0, 0, 0, 0, 1626, 1627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1657, 0, 0, 0,
	0, 0, 0, 1647, 0, 0, 1634, 1635, 1636, 1637,
	0, 0, 0, 1646, 1632, 0, 1617, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1657, 0, 0, 0, 0, 1649, 0, 0, 1659, 0,
	0, 0, 0, 0, 1639, 1641, 0, 1646, 0, 0,
	0, 0, 0, 0, 0, 1638, 0, 0, 0, 0,
	1655, 0, 1656, 0, 0, 0, 0, 0, 0, 1626,
	1627, 0, 0, 0, 0, 1633, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1632, 1638,
	1650, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1633,
	0, 0, 0, 0, 1657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1646, 0, 0, 1650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1648, 1638, 0, 0, 1623, 1624, 1630, 1651,
	1629, 1625, 0, 1622, 1620, 1621, 1613, 1614, 1615, 1616,
	1618, 1619, 0, 1633, 0, 0, 0, 0, 0, 0,
	2841, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1648, 0, 1650, 0,
	1623, 1624, 1630, 1651, 1629, 1625, 0, 1622, 1620, 1621,
	1613, 1614, 1615, 1616, 1618, 1619, 0, 0, 0, 0,
	0, 0, 0, 0, 2840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1609, 1610,
	0, 1642, 1643, 1644, 1652, 1653, 1654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1645,
	1640, 0, 0, 0, 0, 0, 0, 1612, 0, 0,
	0, 0, 0, 0, 0, 1658, 0, 0, 0, 0,
	1648, 0, 0, 0, 1623, 1624, 1630, 1651, 1629, 1625,
	0, 1622, 1620, 1621, 1613, 1614, 1615, 1616, 1618, 1619,
	1611, 0, 0, 0, 0, 0, 0, 0, 2273, 0,
	1631, 0, 0, 0, 0, 0, 0, 0, 1628, 0,
	1609, 1610, 0, 1642, 1643, 1644, 1652, 1653, 1654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1645, 1640, 0, 0, 0, 0, 0, 0, 1612,
	0, 0, 0, 0, 0, 0, 0, 1658, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1611, 0, 0, 1634, 1635, 1636, 1637, 0,
	0, 0, 1631, 0, 0, 1617, 0, 0, 0, 0,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1649, 0, 0, 1659, 0, 0,
	0, 0, 0, 1639, 1641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1655,
	0, 1656, 0, 0, 0, 0, 0, 0, 1626, 1627,
	0, 0, 0, 0, 0, 0, 0, 1634, 1635, 1636,
	1637, 0, 0, 0, 0, 0, 1647, 1617, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1649, 0, 0, 1659,
	0, 0, 0, 1657, 0, 1639, 1641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1646, 1655, 0, 1656, 0, 0, 0, 0, 0, 0,
	1626, 1627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1632,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 0, 0, 0, 0,
	0, 0, 1633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1650, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1609, 1610,
	0, 1642, 1643, 1644, 1652, 1653, 1654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1645,
	1640, 0, 0, 0, 1638, 0, 0, 1612, 0, 0,
	0, 0, 0, 0, 0, 1658, 0, 0, 0, 0,
	0, 0, 0, 0, 1633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1611, 0, 0, 0, 0, 0, 0, 0, 0, 1650,
	1631, 0, 0, 0, 0, 0, 0, 0, 1628, 1648,
	0, 0, 0, 1623, 1624, 1630, 1651, 1629, 1625, 0,
	1622, 1620, 1621, 1613, 1614, 1615, 1616, 1618, 1619, 0,
	0, 0, 0, 4009, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1634, 1635, 1636, 1637, 0,
	0, 0, 0, 0, 0, 1617, 0, 0, 0, 0,
	0, 1648, 0, 0, 0, 1623, 1624, 1630, 1651, 1629,
	1625, 0, 1622, 1620, 1621, 1613, 1614, 1615, 1616, 1618,
	1619, 0, 0, 0, 1649, 4005, 0, 1659, 0, 0,
	0, 0, 0, 1639, 1641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1655,
	0, 1656, 0, 0, 0, 0, 0, 0, 1626, 1627,
	0, 0, 0, 0, 1609, 1610, 0, 1642, 1643, 1644,
	1652, 1653, 1654, 0, 0, 0, 1647, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 1640, 1632, 0, 0,
	0, 0, 0, 1612, 0, 0, 0, 0, 0, 0,
	0, 1658, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1657, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1611, 0, 0, 0,
	1646, 0, 0, 0, 0, 0, 1631, 0, 0, 0,
	0, 0, 0, 0, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1609, 1610,
	0, 1642, 1643, 1644, 1652, 1653, 1654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1645,
	1640, 0, 1638, 0, 0, 0, 0, 1612, 0, 0,
	0, 0, 0, 0, 0, 1658, 0, 0, 0, 0,
	0, 0, 1633, 0, 0, 0, 0, 0, 0, 0,
	0, 1634, 1635, 1636, 1637, 0, 0, 0, 0, 0,
	1611, 1617, 0, 0, 0, 0, 0, 1650, 0, 0,
	1631, 0, 0, 0, 0, 0, 0, 0, 1628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1649, 0, 0, 1659, 0, 0, 0, 0, 0, 1639,
	1641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1655, 0, 1656, 0, 0,
	0, 0, 0, 0, 1626, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1647, 0, 0, 1634, 1635, 1636, 1637, 0,
	0, 0, 0, 1632, 0, 1617, 0, 0, 0, 1648,
	0, 0, 0, 1623, 1624, 1630, 1651, 1629, 1625, 0,
	1622, 1620, 1621, 1613, 1614, 1615, 1616, 1618, 1619, 1657,
	0, 0, 0, 3915, 1649, 0, 0, 1659, 0, 0,
	0, 0, 0, 1639, 1641, 0, 1646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1655,
	0, 1656, 0, 0, 0, 0, 0, 0, 1626, 1627,
	0, 0, 0, 0, 1609, 1610, 0, 1642, 1643, 1644,
	1652, 1653, 1654, 0, 0, 0, 1647, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 1640, 1632, 1638, 0,
	0, 0, 0, 1612, 0, 0, 0, 0, 0, 0,
	0, 1658, 0, 0, 0, 0, 0, 0, 1633, 0,
	0, 0, 0, 1657, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1611, 0, 0, 0,
	1646, 0, 0, 1650, 0, 0, 1631, 0, 0, 0,
	0, 0, 0, 0, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1633, 0, 0, 0, 0, 0, 0, 0,
	0, 1634, 1635, 1636, 1637, 0, 0, 0, 0, 0,
	0, 1617, 0, 0, 0, 1648, 0, 1650, 0, 1623,
	1624, 1630, 1651, 1629, 1625, 0, 1622, 1620, 1621, 1613,
	1614, 1615, 1616, 1618, 1619, 0, 0, 0, 0, 3914,
	1649, 0, 0, 1659, 0, 0, 0, 0, 0, 1639,
	1641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1655, 0, 1656, 0, 0,
	0, 0, 0, 0, 1626, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1632, 0, 0, 0, 0, 0, 1648,
	0, 0, 0, 1623, 1624, 1630, 1651, 1629, 1625, 0,
	1622, 1620, 1621, 1613, 1614, 1615, 1616, 1618, 1619, 1657,
	0, 0, 0, 3763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1609, 1610, 0, 1642, 1643, 1644, 1652, 1653,
	1654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1645, 1640, 0, 0, 0, 1638, 0,
	0, 1612, 0, 0, 0, 0, 0, 0, 0, 1658,
	0, 0, 0, 0, 0, 0, 1609, 1610, 1633, 1642,
	1643, 1644, 1652, 1653, 1654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1611, 0, 0, 1645, 1640, 0,
	0, 0, 0, 1650, 1631, 1612, 0, 0, 0, 0,
	0, 0, 1628, 1658, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1611, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1631, 0,
	0, 0, 0, 0, 0, 0, 1628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1634,
	1635, 1636, 1637, 0, 0, 0, 0, 0, 0, 1617,
	0, 0, 0, 0, 0, 1648, 0, 0, 0, 1623,
	1624, 1630, 1651, 1629, 1625, 0, 1622, 1620, 1621, 1613,
	1614, 1615, 1616, 1618, 1619, 0, 0, 0, 1649, 3626,
	0, 1659, 0, 1634, 1635, 1636, 1637, 1639, 1641, 0,
	0, 0, 0, 1617, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1655, 0, 1656, 0, 0, 0, 0,
	0, 0, 1626, 1627, 0, 0, 0, 0, 0, 0,
	0, 0, 1649, 0, 0, 1659, 0, 0, 0, 0,
	1647, 1639, 1641, 0, 0, 0, 0, 0, 0, 0,
	0, 1632, 0, 0, 0, 0, 0, 1655, 0, 1656,
	0, 0, 0, 0, 0, 0, 1626, 1627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1657, 0, 0,
	0, 0, 0, 0, 1647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1646, 1632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1657, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1646, 0,
	0, 0, 0, 0, 0, 0, 1638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1609, 1610, 1633, 1642, 1643, 1644,
	1652, 1653, 1654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 1640, 0, 0, 0,
	1638, 1650, 0, 1612, 0, 0, 0, 0, 0, 0,
	0, 1658, 0, 0, 0, 0, 0, 0, 0, 0,
	1633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1611, 0, 0, 0,
	0, 0, 0, 0, 0, 1650, 1631, 0, 0, 0,
	0, 0, 0, 0, 1628, 0, 0, 0, 1609, 1610,
	0, 1642, 1643, 1644, 1652, 1653, 1654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1645,
	1640, 0, 0, 0, 0, 0, 0, 1612, 0, 0,
	0, 0, 0, 1648, 0, 1658, 0, 1623, 1624, 1630,
	1651, 1629, 1625, 0, 1622, 1620, 1621, 1613, 1614, 1615,
	1616, 1618, 1619, 0, 0, 0, 0, 3570, 0, 0,
	1611, 1634, 1635, 1636, 1637, 0, 0, 0, 0, 0,
	1631, 1617, 0, 0, 0, 0, 0, 1648, 1628, 0,
	0, 1623, 1624, 1630, 1651, 1629, 1625, 0, 1622, 1620,
	1621, 1613, 1614, 1615, 1616, 1618, 1619, 0, 0, 0,
	1649, 3569, 0, 1659, 0, 0, 0, 0, 0, 1639,
	1641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1655, 0, 1656, 0, 0,
	0, 0, 0, 0, 1626, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1634, 1635, 1636, 1637, 0,
	0, 0, 1647, 0, 0, 1617, 0, 0, 0, 0,
	0, 0, 0, 1632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1649, 0, 0, 1659, 0, 1657,
	0, 0, 0, 1639, 1641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1646, 0, 0, 1655,
	0, 1656, 0, 0, 0, 0, 0, 0, 1626, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1657, 0, 0, 0, 0, 1633, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1650, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1609, 1610, 0, 1642,
	1643, 1644, 1652, 1653, 1654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1645, 1640, 0,
	0, 0, 1638, 0, 0, 1612, 0, 0, 0, 0,
	0, 0, 0, 1658, 0, 0, 0, 0, 0, 0,
	1609, 1610, 1633, 1642, 1643, 1644, 1652, 1653, 1654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1611, 0,
	0, 1645, 1640, 0, 0, 0, 0, 1650, 1631, 1612,
	0, 0, 0, 0, 0, 1648, 1628, 1658, 0, 1623,
	1624, 1630, 1651, 1629, 1625, 0, 1622, 1620, 1621, 1613,
	1614, 1615, 1616, 1618, 1619, 0, 0, 0, 0, 3568,
	0, 0, 1611, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1631, 0, 0, 0, 0, 0, 0, 0,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1634, 1635, 1636, 1637, 0, 0, 0,
	0, 0, 0, 1617, 0, 0, 0, 0, 0, 1648,
	0, 0, 0, 1623, 1624, 1630, 1651, 1629, 1625, 0,
	1622, 1620, 1621, 1613, 1614, 1615, 1616, 1618, 1619, 0,
	0, 0, 1649, 3272, 0, 1659, 0, 1634, 1635, 1636,
	1637, 1639, 1641, 0, 0, 0, 0, 1617, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1655, 0, 1656,
	0, 0, 0, 0, 0, 0, 1626, 1627, 0, 0,
	0, 0, 0, 0, 0, 0, 1649, 0, 0, 1659,
	0, 0, 0, 0, 1647, 1639, 1641, 0, 0, 0,
	0, 0, 0, 0, 0, 1632, 0, 0, 0, 0,
	0, 1655, 0, 1656, 0, 0, 0, 0, 0, 0,
	1626, 1627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1657, 0, 0, 0, 0, 0, 0, 1647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1646, 1632,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1646, 0, 0, 0, 0, 0, 0, 0,
	1638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1609, 1610,
	1633, 1642, 1643, 1644, 1652, 1653, 1654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1645,
	1640, 0, 0, 0, 1638, 1650, 0, 1612, 0, 0,
	0, 0, 0, 0, 0, 1658, 0, 0, 0, 0,
	0, 0, 0, 0, 1633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1611, 0, 0, 0, 0, 0, 0, 0, 0, 1650,
	1631, 0, 0, 0, 0, 0, 0, 0, 1628, 0,
	0, 0, 1609, 1610, 0, 1642, 1643, 1644, 1652, 1653,
	1654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1645, 1640, 0, 0, 0, 0, 0,
	0, 1612, 0, 0, 0, 0, 0, 1648, 0, 1658,
	0, 1623, 1624, 1630, 1651, 1629, 1625, 0, 1622, 1620,
	1621, 1613, 1614, 1615, 1616, 1618, 1619, 0, 0, 0,
	0, 2838, 0, 0, 1611, 1634, 1635, 1636, 1637, 0,
	0, 0, 0, 0, 1631, 1617, 0, 0, 0, 0,
	0, 1648, 1628, 0, 0, 1623, 1624, 1630, 1651, 1629,
	1625, 0, 1622, 1620, 1621, 1613, 1614, 1615, 1616, 1618,
	1619, 0, 0, 0, 1649, 2837, 0, 1659, 0, 0,
	0, 0, 0, 1639, 1641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1655,
	0, 1656, 0, 0, 0, 0, 0, 0, 1626, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1634,
	1635, 1636, 1637, 0, 0, 0, 1647, 0, 0, 1617,
	0, 0, 0, 0, 0, 0, 0, 1632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1649, 0,
	0, 1659, 0, 1657, 0, 0, 0, 1639, 1641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1646, 0, 0, 1655, 0, 1656, 0, 0, 0, 0,
	0, 0, 1626, 1627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1632, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1657, 0, 0,
	0, 0, 1633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1650, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1609, 1610, 0, 1642, 1643, 1644, 1652, 1653, 1654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1645, 1640, 0, 0, 0, 1638, 0, 0, 1612,
	0, 0, 0, 0, 0, 0, 0, 1658, 0, 0,
	0, 0, 0, 0, 0, 0, 1633, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1611, 0, 0, 0, 0, 0, 0, 0,
	0, 1650, 1631, 0, 0, 0, 0, 0, 0, 1648,
	1628, 0, 0, 1623, 1624, 1630, 1651, 1629, 1625, 0,
	1622, 1620, 1621, 1613, 1614, 1615, 1616, 1618, 1619, 0,
	0, 0, 0, 2836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1634, 1635, 1636,
	1637, 0, 0, 0, 0, 0, 0, 1617, 4131, 0,
	0, 0, 0, 1648, 0, 0, 0, 1623, 1624, 1630,
	1651, 1629, 1625, 0, 1622, 1620, 1621, 1613, 1614, 1615,
	1616, 1618, 1619, 0, 0, 0, 1649, 2835, 0, 1659,
	0, 0, 0, 0, 0, 1639, 1641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1655, 0, 1656, 0, 0, 0, 0, 0, 0,
	1626, 1627, 0, 0, 0, 0, 1609, 1610, 0, 1642,
	1643, 1644, 1652, 1653, 1654, 0, 0, 0, 1647, 0,
	0, 0, 0, 0, 0, 0, 0, 1645, 1640, 1632,
	0, 0, 0, 2773, 0, 1612, 0, 0, 0, 0,
	0, 0, 0, 1658, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1611, 0,
	0, 0, 1646, 0, 0, 0, 0, 0, 1631, 0,
	0, 0, 0, 0, 0, 0, 1628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4130, 0,
	1609, 1610, 0, 1642, 1643, 1644, 1652, 1653, 1654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2774, 0,
	0, 1645, 1640, 0, 1638, 0, 0, 0, 0, 1612,
	0, 0, 0, 0, 0, 0, 0, 1658, 0, 0,
	0, 0, 0, 0, 1633, 0, 0, 0, 0, 0,
	0, 0, 0, 1634, 1635, 1636, 1637, 0, 0, 0,
	0, 0, 1611, 1617, 0, 0, 0, 0, 0, 1650,
	0, 0, 1631, 0, 0, 0, 0, 0, 0, 0,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1649, 0, 0, 1659, 0, 0, 0, 0,
	0, 1639, 1641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1655, 0, 1656,
	0, 0, 0, 0, 0, 0, 1626, 1627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1647, 0, 0, 1634, 1635, 1636,
	1637, 0, 0, 0, 0, 1632, 0, 1617, 0, 2898,
	0, 1648, 2897, 0, 0, 1623, 1624, 1630, 1651, 1629,
	1625, 0, 1622, 1620, 1621, 1613, 1614, 1615, 1616, 1618,
	1619, 1657, 0, 0, 0, 0, 1649, 0, 0, 1659,
	0, 0, 0, 0, 0, 1639, 1641, 0, 1646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1655, 0, 1656, 0, 0, 0, 0, 0, 2393,
	1626, 1627, 0, 0, 0, 0, 1609, 1610, 0, 1642,
	1643, 1644, 1652, 1653, 1654, 0, 0, 0, 1647, 0,
	0, 0, 0, 0, 0, 0, 0, 1645, 1640, 1632,
	1638, 0, 2392, 0, 0, 1612, 0, 0, 0, 0,
	0, 0, 0, 1658, 0, 0, 0, 0, 0, 0,
	1633, 0, 0, 0, 0, 1657, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1611, 0,
	0, 0, 1646, 0, 0, 1650, 0, 0, 1631, 0,
	0, 0, 0, 0, 0, 0, 1628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1633, 0, 0, 0, 0, 0,
	0, 0, 0, 1634, 1635, 1636, 1637, 0, 0, 0,
	0, 0, 0, 1617, 0, 0, 0, 1648, 0, 1650,
	0, 1623, 1624, 1630, 1651, 1629, 1625, 0, 1622, 1620,
	1621, 1613, 1614, 1615, 1616, 1618, 1619, 0, 0, 0,
	0, 0, 1649, 0, 0, 1659, 0, 0, 0, 0,
	0, 1639, 1641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1655, 0, 1656,
	0, 0, 0, 0, 0, 0, 1626, 1627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1632, 0, 0, 0, 0,
	0, 1648, 0, 0, 0, 1623, 1624, 1630, 1651, 1629,
	1625, 0, 1622, 1620, 1621, 1613, 1614, 1615, 1616, 1618,
	1619, 1657, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1609, 1610, 0, 1642, 1643, 1644, 1652, 1653,
	1654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1645, 1640, 0, 0, 0, 0, 0,
	1638, 1612, 0, 0, 0, 0, 0, 0, 0, 1658,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1611, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1631, 1650, 0, 0, 0, 0,
	0, 0, 1628, 0, 0, 1609, 1610, 0, 1642, 1643,
	1644, 1652, 1653, 1654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1645, 1640, 0, 0,
	0, 0, 0, 0, 1612, 0, 0, 0, 0, 0,
	0, 0, 1658, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1611, 0, 1634,
	1635, 1636, 1637, 0, 0, 0, 0, 1631, 0, 1617,
	0, 0, 0, 0, 0, 1628, 0, 1648, 0, 0,
	0, 1623, 1624, 1630, 1651, 1629, 1625, 0, 1622, 1620,
	1621, 1613, 1614, 1615, 1616, 1618, 1619, 0, 1649, 0,
	0, 1659, 0, 0, 0, 0, 0, 1639, 1641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1655, 0, 1656, 0, 0, 0, 0,
	0, 0, 1626, 1627, 0, 0, 0, 0, 0, 0,
	0, 0, 1634, 1635, 1636, 1637, 0, 0, 0, 0,
	1647, 0, 1617, 0, 0, 0, 0, 0, 0, 0,
	0, 1632, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1649, 0, 0, 1659, 0, 0, 1657, 0, 0,
	1639, 1641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1646, 935, 1655, 0, 1656, 0,
	0, 0, 0, 0, 0, 1626, 1627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1657, 0, 0, 0, 0, 0, 1633, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1650, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1609, 1610, 0, 1642, 1643, 1644, 1652, 1653, 1654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1645, 1640, 0, 0, 0, 0, 0, 1638,
	1612, 0, 0, 0, 0, 0, 0, 0, 1658, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1611, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1631, 1650, 0, 0, 0, 0, 0,
	0, 1628, 0, 1648, 0, 0, 0, 1623, 1624, 1630,
	1651, 1629, 1625, 0, 1622, 1620, 1621, 1613, 1614, 1615,
	1616, 1618, 1619, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1609,
	1610, 0, 1642, 1643, 1644, 1652, 1653, 1654, 1634, 1635,
	1636, 1637, 0, 0, 0, 0, 0, 0, 1617, 0,
	1645, 1640, 0, 2904, 0, 2899, 1648, 0, 1612, 0,
	1623, 1624, 1630, 1651, 1629, 1625, 1658, 1622, 1620, 1621,
	1613, 1614, 1615, 1616, 1618, 1619, 0, 1649, 0, 0,
	1659, 0, 0, 0, 0, 0, 1639, 1641, 0, 0,
	0, 1611, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1631, 1655, 0, 1656, 0, 0, 0, 0, 1628,
	0, 1626, 1627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1647,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1657, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1634, 1635, 1636, 1637,
	0, 0, 0, 1646, 0, 0, 1617, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1649, 0, 0, 1659, 0,
	0, 0, 0, 0, 1639, 1641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1638, 0, 0, 0, 0,
	1655, 0, 1656, 0, 0, 0, 0, 0, 0, 1626,
	1627, 0, 0, 0, 0, 1633, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1632, 0,
	1650, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1609, 1610, 0, 1642, 1643,
	1644, 1652, 1653, 1654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1645, 1640, 0, 0,
	0, 0, 1648, 1638, 1612, 0, 1623, 1624, 1630, 1651,
	1629, 1625, 1658, 1622, 1620, 1621, 1613, 1614, 1615, 1616,
	1618, 1619, 0, 1633, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1611, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1631, 1650, 0,
	0, 0, 0, 0, 0, 1628, 0, 1609, 1610, 0,
	1642, 1643, 1644, 1652, 1653, 1654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1645, 1640,
	0, 0, 0, 2839, 0, 0, 1612, 0, 0, 0,
	0, 0, 0, 0, 1658, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1611,
	0, 0, 1634, 1635, 1636, 1637, 0, 0, 0, 1631,
	0, 0, 1617, 0, 0, 0, 0, 1628, 0, 0,
	1648, 0, 0, 0, 1623, 1624, 1630, 1651, 1629, 1625,
	0, 1622, 1620, 1621, 1613, 1614, 1615, 1616, 1618, 1619,
	0, 1649, 0, 0, 1659, 0, 0, 0, 0, 0,
	1639, 1641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1655, 0, 1656, 0,
	0, 0, 0, 0, 0, 1626, 1627, 0, 0, 0,
	0, 0, 0, 0, 1634, 1635, 1636, 1637, 0, 0,
	0, 0, 0, 1647, 1617, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1649, 0, 0, 1659, 0, 0, 0,
	1657, 0, 1639, 1641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1646, 1655, 0,
	1656, 0, 0, 0, 0, 0, 0, 1626, 1627, 0,
	0, 0, 0, 0, 0, 0, 0, 2866, 0, 0,
	0, 0, 0, 0, 0, 1647, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 0, 0, 0, 0, 0, 0, 1633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1650, 0, 0, 0, 0, 0,
	0, 0, 0, 1609, 1610, 0, 1642, 1643, 1644, 1652,
	1653, 1654, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1645, 1640, 0, 0, 0, 0,
	0, 1638, 1612, 0, 0, 0, 0, 0, 0, 0,
	1658, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1633, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1611, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 1650, 0, 0, 0,
	0, 0, 0, 1628, 0, 0, 1648, 0, 0, 0,
	1623, 1624, 1630, 1651, 1629, 1625, 0, 1622, 1620, 1621,
	1613, 1614, 1615, 1616, 1618, 1619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1609, 1610, 0, 1642, 1643, 1644, 1652, 1653, 1654,
	1634, 1635, 1636, 1637, 0, 0, 0, 0, 0, 0,
	1617, 0, 1645, 1640, 0, 0, 0, 0, 1648, 0,
	1612, 0, 1623, 1624, 1630, 1651, 1629, 1625, 1658, 1622,
	1620, 1621, 1613, 1614, 1615, 1616, 1618, 1619, 0, 1649,
	0, 0, 1659, 0, 0, 0, 0, 0, 1639, 1641,
	0, 0, 0, 1611, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1631, 1655, 0, 1656, 0, 0, 0,
	0, 1628, 0, 1626, 1627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1647, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1657, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1634, 1635,
	1636, 1637, 0, 0, 0, 1646, 0, 0, 1617, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1649, 0, 0,
	1659, 0, 0, 0, 0, 0, 1639, 1641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1638, 0, 0,
	0, 0, 1655, 0, 1656, 0, 0, 0, 0, 0,
	0, 1626, 1627, 0, 0, 0, 0, 1633, 0, 1609,
	1610, 0, 1642, 1643, 1644, 1652, 1653, 1654, 0, 1647,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1632, 1640, 1650, 0, 0, 0, 0, 0, 1612, 0,
	0, 0, 0, 0, 0, 0, 1658, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1657, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1611, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1631, 0, 0, 0, 0, 0, 0, 0, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1648, 1638, 0, 0, 1623, 1624,
	1630, 1651, 1629, 1625, 0, 1622, 1620, 1621, 1613, 1614,
	1615, 1616, 1618, 1619, 0, 1633, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1634, 1635, 1636, 1637,
	0, 0, 0, 0, 0, 0, 1617, 0, 0, 0,
	1650, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1649, 0, 0, 1659, 0,
	0, 0, 0, 0, 1639, 1641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1655, 0, 1656, 0, 0, 0, 0, 0, 0, 1626,
	1627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1632, 0,
	0, 0, 1648, 0, 0, 0, 1623, 1624, 1630, 1651,
	1629, 1625, 0, 1622, 1620, 1621, 1613, 1614, 1615, 1616,
	1618, 1619, 0, 0, 1657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1638, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1633, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1650, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1648, 0, 0, 0, 1623, 1624, 1630, 1651, 1629, 1625,
	0, 1622, 1620, 1621, 1613, 1614, 1615, 1616, 1618, 1619,
}
var sqlPact = [...]int{

	4505, -1000, -1000, -1000, -1000, 259, -1000, -1000, 257, 256,
	255, 253, 251, 249, 248, 246, 243, -1000, -1000, -1000,
	-1000, -1000, -1000, 242, -1000, -1000, 239, -1000, 233, 221,
	219, -1000, -1000, 216, -1000, 215, -1000, -1000, -1000, -1000,
	214, 212, 211, 76017, 75537, 76491, 2203, 92727, 81243, 2020,
	67881, 92247, 67401, 91767, 91287, 2633, 208, -1000, 90807, 207,
	206, 205, -1000, 90327, -1000, 1718, -1000, 204, 4593, 55387,
	200, 199, 198, 2133, 185, -1000, 181, 180, -1000, 9371,
	1598, -1000, 177, 174, -1000, 10985, 5921, 80289, 172, 168,
	2541, 164, 163, 54906, 162, 161, 2522, 2798, -1000, -1000,
	2049, -1000, -1000, 160, 156, 154, 153, 152, 150, 148,
	144, 143, 142, -1000, 140, 136, 135, 134, 133, 132,
	130, 129, -1000, 127, 123, 121, 120, 119, 117, 115,
	110, 109, 108, 107, 99, -1000, 11425, 95, 1844, 1691,
	1688, 1682, 1669, 1606, 1005, 92, 91, 89, 87, 85,
	84, 83, 82, 81, -1000, 79, 76, 75, 74, 70,
	68, 67, 66, 182, 63, 58, 54, 50, 49, 48,
	45, 2381, -1000, 1698, 1508, 25976, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 98415, 93201, 44, -127, 41, -1000, 3169,
	987, 45754, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 329, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 517, 1899, 787,
	-1000, -1000, -1000, 89853, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2199, -130, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 786, -1000, 2198, 124, 2131, -1000, -1000, -1000, -1000,
	-1000, 93201, -1000, 1062, -1000, -1000, 3557, 3555, 1979, 783,
	89379, -1000, 1565, -1000, 971, 27488, -1000, 1220, -1000, 27488,
	326, -1000, -1000, -1000, -1000, -1000, -1000, 3554, 3551, 3549,
	3547, -1000, -1000, 66921, 19874, 66441, 65961, 88899, 19384, 75057,
	74577, 88419, 62135, 1060, -1000, -1000, -1000, 1456, -1000, -1000,
	-1000, -1000, -1000, -1000, 7, 59685, 3373, 93201, -1000, 320,
	-1000, -1000, -1000, -1000, -1000, -1000, 39296, 1021, 38780, 763,
	38264, 729, -1000, -1000, -1000, 61645, -1000, 3546, 3537, 1137,
	3536, 3084, 97941, 1808, 3535, 1887, 1227, 3533, 3532, 3531,
	3530, 3529, 3527, 1441, 87939, 2840, 87459, 1784, 61155, 1059,
	74097, 76491, 2589, 86979, 1435, 1425, -1000, -1000, -1000, -1000,
	2979, 2797, 2778, 51564, -1000, -1000, 3525, 3524, 3523, 3521,
	3520, 97467, 1733, 3519, 2450, 3514, 3512, 3511, 3507, 3500,
	3499, 3498, -1000, 73617, 1058, 73137, 72657, 3215, 86499, 72177,
	86019, 60665, 37748, 1379, -1000, -1000, -1000, 47688, 6922, 6393,
	85539, 49647, 76491, 76491, -1000, -1000, -1000, -1000, -1000, 37232,
	768, 36716, 1376, -1000, -1000, 48183, 2795, -1000, -1000, -1000,
	-1000, 36200, 606, 35684, 1080, 93201, -1000, 2839, 1831, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2628, 1554, 3388, 2644, 60175, 1993, 1434, 3182, 2976,
	2975, 1472, 3497, 2442, 2939, 2936, 2933, 2931, 2923, 1767,
	2518, 537, 25460, 2829, 1743, 35168, 1553, 1478, 2921, 2904,
	3399, 1928, 1896, 2062, 65481, 3495, 3494, 3130, 2902, 2888,
	2792, -1000, -1000, -1000, -1000, 1458, -1000, -1000, -1000, -1000,
	-1000, 68355, -1000, -1000, 1210, -1000, -1000, 1210, -1000, -1000,
	-1000, -1000, -1000, 1363, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1698, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2245, -1000, 1970, -1000,
	-1000, 2504, 3115, 3115, 3115, 3224, 482, 471, -1000, 182,
	-1000, -1000, 104852, -1000, -1000, 39800, 39800, 39800, 39800, 39800,
	39800, 39800, 2047, -1000, 782, -1000, -1000, 845, -1000, 781,
	620, -1000, -1000, -1000, -1000, -1000, -1000, 780, -1000, -1000,
	-1000, -1000, -1000, -1000, 3373, -1000, 22376, -1000, -1000, -1000,
	503, 779, 39800, -1000, -1000, 3410, 3409, 977, -1000, 317,
	983, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2835, 778, 775, -1000, 774, 773, 771,
	770, 767, -1000, -1000, -1000, 760, 757, 756, 755, 752,
	749, 748, 747, -1000, 1972, -1000, -1000, -1000, -1000, -1000,
	-1000, 704, 697, 697, 697, -1000, 1051, -1000, -1000, -1000,
	346, 695, 327, 694, 693, 691, -1000, 745, 743, 742,
	740, 737, 732, 731, 730, 724, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1050, -1000, -1000, -1000, -1000, 6, 93201, -1000,
	517, 6, -1000, -1000, 722, -1000, 29516, 29516, 29516, -1000,
	-1000, 2195, 39800, -1000, 2982, -1000, 17, 17, 948, 46712,
	-1000, 44778, 948, 962, 834, 51083, -1000, 2791, -1000, -1000,
	721, 306, -1000, -1000, -1000, -1000, 20362, 2785, 93201, 93201,
	76491, 76491, 76491, 3029, 39800, -1000, -1000, 57283, 93201, 76965,
	3326, 57757, 56809, 93201, 2834, -1000, 3135, -1000, -1000, 93201,
	-1000, 39800, -1000, 3323, 1540, 63101, 3274, -16, -1000, -1000,
	-1000, -1000, -1000, -1000, 2416, 2575, 1183, 2221, 1881, -1000,
	27488, 3072, -1000, -1000, -1000, 305, 20362, -1000, -1000, -1000,
	-1000, -1000, 3159, 2969, 1448, -1000, 2219, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1759, 2960, -1000, 1967,
	2956, 1756, -1000, -1000, 2163, -1000, -1000, 3116, -1000, -1000,
	1841, 2955, 18, -1000, -1000, 2594, -1000, -1000, 2008, -1000,
	-1000, 1031, 2953, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 71697, 49159, 48183, 59685, 1, -1000, -1000, -1000,
	-1000, -65, -1000, 18894, 104852, -1000, -1000, -1000, -1000, 1826,
	104852, 889, -1000, -1000, 2951, -1000, 104852, 875, -1000, -1000,
	2950, -1000, 2833, -1000, -1000, -1000, -1000, 3492, -1000, 3491,
	2330, 3490, 3489, 3488, -1000, 1660, 1946, 3487, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 71223, 2192, -1000, -1000, 70263,
	-1000, 2327, -1000, 70743, 1055, -1000, 1031, 2326, -1000, 79809,
	953, -1000, 3486, 3203, 2616, 1031, 2319, -1000, -1000, -1000,
	-1000, -1000, 52995, -1000, 52995, -1000, 52995, -1000, 1610, -1000,
	96993, 17, 17, 3373, -1000, -1000, -1000, -1000, -1000, 2949,
	3485, 3482, 3480, -1000, 93201, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 191, 2948, -1000, -1000, 79335, 191, 2946, -1000,
	191, 2944, -1000, 78861, -1000, -1000, 2217, 2941, -1000, 194,
	2940, -1000, -1000, 192, 2937, -1000, -1000, -132, 2934, -1000,
	-1000, 104852, -1000, -1000, -1000, -4, -1000, -1000, -1000, 987,
	-1000, 47193, -1000, 47193, 85059, 62623, 991, 739, 54425, 104852,
	-1000, -1000, -1000, -1000, 104852, -1000, -1000, -1000, -229, -1000,
	-1000, 62623, 48183, 104852, -1000, -1000, -1000, -1000, 104852, -1000,
	-1000, -1000, 62623, 70263, -1000, 84579, 69789, -1000, -1000, 1433,
	2491, -1000, -1000, -1000, 62623, 1265, 62623, 62623, 62623, -1000,
	84099, -1000, -1000, 2048, 1762, 3122, 2001, 76491, -1000, 1986,
	-1000, -1000, -1000, 3150, -1000, 2832, -1000, 56335, 78387, -1000,
	77913, -1000, 77439, -1000, 76491, -1000, 76491, -1000, 3479, 3477,
	3475, -1000, 3472, 3141, -1000, 104852, 3139, -1000, 3471, 3271,
	2829, 104852, -1000, 2980, 1695, 1686, 93201, -1000, -1000, 93201,
	-1000, 93201, -1000, -1000, -1000, 1506, -1000, -1000, 2415, -1000,
	-1000, -1000, -1000, 76491, -1000, -1000, -1000, -1000, -1000, -1000,
	2826, -1000, 1689, -1000, 1857, -1000, 1409, -1000, -1000, 195,
	-1000, -1000, -16, -1000, 96519, -1000, 2504, -1000, 93201, -1000,
	2358, 2816, 2825, 1518, 2179, 2515, -1000, 34652, 2474, 42320,
	2216, 182, -1000, -1000, 182, 182, 26984, -1000, -1000, 57757,
	57757, 20362, 1377, 39800, 39800, 39800, 39800, 39800, 39800, 39800,
	39800, 39800, 39800, 39800, 39800, 39800, 39800, 39800, 39800, 39800,
	39800, 39800, 39800, 39800, 39800, 39800, 39800, 39800, 39800, 39800,
	39800, 39800, 39800, 39800, 39800, 39800, 39800, 39800, 2173, 39800,
	1354, 39800, 39800, 39800, 39800, 2135, -1000, -1000, 1920, 536,
	1951, -1000, 3368, 3368, 3368, 1083, 1083, 105218, 105218, 621,
	3469, 845, -1000, 39800, -1000, 131, 39800, 20852, -1000, 471,
	6837, 2347, -1000, 469, 21368, -1000, -1000, -1000, 22376, 620,
	34136, 39800, 1042, 104852, -1000, -1000, 1639, 3386, 18406, 2852,
	2677, 716, 836, 829, 24944, 24428, 23912, 23396, 563, 39800,
	39800, 39800, 39800, 39800, 39800, 39800, 39800, -1000, -1000, 3391,
	-1000, 3386, -1000, -1000, -1000, -1000, 3386, 1374, 1371, 3386,
	-1000, 3386, 3386, 3035, 3035, 33632, 33116, 32600, 42824, 32084,
	39800, 22880, 31568, 31052, -1000, 93201, 6, 3321, 39800, 111,
	-1000, 103285, -1000, 111, 111, 714, -11, 104852, 2460, 2460,
	46233, 2281, 2097, 2097, 2097, -1000, 948, 14473, 948, 83147,
	2108, 948, 948, 298, 310, 468, 44299, 2982, 83147, 798,
	713, 40, 34, 31, -1000, -1000, 29, 20, -1000, -1000,
	76491, 711, 20852, 20362, 271, 1461, -14, 2547, 2531, 2529,
	-1000, 2512, 1837, -20, 1353, 76491, -55, -1000, 235, -21,
	-1000, 1275, 268, 3386, -1000, -1000, -1000, -1000, -1000, 3467,
	3466, -1000, 1045, 708, 705, 427, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 704, 697, 697, 697, -1000, 346,
	695, 327, 694, 693, 691, -1000, -1000, -1000, -1000, -1000,
	2784, 76491, -65, 76965, 76491, 919, -27, 1158, -16, -1000,
	-1000, -1000, 63101, 1210, -1000, 1963, -1000, -1000, -1000, -1000,
	-1000, -1000, 1450, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	977, -1000, -1000, -1000, -1000, -1000, -1000, 3379, 3375, 4,
	-1000, -1000, 20362, -1000, -17, 1694, 1789, -1000, 65001, 2329,
	3117, 3109, 1601, -1000, 1504, 1341, 3210, 68355, 3288, 3299,
	784, -1000, 2782, -1000, -1000, 970, 1644, 1782, 1340, 68355,
	1967, -1000, 57757, -1000, 2588, 3208, 1397, 1372, 1397, 1397,
	1395, -1000, 68355, 1779, 1338, 1337, -1000, 1336, -1000, -33,
	3287, 3295, 710, -1000, 2781, 1334, -1000, -1000, 76491, 20362,
	1512, 1510, 1774, 1332, 2, -1000, 3283, 3282, 1328, 1323,
	-1000, 1737, -1000, 62623, 1745, 2932, 946, 2638, 946, 1,
	59685, 93201, 262, -1000, 131, 39800, 39800, 131, 39800, 131,
	3269, -1000, -1000, 2930, -1000, -1000, -1000, 3465, 1914, 2445,
	-1000, -1000, 690, 2310, 2780, 93201, 2551, -1, 76491, -1000,
	2925, 1967, 2308, -1000, -1000, 69309, -1000, 2924, 517, 2307,
	-1000, 648, 3464, -1000, 96045, -1000, 3135, 1384, 2922, 1094,
	190, 3319, -1000, 190, 53469, -1000, 93201, -1000, -1000, 93201,
	-1000, -1000, -1000, 3462, -1000, 76491, -1000, -1000, 76491, 191,
	2917, -1000, 76491, -1000, 76491, 186, 2916, -1000, -1000, 93201,
	-1000, 76491, 76491, -1000, 93201, 93201, 62623, 62623, 6062, 64053,
	-28, -30, 464, -1000, 83625, 93201, 1093, 64527, 93201, 3060,
	1028, 48183, -1000, -35, -229, 2637, 991, 991, 946, -1000,
	946, -1000, 76491, 2823, -1000, -1000, 62623, 991, 991, 991,
	-1000, -1000, -1000, -1000, 3460, 3459, -1000, -1000, -1000, 1030,
	76491, 93201, 76491, -1000, -1000, 93201, -1000, 93201, -1000, 1030,
	93201, 1030, 93201, 1030, 93201, -1000, -1000, -1000, -1000, -1000,
	-1000, 131, 39800, -1000, -1000, 3458, 1678, -1000, 2822, -1000,
	2818, -1000, 61, -1000, -1000, -1000, -1000, -1000, 2000, 76491,
	76491, 76491, 76491, 93201, 76491, -1000, 68355, -1000, 2358, 2816,
	-1000, -1000, -1000, -1000, -1000, -1000, 1446, 2144, -1000, 2486,
	-1000, 1523, -1000, -1000, -1000, 104852, 43312, -1000, -1000, 104852,
	1869, -1000, 41816, 41312, -1000, -1000, 1701, 76491, 2557, -1000,
	2557, -191, -1000, 102965, 2484, 76491, -1000, -1000, -1000, -1000,
	-1000, 967, 1339, 1339, 1398, 1398, 1398, 1398, 3229, 980,
	1959, 2252, 5239, 5239, 1074, 1074, 1074, 1074, 1074, 5239,
	237, 1083, 1083, 237, 237, 237, 237, 237, 1083, 1083,
	1083, 5239, 5239, 5239, 105218, 104990, 10525, 39800, 39800, 1320,
	1873, 536, 9969, 39800, 10705, 10705, 10705, 10705, -1000, 1913,
	-1000, -1000, -1000, -1000, 2779, 687, 42824, 42824, -1000, -1000,
	-1000, -1000, 21872, 39800, -1000, -1000, -1000, -1000, 30536, -1000,
	-1000, 7673, -273, 463, -183, -29, -1000, 39800, 39800, 39800,
	462, -1000, 261, 39800, 93201, -1000, 99508, 796, -156, -1000,
	-36, 1414, -1000, 39800, -1000, -1000, 1314, -1000, 1312, 1303,
	1301, -1000, 684, 460, -1000, 238, -1000, 2085, 681, 678,
	39800, -1000, -1000, -1000, -1000, -1000, 102421, -1000, -1000, 102337,
	-1000, -1000, 102019, -1000, -1000, 101975, -1000, -1000, -1000, 104536,
	99414, 99370, 13842, 5825, 13244, 11813, -37, 459, -38, 456,
	952, 951, 455, 453, 452, -43, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -44, 451, -1000, 2776, -183, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 449, -1000, 448,
	-1000, 104454, -183, 447, 5040, -1000, 42824, 42824, 42824, -1000,
	446, -1000, 103059, -1000, 104138, 30032, 30032, 30032, 444, 104000,
	39800, -183, -52, -1000, -53, -1000, -1000, 556, -62, 1039,
	29516, 45273, 20362, -1000, 1039, 1039, 39800, -1000, 39800, 2507,
	-1000, -1000, -1000, 2499, 2208, 2460, 46233, -1000, -1000, -1000,
	-1000, 83147, -1000, 3373, 2643, -1000, 83147, -1000, -1000, 93201,
	517, -1000, 83147, 83147, 20362, 948, -1000, 948, 83147, 700,
	-1000, -1000, -1000, -1000, -1000, 443, 50125, -29, 236, 20362,
	1031, -1000, 2524, 2524, 2524, 2524, -1000, -1000, 93201, 1290,
	0, 3344, -1000, 1995, -1000, 57757, -1000, 844, 1182, 20362,
	-1000, -1000, -1000, 663, -1000, 3386, 3386, -1000, 3386, 93201,
	2774, 103, -1000, 27488, -1000, 1210, -1000, -1000, 1522, -1000,
	1924, -1000, 1269, -1000, -1000, -1000, -1000, 27488, -1000, 2788,
	93201, 93201, 76491, -1000, 93201, -1000, 2306, 95571, 2305, 57757,
	93201, -1000, -1000, 662, 650, 2482, 2471, 1090, 93201, 93201,
	2469, 95097, 94623, 93201, 2053, 39800, 59211, 2149, 1938, 131,
	131, -1000, -1000, 131, 647, 1259, 76491, 76491, 93201, 76491,
	1742, -1000, -1000, -1000, -1000, -1000, 68829, -1000, -1000, 3390,
	3389, -1000, 1397, -1000, -1000, -1000, 1397, 1967, 1617, 93201,
	76491, 59211, 93201, 2009, 131, 131, -1000, -1000, 131, 645,
	20362, 1971, -1000, 2849, 93201, 3407, 93201, 93201, 93201, 59211,
	3157, 94149, 93201, 93201, 59211, 1737, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 58733, 1103, 1031, 1768, 1288,
	68355, 1023, 48183, 2621, -1000, -1000, 17918, -1000, 104852, 104852,
	-1000, 104852, -1000, 55861, 93201, -1000, 1053, 93201, 64527, 979,
	2915, 52521, -65, 991, 62623, 76491, -1, 93201, -1000, 1967,
	2914, 517, 2299, -1000, 62623, 3318, 2910, 637, 3457, 3454,
	-1000, 2189, 2285, -1000, -1000, 93675, 2983, 872, 93201, 1039,
	46233, 1948, -1000, 50605, 1073, 93201, 1850, 100, -1000, -1000,
	-1000, 47, 93201, -1000, 3453, -1000, -1000, 191, -1000, 76491,
	191, 191, -1000, 76491, 76491, 2217, -1000, 194, -1000, 192,
	-1000, -132, -1000, -1000, 6062, 6062, 991, -215, 628, -1000,
	936, 934, 48671, 62623, -63, -1000, -1000, -1000, -1000, -1000,
	76491, 93201, 735, 2607, 93201, -68, -1000, 196, 625, -1000,
	2506, -1000, -1000, 1028, 48183, 2770, -1000, -1000, 1035, -1000,
	1392, 991, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 15, -65, -65, -1000, 1030, -1000, 1030, -1000, 1030,
	-1000, 104852, -1000, -1000, 1659, 1621, 93201, -1000, 20362, 93201,
	76491, 20362, 76491, 2813, 2803, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1112, -1000, 1869, 2140, -1000, 620, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2403, -1000,
	-3, 26984, 2224, -1000, -1000, 76491, 11, 39800, 39800, 6941,
	6003, 39800, 42824, 42824, -1000, 39800, 5294, -1000, -1000, -1000,
	-1000, -1000, 2766, 619, 39800, 57757, 4282, 891, -1000, 442,
	9103, 237, -1000, 39800, -1000, 441, 29012, -1000, 103601, -45,
	-69, -1000, 14974, -183, -70, -1000, -1000, 833, -1000, 2911,
	-1000, 39800, 103684, 2346, 2042, 1805, 1696, 3386, 3406, 17430,
	-1000, 53947, 1040, 2112, 101657, -1000, -1000, -1000, -1000, 57757,
	57757, 39800, 39800, -1000, 39800, 39800, 39800, -1000, -1000, -1000,
	3386, 958, -1000, -1000, -1000, 958, -1000, -1000, 1397, -1000,
	1397, -1000, 39800, -1000, -1000, 2764, 39800, -1000, 57757, 57757,
	42824, 42824, 42824, 42824, 42824, 42824, 42824, 42824, 42824, 42824,
	42824, 42824, 42824, 42824, 42824, 42824, 42824, 42824, 42824, 2444,
	42824, 3363, 3363, 3363, -1000, 2800, 2764, 39800, 39800, 57757,
	439, 437, 429, -1000, 39800, -183, -1000, -1000, 6062, 615,
	-1000, 2312, -1000, 2675, -1000, 39800, -1000, -151, -1000, 2982,
	-1000, -1000, 2675, 2675, -71, 104852, 46233, 46233, -1000, 612,
	39800, 2494, -1000, -1000, 795, -276, -1000, 933, -1000, -1000,
	-1000, -1000, -1000, 517, -1000, -1000, -1000, 187, 83147, 83147,
	793, -1000, -78, -1000, -1000, -80, -1000, 3312, 428, 20362,
	-1000, -1000, 3140, -1000, -1000, -1000, -1000, -1000, -1000, -65,
	93201, 2130, 3405, -1000, 3387, 826, 792, 183, 3386, 425,
	421, 420, -65, 93201, 93201, -1000, -16, -1000, -1000, -1000,
	39800, -1000, -1000, 3113, 1286, 1283, -1000, -1000, 2908, -1000,
	2280, -1000, 1077, -1000, 1889, -1000, 39800, 39800, 607, 605,
	3450, 1880, 3447, 1092, 2907, 2217, 2906, 2217, -1000, -1000,
	955, -1000, 104852, -1000, -1000, -1000, -1000, 604, 603, -1000,
	-17, 1605, 1763, 1034, -1000, -1000, 39800, 39800, 82673, -1000,
	407, 3116, 9, -1000, -1000, 1731, 1282, -1000, -1000, -1000,
	-1000, 1967, 1710, 1281, -1000, -1000, -1000, -1000, -1000, 1032,
	-1000, -1000, 39800, -1000, -33, 1277, 3286, 2265, 76491, 1258,
	-1000, 1257, -1000, -1000, -1000, 3277, 2217, 2903, 1218, -1000,
	-1000, -1000, -1000, -1000, 58245, -1000, 93201, 76491, 1613, -1000,
	2229, 946, 1023, 2757, -1000, 2527, 3442, 76491, 3439, 419,
	-81, -49, 57757, 3311, -1000, 2151, 644, 76491, 954, -1000,
	3373, -1000, -1000, -1000, -1000, 76491, 3310, 2901, 1031, 131,
	76491, 3404, -1000, -1000, 76491, 2894, 2187, 2261, 2428, 872,
	63579, -1000, 1031, 2110, -124, -1000, 1850, 28496, 3119, -83,
	-1000, -1000, -1000, 1039, 53469, 46233, 39800, 3438, -88, -1000,
	-1000, 191, -1000, -1000, -1000, 186, -1000, -1000, -1000, -1000,
	-1000, -1000, 81721, 81721, 62623, 62623, 62623, 991, 93201, 93201,
	64527, -1000, 600, 93201, 93201, 593, -1000, 93201, 93201, 3427,
	62623, -50, 591, -1000, 930, 920, 918, -1000, -1000, -1000,
	-1000, -1000, -1000, -229, 131, -1000, 2128, 76491, -1000, 16942,
	-1000, -1000, -1000, -1000, -1000, 1030, -1000, -1000, 2019, 2212,
	2019, 1867, 1865, -1000, 2136, -1000, -1000, -1000, -1000, 2543,
	3121, 20362, 3281, 10705, 39800, 39800, 4506, 559, 499, 10705,
	39800, 39800, 57757, 383, -91, 39800, 39800, -1000, 39800, 701,
	104852, 3403, 39800, 415, 409, -1000, -1000, -1000, 3384, -1000,
	-1000, -1000, 104852, 39800, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 405, -1000, 112, -1000, -1000, -1000, 98889, -1000, 39800,
	404, 3204, -1000, 402, 395, 8536, 301, 101573, 101255, 101211,
	394, -1000, -1000, 393, 392, 104852, 2800, 104852, -1000, -1000,
	818, 818, 1342, 1342, 1342, 1342, 3363, 866, 1671, 361,
	916, 916, 916, 813, 673, 673, 916, 916, 916, 2756,
	2334, 590, 5148, -1000, -1000, 104852, 104852, 385, -1000, -1000,
	-1000, -183, 381, 6062, -1000, 2664, 3202, 104852, -1000, 46233,
	2664, 2664, -1000, -1000, 2208, 93201, 104852, 46233, -1000, 2643,
	-1000, 15473, -1000, 20362, -1000, -1000, -1000, -1000, 3373, -1000,
	50125, -1000, 589, -1000, 62, 3140, -1000, 915, -1000, -65,
	-1000, -1000, 564, 3426, 817, 20362, 369, -1000, -1000, -1000,
	-65, -65, 104852, 93201, 93201, 93201, 2892, -1000, 4210, -1000,
	1090, 100893, -94, -1000, 102965, 39800, 93201, -1000, -1000, 1875,
	2493, 1131, -1000, 3162, 93201, -1000, 93201, -1000, -1000, 93201,
	93201, 76491, 93201, 2872, -96, 104852, -93, -1000, 913, -1000,
	1357, -1000, 16454, 93201, 76491, 93201, 76491, 2869, -99, 20362,
	-1000, 3402, 3401, 2891, 3173, 3400, 93201, -1000, 93201, 76491,
	3055, -1000, -1000, -1000, -1000, 1692, 1254, -101, 588, -1000,
	909, -1000, -1000, 908, 1023, -1000, 62623, 48183, -1000, 517,
	-1000, 2598, -1000, 80763, 2162, 131, -1000, 3425, 82199, 586,
	-1000, 2124, -1000, 560, 1967, 131, 76491, -1000, -1000, 517,
	347, -108, -1000, 1087, 20362, 76491, 2890, 2432, 872, 63579,
	-1000, 1384, 2515, -1000, -116, -1000, 575, 131, 2110, -1000,
	-124, 104852, -1000, 894, -1000, -1000, -1000, -102, -1000, -1000,
	344, -1000, 3053, 3051, -1000, 2694, 39800, 583, 581, 93201,
	3049, -1000, -1000, -107, 2731, 2731, 62623, 48183, 62623, 1028,
	-1000, 2290, -1000, -1000, -1000, -1000, -1000, 20362, 1616, -1000,
	562, 561, -1000, -1000, -1000, -1000, 3121, 10705, 10705, 39800,
	39800, 39800, 10705, 383, -110, -1000, 10705, 10705, -183, -1000,
	-1000, 103601, -1000, -1000, -1000, 104852, -1000, 15966, 2022, -1000,
	100667, -1000, 26984, -1000, -1000, 39800, 39800, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 42824, 2745, 557, 57757, -1000,
	-1000, 342, 1037, 39800, 39800, 2982, 1037, 1037, -1000, -113,
	-1000, -1000, -1000, 3373, 62, -1000, -1000, 3423, 20362, -1000,
	62623, 800, -1000, 3422, -1000, -1000, -1000, -1000, -1000, 93201,
	-1000, 93201, -1000, 20362, 93201, 2704, 2256, -1000, -1000, 2457,
	546, 42824, 76491, 853, -1000, 3336, 2703, 1894, 39800, 2224,
	-133, -138, 2250, -1000, -1000, 2235, 39800, -1000, 57757, 545,
	2217, 2217, -139, -141, -1000, -1000, 39800, 1242, 93201, 27992,
	-1000, 3421, 3116, -1000, -1000, -1000, -1000, 39800, 1232, -1000,
	-1000, -1000, 3397, 2217, 20362, -1000, 2217, 2217, 3173, 1116,
	93201, 76491, 2175, 2175, 62623, 48183, -1000, -132, 1023, 3309,
	2009, 2632, -1000, -1000, -1000, -1000, 2456, -1000, -1000, 93201,
	2446, 994, -1000, -149, -1000, 888, 884, 64527, 979, 969,
	-1000, -1000, -1000, 517, 3308, -1000, 3395, 543, 93201, 2183,
	539, 20362, -1000, 872, 63579, -1000, 2983, 1850, -1000, 2945,
	93201, 3101, -1000, 2515, 536, -1000, 991, 533, 530, 3167,
	3167, -155, 39800, 39800, -157, 529, 991, -1000, -160, -1000,
	-1000, -1000, -1000, -144, -1000, 825, 622, -1000, -1000, 76491,
	76491, 39800, 39800, -1000, 10705, 10705, 10705, -1000, 334, -1000,
	-1000, 2110, 3200, -1000, -150, 100573, 100347, 6053, 42824, 57757,
	-163, -1000, -1000, 93201, 104852, -183, -1000, -1000, -1000, 348,
	-1000, -1000, 3417, -1000, -1000, 2015, -1000, -1000, -1000, 93201,
	2249, -1000, 1089, 39800, 5148, 528, 39800, -1000, 3304, -1000,
	2577, 2736, 2598, 527, -1000, -1000, -1000, -1000, -1000, 1084,
	1909, -1000, -1000, 104852, 3173, 39800, -1000, -1000, 526, 525,
	104852, 524, 871, 2741, -1000, -1000, -1000, 104852, 523, 3286,
	-1000, -1000, -1000, -1000, 2217, 76491, -1000, -1000, -1000, -165,
	-1000, -1000, 1916, 131, 979, -1000, 2043, 2162, 522, -1000,
	-1000, 2148, 2549, -1000, 82199, 27488, 27488, 333, 3300, 969,
	-1000, 3380, -1000, 3297, 131, -1000, 39800, -1000, 76491, 39800,
	2182, 63579, -1000, 2428, -1000, 1311, -166, 93201, 1850, -1000,
	-1000, 62623, 62623, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1084, -168, -176, -1000, 62623, -1000,
	-1000, 2290, -1000, 93201, -1000, 93201, -1000, -1000, -178, -181,
	-1000, 1997, 39800, 26984, -1000, -1000, 6053, -184, -1000, -175,
	-1000, 3292, -1000, -1000, -1000, -1000, 2885, 2662, 100029, 2376,
	93201, 99947, -1000, 2734, -1000, -1000, 2009, 93201, 2598, 2640,
	76491, 1088, -190, 2019, 2019, 39800, 26480, 2028, 39800, -1000,
	-1000, 3173, -1000, 2688, 3372, -1000, 2148, 76491, 93201, -1000,
	3145, -1000, 2972, -1000, -1000, -1000, 2598, 131, -1000, -1000,
	131, -1000, -192, 1087, -193, 76491, -1000, 2432, 1595, -1000,
	1039, -1000, -1000, -195, -209, 1894, 1084, 990, -216, -1000,
	-217, -218, -1000, -1000, 332, 40808, 40808, 40808, -183, -191,
	-1000, 93201, 521, 2856, 1019, -1000, 2159, 1786, 328, 1107,
	-1000, -1000, 2703, -224, -1000, 1018, 517, -1000, 39800, 1084,
	-226, -1000, 1072, -227, -1000, 1068, -233, -1000, 2740, -1000,
	-234, 2217, 1015, 3262, -1000, -1000, -1000, -1000, 514, -235,
	-1000, -1000, 2167, -1000, 2009, 994, -1000, 1084, 512, 1894,
	511, -1000, 53469, -1000, 991, 991, 2598, 1894, 1039, 510,
	991, -1000, -1000, -1000, 2938, -1000, 43800, 2154, 1854, 102739,
	2938, 2938, -1000, -1000, 93201, 3245, -1000, 2180, 2164, 1428,
	-1000, -1000, -1000, -1000, -1000, -1000, 1039, -1000, 3241, 2376,
	104852, 2598, -1000, 2019, 2627, -1000, 2019, 2693, -1000, 2027,
	-1000, -1000, -1000, 2880, 3362, 93201, -1000, 93201, 1830, 1824,
	3416, 979, 2148, 1894, 39800, 2598, 39800, -232, -1000, -1000,
	2009, 2598, -1000, -1000, -1000, 1771, 3332, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 868, -1000, 2943, -1000, 1106,
	2055, 2055, -1000, 862, 2159, -1000, -1000, 509, -1000, 496,
	-1000, 1795, -1000, -1000, -242, -1000, -1000, 3414, -1000, 2148,
	-1000, 2598, -248, 2009, -249, -1000, 990, 2009, 1852, -1000,
	-1000, 2106, 40304, 39800, -1000, 3351, -1000, -1000, 2424, -1000,
	39800, 2703, 39800, 39800, 2122, 2210, -1000, -1000, 2009, 1084,
	990, 1894, 1039, 990, -1000, -1000, -1000, 104852, -1000, -1000,
	-1000, 104852, -1000, -254, -256, 52043, -1000, -1000, -1000, 990,
	1894, 1039, 2598, -1000, 1039, 2009, 1165, -215, 81721, 1039,
	2598, -1000, 2009, -1000, -1000, 486, -259, -1000, 2009, 990,
	39800, -1000, 990, 1039, -262, 1039, -1000, 2009, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4158, 4157, 4156, 4155, 4154, 4151, 4150, 4149, 4147,
	4145, 4143, 4142, 4139, 4138, 4137, 4135, 4133, 4130, 4129,
	4124, 4123, 4122, 4120, 4113, 4111, 4110, 4107, 4105, 4104,
	4103, 4102, 4101, 4100, 4096, 4093, 4089, 4088, 4085, 4084,
	4083, 4082, 4081, 4080, 4078, 4077, 4075, 4073, 4072, 4070,
	4069, 4065, 4064, 43, 4063, 4061, 4059, 4058, 4057, 4056,
	4055, 4051, 4050, 4049, 4048, 4046, 4044, 4043, 4042, 4041,
	4040, 4039, 45, 4038, 233, 4037, 4036, 4030, 4027, 4024,
	4023, 4022, 4021, 4020, 4018, 4017, 4013, 232, 4011, 130,
	4009, 4007, 4005, 4004, 4003, 231, 4002, 4001, 3994, 3992,
	240, 3991, 3990, 3986, 3985, 3983, 3981, 3977, 3976, 3975,
	60, 131, 3974, 3971, 64, 3970, 3966, 3964, 3963, 3962,
	3961, 3959, 3957, 3956, 3955, 201, 3954, 229, 3950, 3948,
	3940, 3937, 3936, 3935, 3933, 3932, 3931, 3928, 3927, 3926,
	3925, 3924, 3923, 3919, 3917, 3915, 3912, 3911, 3909, 3907,
	3906, 3903, 3900, 3898, 3897, 3896, 3892, 3891, 3888, 243,
	161, 3886, 3885, 228, 227, 3881, 3880, 3879, 3878, 3877,
	104, 4, 31, 3875, 3874, 61, 62, 63, 83, 85,
	78, 3871, 90, 3868, 102, 47, 3866, 14, 26, 147,
	204, 9066, 198, 3864, 3863, 3862, 209, 165, 3858, 208,
	3855, 3854, 3853, 3851, 80, 65, 153, 149, 138, 139,
	301, 3850, 3849, 86, 58, 42, 30, 3847, 3845, 3844,
	3069, 108, 3841, 226, 206, 135, 3832, 3831, 3827, 2027,
	3824, 37, 3821, 180, 75, 101, 56, 100, 3820, 116,
	24, 3818, 142, 40, 3817, 129, 76, 59, 7724, 8405,
	3815, 95, 74, 88, 389, 151, 140, 170, 202, 168,
	178, 175, 143, 933, 3813, 218, 3812, 3312, 49, 125,
	3810, 3807, 3805, 57, 167, 87, 3802, 3801, 48, 1,
	5, 23, 152, 34, 99, 12, 3798, 15, 3795, 3792,
	3789, 3785, 28, 141, 3782, 237, 3780, 84, 38, 17,
	3771, 35, 182, 3765, 193, 106, 3763, 3762, 223, 177,
	157, 3761, 82, 196, 3757, 3749, 3746, 3743, 3742, 112,
	21, 110, 3741, 3728, 117, 199, 164, 3722, 41, 3721,
	145, 79, 109, 239, 103, 187, 97, 191, 154, 192,
	3716, 3711, 3710, 159, 3709, 3707, 184, 119, 3705, 3704,
	171, 242, 32, 53, 197, 54, 163, 136, 3703, 169,
	3702, 3699, 3696, 241, 158, 179, 6, 2, 69, 105,
	29, 7, 195, 122, 269, 93, 3694, 4993, 1470, 1526,
	3692, 3690, 114, 98, 51, 107, 124, 225, 52, 3689,
	3688, 2314, 3687, 3686, 3685, 3684, 156, 3682, 3681, 3680,
	113, 134, 173, 3678, 77, 68, 11, 96, 280, 238,
	92, 185, 133, 214, 3677, 172, 3674, 44, 137, 3672,
	166, 216, 3671, 3670, 144, 3668, 121, 408, 46, 123,
	3664, 183, 3662, 3659, 3657, 3656, 3655, 3654, 3653, 230,
	203, 3649, 3648, 3646, 115, 162, 3645, 224, 200, 148,
	72, 33, 3644, 71, 2534, 3643, 160, 205, 81, 146,
	3642, 1083, 39, 0, 10607, 9495, 6829, 10507, 3638, 4451,
	3635, 3634, 3633, 181, 120, 3630, 3628, 3627, 89, 3626,
	55, 3625, 3624, 50, 3623, 18, 8, 10, 20, 16,
	1987, 1575, 3621, 3620, 91, 118, 126, 3619, 236, 188,
	3615, 3613, 3612, 3611, 73, 3610, 27, 3609, 22, 3608,
	3607, 36, 9, 19, 3606, 3602, 215, 3598, 186, 211,
	3597, 128, 3596, 3300, 111, 3595, 3593, 220, 66, 3592,
	222, 3591, 3234, 3591, 3590, 3589, 13, 3588, 3587, 207,
	150, 189, 3583, 3582, 132, 3580, 3577, 3575, 219, 3572,
	3571, 25, 3570, 3, 3569, 3565, 174, 3031, 3564, 3562,
	67, 3560, 155,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 40, 40, 9, 9, 9, 9, 28,
	10, 10, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 16, 16, 29, 29, 17, 17, 31, 31, 18,
	18, 32, 32, 527, 527, 21, 34, 22, 35, 15,
	528, 528, 528, 528, 27, 23, 36, 25, 25, 25,
	25, 25, 173, 173, 173, 173, 20, 20, 30, 30,
	207, 207, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 526, 526, 209, 209, 208,
	203, 203, 529, 529, 210, 210, 210, 212, 212, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 428, 428,
	428, 459, 459, 459, 543, 543, 544, 544, 544, 544,
	544, 113, 113, 42, 42, 42, 42, 521, 521, 175,
	175, 175, 177, 177, 176, 176, 176, 176, 63, 63,
	535, 535, 536, 536, 534, 533, 533, 537, 537, 537,
	174, 174, 174, 109, 109, 109, 109, 110, 110, 111,
	111, 178, 178, 178, 180, 180, 179, 179, 179, 179,
	179, 179, 179, 179, 184, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 91, 91, 461, 461, 462, 462,
	169, 169, 170, 170, 170, 170, 171, 171, 172, 172,
	172, 56, 181, 181, 183, 183, 182, 182, 44, 44,
	44, 44, 44, 44, 44, 45, 45, 45, 45, 45,
	46, 46, 46, 46, 46, 46, 47, 47, 47, 47,
	47, 47, 54, 54, 54, 54, 160, 160, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 546, 546, 547, 547,
	548, 548, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 69, 69,
	294, 294, 266, 266, 70, 70, 70, 71, 71, 72,
	72, 58, 58, 519, 519, 309, 309, 419, 419, 74,
	74, 329, 329, 75, 75, 75, 75, 75, 75, 76,
	76, 76, 76, 76, 76, 76, 77, 77, 77, 77,
	77, 77, 77, 77, 77, 77, 77, 77, 77, 77,
	84, 84, 84, 84, 84, 85, 85, 85, 82, 82,
	82, 79, 79, 79, 78, 78, 78, 83, 83, 83,
	518, 257, 257, 81, 81, 81, 259, 259, 80, 80,
	80, 310, 310, 86, 86, 86, 86, 267, 87, 87,
	87, 87, 87, 87, 87, 87, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 421,
	421, 88, 88, 88, 389, 389, 92, 92, 92, 344,
	344, 93, 93, 93, 93, 93, 94, 94, 94, 94,
	94, 112, 112, 112, 112, 112, 523, 523, 302, 302,
	223, 223, 223, 223, 102, 102, 102, 102, 103, 103,
	103, 104, 104, 165, 165, 119, 119, 119, 119, 119,
	118, 118, 118, 118, 118, 118, 48, 48, 48, 49,
	49, 50, 50, 51, 51, 52, 52, 53, 53, 53,
	53, 53, 121, 121, 540, 540, 123, 120, 120, 120,
	122, 122, 122, 122, 124, 125, 125, 125, 125, 125,
	125, 125, 125, 126, 126, 453, 453, 318, 318, 451,
	451, 470, 470, 452, 452, 271, 271, 271, 271, 271,
	272, 272, 272, 460, 460, 460, 460, 460, 460, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 166,
	166, 167, 168, 168, 168, 168, 147, 147, 147, 159,
	159, 159, 159, 159, 159, 159, 150, 150, 150, 137,
	137, 128, 128, 128, 128, 128, 128, 128, 132, 132,
	132, 132, 132, 132, 132, 132, 129, 129, 139, 139,
	139, 139, 139, 133, 133, 134, 134, 136, 136, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 130, 130,
	130, 130, 141, 141, 141, 141, 351, 351, 351, 140,
	140, 140, 140, 140, 140, 140, 140, 140, 140, 140,
	158, 158, 158, 158, 158, 158, 538, 538, 539, 539,
	154, 154, 154, 154, 154, 154, 403, 403, 148, 148,
	148, 148, 153, 153, 153, 153, 334, 334, 145, 145,
	145, 146, 146, 146, 151, 151, 152, 149, 149, 155,
	155, 155, 155, 131, 131, 131, 550, 550, 550, 156,
	156, 144, 144, 157, 157, 157, 157, 157, 157, 157,
	157, 143, 143, 143, 142, 142, 142, 142, 135, 520,
	520, 516, 516, 516, 516, 516, 516, 516, 516, 517,
	517, 522, 522, 97, 97, 97, 97, 97, 105, 105,
	105, 105, 105, 98, 98, 98, 98, 98, 100, 100,
	99, 99, 99, 99, 64, 64, 64, 14, 14, 14,
	65, 65, 187, 187, 187, 188, 188, 279, 279, 279,
	279, 185, 185, 186, 186, 66, 66, 551, 551, 551,
	530, 530, 530, 531, 531, 531, 531, 531, 531, 273,
	273, 274, 274, 369, 369, 369, 369, 369, 277, 277,
	277, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	280, 280, 211, 211, 211, 283, 284, 284, 281, 281,
	282, 282, 282, 286, 286, 285, 288, 288, 287, 368,
	479, 479, 481, 481, 481, 481, 481, 481, 481, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	552, 552, 477, 477, 477, 478, 473, 473, 474, 474,
	474, 474, 474, 275, 275, 276, 276, 276, 276, 475,
	476, 300, 300, 406, 480, 480, 482, 482, 484, 553,
	553, 553, 553, 553, 553, 554, 554, 554, 367, 367,
	366, 366, 292, 292, 485, 485, 485, 485, 486, 486,
	486, 486, 486, 489, 488, 487, 487, 487, 487, 487,
	68, 68, 68, 331, 331, 330, 330, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 162, 162, 226, 226, 62, 62, 62, 12,
	12, 12, 532, 532, 532, 67, 67, 67, 67, 67,
	67, 225, 225, 225, 225, 225, 225, 225, 225, 525,
	525, 524, 524, 227, 227, 556, 556, 73, 73, 73,
	73, 73, 73, 73, 422, 422, 423, 423, 61, 61,
	61, 61, 61, 352, 352, 350, 350, 349, 349, 299,
	299, 405, 231, 231, 204, 204, 204, 26, 19, 19,
	24, 24, 38, 38, 38, 38, 41, 41, 37, 37,
	37, 37, 39, 39, 33, 33, 541, 541, 542, 542,
	101, 101, 106, 106, 106, 106, 106, 107, 107, 107,
	107, 108, 108, 108, 108, 117, 117, 161, 161, 161,
	161, 161, 161, 161, 43, 43, 43, 43, 55, 55,
	55, 55, 115, 558, 558, 558, 116, 116, 116, 557,
	557, 224, 224, 363, 363, 364, 364, 559, 559, 365,
	365, 365, 365, 218, 217, 219, 219, 60, 60, 60,
	213, 213, 214, 214, 215, 215, 216, 216, 560, 560,
	95, 95, 95, 164, 164, 265, 265, 265, 359, 359,
	359, 293, 293, 237, 237, 362, 362, 360, 360, 360,
	360, 328, 328, 328, 163, 163, 307, 307, 320, 320,
	321, 321, 416, 416, 322, 114, 114, 191, 191, 189,
	189, 189, 189, 189, 189, 189, 189, 196, 196, 197,
	197, 198, 198, 199, 200, 200, 200, 200, 311, 311,
	201, 201, 201, 190, 190, 190, 192, 192, 192, 192,
	192, 192, 192, 195, 195, 195, 195, 202, 202, 202,
	194, 194, 496, 496, 496, 498, 498, 500, 500, 499,
	499, 495, 495, 497, 497, 555, 555, 333, 333, 333,
	290, 291, 289, 289, 297, 297, 295, 296, 296, 298,
	298, 404, 404, 404, 205, 205, 205, 325, 325, 325,
	325, 326, 326, 355, 355, 353, 353, 353, 353, 354,
	354, 356, 356, 356, 357, 357, 358, 358, 324, 324,
	385, 385, 193, 193, 193, 304, 304, 304, 305, 305,
	375, 375, 375, 375, 375, 375, 376, 376, 374, 374,
	374, 374, 407, 407, 407, 407, 407, 407, 407, 407,
	407, 408, 409, 409, 306, 306, 410, 361, 361, 514,
	514, 514, 515, 515, 402, 402, 411, 411, 411, 411,
	411, 411, 400, 400, 401, 401, 417, 418, 418, 337,
	337, 337, 337, 335, 335, 338, 338, 338, 338, 336,
	336, 412, 412, 412, 412, 327, 327, 413, 413, 413,
	413, 414, 370, 371, 371, 424, 424, 424, 424, 426,
	303, 303, 303, 303, 303, 472, 471, 471, 425, 425,
	425, 425, 425, 425, 425, 425, 425, 440, 440, 440,
	440, 440, 440, 440, 440, 441, 441, 441, 441, 441,
	441, 441, 427, 427, 427, 427, 427, 431, 431, 431,
	430, 430, 430, 430, 430, 430, 430, 430, 430, 430,
	430, 432, 432, 437, 437, 438, 438, 438, 433, 434,
	439, 439, 439, 439, 561, 561, 443, 443, 435, 435,
	435, 435, 435, 435, 435, 435, 435, 429, 429, 429,
	436, 436, 436, 346, 346, 346, 346, 346, 346, 346,
	346, 346, 346, 346, 346, 346, 345, 345, 347, 347,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 379, 379, 379,
	379, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 490, 490, 490, 490,
	490, 490, 490, 490, 381, 381, 493, 493, 494, 494,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 491, 491, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 501,
	501, 502, 502, 504, 504, 505, 505, 506, 507, 507,
	507, 508, 509, 509, 503, 503, 510, 510, 510, 510,
	511, 511, 512, 512, 512, 512, 512, 513, 513, 513,
	513, 513, 391, 391, 392, 392, 398, 398, 398, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 228, 228, 228, 228, 228,
	316, 316, 314, 314, 314, 317, 317, 315, 315, 313,
	313, 312, 312, 388, 388, 386, 386, 390, 390, 339,
	339, 442, 442, 442, 442, 442, 442, 442, 442, 340,
	340, 340, 348, 341, 341, 342, 342, 342, 342, 342,
	382, 383, 343, 343, 343, 384, 384, 393, 397, 397,
	396, 395, 395, 394, 394, 372, 372, 373, 373, 323,
	323, 562, 562, 319, 319, 415, 415, 415, 415, 269,
	269, 308, 308, 268, 268, 260, 260, 261, 261, 261,
	261, 301, 301, 399, 399, 444, 444, 445, 445, 446,
	446, 447, 447, 448, 449, 450, 387, 387, 247, 246,
	234, 235, 245, 244, 243, 233, 236, 240, 241, 242,
	238, 239, 253, 252, 251, 258, 249, 250, 420, 232,
	262, 262, 263, 263, 263, 264, 264, 264, 264, 229,
	229, 230, 230, 254, 254, 255, 256, 256, 248, 248,
	248, 220, 220, 220, 221, 221, 222, 222, 458, 458,
	455, 455, 455, 456, 456, 456, 457, 457, 457, 457,
	454, 454, 454, 454, 454, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 467, 467, 467, 467, 467,
	467, 467, 464, 464, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 466, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 469, 469,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 3, 6,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 6, 4, 6, 6, 9, 6, 9, 6,
	5, 6, 5, 1, 1, 5, 5, 6, 6, 4,
	4, 4, 4, 3, 4, 4, 4, 7, 7, 9,
	8, 9, 5, 3, 5, 7, 4, 12, 4, 12,
	1, 3, 5, 5, 2, 5, 3, 6, 4, 6,
	5, 6, 6, 4, 8, 3, 4, 10, 3, 6,
	4, 3, 1, 3, 3, 2, 1, 1, 3, 1,
	3, 2, 2, 0, 1, 1, 0, 2, 0, 7,
	10, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 3, 6, 4, 6, 7,
	9, 5, 2, 6, 8, 7, 2, 0, 1, 2,
	5, 0, 1, 3, 3, 1, 1, 3, 12, 3,
	1, 0, 1, 1, 2, 2, 1, 3, 3, 0,
	5, 7, 0, 5, 6, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 6, 2, 0, 1, 2, 3, 1, 1, 2,
	1, 2, 1, 2, 2, 3, 3, 3, 3, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 6, 6, 6, 6, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 3, 3, 4,
	3, 4, 7, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 2, 0, 1, 0,
	1, 0, 3, 3, 3, 3, 3, 6, 4, 4,
	4, 3, 5, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 1, 2, 1, 2, 1, 2, 7, 3,
	2, 0, 1, 3, 3, 1, 0, 1, 2, 2,
	1, 6, 5, 1, 2, 1, 3, 2, 0, 9,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	1, 1, 3, 4, 6, 3, 1, 3, 3, 5,
	3, 1, 3, 2, 2, 2, 2, 1, 2, 2,
	5, 3, 3, 6, 6, 3, 1, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	3, 5, 7, 2, 3, 0, 3, 5, 2, 3,
	0, 2, 3, 2, 3, 2, 6, 4, 7, 7,
	2, 6, 4, 7, 7, 2, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	2, 4, 3, 2, 2, 1, 2, 1, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 1, 1, 5, 3, 2, 6,
	3, 3, 4, 4, 3, 1, 3, 2, 3, 3,
	1, 3, 1, 2, 1, 1, 2, 2, 3, 1,
	1, 1, 1, 1, 3, 2, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	2, 1, 3, 3, 3, 3, 2, 3, 3, 1,
	1, 1, 1, 1, 2, 2, 5, 7, 3, 3,
	3, 4, 4, 6, 5, 5, 5, 3, 4, 4,
	3, 4, 4, 3, 4, 4, 5, 3, 5, 5,
	5, 7, 3, 3, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 4, 3,
	4, 3, 3, 4, 4, 5, 0, 1, 1, 3,
	2, 4, 3, 3, 5, 3, 4, 3, 5, 3,
	3, 4, 4, 5, 3, 3, 1, 1, 0, 2,
	5, 4, 6, 4, 6, 4, 1, 0, 3, 4,
	4, 5, 7, 5, 3, 3, 2, 0, 4, 2,
	3, 4, 2, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 3, 4, 3, 1, 1, 1, 2,
	3, 2, 3, 6, 6, 7, 9, 7, 9, 3,
	4, 10, 10, 3, 5, 5, 5, 3, 5, 2,
	0, 1, 1, 1, 1, 3, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 6, 3, 6, 6, 3,
	11, 14, 1, 2, 3, 0, 4, 0, 4, 5,
	4, 3, 3, 1, 3, 10, 13, 0, 2, 3,
	1, 1, 0, 1, 2, 2, 2, 2, 1, 1,
	0, 1, 3, 1, 1, 1, 1, 3, 3, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	8, 0, 1, 1, 0, 2, 1, 0, 1, 0,
	9, 9, 3, 1, 3, 7, 1, 3, 11, 3,
	2, 0, 3, 1, 2, 2, 3, 2, 6, 2,
	1, 1, 2, 8, 4, 2, 5, 5, 5, 2,
	1, 3, 11, 12, 8, 5, 3, 1, 5, 9,
	7, 11, 3, 3, 0, 2, 4, 3, 3, 1,
	5, 1, 3, 1, 2, 0, 1, 2, 2, 0,
	1, 3, 3, 2, 2, 1, 1, 1, 4, 0,
	6, 0, 3, 0, 2, 2, 2, 0, 1, 1,
	2, 2, 0, 3, 3, 2, 1, 1, 2, 2,
	5, 8, 4, 1, 0, 1, 2, 2, 1, 2,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 4, 2, 2, 2, 4, 7, 3, 4,
	6, 3, 1, 1, 1, 8, 10, 11, 7, 10,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 8, 3, 6,
	6, 5, 3, 4, 1, 0, 1, 3, 17, 20,
	16, 19, 4, 2, 0, 1, 0, 1, 0, 1,
	3, 3, 2, 0, 1, 1, 0, 6, 6, 8,
	6, 8, 6, 7, 8, 9, 6, 8, 6, 7,
	8, 9, 6, 8, 6, 8, 1, 0, 2, 0,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 3, 2, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 0, 2, 4, 2, 1,
	0, 2, 1, 1, 0, 1, 3, 1, 0, 1,
	1, 1, 1, 2, 3, 2, 2, 8, 11, 3,
	3, 0, 3, 0, 3, 0, 3, 0, 1, 0,
	6, 7, 3, 6, 3, 1, 3, 1, 1, 4,
	2, 1, 3, 1, 3, 8, 5, 3, 4, 3,
	0, 2, 2, 0, 10, 3, 2, 0, 1, 3,
	1, 1, 3, 3, 5, 1, 1, 3, 3, 1,
	2, 4, 4, 2, 3, 5, 5, 1, 3, 1,
	0, 1, 2, 3, 2, 4, 2, 3, 0, 2,
	0, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 8, 8, 8, 2, 4, 4, 4,
	2, 2, 2, 2, 3, 1, 3, 1, 2, 6,
	7, 1, 0, 1, 0, 1, 0, 1, 1, 0,
	1, 5, 1, 0, 1, 0, 3, 3, 5, 1,
	3, 3, 4, 5, 2, 2, 0, 2, 2, 1,
	1, 1, 0, 1, 0, 2, 2, 5, 4, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	2, 0, 4, 2, 5, 3, 2, 0, 1, 3,
	3, 5, 1, 1, 1, 1, 1, 3, 2, 4,
	4, 0, 4, 4, 3, 4, 1, 5, 3, 4,
	5, 5, 1, 5, 1, 3, 2, 0, 3, 0,
	2, 3, 1, 3, 2, 0, 3, 5, 6, 4,
	6, 4, 3, 2, 1, 0, 5, 1, 0, 2,
	2, 2, 1, 1, 0, 1, 1, 1, 0, 4,
	2, 1, 2, 2, 4, 1, 3, 1, 2, 3,
	2, 2, 2, 1, 0, 2, 5, 7, 2, 1,
	2, 4, 3, 5, 0, 1, 3, 5, 1, 2,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	6, 6, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 3, 0, 5, 4, 1, 2, 1, 4, 1,
	1, 2, 1, 1, 1, 1, 1, 0, 1, 2,
	5, 1, 4, 2, 5, 1, 4, 3, 3, 0,
	1, 2, 4, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 1, 0, 1, 4,
	1, 3, 3, 3, 5, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 5, 4, 6,
	3, 5, 4, 6, 4, 6, 5, 7, 3, 3,
	3, 3, 3, 4, 3, 2, 4, 2, 3, 3,
	4, 3, 4, 3, 4, 5, 6, 6, 7, 6,
	7, 6, 7, 3, 4, 4, 1, 3, 1, 3,
	3, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 5, 6, 6, 7, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 6, 1, 1, 1,
	1, 1, 1, 2, 1, 5, 5, 6, 3, 1,
	1, 1, 2, 2, 2, 4, 3, 5, 6, 8,
	6, 5, 4, 3, 2, 2, 4, 1, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 6, 8, 8, 6, 4, 6, 6,
	6, 4, 1, 3, 3, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 1, 2, 3, 2, 3, 2, 3, 1,
	0, 1, 3, 1, 3, 3, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 1, 2, 3, 0, 3, 3, 2, 2, 1,
	2, 2, 3, 2, 1, 1, 1, 5, 1, 2,
	4, 2, 0, 1, 0, 3, 5, 1, 0, 1,
	2, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	3, 1, 3, 3, 1, 1, 1, 1, 5, 3,
	1, 1, 3, 1, 1, 1, 1, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 7, 1, 7, 5, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 0, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 518, -89, -86, -56, -54, -92, -93,
	-75, -94, -88, -112, -117, -101, -113, -119, -161, -166,
	-167, -168, -3, -42, -44, -57, -74, -76, -87, -96,
	-95, -97, -102, -109, -105, -91, -48, -114, -118, -127,
	-162, -163, -164, 31, 30, 94, 77, 143, 118, 126,
	181, 331, 367, 378, 359, 348, -122, -123, 395, -43,
	-55, -116, -115, 70, 119, 354, -4, -12, 28, 44,
	-45, -46, -47, 60, -62, -59, -69, -63, -545, 96,
	-497, -77, -80, -108, -549, 131, 150, 199, -98, -99,
	320, -103, -104, 361, -106, -107, 363, 151, -50, -49,
	145, -189, -191, -120, -121, -165, -128, -129, -130, -131,
	-132, -133, -134, -135, -136, -137, -138, -139, -140, -158,
	-141, -142, -143, -144, -149, -145, -146, -147, -148, -150,
	-151, -153, -154, -155, -156, -157, 399, -152, 453, 47,
	413, 79, 135, 371, 21, -5, -6, -7, -8, -9,
	-10, -11, -14, -13, -58, -60, -61, -64, -65, -66,
	-73, -67, -68, -496, -78, -79, -82, -84, -85, -81,
	-83, 360, -192, -190, 515, 467, -16, -21, -22, -17,
	-18, -20, -23, -19, -24, -29, -34, -35, -31, -32,
	-30, -33, -36, -37, -38, -39, -40, -41, -26, -27,
	-28, -15, -25, 485, 493, -195, -193, -194, -202, 387,
	475, 429, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, -267, 2, -249, -254, -255, -256, -248, -220,
	-466, -469, 4, -463, -467, 156, 208, 285, 21, 22,
	23, 24, 25, 26, 28, 29, 40, 41, 43, 42,
	44, 45, 46, 47, 51, 53, 57, 58, 59, 60,
	61, 65, 70, 71, 76, 77, 78, 79, 80, 81,
	82, 88, 85, 86, 87, 90, 92, 93, 94, 95,
	97, 99, 100, 108, 109, 110, 111, 113, 118, 119,
	122, 117, 121, 124, 125, 126, 129, 130, 131, 133,
	134, 136, 137, 138, 140, 141, 143, 144, 145, 148,
	146, 436, 147, 149, 150, 151, 152, 162, 163, 164,
	169, 171, 175, 176, 179, 180, 182, 186, 188, 189,
	190, 191, 192, 198, 199, 201, 202, 203, 204, 209,
	210, 214, 211, 220, 221, 225, 226, 227, 229, 233,
	234, 235, 236, 237, 238, 240, 242, 241, 244, 247,
	248, 251, 252, 253, 256, 257, 258, 259, 261, 262,
	265, 263, 266, 264, 268, 269, 270, 267, 273, 271,
	275, 276, 277, 283, 281, 279, 278, 280, 287, 290,
	196, 292, 293, 296, 314, 300, 301, 302, 305, 306,
	309, 312, 313, 315, 316, 317, 318, 319, 320, 321,
	322, 324, 325, 329, 331, 332, 334, 336, 337, 338,
	339, 340, 341, 342, 345, 344, 346, 348, 354, 359,
	356, 357, 358, 360, 361, 362, 363, 365, 366, 367,
	369, 370, 371, 372, 374, 376, 377, 380, 381, 396,
	397, 415, 378, 379, 382, 383, 384, 385, 386, 390,
	388, 389, 391, 392, 393, 395, 398, 399, 401, 402,
	403, 404, 405, 406, 409, 411, 412, 413, 414, 416,
	419, 420, 421, 422, 417, 428, 425, 426, 430, 431,
	432, 433, 434, 435, 437, 439, 447, 448, 450, 453,
	454, 455, 445, 457, 458, 461, 462, 463, 466, 464,
	465, 467, 469, 472, 473, 474, 480, 479, 486, 487,
	489, 490, 491, 35, 48, 49, 52, 54, 56, 66,
	67, 68, 72, 114, 115, 142, 153, 154, 165, 177,
	178, 183, 185, 193, 194, 195, 215, 216, 218, 223,
	245, 289, 291, 307, 311, 326, 327, 328, 330, 343,
	373, 407, 418, 423, 440, 441, 442, 443, 449, 451,
	475, 476, 477, 481, 488, -267, 2, -249, 298, -242,
	2, -220, -220, 331, 27, 2, 27, 325, 389, 431,
	433, 2, -523, -302, 2, 27, -223, -220, 96, 181,
	387, -242, 2, -523, -302, 24, 2, -220, 2, -224,
	2, 378, -220, 262, 2, 518, 90, 253, 71, 373,
	392, -125, 448, -124, 440, 382, -126, -453, 2, 273,
	-220, 518, 518, 518, 27, -232, -220, 429, 208, 110,
	426, 518, 2, 429, 317, 479, 388, 110, 340, 208,
	455, 382, -532, 262, 369, 184, 468, -521, 2, -516,
	4, -467, -463, -261, -260, 429, 434, 110, -256, -248,
	508, -255, 518, 518, 518, 2, 226, 227, 339, 338,
	392, 393, 518, 518, 518, 380, 2, 26, 63, 89,
	93, 116, 152, 172, 175, 303, -546, 314, 337, 391,
	428, 437, 450, -531, 414, 65, 382, -530, -532, 262,
	455, 129, -349, 110, 253, 180, 462, 433, 431, 460,
	122, 214, 465, 464, 518, 518, 26, 63, 74, 93,
	129, 152, 172, 175, -548, 314, 337, 376, 391, 428,
	437, 450, 2, 479, 262, 388, 429, 208, 110, 455,
	382, -532, 380, 381, 335, -89, 2, 515, 31, 30,
	395, -184, 429, 219, 2, -220, 518, 518, 2, 226,
	227, 380, 381, 518, 518, 173, -516, 2, 518, 518,
	2, 226, 227, 380, 381, 219, 2, 65, 384, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 2,
	-159, 392, 414, 190, 45, 44, 71, 27, 336, 76,
	318, 111, 137, 182, 208, 209, 234, 89, 90, -351,
	43, 227, 226, 381, -538, 380, -403, 430, 383, 389,
	425, 238, 378, 448, 96, 469, 370, 491, 340, 341,
	146, 4, 110, 273, 394, 440, 253, 377, 321, 81,
	518, -555, 2, 429, -557, 2, 448, 448, 2, -557,
	2, -557, 2, -557, 2, -558, 448, 488, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, -190, -192, -191, 518, 518,
	518, 518, 518, 518, 518, -159, 392, 2, 71, 27,
	-295, -297, 459, 217, 139, 304, -189, -191, 2, -496,
	-451, 2, -377, -470, -379, 506, 507, 499, 427, 64,
	284, 492, -391, 116, 460, 298, -469, -380, -393, 142,
	373, -317, 8, 9, 5, 6, 7, -229, -381, -387,
	452, 155, 288, -264, 519, 10, 515, -493, -191, -392,
	36, 185, 62, -455, -263, -230, -427, 218, -262, -248,
	-490, -491, 4, -463, -464, -456, -430, -438, -434, -435,
	-441, -220, -466, 74, 102, 103, 101, 106, 105, 255,
	254, 107, 104, 394, 468, 63, 35, 193, 194, 223,
	289, 195, 72, -492, 130, -465, 215, 216, 407, 49,
	343, 165, 115, 114, 291, 54, 52, 476, -439, 112,
	440, 441, 442, 443, 177, 178, 56, 153, 154, 311,
	328, 423, 449, 451, 183, 245, 98, 174, 213, 197,
	222, 224, 228, 246, 249, 274, 282, 286, 308, 310,
	368, 400, -561, 477, 418, 66, 67, -498, 344, -499,
	-242, -498, 518, 518, 520, 518, -289, -290, -291, 2,
	27, 127, 515, 2, -407, 2, -408, -412, -191, 239,
	-411, 515, -409, 513, -249, 299, -494, 374, -490, -491,
	-229, -248, -263, 4, -463, -465, 517, -292, 515, 110,
	429, 75, 208, -344, 515, -220, 27, 298, 444, 520,
	-389, 515, 298, 173, 301, -220, 479, 2, 2, 396,
	2, 515, -125, 68, 448, 42, 392, -364, 2, -365,
	-217, -218, -219, -417, 225, 334, 342, 494, 491, -451,
	-540, 173, 498, 444, -451, -318, 517, 2, 2, 2,
	2, 2, -412, 193, -249, 2, -246, -454, 4, -463,
	-467, -464, -468, -466, 27, 30, 31, 32, 34, 36,
	37, 38, 39, 55, 62, 63, 69, 73, 75, 84,
	89, 96, 101, 102, 104, 103, 105, 106, 107, 116,
	120, 123, 127, 128, 132, 135, 139, 155, 157, 170,
	172, 173, 181, 184, 187, 200, 212, 217, 219, 239,
	243, 250, 254, 255, 284, 288, 294, 298, 299, 303,
	304, 323, 333, 347, 364, 387, 394, 410, 424, 429,
	438, 444, 446, 452, 459, 460, 468, 470, 478, 482,
	483, 484, 485, -469, 74, 2, -412, 193, 2, -251,
	193, -412, -254, 2, -233, -220, 2, -245, -454, 2,
	-268, 193, -249, -250, -254, -252, 2, -254, -258, 2,
	-220, -461, 193, 2, -458, 10, -457, 5, 4, -463,
	-467, -464, 479, 219, 444, 520, -308, -260, -261, -450,
	8, -301, -220, 517, -377, 2, -114, -100, 2, 170,
	-377, 193, 2, -114, 193, 2, -377, 193, 2, -114,
	193, 2, -535, 2, -461, 2, 2, 450, 2, 93,
	193, -220, 429, 109, 2, 358, -547, 376, 454, 2,
	2, 2, 2, 2, 2, 429, -238, 2, -220, 170,
	-258, 193, 2, 388, -556, 344, -461, 193, 2, 479,
	-252, 2, -252, 208, 221, -233, 193, 2, 433, 431,
	433, 431, 173, 2, 219, 2, 219, 2, -413, 2,
	-414, -408, -249, 513, 2, 2, 2, 2, 2, 193,
	-220, 429, 109, 2, 237, 2, 2, 2, 2, 2,
	2, 2, -310, 193, 2, -249, 479, -310, 193, 2,
	-310, 193, 2, -350, 2, 84, -233, 193, 2, -257,
	193, 2, -252, -259, 193, 2, -258, -462, 193, 2,
	-461, -377, 2, -114, 2, -421, 2, -420, -457, 475,
	-89, 515, -89, 515, 392, 515, -461, -249, -249, -377,
	2, -114, -100, 2, -377, 2, -114, 2, -111, -110,
	-461, 515, 173, -377, 2, -114, -100, 2, -377, 2,
	-114, 2, -184, 170, 2, 110, 429, -159, 2, 170,
	470, 2, 8, 2, 200, -461, 383, 341, 162, 2,
	396, 2, 397, 71, -351, 491, 71, 173, 2, 173,
	2, -334, 2, 485, 2, -520, 2, 298, 173, 2,
	173, 2, 173, 2, 173, 2, 173, 2, 338, 393,
	227, 2, -114, 482, -100, -377, 482, 2, -539, 170,
	381, -377, 2, 447, 236, 147, 173, -334, 2, 173,
	2, 173, 2, 5, 2, 339, 415, 2, 225, 334,
	415, 2, -249, -550, 2, 429, 479, 388, 2, 2,
	85, 86, 173, 2, 173, 2, 173, 491, 2, -327,
	-412, -363, -364, -363, 444, -295, -297, -159, 396, 2,
	-196, -325, -198, 170, -353, -354, -199, 250, 157, 294,
	-200, -333, 27, 127, -333, -333, 58, 516, 516, 11,
	12, 73, 40, 506, 507, 508, 509, 168, 510, 511,
	504, 505, 503, 496, 497, 501, 231, 232, 91, 500,
	498, 83, 260, 375, 158, 159, 160, 161, 355, 206,
	33, 207, 14, 15, 16, 32, 303, 249, 492, 197,
	400, 499, 17, 18, 19, 222, 224, 286, 48, 200,
	-228, -270, -377, -377, -377, -377, -377, -377, -377, 310,
	515, -323, -372, 513, -191, 515, 515, 515, -450, -191,
	-377, -391, 516, -315, 515, -191, -391, -386, 515, 373,
	513, 515, -394, -377, 5, 5, 5, 515, 517, -501,
	486, 170, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 330, -432, 515,
	-431, 515, -431, -431, 480, -429, 515, 493, 487, 515,
	-429, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 480, 520, -498, -292, 515, -319,
	-415, -377, 508, -319, -319, 298, -312, -377, 98, -337,
	228, 274, 174, 246, 368, 213, -374, 519, -374, -402,
	493, -191, -409, -248, -191, -411, 515, -407, -402, -90,
	-450, -74, -87, -95, -114, -127, -163, -164, 508, -249,
	515, 173, 515, 517, -454, 173, -301, -233, -249, -262,
	-263, -268, 126, -312, -516, 455, -301, -223, 37, -388,
	-424, -425, -472, 519, -471, -427, -437, -433, -436, 326,
	327, -456, 52, 476, -439, 218, 4, -463, -465, 215,
	216, 407, 49, 343, 165, 115, 114, 291, 54, 440,
	441, 442, 443, 177, 178, 56, 477, 418, 66, 67,
	-516, 455, -301, 170, -350, -453, -312, 37, -364, 2,
	116, -458, 42, -559, 520, 248, -272, 259, 283, 189,
	299, 489, 292, -460, 5, 4, -387, -399, 116, 253,
	218, -444, -446, 8, -445, 9, -447, 506, 507, -452,
	-451, 100, 517, -454, -207, 356, 395, -206, 23, 28,
	131, 473, 148, -282, 210, 313, 317, 142, 411, 463,
	-527, -528, 379, 435, 436, 87, 292, 395, 356, 142,
	-330, -332, 37, 108, 277, 312, 59, 203, 264, 265,
	413, 481, 142, 395, 356, 313, -528, 356, -528, -209,
	411, 463, -527, -528, 379, 356, -208, -282, 142, 519,
	23, 356, 395, 313, -543, -544, 131, 28, 356, 313,
	-524, -495, 485, 142, -412, 193, -110, 240, -110, -308,
	520, 520, -454, 508, 381, 380, 142, 142, 142, 142,
	170, 2, 2, 284, 2, 2, 2, 175, -530, -548,
	2, 2, -249, 193, -294, 298, -519, -309, 429, -249,
	284, -251, 193, 2, -254, 479, -524, 284, -253, 193,
	-249, 37, 515, 2, -350, 2, 208, -495, 284, -413,
	-265, -249, -408, -265, 395, -242, 37, -374, -374, 142,
	2, 2, 2, -220, -210, 520, 61, 362, 142, -310,
	193, -210, 142, -210, 142, -269, 193, -268, -210, 142,
	-210, 520, 142, -210, 520, 142, 520, 142, 516, 520,
	-421, -421, -461, -172, 485, 173, 96, 515, 515, -184,
	-418, 520, -417, -462, -111, -461, -461, -519, -233, 2,
	-249, 2, 429, 229, -461, -172, 200, -461, -461, -461,
	-453, 27, 397, 2, 338, 393, 86, 397, 2, -249,
	429, 110, 208, 77, -522, 170, -517, 369, -516, -249,
	110, -249, 110, -249, 110, -249, -249, 2, 2, 2,
	2, 82, 82, 2, 44, -539, 170, 2, 447, 2,
	447, 2, -220, -220, -220, 414, 248, -249, 170, 429,
	208, 429, 208, 110, 429, -210, 520, -224, -196, -325,
	-453, -326, -325, -197, -196, -199, 170, 342, 464, 277,
	398, 233, -354, -353, 27, -377, -358, 164, 276, -377,
	-356, -379, 506, 507, -445, -447, -311, 292, -190, -190,
	-190, -298, -404, -377, 333, 208, -426, -424, -424, -247,
	-454, 440, -377, -377, -377, -377, -377, -377, -377, -377,
	-377, -377, -377, -377, -377, -377, -377, -377, -377, -377,
	-377, -377, -377, -377, -377, -377, -377, -377, -377, -377,
	-377, -377, -377, -377, -377, -377, -377, 249, 197, 400,
	48, 200, -377, 444, -377, -377, -377, -377, 271, 284,
	288, 452, 155, 461, 127, 292, -562, 424, 39, -384,
	-191, -316, 515, -398, 34, 410, 27, -391, 515, 2,
	-372, -377, -373, -313, -312, -312, 516, 478, 27, 127,
	508, 2, 516, 520, 37, 516, -377, -313, -390, -386,
	-312, -397, -396, 482, -345, -346, 490, 267, 113, 191,
	266, -347, 386, -448, 8, -454, 508, -502, 163, 184,
	515, 516, 2, 516, 2, 516, -377, 2, 516, -377,
	2, 516, -377, 2, 516, -377, 2, 516, 2, -377,
	-377, -377, -377, -377, -377, -377, -312, 8, -448, -448,
	440, 440, -448, -448, -448, -440, 326, 251, 327, 179,
	270, 268, 269, 178, -440, -339, 2, -442, -312, 4,
	490, 267, 113, 191, 266, 386, 5, -339, 2, -340,
	2, -377, -312, -341, -378, -379, 506, 507, 499, -391,
	-342, 2, -377, -313, -377, 55, 243, 446, -343, -377,
	173, -312, -312, 2, -312, 2, -499, 37, -312, -304,
	520, 173, 37, 4, -304, -304, 515, 516, 520, -338,
	188, 263, 258, -338, -407, -337, 228, -335, 308, -335,
	-335, -402, -234, 513, 521, -454, -402, -401, -400, 37,
	-242, 305, -402, -402, 517, 516, -401, 514, -514, 515,
	518, 518, 518, 518, 518, -249, 515, -312, -454, 517,
	416, 516, 222, 222, 222, 222, 374, 516, 444, -518,
	-257, 485, -89, 300, 516, 520, -303, 36, 513, 517,
	-448, 2, 2, -443, 480, 515, 515, -346, 515, 173,
	-518, -302, -253, -540, 516, 448, -365, -271, 342, 409,
	357, 390, 426, 8, 9, 8, 9, 520, -454, 520,
	-541, 89, 444, 75, 382, -368, 193, 75, -473, -236,
	89, -474, -220, 69, 460, 333, 172, 140, -541, 89,
	333, -541, 89, 89, 395, 414, 444, 58, -412, 40,
	40, 27, -114, 244, 173, 491, 429, 208, 382, 444,
	-412, -332, -424, 108, 264, 265, 58, -449, -444, 506,
	507, -449, 58, -449, -449, -449, 485, -251, -412, 382,
	444, 444, 444, 520, 40, 40, 27, -114, 244, 173,
	444, -268, -234, 474, 41, 474, 444, 41, 382, 444,
	520, 41, 41, 444, 444, -525, -225, 97, 279, 257,
	280, 92, 278, -226, -227, 319, 472, -461, 395, 356,
	142, -418, 200, -418, -260, -220, 517, -114, -377, -377,
	-114, -377, -114, 44, 142, 2, -556, 237, 515, -275,
	284, 173, -301, -419, 219, 520, -309, 142, -331, -330,
	284, -253, 193, 2, 142, -292, 284, 136, 515, 340,
	2, -235, 193, -221, -220, -350, -213, 432, 142, -329,
	470, -359, -114, 515, 116, 37, -359, -320, -321, -416,
	-322, -236, 515, -242, -220, 2, -249, -310, -210, 142,
	-310, -310, -210, 520, 142, -233, -252, -257, -258, -259,
	-461, -462, -89, -420, 516, 516, 516, -171, 302, -170,
	-220, 5, -184, 470, -274, -369, -368, -477, -478, -473,
	249, 208, 460, 221, 156, -293, -237, -236, 109, -178,
	485, -110, 516, -418, 200, -172, -172, -418, -418, -249,
	170, -461, -172, -172, -172, 2, 2, -334, -249, -233,
	-268, -249, -301, -301, -334, -233, -334, -233, -334, -233,
	-114, -377, 2, 392, 170, 170, 517, -334, 340, 110,
	429, 317, 208, -249, -268, -249, -268, -233, -249, -412,
	-326, -197, 299, 233, 398, -356, -357, -379, 373, 374,
	-357, 373, 374, 8, 9, 8, 9, -201, 402, 287,
	-310, 520, -204, 38, 123, 233, -249, 491, 138, -377,
	-377, 444, -562, 424, -384, 138, -377, 271, 288, 452,
	155, 461, 127, 292, 173, 515, -378, -378, 516, -314,
	-377, -377, 514, 523, 516, -297, 520, -295, -377, -312,
	-312, 516, 517, -312, -301, 514, 514, 520, 516, -395,
	-396, 132, -377, 444, 444, 444, 444, 515, 516, 517,
	-507, 309, 515, 515, -377, 516, 516, 516, 516, 37,
	520, 520, 520, 516, 520, 520, 520, 516, 516, 516,
	520, 516, 491, 491, 516, 516, 516, 516, 520, 516,
	520, 516, 173, 516, 516, -348, 323, 516, 11, 12,
	506, 507, 508, 509, 168, 510, 511, 504, 505, 503,
	496, 497, 498, 83, 260, 375, 14, 15, 16, 222,
	200, -378, -378, -378, 516, -382, -383, 173, 170, 37,
	-343, -343, -343, 516, 173, -312, 516, 516, 515, -500,
	262, 284, 516, -371, -370, 483, -415, -305, 2, -407,
	-244, -454, -371, -371, -312, -377, 228, 228, -336, 470,
	298, -338, -407, -401, -450, -376, -375, 171, 38, 123,
	281, 196, -401, -242, -292, -401, -401, -454, -402, -402,
	-400, 516, -515, -450, 516, -306, -410, -494, -297, 517,
	-454, -181, -495, -160, 5, 288, -160, -160, -160, -301,
	444, 24, 324, -424, 513, 514, 8, -454, 515, -448,
	-448, -448, -301, 173, 173, -451, -364, 458, 80, 342,
	440, -451, -206, 356, -236, -236, -249, -258, 284, -368,
	193, -212, 284, -424, -243, -220, 515, 515, 233, 233,
	470, -236, -243, 233, 193, -236, 193, -243, -243, -526,
	342, 293, -377, -459, -458, 107, 394, 252, 340, 285,
	-207, 356, 395, -114, -114, -114, 515, -540, 470, 126,
	-249, -268, -249, -258, -253, 395, 356, 282, -262, -449,
	-449, -330, 395, 356, -258, -251, -459, -233, -208, -114,
	-114, -114, 515, -234, -209, 356, 5, 193, -236, 5,
	-220, -236, -258, -459, -544, 23, -236, 193, -236, -258,
	-459, -225, -461, 288, 466, -524, 382, 444, -412, -175,
	485, -110, -169, 204, 508, -521, -220, 479, -220, -273,
	-276, -274, -236, -187, -188, 487, 485, 142, -266, -249,
	513, -172, -461, -249, -258, 142, -292, 284, -461, 37,
	142, 515, 2, 2, 298, 284, -235, 193, -214, 133,
	-560, 498, -233, -371, -305, -328, -362, 364, 298, -293,
	475, -242, -328, -307, 520, 173, 498, 517, -293, 2,
	-210, -310, -210, -210, -268, -269, -210, -210, -210, -89,
	-89, -172, 520, 515, 498, 498, 515, -461, -461, 516,
	520, -249, -235, 208, 208, -241, -221, 516, 520, 517,
	515, -180, 302, -179, 134, 235, 220, 403, 404, 405,
	406, 125, -178, -111, 173, -51, 485, 429, -172, 519,
	-334, -334, -334, 392, 392, -220, -245, -233, -249, -246,
	-268, 170, 170, 464, -357, 299, 256, -404, -205, 290,
	-249, 519, -377, -377, 138, 138, -377, -378, -378, -377,
	138, 173, 515, -377, -388, 32, 32, 516, 520, -373,
	-377, 516, 478, -297, -297, 516, 508, -454, 519, 516,
	-386, 135, -377, 438, 267, 191, 266, -347, 266, -347,
	-347, -448, 5, -454, 508, -508, -239, 515, -220, 483,
	-296, 304, 516, -426, -424, -377, -377, -377, -377, -377,
	-448, -429, -429, -444, -444, -377, -382, -377, -426, -424,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, 127,
	284, 292, -378, -383, -382, -377, -377, -424, 516, 516,
	516, -312, -89, 515, 262, -324, 184, -377, -418, 520,
	-324, -324, 516, -407, -407, 515, -377, 228, 514, 520,
	522, 498, -292, 517, -400, -401, 514, 516, 520, 516,
	520, -361, 37, 516, -454, -183, -182, 124, 51, -301,
	301, 5, 8, 513, 514, 517, -448, 516, 516, 516,
	-301, -301, -377, 444, 444, 142, 284, 472, -479, -474,
	140, -377, -299, -405, -377, 515, 515, 2, -203, 131,
	395, -542, 2, 470, 142, -210, 142, -210, 489, 515,
	515, 444, 382, 485, -312, -377, -173, 116, -453, -528,
	519, -528, 519, 382, 444, 382, 444, 485, -312, 444,
	-428, 46, 25, 284, -252, 444, 444, -210, 142, 455,
	395, -461, 288, -258, -253, 395, 356, -177, 302, -176,
	134, 366, 125, 235, -418, -175, 173, 219, 2, -253,
	2, 516, 516, 520, -480, 37, 296, 296, 515, -249,
	-70, 485, -417, -450, -251, 37, 142, -524, -114, -253,
	-422, -423, 5, -249, 142, 298, 284, -215, 242, -560,
	-458, -495, -297, -328, -319, 285, 88, 516, -371, -321,
	-305, -377, 2, 516, -210, -210, -170, -171, -461, -461,
	-461, -172, -184, -184, -369, -277, 515, -235, -221, 515,
	-184, -237, 2, -462, 520, 515, 498, 498, 498, -418,
	-114, 302, -249, 508, -334, -284, -283, 317, 292, -284,
	373, 373, 299, 164, 238, -204, -234, -377, -377, 138,
	32, 32, -377, -377, -388, 516, -377, -377, -312, 514,
	5, -377, 516, 516, 8, -377, 516, 517, -509, -220,
	-377, 516, 58, 516, 516, 520, 520, 516, 516, 516,
	516, 516, 516, 516, -383, 173, 127, 292, 515, 516,
	516, -89, -385, 187, 58, -407, -385, -385, -336, -301,
	-407, -375, -234, 513, -454, -450, -410, 515, 517, -182,
	498, 514, 2, 513, -454, 516, -236, -236, -368, 142,
	-481, 89, -483, 73, 156, 96, 284, 288, 460, 333,
	69, 116, 347, -552, 37, 495, 516, 516, 520, -204,
	-299, -301, 284, 421, 116, 284, 116, 109, 455, 76,
	-236, -243, -301, -301, -249, -258, 149, 516, 520, 498,
	2, 508, 508, -258, -253, -258, -251, 149, 516, -234,
	5, 5, 142, -231, 73, 5, -236, -236, -252, 109,
	382, 444, 520, 515, 498, 498, -175, -462, -110, -292,
	-280, 211, -236, -478, -475, -476, 333, -482, -484, 156,
	333, -114, 2, -186, -185, -220, 5, 515, -275, 302,
	514, -331, -114, -253, -292, 516, 520, -352, 470, -234,
	-249, 142, -216, 241, -560, -458, -213, -355, -353, -360,
	515, 298, -114, -297, 498, 516, 516, 109, 109, 202,
	141, -299, 515, 515, -301, 109, 516, -179, -180, -461,
	-110, -461, -178, -52, -53, 208, 89, 322, -246, 429,
	208, 515, 515, -204, -377, -377, -377, 516, -297, -454,
	508, -503, 317, 516, -404, -377, -377, -378, 173, 515,
	-388, 516, -504, 484, -377, -312, -504, -504, 516, -450,
	2, -461, 513, 2, -368, -243, -247, -240, -220, 156,
	193, 288, 233, 515, -378, -249, 515, 2, 29, -553,
	120, 212, -367, -554, 95, 422, 201, -405, -205, 516,
	516, 288, 288, -377, -424, 515, -210, -210, 516, 516,
	-377, 444, -453, 94, -451, 2, -528, -377, 444, 5,
	-210, -247, -210, -210, -231, 455, -258, -253, -176, -177,
	-461, -110, -175, 37, -281, -282, 200, -480, 233, -240,
	233, -551, 485, 516, 520, 498, 498, -273, -187, -71,
	-72, 445, -417, -292, 37, 5, 515, -220, 298, 515,
	-234, -560, -458, -214, -328, 128, -301, 89, -355, -384,
	-172, 515, 515, -278, 78, 90, 117, 192, 176, 209,
	414, 419, 27, -278, 516, -299, -299, 516, 515, -172,
	516, 520, 27, 515, 27, 515, -249, -268, -312, -312,
	516, -297, 58, 520, 516, 516, -378, -388, 516, -505,
	-506, -239, 514, 2, -483, -240, 284, 470, -377, -222,
	515, -377, 37, 212, 121, 198, -280, 515, -366, 470,
	347, -231, -299, 515, 515, 515, 498, 173, 515, -428,
	-210, -252, 516, -534, 345, -114, -187, 315, 515, -279,
	298, 109, 277, -185, -451, -451, 516, 37, -72, 9,
	37, -114, -299, -249, -299, 298, -458, -215, 464, 285,
	516, -243, -328, -462, -462, -366, 516, 516, -462, -53,
	-301, -301, 516, 516, -510, 340, 374, 186, -312, -298,
	516, 520, 37, 142, 188, 516, -485, 261, -220, 516,
	121, 198, -281, -301, -280, 188, -249, -529, 470, 516,
	-286, -285, -283, -288, -287, -283, -312, -451, 94, 315,
	-312, -231, -537, 174, -536, 5, 10, -279, -249, -300,
	-406, -236, 79, 109, -280, -114, -114, 516, -352, 516,
	-249, -216, 395, -370, 516, 516, -367, -366, -188, 485,
	516, 516, 516, 516, -511, -512, 48, 457, 100, -377,
	-511, -511, -506, -508, 156, 485, -486, -489, -488, 298,
	401, 174, 316, 516, 421, 481, -553, 516, 485, -292,
	-377, -366, 516, 520, 475, 516, 520, 475, 516, 173,
	516, -210, -174, 485, 44, 515, 516, 520, 332, 122,
	131, -281, -551, -366, 515, -367, 515, -320, -172, -172,
	-280, -367, -371, -172, -513, 140, -512, 329, 169, 373,
	329, 169, -513, -513, -240, 53, -488, 298, -489, 298,
	464, 122, -371, 53, -485, -280, -285, 200, -287, 173,
	315, 145, -536, 29, -301, -406, 374, 374, 2, -187,
	-279, -367, -299, -280, -299, -371, -281, -280, 100, 184,
	439, 277, 32, 498, -487, 277, 362, 61, 395, -487,
	498, -486, 515, 515, 380, 516, 2, -279, -280, 516,
	-281, 516, -188, -281, 373, 306, -512, -377, 22, 288,
	116, -377, -553, -312, -312, 302, -211, 61, 362, -281,
	-366, -188, -367, -371, -188, 516, 516, -171, 515, -188,
	-367, -371, -280, -371, -281, 444, -171, -371, -280, -281,
	515, 516, -281, -188, -312, -188, -371, 516, -371, -281,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 476, 477, 479, 480, 481, 483, 484, 486,
	488, 490, 491, 492, 494, 495, 497, 498, 499, 500,
	501, 503, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 565, 567, 0, 1167,
	1169, 1171, 1173, 0, 701, 0, 32, 33, 0, -2,
	278, 280, 282, 0, 308, 310, 311, 313, 315, -2,
	0, 409, 410, 412, 414, -2, -2, 0, 863, 865,
	0, 554, 556, 0, 868, 870, 0, 0, 576, 577,
	0, 1255, -2, 570, 572, 574, 639, 641, 643, 645,
	647, 649, 651, 653, 654, 656, 658, 660, 662, 664,
	666, 668, 670, 671, 673, 675, 677, 679, 681, 683,
	685, 687, 689, 691, 693, 695, -2, 697, -2, -2,
	0, -2, -2, -2, 1185, 36, 38, 40, 42, 44,
	46, 48, 50, 52, 360, 361, 363, 365, 367, 369,
	372, 374, 376, 1313, 416, 418, 420, 422, 424, 426,
	428, 0, -2, 1325, 0, 0, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 82, 83, 84, 85, 86,
	87, 88, 89, 66, 67, 69, 70, 71, 75, 76,
	77, 80, 64, 0, 0, 1286, 1288, 1290, 1292, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 478, 482, 485, 487, 489, 493, 496, 502,
	504, 506, 463, 464, 467, 1946, 1963, 1964, 1965, 1968,
	1969, 1970, 1971, 1972, 1973, 2351, 2432, 2433, 1995, 1996,
	1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
	2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016,
	2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026,
	2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036,
	2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,
	2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076,
	2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086,
	2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096,
	2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106,
	2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156,
	2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166,
	2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176,
	2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186,
	2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196,
	2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206,
	2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216,
	2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226,
	2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236,
	2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246,
	2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256,
	2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266,
	2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276,
	2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286,
	2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296,
	2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306,
	2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316,
	2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326,
	2327, 2328, 2329, 2330, 2331, 465, 466, 1023, 0, 530,
	528, 1939, 531, 2171, 533, 535, 403, 404, 405, 406,
	407, 408, 0, 547, 540, 546, 548, 550, 551, 552,
	553, 525, 523, 0, 547, 1998, 545, 1165, 1166, 1150,
	1151, 2209, 1192, 0, 192, 566, -2, -2, -2, 2317,
	-2, 598, -2, 605, 2321, 2211, 610, 0, 612, -2,
	615, 1168, 1170, 1172, 699, 700, 1949, 0, 0, 0,
	0, 34, 35, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1072, 1073, 1074, 0, 196, 198,
	-2, -2, -2, -2, 0, 0, 2249, 2042, 1907, 1965,
	1910, 1905, 279, 281, 283, 284, 0, 0, 0, 0,
	0, 0, 309, 312, 314, -2, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 918, 910, 911, 1117,
	0, 0, 0, 0, 411, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 340, 468, 469, 0, 1314, 1314,
	0, 0, 0, 0, 253, 244, 864, 866, 867, 0,
	0, 0, 0, 555, 557, 0, 0, 226, 869, 871,
	872, 0, 0, 0, 0, 0, 255, 0, 0, 571,
	573, 575, 640, 642, 644, 646, 648, 650, 652, 655,
	657, 659, 661, 663, 665, 667, 669, 672, 674, 676,
	678, 680, 682, 684, 686, 688, 690, 692, 694, 696,
	706, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, -2, -2, -2, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 788, 0, 0, 0, -2, -2, -2,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 709, 711, 712, 713, 0, 768, 786, 787, 796,
	698, 0, 1063, 1315, 1194, 1175, 1189, 1194, 1177, 1178,
	1179, 1180, 1181, 1186, 1188, 1182, 1183, 1184, 37, 39,
	41, 43, 45, 47, 49, 51, 53, 362, 364, 366,
	368, 370, 373, 375, 377, -2, 1284, 1285, 417, 419,
	421, 423, 425, 427, 429, 558, 0, 560, 0, 710,
	-2, 0, 1319, 1319, 1319, 0, 0, 1285, 1283, 0,
	563, 564, 619, 620, 1550, 0, 0, 0, 0, 0,
	0, 0, 1804, 1636, 0, 621, -2, 1667, 1669, 2292,
	2317, 1803, 1671, 1672, 1673, 1674, 1675, 0, 1677, 1678,
	1679, 1680, 1681, 1682, 0, 1684, 0, 1689, 1690, 1691,
	0, 2299, 1884, 1959, -2, 0, 0, 2305, 1955, 0,
	1770, 1707, -2, -2, 1982, 1961, 1482, 1483, 1484, 1485,
	1486, -2, -2, 2334, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 0, 2280, 2300, 2301, 2306,
	2308, 2302, 2289, 1732, 2054, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1509, 1518,
	-2, -2, -2, -2, -2, -2, -2, 2293, 2294, 2311,
	2314, 2320, 2325, 2326, 2298, 2307, 2335, 2336, 2337, 2338,
	2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348,
	2349, 2350, 1510, -2, -2, -2, -2, 1302, 2182, 1305,
	1023, 1303, 1287, 1289, 0, 1291, 0, 0, 0, 1296,
	1322, 1320, 0, 1363, 1300, 1301, 1381, 1381, 1405, 0,
	1386, 0, 1405, 1314, 1431, 0, 1392, 2201, 1708, 1709,
	0, 1965, 1960, -2, -2, 2332, 0, 0, 0, 0,
	0, 0, 0, 526, 0, 532, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 1191, 1116, 568, 569, 0,
	593, 0, 597, 2288, -2, 2006, 2220, -2, 601, 1195,
	1199, 1200, 1201, 1202, 0, 0, 0, 0, 0, 607,
	0, 0, 594, 595, 613, 616, 0, 702, 703, 704,
	705, 63, 0, 2300, 1431, 65, 0, 1929, 1990, 1991,
	1992, 1993, 1994, 2333, 2352, 2353, 2354, 2355, 2356, 2357,
	2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367,
	2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377,
	2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387,
	2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397,
	2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407,
	2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417,
	2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427,
	2428, 2429, 2430, 2431, 2334, 68, 0, 2300, 72, 0,
	2300, 0, -2, 78, 0, 1935, 81, 0, 1932, 90,
	0, 2300, 0, 1904, -2, 0, 177, 1943, 0, 889,
	1945, -2, 2300, 1071, 256, 257, 1978, 1979, 1986, 1987,
	1988, 1989, 0, 0, 0, 0, 856, 1901, 1906, 857,
	1925, 858, 1911, 0, 285, 286, 287, 288, 289, 0,
	290, 2300, 292, 293, 0, 295, 296, 2300, 298, 299,
	0, 301, 0, 209, 210, 317, 318, 0, 320, 0,
	2300, 0, 0, 0, 326, -2, 341, 0, 338, 329,
	330, 332, 333, 334, 335, 0, 381, 379, 1940, 0,
	884, 2300, 886, 0, 0, 1096, -2, 2300, 1068, 0,
	1102, 1098, 0, -2, 0, 1312, 2300, 1209, 914, 915,
	916, 917, 0, 400, 0, 1222, 0, 1224, 0, 1245,
	1437, 1381, 1381, 0, 342, 343, 344, 345, 346, 2300,
	0, 0, 0, 351, 0, 353, 354, 355, 356, 357,
	358, 359, 166, 2300, 434, 461, 0, 166, 2300, 437,
	166, 2300, 440, 0, 443, 1115, 166, 2300, 446, 166,
	2300, 449, 451, 166, 2300, 455, 456, 458, 2300, 460,
	258, 1161, 1162, 1163, 1164, 0, -2, 519, 1948, -2,
	471, 0, 472, 0, -2, 0, 270, 0, 0, 873,
	874, 875, 876, 877, 880, 881, 882, 883, 1418, 229,
	227, 0, 0, 1152, 1153, 1154, 1155, 1156, 1157, 1158,
	1159, 1160, 0, 0, 578, 0, 0, 707, 708, 0,
	0, 718, 719, 720, 0, 270, 2212, 2179, 2074, 727,
	0, 730, 733, -2, 0, 0, 0, 0, 737, 0,
	742, 743, 744, 0, 746, 862, 748, 0, 0, 750,
	0, 754, 0, 757, 0, 759, 0, 761, -2, -2,
	-2, 772, -2, 0, 775, 777, 0, 779, -2, 0,
	788, 784, 785, 0, 0, 0, 0, 804, 805, 0,
	810, 0, 813, 814, 815, 0, 817, 818, 0, 820,
	821, 822, 823, 0, 825, 826, -2, -2, 830, 832,
	0, 839, 0, 843, 0, 847, 0, 714, 715, 166,
	1435, 1174, -2, 1176, 0, -2, 0, 559, 0, 562,
	1342, 1270, 1267, 0, 1339, 1340, 1271, 0, 0, 0,
	1278, 0, 1317, 1318, 0, 0, 0, 1257, 1258, 0,
	0, 0, 0, 1809, 1810, 1811, 1812, 1813, 1814, 1817,
	1818, 1815, 1816, 1819, 1820, 0, 0, 0, 0, 0,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1822, 1823, 1824, 0, 0, 1826, 0, 1828,
	0, 0, 0, 0, 0, 0, 1615, 1617, 1892, 0,
	0, 1825, 1555, 1556, 1557, 1558, 1559, 1594, 1595, 0,
	0, 1668, 1889, 1888, 1670, 0, 1840, 0, 1683, -2,
	0, 1804, 1835, 0, 0, 1692, 1693, 1694, 0, 0,
	1840, 0, 0, 1883, 1704, 1705, 1547, 0, 0, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1496, 1495, 0,
	1497, 0, 1498, 1499, 1506, 1519, 0, 0, 0, 0,
	1523, 0, 0, 0, 0, 0, 0, 0, 1864, -2,
	0, 0, 0, 0, 1511, 0, 1304, 0, 0, 1367,
	1893, 1897, 1898, 1367, 1367, 0, 0, 1841, 1428, 1428,
	0, 0, 1424, 1424, 1424, 1422, 1405, 0, 1405, 1415,
	0, 1405, 1405, 0, -2, 1386, 0, 0, 1415, 0,
	1399, 507, 509, 511, 513, 514, 515, 517, 1432, 1433,
	0, 0, 0, 0, 1966, 0, 0, 0, 0, 0,
	1951, 0, 0, 0, 0, 2258, 537, 549, 1314, 0,
	1843, 1454, 1458, 0, 1460, 1461, 1462, 1463, 1464, 0,
	0, 1455, -2, 1507, 1509, 1530, 1983, 1984, 1985, 1490,
	1491, 1492, 1493, 1494, 1502, 1489, 1489, 1489, 1500, 1529,
	1521, 1529, 1525, 1475, 1476, 1477, 1512, 1513, 1514, 1515,
	0, 2258, 542, 0, 0, 0, 0, 0, -2, 603,
	608, 609, 0, 0, 1197, 0, 1203, 630, 631, 632,
	1205, 1206, 0, 606, 633, 634, 635, 636, 637, 638,
	0, 1913, 1914, 1915, 1916, 1919, 1920, 0, 0, 604,
	623, 611, 0, 617, 91, 1147, 0, 130, 0, 1147,
	1147, 0, 0, 152, 0, 0, 0, 0, 0, 0,
	0, 115, 126, 103, 104, 0, 0, 0, 0, 0,
	73, 1045, 0, 1048, 0, 0, 0, 0, 0, 0,
	0, 1061, 0, 0, 0, 0, 114, 0, 109, 93,
	0, 0, 0, 116, 128, 0, 157, 159, 0, 0,
	0, 0, 0, 0, 176, 184, 0, 0, 0, 0,
	1069, 0, 1311, 0, 0, 2300, 1418, 2112, 1418, 855,
	0, 0, 1966, 1909, 0, 0, 0, 0, 0, 0,
	0, 319, 321, 0, 323, 324, 325, 0, 1095, 0,
	331, 371, 994, 2300, 0, 0, 398, 393, 0, 395,
	0, 1044, 2300, 1042, 1944, 0, 1066, 0, 1023, 2300,
	1942, 0, 0, 1103, 1975, 1112, 1116, 1211, 0, 402,
	0, 1225, 1227, 0, 0, 1438, 0, 1440, 1441, 0,
	348, 349, 350, 0, 430, 0, 164, 165, 0, 166,
	2300, 435, 0, 438, 0, 166, 2300, 1899, 444, 0,
	447, 0, 0, 453, 0, 0, 0, 0, 1314, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	233, 0, 1417, 0, 1418, 227, 270, 270, 1418, 580,
	1418, 582, 0, 0, 721, 722, 0, 270, 270, 270,
	728, 729, 731, 732, -2, -2, 840, 734, 735, 807,
	0, 0, 0, 806, 747, 0, 849, 2197, 860, 807,
	2042, 807, 2042, 807, 2042, 758, 760, 763, 799, 771,
	776, 0, 0, 781, 789, -2, 0, 791, 0, 793,
	0, 795, 807, 808, 811, 816, 819, 824, 0, 0,
	0, 0, 0, 0, 0, 1062, 0, 1187, 1342, 1270,
	561, 1261, 1341, 1262, 1269, 1272, 0, 0, 1274, 0,
	1276, 0, 1337, 1338, 1345, 1346, 0, 1356, 1357, 1349,
	0, -2, 0, 0, 1352, 1353, 1280, 0, 1297, 1298,
	1299, 1326, 1329, 1126, 0, 2432, 1551, 1449, 1552, 1553,
	1928, 0, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, -2, -2, -2, -2, -2, -2, -2, -2,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, -2, -2, -2, 1592, 1593, -2, 1827, 1829, 0,
	1892, 0, -2, 0, -2, -2, -2, -2, 1612, 0,
	1614, 1619, 1621, 1623, 0, 0, 0, 0, 1891, 1633,
	1875, 1876, 0, 0, 1806, 1807, 1808, 1618, 0, 1637,
	1890, 1887, 0, 0, 1839, 1325, 1696, 0, 0, 0,
	0, 1703, 1688, 1837, 0, 1836, 0, 0, 0, 1847,
	0, 1882, 1878, 0, 1926, 1546, 1533, 1534, 1535, 1536,
	1537, 1538, 1548, 0, 1923, 1952, 1958, 1780, 0, 0,
	0, 1733, 1734, 1735, 1736, 1737, 0, 1739, 1740, 0,
	1742, 1743, 0, 1745, 1746, 0, 1748, 1749, 1750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1467, 1468, 1469, 1470,
	1471, 1472, 1473, 1474, 0, 0, 1752, 0, 1850, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 1754, 0,
	1756, 1841, 1861, 0, 0, 1638, 0, 0, 0, 1804,
	0, 1759, 1841, 1869, 0, 0, 0, 0, 0, 1841,
	0, 1874, 0, 1766, 0, 1768, 1306, 0, 0, 1444,
	0, 0, 0, 1896, 1444, 1444, 0, 1362, 0, 0,
	1425, 1426, 1427, 0, 0, 1428, 0, 1419, 1423, 1420,
	1421, 1415, 1378, 0, 0, 1930, 1415, 1384, 1414, 0,
	1023, 1404, 1415, 1415, 0, -2, 1388, 1405, 0, 0,
	508, 510, 512, 516, 518, 0, 0, 1325, -2, 0,
	-2, 1022, 0, 0, 0, 0, 527, 529, 0, 0,
	450, 0, 521, 0, 524, 0, 1445, 1448, 0, 0,
	1459, 1465, 1466, 0, -2, 0, 0, 1531, 0, 0,
	0, 0, 191, 0, 596, 0, 1196, 1204, 0, 627,
	0, 629, 0, 1917, 1921, 1918, 1922, 0, 618, 0,
	0, 0, 0, 1146, 0, 134, 2300, 0, 168, 0,
	0, 987, 1936, 0, 0, 0, 0, 2061, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 100, 105, 0, 0, 0, 0, 0, 0, 0,
	0, 1046, 1047, 1049, 1056, 1058, 0, 1052, 1924, 0,
	0, 1053, 0, 1055, 1057, 1059, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 102, 106, 0, 0,
	0, 0, 1903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1091, 1089, 1081, 1082, 1083,
	1084, 1085, 1086, 1087, 1088, 0, 0, -2, 0, 0,
	0, 201, 0, 261, 1902, 1912, 0, 878, 879, 291,
	294, 297, 300, 197, 0, 327, 0, 0, 920, 895,
	0, 0, 380, 270, 0, 0, 394, 0, 1040, 1043,
	0, 1023, 2300, 1080, 0, 0, 0, 0, 0, 0,
	1101, 0, 2300, 1931, 1974, 1975, 1213, 1219, 0, 1444,
	0, 1243, 1228, 0, 0, 0, 1243, 1247, 1248, 1250,
	1251, 0, 0, 1439, 0, 352, 462, 166, 432, 0,
	166, 166, 441, 0, 0, 166, 452, 166, 457, 166,
	259, 459, 470, 520, 1314, 1314, 270, 268, 2154, 266,
	263, 265, 0, 0, 0, 921, 923, 924, 925, 926,
	0, 1975, 0, 2101, 1975, 0, 1231, 1233, 0, 223,
	0, 230, 228, 233, 0, 0, 392, 579, 584, 716,
	0, 270, 724, 725, 726, 765, 801, 736, 738, 739,
	740, 0, 861, 859, 749, 807, 752, 807, 755, 807,
	774, 778, 783, 790, 0, 0, 0, 803, 0, 0,
	0, 0, 0, 0, 0, 844, 845, 846, 848, 1436,
	1265, 1266, 1268, 0, 1277, 0, 0, 1351, -2, -2,
	1350, 1354, 1355, -2, -2, -2, -2, 1273, 0, 1282,
	1279, 0, 1336, 1124, 1125, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 1634, 0, -2, 1613, 1616, 1620,
	1622, 1624, 0, 0, 0, 0, 0, 0, 1830, 0,
	1832, 1635, 1885, 1888, 1802, 0, 0, 1324, 1325, 1325,
	0, 1702, 0, 1838, 0, 1845, 1846, 0, 1695, 0,
	1879, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1706, 0, 0, 0, 0, 1738, 1741, 1744, 1747, 0,
	0, 0, 0, 1727, 0, 0, 0, 1731, 1501, 1487,
	0, 1529, 1527, 1528, 1522, 1529, 1526, 1479, 0, 1478,
	0, 1751, 0, 1753, 1755, 0, 0, 1757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1641, 1642, 1643, 1758, 1867, 1868, 0, 0, 0,
	0, 0, 0, 1764, 0, 1873, 1765, 1767, 1314, 0,
	1307, 0, 1364, 1359, 1443, 0, 1894, 1418, 1366, 1368,
	1895, 1933, 1359, 1359, 0, 1842, 0, 0, 1409, 0,
	0, 0, 1411, 1382, 0, 0, 1376, 0, 1372, 1373,
	1374, 1375, 1383, 1023, 1413, 1385, 1389, 1952, 0, 1415,
	0, 1400, 0, 1402, 1434, 0, 1394, 1397, 0, 0,
	1967, 271, 0, 302, 306, 307, 303, 304, 305, 536,
	0, 0, 0, 1844, 0, 1450, 0, 1456, 0, 0,
	0, 0, 541, 0, 0, 592, -2, 625, 626, 628,
	0, 624, 131, 1147, 0, 0, 1128, 1130, 0, 136,
	2300, 145, 0, 961, 0, 1934, 0, 0, 0, 0,
	0, 1149, 0, 0, 2300, 166, 2300, 166, 148, 151,
	0, 156, 153, 154, 181, 182, 183, 0, 0, 952,
	92, 1147, 0, 95, 99, 107, 0, 0, 0, 113,
	0, 0, 0, 1132, 1138, 0, 0, 1050, 1051, 1054,
	1060, 74, 0, 0, 1136, 1142, 79, 1127, 158, 97,
	101, 108, 0, 1144, 94, 0, 180, 0, 0, 0,
	172, 0, 173, 174, 185, 0, 166, 2300, 0, 887,
	888, 1090, 1064, 1065, 0, 1070, 0, 0, 0, 193,
	0, 1418, 201, 0, 1908, 0, 0, 0, 0, 0,
	0, 919, 1005, 0, 892, 0, 0, 0, 386, 382,
	0, 391, 397, 396, 885, 0, 0, 0, -2, 0,
	0, 1105, 1099, 1100, 0, 0, 0, 2300, 1215, 1219,
	0, 1218, 1312, 1325, 401, 1220, 1243, 0, 0, 0,
	1230, 1226, 1223, 1444, 0, 0, 0, 0, 0, 347,
	431, 166, 436, 439, 1900, 166, 445, 448, 454, 473,
	474, 245, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 930, 0, 1975, 1975, 0, 1938, 0, 0, 0,
	0, 231, 0, 234, 0, 0, 0, 239, 240, 241,
	242, 243, 224, 1418, 0, 581, 0, 0, 723, 0,
	751, 753, 756, 792, 794, 807, 833, 834, 947, 0,
	947, 0, 0, 1275, 0, 1348, 1281, 1330, 1331, 0,
	1126, 0, 1554, 1597, 0, 0, -2, 0, 0, 1601,
	0, 0, 0, -2, 0, 0, 0, 1831, 1833, 0,
	1887, 1697, 0, 0, 0, 1701, 1685, 1686, 0, 1805,
	1848, 1877, 1881, 0, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 0, 1927, 1953, 1957, 1778, 1779, 1783, 1941, 0,
	0, 0, 1710, 0, 0, 0, 0, 0, 0, 0,
	0, 1520, 1524, 0, 0, 1849, 1860, 1862, 1639, 1640,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	-2, -2, -2, 1657, 1658, 1659, -2, -2, -2, 0,
	0, 0, 1863, 1865, 1866, 1870, 1871, 0, 1761, 1762,
	1763, 1872, 0, 1314, 1308, 1361, 0, 1442, 1365, 0,
	1361, 1361, 1321, 1407, 0, 0, 1430, 0, 1379, 0,
	1380, 0, 1412, 0, 1387, 1390, 1391, 1401, 0, 1393,
	0, 1396, 0, 1697, -2, 272, 274, 0, 277, 539,
	538, 522, 0, 0, 1452, 0, 0, 1504, 1508, 1532,
	544, 543, 1416, 0, 0, 0, 0, 167, 959, 986,
	0, 0, 0, 1119, 1126, 0, 0, 992, 138, 0,
	0, 0, 146, 0, 0, 143, 0, 150, 155, 0,
	0, 0, 0, 0, 0, 110, 111, 112, 0, 117,
	0, 118, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 1123, 0, 0, 187, 0, 0,
	0, 1093, 1094, 1133, 1139, 0, 0, 199, 0, 202,
	0, 205, 206, 0, 201, 195, 0, 0, 322, 1023,
	328, 941, 993, 0, 995, 0, 893, 0, 0, 994,
	378, 0, 385, 0, 1044, 0, 0, 1067, 1078, 1023,
	0, 1104, 1106, 1114, 0, 0, 0, 1217, 1219, 0,
	1210, 1211, 1344, 1221, 1241, -2, 1240, 0, 1325, 1249,
	1246, 1252, 1253, 0, 433, 442, 267, 0, 262, 264,
	0, 248, 0, 0, 922, 927, 0, 0, 0, 0,
	0, 1232, 1234, 0, 0, 0, 0, 0, 0, 233,
	254, 0, 717, 741, 802, 835, 946, 0, 0, 837,
	0, 0, 1347, 1334, 1335, 1332, 1126, 1599, 1603, 0,
	0, 0, 1605, -2, 0, 1627, -2, -2, 1834, 1886,
	1676, 1325, 1698, 1700, 1687, 1880, 1549, 0, 1785, 1782,
	0, 1769, 0, 1722, 1723, 0, 0, 1726, 1728, 1729,
	1730, 1488, 1481, 1480, 1859, 0, 0, 0, 0, 1760,
	1309, 0, 1774, 0, 0, 1369, 1774, 1774, 1408, 0,
	1410, 1377, 1370, 0, 1953, 1403, 1395, 0, 0, 275,
	0, 1446, 1451, 0, 1457, 1503, 132, 133, 135, 0,
	960, 0, 963, 0, 0, 0, 0, 970, 971, 0,
	0, 0, 0, 0, 980, 0, 1009, 1019, 0, 1336,
	0, 0, 0, 140, 161, 0, 0, 1148, 0, 0,
	166, 166, 0, 0, 1129, 1131, 0, 0, 0, 0,
	120, 0, 0, 1134, 1140, 1137, 1143, 0, 0, 1145,
	178, 179, 0, 166, 0, 171, 166, 166, 1123, 0,
	0, 0, 0, 0, 0, 0, 194, 260, 201, 0,
	949, 0, 1005, 997, 998, 999, 0, 1004, 1006, 0,
	0, 907, 894, 0, 903, 0, 0, 920, 895, 0,
	383, 1041, 1075, 1023, 0, 1097, 0, 0, 0, 0,
	0, 0, 1207, 1219, 0, 1212, 1213, 1243, 1343, 0,
	0, 0, 1229, 1344, 0, 269, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 235, 0, 236,
	237, 238, 225, 583, 585, 0, 0, 591, 945, 0,
	0, 0, 0, 1333, 1607, -2, -2, 1628, 0, 1954,
	1956, 1325, 0, 1771, 1327, 0, 0, -2, 0, 0,
	0, 1310, 1293, 0, 1360, 1358, 1294, 1295, 1429, 0,
	1398, 276, 0, 1453, 137, 0, 964, 965, 1937, 967,
	0, 969, 972, 0, 975, 1977, 0, 979, 0, 988,
	1010, 0, 941, 0, 1015, 1016, 1017, 1120, 1121, 1021,
	0, 139, 141, 160, 1123, 0, 142, 149, 0, 0,
	96, 0, 0, 2035, 123, 121, 119, 98, 0, 180,
	186, 1122, 175, 188, 166, 0, 1135, 1141, 203, 0,
	204, 207, 0, 0, 895, 948, 0, 996, 0, 1007,
	1008, 897, 0, 896, 0, 0, 0, 0, 0, 384,
	387, 0, 390, 0, 0, 1107, 0, 1113, 0, 0,
	0, 0, 1214, 1215, 399, 0, 0, 0, 1243, 1254,
	247, 0, 0, 928, 931, 932, 933, 934, 935, 936,
	937, 938, 939, 929, 1021, 0, 0, 985, 0, 252,
	232, 0, 587, 0, 589, 0, 836, 838, 0, 0,
	1699, 1789, 0, 0, 1724, 1725, -2, 0, 1665, 1773,
	1775, 0, 1371, 1447, 962, 966, 0, 0, 0, 1027,
	0, 0, 981, 0, 1013, 1014, 949, 0, 941, 0,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 170,
	189, 1123, 200, 219, 0, 1076, 897, 0, 0, 905,
	0, 908, 0, 904, 901, 902, 941, 0, 388, 389,
	0, 1079, 0, 1114, 0, 0, 1216, 1217, 0, 1236,
	1237, 1239, 1244, 0, 0, 1019, 1021, 895, 0, 586,
	0, 0, 841, 842, 0, 0, 0, 0, 1784, 1328,
	1666, 0, 0, 0, 0, 974, 1032, 0, 0, 0,
	1011, 1012, 1009, 0, 990, 0, 1023, 144, 0, 1021,
	0, 953, 0, 0, 956, 0, 0, 124, 2035, 122,
	0, 166, 222, 0, 214, 212, 213, 890, 0, 0,
	1001, 1003, 0, 909, 949, 907, 1077, 1021, 0, 1019,
	0, 1208, 0, 1238, 270, 270, 941, 1019, 1444, 0,
	270, 588, 590, 1781, 1801, 1790, -2, 2260, 2039, 0,
	1801, 1801, 1776, 1777, 0, 0, 976, 1028, 1029, 0,
	1024, 1025, 1026, 1976, 977, 978, 1444, 1018, 0, 1027,
	162, 941, 950, 0, 0, 951, 0, 0, 127, 0,
	129, 190, 208, 0, 0, 0, 1000, 0, 0, 0,
	0, 895, 897, 1019, 0, 941, 0, 1444, 249, 250,
	949, 941, 984, 251, 1786, 0, 0, 1792, 1793, 1794,
	1795, 1796, 1787, 1788, 968, 0, 1030, 0, 1031, 0,
	0, 0, 989, 0, 1032, 147, 954, 0, 957, 0,
	125, 0, 217, 218, 0, 1002, 898, 0, 900, 897,
	906, 941, 0, 949, 0, 1235, 895, 949, 0, 1798,
	1799, 0, 0, 0, 1033, 0, 1036, 1037, 0, 1034,
	0, 1009, 0, 0, 0, 944, 899, 891, 949, 1021,
	895, 1019, 1444, 895, 1797, 1800, 1791, 973, 1035, 1038,
	1039, 1020, 991, 0, 0, 0, 940, 942, 943, 895,
	1019, 1444, 941, 982, 1444, 949, 0, 220, 0, 1444,
	941, 1110, 949, 983, 955, 0, 0, 1108, 949, 895,
	0, 221, 895, 1444, 0, 1444, 1111, 949, 1109, 958,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 504, 3, 510, 505, 3,
	515, 516, 508, 506, 520, 507, 517, 509, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 523, 3,
	496, 498, 497, 501, 519, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 513, 3, 514, 511, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 521, 503, 522, 499,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 500, 57839, 502,
	57840, 512, 57841, 518, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1210
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1215
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1217
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1220
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1221
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1222
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1223
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1224
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1225
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1226
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1227
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1228
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1235
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1244
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1245
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1253
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1254
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1255
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1256
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1312
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1338
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1351
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1368
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1372
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1376
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1392
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1396
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].str}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1417
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 90:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1449
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1453
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1457
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1463
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1467
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1473
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1482
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1493
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1497
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1503
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1511
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1521
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1525
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1535
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1546
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1553
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1565
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1572
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1580
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1585
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1589
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1594
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1600
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1608
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1619
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1629
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1639
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1648
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1659
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1665
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1673
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1677
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1681
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 125:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1685
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1691
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1696
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1707
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1711
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1717
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1721
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 132:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1728
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1733
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1738
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1743
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1748
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1753
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1758
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1763
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1768
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1773
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1778
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1787
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1799
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1809
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1816
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 147:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1820
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1828
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1853
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1858
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1865
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1873
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1885
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1889
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1903
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = nil
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1913
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1917
		{
			sqlVAL.union.val = nil
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1924
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1928
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1932
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1938
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1942
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1989
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1999
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2008
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2017
		{
			return unimplementedWithIssueDetail(sqllex, 48700, "ALTER TYPE OWNER TO")
		}
	case 175:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2021
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2025
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2028
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2032
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2039
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2046
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 191:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2072
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{Name: sqlDollar[5].union.unresolvedObjectName(), Concurrently: sqlDollar[4].union.bool()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2075
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2102
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2112
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2123
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2132
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2136
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2140
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 200:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2152
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2156
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2163
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2167
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2176
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2180
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2184
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2269
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleName:    sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2280
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2285
		{
			sqlVAL.union.val = nil
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2297
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2307
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2313
		{
			sqlVAL.union.val = nil
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2322
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2326
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2330
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2336
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 221:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2402
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2406
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2410
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2416
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2420
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2427
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2431
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2435
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2446
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2455
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2459
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2463
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2475
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2479
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2483
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2489
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2526
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2535
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2541
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2546
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2551
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2556
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2561
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2565
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2581
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2584
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2588
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2592
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2600
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2604
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2610
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2620
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2632
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2638
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2642
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2652
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = nil
		}
	case 271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2668
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2680
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2684
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2690
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2694
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2702
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2706
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2714
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2715
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2716
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2717
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2727
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2735
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2741
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2744
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2754
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2763
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2771
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2780
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2807
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2809
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2813
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2816
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2820
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2828
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2847
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2852
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2864
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2866
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2867
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2868
		{
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2869
		{
			return helpWith(sqllex, "CREATE")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2872
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2873
		{
			return unimplemented(sqllex, "create cast")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2874
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2875
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2876
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2877
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2878
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2879
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2880
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2881
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2882
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2883
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2884
		{
			return unimplemented(sqllex, "create operator")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2885
		{
			return unimplemented(sqllex, "create publication")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2886
		{
			return unimplemented(sqllex, "create rule")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2887
		{
			return unimplemented(sqllex, "create server")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2888
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2889
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2890
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2893
		{
		}
	case 337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2894
		{
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2897
		{
		}
	case 339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2898
		{
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2901
		{
		}
	case 341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2902
		{
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2905
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2906
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2907
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2908
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2909
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2910
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2911
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2912
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2913
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2914
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2915
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2916
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2917
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2918
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2919
		{
			return unimplemented(sqllex, "drop server")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2920
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2921
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2922
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2926
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2927
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2928
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2929
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2930
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2932
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2933
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2934
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2935
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2953
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2967
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2971
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2980
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2987
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2999
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3003
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3014
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3026
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3042
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3052
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3056
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3062
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3066
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3073
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3077
		{

			sqlVAL.union.val = nil
		}
	case 399:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3101
		{
			return helpWith(sqllex, "DELETE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3104
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3105
		{
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3116
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3117
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3118
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3119
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3120
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3129
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3130
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3131
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3132
		{
			return helpWith(sqllex, "DROP")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3135
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3136
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3137
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3138
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3139
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3140
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3141
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3149
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3153
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3174
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3182
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3186
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3189
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3197
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3201
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3204
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3212
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3221
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3229
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3237
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3245
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3252
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3259
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3267
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3297
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3305
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3312
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3320
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3337
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3341
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3346
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3359
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3371
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3375
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3397
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3404
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3406
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3414
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3422
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3430
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3438
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3449
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3453
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3456
		{
			return helpWith(sqllex, "DELETE")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3458
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3459
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3460
		{
			return helpWith(sqllex, "INSERT")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3463
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3465
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3468
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3473
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3474
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3475
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3480
		{
			return helpWith(sqllex, "DELETE")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3481
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3482
		{
			return helpWith(sqllex, "INSERT")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3484
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3488
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3489
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3493
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3497
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3507
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3515
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3523
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3527
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3531
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3541
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3548
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3560
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3564
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3574
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3589
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3617
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3621
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3624
		{
			return helpWith(sqllex, "GRANT")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3644
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3659
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3668
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3682
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3696
		{
			return helpWith(sqllex, "RESET")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3697
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3705
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3709
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3712
		{
			return helpWith(sqllex, "RESET")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3723
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3734
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3737
		{
			return helpWith(sqllex, "USE")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3741
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3742
		{
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3743
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3744
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3748
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3749
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3750
		{
			return helpWith(sqllex, "USE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3766
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3781
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3784
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3802
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3810
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 584:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3818
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3824
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3828
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3834
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3838
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3842
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3846
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3850
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3861
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3864
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3874
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3890
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3894
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 599:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3899
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3916
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3919
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3924
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3928
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3947
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3954
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3959
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3964
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3969
		{
			return unimplemented(sqllex, "set from current")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3970
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3978
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3983
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3990
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3994
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4000
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4004
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4011
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4032
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4036
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4042
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4050
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4054
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4058
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4064
		{
			sqlVAL.union.val = tree.Low
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = tree.Normal
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4072
		{
			sqlVAL.union.val = tree.High
		}
	case 633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4083
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4087
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4091
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4096
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4100
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4114
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4115
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4116
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4117
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4120
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4123
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4124
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4131
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4132
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4133
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4135
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4137
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4138
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4139
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4142
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "SHOW")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4145
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4151
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4154
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4158
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4163
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4168
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4173
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4183
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4184
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4185
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.str = "client_encoding"
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4199
		{
			sqlVAL.str = "timezone"
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4200
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4214
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4218
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4233
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4241
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4249
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4255
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4281
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4290
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4298
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4308
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4312
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4315
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4317
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4320
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4322
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4326
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4329
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4337
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4340
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4348
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4356
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4360
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4363
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4371
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4374
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4381
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4384
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4397
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4405
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4413
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4416
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4418
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4422
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4426
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4429
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4431
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4446
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4449
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4451
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4454
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4462
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4465
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4470
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4474
		{
			sqlVAL.union.val = true
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4476
		{
			sqlVAL.union.val = true
		}
	case 768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4478
		{
			sqlVAL.union.val = false
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4489
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4496
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4497
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4503
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4510
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4512
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4528
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4538
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4544
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4546
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4552
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4560
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4574
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4578
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4589
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4592
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4594
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4597
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4599
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4603
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4606
		{
			sqlVAL.union.val = true
		}
	case 797:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4607
		{
			sqlVAL.union.val = false
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4615
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4618
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4620
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4623
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4631
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4641
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4651
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4654
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4657
		{
			sqlVAL.union.val = true
		}
	case 807:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4658
		{
			sqlVAL.union.val = false
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4665
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4672
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4683
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4686
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4693
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4697
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4704
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4714
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4717
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4725
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4730
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4735
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4739
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4747
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4751
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4755
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4768
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4771
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4779
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4782
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4794
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4802
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4810
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4817
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4839
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4853
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4862
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4867
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4871
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4874
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4878
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 850:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4890
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5010
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5014
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5018
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5057
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5061
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5066
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5070
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5078
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5087
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5094
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 862:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5098
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5111
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5112
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5113
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5123
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5124
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5125
		{
			return helpWith(sqllex, "RESUME")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5135
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5143
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5145
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5149
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5152
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5157
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5161
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5176
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5184
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5186
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5192
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5200
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5206
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5212
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5223
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5232
		{
			return unimplementedWithIssueDetail(sqllex, 50882, "ALTER SCHEMA OWNER TO")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5235
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5274
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5289
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5307
		{

			sqlVAL.union.val = nil
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5313
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5319
		{
			sqlVAL.union.val = nil
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5323
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5330
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5334
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5339
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5344
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5351
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5355
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5361
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5365
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 905:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5371
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5385
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5400
		{
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5401
		{
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5402
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5420
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5421
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5422
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5427
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5430
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5435
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5451
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5457
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5461
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5470
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5474
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5485
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5486
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5488
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5489
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5491
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5492
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5493
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5498
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5507
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5514
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5519
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5524
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5530
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5537
		{
			sqlVAL.str = ""
		}
	case 949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5544
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 950:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5557
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5564
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5570
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5574
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 955:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5580
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5590
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5594
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 958:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5600
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5614
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5635
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5643
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5647
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5651
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5655
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5677
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5681
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5685
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5689
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5693
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5700
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5708
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5718
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5722
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5726
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5733
		{
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5734
		{
		}
	case 982:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5739
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5752
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5779
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5791
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5796
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5802
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5808
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5820
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5832
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5843
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5850
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5854
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5860
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5870
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5881
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5885
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5892
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5898
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5909
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5913
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5919
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5925
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5929
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5935
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5939
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5945
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5950
		{
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5951
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5952
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5953
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5954
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5955
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5973
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5977
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5983
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5999
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6023
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6027
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6084
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6088
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6092
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6111
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6120
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6128
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6132
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6135
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6136
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6139
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6140
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6142
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6143
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6144
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6154
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6157
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6159
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6161
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6164
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6167
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6169
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6171
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6182
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6186
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6190
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6200
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6204
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6207
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6222
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = true
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6232
		{

			sqlVAL.union.val = true
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6237
		{
			sqlVAL.union.val = false
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6247
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6261
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6273
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6285
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6295
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6305
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6309
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6313
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6317
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6321
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6342
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = nil
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6367
		{
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6368
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6377
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6384
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6386
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6388
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6390
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6392
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6394
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6412
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6432
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6450
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6469
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6486
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6503
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6507
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6522
		{
			sqlVAL.union.val = false
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6528
		{
			sqlVAL.union.val = true
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6532
		{
			sqlVAL.union.val = false
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6538
		{
			sqlVAL.union.val = true
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6542
		{
			sqlVAL.union.val = false
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6548
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6552
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6561
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6584
		{
			sqlVAL.str = ""
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6588
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6592
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6596
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6608
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6614
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6642
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6652
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6676
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6684
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6690
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6702
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6708
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6722
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6728
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6740
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6745
		{
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6746
		{
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6749
		{
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6750
		{
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6761
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6771
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6779
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6781
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6788
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6801
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6809
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6811
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6817
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6838
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6846
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6857
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6861
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6862
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6863
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6882
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6884
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6887
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6900
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6905
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6914
		{
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6915
		{
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6916
		{
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6926
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6930
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6933
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6936
		{
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6937
		{
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6941
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6945
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6955
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6961
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6965
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6978
		{
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6980
		{
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6984
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7003
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7015
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7019
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7029
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7039
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7049
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.str = ""
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7063
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7067
		{
			sqlVAL.str = ""
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7073
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.str = ""
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.str = ""
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7092
		{
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7093
		{
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7119
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7130
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7137
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7141
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7150
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7155
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7161
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7165
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7169
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7175
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7179
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7199
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7207
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7213
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7216
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7217
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7225
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7263
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7292
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7295
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7342
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7348
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7352
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7367
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7371
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7379
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7401
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7409
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7434
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7438
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7445
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7480
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7481
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7482
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7517
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7543
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7556
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7587
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7599
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7603
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7608
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7624
		{
			sqlVAL.union.val = true
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7628
		{
			sqlVAL.union.val = false
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7634
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7644
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7656
		{
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7657
		{
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7661
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = nil
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7670
		{
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7671
		{
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7675
		{
			sqlVAL.union.val = true
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = false
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = false
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = true
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7695
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7700
		{
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7701
		{
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7705
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7709
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7721
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7725
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7742
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7763
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7768
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7780
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7784
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7788
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7797
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7817
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7818
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7822
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7826
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7830
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7844
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7885
		{
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7886
		{
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7889
		{
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7890
		{
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7917
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7921
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7943
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7945
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7957
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7960
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7982
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7987
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7992
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8003
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8010
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8015
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8026
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8034
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8073
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8083
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8093
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8101
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8118
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8129
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8159
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8170
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8174
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8180
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8192
		{
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8194
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8197
		{
			sqlVAL.union.val = nil
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8198
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.union.val = true
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8217
		{
			sqlVAL.union.val = false
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8241
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8245
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8257
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8274
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8280
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8287
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.str = tree.AstFull
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8297
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8301
		{
			sqlVAL.str = tree.AstRight
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8305
		{
			sqlVAL.str = tree.AstInner
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8311
		{
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8312
		{
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.str = tree.AstHash
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8341
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8345
		{
			sqlVAL.str = ""
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8368
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8374
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8379
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8393
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8397
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8403
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8409
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8419
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8436
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8448
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8461
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8469
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8470
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8487
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8488
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8490
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8498
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8511
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8518
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8527
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8567
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8572
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8579
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8580
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8588
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = types.Geography
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8605
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8613
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8639
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8647
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.union.val = nil
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = types.Int2
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = types.Int
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = types.Float4
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8686
		{
			sqlVAL.union.val = types.Float
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8690
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8698
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8706
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = types.Bool
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8720
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8733
		{
			sqlVAL.union.val = types.Float
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8739
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8745
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8753
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8757
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8761
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8767
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8779
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8785
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = types.String
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = true
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = false
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.union.val = types.Date
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8816
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8824
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8838
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8847
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8855
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8872
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8882
		{
			sqlVAL.union.val = true
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = false
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqlVAL.union.val = false
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = types.Interval
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8896
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8947
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8980
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8986
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8995
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = nil
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9025
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9085
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9090
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9094
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9122
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9130
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9210
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9214
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9218
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9222
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9226
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9246
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9250
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9266
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9274
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9286
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9290
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9294
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9298
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9302
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9322
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9337
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9403
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9425
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9437
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9441
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9461
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9489
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9505
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9509
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9517
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9521
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9525
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9529
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9533
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9537
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9545
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9603
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9607
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9611
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9619
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9624
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9630
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9634
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9638
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9646
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9650
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9659
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9674
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9680
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9685
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9689
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9693
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9697
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9701
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9704
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9708
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9715
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9716
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9731
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9740
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9806
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9851
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9859
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9863
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9873
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9889
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9905
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9931
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9936
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9945
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9954
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9963
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9965
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9969
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9972
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9977
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9979
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9982
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9987
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9992
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9994
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9998
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10001
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10002
		{
			return unimplemented(sqllex, "treat")
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10023
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10025
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10028
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10034
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10055
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10075
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10098
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10118
		{
			sqlVAL.str = ""
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10164
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10177
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10237
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10245
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10250
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10274
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.union.val = tree.Any
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10290
		{
			sqlVAL.union.val = tree.Some
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10294
		{
			sqlVAL.union.val = tree.All
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = tree.Div
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.union.val = tree.LT
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = tree.GT
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = tree.LE
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = tree.GE
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = tree.NE
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.union.val = tree.Like
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10348
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10444
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10467
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10481
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10509
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10537
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10557
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10596
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10609
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10635
		{
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10636
		{
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10663
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10667
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10708
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10716
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10739
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10756
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10766
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10770
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10785
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10789
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10805
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10814
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10825
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10834
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10842
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10854
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10992
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11005
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11032
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11045
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11052
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11077
		{
			sqlVAL.str = ""
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11087
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
