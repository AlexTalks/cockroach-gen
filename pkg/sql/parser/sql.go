// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:74

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) survive() tree.Survive {
	return u.val.(tree.Survive)
}

//line sql-gen.y:696
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12181

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 33,
	-2, 1390,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 71,
	235, 216,
	493, 216,
	-2, 0,
	-1, 82,
	223, 1176,
	237, 1176,
	253, 359,
	378, 359,
	388, 956,
	422, 359,
	434, 956,
	477, 956,
	504, 359,
	530, 956,
	-2, 0,
	-1, 88,
	253, 363,
	-2, 0,
	-1, 89,
	130, 1390,
	230, 1390,
	515, 1390,
	516, 1390,
	-2, 0,
	-1, 105,
	147, 1361,
	166, 1361,
	179, 1361,
	233, 1361,
	266, 1361,
	330, 1361,
	340, 1361,
	510, 1361,
	-2, 1332,
	-1, 142,
	155, 829,
	252, 829,
	381, 798,
	439, 798,
	496, 829,
	498, 798,
	-2, 0,
	-1, 144,
	4, 1392,
	21, 1392,
	22, 1392,
	23, 1392,
	24, 1392,
	25, 1392,
	26, 1392,
	27, 1392,
	29, 1392,
	30, 1392,
	36, 1392,
	41, 1392,
	42, 1392,
	44, 1392,
	45, 1392,
	46, 1392,
	47, 1392,
	48, 1392,
	49, 1392,
	50, 1392,
	51, 1392,
	53, 1392,
	54, 1392,
	55, 1392,
	56, 1392,
	58, 1392,
	59, 1392,
	60, 1392,
	61, 1392,
	62, 1392,
	63, 1392,
	64, 1392,
	68, 1392,
	69, 1392,
	70, 1392,
	71, 1392,
	73, 1392,
	74, 1392,
	75, 1392,
	79, 1392,
	80, 1392,
	81, 1392,
	82, 1392,
	83, 1392,
	84, 1392,
	85, 1392,
	88, 1392,
	89, 1392,
	90, 1392,
	91, 1392,
	92, 1392,
	94, 1392,
	96, 1392,
	97, 1392,
	98, 1392,
	99, 1392,
	100, 1392,
	101, 1392,
	103, 1392,
	104, 1392,
	105, 1392,
	107, 1392,
	108, 1392,
	116, 1392,
	117, 1392,
	118, 1392,
	119, 1392,
	121, 1392,
	122, 1392,
	123, 1392,
	125, 1392,
	126, 1392,
	127, 1392,
	129, 1392,
	130, 1392,
	132, 1392,
	133, 1392,
	134, 1392,
	137, 1392,
	138, 1392,
	139, 1392,
	141, 1392,
	142, 1392,
	144, 1392,
	145, 1392,
	146, 1392,
	148, 1392,
	149, 1392,
	150, 1392,
	151, 1392,
	152, 1392,
	153, 1392,
	154, 1392,
	155, 1392,
	156, 1392,
	157, 1392,
	158, 1392,
	159, 1392,
	160, 1392,
	161, 1392,
	162, 1392,
	163, 1392,
	165, 1392,
	171, 1392,
	172, 1392,
	173, 1392,
	174, 1392,
	178, 1392,
	180, 1392,
	184, 1392,
	185, 1392,
	186, 1392,
	187, 1392,
	188, 1392,
	189, 1392,
	190, 1392,
	191, 1392,
	192, 1392,
	193, 1392,
	194, 1392,
	195, 1392,
	197, 1392,
	198, 1392,
	200, 1392,
	201, 1392,
	203, 1392,
	204, 1392,
	205, 1392,
	206, 1392,
	207, 1392,
	208, 1392,
	209, 1392,
	210, 1392,
	211, 1392,
	213, 1392,
	214, 1392,
	216, 1392,
	217, 1392,
	218, 1392,
	219, 1392,
	223, 1392,
	224, 1392,
	225, 1392,
	226, 1392,
	227, 1392,
	230, 1392,
	231, 1392,
	232, 1392,
	234, 1392,
	236, 1392,
	237, 1392,
	239, 1392,
	241, 1392,
	242, 1392,
	243, 1392,
	245, 1392,
	249, 1392,
	250, 1392,
	251, 1392,
	252, 1392,
	253, 1392,
	254, 1392,
	256, 1392,
	257, 1392,
	258, 1392,
	260, 1392,
	261, 1392,
	263, 1392,
	264, 1392,
	267, 1392,
	271, 1392,
	272, 1392,
	275, 1392,
	276, 1392,
	277, 1392,
	278, 1392,
	280, 1392,
	281, 1392,
	282, 1392,
	283, 1392,
	284, 1392,
	285, 1392,
	286, 1392,
	287, 1392,
	288, 1392,
	289, 1392,
	290, 1392,
	291, 1392,
	292, 1392,
	293, 1392,
	294, 1392,
	295, 1392,
	296, 1392,
	297, 1392,
	298, 1392,
	299, 1392,
	300, 1392,
	301, 1392,
	303, 1392,
	305, 1392,
	306, 1392,
	307, 1392,
	308, 1392,
	309, 1392,
	310, 1392,
	311, 1392,
	312, 1392,
	313, 1392,
	314, 1392,
	315, 1392,
	316, 1392,
	318, 1392,
	320, 1392,
	322, 1392,
	323, 1392,
	325, 1392,
	326, 1392,
	327, 1392,
	328, 1392,
	329, 1392,
	332, 1392,
	335, 1392,
	336, 1392,
	337, 1392,
	338, 1392,
	341, 1392,
	342, 1392,
	343, 1392,
	345, 1392,
	347, 1392,
	348, 1392,
	349, 1392,
	350, 1392,
	351, 1392,
	352, 1392,
	353, 1392,
	354, 1392,
	355, 1392,
	356, 1392,
	357, 1392,
	358, 1392,
	360, 1392,
	361, 1392,
	362, 1392,
	363, 1392,
	364, 1392,
	365, 1392,
	366, 1392,
	367, 1392,
	368, 1392,
	369, 1392,
	370, 1392,
	371, 1392,
	372, 1392,
	373, 1392,
	374, 1392,
	376, 1392,
	377, 1392,
	379, 1392,
	380, 1392,
	381, 1392,
	382, 1392,
	383, 1392,
	384, 1392,
	385, 1392,
	386, 1392,
	387, 1392,
	388, 1392,
	389, 1392,
	390, 1392,
	392, 1392,
	394, 1392,
	395, 1392,
	400, 1392,
	402, 1392,
	403, 1392,
	404, 1392,
	405, 1392,
	406, 1392,
	407, 1392,
	408, 1392,
	409, 1392,
	411, 1392,
	412, 1392,
	413, 1392,
	415, 1392,
	416, 1392,
	417, 1392,
	418, 1392,
	419, 1392,
	420, 1392,
	422, 1392,
	423, 1392,
	424, 1392,
	425, 1392,
	426, 1392,
	427, 1392,
	428, 1392,
	429, 1392,
	430, 1392,
	431, 1392,
	432, 1392,
	434, 1392,
	435, 1392,
	436, 1392,
	437, 1392,
	438, 1392,
	439, 1392,
	441, 1392,
	442, 1392,
	443, 1392,
	444, 1392,
	445, 1392,
	446, 1392,
	448, 1392,
	449, 1392,
	450, 1392,
	451, 1392,
	452, 1392,
	453, 1392,
	454, 1392,
	456, 1392,
	458, 1392,
	459, 1392,
	460, 1392,
	461, 1392,
	462, 1392,
	463, 1392,
	464, 1392,
	465, 1392,
	466, 1392,
	467, 1392,
	468, 1392,
	469, 1392,
	470, 1392,
	471, 1392,
	473, 1392,
	474, 1392,
	476, 1392,
	478, 1392,
	479, 1392,
	480, 1392,
	481, 1392,
	482, 1392,
	483, 1392,
	484, 1392,
	485, 1392,
	486, 1392,
	488, 1392,
	489, 1392,
	490, 1392,
	491, 1392,
	492, 1392,
	494, 1392,
	496, 1392,
	497, 1392,
	498, 1392,
	499, 1392,
	500, 1392,
	501, 1392,
	503, 1392,
	504, 1392,
	505, 1392,
	506, 1392,
	508, 1392,
	509, 1392,
	512, 1392,
	513, 1392,
	514, 1392,
	515, 1392,
	516, 1392,
	517, 1392,
	518, 1392,
	520, 1392,
	523, 1392,
	524, 1392,
	525, 1392,
	526, 1392,
	527, 1392,
	528, 1392,
	530, 1392,
	531, 1392,
	532, 1392,
	533, 1392,
	538, 1392,
	539, 1392,
	540, 1392,
	541, 1392,
	542, 1392,
	543, 1392,
	-2, 0,
	-1, 145,
	1, 1254,
	128, 1254,
	241, 1254,
	319, 1254,
	376, 1254,
	385, 1254,
	547, 1254,
	571, 1254,
	-2, 0,
	-1, 147,
	1, 1254,
	571, 1254,
	-2, 0,
	-1, 148,
	1, 1254,
	571, 1254,
	-2, 0,
	-1, 149,
	1, 1254,
	493, 1254,
	571, 1254,
	-2, 0,
	-1, 178,
	147, 1360,
	166, 1360,
	179, 1360,
	233, 1360,
	266, 1360,
	330, 1360,
	340, 1360,
	510, 1360,
	-2, 1335,
	-1, 219,
	4, 1399,
	5, 1399,
	6, 1399,
	7, 1399,
	8, 1399,
	9, 1399,
	10, 1399,
	21, 1399,
	22, 1399,
	23, 1399,
	24, 1399,
	25, 1399,
	26, 1399,
	27, 1399,
	29, 1399,
	30, 1399,
	36, 1399,
	37, 1399,
	41, 1399,
	42, 1399,
	43, 1399,
	44, 1399,
	45, 1399,
	46, 1399,
	47, 1399,
	48, 1399,
	49, 1399,
	50, 1399,
	51, 1399,
	53, 1399,
	54, 1399,
	55, 1399,
	56, 1399,
	58, 1399,
	59, 1399,
	60, 1399,
	61, 1399,
	62, 1399,
	63, 1399,
	64, 1399,
	65, 1399,
	66, 1399,
	67, 1399,
	68, 1399,
	69, 1399,
	70, 1399,
	71, 1399,
	73, 1399,
	74, 1399,
	75, 1399,
	77, 1399,
	79, 1399,
	80, 1399,
	81, 1399,
	82, 1399,
	83, 1399,
	84, 1399,
	85, 1399,
	88, 1399,
	89, 1399,
	90, 1399,
	91, 1399,
	92, 1399,
	94, 1399,
	96, 1399,
	97, 1399,
	98, 1399,
	99, 1399,
	100, 1399,
	101, 1399,
	103, 1399,
	104, 1399,
	105, 1399,
	106, 1399,
	107, 1399,
	108, 1399,
	109, 1399,
	110, 1399,
	111, 1399,
	112, 1399,
	113, 1399,
	114, 1399,
	115, 1399,
	116, 1399,
	117, 1399,
	118, 1399,
	119, 1399,
	120, 1399,
	121, 1399,
	122, 1399,
	123, 1399,
	124, 1399,
	125, 1399,
	126, 1399,
	127, 1399,
	129, 1399,
	130, 1399,
	132, 1399,
	133, 1399,
	134, 1399,
	137, 1399,
	138, 1399,
	139, 1399,
	141, 1399,
	142, 1399,
	144, 1399,
	145, 1399,
	146, 1399,
	148, 1399,
	149, 1399,
	150, 1399,
	151, 1399,
	152, 1399,
	153, 1399,
	154, 1399,
	155, 1399,
	156, 1399,
	157, 1399,
	158, 1399,
	159, 1399,
	160, 1399,
	161, 1399,
	162, 1399,
	163, 1399,
	164, 1399,
	165, 1399,
	171, 1399,
	172, 1399,
	173, 1399,
	174, 1399,
	178, 1399,
	180, 1399,
	183, 1399,
	184, 1399,
	185, 1399,
	186, 1399,
	187, 1399,
	188, 1399,
	189, 1399,
	190, 1399,
	191, 1399,
	192, 1399,
	193, 1399,
	194, 1399,
	195, 1399,
	197, 1399,
	198, 1399,
	200, 1399,
	201, 1399,
	203, 1399,
	204, 1399,
	205, 1399,
	206, 1399,
	207, 1399,
	208, 1399,
	209, 1399,
	210, 1399,
	211, 1399,
	212, 1399,
	213, 1399,
	214, 1399,
	216, 1399,
	217, 1399,
	218, 1399,
	219, 1399,
	223, 1399,
	224, 1399,
	225, 1399,
	226, 1399,
	227, 1399,
	229, 1399,
	230, 1399,
	231, 1399,
	232, 1399,
	234, 1399,
	236, 1399,
	237, 1399,
	238, 1399,
	239, 1399,
	240, 1399,
	241, 1399,
	242, 1399,
	243, 1399,
	244, 1399,
	245, 1399,
	249, 1399,
	250, 1399,
	251, 1399,
	252, 1399,
	253, 1399,
	254, 1399,
	256, 1399,
	257, 1399,
	258, 1399,
	260, 1399,
	261, 1399,
	262, 1399,
	263, 1399,
	264, 1399,
	265, 1399,
	267, 1399,
	271, 1399,
	272, 1399,
	273, 1399,
	274, 1399,
	275, 1399,
	276, 1399,
	277, 1399,
	278, 1399,
	280, 1399,
	281, 1399,
	282, 1399,
	283, 1399,
	284, 1399,
	285, 1399,
	286, 1399,
	287, 1399,
	288, 1399,
	289, 1399,
	290, 1399,
	291, 1399,
	292, 1399,
	293, 1399,
	294, 1399,
	295, 1399,
	296, 1399,
	297, 1399,
	298, 1399,
	299, 1399,
	300, 1399,
	301, 1399,
	303, 1399,
	304, 1399,
	305, 1399,
	306, 1399,
	307, 1399,
	308, 1399,
	309, 1399,
	310, 1399,
	311, 1399,
	312, 1399,
	313, 1399,
	314, 1399,
	315, 1399,
	316, 1399,
	317, 1399,
	318, 1399,
	319, 1399,
	320, 1399,
	321, 1399,
	322, 1399,
	323, 1399,
	324, 1399,
	325, 1399,
	326, 1399,
	327, 1399,
	328, 1399,
	329, 1399,
	332, 1399,
	336, 1399,
	337, 1399,
	338, 1399,
	341, 1399,
	342, 1399,
	343, 1399,
	344, 1399,
	345, 1399,
	346, 1399,
	347, 1399,
	348, 1399,
	349, 1399,
	350, 1399,
	351, 1399,
	352, 1399,
	353, 1399,
	354, 1399,
	355, 1399,
	356, 1399,
	357, 1399,
	358, 1399,
	360, 1399,
	361, 1399,
	362, 1399,
	363, 1399,
	364, 1399,
	365, 1399,
	366, 1399,
	367, 1399,
	368, 1399,
	369, 1399,
	370, 1399,
	371, 1399,
	372, 1399,
	373, 1399,
	374, 1399,
	376, 1399,
	377, 1399,
	379, 1399,
	380, 1399,
	381, 1399,
	382, 1399,
	383, 1399,
	384, 1399,
	385, 1399,
	386, 1399,
	387, 1399,
	388, 1399,
	389, 1399,
	390, 1399,
	392, 1399,
	394, 1399,
	395, 1399,
	400, 1399,
	402, 1399,
	403, 1399,
	404, 1399,
	405, 1399,
	406, 1399,
	407, 1399,
	408, 1399,
	409, 1399,
	411, 1399,
	412, 1399,
	413, 1399,
	414, 1399,
	415, 1399,
	416, 1399,
	417, 1399,
	418, 1399,
	419, 1399,
	420, 1399,
	422, 1399,
	423, 1399,
	424, 1399,
	425, 1399,
	426, 1399,
	427, 1399,
	428, 1399,
	429, 1399,
	430, 1399,
	431, 1399,
	432, 1399,
	434, 1399,
	435, 1399,
	436, 1399,
	437, 1399,
	438, 1399,
	439, 1399,
	440, 1399,
	441, 1399,
	442, 1399,
	443, 1399,
	444, 1399,
	445, 1399,
	446, 1399,
	447, 1399,
	448, 1399,
	449, 1399,
	450, 1399,
	451, 1399,
	452, 1399,
	453, 1399,
	454, 1399,
	456, 1399,
	458, 1399,
	459, 1399,
	460, 1399,
	461, 1399,
	462, 1399,
	463, 1399,
	464, 1399,
	465, 1399,
	466, 1399,
	467, 1399,
	468, 1399,
	469, 1399,
	470, 1399,
	471, 1399,
	473, 1399,
	474, 1399,
	475, 1399,
	476, 1399,
	478, 1399,
	479, 1399,
	480, 1399,
	481, 1399,
	482, 1399,
	483, 1399,
	484, 1399,
	485, 1399,
	486, 1399,
	488, 1399,
	489, 1399,
	490, 1399,
	491, 1399,
	492, 1399,
	494, 1399,
	496, 1399,
	497, 1399,
	498, 1399,
	499, 1399,
	500, 1399,
	501, 1399,
	502, 1399,
	503, 1399,
	504, 1399,
	505, 1399,
	506, 1399,
	508, 1399,
	509, 1399,
	511, 1399,
	512, 1399,
	513, 1399,
	514, 1399,
	515, 1399,
	516, 1399,
	517, 1399,
	518, 1399,
	519, 1399,
	520, 1399,
	523, 1399,
	524, 1399,
	525, 1399,
	526, 1399,
	527, 1399,
	528, 1399,
	530, 1399,
	531, 1399,
	532, 1399,
	533, 1399,
	538, 1399,
	539, 1399,
	540, 1399,
	541, 1399,
	542, 1399,
	543, 1399,
	544, 1399,
	552, 1399,
	559, 1399,
	560, 1399,
	561, 1399,
	568, 1399,
	572, 1399,
	-2, 0,
	-1, 686,
	182, 2148,
	493, 2148,
	551, 2148,
	570, 2148,
	-2, 0,
	-1, 687,
	182, 2248,
	493, 2248,
	551, 2248,
	570, 2248,
	-2, 0,
	-1, 688,
	182, 2135,
	493, 2135,
	551, 2135,
	570, 2135,
	-2, 0,
	-1, 690,
	182, 2375,
	493, 2375,
	551, 2375,
	570, 2375,
	-2, 0,
	-1, 692,
	182, 2412,
	493, 2412,
	551, 2412,
	570, 2412,
	-2, 0,
	-1, 699,
	182, 2274,
	493, 2274,
	551, 2274,
	570, 2274,
	-2, 637,
	-1, 731,
	570, 2084,
	573, 2084,
	-2, 889,
	-1, 732,
	570, 2086,
	573, 2086,
	-2, 890,
	-1, 733,
	570, 2085,
	573, 2085,
	-2, 891,
	-1, 734,
	573, 2018,
	-2, 892,
	-1, 757,
	179, 230,
	-2, 0,
	-1, 780,
	43, 2088,
	-2, 0,
	-1, 781,
	530, 1153,
	-2, 957,
	-1, 797,
	4, 1527,
	21, 1527,
	22, 1527,
	23, 1527,
	24, 1527,
	25, 1527,
	26, 1527,
	27, 1527,
	29, 1527,
	30, 1527,
	36, 1527,
	41, 1527,
	42, 1527,
	44, 1527,
	45, 1527,
	46, 1527,
	47, 1527,
	48, 1527,
	49, 1527,
	50, 1527,
	51, 1527,
	53, 1527,
	54, 1527,
	55, 1527,
	56, 1527,
	58, 1527,
	59, 1527,
	60, 1527,
	61, 1527,
	62, 1527,
	63, 1527,
	64, 1527,
	68, 1527,
	69, 1527,
	70, 1527,
	71, 1527,
	73, 1527,
	74, 1527,
	75, 1527,
	79, 1527,
	80, 1527,
	81, 1527,
	82, 1527,
	83, 1527,
	84, 1527,
	85, 1527,
	88, 1527,
	89, 1527,
	90, 1527,
	91, 1527,
	92, 1527,
	94, 1527,
	96, 1527,
	97, 1527,
	98, 1527,
	99, 1527,
	100, 1527,
	101, 1527,
	103, 1527,
	104, 1527,
	105, 1527,
	107, 1527,
	108, 1527,
	116, 1527,
	117, 1527,
	118, 1527,
	119, 1527,
	121, 1527,
	122, 1527,
	123, 1527,
	125, 1527,
	126, 1527,
	127, 1527,
	129, 1527,
	130, 1527,
	132, 1527,
	133, 1527,
	134, 1527,
	137, 1527,
	138, 1527,
	139, 1527,
	141, 1527,
	142, 1527,
	144, 1527,
	145, 1527,
	146, 1527,
	148, 1527,
	149, 1527,
	150, 1527,
	151, 1527,
	152, 1527,
	153, 1527,
	154, 1527,
	155, 1527,
	156, 1527,
	157, 1527,
	158, 1527,
	159, 1527,
	160, 1527,
	161, 1527,
	162, 1527,
	163, 1527,
	165, 1527,
	171, 1527,
	172, 1527,
	173, 1527,
	174, 1527,
	178, 1527,
	180, 1527,
	184, 1527,
	185, 1527,
	186, 1527,
	187, 1527,
	188, 1527,
	189, 1527,
	190, 1527,
	191, 1527,
	192, 1527,
	193, 1527,
	194, 1527,
	195, 1527,
	197, 1527,
	198, 1527,
	200, 1527,
	201, 1527,
	203, 1527,
	204, 1527,
	205, 1527,
	206, 1527,
	207, 1527,
	208, 1527,
	209, 1527,
	210, 1527,
	211, 1527,
	213, 1527,
	214, 1527,
	216, 1527,
	217, 1527,
	218, 1527,
	219, 1527,
	223, 1527,
	224, 1527,
	225, 1527,
	226, 1527,
	227, 1527,
	230, 1527,
	231, 1527,
	232, 1527,
	234, 1527,
	236, 1527,
	237, 1527,
	239, 1527,
	241, 1527,
	242, 1527,
	243, 1527,
	245, 1527,
	249, 1527,
	250, 1527,
	251, 1527,
	252, 1527,
	253, 1527,
	254, 1527,
	256, 1527,
	257, 1527,
	258, 1527,
	260, 1527,
	261, 1527,
	263, 1527,
	264, 1527,
	267, 1527,
	271, 1527,
	272, 1527,
	275, 1527,
	276, 1527,
	277, 1527,
	278, 1527,
	280, 1527,
	281, 1527,
	282, 1527,
	283, 1527,
	284, 1527,
	285, 1527,
	286, 1527,
	287, 1527,
	288, 1527,
	289, 1527,
	290, 1527,
	291, 1527,
	292, 1527,
	293, 1527,
	294, 1527,
	295, 1527,
	296, 1527,
	297, 1527,
	298, 1527,
	299, 1527,
	300, 1527,
	301, 1527,
	303, 1527,
	305, 1527,
	306, 1527,
	307, 1527,
	308, 1527,
	309, 1527,
	310, 1527,
	311, 1527,
	312, 1527,
	313, 1527,
	314, 1527,
	315, 1527,
	316, 1527,
	318, 1527,
	320, 1527,
	322, 1527,
	323, 1527,
	325, 1527,
	326, 1527,
	327, 1527,
	328, 1527,
	329, 1527,
	332, 1527,
	336, 1527,
	337, 1527,
	338, 1527,
	341, 1527,
	342, 1527,
	343, 1527,
	345, 1527,
	347, 1527,
	348, 1527,
	349, 1527,
	350, 1527,
	351, 1527,
	352, 1527,
	353, 1527,
	354, 1527,
	355, 1527,
	356, 1527,
	357, 1527,
	358, 1527,
	360, 1527,
	361, 1527,
	362, 1527,
	363, 1527,
	364, 1527,
	365, 1527,
	366, 1527,
	367, 1527,
	368, 1527,
	369, 1527,
	370, 1527,
	371, 1527,
	372, 1527,
	373, 1527,
	374, 1527,
	376, 1527,
	377, 1527,
	379, 1527,
	380, 1527,
	381, 1527,
	382, 1527,
	383, 1527,
	384, 1527,
	385, 1527,
	386, 1527,
	387, 1527,
	388, 1527,
	389, 1527,
	390, 1527,
	392, 1527,
	394, 1527,
	395, 1527,
	400, 1527,
	402, 1527,
	403, 1527,
	404, 1527,
	405, 1527,
	406, 1527,
	407, 1527,
	408, 1527,
	409, 1527,
	411, 1527,
	412, 1527,
	413, 1527,
	415, 1527,
	416, 1527,
	417, 1527,
	418, 1527,
	419, 1527,
	420, 1527,
	422, 1527,
	423, 1527,
	424, 1527,
	425, 1527,
	426, 1527,
	427, 1527,
	428, 1527,
	429, 1527,
	430, 1527,
	431, 1527,
	432, 1527,
	434, 1527,
	435, 1527,
	436, 1527,
	437, 1527,
	438, 1527,
	439, 1527,
	441, 1527,
	442, 1527,
	443, 1527,
	444, 1527,
	445, 1527,
	446, 1527,
	448, 1527,
	449, 1527,
	450, 1527,
	451, 1527,
	452, 1527,
	453, 1527,
	454, 1527,
	456, 1527,
	458, 1527,
	459, 1527,
	460, 1527,
	461, 1527,
	462, 1527,
	463, 1527,
	464, 1527,
	465, 1527,
	466, 1527,
	467, 1527,
	468, 1527,
	469, 1527,
	470, 1527,
	471, 1527,
	473, 1527,
	474, 1527,
	476, 1527,
	478, 1527,
	479, 1527,
	480, 1527,
	481, 1527,
	482, 1527,
	483, 1527,
	484, 1527,
	485, 1527,
	486, 1527,
	488, 1527,
	489, 1527,
	490, 1527,
	491, 1527,
	492, 1527,
	494, 1527,
	496, 1527,
	497, 1527,
	498, 1527,
	499, 1527,
	500, 1527,
	501, 1527,
	503, 1527,
	504, 1527,
	505, 1527,
	506, 1527,
	508, 1527,
	509, 1527,
	512, 1527,
	513, 1527,
	514, 1527,
	515, 1527,
	516, 1527,
	517, 1527,
	518, 1527,
	520, 1527,
	523, 1527,
	524, 1527,
	525, 1527,
	526, 1527,
	527, 1527,
	528, 1527,
	530, 1527,
	531, 1527,
	532, 1527,
	533, 1527,
	538, 1527,
	539, 1527,
	540, 1527,
	541, 1527,
	542, 1527,
	543, 1527,
	-2, 0,
	-1, 822,
	4, 1174,
	21, 1174,
	22, 1174,
	23, 1174,
	24, 1174,
	25, 1174,
	26, 1174,
	27, 1174,
	29, 1174,
	30, 1174,
	36, 1174,
	41, 1174,
	42, 1174,
	44, 1174,
	45, 1174,
	46, 1174,
	47, 1174,
	48, 1174,
	49, 1174,
	50, 1174,
	51, 1174,
	53, 1174,
	54, 1174,
	55, 1174,
	56, 1174,
	58, 1174,
	59, 1174,
	60, 1174,
	61, 1174,
	62, 1174,
	63, 1174,
	64, 1174,
	68, 1174,
	69, 1174,
	70, 1174,
	71, 1174,
	73, 1174,
	74, 1174,
	75, 1174,
	79, 1174,
	80, 1174,
	81, 1174,
	82, 1174,
	83, 1174,
	84, 1174,
	85, 1174,
	88, 1174,
	89, 1174,
	90, 1174,
	91, 1174,
	92, 1174,
	94, 1174,
	96, 1174,
	97, 1174,
	98, 1174,
	99, 1174,
	100, 1174,
	101, 1174,
	103, 1174,
	104, 1174,
	105, 1174,
	107, 1174,
	108, 1174,
	116, 1174,
	117, 1174,
	118, 1174,
	119, 1174,
	121, 1174,
	122, 1174,
	123, 1174,
	125, 1174,
	126, 1174,
	127, 1174,
	129, 1174,
	130, 1174,
	132, 1174,
	133, 1174,
	134, 1174,
	137, 1174,
	138, 1174,
	139, 1174,
	141, 1174,
	142, 1174,
	144, 1174,
	145, 1174,
	146, 1174,
	148, 1174,
	149, 1174,
	150, 1174,
	151, 1174,
	152, 1174,
	153, 1174,
	154, 1174,
	155, 1174,
	156, 1174,
	157, 1174,
	158, 1174,
	159, 1174,
	160, 1174,
	161, 1174,
	162, 1174,
	163, 1174,
	165, 1174,
	171, 1174,
	172, 1174,
	173, 1174,
	174, 1174,
	178, 1174,
	180, 1174,
	184, 1174,
	185, 1174,
	186, 1174,
	187, 1174,
	188, 1174,
	189, 1174,
	190, 1174,
	191, 1174,
	192, 1174,
	193, 1174,
	194, 1174,
	195, 1174,
	197, 1174,
	198, 1174,
	200, 1174,
	201, 1174,
	203, 1174,
	204, 1174,
	205, 1174,
	206, 1174,
	207, 1174,
	208, 1174,
	209, 1174,
	210, 1174,
	211, 1174,
	213, 1174,
	214, 1174,
	216, 1174,
	217, 1174,
	218, 1174,
	219, 1174,
	223, 1174,
	224, 1174,
	225, 1174,
	226, 1174,
	227, 1174,
	230, 1174,
	231, 1174,
	232, 1174,
	234, 1174,
	236, 1174,
	237, 1174,
	239, 1174,
	241, 1174,
	242, 1174,
	243, 1174,
	245, 1174,
	249, 1174,
	250, 1174,
	251, 1174,
	252, 1174,
	253, 1174,
	254, 1174,
	256, 1174,
	257, 1174,
	258, 1174,
	260, 1174,
	261, 1174,
	263, 1174,
	264, 1174,
	267, 1174,
	271, 1174,
	272, 1174,
	275, 1174,
	276, 1174,
	277, 1174,
	278, 1174,
	280, 1174,
	281, 1174,
	282, 1174,
	283, 1174,
	284, 1174,
	285, 1174,
	286, 1174,
	287, 1174,
	288, 1174,
	289, 1174,
	290, 1174,
	291, 1174,
	292, 1174,
	293, 1174,
	294, 1174,
	295, 1174,
	296, 1174,
	297, 1174,
	298, 1174,
	299, 1174,
	300, 1174,
	301, 1174,
	303, 1174,
	305, 1174,
	306, 1174,
	307, 1174,
	308, 1174,
	309, 1174,
	310, 1174,
	311, 1174,
	312, 1174,
	313, 1174,
	314, 1174,
	315, 1174,
	316, 1174,
	318, 1174,
	320, 1174,
	322, 1174,
	323, 1174,
	325, 1174,
	326, 1174,
	327, 1174,
	328, 1174,
	329, 1174,
	332, 1174,
	336, 1174,
	337, 1174,
	338, 1174,
	341, 1174,
	342, 1174,
	343, 1174,
	345, 1174,
	347, 1174,
	348, 1174,
	349, 1174,
	350, 1174,
	351, 1174,
	352, 1174,
	353, 1174,
	354, 1174,
	355, 1174,
	356, 1174,
	357, 1174,
	358, 1174,
	360, 1174,
	361, 1174,
	362, 1174,
	363, 1174,
	364, 1174,
	365, 1174,
	366, 1174,
	367, 1174,
	368, 1174,
	369, 1174,
	370, 1174,
	371, 1174,
	372, 1174,
	373, 1174,
	374, 1174,
	376, 1174,
	377, 1174,
	379, 1174,
	380, 1174,
	381, 1174,
	382, 1174,
	383, 1174,
	384, 1174,
	385, 1174,
	386, 1174,
	387, 1174,
	388, 1174,
	389, 1174,
	390, 1174,
	392, 1174,
	394, 1174,
	395, 1174,
	400, 1174,
	402, 1174,
	403, 1174,
	404, 1174,
	405, 1174,
	406, 1174,
	407, 1174,
	408, 1174,
	409, 1174,
	411, 1174,
	412, 1174,
	413, 1174,
	415, 1174,
	416, 1174,
	417, 1174,
	418, 1174,
	419, 1174,
	420, 1174,
	422, 1174,
	423, 1174,
	424, 1174,
	425, 1174,
	426, 1174,
	427, 1174,
	428, 1174,
	429, 1174,
	430, 1174,
	431, 1174,
	432, 1174,
	434, 1174,
	435, 1174,
	436, 1174,
	437, 1174,
	438, 1174,
	439, 1174,
	441, 1174,
	442, 1174,
	443, 1174,
	444, 1174,
	445, 1174,
	446, 1174,
	448, 1174,
	449, 1174,
	450, 1174,
	451, 1174,
	452, 1174,
	453, 1174,
	454, 1174,
	456, 1174,
	458, 1174,
	459, 1174,
	460, 1174,
	461, 1174,
	462, 1174,
	463, 1174,
	464, 1174,
	465, 1174,
	466, 1174,
	467, 1174,
	468, 1174,
	469, 1174,
	470, 1174,
	471, 1174,
	473, 1174,
	474, 1174,
	476, 1174,
	478, 1174,
	479, 1174,
	480, 1174,
	481, 1174,
	482, 1174,
	483, 1174,
	484, 1174,
	485, 1174,
	486, 1174,
	488, 1174,
	489, 1174,
	490, 1174,
	491, 1174,
	492, 1174,
	494, 1174,
	496, 1174,
	497, 1174,
	498, 1174,
	499, 1174,
	500, 1174,
	501, 1174,
	503, 1174,
	504, 1174,
	505, 1174,
	506, 1174,
	508, 1174,
	509, 1174,
	512, 1174,
	513, 1174,
	514, 1174,
	515, 1174,
	516, 1174,
	517, 1174,
	518, 1174,
	520, 1174,
	523, 1174,
	524, 1174,
	525, 1174,
	526, 1174,
	527, 1174,
	528, 1174,
	530, 1174,
	531, 1174,
	532, 1174,
	533, 1174,
	538, 1174,
	539, 1174,
	540, 1174,
	541, 1174,
	542, 1174,
	543, 1174,
	-2, 0,
	-1, 904,
	381, 799,
	439, 799,
	498, 799,
	-2, 0,
	-1, 905,
	381, 798,
	439, 798,
	498, 798,
	-2, 740,
	-1, 909,
	1, 843,
	567, 843,
	569, 843,
	571, 843,
	-2, 0,
	-1, 910,
	1, 775,
	567, 775,
	569, 775,
	571, 775,
	-2, 0,
	-1, 911,
	1, 777,
	567, 777,
	569, 777,
	571, 777,
	-2, 0,
	-1, 912,
	1, 888,
	179, 888,
	567, 888,
	569, 888,
	571, 888,
	-2, 0,
	-1, 920,
	1, 802,
	567, 802,
	569, 802,
	571, 802,
	-2, 0,
	-1, 926,
	1, 843,
	567, 843,
	569, 843,
	571, 843,
	-2, 0,
	-1, 927,
	1, 845,
	567, 845,
	569, 845,
	571, 845,
	-2, 0,
	-1, 928,
	1, 848,
	567, 848,
	569, 848,
	571, 848,
	-2, 0,
	-1, 934,
	1, 865,
	567, 865,
	569, 865,
	571, 865,
	-2, 0,
	-1, 935,
	1, 867,
	567, 867,
	569, 867,
	571, 867,
	-2, 0,
	-1, 985,
	166, 1403,
	179, 1403,
	266, 1403,
	330, 1403,
	-2, 1339,
	-1, 1000,
	166, 1402,
	179, 1402,
	266, 1402,
	330, 1402,
	-2, 1336,
	-1, 1026,
	570, 2083,
	-2, 645,
	-1, 1054,
	5, 2075,
	568, 2073,
	-2, 2064,
	-1, 1062,
	5, 2096,
	568, 2093,
	-2, 2084,
	-1, 1063,
	5, 2097,
	568, 2094,
	-2, 2085,
	-1, 1071,
	570, 2081,
	-2, 2063,
	-1, 1072,
	568, 2494,
	-2, 2082,
	-1, 1095,
	568, 2493,
	-2, 2098,
	-1, 1096,
	5, 1602,
	-2, 2464,
	-1, 1097,
	5, 1603,
	-2, 2465,
	-1, 1098,
	5, 1604,
	-2, 2479,
	-1, 1099,
	5, 1605,
	-2, 2443,
	-1, 1100,
	5, 1606,
	-2, 2477,
	-1, 1101,
	5, 1614,
	-2, 2456,
	-1, 1102,
	5, 1601,
	-2, 2452,
	-1, 1103,
	5, 1601,
	-2, 2451,
	-1, 1104,
	5, 1601,
	-2, 2470,
	-1, 1105,
	5, 1612,
	-2, 2445,
	-1, 1106,
	5, 1617,
	-2, 2444,
	-1, 1107,
	5, 1619,
	-2, 2489,
	-1, 1110,
	5, 1641,
	-2, 2482,
	-1, 1111,
	5, 1633,
	-2, 2483,
	-1, 1112,
	5, 1641,
	-2, 2484,
	-1, 1113,
	5, 1637,
	-2, 2485,
	-1, 1114,
	5, 1587,
	-2, 2457,
	-1, 1115,
	5, 1588,
	-2, 2458,
	-1, 1116,
	5, 1589,
	-2, 2446,
	-1, 1144,
	5, 1624,
	-2, 2490,
	-1, 1145,
	5, 1625,
	-2, 2480,
	-1, 1146,
	5, 1626,
	531, 1626,
	-2, 2447,
	-1, 1147,
	5, 1627,
	531, 1627,
	-2, 2448,
	-1, 1184,
	568, 2093,
	-2, 2084,
	-1, 1185,
	568, 2094,
	-2, 2085,
	-1, 1218,
	182, 2412,
	493, 2412,
	551, 2412,
	570, 2412,
	-2, 0,
	-1, 1221,
	1, 623,
	571, 623,
	-2, 1262,
	-1, 1350,
	402, 2059,
	441, 2059,
	561, 2059,
	-2, 2056,
	-1, 1362,
	572, 2059,
	-2, 2060,
	-1, 1369,
	1, 1150,
	567, 1150,
	569, 1150,
	571, 1150,
	-2, 1388,
	-1, 1425,
	388, 956,
	530, 956,
	-2, 358,
	-1, 1445,
	43, 2087,
	-2, 2057,
	-1, 1450,
	1, 1150,
	567, 1150,
	569, 1150,
	571, 1150,
	-2, 1388,
	-1, 1457,
	4, 1174,
	21, 1174,
	22, 1174,
	23, 1174,
	24, 1174,
	25, 1174,
	26, 1174,
	27, 1174,
	29, 1174,
	30, 1174,
	36, 1174,
	41, 1174,
	42, 1174,
	44, 1174,
	45, 1174,
	46, 1174,
	47, 1174,
	48, 1174,
	49, 1174,
	50, 1174,
	51, 1174,
	53, 1174,
	54, 1174,
	55, 1174,
	56, 1174,
	58, 1174,
	59, 1174,
	60, 1174,
	61, 1174,
	62, 1174,
	63, 1174,
	64, 1174,
	68, 1174,
	69, 1174,
	70, 1174,
	71, 1174,
	73, 1174,
	74, 1174,
	75, 1174,
	79, 1174,
	80, 1174,
	81, 1174,
	82, 1174,
	83, 1174,
	84, 1174,
	85, 1174,
	88, 1174,
	89, 1174,
	90, 1174,
	91, 1174,
	92, 1174,
	94, 1174,
	96, 1174,
	97, 1174,
	98, 1174,
	99, 1174,
	100, 1174,
	101, 1174,
	103, 1174,
	104, 1174,
	105, 1174,
	107, 1174,
	108, 1174,
	116, 1174,
	117, 1174,
	118, 1174,
	119, 1174,
	121, 1174,
	122, 1174,
	123, 1174,
	125, 1174,
	126, 1174,
	127, 1174,
	129, 1174,
	130, 1174,
	132, 1174,
	133, 1174,
	134, 1174,
	137, 1174,
	138, 1174,
	139, 1174,
	141, 1174,
	142, 1174,
	144, 1174,
	145, 1174,
	146, 1174,
	148, 1174,
	149, 1174,
	150, 1174,
	151, 1174,
	152, 1174,
	153, 1174,
	154, 1174,
	155, 1174,
	156, 1174,
	157, 1174,
	158, 1174,
	159, 1174,
	160, 1174,
	161, 1174,
	162, 1174,
	163, 1174,
	171, 1174,
	172, 1174,
	173, 1174,
	174, 1174,
	178, 1174,
	180, 1174,
	184, 1174,
	185, 1174,
	186, 1174,
	187, 1174,
	188, 1174,
	189, 1174,
	190, 1174,
	191, 1174,
	192, 1174,
	193, 1174,
	194, 1174,
	195, 1174,
	197, 1174,
	198, 1174,
	200, 1174,
	201, 1174,
	203, 1174,
	204, 1174,
	205, 1174,
	206, 1174,
	207, 1174,
	208, 1174,
	209, 1174,
	210, 1174,
	211, 1174,
	213, 1174,
	214, 1174,
	216, 1174,
	217, 1174,
	218, 1174,
	219, 1174,
	224, 1174,
	225, 1174,
	226, 1174,
	227, 1174,
	230, 1174,
	231, 1174,
	232, 1174,
	234, 1174,
	236, 1174,
	237, 1174,
	239, 1174,
	241, 1174,
	242, 1174,
	243, 1174,
	245, 1174,
	249, 1174,
	250, 1174,
	251, 1174,
	252, 1174,
	253, 1174,
	254, 1174,
	256, 1174,
	257, 1174,
	258, 1174,
	260, 1174,
	261, 1174,
	263, 1174,
	264, 1174,
	267, 1174,
	271, 1174,
	272, 1174,
	275, 1174,
	276, 1174,
	277, 1174,
	278, 1174,
	280, 1174,
	281, 1174,
	282, 1174,
	283, 1174,
	284, 1174,
	285, 1174,
	286, 1174,
	287, 1174,
	288, 1174,
	289, 1174,
	290, 1174,
	291, 1174,
	292, 1174,
	293, 1174,
	294, 1174,
	295, 1174,
	296, 1174,
	297, 1174,
	298, 1174,
	299, 1174,
	300, 1174,
	301, 1174,
	303, 1174,
	305, 1174,
	306, 1174,
	307, 1174,
	308, 1174,
	309, 1174,
	310, 1174,
	311, 1174,
	312, 1174,
	313, 1174,
	314, 1174,
	315, 1174,
	316, 1174,
	318, 1174,
	322, 1174,
	323, 1174,
	325, 1174,
	326, 1174,
	327, 1174,
	328, 1174,
	329, 1174,
	332, 1174,
	334, 1174,
	336, 1174,
	337, 1174,
	338, 1174,
	341, 1174,
	342, 1174,
	343, 1174,
	345, 1174,
	347, 1174,
	348, 1174,
	349, 1174,
	350, 1174,
	351, 1174,
	352, 1174,
	353, 1174,
	354, 1174,
	355, 1174,
	356, 1174,
	357, 1174,
	358, 1174,
	360, 1174,
	361, 1174,
	362, 1174,
	363, 1174,
	364, 1174,
	365, 1174,
	366, 1174,
	367, 1174,
	368, 1174,
	369, 1174,
	370, 1174,
	371, 1174,
	372, 1174,
	373, 1174,
	374, 1174,
	376, 1174,
	377, 1174,
	379, 1174,
	380, 1174,
	381, 1174,
	382, 1174,
	383, 1174,
	384, 1174,
	385, 1174,
	386, 1174,
	387, 1174,
	388, 1174,
	389, 1174,
	390, 1174,
	392, 1174,
	394, 1174,
	395, 1174,
	400, 1174,
	402, 1174,
	403, 1174,
	404, 1174,
	405, 1174,
	406, 1174,
	407, 1174,
	408, 1174,
	409, 1174,
	411, 1174,
	412, 1174,
	413, 1174,
	415, 1174,
	416, 1174,
	417, 1174,
	418, 1174,
	419, 1174,
	420, 1174,
	422, 1174,
	423, 1174,
	424, 1174,
	425, 1174,
	426, 1174,
	427, 1174,
	428, 1174,
	429, 1174,
	430, 1174,
	431, 1174,
	432, 1174,
	434, 1174,
	435, 1174,
	436, 1174,
	437, 1174,
	438, 1174,
	439, 1174,
	441, 1174,
	442, 1174,
	443, 1174,
	444, 1174,
	445, 1174,
	446, 1174,
	448, 1174,
	449, 1174,
	450, 1174,
	451, 1174,
	452, 1174,
	453, 1174,
	454, 1174,
	456, 1174,
	458, 1174,
	459, 1174,
	460, 1174,
	461, 1174,
	462, 1174,
	463, 1174,
	464, 1174,
	465, 1174,
	466, 1174,
	467, 1174,
	468, 1174,
	469, 1174,
	470, 1174,
	471, 1174,
	473, 1174,
	474, 1174,
	476, 1174,
	478, 1174,
	479, 1174,
	480, 1174,
	481, 1174,
	482, 1174,
	483, 1174,
	484, 1174,
	485, 1174,
	486, 1174,
	488, 1174,
	489, 1174,
	490, 1174,
	491, 1174,
	492, 1174,
	494, 1174,
	496, 1174,
	497, 1174,
	498, 1174,
	499, 1174,
	500, 1174,
	501, 1174,
	503, 1174,
	504, 1174,
	505, 1174,
	506, 1174,
	508, 1174,
	509, 1174,
	512, 1174,
	513, 1174,
	514, 1174,
	515, 1174,
	516, 1174,
	517, 1174,
	518, 1174,
	520, 1174,
	523, 1174,
	524, 1174,
	525, 1174,
	526, 1174,
	527, 1174,
	528, 1174,
	530, 1174,
	531, 1174,
	532, 1174,
	533, 1174,
	538, 1174,
	539, 1174,
	540, 1174,
	541, 1174,
	542, 1174,
	543, 1174,
	-2, 0,
	-1, 1531,
	1, 496,
	567, 496,
	569, 496,
	571, 496,
	-2, 1359,
	-1, 1534,
	4, 2488,
	11, 2488,
	12, 2488,
	14, 2488,
	15, 2488,
	16, 2488,
	17, 2488,
	18, 2488,
	19, 2488,
	21, 2488,
	22, 2488,
	23, 2488,
	24, 2488,
	25, 2488,
	26, 2488,
	27, 2488,
	29, 2488,
	30, 2488,
	33, 2488,
	34, 2488,
	36, 2488,
	38, 2488,
	41, 2488,
	42, 2488,
	44, 2488,
	45, 2488,
	46, 2488,
	47, 2488,
	48, 2488,
	49, 2488,
	50, 2488,
	51, 2488,
	53, 2488,
	54, 2488,
	55, 2488,
	56, 2488,
	58, 2488,
	59, 2488,
	60, 2488,
	61, 2488,
	62, 2488,
	63, 2488,
	64, 2488,
	68, 2488,
	69, 2488,
	70, 2488,
	71, 2488,
	73, 2488,
	74, 2488,
	75, 2488,
	76, 2488,
	79, 2488,
	80, 2488,
	81, 2488,
	82, 2488,
	83, 2488,
	84, 2488,
	85, 2488,
	86, 2488,
	88, 2488,
	89, 2488,
	90, 2488,
	91, 2488,
	92, 2488,
	94, 2488,
	95, 2488,
	96, 2488,
	97, 2488,
	98, 2488,
	99, 2488,
	100, 2488,
	101, 2488,
	103, 2488,
	104, 2488,
	105, 2488,
	106, 2488,
	107, 2488,
	108, 2488,
	116, 2488,
	117, 2488,
	118, 2488,
	119, 2488,
	121, 2488,
	122, 2488,
	123, 2488,
	125, 2488,
	126, 2488,
	127, 2488,
	129, 2488,
	130, 2488,
	132, 2488,
	133, 2488,
	134, 2488,
	137, 2488,
	138, 2488,
	139, 2488,
	141, 2488,
	142, 2488,
	144, 2488,
	145, 2488,
	146, 2488,
	148, 2488,
	149, 2488,
	150, 2488,
	151, 2488,
	152, 2488,
	153, 2488,
	154, 2488,
	155, 2488,
	156, 2488,
	157, 2488,
	158, 2488,
	159, 2488,
	160, 2488,
	161, 2488,
	162, 2488,
	163, 2488,
	167, 2488,
	168, 2488,
	169, 2488,
	170, 2488,
	171, 2488,
	172, 2488,
	173, 2488,
	174, 2488,
	177, 2488,
	178, 2488,
	180, 2488,
	183, 2488,
	184, 2488,
	185, 2488,
	186, 2488,
	187, 2488,
	188, 2488,
	189, 2488,
	190, 2488,
	191, 2488,
	192, 2488,
	193, 2488,
	194, 2488,
	195, 2488,
	197, 2488,
	198, 2488,
	200, 2488,
	201, 2488,
	203, 2488,
	204, 2488,
	205, 2488,
	206, 2488,
	207, 2488,
	208, 2488,
	209, 2488,
	210, 2488,
	211, 2488,
	212, 2488,
	213, 2488,
	214, 2488,
	215, 2488,
	216, 2488,
	217, 2488,
	218, 2488,
	219, 2488,
	221, 2488,
	222, 2488,
	224, 2488,
	225, 2488,
	226, 2488,
	227, 2488,
	229, 2488,
	230, 2488,
	231, 2488,
	232, 2488,
	234, 2488,
	236, 2488,
	237, 2488,
	238, 2488,
	239, 2488,
	240, 2488,
	241, 2488,
	242, 2488,
	243, 2488,
	244, 2488,
	245, 2488,
	247, 2488,
	248, 2488,
	249, 2488,
	250, 2488,
	251, 2488,
	252, 2488,
	253, 2488,
	254, 2488,
	256, 2488,
	257, 2488,
	258, 2488,
	260, 2488,
	261, 2488,
	262, 2488,
	263, 2488,
	264, 2488,
	265, 2488,
	267, 2488,
	271, 2488,
	272, 2488,
	275, 2488,
	276, 2488,
	277, 2488,
	278, 2488,
	279, 2488,
	280, 2488,
	281, 2488,
	282, 2488,
	283, 2488,
	284, 2488,
	285, 2488,
	286, 2488,
	287, 2488,
	288, 2488,
	289, 2488,
	290, 2488,
	291, 2488,
	292, 2488,
	293, 2488,
	294, 2488,
	295, 2488,
	296, 2488,
	297, 2488,
	298, 2488,
	299, 2488,
	300, 2488,
	301, 2488,
	303, 2488,
	304, 2488,
	305, 2488,
	306, 2488,
	307, 2488,
	308, 2488,
	309, 2488,
	310, 2488,
	311, 2488,
	312, 2488,
	313, 2488,
	314, 2488,
	315, 2488,
	316, 2488,
	318, 2488,
	321, 2488,
	322, 2488,
	323, 2488,
	325, 2488,
	326, 2488,
	327, 2488,
	328, 2488,
	329, 2488,
	332, 2488,
	336, 2488,
	337, 2488,
	338, 2488,
	339, 2488,
	341, 2488,
	342, 2488,
	343, 2488,
	345, 2488,
	347, 2488,
	348, 2488,
	349, 2488,
	350, 2488,
	351, 2488,
	352, 2488,
	353, 2488,
	354, 2488,
	355, 2488,
	356, 2488,
	357, 2488,
	358, 2488,
	360, 2488,
	361, 2488,
	362, 2488,
	363, 2488,
	364, 2488,
	365, 2488,
	366, 2488,
	367, 2488,
	368, 2488,
	369, 2488,
	370, 2488,
	371, 2488,
	372, 2488,
	373, 2488,
	374, 2488,
	376, 2488,
	377, 2488,
	379, 2488,
	380, 2488,
	381, 2488,
	382, 2488,
	383, 2488,
	384, 2488,
	385, 2488,
	386, 2488,
	387, 2488,
	388, 2488,
	389, 2488,
	390, 2488,
	392, 2488,
	394, 2488,
	395, 2488,
	400, 2488,
	401, 2488,
	402, 2488,
	403, 2488,
	404, 2488,
	405, 2488,
	406, 2488,
	407, 2488,
	408, 2488,
	409, 2488,
	411, 2488,
	412, 2488,
	413, 2488,
	414, 2488,
	415, 2488,
	416, 2488,
	417, 2488,
	418, 2488,
	419, 2488,
	420, 2488,
	421, 2488,
	422, 2488,
	423, 2488,
	424, 2488,
	425, 2488,
	426, 2488,
	427, 2488,
	428, 2488,
	429, 2488,
	430, 2488,
	431, 2488,
	432, 2488,
	434, 2488,
	435, 2488,
	436, 2488,
	437, 2488,
	438, 2488,
	439, 2488,
	441, 2488,
	442, 2488,
	443, 2488,
	444, 2488,
	445, 2488,
	446, 2488,
	447, 2488,
	448, 2488,
	449, 2488,
	450, 2488,
	451, 2488,
	452, 2488,
	453, 2488,
	454, 2488,
	456, 2488,
	458, 2488,
	459, 2488,
	460, 2488,
	461, 2488,
	462, 2488,
	463, 2488,
	464, 2488,
	465, 2488,
	466, 2488,
	467, 2488,
	468, 2488,
	469, 2488,
	470, 2488,
	471, 2488,
	473, 2488,
	474, 2488,
	476, 2488,
	478, 2488,
	479, 2488,
	480, 2488,
	481, 2488,
	482, 2488,
	483, 2488,
	484, 2488,
	485, 2488,
	486, 2488,
	488, 2488,
	489, 2488,
	490, 2488,
	491, 2488,
	492, 2488,
	494, 2488,
	496, 2488,
	497, 2488,
	498, 2488,
	499, 2488,
	500, 2488,
	501, 2488,
	503, 2488,
	504, 2488,
	505, 2488,
	506, 2488,
	508, 2488,
	509, 2488,
	512, 2488,
	513, 2488,
	514, 2488,
	515, 2488,
	516, 2488,
	517, 2488,
	518, 2488,
	520, 2488,
	523, 2488,
	524, 2488,
	525, 2488,
	526, 2488,
	527, 2488,
	528, 2488,
	530, 2488,
	531, 2488,
	532, 2488,
	533, 2488,
	538, 2488,
	539, 2488,
	540, 2488,
	541, 2488,
	542, 2488,
	543, 2488,
	544, 2488,
	546, 2488,
	549, 2488,
	550, 2488,
	551, 2488,
	552, 2488,
	553, 2488,
	554, 2488,
	556, 2488,
	557, 2488,
	558, 2488,
	559, 2488,
	560, 2488,
	561, 2488,
	562, 2488,
	563, 2488,
	564, 2488,
	566, 2488,
	569, 2488,
	570, 2488,
	572, 2488,
	573, 2488,
	-2, 0,
	-1, 1539,
	182, 2375,
	493, 2375,
	551, 2375,
	570, 2375,
	-2, 0,
	-1, 1588,
	381, 799,
	439, 799,
	498, 799,
	-2, 0,
	-1, 1614,
	1, 794,
	567, 794,
	569, 794,
	571, 794,
	-2, 0,
	-1, 1615,
	1, 830,
	567, 830,
	569, 830,
	571, 830,
	-2, 0,
	-1, 1616,
	1, 838,
	567, 838,
	569, 838,
	571, 838,
	-2, 0,
	-1, 1617,
	1, 801,
	567, 801,
	569, 801,
	571, 801,
	-2, 0,
	-1, 1619,
	1, 805,
	567, 805,
	569, 805,
	571, 805,
	-2, 0,
	-1, 1625,
	1, 812,
	567, 812,
	569, 812,
	571, 812,
	-2, 0,
	-1, 1653,
	1, 2434,
	567, 2434,
	569, 2434,
	570, 2434,
	571, 2434,
	-2, 863,
	-1, 1654,
	1, 2372,
	567, 2372,
	569, 2372,
	570, 2372,
	571, 2372,
	-2, 864,
	-1, 1670,
	1, 1257,
	571, 1257,
	-2, 1262,
	-1, 1673,
	166, 1402,
	179, 1402,
	266, 1402,
	330, 1402,
	-2, 1340,
	-1, 1767,
	147, 1361,
	166, 1361,
	179, 1361,
	233, 1361,
	266, 1361,
	330, 1361,
	340, 1361,
	510, 1361,
	-2, 1802,
	-1, 1827,
	569, 1952,
	-2, 0,
	-1, 1862,
	147, 1361,
	166, 1361,
	179, 1361,
	233, 1361,
	266, 1361,
	330, 1361,
	340, 1361,
	510, 1361,
	-2, 1489,
	-1, 1911,
	568, 1629,
	-2, 1617,
	-1, 1954,
	1, 625,
	571, 625,
	-2, 1262,
	-1, 2072,
	215, 231,
	-2, 2092,
	-1, 2073,
	215, 232,
	-2, 274,
	-1, 2201,
	1, 796,
	567, 796,
	569, 796,
	571, 796,
	-2, 0,
	-1, 2202,
	1, 832,
	567, 832,
	569, 832,
	571, 832,
	-2, 0,
	-1, 2203,
	1, 840,
	567, 840,
	569, 840,
	571, 840,
	-2, 0,
	-1, 2236,
	1, 814,
	567, 814,
	569, 814,
	571, 814,
	-2, 0,
	-1, 2283,
	419, 1429,
	420, 1429,
	-2, 1662,
	-1, 2314,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1682,
	-1, 2315,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1683,
	-1, 2316,
	95, 0,
	247, 0,
	248, 0,
	553, 0,
	554, 0,
	-2, 1684,
	-1, 2317,
	95, 0,
	247, 0,
	248, 0,
	553, 0,
	554, 0,
	-2, 1685,
	-1, 2318,
	95, 0,
	247, 0,
	248, 0,
	553, 0,
	554, 0,
	-2, 1686,
	-1, 2319,
	95, 0,
	247, 0,
	248, 0,
	553, 0,
	554, 0,
	-2, 1687,
	-1, 2320,
	95, 0,
	247, 0,
	248, 0,
	553, 0,
	554, 0,
	-2, 1688,
	-1, 2321,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1689,
	-1, 2333,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1701,
	-1, 2334,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1702,
	-1, 2335,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1703,
	-1, 2338,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1708,
	-1, 2344,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1712,
	-1, 2346,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1720,
	-1, 2347,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1721,
	-1, 2348,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1722,
	-1, 2349,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1723,
	-1, 2485,
	5, 2096,
	182, 1963,
	568, 2093,
	-2, 2084,
	-1, 2486,
	182, 1964,
	-2, 2439,
	-1, 2487,
	182, 1965,
	-2, 2273,
	-1, 2488,
	182, 1966,
	-2, 2164,
	-1, 2489,
	182, 1967,
	-2, 2215,
	-1, 2490,
	182, 1968,
	-2, 2258,
	-1, 2491,
	182, 1969,
	-2, 2370,
	-1, 2492,
	182, 1970,
	-2, 1785,
	-1, 2561,
	1, 1490,
	2, 1490,
	106, 1490,
	147, 1490,
	166, 1490,
	179, 1490,
	183, 1490,
	199, 1490,
	202, 1490,
	229, 1490,
	233, 1490,
	244, 1490,
	262, 1490,
	266, 1490,
	304, 1490,
	330, 1490,
	334, 1490,
	340, 1490,
	410, 1490,
	414, 1490,
	510, 1490,
	521, 1490,
	535, 1490,
	536, 1490,
	537, 1490,
	547, 1490,
	567, 1490,
	569, 1490,
	571, 1490,
	573, 1490,
	-2, 1489,
	-1, 2574,
	568, 2065,
	-2, 2079,
	-1, 2576,
	53, 1388,
	132, 1388,
	-2, 290,
	-1, 2601,
	568, 1628,
	-2, 1618,
	-1, 2749,
	1, 1150,
	567, 1150,
	569, 1150,
	571, 1150,
	-2, 1388,
	-1, 2926,
	335, 1432,
	-2, 2478,
	-1, 2927,
	335, 1433,
	-2, 2356,
	-1, 2931,
	419, 2029,
	420, 2029,
	-2, 1783,
	-1, 2932,
	419, 2033,
	420, 2033,
	-2, 1784,
	-1, 2933,
	419, 2030,
	420, 2030,
	-2, 1783,
	-1, 2934,
	419, 2034,
	420, 2034,
	-2, 1784,
	-1, 2947,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1710,
	-1, 2948,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1714,
	-1, 2954,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1716,
	-1, 3184,
	1, 622,
	567, 622,
	569, 622,
	571, 622,
	-2, 1262,
	-1, 3322,
	1, 1150,
	567, 1150,
	569, 1150,
	571, 1150,
	-2, 1388,
	-1, 3432,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1718,
	-1, 3439,
	238, 0,
	240, 0,
	321, 0,
	-2, 1737,
	-1, 3506,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1766,
	-1, 3507,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1767,
	-1, 3508,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1768,
	-1, 3512,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1772,
	-1, 3513,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1773,
	-1, 3514,
	14, 0,
	15, 0,
	16, 0,
	549, 0,
	550, 0,
	551, 0,
	-2, 1774,
	-1, 3560,
	568, 2066,
	-2, 2080,
	-1, 3698,
	570, 2595,
	-2, 1316,
	-1, 3756,
	238, 0,
	240, 0,
	321, 0,
	-2, 1738,
	-1, 3759,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1741,
	-1, 3760,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1743,
	-1, 3845,
	570, 2081,
	-2, 1184,
	-1, 3974,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1742,
	-1, 3975,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	212, 0,
	215, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 1744,
	-1, 3986,
	238, 0,
	-2, 1775,
	-1, 4144,
	238, 0,
	-2, 1776,
	-1, 4315,
	50, 0,
	212, 0,
	265, 0,
	447, 0,
	544, 0,
	552, 0,
	-2, 2442,
}

const sqlPrivate = 57344

const sqlLast = 115286

var sqlAct = [...]int{

	254, 4194, 2811, 3307, 2639, 4176, 4070, 2841, 4314, 3105,
	3306, 4297, 4325, 4168, 4430, 4024, 4286, 2069, 3739, 4215,
	4270, 4250, 4198, 3841, 4326, 4267, 4097, 4327, 4377, 2680,
	4077, 4011, 4148, 3334, 3926, 3471, 3931, 3898, 1188, 3424,
	2170, 1010, 4313, 3995, 3963, 4029, 2293, 3690, 4086, 2179,
	1177, 3842, 3880, 1522, 4111, 3339, 3912, 3632, 3826, 2940,
	3292, 2155, 3202, 2361, 1898, 1682, 3936, 1518, 3666, 3302,
	1001, 3650, 733, 3652, 3332, 2517, 2301, 2009, 2850, 2115,
	2712, 3205, 2294, 2800, 697, 1554, 3991, 2863, 1254, 3389,
	2772, 2782, 2852, 3563, 3111, 1389, 1868, 733, 1372, 3120,
	3148, 3387, 1347, 3128, 3795, 3088, 3738, 3109, 836, 2860,
	1366, 2843, 2812, 2849, 1837, 2064, 2554, 2797, 1009, 169,
	2641, 2063, 2795, 3087, 2298, 1946, 2553, 2019, 4, 2405,
	1596, 4149, 1054, 3531, 2403, 1775, 2924, 2374, 1355, 2153,
	1813, 728, 1443, 1553, 2726, 1498, 2058, 4195, 2859, 2042,
	2049, 248, 247, 104, 2783, 1993, 1058, 1237, 3155, 1990,
	1838, 2535, 2394, 2358, 2514, 1532, 2265, 1168, 2282, 2263,
	1670, 1980, 2556, 2679, 2586, 2177, 3304, 2805, 1854, 1857,
	1509, 1448, 1063, 2103, 4216, 1223, 734, 2630, 662, 1352,
	735, 2853, 1808, 2585, 38, 2397, 2543, 1171, 2481, 2525,
	1374, 1847, 2447, 2375, 1150, 1760, 1683, 1684, 169, 2264,
	2266, 1625, 730, 679, 2102, 178, 1167, 691, 830, 809,
	2127, 648, 1185, 739, 742, 670, 179, 1472, 1384, 781,
	1530, 2008, 4298, 1065, 2287, 1039, 665, 43, 42, 40,
	31, 29, 673, 1148, 27, 1689, 1173, 2975, 739, 742,
	898, 1395, 1669, 1697, 1698, 918, 1730, 1731, 1732, 1740,
	1741, 1742, 3545, 2971, 3546, 2144, 3107, 2144, 3349, 2144,
	1899, 3060, 3061, 4499, 3178, 1733, 1728, 2534, 2144, 2144,
	4489, 4476, 4475, 1700, 3368, 2534, 2534, 4466, 1232, 4448,
	4446, 2077, 1746, 4028, 4028, 4396, 4356, 4349, 4347, 2077,
	4357, 2534, 2534, 4344, 3348, 1005, 4341, 4345, 4311, 851,
	4342, 4310, 2077, 4309, 2178, 2077, 1165, 2163, 1699, 1697,
	1698, 4304, 4303, 4295, 1232, 2163, 2163, 4028, 1719, 4293,
	3177, 4265, 4240, 4028, 1006, 4028, 2592, 1716, 1005, 4233,
	4232, 4227, 1728, 2534, 2534, 4028, 3075, 4226, 4220, 1700,
	3535, 4028, 2077, 4190, 1183, 4146, 4128, 3890, 4125, 2592,
	3727, 4122, 2077, 2588, 3368, 4028, 4079, 1697, 1698, 4044,
	4080, 4043, 4035, 2077, 4034, 2077, 2077, 4027, 4028, 4002,
	3163, 4028, 2611, 2077, 1699, 986, 1151, 1151, 3976, 3955,
	1728, 3944, 2592, 2163, 1719, 3368, 985, 1700, 3875, 2077,
	3863, 2984, 2534, 1716, 2534, 1618, 1199, 2985, 2077, 1722,
	1723, 1724, 1725, 3758, 3706, 1562, 3700, 2592, 3384, 1705,
	3384, 3664, 3555, 2527, 2939, 3665, 3556, 1000, 995, 3553,
	2534, 3538, 1699, 3554, 1061, 2534, 3455, 3066, 1206, 3451,
	2077, 4241, 1719, 2534, 3060, 3061, 3383, 3078, 3079, 3080,
	3384, 1716, 3375, 4150, 1737, 3104, 3376, 1747, 1152, 2534,
	2077, 1060, 2610, 1727, 1729, 3099, 3754, 3098, 3051, 2534,
	3025, 2534, 3052, 4141, 3026, 1722, 1723, 1724, 1725, 3017,
	1743, 4129, 1744, 3018, 3015, 1705, 1200, 2986, 2534, 1714,
	1715, 2534, 2866, 2839, 2838, 2614, 2163, 2166, 2166, 2534,
	1548, 1396, 3752, 2163, 2591, 2583, 2577, 1735, 2592, 2534,
	2077, 2533, 2165, 3535, 219, 2534, 2166, 2526, 1154, 3075,
	1155, 1720, 3925, 1722, 1723, 1724, 1725, 2400, 3890, 1727,
	1729, 3864, 3727, 1705, 3376, 2703, 2629, 1409, 2534, 3076,
	1959, 3060, 3061, 1108, 2013, 2143, 2159, 2778, 2076, 2720,
	2627, 1833, 1383, 3622, 3427, 1714, 1715, 3405, 221, 1855,
	2052, 3350, 1598, 1745, 2570, 2569, 2568, 2567, 2566, 1388,
	1156, 2974, 1153, 219, 994, 993, 992, 1727, 1729, 991,
	3351, 1734, 1397, 990, 989, 988, 984, 1720, 983, 982,
	981, 980, 1397, 979, 978, 2903, 1697, 1698, 977, 976,
	975, 974, 973, 1714, 1715, 1388, 972, 220, 971, 2145,
	3066, 2145, 2401, 2145, 970, 969, 968, 221, 213, 950,
	896, 895, 2145, 2145, 894, 893, 1700, 214, 892, 891,
	890, 3060, 3061, 889, 888, 1720, 887, 886, 885, 884,
	883, 882, 1403, 1726, 881, 880, 879, 878, 877, 180,
	876, 875, 2430, 874, 873, 872, 1180, 2416, 871, 3348,
	870, 1699, 2142, 1721, 869, 1200, 220, 868, 867, 866,
	865, 3081, 864, 854, 853, 849, 848, 1397, 1397, 842,
	841, 3077, 799, 1179, 798, 756, 755, 754, 753, 1738,
	745, 744, 2402, 743, 2399, 712, 1063, 703, 702, 701,
	1063, 685, 242, 241, 240, 239, 238, 3066, 180, 1726,
	3060, 3061, 3076, 237, 236, 235, 1257, 234, 233, 1037,
	1257, 2077, 232, 231, 1377, 230, 229, 228, 227, 1721,
	226, 225, 224, 223, 222, 3811, 3770, 1236, 3938, 3573,
	3549, 1241, 1227, 1408, 3385, 3151, 2997, 3102, 1063, 2980,
	1063, 2759, 1063, 2596, 2575, 89, 1858, 1726, 1377, 2560,
	2173, 2791, 1705, 2414, 3060, 3061, 1988, 1881, 1786, 1391,
	1243, 4153, 1187, 4332, 2828, 4312, 2143, 1721, 2077, 1696,
	4205, 4138, 1358, 1377, 4132, 3103, 1736, 2159, 2258, 1363,
	4022, 1711, 1712, 1718, 1739, 1717, 1713, 3066, 1710, 1708,
	1709, 1701, 1702, 1703, 1704, 1706, 1707, 1777, 4130, 3076,
	3669, 3780, 3990, 3945, 2526, 3779, 3071, 3069, 3070, 3062,
	3063, 3064, 3065, 3067, 3068, 3169, 3924, 1377, 1063, 1200,
	3818, 3793, 3792, 1377, 1387, 3786, 219, 1377, 2404, 3785,
	2172, 3784, 3777, 3776, 3774, 1063, 219, 1063, 1402, 3060,
	3061, 1377, 1454, 1456, 3077, 3769, 3766, 1063, 3765, 1063,
	3663, 1717, 1713, 1221, 1710, 1708, 1709, 1701, 1702, 1703,
	1704, 1706, 1707, 3577, 1816, 3576, 3066, 1164, 3575, 3559,
	221, 1815, 1250, 3526, 1344, 1349, 3525, 3524, 739, 742,
	221, 1441, 3447, 3443, 3146, 3095, 3086, 1779, 1446, 3076,
	3059, 3056, 3055, 1819, 1377, 3053, 3024, 3023, 1216, 1717,
	1713, 3022, 1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706,
	1707, 1519, 1063, 1386, 3019, 1063, 3016, 1385, 831, 220,
	3066, 219, 219, 2996, 1566, 1816, 3940, 1620, 2979, 220,
	213, 1181, 1815, 1394, 2972, 1401, 2840, 1407, 2398, 214,
	213, 3077, 169, 169, 1778, 70, 1776, 834, 833, 214,
	1784, 2561, 1535, 1537, 1814, 1777, 1503, 1506, 219, 1567,
	2387, 180, 71, 1696, 2605, 221, 221, 1459, 3076, 2084,
	2118, 180, 3072, 3073, 3074, 1695, 1006, 2082, 75, 3071,
	3069, 3070, 3062, 3063, 3064, 3065, 3067, 3068, 4493, 1515,
	2793, 2594, 4440, 4439, 1227, 4408, 3670, 1227, 4366, 4364,
	1189, 3473, 221, 1512, 1475, 3066, 1063, 1063, 1063, 1063,
	1063, 1063, 1063, 1528, 220, 220, 3620, 4257, 82, 4197,
	219, 4186, 3076, 1533, 3100, 213, 213, 2808, 4183, 4182,
	1546, 3077, 1551, 142, 214, 214, 3670, 1063, 4181, 4162,
	4152, 4151, 1560, 1063, 1565, 4126, 1674, 1634, 4110, 4109,
	2364, 220, 4095, 4092, 4040, 88, 180, 180, 4018, 3988,
	3971, 3970, 213, 219, 221, 3952, 1552, 1697, 1698, 103,
	3951, 214, 3915, 3891, 89, 100, 3071, 3069, 3070, 3062,
	3063, 3064, 3065, 3067, 3068, 3810, 3791, 1547, 1478, 3728,
	1728, 3722, 2708, 180, 3719, 70, 3610, 1700, 3609, 1561,
	3060, 3061, 3596, 3595, 2370, 1619, 3593, 221, 3541, 1668,
	3077, 3529, 71, 220, 3438, 1764, 3386, 3369, 3060, 3061,
	3143, 3078, 3079, 3080, 213, 3325, 3264, 3233, 75, 3204,
	90, 1766, 1699, 214, 1701, 1702, 1703, 1704, 1706, 1707,
	1572, 3171, 3001, 4154, 2665, 3000, 2995, 2963, 1063, 1063,
	1063, 1589, 2771, 1822, 1063, 180, 220, 1821, 1820, 1817,
	3939, 1185, 1621, 1185, 3077, 1809, 1807, 213, 82, 3062,
	3063, 3064, 3065, 3067, 3068, 2792, 214, 2603, 1257, 2602,
	1835, 2572, 2565, 2532, 2412, 1880, 1063, 1836, 1831, 733,
	1006, 1697, 1698, 3075, 1830, 1916, 733, 1829, 180, 1377,
	1671, 1679, 1678, 1828, 1827, 88, 1063, 1826, 3918, 2429,
	1377, 1825, 1824, 3814, 2415, 986, 2174, 1823, 1804, 103,
	1803, 1700, 1802, 1673, 89, 100, 985, 1801, 1063, 1844,
	1800, 1799, 1798, 1705, 1257, 1797, 1796, 1675, 1795, 1692,
	1693, 1794, 1793, 1818, 1792, 1889, 3069, 3070, 3062, 3063,
	3064, 3065, 3067, 3068, 1791, 1977, 1699, 1865, 1227, 1697,
	1698, 1891, 1790, 1841, 1842, 219, 3066, 1779, 1765, 1986,
	1763, 1056, 93, 1758, 1473, 1884, 1215, 1727, 1729, 1204,
	90, 1952, 1195, 169, 3066, 1895, 1810, 1811, 1951, 1700,
	3762, 3572, 1942, 1183, 3552, 1183, 3544, 1947, 2983, 2563,
	4006, 3070, 3062, 3063, 3064, 3065, 3067, 3068, 1957, 221,
	3816, 3571, 1151, 1778, 4133, 1888, 1006, 219, 3167, 1477,
	2413, 1761, 177, 96, 1699, 99, 3354, 1876, 3060, 3061,
	1233, 4437, 4429, 3866, 1979, 1720, 219, 1856, 4131, 1887,
	739, 742, 3335, 1866, 4184, 3081, 4021, 739, 742, 219,
	4082, 4081, 3943, 1240, 3893, 219, 3892, 835, 220, 1872,
	1863, 221, 142, 1971, 1970, 3865, 3813, 1979, 1981, 213,
	1885, 3731, 1377, 1377, 3168, 3730, 1979, 3729, 214, 1954,
	221, 1950, 1257, 1834, 3236, 3547, 3076, 1799, 2001, 3064,
	3065, 3067, 3068, 221, 3371, 1799, 3370, 1232, 4087, 221,
	180, 1892, 1875, 1874, 1873, 1871, 1870, 1860, 1939, 1869,
	220, 1239, 1529, 2013, 1858, 1697, 1698, 3425, 3259, 144,
	2037, 213, 93, 2041, 1979, 1705, 2046, 1896, 1910, 220,
	214, 1238, 1816, 1163, 181, 3021, 3673, 3020, 1728, 1815,
	213, 2945, 220, 1229, 1666, 1700, 1232, 3608, 220, 214,
	2667, 1232, 180, 213, 1235, 966, 1965, 2070, 2074, 213,
	1982, 1972, 214, 3309, 3379, 3308, 3206, 1635, 214, 1788,
	1008, 2807, 177, 96, 1588, 99, 2684, 1721, 4308, 2171,
	1699, 2193, 1597, 1974, 832, 4078, 4352, 4337, 4324, 3293,
	180, 3992, 2018, 2864, 2400, 3107, 2050, 219, 967, 219,
	2119, 1598, 2065, 3629, 3627, 3613, 3402, 835, 3182, 3475,
	2395, 2989, 142, 1785, 2601, 1832, 1812, 4333, 3300, 2112,
	2595, 1234, 1502, 1453, 1380, 739, 742, 1377, 3077, 1377,
	1210, 1377, 4346, 4343, 3344, 2717, 2714, 3588, 2067, 4177,
	2108, 221, 3927, 221, 4264, 4159, 3209, 1377, 1377, 3603,
	2847, 2804, 3286, 4394, 4393, 3419, 4061, 3642, 1377, 1576,
	1386, 1427, 2113, 4420, 1385, 2124, 3854, 3186, 1004, 144,
	1377, 1419, 1377, 1377, 1377, 2036, 964, 2615, 1230, 2401,
	2045, 1705, 4334, 2242, 181, 962, 960, 1231, 958, 1632,
	220, 955, 220, 1976, 733, 1180, 2240, 1180, 1381, 4488,
	2180, 213, 2075, 213, 4054, 4046, 3888, 1478, 1955, 3188,
	214, 2192, 214, 1708, 1709, 1701, 1702, 1703, 1704, 1706,
	1707, 3641, 1179, 3638, 1179, 1727, 1729, 3637, 2121, 3631,
	3626, 1975, 180, 3624, 180, 3585, 2095, 2132, 2147, 3584,
	2633, 3289, 2176, 1428, 2134, 2094, 3162, 1633, 3062, 3063,
	3064, 3065, 3067, 3068, 1003, 2631, 3072, 3073, 3074, 2402,
	2197, 2399, 1966, 3071, 3069, 3070, 3062, 3063, 3064, 3065,
	3067, 3068, 946, 1475, 794, 2129, 1063, 2129, 1063, 2994,
	1006, 2130, 1006, 1720, 2126, 1063, 1631, 2993, 1916, 1916,
	1257, 2181, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063,
	1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063,
	1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063,
	1063, 1063, 1063, 1063, 1063, 1063, 1063, 1533, 1063, 1533,
	1063, 1063, 1063, 1063, 1233, 2992, 1574, 2991, 1913, 2275,
	2949, 2201, 1240, 1240, 1707, 739, 742, 1216, 2010, 1232,
	2185, 2262, 1063, 2724, 2723, 1063, 1063, 2167, 4421, 2168,
	2719, 1005, 2710, 1063, 2020, 2443, 1614, 1063, 2699, 1063,
	1063, 3235, 2698, 2184, 795, 2693, 2692, 1257, 2273, 2671,
	3206, 2006, 2658, 1063, 1063, 1063, 1063, 2024, 1063, 1063,
	1063, 1063, 1063, 1063, 1063, 1063, 2273, 2584, 2345, 2202,
	1239, 1239, 1672, 2171, 2442, 2404, 2218, 2011, 2012, 1703,
	1704, 1706, 1707, 2303, 1063, 1063, 1063, 1063, 1063, 1063,
	1063, 1063, 1063, 2801, 1615, 1721, 2633, 1063, 1222, 2236,
	2376, 2377, 2093, 1465, 1488, 1464, 2271, 2007, 1477, 1185,
	2622, 2631, 2021, 219, 2376, 2392, 1257, 1229, 952, 2286,
	1463, 3969, 1462, 3403, 2271, 1185, 1382, 1569, 2203, 2669,
	2251, 1423, 2040, 2688, 2256, 2189, 4424, 1436, 2576, 2013,
	2438, 1063, 1257, 2657, 2261, 2260, 2259, 2922, 2267, 2274,
	1181, 3068, 1181, 1616, 1876, 2681, 2682, 221, 1644, 2484,
	2484, 2498, 3867, 2376, 2643, 986, 2518, 2520, 986, 986,
	2246, 219, 2524, 2360, 2391, 2395, 2290, 1006, 2937, 2291,
	2292, 4450, 1846, 2356, 3838, 2398, 1006, 2368, 1983, 1984,
	1006, 1910, 1910, 2656, 2366, 1234, 2548, 2681, 2682, 2440,
	1630, 1002, 2269, 2540, 2441, 2360, 220, 2444, 4393, 2445,
	2446, 2206, 2354, 1590, 2025, 221, 2573, 213, 3834, 1865,
	1677, 4170, 2200, 3850, 1233, 2372, 214, 4425, 2299, 2300,
	1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707, 2131,
	3591, 1183, 2389, 1570, 2272, 2681, 2682, 3410, 180, 1257,
	2587, 3599, 1230, 2562, 3409, 1665, 2716, 1183, 2900, 1850,
	1214, 1231, 2272, 3185, 220, 1648, 1151, 1192, 1227, 2539,
	3835, 1586, 1598, 2646, 2404, 213, 169, 3887, 1006, 2026,
	2027, 1916, 3648, 2493, 214, 2480, 2589, 1598, 2715, 2713,
	2612, 2509, 2597, 997, 2547, 941, 2552, 2608, 2522, 2558,
	2559, 2530, 2531, 2022, 2936, 1853, 180, 1190, 2545, 2546,
	3625, 2541, 710, 1257, 2270, 3250, 2254, 3623, 3243, 999,
	1848, 3647, 1863, 2209, 3612, 3611, 660, 1377, 1449, 797,
	796, 1818, 2270, 2635, 941, 4427, 4172, 1229, 1851, 3288,
	3464, 956, 1063, 1063, 2023, 1063, 2751, 2241, 1575, 2350,
	956, 956, 655, 957, 3249, 3256, 956, 3242, 999, 4330,
	2239, 1573, 2032, 941, 2906, 998, 2016, 2351, 1377, 2613,
	2604, 862, 2352, 2711, 1447, 3968, 2357, 1994, 1810, 1811,
	1849, 2718, 1995, 2668, 2250, 2750, 2691, 999, 4453, 2670,
	2634, 2960, 2609, 2689, 2607, 1627, 2815, 4405, 792, 4411,
	791, 2031, 2004, 4410, 2616, 2015, 2673, 4433, 2582, 942,
	3122, 4382, 1193, 3744, 2789, 1234, 3743, 708, 3848, 3461,
	2958, 2253, 3342, 1232, 1377, 1377, 2149, 1377, 2210, 2151,
	2081, 2080, 3341, 2660, 1425, 2156, 2929, 2930, 2158, 1377,
	2861, 4479, 2161, 2648, 2651, 2672, 2638, 2144, 942, 2695,
	2696, 2048, 2785, 1846, 1377, 2062, 2028, 2775, 2690, 2683,
	2685, 2686, 2687, 2664, 1487, 3830, 1947, 2645, 4178, 2909,
	3831, 2004, 1230, 4192, 2047, 1449, 3187, 942, 2835, 2694,
	2697, 1231, 1697, 1698, 2869, 2870, 2404, 2831, 739, 742,
	1852, 1422, 1996, 2781, 1063, 2876, 2877, 2878, 3341, 3462,
	2707, 1913, 1913, 855, 1645, 1728, 2754, 2043, 2061, 2000,
	2756, 2632, 1700, 1642, 1910, 2342, 4426, 4237, 2833, 829,
	3267, 3833, 1202, 1386, 2865, 3221, 4381, 2757, 4331, 2029,
	1850, 1014, 2885, 2011, 2012, 2760, 2769, 3836, 2763, 1063,
	2765, 2846, 843, 1180, 169, 1063, 1063, 1699, 2779, 3838,
	2353, 2674, 2822, 3600, 2836, 1805, 2825, 2955, 2826, 1180,
	2355, 2500, 2633, 2044, 2799, 2701, 2817, 3849, 2810, 2887,
	1179, 2888, 2889, 2911, 2818, 2913, 1853, 2649, 1997, 2002,
	2956, 3220, 2806, 3834, 2961, 2806, 1179, 3827, 3907, 4171,
	2257, 1848, 2837, 953, 943, 2832, 3965, 3121, 2882, 2908,
	1063, 1063, 1571, 2644, 3825, 2951, 1063, 2830, 3165, 1851,
	2891, 2848, 2893, 3829, 2895, 2004, 2367, 2867, 1643, 1063,
	1063, 2871, 709, 2872, 4329, 1063, 1063, 1533, 3740, 2905,
	3981, 1063, 1022, 943, 2904, 3835, 4404, 2359, 3397, 1646,
	1063, 1063, 1063, 1232, 2702, 2404, 1063, 3390, 1705, 4359,
	4431, 1849, 2890, 2205, 678, 4284, 1063, 3832, 4360, 2884,
	1998, 1676, 943, 2618, 2199, 4275, 1191, 2952, 711, 3224,
	2892, 707, 2894, 1063, 2896, 2252, 3828, 2340, 3873, 2928,
	2343, 2620, 2208, 1757, 2999, 656, 2917, 2897, 2919, 2544,
	2918, 4454, 1727, 1729, 3839, 2938, 2034, 2557, 2386, 4235,
	1005, 1213, 2003, 3477, 2914, 2915, 2004, 2923, 2973, 4441,
	2286, 3655, 1585, 1587, 2621, 3568, 2977, 2978, 3226, 4380,
	3653, 2981, 3917, 2907, 3734, 1647, 3964, 1207, 3655, 996,
	2339, 944, 3745, 863, 2619, 2053, 4236, 3653, 3421, 2920,
	2060, 3392, 2982, 856, 857, 4199, 1904, 4328, 4392, 4390,
	1720, 4432, 4120, 4214, 4094, 3228, 3391, 3668, 2957, 657,
	1602, 1852, 2013, 1063, 1063, 1063, 2950, 3688, 2959, 3328,
	944, 2038, 1063, 1063, 1063, 2101, 1843, 1063, 1006, 1850,
	945, 3225, 844, 845, 4434, 4480, 1205, 1063, 1185, 1257,
	1198, 2145, 647, 1063, 3229, 1063, 1687, 3741, 3908, 944,
	3114, 3115, 2289, 1185, 658, 4112, 659, 746, 2014, 3789,
	1686, 2035, 4459, 1967, 4037, 3156, 2988, 1994, 4113, 945,
	4036, 1257, 1995, 1681, 1913, 1853, 4015, 4103, 1181, 3656,
	3830, 4158, 3689, 1185, 3635, 3831, 1257, 3587, 3853, 3460,
	2542, 3329, 3321, 3388, 1181, 3852, 3656, 1964, 945, 4114,
	2059, 1686, 3097, 1916, 3200, 3136, 3196, 1257, 1851, 2650,
	2790, 3966, 2784, 2773, 2125, 2114, 2106, 2087, 3116, 1479,
	3515, 1377, 1377, 1416, 1063, 684, 4200, 1999, 3530, 3581,
	2279, 4251, 3422, 3149, 1686, 3130, 3833, 4217, 1063, 2247,
	1960, 3691, 1721, 4358, 2536, 3192, 3193, 3124, 3932, 2770,
	1916, 1490, 3836, 4076, 3150, 4074, 3126, 4017, 3212, 4116,
	1685, 3208, 2341, 3210, 2700, 3183, 3214, 3207, 1063, 1377,
	1183, 1962, 3145, 2675, 2943, 1227, 2921, 858, 859, 3189,
	3543, 4115, 1996, 3651, 3125, 1183, 3092, 3093, 3094, 3134,
	3161, 3142, 3746, 2190, 3119, 3137, 3138, 3108, 4117, 2000,
	3118, 1685, 3154, 1617, 1377, 3393, 3394, 3395, 3396, 1471,
	2581, 1963, 3175, 3123, 2580, 1183, 846, 847, 2538, 1947,
	1947, 1257, 3211, 2537, 1687, 3216, 3197, 3131, 3218, 3270,
	1377, 2579, 3273, 2578, 1685, 1377, 3278, 3280, 3135, 3660,
	3654, 3238, 3172, 3173, 1003, 3174, 3179, 3180, 3158, 3159,
	3160, 3140, 3790, 3141, 4165, 3195, 1757, 3654, 1377, 2777,
	1852, 3241, 4458, 2280, 1377, 1687, 1377, 1947, 1997, 2002,
	1257, 2033, 3832, 3747, 4025, 1457, 3129, 733, 1469, 1709,
	1701, 1702, 1703, 1704, 1706, 1707, 3305, 2001, 1377, 1458,
	3851, 3240, 4071, 861, 3223, 3190, 3184, 747, 748, 1377,
	3254, 3265, 1947, 3255, 3516, 3252, 3899, 3133, 2654, 3839,
	2056, 3594, 3251, 3517, 3380, 1185, 4201, 2123, 2001, 3582,
	2823, 1888, 2861, 3337, 2039, 3296, 2827, 3314, 1947, 3253,
	3227, 2861, 4401, 1947, 3320, 3234, 1910, 3949, 3268, 3274,
	2676, 2677, 1603, 4196, 3281, 3245, 2868, 2755, 2753, 3291,
	1998, 3294, 1579, 4261, 3248, 3275, 4248, 1377, 1377, 4254,
	3282, 2050, 3796, 2054, 3260, 4166, 3230, 3231, 3246, 2050,
	3232, 3266, 3247, 3166, 4026, 3532, 3346, 3276, 2411, 1377,
	3283, 3287, 4013, 1910, 3157, 4279, 4403, 4348, 1662, 3090,
	4185, 3367, 2003, 2040, 3987, 3788, 2004, 3659, 3089, 3257,
	3360, 3317, 2055, 3437, 683, 3948, 3400, 3176, 1446, 3261,
	3262, 3054, 3132, 3263, 2962, 2774, 1257, 1660, 3298, 1257,
	3201, 2673, 3338, 1639, 1637, 4014, 3404, 2709, 739, 742,
	3290, 1613, 3330, 3318, 2666, 4118, 750, 749, 2606, 1883,
	4119, 1611, 1470, 4255, 1609, 1991, 3397, 1183, 1607, 4167,
	1063, 1879, 1605, 1664, 1595, 3390, 1063, 1063, 3418, 1663,
	1063, 1063, 1063, 1593, 1063, 3398, 3343, 169, 169, 1467,
	1557, 1006, 1180, 1063, 1916, 3352, 2238, 3365, 3366, 3361,
	3357, 3416, 1063, 3417, 1992, 1063, 3382, 1180, 3378, 1904,
	1904, 1257, 3345, 751, 752, 1681, 2902, 2901, 2874, 1179,
	1063, 2268, 3336, 2249, 1626, 2213, 2086, 3415, 1257, 1943,
	1789, 1468, 2410, 1568, 1179, 1440, 4323, 1180, 1916, 1916,
	1063, 1063, 3399, 1063, 1063, 1063, 860, 3628, 3258, 3874,
	1697, 1698, 3423, 3406, 3862, 3407, 4378, 3408, 3440, 954,
	4247, 3269, 3930, 3879, 1179, 3823, 3687, 3679, 3640, 3392,
	3606, 3604, 3586, 1728, 3412, 3324, 3319, 3449, 3450, 3310,
	1700, 2829, 2824, 2802, 3391, 1063, 3489, 1999, 1661, 1063,
	3420, 1916, 1916, 1063, 1063, 1063, 1063, 1063, 1063, 1063,
	1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063,
	1063, 1063, 3490, 1063, 713, 1699, 3457, 1659, 2788, 2780,
	1063, 1063, 1916, 1638, 1636, 2767, 3413, 1063, 2752, 2164,
	2162, 1612, 2160, 2157, 1071, 2152, 2150, 4370, 1063, 3445,
	2146, 1610, 2137, 2085, 1608, 2083, 2066, 2051, 1606, 1185,
	1185, 3456, 1604, 1063, 1594, 3467, 2030, 3463, 3465, 3466,
	2017, 3472, 3479, 1592, 2005, 3333, 1913, 1690, 1890, 1466,
	2941, 3565, 4394, 2237, 1968, 2255, 4289, 3954, 3486, 250,
	250, 250, 1257, 650, 651, 3947, 666, 650, 666, 676,
	3487, 682, 3946, 3561, 3488, 700, 1160, 3886, 3277, 3819,
	706, 2862, 3527, 2060, 3548, 1987, 250, 959, 961, 963,
	4105, 3492, 1421, 1913, 2633, 3494, 1705, 2655, 2633, 1063,
	4098, 3699, 1161, 3519, 2013, 840, 2204, 1910, 1511, 2631,
	718, 250, 2233, 2652, 2122, 1063, 1657, 1658, 723, 2232,
	4288, 1510, 3520, 3539, 3540, 2211, 3855, 3881, 4140, 169,
	3564, 1697, 1698, 1591, 4397, 3797, 3775, 2678, 2659, 3528,
	1727, 1729, 2942, 1694, 1063, 1063, 1208, 4388, 3634, 1180,
	4353, 1910, 1910, 2766, 1691, 1697, 1698, 1181, 3536, 3537,
	661, 1183, 1183, 3393, 3394, 3395, 3396, 3550, 3566, 3567,
	3633, 2235, 1181, 3676, 2107, 1063, 1179, 243, 3551, 1219,
	2714, 2722, 3578, 3579, 3580, 1700, 2704, 1994, 2299, 3480,
	2721, 726, 1995, 2059, 2661, 3534, 1699, 1377, 1720, 1511,
	2706, 782, 1181, 4242, 1910, 1910, 1511, 826, 2663, 1162,
	4428, 3574, 1904, 2705, 672, 720, 1916, 4209, 4023, 3614,
	1699, 2662, 4206, 644, 4164, 3619, 3621, 4090, 650, 650,
	3618, 4069, 3678, 3590, 3667, 1910, 250, 3558, 3323, 2809,
	2523, 2299, 3495, 1953, 1897, 1377, 3164, 4457, 3636, 4281,
	3630, 4208, 1063, 4281, 4282, 1388, 3060, 3061, 4282, 1555,
	1185, 1063, 3767, 2815, 1697, 1698, 3658, 3701, 2625, 2626,
	2406, 3674, 3523, 724, 4407, 2623, 2624, 3692, 1578, 3646,
	3570, 1377, 1377, 1377, 1577, 2625, 2673, 3710, 2623, 2439,
	3661, 1641, 4091, 4055, 1640, 3882, 3878, 1377, 3877, 2861,
	3763, 3685, 1996, 3569, 3468, 3271, 3696, 1783, 1782, 3645,
	4443, 4412, 4246, 4245, 3682, 4244, 1257, 4155, 3695, 2000,
	3675, 4072, 4050, 4007, 3714, 4004, 3910, 3815, 3725, 1769,
	3705, 3662, 3677, 1774, 3602, 3597, 3355, 3327, 1257, 3326,
	1721, 1063, 1063, 3693, 3217, 715, 3050, 1063, 1063, 1916,
	3726, 3049, 1063, 1063, 3680, 1063, 3048, 3047, 3046, 1063,
	3045, 3044, 3694, 3043, 3042, 3041, 3697, 3703, 3040, 3039,
	1063, 3702, 3038, 3037, 3036, 719, 3035, 3649, 3034, 3033,
	3657, 3032, 3031, 3030, 3029, 3028, 1063, 3027, 1997, 2002,
	3709, 2899, 1183, 3715, 3716, 3356, 3748, 2881, 3358, 3359,
	3717, 2880, 3723, 3362, 3724, 3363, 3364, 725, 3721, 2879,
	2820, 2794, 3720, 3757, 2768, 2653, 2599, 1913, 3749, 2598,
	722, 2371, 2234, 2231, 2230, 2229, 717, 2228, 3681, 2227,
	3761, 2140, 2139, 3742, 1181, 2138, 2136, 2120, 2096, 2092,
	2091, 2090, 2089, 2088, 1656, 1655, 1185, 1600, 1599, 1910,
	1497, 1496, 3737, 1495, 1185, 1494, 1493, 1492, 1257, 1491,
	1257, 1913, 1913, 1180, 1180, 1489, 1484, 1185, 1483, 714,
	1998, 1482, 1481, 1480, 1435, 1434, 1433, 1432, 1701, 1702,
	1703, 1704, 1706, 1707, 1257, 3732, 3201, 1431, 1430, 1429,
	1179, 1179, 1424, 1420, 1418, 1417, 1248, 721, 1247, 3820,
	3821, 1246, 1245, 1244, 1185, 3733, 1185, 1212, 3787, 1211,
	1143, 727, 2003, 1958, 1913, 1913, 2004, 3149, 965, 3856,
	951, 4169, 716, 3837, 1650, 87, 1426, 769, 81, 3846,
	2057, 3601, 923, 1257, 4278, 1410, 4191, 777, 3805, 4263,
	3798, 3219, 1257, 2725, 2212, 1913, 1601, 3802, 3803, 2214,
	3801, 3799, 3800, 3883, 3843, 3884, 3843, 3144, 169, 3804,
	2564, 3808, 4234, 3771, 2998, 3191, 3812, 3809, 3794, 4147,
	1377, 1377, 3980, 2409, 1787, 3822, 3101, 83, 1183, 3857,
	3900, 1047, 1910, 1093, 3906, 3905, 1183, 1377, 3824, 3589,
	2851, 3903, 3902, 1901, 1903, 1013, 1260, 1969, 1257, 1183,
	1944, 1053, 3847, 1377, 1985, 1978, 2600, 2483, 1070, 1067,
	3897, 1905, 1907, 1069, 3870, 3858, 3859, 1068, 1906, 3885,
	3889, 1806, 3876, 3895, 1066, 1900, 3684, 3683, 3894, 2776,
	1185, 3923, 2813, 3861, 3353, 3933, 1183, 1476, 1183, 3872,
	1377, 1377, 1377, 1474, 3869, 925, 3871, 1973, 2365, 2393,
	2987, 1257, 1780, 3950, 1028, 1049, 3896, 2390, 1203, 1038,
	1027, 3127, 3106, 1063, 1063, 1063, 3340, 1196, 3901, 3922,
	3557, 3937, 3916, 2278, 786, 3057, 2396, 1194, 3928, 3920,
	3843, 1257, 3942, 2506, 2499, 1947, 1063, 1999, 3935, 1063,
	1063, 2495, 3181, 2803, 1180, 1667, 1209, 3994, 1759, 1063,
	2814, 3934, 1916, 1242, 1031, 700, 2363, 1063, 1063, 1771,
	2967, 2288, 3919, 3347, 3147, 2593, 4285, 3476, 2100, 3972,
	1159, 1179, 1257, 1158, 1377, 1201, 3959, 3956, 3953, 250,
	3961, 250, 250, 1353, 1157, 250, 250, 1368, 1257, 3967,
	3957, 4269, 4266, 3718, 3303, 3977, 1063, 1961, 1181, 1181,
	2617, 250, 1749, 1390, 3311, 1063, 1043, 2551, 1361, 1913,
	3112, 3381, 1183, 1063, 1437, 1916, 3989, 705, 3983, 4030,
	1055, 1748, 3909, 1063, 1414, 2746, 1063, 2745, 4161, 1228,
	1226, 1225, 1224, 3921, 1904, 1063, 3199, 3605, 4478, 3607,
	3598, 218, 1257, 1439, 2935, 1445, 4000, 4001, 4009, 250,
	250, 4033, 1353, 1377, 1377, 3941, 1688, 1680, 215, 217,
	216, 3911, 4008, 4003, 4010, 3562, 3153, 4049, 4351, 3616,
	3295, 1486, 22, 21, 4016, 20, 108, 41, 19, 123,
	3305, 1904, 141, 250, 140, 250, 250, 4084, 1353, 250,
	1390, 1257, 116, 139, 1377, 138, 137, 136, 4060, 4075,
	700, 3639, 250, 250, 143, 135, 4051, 134, 129, 4047,
	133, 132, 1185, 1185, 131, 130, 128, 4068, 4057, 2283,
	127, 4089, 126, 4065, 4064, 840, 4099, 4088, 4063, 4073,
	1180, 1063, 1063, 125, 124, 4123, 4124, 122, 1180, 4067,
	121, 120, 1913, 119, 246, 4083, 4108, 118, 1063, 1916,
	117, 1180, 4102, 115, 114, 113, 4127, 1179, 4062, 112,
	111, 110, 3843, 3843, 4121, 1179, 109, 4107, 3937, 4106,
	4101, 4096, 696, 693, 59, 58, 107, 106, 1179, 1063,
	3707, 18, 1063, 39, 3708, 1910, 14, 63, 1180, 1185,
	1180, 4135, 4100, 64, 17, 4104, 13, 34, 250, 86,
	98, 1185, 97, 35, 95, 4157, 4136, 4137, 94, 33,
	16, 4139, 15, 4145, 92, 1179, 250, 1179, 91, 32,
	30, 11, 9, 4052, 4180, 8, 252, 36, 4156, 1181,
	1867, 12, 5, 1369, 174, 173, 176, 172, 175, 3843,
	4173, 85, 1063, 1063, 1183, 1183, 171, 170, 1910, 84,
	4174, 3843, 4179, 1185, 28, 10, 1185, 166, 2501, 4085,
	1377, 3672, 78, 168, 167, 165, 164, 1412, 163, 79,
	1377, 1377, 76, 4187, 162, 80, 4211, 161, 77, 4213,
	160, 26, 6, 4203, 4204, 4039, 62, 1377, 4225, 4189,
	2369, 7, 1450, 3962, 4207, 4088, 3401, 4202, 101, 102,
	37, 1063, 1063, 3843, 74, 1769, 3843, 73, 72, 4219,
	25, 1063, 61, 24, 1180, 203, 202, 201, 200, 199,
	198, 1183, 4222, 4223, 4224, 193, 192, 197, 4221, 195,
	194, 196, 191, 1183, 4229, 4256, 1525, 206, 205, 210,
	4228, 1179, 209, 4260, 1063, 1063, 1541, 1063, 4239, 208,
	207, 204, 212, 190, 4243, 188, 184, 183, 4218, 2505,
	4268, 4271, 4287, 187, 189, 4283, 186, 185, 182, 211,
	4280, 158, 159, 69, 4258, 157, 4238, 156, 155, 154,
	153, 4259, 1910, 152, 151, 1183, 4273, 4230, 1183, 4231,
	4302, 4307, 4306, 68, 23, 2, 1063, 1063, 1063, 4305,
	1, 0, 4277, 4290, 0, 1904, 0, 4294, 1026, 0,
	4299, 4300, 0, 1580, 650, 1181, 4301, 0, 4335, 4272,
	0, 0, 4276, 1181, 4193, 1063, 0, 0, 0, 0,
	0, 4340, 0, 0, 4321, 250, 1181, 250, 4322, 4319,
	4320, 250, 0, 0, 0, 4210, 0, 0, 0, 1904,
	1904, 0, 0, 0, 1390, 1353, 250, 4361, 250, 4363,
	0, 4338, 0, 250, 1390, 666, 4354, 0, 0, 4365,
	250, 1390, 4373, 1181, 0, 1181, 1063, 4375, 700, 0,
	4374, 0, 4362, 0, 4379, 0, 0, 0, 4369, 0,
	4368, 0, 0, 0, 0, 1913, 0, 0, 0, 0,
	0, 0, 1904, 1904, 4371, 4372, 0, 4399, 4385, 4386,
	4376, 4395, 4391, 4336, 4389, 4387, 0, 0, 0, 0,
	4398, 4268, 4287, 4413, 4271, 1185, 4402, 1185, 4400, 0,
	0, 4406, 4417, 1904, 4409, 4422, 0, 4415, 0, 0,
	0, 4423, 0, 0, 0, 4414, 1180, 1180, 4416, 4419,
	4418, 0, 0, 0, 0, 4367, 0, 0, 1913, 0,
	0, 4291, 0, 0, 4292, 4436, 0, 0, 0, 4435,
	0, 4438, 0, 1179, 1179, 3843, 0, 3843, 0, 4447,
	0, 0, 4445, 0, 4444, 4452, 4451, 0, 0, 1063,
	1063, 4449, 0, 0, 0, 0, 0, 4455, 1063, 1181,
	1063, 1063, 0, 0, 0, 0, 0, 4468, 0, 4464,
	0, 4470, 4469, 4472, 4461, 2815, 4474, 0, 0, 0,
	0, 4473, 4471, 1180, 0, 0, 0, 4467, 0, 0,
	0, 0, 4481, 4477, 0, 1180, 0, 4487, 4484, 0,
	4483, 0, 4485, 4482, 4486, 250, 4492, 0, 250, 4491,
	1179, 4490, 0, 4494, 1063, 0, 4495, 1183, 4497, 1183,
	0, 4501, 1179, 0, 4442, 4498, 0, 4500, 0, 0,
	0, 70, 0, 0, 0, 4462, 4463, 0, 0, 4041,
	4042, 0, 0, 0, 0, 0, 0, 1180, 71, 0,
	1180, 0, 1913, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 4056, 75, 250, 4058, 4059, 0, 0,
	2925, 0, 250, 0, 1179, 0, 0, 1179, 250, 0,
	0, 0, 0, 1255, 0, 0, 0, 1356, 0, 4496,
	0, 0, 0, 250, 0, 250, 0, 0, 0, 650,
	0, 250, 0, 0, 82, 0, 0, 1904, 0, 0,
	0, 0, 0, 0, 0, 2141, 0, 0, 0, 3060,
	3061, 0, 3078, 3079, 3080, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 88, 0, 0, 3060, 3061, 0, 3078, 3079, 3080,
	2501, 2501, 0, 0, 0, 103, 0, 0, 0, 0,
	89, 100, 0, 0, 700, 0, 3753, 0, 840, 0,
	0, 2505, 0, 0, 0, 0, 0, 0, 0, 0,
	2964, 2965, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1181, 1181, 250, 3075, 1353, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	700, 0, 0, 0, 0, 0, 90, 250, 0, 3075,
	0, 0, 1350, 0, 0, 1362, 1365, 0, 250, 250,
	0, 250, 0, 250, 0, 250, 0, 250, 0, 0,
	1904, 0, 0, 4188, 0, 0, 0, 0, 0, 0,
	0, 2505, 2505, 0, 0, 0, 0, 0, 2243, 0,
	0, 2244, 0, 2245, 0, 0, 0, 0, 1181, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	1181, 0, 1026, 0, 0, 3066, 1026, 0, 0, 1365,
	1365, 0, 0, 0, 2501, 2501, 2501, 682, 0, 0,
	0, 700, 1341, 0, 0, 0, 1341, 0, 0, 0,
	3066, 0, 0, 0, 0, 0, 0, 0, 0, 1180,
	0, 1180, 0, 0, 3083, 3084, 3085, 0, 0, 1365,
	0, 0, 1181, 0, 0, 1181, 0, 0, 2590, 0,
	0, 1845, 0, 0, 0, 0, 1179, 0, 1179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3081, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3060, 3061, 0, 3078, 3079, 3080, 3076, 0, 0,
	0, 0, 0, 0, 0, 2505, 2505, 2505, 0, 0,
	0, 0, 0, 3442, 0, 0, 0, 0, 177, 96,
	2169, 99, 3076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1525, 2182, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 2183, 0, 0,
	0, 1697, 1698, 835, 0, 0, 0, 0, 142, 2191,
	0, 2194, 2195, 2196, 0, 0, 3075, 0, 650, 0,
	4350, 0, 0, 0, 1728, 0, 0, 0, 0, 0,
	0, 1700, 0, 250, 0, 0, 0, 0, 0, 221,
	0, 0, 650, 0, 0, 0, 0, 0, 0, 250,
	0, 650, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 144, 1699, 0, 3060, 3061,
	0, 3078, 3079, 3080, 0, 0, 1719, 0, 250, 1390,
	181, 0, 0, 1012, 0, 1716, 0, 0, 220, 3077,
	3441, 0, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 0, 0, 0, 0, 0, 0, 3066, 214, 0,
	0, 0, 0, 0, 3077, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 1390, 0, 666, 0,
	180, 0, 0, 0, 0, 250, 3436, 0, 0, 0,
	0, 0, 0, 3075, 0, 3060, 3061, 0, 3078, 3079,
	3080, 0, 0, 1904, 0, 0, 0, 1722, 1723, 1724,
	1725, 0, 0, 0, 1181, 0, 1181, 1705, 3081, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 2642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 0, 3076,
	0, 1727, 1729, 0, 0, 250, 1904, 3072, 3073, 3074,
	3075, 0, 0, 0, 3071, 3069, 3070, 3062, 3063, 3064,
	3065, 3067, 3068, 0, 3066, 0, 250, 1714, 1715, 0,
	0, 0, 3072, 3073, 3074, 0, 0, 0, 0, 3071,
	3069, 3070, 3062, 3063, 3064, 3065, 3067, 3068, 1362, 0,
	0, 250, 2758, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1390, 0, 0, 250,
	0, 0, 0, 0, 0, 3081, 0, 250, 0, 0,
	0, 0, 2501, 2501, 0, 0, 2798, 0, 0, 0,
	0, 3066, 0, 0, 0, 0, 2642, 0, 650, 2078,
	0, 0, 2819, 0, 0, 0, 0, 0, 250, 0,
	0, 250, 3433, 3434, 1341, 250, 3076, 250, 0, 0,
	0, 0, 1353, 0, 250, 250, 0, 1390, 0, 3082,
	1904, 3077, 0, 0, 0, 0, 2844, 840, 0, 2642,
	2642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3081, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1026, 0, 0, 0, 0, 0,
	1341, 1726, 0, 250, 1353, 250, 0, 0, 1390, 0,
	1390, 1390, 250, 2505, 2505, 1353, 0, 1353, 0, 1353,
	0, 1721, 0, 3076, 2501, 2501, 2501, 2501, 2501, 2501,
	2501, 2501, 2501, 2501, 2501, 2501, 2501, 2501, 2501, 2501,
	2501, 2501, 2501, 0, 2501, 250, 250, 250, 250, 1353,
	1353, 250, 0, 250, 3496, 3497, 3498, 3499, 3500, 3501,
	3502, 3503, 3504, 3505, 3506, 3507, 3508, 3509, 3510, 3511,
	3512, 3513, 3514, 0, 3518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 3077, 3072,
	3073, 3074, 250, 0, 0, 0, 3071, 3069, 3070, 3062,
	3063, 3064, 3065, 3067, 3068, 0, 2749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2111, 0, 0, 2505, 2505, 2505, 2505, 2505,
	2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505,
	2505, 2505, 2505, 2505, 0, 2505, 0, 0, 1341, 0,
	0, 0, 0, 1717, 1713, 0, 1710, 1708, 1709, 1701,
	1702, 1703, 1704, 1706, 1707, 3077, 0, 0, 0, 0,
	1697, 1698, 0, 1730, 1731, 1732, 1740, 1741, 1742, 0,
	0, 1390, 0, 0, 1362, 0, 0, 0, 0, 0,
	0, 0, 1733, 1728, 0, 0, 0, 0, 0, 0,
	1700, 0, 0, 2834, 1525, 0, 0, 1012, 0, 1746,
	0, 1012, 0, 0, 0, 0, 3072, 3073, 3074, 0,
	0, 0, 0, 3071, 3069, 3070, 3062, 3063, 3064, 3065,
	3067, 3068, 0, 2875, 0, 1699, 0, 2302, 0, 0,
	0, 0, 0, 0, 0, 1719, 0, 0, 0, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 0, 1392,
	0, 1398, 0, 1404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3072, 3073, 3074, 0, 0, 0, 0,
	3071, 3069, 3070, 3062, 3063, 3064, 3065, 3067, 3068, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 2407, 0, 1722, 1723, 1724, 1725,
	0, 0, 0, 0, 0, 0, 1705, 250, 0, 1526,
	0, 0, 650, 0, 0, 0, 0, 650, 0, 0,
	650, 0, 0, 650, 650, 0, 1544, 0, 1549, 650,
	0, 0, 0, 0, 0, 0, 0, 250, 1558, 0,
	1563, 1737, 0, 0, 1747, 0, 0, 0, 0, 1390,
	1727, 1729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1743, 0, 1744,
	0, 1390, 0, 0, 0, 0, 1714, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2574,
	0, 0, 0, 0, 1735, 2642, 2642, 250, 0, 1368,
	0, 0, 2642, 1622, 0, 3203, 1628, 0, 1720, 0,
	0, 0, 0, 2642, 3203, 0, 2642, 3203, 0, 0,
	3203, 0, 0, 0, 0, 0, 1341, 0, 0, 0,
	0, 0, 0, 250, 250, 1368, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1745, 0, 0, 0, 0, 0, 1368, 250, 0, 1390,
	0, 0, 1390, 0, 1353, 0, 0, 0, 1734, 0,
	0, 0, 0, 0, 70, 0, 0, 0, 0, 2642,
	0, 3272, 2642, 1368, 0, 0, 2642, 2642, 1368, 0,
	0, 71, 0, 0, 0, 0, 2628, 1750, 1751, 1752,
	1753, 1754, 1755, 1756, 0, 0, 0, 75, 0, 0,
	0, 0, 0, 1341, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1768, 0,
	1726, 250, 3299, 0, 1781, 3301, 2642, 0, 1365, 250,
	70, 0, 0, 250, 0, 1445, 0, 82, 0, 0,
	1721, 0, 0, 0, 0, 0, 0, 71, 0, 0,
	0, 0, 0, 0, 2798, 0, 0, 1353, 0, 250,
	0, 0, 2642, 75, 650, 0, 1738, 0, 0, 0,
	0, 2642, 1341, 0, 88, 1365, 0, 0, 0, 250,
	0, 0, 0, 250, 250, 0, 0, 0, 103, 0,
	0, 0, 0, 89, 100, 0, 0, 0, 1341, 0,
	0, 0, 0, 82, 0, 0, 0, 0, 0, 250,
	2798, 0, 0, 2798, 0, 0, 0, 0, 1095, 0,
	0, 2476, 2477, 2478, 2479, 2472, 2473, 2474, 2475, 1839,
	1839, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 90,
	0, 0, 0, 0, 103, 0, 0, 0, 3411, 89,
	100, 1353, 250, 1736, 250, 1350, 0, 0, 1711, 1712,
	1718, 1739, 1717, 1713, 0, 1710, 1708, 1709, 1701, 1702,
	1703, 1704, 1706, 1707, 0, 0, 1362, 0, 3011, 0,
	0, 0, 3012, 0, 0, 0, 0, 0, 250, 0,
	0, 2452, 2453, 2454, 2455, 1341, 0, 0, 0, 1012,
	2501, 0, 0, 0, 0, 90, 0, 0, 0, 0,
	0, 0, 0, 2464, 2465, 2466, 2467, 2460, 2461, 2462,
	2463, 2468, 2469, 2470, 2471, 0, 0, 0, 0, 0,
	3986, 0, 0, 0, 0, 0, 0, 3284, 0, 0,
	0, 0, 0, 0, 3474, 0, 0, 2501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1341,
	0, 0, 0, 0, 0, 0, 0, 3315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4019, 3322, 0,
	0, 93, 0, 0, 1365, 1365, 2448, 2449, 2450, 2451,
	2456, 2457, 2458, 2459, 0, 0, 0, 0, 0, 0,
	0, 2505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1186, 177, 96, 0, 99, 1362, 3373, 3374, 0, 0,
	0, 0, 1365, 0, 0, 0, 0, 93, 2505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 250, 250, 0, 835, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 1362, 0, 1362, 0,
	0, 0, 0, 0, 0, 650, 650, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 96, 2501,
	99, 0, 221, 0, 0, 0, 0, 1390, 1390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1390, 1390, 1390, 219, 0, 0, 0, 144, 4144,
	1048, 105, 835, 0, 0, 0, 0, 142, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 0, 1697,
	1698, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 213, 0, 0, 0, 0, 0, 221, 0,
	0, 214, 1728, 0, 0, 0, 0, 0, 0, 1700,
	700, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1538, 144, 0, 0, 0, 0, 0,
	2505, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 1699, 250, 3113, 220, 0, 0,
	105, 0, 0, 0, 1719, 0, 0, 0, 213, 0,
	0, 0, 0, 1368, 250, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 3139, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 1536,
	0, 0, 0, 3152, 250, 0, 0, 0, 0, 250,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3170, 0, 0, 0, 0, 0,
	0, 0, 0, 2642, 250, 0, 0, 0, 0, 0,
	987, 0, 0, 0, 0, 1722, 1723, 1724, 1725, 0,
	0, 1007, 0, 2844, 2844, 1705, 0, 0, 0, 840,
	840, 2642, 0, 0, 2798, 2798, 0, 0, 840, 2642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2277, 250, 2281,
	0, 0, 1169, 0, 0, 0, 2295, 0, 0, 1727,
	1729, 0, 0, 2304, 2305, 2306, 2307, 2308, 2309, 2310,
	2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320,
	2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330,
	2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 0, 2344,
	0, 2346, 2347, 2348, 2349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1720, 3772, 0,
	0, 0, 0, 2373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1768, 1341, 0, 0, 2388, 0,
	0, 0, 0, 0, 0, 0, 0, 3152, 0, 0,
	0, 0, 0, 0, 2418, 2421, 2424, 2427, 0, 2431,
	2432, 2433, 2434, 2435, 2436, 2437, 0, 1341, 0, 0,
	0, 0, 0, 0, 0, 0, 3643, 0, 0, 0,
	250, 0, 1341, 0, 0, 0, 1390, 2497, 250, 2508,
	2510, 2515, 0, 0, 1362, 0, 0, 0, 0, 0,
	0, 250, 2741, 1341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2111, 0, 0,
	1026, 0, 0, 0, 1186, 0, 0, 0, 1186, 2642,
	2642, 2642, 1186, 0, 1026, 2733, 2731, 0, 3845, 1726,
	3845, 1390, 2735, 2737, 2727, 0, 0, 0, 0, 2642,
	0, 3203, 0, 0, 1390, 1390, 250, 1368, 0, 1721,
	3711, 3712, 3713, 0, 0, 0, 1186, 0, 1368, 250,
	1368, 250, 0, 0, 0, 0, 1525, 0, 0, 0,
	0, 0, 0, 2642, 0, 2642, 250, 0, 0, 0,
	0, 1186, 0, 1356, 0, 0, 1255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2642, 0, 0, 0, 0, 3913, 0, 1341, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 1186, 0, 0, 0, 0,
	0, 1186, 0, 0, 0, 1186, 0, 0, 0, 0,
	0, 0, 0, 1362, 1362, 0, 0, 0, 0, 1186,
	0, 0, 0, 0, 3845, 0, 1341, 1390, 3453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3469, 0, 0, 0, 0,
	0, 0, 0, 0, 1710, 1708, 1709, 1701, 1702, 1703,
	1704, 1706, 1707, 0, 0, 0, 0, 1697, 1698, 0,
	0, 0, 1186, 0, 0, 2729, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2743, 0, 0, 0,
	1728, 0, 0, 0, 1362, 0, 0, 1700, 0, 0,
	0, 0, 0, 2761, 2762, 0, 2764, 2742, 2734, 2732,
	2736, 2738, 2728, 2730, 2744, 0, 0, 0, 0, 0,
	0, 2740, 0, 0, 0, 0, 0, 0, 2642, 0,
	3203, 0, 1699, 4012, 0, 0, 0, 0, 0, 0,
	0, 250, 1719, 0, 0, 0, 0, 0, 4031, 0,
	4031, 1716, 0, 0, 2747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 700,
	0, 0, 1341, 0, 0, 1341, 0, 0, 1353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1368, 250, 0, 0, 0, 0, 0, 3560,
	0, 0, 3431, 0, 0, 0, 0, 0, 0, 1525,
	0, 0, 4012, 0, 0, 0, 0, 0, 0, 0,
	2642, 0, 0, 1722, 1723, 1724, 1725, 0, 0, 0,
	0, 0, 4093, 1705, 0, 0, 0, 0, 0, 105,
	0, 105, 0, 105, 1390, 0, 0, 1341, 0, 0,
	0, 0, 0, 0, 0, 2898, 3845, 3845, 0, 0,
	0, 0, 0, 0, 1341, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 250, 0, 0, 1727, 1729, 3958,
	0, 3960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3474, 0, 0,
	0, 0, 0, 1714, 1715, 0, 1750, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4012, 105,
	0, 0, 2748, 1007, 105, 105, 0, 0, 0, 0,
	0, 2739, 0, 3845, 0, 1720, 105, 0, 105, 1186,
	0, 1186, 0, 0, 0, 3845, 0, 0, 105, 0,
	105, 0, 0, 0, 0, 0, 1186, 0, 0, 0,
	0, 2947, 2948, 4005, 0, 0, 250, 2954, 0, 0,
	0, 0, 0, 1917, 0, 0, 0, 1186, 0, 0,
	0, 0, 0, 0, 0, 3913, 2968, 2969, 1186, 0,
	0, 0, 2388, 0, 0, 0, 0, 3845, 0, 250,
	3845, 2976, 0, 0, 0, 0, 0, 0, 0, 0,
	3203, 105, 1186, 0, 0, 0, 0, 2990, 1341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3002, 0, 1390, 0, 1390, 0,
	0, 0, 4066, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1365, 0, 1726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1721, 0, 0,
	4031, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	987, 0, 2642, 0, 2111, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	1762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2515, 2515, 2515, 0, 1767, 0, 0,
	0, 1773, 0, 0, 0, 0, 3474, 0, 1839, 0,
	1186, 1186, 0, 0, 0, 0, 3117, 0, 0, 0,
	1186, 0, 1390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 3807, 0, 0,
	0, 0, 0, 0, 1390, 0, 0, 0, 0, 1717,
	1713, 0, 1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706,
	1707, 3817, 0, 0, 0, 0, 0, 0, 4012, 0,
	0, 0, 0, 0, 0, 1012, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1012,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1525,
	1525, 1859, 2642, 1862, 0, 105, 0, 0, 0, 3845,
	0, 3845, 1341, 0, 0, 0, 1525, 0, 0, 3222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1186, 0, 1186, 0, 1186,
	0, 0, 0, 1390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1186, 1186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2844, 0, 1186, 0,
	1186, 1186, 1186, 0, 0, 2642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2844, 0, 0, 0, 0, 0, 1697, 1698, 0, 1730,
	1731, 1732, 1740, 1741, 1742, 0, 0, 0, 1255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1733, 1728,
	0, 0, 0, 0, 0, 0, 1700, 0, 0, 0,
	0, 2111, 0, 0, 1341, 1746, 1341, 0, 3978, 0,
	0, 0, 0, 0, 0, 0, 1365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1341, 1699, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1719, 0, 0, 0, 0, 0, 0, 0, 3978,
	1716, 0, 0, 0, 0, 0, 1917, 1917, 1186, 0,
	0, 0, 0, 0, 0, 2302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1341,
	0, 0, 0, 0, 0, 0, 0, 0, 1341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2302,
	0, 0, 1722, 1723, 1724, 1725, 0, 0, 0, 0,
	0, 0, 1705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1341, 1186, 0, 0, 0, 0,
	0, 2295, 0, 0, 0, 0, 0, 3428, 3429, 0,
	0, 3432, 0, 0, 0, 3435, 0, 1737, 0, 0,
	1747, 0, 0, 0, 3439, 0, 1727, 1729, 0, 0,
	0, 0, 0, 3446, 0, 0, 3117, 0, 0, 0,
	0, 0, 0, 1743, 0, 1744, 0, 1341, 0, 0,
	0, 3458, 1714, 1715, 0, 0, 0, 1186, 0, 0,
	0, 0, 0, 0, 1186, 0, 0, 1007, 0, 1007,
	1735, 3481, 3482, 1186, 3483, 3484, 3485, 1341, 0, 0,
	0, 0, 0, 0, 1720, 0, 0, 0, 0, 0,
	1186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1059, 0, 0, 3491, 0, 1341, 0,
	3493, 0, 0, 0, 0, 0, 1745, 0, 0, 0,
	0, 0, 0, 0, 1341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1734, 0, 0, 0, 0, 0,
	0, 3521, 3522, 0, 0, 0, 0, 0, 249, 249,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 3533,
	0, 0, 1026, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3542, 740, 0, 0, 1341, 0,
	0, 0, 0, 0, 1362, 0, 0, 1186, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 0,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	987, 0, 0, 987, 987, 0, 1721, 0, 0, 1917,
	0, 0, 0, 0, 0, 0, 0, 1341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3583, 0, 1738, 0, 0, 0, 0, 0, 0, 0,
	0, 1186, 0, 0, 0, 0, 3592, 0, 0, 0,
	0, 0, 0, 0, 0, 1186, 0, 0, 2362, 0,
	0, 0, 0, 0, 0, 0, 1365, 0, 0, 0,
	0, 0, 0, 0, 1007, 0, 3615, 0, 0, 0,
	0, 0, 0, 1767, 0, 0, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 1186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1736,
	0, 0, 0, 0, 1711, 1712, 1718, 1739, 1717, 1713,
	0, 1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707,
	0, 0, 1186, 1186, 2384, 1186, 0, 0, 2385, 1169,
	0, 0, 0, 0, 0, 0, 0, 1186, 1026, 1026,
	0, 0, 0, 0, 0, 1862, 0, 0, 0, 0,
	0, 0, 1186, 1839, 0, 0, 0, 0, 0, 0,
	0, 0, 3704, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 105, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1026, 3750, 3751, 0, 0, 0, 0, 3755, 3756,
	0, 0, 0, 3759, 3760, 0, 0, 0, 0, 0,
	3764, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3773, 0, 105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1697, 1698, 0, 1730,
	1731, 1732, 1740, 1741, 1742, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 105, 0, 1733, 1728,
	0, 0, 0, 0, 0, 0, 1700, 0, 0, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 0, 0, 105, 0, 105, 0, 0, 0,
	0, 1699, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1719, 0, 0, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 105, 0,
	0, 105, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 105, 0, 0, 0,
	1175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1722, 1723, 1724, 1725, 0, 0, 0, 0,
	0, 0, 1705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1186, 1186, 0, 0,
	0, 0, 0, 0, 0, 245, 245, 646, 0, 0,
	0, 1186, 0, 0, 0, 0, 0, 1737, 0, 0,
	1747, 0, 0, 105, 0, 0, 1727, 1729, 0, 1186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1186, 0, 1743, 1186, 1744, 0, 0, 0, 0,
	0, 0, 1714, 1715, 0, 0, 0, 0, 0, 0,
	0, 1917, 0, 0, 0, 1186, 0, 0, 0, 0,
	1735, 0, 0, 0, 3973, 3974, 3975, 0, 0, 1186,
	1186, 0, 0, 0, 1720, 0, 0, 0, 249, 0,
	249, 249, 0, 0, 249, 249, 0, 2295, 0, 0,
	3984, 3985, 1697, 1698, 0, 0, 0, 0, 1917, 0,
	740, 0, 0, 0, 0, 0, 0, 0, 3993, 3996,
	0, 0, 0, 0, 0, 1728, 1745, 1186, 0, 0,
	0, 0, 1700, 0, 2362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1734, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1767, 0, 0, 249, 249,
	0, 0, 1186, 0, 0, 0, 4032, 1699, 0, 0,
	0, 0, 0, 0, 4038, 0, 0, 1719, 0, 1186,
	0, 0, 0, 0, 4045, 0, 1716, 1012, 1186, 0,
	0, 0, 249, 1186, 249, 249, 4053, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 0,
	0, 249, 249, 0, 0, 0, 1186, 0, 0, 0,
	0, 0, 1186, 0, 1186, 0, 1721, 0, 1186, 0,
	0, 0, 0, 0, 0, 0, 0, 3430, 0, 0,
	0, 0, 0, 0, 0, 0, 1186, 0, 0, 0,
	0, 0, 1738, 0, 0, 0, 0, 1186, 1722, 1723,
	1724, 1725, 0, 0, 0, 0, 0, 0, 1705, 0,
	0, 0, 0, 1186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 1727, 1729, 0, 1186, 1186, 0, 1169, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 1169, 0, 0, 0, 1186, 1714, 1715,
	4160, 0, 0, 4163, 0, 0, 0, 0, 0, 1736,
	0, 0, 0, 0, 1711, 1712, 1718, 1739, 1717, 1713,
	0, 1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707,
	1720, 0, 0, 0, 1186, 0, 0, 1186, 3778, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1012, 1012, 1697, 1698, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1728, 0,
	0, 0, 1917, 0, 0, 1700, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1186,
	0, 0, 105, 105, 0, 0, 105, 0, 0, 0,
	0, 0, 0, 2295, 0, 0, 1186, 0, 0, 0,
	1699, 0, 3996, 0, 0, 0, 1917, 1917, 0, 0,
	1719, 0, 0, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 1726, 0, 0, 105, 105, 0, 0, 105,
	0, 0, 0, 0, 0, 0, 1012, 0, 0, 0,
	0, 0, 1721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1917,
	1917, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2953, 0, 0, 0, 1861, 0, 1182, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 4318, 4318, 4318,
	1917, 1722, 1723, 1724, 1725, 249, 1861, 249, 0, 0,
	0, 1705, 740, 0, 0, 0, 0, 0, 0, 740,
	0, 0, 0, 0, 0, 0, 4339, 1186, 1186, 0,
	0, 0, 0, 0, 0, 1169, 0, 0, 1007, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1727, 1729, 0, 0, 0,
	1186, 0, 0, 0, 0, 0, 0, 0, 0, 105,
	105, 0, 0, 0, 0, 0, 0, 4318, 0, 0,
	0, 1714, 1715, 0, 1717, 1713, 0, 1710, 1708, 1709,
	1701, 1702, 1703, 1704, 1706, 1707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1720, 0, 1252, 0, 0, 0, 0,
	0, 1360, 0, 0, 0, 0, 0, 150, 0, 0,
	0, 0, 0, 0, 0, 70, 0, 45, 44, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 71, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 75, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 65,
	0, 0, 0, 0, 0, 0, 47, 758, 147, 0,
	4318, 4456, 0, 0, 249, 1186, 0, 740, 0, 4460,
	0, 0, 0, 0, 0, 0, 46, 760, 82, 0,
	0, 0, 761, 0, 1917, 0, 0, 0, 0, 1501,
	0, 1501, 1501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 49, 66, 0, 1726, 0, 0, 1542, 1543,
	50, 0, 0, 1186, 0, 88, 0, 0, 0, 148,
	249, 762, 0, 779, 249, 1721, 0, 48, 1186, 103,
	0, 249, 0, 0, 89, 100, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 763, 1186,
	1186, 1186, 249, 764, 249, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 1186, 0, 0, 0, 0,
	0, 0, 51, 787, 0, 0, 0, 0, 0, 765,
	0, 0, 0, 0, 1186, 0, 249, 0, 0, 0,
	90, 0, 785, 249, 0, 0, 0, 0, 0, 0,
	0, 105, 0, 0, 1649, 0, 1186, 0, 0, 0,
	0, 0, 0, 0, 0, 759, 0, 1917, 0, 1169,
	1169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1072, 0, 0, 0, 766, 0, 0, 767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	789, 0, 249, 0, 726, 249, 0, 1717, 1713, 0,
	1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707, 0,
	0, 0, 0, 0, 0, 0, 249, 251, 251, 251,
	0, 0, 0, 0, 0, 0, 0, 740, 249, 0,
	249, 0, 249, 0, 249, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1186, 0, 0, 0, 0, 0,
	0, 0, 1186, 0, 0, 0, 1186, 788, 1186, 251,
	0, 0, 93, 0, 249, 1186, 783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	0, 0, 1186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 55, 0, 0, 0, 0, 57, 0,
	0, 0, 1186, 0, 1186, 0, 67, 0, 0, 0,
	0, 56, 177, 96, 0, 99, 0, 0, 0, 53,
	0, 0, 0, 149, 768, 0, 0, 0, 0, 0,
	54, 1186, 0, 0, 0, 770, 0, 0, 0, 219,
	1186, 0, 0, 0, 0, 0, 0, 60, 0, 0,
	0, 0, 142, 0, 105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 771, 146, 0, 1186, 1186,
	0, 0, 0, 0, 0, 0, 0, 1877, 0, 0,
	1169, 0, 0, 221, 0, 1186, 0, 0, 0, 0,
	0, 0, 1886, 0, 1360, 0, 1186, 0, 0, 0,
	725, 1186, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 757, 0, 780, 0, 0, 0, 0, 0, 0,
	0, 0, 772, 0, 181, 0, 0, 0, 1186, 0,
	0, 105, 220, 0, 0, 0, 0, 0, 1186, 1186,
	1186, 0, 0, 213, 0, 0, 778, 0, 0, 1186,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 773, 1182, 0, 774, 792, 0, 791, 0, 0,
	0, 775, 0, 0, 180, 0, 0, 3, 1182, 1186,
	0, 0, 0, 0, 0, 776, 0, 0, 0, 0,
	784, 0, 249, 0, 0, 0, 793, 0, 790, 0,
	1917, 0, 0, 0, 727, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1186, 0, 1186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	105, 0, 0, 1917, 249, 0, 1169, 0, 0, 0,
	0, 0, 0, 0, 1169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1186, 1186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 2098, 0, 1186,
	0, 2105, 1186, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2117, 0, 0, 0, 0, 0,
	1186, 1186, 0, 0, 0, 249, 0, 0, 0, 2128,
	0, 2128, 0, 0, 0, 0, 0, 2135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 0, 0, 0, 1917, 105, 0,
	0, 0, 0, 1501, 0, 0, 0, 0, 0, 105,
	1360, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 105, 0, 0, 0, 0, 0, 1186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1186,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	249, 0, 0, 0, 249, 0, 249, 0, 0, 2105,
	0, 0, 2187, 249, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2207, 0, 0, 0, 0, 0, 0,
	0, 1186, 0, 249, 1186, 2219, 0, 2221, 1186, 2223,
	0, 2225, 0, 2226, 0, 0, 0, 0, 1186, 1186,
	0, 0, 249, 0, 249, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 1186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2248, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 249, 249, 249, 249, 0, 0,
	249, 0, 249, 0, 0, 0, 0, 251, 1261, 251,
	251, 0, 1261, 251, 251, 0, 1261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	1261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 732, 1697, 1698, 0, 1730, 1731, 1732, 1740,
	1741, 1742, 0, 0, 0, 1261, 0, 251, 251, 0,
	0, 0, 0, 0, 0, 1733, 1728, 732, 0, 0,
	0, 0, 0, 1700, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 2362, 0, 0, 0, 0, 0,
	0, 251, 0, 251, 251, 0, 0, 251, 0, 1261,
	0, 0, 0, 0, 0, 1261, 0, 0, 1699, 1261,
	251, 251, 0, 0, 0, 0, 0, 0, 1719, 0,
	0, 0, 0, 1261, 0, 0, 0, 1716, 0, 0,
	0, 0, 1697, 1698, 0, 1730, 1731, 1732, 1740, 1741,
	1742, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1733, 1728, 0, 0, 0, 0,
	0, 0, 1700, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 1261, 0, 0, 0,
	0, 0, 0, 1186, 0, 1186, 0, 0, 0, 2571,
	0, 0, 0, 0, 0, 0, 0, 1699, 0, 1722,
	1723, 1724, 1725, 0, 0, 0, 251, 1719, 0, 1705,
	105, 0, 0, 0, 0, 0, 1716, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 105, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1737, 0, 0, 1747, 0, 0,
	0, 1182, 0, 1727, 1729, 0, 0, 0, 0, 0,
	0, 2117, 0, 0, 0, 0, 1182, 0, 0, 0,
	1743, 0, 1744, 0, 0, 0, 0, 0, 0, 1714,
	1715, 0, 0, 0, 0, 0, 0, 0, 1722, 1723,
	1724, 1725, 0, 0, 0, 0, 1861, 1735, 1705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1737, 0, 0, 1747, 0, 0, 0,
	0, 0, 1727, 1729, 0, 0, 0, 105, 0, 0,
	105, 0, 0, 1745, 0, 0, 249, 0, 0, 1743,
	0, 1744, 1360, 0, 0, 0, 0, 0, 1714, 1715,
	0, 1734, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1735, 0, 0, 0,
	0, 0, 249, 249, 0, 249, 0, 0, 0, 0,
	1720, 0, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2105, 249, 0, 0, 0,
	0, 0, 0, 2117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1726, 0, 0, 0, 0, 0, 0,
	0, 0, 1745, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 1721, 2821, 0, 0, 1501, 0, 0,
	1261, 1501, 0, 1501, 251, 251, 251, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 249, 0, 251, 1738,
	0, 1261, 0, 0, 0, 0, 0, 0, 0, 0,
	740, 0, 1261, 0, 0, 0, 0, 0, 249, 0,
	2873, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1261, 0, 0, 2883,
	0, 2886, 1726, 0, 0, 0, 0, 0, 1182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1721, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 249, 249, 0, 0, 0, 0, 0, 0,
	0, 2910, 1360, 2912, 1360, 0, 0, 2916, 1738, 0,
	0, 0, 0, 0, 0, 0, 1736, 0, 249, 0,
	0, 1711, 1712, 1718, 1739, 1717, 1713, 0, 1710, 1708,
	1709, 1701, 1702, 1703, 1704, 1706, 1707, 0, 0, 0,
	1501, 0, 0, 0, 0, 3444, 0, 0, 2944, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 1261, 1261, 251, 0, 0, 0,
	0, 0, 0, 0, 1261, 1736, 0, 249, 0, 0,
	1711, 1712, 1718, 1739, 1717, 1713, 0, 1710, 1708, 1709,
	1701, 1702, 1703, 1704, 1706, 1707, 1258, 0, 0, 0,
	1258, 0, 0, 0, 1378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 251, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 251, 0, 1378, 0,
	0, 0, 0, 0, 0, 817, 0, 0, 0, 0,
	0, 251, 0, 251, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 1378, 0, 800, 0, 0, 0, 0,
	801, 0, 0, 1697, 1698, 0, 0, 0, 0, 1740,
	1741, 1742, 0, 0, 0, 251, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 1728, 0, 0, 0,
	0, 0, 0, 1700, 0, 0, 0, 1378, 0, 802,
	0, 0, 1746, 1378, 0, 0, 0, 1378, 0, 1261,
	803, 1261, 0, 1261, 0, 0, 0, 0, 0, 0,
	0, 1378, 0, 0, 0, 0, 0, 0, 1699, 1261,
	1261, 804, 0, 0, 0, 0, 0, 0, 1719, 0,
	1261, 251, 1182, 1182, 251, 0, 0, 1716, 0, 0,
	0, 823, 1261, 0, 1261, 1261, 1261, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	805, 0, 0, 0, 1378, 0, 251, 251, 0, 251,
	0, 251, 0, 251, 0, 251, 1064, 0, 0, 0,
	0, 0, 0, 806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 807, 0, 0, 808, 0, 1722,
	1723, 1724, 1725, 251, 0, 0, 0, 0, 0, 1705,
	0, 0, 726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 822, 0, 0, 0,
	0, 0, 0, 0, 1737, 0, 0, 1747, 0, 0,
	0, 0, 1261, 1727, 1729, 0, 0, 0, 0, 3237,
	3239, 0, 2117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 1714,
	1715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 819, 0, 0, 1735, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 1720, 0, 0, 249, 0, 0, 0, 0, 1697,
	1698, 0, 0, 249, 0, 0, 0, 0, 249, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 1261,
	0, 0, 1728, 0, 0, 0, 0, 0, 0, 1700,
	0, 0, 0, 1182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 810, 0, 3312, 0, 0, 0, 3316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1699, 0, 0, 0, 0, 0,
	0, 829, 0, 811, 1719, 0, 0, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 249, 1261, 0,
	0, 0, 0, 0, 0, 1501, 0, 0, 0, 1360,
	1360, 0, 0, 0, 0, 0, 0, 0, 725, 0,
	0, 251, 0, 1726, 1261, 812, 0, 0, 1258, 827,
	828, 825, 0, 0, 0, 3377, 251, 820, 0, 732,
	813, 0, 0, 1721, 2946, 0, 732, 0, 0, 1378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1378, 0, 0, 0, 0, 1722, 1723, 1724, 1725, 1738,
	0, 0, 0, 0, 0, 1705, 0, 0, 0, 814,
	821, 0, 0, 251, 1258, 0, 0, 0, 3414, 815,
	1360, 0, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 816, 0, 0, 0, 0, 824, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1727,
	1729, 0, 727, 0, 3426, 0, 0, 0, 0, 1182,
	0, 1261, 0, 818, 0, 0, 0, 1182, 0, 0,
	0, 0, 0, 0, 0, 1714, 1715, 0, 251, 0,
	1861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 0, 0, 251, 1739, 1717, 1713, 1720, 1710, 1708,
	1709, 1701, 1702, 1703, 1704, 1706, 1707, 1861, 0, 1861,
	0, 0, 0, 0, 251, 1261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 1261,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 251,
	249, 0, 1378, 1378, 0, 0, 0, 0, 0, 0,
	0, 0, 1258, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	1261, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 251, 0, 0, 251,
	0, 0, 0, 251, 0, 251, 0, 0, 0, 1726,
	0, 0, 251, 251, 0, 0, 1261, 1261, 0, 1261,
	0, 0, 0, 1861, 0, 0, 0, 0, 0, 1721,
	0, 1261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 1261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 0, 251, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1378, 0, 1378,
	0, 1378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 251, 251, 251, 1378, 1378, 251,
	0, 251, 0, 0, 0, 0, 0, 0, 1378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1378, 0, 1378, 1378, 1378, 0, 0, 0, 0, 0,
	249, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 732, 0, 0, 0, 0, 0,
	0, 1717, 1713, 0, 1710, 1708, 1709, 1701, 1702, 1703,
	1704, 1706, 1707, 0, 0, 0, 0, 0, 0, 0,
	2117, 0, 1259, 0, 0, 0, 1259, 0, 0, 0,
	1379, 2117, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 3671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2117, 0, 0, 0, 3686,
	0, 0, 0, 0, 1379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1697, 1698, 0, 1730, 1731,
	1732, 1740, 1741, 1742, 0, 0, 0, 0, 0, 1379,
	1258, 0, 0, 0, 0, 1861, 1861, 0, 1728, 0,
	0, 0, 0, 0, 0, 1700, 0, 0, 0, 0,
	0, 0, 249, 249, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1379, 3735, 0, 0, 0, 0, 1379,
	1699, 0, 0, 1379, 0, 0, 0, 0, 0, 0,
	1719, 0, 0, 0, 0, 0, 0, 1379, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1861, 0, 0, 0, 0, 1258, 0, 0,
	0, 0, 0, 0, 1861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	1379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1722, 1723, 1724, 1725, 0, 1861, 0, 249, 1861,
	0, 1705, 0, 0, 0, 0, 1258, 0, 0, 0,
	0, 0, 0, 1261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1261, 0,
	0, 0, 1258, 0, 0, 0, 1737, 0, 0, 1747,
	0, 0, 0, 0, 0, 1727, 1729, 0, 0, 1261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1261, 1261, 0, 0, 0, 0, 0,
	0, 1714, 1715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 251, 0, 0, 0, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3860, 1720, 0, 0, 0, 0, 0, 0,
	0, 1261, 0, 0, 0, 2117, 0, 0, 249, 0,
	0, 251, 251, 0, 251, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 1258,
	0, 0, 0, 0, 0, 251, 1261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1261, 0, 0, 0, 0, 0, 0,
	2117, 0, 1261, 0, 0, 0, 0, 1261, 0, 3929,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1261, 0, 0, 1258, 0, 251, 1261, 0, 1261, 0,
	0, 0, 1261, 0, 0, 0, 0, 1378, 0, 251,
	0, 0, 0, 0, 0, 1726, 0, 251, 0, 0,
	1261, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1261, 0, 0, 0, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 1259, 0, 0, 0, 1378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1861, 0,
	1861, 1738, 0, 0, 0, 1379, 0, 251, 0, 0,
	0, 251, 251, 0, 0, 0, 1379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1261,
	1261, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	1259, 0, 0, 0, 1378, 1378, 0, 1378, 0, 0,
	0, 1261, 0, 0, 0, 0, 0, 4020, 0, 1378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1261, 0,
	251, 1261, 251, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 1711, 1712, 1718, 1739, 1717, 1713, 2117,
	1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707, 0,
	0, 0, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1697, 1698, 1261, 1730, 1731, 1732, 1740, 1741, 1742,
	0, 0, 0, 0, 0, 0, 0, 0, 1379, 1379,
	1261, 0, 0, 1733, 1728, 0, 0, 0, 1259, 4134,
	1360, 1700, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1699, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1719, 0, 0, 0,
	0, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4212, 0, 1722, 1723, 1724,
	1725, 0, 0, 0, 0, 0, 0, 1705, 0, 0,
	0, 0, 0, 1379, 1261, 1379, 0, 1379, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1379, 1379, 0, 0, 0, 0, 0,
	0, 0, 1737, 0, 1379, 1747, 0, 0, 0, 0,
	0, 1727, 1729, 0, 0, 0, 1379, 0, 1379, 1379,
	1379, 0, 0, 0, 0, 0, 0, 0, 1743, 0,
	1744, 0, 0, 0, 0, 0, 0, 1714, 1715, 4262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1258,
	0, 0, 0, 0, 0, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 0, 0, 0, 4296, 0, 0, 0, 0,
	0, 1258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 0, 0, 1258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1261,
	0, 1745, 251, 0, 0, 0, 0, 1258, 0, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 0, 1734,
	0, 1378, 1378, 251, 0, 0, 1259, 0, 0, 0,
	0, 0, 251, 0, 0, 4355, 0, 251, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 1261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1726, 0, 1261, 1261, 1261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1261,
	0, 1721, 0, 0, 1378, 0, 0, 0, 0, 0,
	0, 0, 0, 1259, 0, 0, 251, 0, 1261, 0,
	0, 1258, 0, 0, 0, 0, 0, 1738, 0, 0,
	1378, 0, 0, 0, 0, 1378, 0, 0, 0, 0,
	1261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1378, 0,
	0, 0, 0, 0, 1378, 0, 1378, 0, 0, 0,
	1258, 0, 0, 0, 0, 0, 0, 732, 0, 0,
	0, 0, 1259, 0, 0, 0, 0, 0, 1378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1378,
	0, 0, 0, 0, 0, 0, 0, 0, 1259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 1711,
	1712, 1718, 1739, 1717, 1713, 0, 1710, 1708, 1709, 1701,
	1702, 1703, 1704, 1706, 1707, 0, 0, 0, 0, 0,
	0, 0, 0, 3014, 0, 0, 0, 1378, 1378, 0,
	1261, 0, 1261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1378,
	0, 0, 0, 0, 0, 0, 1261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1259, 1258, 0, 0, 1258,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1261, 0, 251, 0, 251,
	0, 0, 0, 0, 1261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1261, 1261, 0, 0, 0, 0, 0, 1259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1261,
	0, 1258, 251, 1379, 0, 0, 0, 0, 0, 0,
	1261, 251, 0, 0, 0, 1261, 0, 0, 1258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1697, 1698, 0, 1730, 1731, 1732,
	1740, 1741, 1742, 0, 1379, 0, 0, 0, 0, 0,
	0, 0, 1261, 1261, 1261, 0, 1733, 1728, 0, 0,
	0, 0, 0, 1261, 1700, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1261, 0, 0, 0, 0, 0, 1699,
	1379, 1379, 0, 1379, 0, 0, 0, 0, 0, 1719,
	0, 0, 0, 0, 0, 1379, 0, 0, 1716, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1379, 0, 0, 0, 1261, 0, 1261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1261, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1722, 1723, 1724, 1725, 0, 0, 0, 0, 0, 0,
	1705, 0, 0, 0, 1261, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 1261, 1261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1737, 0, 0, 1747, 0,
	0, 0, 0, 0, 1727, 1729, 0, 0, 0, 0,
	0, 0, 0, 1261, 0, 0, 1261, 0, 0, 0,
	0, 1743, 0, 1744, 0, 0, 0, 0, 0, 0,
	1714, 1715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1735, 0,
	0, 251, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1720, 0, 0, 0, 0, 1378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1378, 0, 0, 0, 0,
	0, 0, 1734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 1378, 1378, 1378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 1261, 0, 1726, 0, 1258, 0, 0, 0,
	0, 0, 1261, 1261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1721, 0, 0, 0, 1258, 1261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1259, 0, 0, 0, 0,
	1738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1259, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1259, 0, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1379, 1379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1736, 1258, 0,
	1258, 0, 1711, 1712, 1718, 1739, 1717, 1713, 0, 1710,
	1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707, 0, 0,
	0, 0, 0, 0, 1258, 1379, 3013, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	1697, 1698, 0, 1730, 1731, 1732, 1740, 1741, 1742, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1379, 0, 1733, 1728, 0, 0, 0, 0, 0, 0,
	1700, 0, 0, 1258, 0, 0, 0, 1259, 0, 1746,
	0, 0, 1258, 0, 0, 0, 1379, 0, 0, 0,
	0, 1379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1699, 0, 0, 0, 0,
	1378, 1378, 0, 0, 1379, 1719, 0, 0, 0, 0,
	1379, 0, 1379, 0, 1716, 0, 1259, 1378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1258, 0,
	0, 0, 0, 1378, 1379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1697, 1698, 0, 1730, 1731,
	1732, 1740, 1741, 1742, 0, 0, 0, 0, 0, 0,
	1378, 1378, 1378, 0, 0, 0, 0, 1733, 1728, 0,
	0, 1258, 0, 0, 0, 1700, 1722, 1723, 1724, 1725,
	0, 0, 0, 0, 1746, 0, 1705, 0, 0, 0,
	0, 0, 0, 1379, 1379, 0, 0, 0, 0, 0,
	0, 1258, 0, 0, 0, 0, 0, 0, 0, 0,
	1699, 0, 0, 0, 0, 1379, 0, 0, 0, 0,
	1719, 1737, 0, 0, 1747, 0, 0, 0, 0, 1716,
	1727, 1729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1258, 0, 1378, 0, 0, 1743, 0, 1744,
	0, 0, 1259, 0, 0, 1259, 1714, 1715, 1258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1720, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1722, 1723, 1724, 1725, 0, 0, 0, 0, 0,
	0, 1705, 1258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1378, 1378, 0, 0, 1259, 0, 0,
	1745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1259, 0, 1737, 0, 1734, 1747,
	0, 0, 0, 0, 0, 1727, 1729, 0, 0, 0,
	0, 1258, 0, 0, 1378, 0, 0, 0, 0, 0,
	0, 0, 1743, 0, 1744, 0, 0, 0, 0, 0,
	0, 1714, 1715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1726, 0, 0, 1720, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 1738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1378, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	1378, 1378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 0, 1721, 0, 1378, 1711, 1712,
	1718, 1739, 1717, 1713, 0, 1710, 1708, 1709, 1701, 1702,
	1703, 1704, 1706, 1707, 0, 0, 0, 0, 0, 0,
	0, 1738, 3010, 1697, 1698, 0, 1730, 1731, 1732, 1740,
	1741, 1742, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1733, 1728, 0, 0, 0,
	0, 0, 0, 1700, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1699, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1719, 0,
	0, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 1379, 0, 1711, 1712, 1718, 1739, 1717, 1713, 0,
	1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707, 0,
	0, 0, 0, 0, 0, 0, 0, 3009, 1697, 1698,
	0, 1730, 1731, 1732, 1740, 1741, 1742, 1379, 1379, 1379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1733, 1728, 0, 1379, 0, 0, 0, 0, 1700, 1722,
	1723, 1724, 1725, 0, 0, 0, 0, 1746, 0, 1705,
	0, 0, 1259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1699, 1259, 0, 0, 0, 0, 0,
	0, 0, 0, 1719, 1737, 0, 0, 1747, 0, 0,
	0, 0, 1716, 1727, 1729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1743, 0, 1744, 0, 0, 0, 0, 0, 0, 1714,
	1715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1722, 1723, 1724, 1725, 0, 0,
	0, 0, 0, 0, 1705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1745, 1259, 0, 1259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1737,
	0, 1734, 1747, 0, 0, 0, 0, 0, 1727, 1729,
	1259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1743, 0, 1744, 0, 0,
	0, 0, 0, 0, 1714, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1735, 0, 0, 0, 0, 0, 0, 1259,
	0, 0, 0, 1726, 0, 0, 1720, 0, 1259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1379, 1379, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1745, 1738,
	0, 0, 0, 1379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1259, 0, 1734, 0, 0, 1379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1379, 1379, 1379, 0,
	0, 0, 0, 0, 0, 0, 0, 1259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1736, 1259, 1721, 0,
	0, 1711, 1712, 1718, 1739, 1717, 1713, 0, 1710, 1708,
	1709, 1701, 1702, 1703, 1704, 1706, 1707, 0, 0, 0,
	0, 0, 0, 0, 1738, 3008, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1259, 0,
	1379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1379,
	1379, 1736, 0, 0, 0, 0, 1711, 1712, 1718, 1739,
	1717, 1713, 0, 1710, 1708, 1709, 1701, 1702, 1703, 1704,
	1706, 1707, 0, 0, 0, 0, 0, 0, 0, 0,
	2385, 0, 0, 0, 0, 0, 0, 1259, 0, 0,
	1379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1256, 0, 0, 1379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1379, 1379, 0, 0,
	259, 261, 260, 262, 263, 264, 265, 1262, 266, 267,
	1263, 1264, 1265, 1379, 1266, 592, 1267, 1268, 1269, 1270,
	268, 269, 1126, 270, 271, 272, 273, 274, 275, 593,
	594, 0, 276, 595, 277, 596, 1271, 597, 278, 279,
	280, 281, 282, 283, 1272, 1273, 0, 284, 598, 599,
	600, 1274, 285, 286, 601, 1275, 1342, 1276, 287, 288,
	289, 290, 291, 292, 293, 0, 1277, 295, 296, 297,
	294, 298, 1278, 299, 0, 300, 301, 302, 303, 304,
	305, 1279, 306, 307, 308, 1127, 309, 310, 1280, 1281,
	1283, 1282, 1284, 1285, 1286, 311, 312, 313, 314, 0,
	315, 602, 603, 1287, 319, 316, 317, 1288, 320, 318,
	1289, 321, 322, 323, 1290, 1291, 324, 325, 326, 1292,
	327, 328, 1293, 329, 330, 331, 1294, 332, 333, 604,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	605, 606, 345, 1295, 256, 1296, 0, 0, 0, 0,
	346, 347, 348, 607, 0, 0, 0, 349, 1297, 350,
	1298, 1299, 1128, 351, 352, 608, 609, 353, 354, 355,
	356, 357, 358, 359, 360, 1300, 361, 610, 1301, 611,
	362, 1302, 363, 364, 365, 366, 367, 612, 613, 614,
	443, 1130, 368, 369, 1303, 370, 371, 372, 373, 0,
	0, 0, 257, 374, 375, 376, 378, 1304, 1129, 377,
	615, 616, 1305, 617, 1306, 379, 380, 1131, 618, 1132,
	381, 382, 383, 1133, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 1307, 391, 393, 392, 1308, 394,
	619, 1134, 395, 396, 1135, 1309, 397, 0, 0, 0,
	398, 399, 1310, 1311, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 1136, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 1137, 430, 1312, 258,
	1138, 440, 441, 1313, 620, 442, 621, 444, 445, 1314,
	0, 446, 0, 1315, 1316, 448, 449, 450, 1317, 1318,
	451, 452, 622, 1139, 453, 1140, 623, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 1319, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 626,
	472, 627, 473, 474, 1320, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 628, 484, 486, 485, 487,
	1321, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 1322,
	500, 501, 502, 1141, 503, 504, 505, 506, 629, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 1323, 523, 524, 522, 525, 526, 527, 1324,
	528, 529, 512, 513, 530, 531, 1142, 532, 533, 534,
	535, 536, 537, 630, 0, 538, 1325, 539, 540, 541,
	542, 514, 543, 548, 631, 544, 545, 546, 547, 632,
	550, 1326, 551, 552, 0, 549, 1327, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 1328, 561, 633, 634,
	635, 636, 1329, 570, 1330, 562, 563, 564, 637, 565,
	638, 1331, 566, 567, 568, 569, 0, 571, 572, 1332,
	1333, 573, 574, 575, 577, 578, 576, 579, 1334, 580,
	1335, 0, 581, 582, 583, 639, 640, 641, 1336, 585,
	584, 586, 642, 1337, 1338, 1339, 1340, 587, 588, 643,
	589, 590, 591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1256, 0, 0,
	0, 0, 0, 0, 0, 2549, 0, 0, 0, 0,
	0, 0, 0, 2550, 259, 261, 260, 262, 263, 264,
	265, 1262, 266, 267, 1263, 1264, 1265, 0, 1266, 592,
	1267, 1268, 1269, 1270, 268, 269, 1126, 270, 271, 272,
	273, 274, 275, 593, 594, 0, 276, 595, 277, 596,
	1271, 597, 278, 279, 280, 281, 282, 283, 1272, 1273,
	0, 284, 598, 599, 600, 1274, 285, 286, 601, 1275,
	1342, 1276, 287, 288, 289, 290, 291, 292, 293, 0,
	1277, 295, 296, 297, 294, 298, 1278, 299, 0, 300,
	301, 302, 303, 304, 305, 1279, 306, 307, 308, 1127,
	309, 310, 1280, 1281, 1283, 1282, 1284, 1285, 1286, 311,
	312, 313, 314, 0, 315, 602, 603, 1287, 319, 316,
	317, 1288, 320, 318, 1289, 321, 322, 323, 1290, 1291,
	324, 325, 326, 1292, 327, 328, 1293, 329, 330, 331,
	1294, 332, 333, 604, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 605, 606, 345, 1295, 256, 1296,
	0, 0, 0, 0, 346, 347, 348, 607, 0, 0,
	0, 349, 1297, 350, 1298, 1299, 1128, 351, 352, 608,
	609, 353, 354, 355, 356, 357, 358, 359, 360, 1300,
	361, 610, 1301, 611, 362, 1302, 363, 364, 365, 366,
	367, 612, 613, 614, 443, 1130, 368, 369, 1303, 370,
	371, 372, 373, 0, 0, 0, 257, 374, 375, 376,
	378, 1304, 1129, 377, 615, 616, 1305, 617, 1306, 379,
	380, 1131, 618, 1132, 381, 382, 383, 1133, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 1307, 391,
	393, 392, 1308, 394, 619, 1134, 395, 396, 1135, 1309,
	397, 0, 0, 0, 398, 399, 1310, 1311, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 1136, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	1137, 430, 1312, 258, 1138, 440, 441, 1313, 620, 442,
	621, 444, 445, 1314, 0, 446, 0, 1315, 1316, 448,
	449, 450, 1317, 1318, 451, 452, 622, 1139, 453, 1140,
	623, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 1319, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 626, 472, 627, 473, 474, 1320, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 628,
	484, 486, 485, 487, 1321, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 1322, 500, 501, 502, 1141, 503, 504,
	505, 506, 629, 507, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 1323, 523, 524, 522,
	525, 526, 527, 1324, 528, 529, 512, 513, 530, 531,
	1142, 532, 533, 534, 535, 536, 537, 630, 0, 538,
	1325, 539, 540, 541, 542, 514, 543, 548, 631, 544,
	545, 546, 547, 632, 550, 1326, 551, 552, 0, 549,
	1327, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	1328, 561, 633, 634, 635, 636, 1329, 570, 1330, 562,
	563, 564, 637, 565, 638, 1331, 566, 567, 568, 569,
	0, 571, 572, 1332, 1333, 573, 574, 575, 577, 578,
	576, 579, 1334, 580, 1335, 0, 581, 582, 583, 639,
	640, 641, 1336, 585, 584, 586, 642, 1337, 1338, 1339,
	1340, 587, 588, 643, 589, 590, 591, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1256,
	0, 0, 0, 0, 3452, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3454, 259, 261, 260, 262,
	263, 264, 265, 1262, 266, 267, 1263, 1264, 1265, 0,
	1266, 592, 1267, 1268, 1269, 1270, 268, 269, 1126, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 1271, 597, 278, 279, 280, 281, 282, 283,
	1272, 1273, 0, 284, 598, 599, 600, 1274, 285, 286,
	601, 1275, 1342, 1276, 287, 288, 289, 290, 291, 292,
	293, 0, 1277, 295, 296, 297, 294, 298, 1278, 299,
	0, 300, 301, 302, 303, 304, 305, 1279, 306, 307,
	308, 1127, 309, 310, 1280, 1281, 1283, 1282, 1284, 1285,
	1286, 311, 312, 313, 314, 0, 315, 602, 603, 1287,
	319, 316, 317, 1288, 320, 318, 1289, 321, 322, 323,
	1290, 1291, 324, 325, 326, 1292, 327, 328, 1293, 329,
	330, 331, 1294, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 1295,
	256, 1296, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 1297, 350, 1298, 1299, 1128, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 1300, 361, 610, 1301, 611, 362, 1302, 363, 364,
	365, 366, 367, 612, 613, 614, 443, 1130, 368, 369,
	1303, 370, 371, 372, 373, 0, 0, 0, 257, 374,
	375, 376, 378, 1304, 1129, 377, 615, 616, 1305, 617,
	1306, 379, 380, 1131, 618, 1132, 381, 382, 383, 1133,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	1307, 391, 393, 392, 1308, 394, 619, 1134, 395, 396,
	1135, 1309, 397, 0, 0, 0, 398, 399, 1310, 1311,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 1136,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 1137, 430, 1312, 258, 1138, 440, 441, 1313,
	620, 442, 621, 444, 445, 1314, 0, 446, 0, 1315,
	1316, 448, 449, 450, 1317, 1318, 451, 452, 622, 1139,
	453, 1140, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 1319, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	1320, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 1321, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 1322, 500, 501, 502, 1141,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 1323, 523,
	524, 522, 525, 526, 527, 1324, 528, 529, 512, 513,
	530, 531, 1142, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 1325, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 1326, 551, 552,
	0, 549, 1327, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 1328, 561, 633, 634, 635, 636, 1329, 570,
	1330, 562, 563, 564, 637, 565, 638, 1331, 566, 567,
	568, 569, 0, 571, 572, 1332, 1333, 573, 574, 575,
	577, 578, 576, 579, 1334, 580, 1335, 0, 581, 582,
	583, 639, 640, 641, 1336, 585, 584, 586, 642, 1337,
	1338, 1339, 1340, 587, 588, 643, 589, 590, 591, 0,
	0, 0, 0, 0, 0, 1256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3806, 259, 261, 260, 262, 263, 264, 265, 1262,
	266, 267, 1263, 1264, 1265, 0, 1266, 592, 1267, 1268,
	1269, 1270, 268, 269, 1126, 270, 271, 272, 273, 274,
	275, 593, 594, 0, 276, 595, 277, 596, 1271, 597,
	278, 279, 280, 281, 282, 283, 1272, 1273, 0, 284,
	598, 599, 600, 1274, 285, 286, 601, 1275, 1342, 1276,
	287, 288, 289, 290, 291, 292, 293, 0, 1277, 295,
	296, 297, 294, 298, 1278, 299, 0, 300, 301, 302,
	303, 304, 305, 1279, 306, 307, 308, 1127, 309, 310,
	1280, 1281, 1283, 1282, 1284, 1285, 1286, 311, 312, 313,
	314, 0, 315, 602, 603, 1287, 319, 316, 317, 1288,
	320, 318, 1289, 321, 322, 323, 1290, 1291, 324, 325,
	326, 1292, 327, 328, 1293, 329, 330, 331, 1294, 332,
	333, 604, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 605, 606, 345, 1295, 256, 1296, 0, 0,
	0, 0, 346, 347, 348, 607, 0, 0, 0, 349,
	1297, 350, 1298, 1299, 1128, 351, 352, 608, 609, 353,
	354, 355, 356, 357, 358, 359, 360, 1300, 361, 610,
	1301, 611, 362, 1302, 363, 364, 365, 366, 367, 612,
	613, 614, 443, 1130, 368, 369, 1303, 370, 371, 372,
	373, 0, 0, 0, 257, 374, 375, 376, 378, 1304,
	1129, 377, 615, 616, 1305, 617, 1306, 379, 380, 1131,
	618, 1132, 381, 382, 383, 1133, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 1307, 391, 393, 392,
	1308, 394, 619, 1134, 395, 396, 1135, 1309, 397, 0,
	0, 0, 398, 399, 1310, 1311, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 1136, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 1137, 430,
	1312, 258, 1138, 440, 441, 1313, 620, 442, 621, 444,
	445, 1314, 0, 446, 0, 1315, 1316, 448, 449, 450,
	1317, 1318, 451, 452, 622, 1139, 453, 1140, 623, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	1319, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 626, 472, 627, 473, 474, 1320, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 628, 484, 486,
	485, 487, 1321, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 1322, 500, 501, 502, 1141, 503, 504, 505, 506,
	629, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 1323, 523, 524, 522, 525, 526,
	527, 1324, 528, 529, 512, 513, 530, 531, 1142, 532,
	533, 534, 535, 536, 537, 630, 0, 538, 1325, 539,
	540, 541, 542, 514, 543, 548, 631, 544, 545, 546,
	547, 632, 550, 1326, 551, 552, 0, 549, 1327, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 1328, 561,
	633, 634, 635, 636, 1329, 570, 1330, 562, 563, 564,
	637, 565, 638, 1331, 566, 567, 568, 569, 0, 571,
	572, 1332, 1333, 573, 574, 575, 577, 578, 576, 579,
	1334, 580, 1335, 0, 581, 582, 583, 639, 640, 641,
	1336, 585, 584, 586, 642, 1337, 1338, 1339, 1340, 587,
	588, 643, 589, 590, 591, 0, 1256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3979, 259, 261, 260, 262, 263, 264, 265,
	1262, 266, 267, 1263, 1264, 1265, 0, 1266, 592, 1267,
	1268, 1269, 1270, 268, 269, 1126, 270, 271, 272, 273,
	274, 275, 593, 594, 0, 276, 595, 277, 596, 1271,
	597, 278, 279, 280, 281, 282, 283, 1272, 1273, 0,
	284, 598, 599, 600, 1274, 285, 286, 601, 1275, 1342,
	1276, 287, 288, 289, 290, 291, 292, 293, 0, 1277,
	295, 296, 297, 294, 298, 1278, 299, 0, 300, 301,
	302, 303, 304, 305, 1279, 306, 307, 308, 1127, 309,
	310, 1280, 1281, 1283, 1282, 1284, 1285, 1286, 311, 312,
	313, 314, 0, 315, 602, 603, 1287, 319, 316, 317,
	1288, 320, 318, 1289, 321, 322, 323, 1290, 1291, 324,
	325, 326, 1292, 327, 328, 1293, 329, 330, 331, 1294,
	332, 333, 604, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 605, 606, 345, 1295, 256, 1296, 0,
	0, 0, 0, 346, 347, 348, 607, 0, 0, 0,
	349, 1297, 350, 1298, 1299, 1128, 351, 352, 608, 609,
	353, 354, 355, 356, 357, 358, 359, 360, 1300, 361,
	610, 1301, 611, 362, 1302, 363, 364, 365, 366, 367,
	612, 613, 614, 443, 1130, 368, 369, 1303, 370, 371,
	372, 373, 0, 0, 0, 257, 374, 375, 376, 378,
	1304, 1129, 377, 615, 616, 1305, 617, 1306, 379, 380,
	1131, 618, 1132, 381, 382, 383, 1133, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 1307, 391, 393,
	392, 1308, 394, 619, 1134, 395, 396, 1135, 1309, 397,
	0, 0, 0, 398, 399, 1310, 1311, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 1136, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 1137,
	430, 1312, 258, 1138, 440, 441, 1313, 620, 442, 621,
	444, 445, 1314, 0, 446, 0, 1315, 1316, 448, 449,
	450, 1317, 1318, 451, 452, 622, 1139, 453, 1140, 623,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 1319, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 626, 472, 627, 473, 474, 1320, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 628, 484,
	486, 485, 487, 1321, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 1322, 500, 501, 502, 1141, 503, 504, 505,
	506, 629, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 1323, 523, 524, 522, 525,
	526, 527, 1324, 528, 529, 512, 513, 530, 531, 1142,
	532, 533, 534, 535, 536, 537, 630, 0, 538, 1325,
	539, 540, 541, 542, 514, 543, 548, 631, 544, 545,
	546, 547, 632, 550, 1326, 551, 552, 0, 549, 1327,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 1328,
	561, 633, 634, 635, 636, 1329, 570, 1330, 562, 563,
	564, 637, 565, 638, 1331, 566, 567, 568, 569, 0,
	571, 572, 1332, 1333, 573, 574, 575, 577, 578, 576,
	579, 1334, 580, 1335, 0, 581, 582, 583, 639, 640,
	641, 1336, 585, 584, 586, 642, 1337, 1338, 1339, 1340,
	587, 588, 643, 589, 590, 591, 0, 1256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3868, 259, 261, 260, 262, 263, 264,
	265, 1262, 266, 267, 1263, 1264, 1265, 0, 1266, 592,
	1267, 1268, 1269, 1270, 268, 269, 1126, 270, 271, 272,
	273, 274, 275, 593, 594, 0, 276, 595, 277, 596,
	1271, 597, 278, 279, 280, 281, 282, 283, 1272, 1273,
	0, 284, 598, 599, 600, 1274, 285, 286, 601, 1275,
	1342, 1276, 287, 288, 289, 290, 291, 292, 293, 0,
	1277, 295, 296, 297, 294, 298, 1278, 299, 0, 300,
	301, 302, 303, 304, 305, 1279, 306, 307, 308, 1127,
	309, 310, 1280, 1281, 1283, 1282, 1284, 1285, 1286, 311,
	312, 313, 314, 0, 315, 602, 603, 1287, 319, 316,
	317, 1288, 320, 318, 1289, 321, 322, 323, 1290, 1291,
	324, 325, 326, 1292, 327, 328, 1293, 329, 330, 331,
	1294, 332, 333, 604, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 605, 606, 345, 1295, 256, 1296,
	0, 0, 0, 0, 346, 347, 348, 607, 0, 0,
	0, 349, 1297, 350, 1298, 1299, 1128, 351, 352, 608,
	609, 353, 354, 355, 356, 357, 358, 359, 360, 1300,
	361, 610, 1301, 611, 362, 1302, 363, 364, 365, 366,
	367, 612, 613, 614, 443, 1130, 368, 369, 1303, 370,
	371, 372, 373, 0, 0, 0, 257, 374, 375, 376,
	378, 1304, 1129, 377, 615, 616, 1305, 617, 1306, 379,
	380, 1131, 618, 1132, 381, 382, 383, 1133, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 1307, 391,
	393, 392, 1308, 394, 619, 1134, 395, 396, 1135, 1309,
	397, 0, 0, 0, 398, 399, 1310, 1311, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 1136, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	1137, 430, 1312, 258, 1138, 440, 441, 1313, 620, 442,
	621, 444, 445, 1314, 0, 446, 0, 1315, 1316, 448,
	449, 450, 1317, 1318, 451, 452, 622, 1139, 453, 1140,
	623, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 1319, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 626, 472, 627, 473, 474, 1320, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 628,
	484, 486, 485, 487, 1321, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 1322, 500, 501, 502, 1141, 503, 504,
	505, 506, 629, 507, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 1323, 523, 524, 522,
	525, 526, 527, 1324, 528, 529, 512, 513, 530, 531,
	1142, 532, 533, 534, 535, 536, 537, 630, 0, 538,
	1325, 539, 540, 541, 542, 514, 543, 548, 631, 544,
	545, 546, 547, 632, 550, 1326, 551, 552, 0, 549,
	1327, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	1328, 561, 633, 634, 635, 636, 1329, 570, 1330, 562,
	563, 564, 637, 565, 638, 1331, 566, 567, 568, 569,
	0, 571, 572, 1332, 1333, 573, 574, 575, 577, 578,
	576, 579, 1334, 580, 1335, 0, 581, 582, 583, 639,
	640, 641, 1336, 585, 584, 586, 642, 1337, 1338, 1339,
	1340, 587, 588, 643, 589, 590, 591, 0, 1256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3736, 259, 261, 260, 262, 263,
	264, 265, 1262, 266, 267, 1263, 1264, 1265, 0, 1266,
	592, 1267, 1268, 1269, 1270, 268, 269, 1126, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 1271, 597, 278, 279, 280, 281, 282, 283, 1272,
	1273, 0, 284, 598, 599, 600, 1274, 285, 286, 601,
	1275, 1342, 1276, 287, 288, 289, 290, 291, 292, 293,
	0, 1277, 295, 296, 297, 294, 298, 1278, 299, 0,
	300, 301, 302, 303, 304, 305, 1279, 306, 307, 308,
	1127, 309, 310, 1280, 1281, 1283, 1282, 1284, 1285, 1286,
	311, 312, 313, 314, 0, 315, 602, 603, 1287, 319,
	316, 317, 1288, 320, 318, 1289, 321, 322, 323, 1290,
	1291, 324, 325, 326, 1292, 327, 328, 1293, 329, 330,
	331, 1294, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 1295, 256,
	1296, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 1297, 350, 1298, 1299, 1128, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	1300, 361, 610, 1301, 611, 362, 1302, 363, 364, 365,
	366, 367, 612, 613, 614, 443, 1130, 368, 369, 1303,
	370, 371, 372, 373, 0, 0, 0, 257, 374, 375,
	376, 378, 1304, 1129, 377, 615, 616, 1305, 617, 1306,
	379, 380, 1131, 618, 1132, 381, 382, 383, 1133, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 1307,
	391, 393, 392, 1308, 394, 619, 1134, 395, 396, 1135,
	1309, 397, 0, 0, 0, 398, 399, 1310, 1311, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 1136, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 1137, 430, 1312, 258, 1138, 440, 441, 1313, 620,
	442, 621, 444, 445, 1314, 0, 446, 0, 1315, 1316,
	448, 449, 450, 1317, 1318, 451, 452, 622, 1139, 453,
	1140, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 1319, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 1320,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 1321, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 1322, 500, 501, 502, 1141, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 1323, 523, 524,
	522, 525, 526, 527, 1324, 528, 529, 512, 513, 530,
	531, 1142, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 1325, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 1326, 551, 552, 0,
	549, 1327, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 1328, 561, 633, 634, 635, 636, 1329, 570, 1330,
	562, 563, 564, 637, 565, 638, 1331, 566, 567, 568,
	569, 0, 571, 572, 1332, 1333, 573, 574, 575, 577,
	578, 576, 579, 1334, 580, 1335, 0, 581, 582, 583,
	639, 640, 641, 1336, 585, 584, 586, 642, 1337, 1338,
	1339, 1340, 587, 588, 643, 589, 590, 591, 0, 1256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3470, 259, 261, 260, 262,
	263, 264, 265, 1262, 266, 267, 1263, 1264, 1265, 0,
	1266, 592, 1267, 1268, 1269, 1270, 268, 269, 1126, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 1271, 597, 278, 279, 280, 281, 282, 283,
	1272, 1273, 0, 284, 598, 599, 600, 1274, 285, 286,
	601, 1275, 1342, 1276, 287, 288, 289, 290, 291, 292,
	293, 0, 1277, 295, 296, 297, 294, 298, 1278, 299,
	0, 300, 301, 302, 303, 304, 305, 1279, 306, 307,
	308, 1127, 309, 310, 1280, 1281, 1283, 1282, 1284, 1285,
	1286, 311, 312, 313, 314, 0, 315, 602, 603, 1287,
	319, 316, 317, 1288, 320, 318, 1289, 321, 322, 323,
	1290, 1291, 324, 325, 326, 1292, 327, 328, 1293, 329,
	330, 331, 1294, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 1295,
	256, 1296, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 1297, 350, 1298, 1299, 1128, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 1300, 361, 610, 1301, 611, 362, 1302, 363, 364,
	365, 366, 367, 612, 613, 614, 443, 1130, 368, 369,
	1303, 370, 371, 372, 373, 0, 0, 0, 257, 374,
	375, 376, 378, 1304, 1129, 377, 615, 616, 1305, 617,
	1306, 379, 380, 1131, 618, 1132, 381, 382, 383, 1133,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	1307, 391, 393, 392, 1308, 394, 619, 1134, 395, 396,
	1135, 1309, 397, 0, 0, 0, 398, 399, 1310, 1311,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 1136,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 1137, 430, 1312, 258, 1138, 440, 441, 1313,
	620, 442, 621, 444, 445, 1314, 0, 446, 0, 1315,
	1316, 448, 449, 450, 1317, 1318, 451, 452, 622, 1139,
	453, 1140, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 1319, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	1320, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 1321, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 1322, 500, 501, 502, 1141,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 1323, 523,
	524, 522, 525, 526, 527, 1324, 528, 529, 512, 513,
	530, 531, 1142, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 1325, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 1326, 551, 552,
	0, 549, 1327, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 1328, 561, 633, 634, 635, 636, 1329, 570,
	1330, 562, 563, 564, 637, 565, 638, 1331, 566, 567,
	568, 569, 0, 571, 572, 1332, 1333, 573, 574, 575,
	577, 578, 576, 579, 1334, 580, 1335, 0, 581, 582,
	583, 639, 640, 641, 1336, 585, 584, 586, 642, 1337,
	1338, 1339, 1340, 587, 588, 643, 589, 590, 591, 0,
	1256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3297, 259, 261, 260,
	262, 263, 264, 265, 1262, 266, 267, 1263, 1264, 1265,
	0, 1266, 592, 1267, 1268, 1269, 1270, 268, 269, 1126,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 1271, 597, 278, 279, 280, 281, 282,
	283, 1272, 1273, 0, 284, 598, 599, 600, 1274, 285,
	286, 601, 1275, 1342, 1276, 287, 288, 289, 290, 291,
	292, 293, 0, 1277, 295, 296, 297, 294, 298, 1278,
	299, 0, 300, 301, 302, 303, 304, 305, 1279, 306,
	307, 308, 1127, 309, 310, 1280, 1281, 1283, 1282, 1284,
	1285, 1286, 311, 312, 313, 314, 0, 315, 602, 603,
	1287, 319, 316, 317, 1288, 320, 318, 1289, 321, 322,
	323, 1290, 1291, 324, 325, 326, 1292, 327, 328, 1293,
	329, 330, 331, 1294, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	1295, 256, 1296, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 1297, 350, 1298, 1299, 1128,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 1300, 361, 610, 1301, 611, 362, 1302, 363,
	364, 365, 366, 367, 612, 613, 614, 443, 1130, 368,
	369, 1303, 370, 371, 372, 373, 0, 0, 0, 257,
	374, 375, 376, 378, 1304, 1129, 377, 615, 616, 1305,
	617, 1306, 379, 380, 1131, 618, 1132, 381, 382, 383,
	1133, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 1307, 391, 393, 392, 1308, 394, 619, 1134, 395,
	396, 1135, 1309, 397, 0, 0, 0, 398, 399, 1310,
	1311, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	1136, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 1137, 430, 1312, 258, 1138, 440, 441,
	1313, 620, 442, 621, 444, 445, 1314, 0, 446, 0,
	1315, 1316, 448, 449, 450, 1317, 1318, 451, 452, 622,
	1139, 453, 1140, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 1319, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 1320, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 1321, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 1322, 500, 501, 502,
	1141, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 1323,
	523, 524, 522, 525, 526, 527, 1324, 528, 529, 512,
	513, 530, 531, 1142, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 1325, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 1326, 551,
	552, 0, 549, 1327, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 1328, 561, 633, 634, 635, 636, 1329,
	570, 1330, 562, 563, 564, 637, 565, 638, 1331, 566,
	567, 568, 569, 0, 571, 572, 1332, 1333, 573, 574,
	575, 577, 578, 576, 579, 1334, 580, 1335, 0, 581,
	582, 583, 639, 640, 641, 1336, 585, 584, 586, 642,
	1337, 1338, 1339, 1340, 587, 588, 643, 589, 590, 591,
	0, 1256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2408, 259, 261,
	260, 262, 263, 264, 265, 1262, 266, 267, 1263, 1264,
	1265, 0, 1266, 592, 1267, 1268, 1269, 1270, 268, 269,
	1126, 270, 271, 272, 273, 274, 275, 593, 594, 0,
	276, 595, 277, 596, 1271, 597, 278, 279, 280, 281,
	282, 283, 1272, 1273, 0, 284, 598, 599, 600, 1274,
	285, 286, 601, 1275, 1342, 1276, 287, 288, 289, 290,
	291, 292, 293, 0, 1277, 295, 296, 297, 294, 298,
	1278, 299, 0, 300, 301, 302, 303, 304, 305, 1279,
	306, 307, 308, 1127, 309, 310, 1280, 1281, 1283, 1282,
	1284, 1285, 1286, 311, 312, 313, 314, 0, 315, 602,
	603, 1287, 319, 316, 317, 1288, 320, 318, 1289, 321,
	322, 323, 1290, 1291, 324, 325, 326, 1292, 327, 328,
	1293, 329, 330, 331, 1294, 332, 333, 604, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 605, 606,
	345, 1295, 256, 1296, 0, 0, 0, 0, 346, 347,
	348, 607, 0, 0, 0, 349, 1297, 350, 1298, 1299,
	1128, 351, 352, 608, 609, 353, 354, 355, 356, 357,
	358, 359, 360, 1300, 361, 610, 1301, 611, 362, 1302,
	363, 364, 365, 366, 367, 612, 613, 614, 443, 1130,
	368, 369, 1303, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 1304, 1129, 377, 615, 616,
	1305, 617, 1306, 379, 380, 1131, 618, 1132, 381, 382,
	383, 1133, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 1307, 391, 393, 392, 1308, 394, 619, 1134,
	395, 396, 1135, 1309, 397, 0, 0, 0, 398, 399,
	1310, 1311, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 1136, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 1137, 430, 1312, 258, 1138, 440,
	441, 1313, 620, 442, 621, 444, 445, 1314, 0, 446,
	0, 1315, 1316, 448, 449, 450, 1317, 1318, 451, 452,
	622, 1139, 453, 1140, 623, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 1319, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 626, 472, 627,
	473, 474, 1320, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 628, 484, 486, 485, 487, 1321, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 1322, 500, 501,
	502, 1141, 503, 504, 505, 506, 629, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	1323, 523, 524, 522, 525, 526, 527, 1324, 528, 529,
	512, 513, 530, 531, 1142, 532, 533, 534, 535, 536,
	537, 630, 0, 538, 1325, 539, 540, 541, 542, 514,
	543, 548, 631, 544, 545, 546, 547, 632, 550, 1326,
	551, 552, 0, 549, 1327, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 1328, 561, 633, 634, 635, 636,
	1329, 570, 1330, 562, 563, 564, 637, 565, 638, 1331,
	566, 567, 568, 569, 0, 571, 572, 1332, 1333, 573,
	574, 575, 577, 578, 576, 579, 1334, 580, 1335, 0,
	581, 582, 583, 639, 640, 641, 1336, 585, 584, 586,
	642, 1337, 1338, 1339, 1340, 587, 588, 643, 589, 590,
	591, 1354, 0, 1256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2079, 0,
	259, 261, 260, 262, 263, 264, 265, 1262, 266, 267,
	1263, 1264, 1265, 0, 1266, 592, 1267, 1268, 1269, 1270,
	268, 269, 1126, 270, 271, 272, 273, 274, 275, 593,
	594, 0, 276, 595, 277, 596, 1271, 597, 278, 279,
	280, 281, 282, 283, 1272, 1273, 0, 284, 598, 599,
	600, 1274, 285, 286, 601, 1275, 1342, 1276, 287, 288,
	289, 290, 291, 292, 293, 0, 1277, 295, 296, 297,
	294, 298, 1278, 299, 0, 300, 301, 302, 303, 304,
	305, 1279, 306, 307, 308, 1127, 309, 310, 1280, 1281,
	1283, 1282, 1284, 1285, 1286, 311, 312, 313, 314, 0,
	315, 602, 603, 1287, 319, 316, 317, 1288, 320, 318,
	1289, 321, 322, 323, 1290, 1291, 324, 325, 326, 1292,
	327, 328, 1293, 329, 330, 331, 1294, 332, 333, 604,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	605, 606, 345, 1295, 256, 1296, 0, 0, 0, 0,
	346, 347, 348, 607, 0, 0, 0, 349, 1297, 350,
	1298, 1299, 1128, 351, 352, 608, 609, 353, 354, 355,
	356, 357, 358, 359, 360, 1300, 361, 610, 1301, 611,
	362, 1302, 363, 364, 365, 366, 367, 612, 613, 614,
	443, 1130, 368, 369, 1303, 370, 371, 372, 373, 0,
	0, 0, 257, 374, 375, 376, 378, 1304, 1129, 377,
	615, 616, 1305, 617, 1306, 379, 380, 1131, 618, 1132,
	381, 382, 383, 1133, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 1307, 391, 393, 392, 1308, 394,
	619, 1134, 395, 396, 1135, 1309, 397, 0, 0, 0,
	398, 399, 1310, 1311, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 1136, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 1137, 430, 1312, 258,
	1138, 440, 441, 1313, 620, 442, 621, 444, 445, 1314,
	0, 446, 0, 1315, 1316, 448, 449, 450, 1317, 1318,
	451, 452, 622, 1139, 453, 1140, 623, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 1319, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 626,
	472, 627, 473, 474, 1320, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 628, 484, 486, 485, 487,
	1321, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 1322,
	500, 501, 502, 1141, 503, 504, 505, 506, 629, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 1323, 523, 524, 522, 525, 526, 527, 1324,
	528, 529, 512, 513, 530, 531, 1142, 532, 533, 534,
	535, 536, 537, 630, 0, 538, 1325, 539, 540, 541,
	542, 514, 543, 548, 631, 544, 545, 546, 547, 632,
	550, 1326, 551, 552, 0, 549, 1327, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 1328, 561, 633, 634,
	635, 636, 1329, 570, 1330, 562, 563, 564, 637, 565,
	638, 1331, 566, 567, 568, 569, 0, 571, 572, 1332,
	1333, 573, 574, 575, 577, 578, 576, 579, 1334, 580,
	1335, 0, 581, 582, 583, 639, 640, 641, 1336, 585,
	584, 586, 642, 1337, 1338, 1339, 1340, 587, 588, 643,
	589, 590, 591, 1253, 0, 1256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 1262,
	266, 267, 1263, 1264, 1265, 0, 1266, 592, 1267, 1268,
	1269, 1270, 268, 269, 1126, 270, 271, 272, 273, 274,
	275, 593, 594, 0, 276, 595, 277, 596, 1271, 597,
	278, 279, 280, 281, 282, 283, 1272, 1273, 0, 284,
	598, 599, 600, 1274, 285, 286, 601, 1275, 1342, 1276,
	287, 288, 289, 290, 291, 292, 293, 0, 1277, 295,
	296, 297, 294, 298, 1278, 299, 0, 300, 301, 302,
	303, 304, 305, 1279, 306, 307, 308, 1127, 309, 310,
	1280, 1281, 1283, 1282, 1284, 1285, 1286, 311, 312, 313,
	314, 0, 315, 602, 603, 1287, 319, 316, 317, 1288,
	320, 318, 1289, 321, 322, 323, 1290, 1291, 324, 325,
	326, 1292, 327, 328, 1293, 329, 330, 331, 1294, 332,
	333, 604, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 605, 606, 345, 1295, 256, 1296, 0, 0,
	0, 0, 346, 347, 348, 607, 0, 0, 0, 349,
	1297, 350, 1298, 1299, 1128, 351, 352, 608, 609, 353,
	354, 355, 356, 357, 358, 359, 360, 1300, 361, 610,
	1301, 611, 362, 1302, 363, 364, 365, 366, 367, 612,
	613, 614, 443, 1130, 368, 369, 1303, 370, 371, 372,
	373, 0, 0, 0, 257, 374, 375, 376, 378, 1304,
	1129, 377, 615, 616, 1305, 617, 1306, 379, 380, 1131,
	618, 1132, 381, 382, 383, 1133, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 1307, 391, 393, 392,
	1308, 394, 619, 1134, 395, 396, 1135, 1309, 397, 0,
	0, 0, 398, 399, 1310, 1311, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 1136, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 1137, 430,
	1312, 258, 1138, 440, 441, 1313, 620, 442, 621, 444,
	445, 1314, 0, 446, 0, 1315, 1316, 448, 449, 450,
	1317, 1318, 451, 452, 622, 1139, 453, 1140, 623, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	1319, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 626, 472, 627, 473, 474, 1320, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 628, 484, 486,
	485, 487, 1321, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 1322, 500, 501, 502, 1141, 503, 504, 505, 506,
	629, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 1323, 523, 524, 522, 525, 526,
	527, 1324, 528, 529, 512, 513, 530, 531, 1142, 532,
	533, 534, 535, 536, 537, 630, 0, 538, 1325, 539,
	540, 541, 542, 514, 543, 548, 631, 544, 545, 546,
	547, 632, 550, 1326, 551, 552, 0, 549, 1327, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 1328, 561,
	633, 634, 635, 636, 1329, 570, 1330, 562, 563, 564,
	637, 565, 638, 1331, 566, 567, 568, 569, 0, 571,
	572, 1332, 1333, 573, 574, 575, 577, 578, 576, 579,
	1334, 580, 1335, 0, 581, 582, 583, 639, 640, 641,
	1336, 585, 584, 586, 642, 1337, 1338, 1339, 1340, 587,
	588, 643, 589, 590, 591, 1256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 1262,
	266, 267, 1263, 1264, 1265, 0, 1266, 592, 1267, 1268,
	1269, 1270, 268, 269, 1126, 270, 271, 272, 273, 274,
	275, 593, 594, 0, 276, 595, 277, 596, 1271, 597,
	278, 279, 280, 281, 282, 283, 1272, 1273, 0, 284,
	598, 599, 600, 1274, 285, 286, 601, 1275, 1342, 1276,
	287, 288, 289, 290, 291, 292, 293, 0, 1277, 295,
	296, 297, 294, 298, 1278, 299, 0, 300, 301, 302,
	303, 304, 305, 1279, 306, 307, 308, 1127, 309, 310,
	1280, 1281, 1283, 1282, 1284, 1285, 1286, 311, 312, 313,
	314, 0, 315, 602, 603, 1287, 319, 316, 317, 1288,
	320, 318, 1289, 321, 322, 323, 1290, 1291, 324, 325,
	326, 1292, 327, 328, 1293, 329, 330, 331, 1294, 332,
	333, 604, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 605, 606, 345, 1295, 256, 1296, 0, 0,
	0, 0, 346, 347, 348, 607, 0, 0, 0, 349,
	1297, 350, 1298, 1299, 1128, 351, 352, 608, 609, 353,
	354, 355, 356, 357, 358, 359, 360, 1300, 361, 610,
	1301, 611, 362, 1302, 363, 364, 365, 366, 367, 612,
	613, 614, 443, 1130, 368, 369, 1303, 370, 371, 372,
	373, 0, 0, 0, 257, 374, 375, 376, 378, 1304,
	1129, 377, 615, 616, 1305, 617, 1306, 379, 380, 1131,
	618, 1132, 381, 382, 383, 1133, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 1307, 391, 393, 392,
	1308, 394, 619, 1134, 395, 396, 1135, 1309, 397, 0,
	0, 0, 398, 399, 1310, 1311, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 1136, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 1137, 430,
	1312, 258, 1138, 440, 441, 1313, 620, 442, 621, 444,
	445, 1314, 0, 446, 0, 1315, 1316, 448, 449, 450,
	1317, 1318, 451, 452, 622, 1139, 453, 1140, 623, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	1319, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 626, 472, 627, 473, 474, 1320, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 628, 484, 486,
	485, 487, 1321, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 1322, 500, 501, 502, 1141, 503, 504, 505, 506,
	629, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 1323, 523, 524, 522, 525, 526,
	527, 1324, 528, 529, 512, 513, 530, 531, 1142, 532,
	533, 534, 535, 536, 537, 630, 0, 538, 1325, 539,
	540, 541, 542, 514, 543, 548, 631, 544, 545, 546,
	547, 632, 550, 1326, 551, 552, 0, 549, 1327, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 1328, 561,
	633, 634, 635, 636, 1329, 570, 1330, 562, 563, 564,
	637, 565, 638, 1331, 566, 567, 568, 569, 0, 571,
	572, 1332, 1333, 573, 574, 575, 577, 578, 576, 579,
	1334, 580, 1335, 0, 581, 582, 583, 639, 640, 641,
	1336, 585, 584, 586, 642, 1337, 1338, 1339, 1340, 587,
	588, 643, 589, 590, 591, 2383, 0, 1062, 1034, 1035,
	1036, 1032, 1033, 1045, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 261, 260, 262, 263, 264,
	265, 2380, 266, 267, 0, 0, 0, 0, 0, 1086,
	1050, 0, 0, 0, 268, 269, 1126, 270, 271, 272,
	273, 274, 275, 593, 1099, 0, 276, 1106, 277, 1105,
	0, 1116, 278, 279, 280, 281, 282, 283, 1052, 1085,
	1019, 284, 1146, 1147, 600, 0, 285, 286, 1092, 0,
	1073, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 1127,
	309, 310, 1076, 1074, 1075, 1082, 1078, 1077, 1081, 311,
	312, 313, 314, 1109, 315, 1103, 1102, 1023, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 2381, 0,
	324, 1094, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 1029, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 1117, 1118, 345, 1041, 256, 0,
	0, 0, 0, 0, 346, 347, 348, 1101, 0, 0,
	0, 349, 0, 350, 0, 0, 1128, 351, 352, 1114,
	1115, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 1124, 0, 1051, 362, 0, 363, 364, 365, 366,
	367, 1087, 1088, 1091, 443, 1130, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 257, 374, 375, 376,
	378, 0, 1129, 377, 1096, 1097, 0, 1057, 0, 379,
	380, 1131, 1089, 1132, 381, 382, 383, 1133, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 0, 391,
	393, 392, 0, 394, 1125, 1134, 395, 396, 1135, 0,
	397, 0, 0, 0, 398, 399, 1080, 1079, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 1136, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	1137, 430, 1020, 258, 1138, 440, 441, 1042, 1090, 442,
	1104, 444, 445, 0, 0, 446, 0, 0, 0, 448,
	449, 450, 0, 0, 451, 452, 622, 1139, 453, 1140,
	1119, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 1120, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 1100,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 1141, 503, 504,
	505, 506, 1030, 507, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 0, 523, 524, 522,
	525, 526, 527, 1083, 528, 529, 512, 513, 530, 531,
	1142, 532, 533, 534, 535, 536, 537, 1098, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 1145, 544,
	545, 546, 547, 1121, 550, 0, 551, 552, 1018, 549,
	0, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	0, 561, 1110, 1111, 1112, 1113, 0, 570, 0, 562,
	563, 564, 1122, 565, 1123, 1040, 566, 567, 568, 569,
	0, 571, 572, 0, 1024, 573, 574, 575, 577, 578,
	576, 579, 1084, 580, 0, 0, 581, 582, 583, 639,
	1107, 1144, 2379, 585, 584, 586, 642, 0, 0, 0,
	0, 587, 588, 643, 589, 590, 591, 1021, 0, 0,
	0, 0, 0, 0, 0, 1017, 0, 0, 0, 0,
	0, 0, 1015, 1016, 2382, 0, 0, 0, 0, 0,
	0, 1046, 2378, 0, 1008, 1044, 1062, 1034, 1035, 1036,
	1032, 1033, 1045, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 1086, 1050,
	0, 0, 0, 268, 269, 1126, 270, 271, 272, 273,
	274, 275, 593, 1099, 0, 276, 1106, 277, 1105, 0,
	1116, 278, 279, 280, 281, 282, 283, 1052, 1085, 1019,
	284, 1146, 1147, 600, 0, 285, 286, 1092, 0, 1073,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 1127, 309,
	310, 1076, 1074, 1075, 1082, 1078, 1077, 1081, 311, 312,
	313, 314, 1109, 315, 1103, 1102, 1023, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	1094, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 1029, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 1117, 1118, 345, 1041, 256, 0, 0,
	0, 0, 0, 346, 347, 348, 1101, 0, 0, 0,
	349, 0, 350, 0, 0, 1128, 351, 352, 1114, 1115,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	1124, 0, 1051, 362, 0, 363, 364, 365, 366, 367,
	1087, 1088, 1091, 443, 1130, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 257, 374, 375, 376, 378,
	0, 1129, 377, 1096, 1097, 0, 1057, 0, 379, 380,
	1131, 1089, 1132, 381, 382, 383, 1133, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 1125, 1134, 395, 396, 1135, 0, 397,
	0, 0, 0, 398, 399, 1080, 1079, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 1136, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 1137,
	430, 1020, 258, 1138, 440, 441, 1042, 1090, 442, 1104,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 1139, 453, 1140, 1119,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 1120, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 1100, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 1141, 503, 504, 505,
	506, 1030, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 219, 523, 524, 522, 525,
	526, 527, 1083, 528, 529, 512, 513, 530, 531, 1142,
	532, 533, 534, 535, 536, 537, 1098, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 1145, 544, 545,
	546, 547, 1121, 550, 0, 551, 552, 1018, 549, 221,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 1110, 1111, 1112, 1113, 0, 570, 0, 562, 563,
	564, 1122, 565, 1123, 1040, 566, 567, 568, 569, 0,
	571, 572, 0, 1024, 573, 574, 575, 577, 578, 576,
	579, 1084, 580, 0, 0, 581, 582, 583, 1534, 1107,
	1144, 0, 585, 584, 586, 642, 0, 0, 0, 213,
	587, 588, 643, 589, 590, 591, 1021, 0, 214, 0,
	0, 0, 0, 0, 1017, 0, 0, 0, 0, 0,
	0, 1015, 1016, 1062, 1034, 1035, 1036, 1032, 1033, 1045,
	1772, 1770, 0, 0, 1044, 0, 0, 0, 0, 0,
	259, 261, 260, 262, 263, 264, 265, 0, 266, 267,
	0, 0, 0, 0, 0, 1086, 1050, 0, 0, 0,
	268, 269, 1126, 270, 271, 272, 273, 274, 275, 593,
	1099, 0, 276, 1106, 277, 1105, 0, 1116, 278, 279,
	280, 281, 282, 283, 1052, 1085, 1019, 284, 1146, 1147,
	600, 0, 285, 286, 1092, 0, 1073, 0, 287, 288,
	289, 290, 291, 292, 293, 0, 0, 295, 296, 297,
	294, 298, 0, 299, 0, 300, 301, 302, 303, 304,
	305, 0, 306, 307, 308, 1127, 309, 310, 1076, 1074,
	1075, 1082, 1078, 1077, 1081, 311, 312, 313, 314, 1109,
	315, 1103, 1102, 1023, 319, 316, 317, 0, 320, 318,
	0, 321, 322, 323, 0, 0, 324, 1094, 326, 0,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 1029,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	1117, 1118, 345, 1041, 256, 0, 0, 0, 0, 0,
	346, 347, 348, 1101, 0, 0, 0, 349, 0, 350,
	0, 0, 1128, 351, 352, 1114, 1115, 353, 354, 355,
	356, 357, 358, 359, 360, 0, 361, 1124, 0, 1051,
	362, 0, 363, 364, 365, 366, 367, 1087, 1088, 1091,
	443, 1130, 368, 369, 0, 370, 371, 372, 373, 0,
	0, 0, 257, 374, 375, 376, 378, 0, 1129, 377,
	1096, 1097, 0, 1057, 0, 379, 380, 1131, 1089, 1132,
	381, 382, 383, 1133, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 0, 391, 393, 392, 0, 394,
	1125, 1134, 395, 396, 1135, 0, 397, 0, 0, 0,
	398, 399, 1080, 1079, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 1136, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 1137, 430, 1020, 258,
	1138, 440, 441, 1042, 1090, 442, 1104, 444, 445, 0,
	0, 446, 0, 0, 0, 448, 449, 450, 0, 0,
	451, 452, 622, 1139, 453, 1140, 1119, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 0, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 1120,
	472, 627, 473, 474, 0, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 1100, 484, 486, 485, 487,
	0, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 0,
	500, 501, 502, 1141, 503, 504, 505, 506, 1030, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 219, 523, 524, 522, 525, 526, 527, 1083,
	528, 529, 512, 513, 530, 531, 1142, 532, 533, 534,
	535, 536, 537, 1098, 0, 538, 0, 539, 540, 541,
	542, 514, 543, 548, 1145, 544, 545, 546, 547, 1121,
	550, 0, 551, 552, 1018, 549, 221, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 0, 561, 1110, 1111,
	1112, 1113, 0, 570, 0, 562, 563, 564, 1122, 565,
	1123, 1040, 566, 567, 568, 569, 0, 571, 572, 0,
	1024, 573, 574, 575, 577, 578, 576, 579, 1084, 580,
	0, 0, 581, 582, 583, 1534, 1107, 1144, 0, 585,
	584, 586, 642, 0, 0, 0, 213, 587, 588, 643,
	589, 590, 591, 1021, 0, 214, 0, 0, 0, 0,
	0, 1017, 0, 0, 0, 0, 0, 0, 1015, 1016,
	1062, 1034, 1035, 1036, 1032, 1033, 1045, 1772, 2966, 0,
	0, 1044, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 1086, 1050, 0, 0, 0, 268, 269, 1126,
	270, 271, 272, 273, 274, 275, 593, 1099, 0, 276,
	1106, 277, 1105, 0, 1116, 278, 279, 280, 281, 282,
	283, 1052, 1085, 1019, 284, 1146, 1147, 600, 0, 285,
	286, 1092, 0, 1073, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 1127, 309, 310, 1076, 1074, 1075, 1082, 1078,
	1077, 1081, 311, 312, 313, 314, 1109, 315, 1103, 1102,
	1023, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 1094, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 1029, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 1117, 1118, 345,
	1041, 256, 0, 0, 0, 0, 0, 346, 347, 348,
	1101, 0, 0, 0, 349, 0, 350, 0, 0, 1128,
	351, 352, 1114, 1115, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 1124, 0, 1051, 362, 0, 363,
	364, 365, 366, 367, 1087, 1088, 1091, 443, 1130, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 257,
	374, 375, 376, 378, 0, 1129, 377, 1096, 1097, 0,
	1057, 0, 379, 380, 1131, 1089, 1132, 381, 382, 383,
	1133, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 1125, 1134, 395,
	396, 1135, 0, 397, 0, 0, 0, 398, 399, 1080,
	1079, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	1136, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 1137, 430, 1020, 258, 1138, 440, 441,
	1042, 1090, 442, 1104, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	1139, 453, 1140, 1119, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 1120, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 1100, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	1141, 503, 504, 505, 506, 1030, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 219,
	523, 524, 522, 525, 526, 527, 1083, 528, 529, 512,
	513, 530, 531, 1142, 532, 533, 534, 535, 536, 537,
	1098, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 1145, 544, 545, 546, 547, 1121, 550, 0, 551,
	552, 1018, 549, 221, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 1110, 1111, 1112, 1113, 0,
	570, 0, 562, 563, 564, 1122, 565, 1123, 1040, 566,
	567, 568, 569, 0, 571, 572, 0, 1024, 573, 574,
	575, 577, 578, 576, 579, 1084, 580, 0, 0, 581,
	582, 583, 1534, 1107, 1144, 0, 585, 584, 586, 642,
	0, 0, 0, 213, 587, 588, 643, 589, 590, 591,
	1021, 0, 214, 0, 0, 0, 0, 0, 1017, 0,
	0, 0, 0, 0, 0, 1015, 1016, 1062, 1034, 1035,
	1036, 1032, 1033, 1045, 1772, 1770, 0, 0, 1044, 0,
	0, 0, 0, 0, 259, 261, 260, 262, 263, 264,
	265, 0, 266, 267, 0, 0, 0, 0, 0, 1086,
	1050, 0, 0, 0, 268, 269, 1126, 270, 271, 272,
	273, 274, 275, 593, 1099, 0, 276, 1106, 277, 1105,
	2511, 1116, 278, 279, 280, 281, 282, 283, 1052, 1085,
	1019, 284, 1146, 1147, 600, 0, 285, 286, 1092, 0,
	1073, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 1127,
	309, 310, 1076, 1074, 1075, 1082, 1078, 1077, 1081, 311,
	312, 313, 314, 1109, 315, 1103, 1102, 1023, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 0, 0,
	324, 1094, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 1029, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 1117, 1118, 345, 1041, 256, 0,
	0, 0, 0, 0, 346, 347, 348, 1101, 0, 0,
	0, 349, 0, 350, 0, 2516, 1128, 351, 352, 1114,
	1115, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 1124, 0, 1051, 362, 0, 363, 364, 365, 366,
	367, 1087, 1088, 1091, 443, 1130, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 257, 374, 375, 376,
	378, 0, 1129, 377, 1096, 1097, 0, 1057, 0, 379,
	380, 1131, 1089, 1132, 381, 382, 383, 1133, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 0, 391,
	393, 392, 2512, 394, 1125, 1134, 395, 396, 1135, 0,
	397, 0, 0, 0, 398, 399, 1080, 1079, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 1136, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	1137, 430, 1020, 258, 1138, 440, 441, 1042, 1090, 442,
	1104, 444, 445, 0, 0, 446, 0, 0, 0, 448,
	449, 450, 0, 0, 451, 452, 622, 1139, 453, 1140,
	1119, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 1120, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 1100,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 1141, 503, 504,
	505, 506, 1030, 507, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 0, 523, 524, 522,
	525, 526, 527, 1083, 528, 529, 512, 513, 530, 531,
	1142, 532, 533, 534, 535, 536, 537, 1098, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 1145, 544,
	545, 546, 547, 1121, 550, 0, 551, 552, 1018, 549,
	0, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	0, 561, 1110, 1111, 1112, 1113, 0, 570, 2513, 562,
	563, 564, 1122, 565, 1123, 1040, 566, 567, 568, 569,
	0, 571, 572, 0, 1024, 573, 574, 575, 577, 578,
	576, 579, 1084, 580, 0, 0, 581, 582, 583, 639,
	1107, 1144, 0, 585, 584, 586, 642, 0, 0, 0,
	0, 587, 588, 643, 589, 590, 591, 1021, 0, 0,
	0, 0, 0, 0, 0, 1017, 0, 0, 0, 0,
	0, 0, 1015, 1016, 0, 0, 0, 0, 0, 0,
	0, 1046, 0, 0, 2428, 1044, 1062, 1034, 1035, 1036,
	1032, 1033, 1045, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 1086, 1050,
	0, 0, 0, 268, 269, 1126, 270, 271, 272, 273,
	274, 275, 593, 1099, 0, 276, 1106, 277, 1105, 0,
	1116, 278, 279, 280, 281, 282, 283, 1052, 1085, 1019,
	284, 1146, 1147, 600, 0, 285, 286, 1092, 0, 1073,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 1127, 309,
	310, 1076, 1074, 1075, 1082, 1078, 1077, 1081, 311, 312,
	313, 314, 1109, 315, 1103, 1102, 1023, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	1094, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 1029, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 1117, 1118, 345, 1041, 256, 0, 0,
	0, 0, 0, 346, 347, 348, 1101, 0, 0, 0,
	349, 0, 350, 0, 0, 1128, 351, 352, 1114, 1115,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	1124, 0, 1051, 362, 0, 363, 364, 365, 366, 367,
	1087, 1088, 1091, 443, 1130, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 257, 374, 375, 376, 378,
	0, 1129, 377, 1096, 1097, 0, 1057, 0, 379, 380,
	1131, 1089, 1132, 381, 382, 383, 1133, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 1125, 1134, 395, 396, 1135, 0, 397,
	0, 0, 0, 398, 399, 1080, 1079, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 1136, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 1137,
	430, 1020, 258, 1138, 440, 441, 1042, 1090, 442, 1104,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 1139, 453, 1140, 1119,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 1120, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 1100, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 1141, 503, 504, 505,
	506, 1030, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 1083, 528, 529, 512, 513, 530, 531, 1142,
	532, 533, 534, 535, 536, 537, 1098, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 1145, 544, 545,
	546, 547, 1121, 550, 0, 551, 552, 1018, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 1110, 1111, 1112, 1113, 0, 570, 0, 562, 563,
	564, 1122, 565, 1123, 1040, 566, 567, 568, 569, 0,
	571, 572, 0, 1024, 573, 574, 575, 577, 578, 576,
	579, 1084, 580, 0, 0, 581, 582, 583, 639, 1107,
	1144, 0, 585, 584, 586, 642, 0, 0, 0, 0,
	587, 588, 643, 589, 590, 591, 1021, 0, 0, 0,
	0, 0, 0, 0, 1017, 0, 0, 0, 0, 0,
	0, 1015, 1016, 0, 0, 0, 0, 0, 0, 0,
	1046, 2426, 0, 2425, 1044, 1062, 1034, 1035, 1036, 1032,
	1033, 1045, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 1086, 1050, 0,
	0, 0, 268, 269, 1126, 270, 271, 272, 273, 274,
	275, 593, 1099, 0, 276, 1106, 277, 1105, 0, 1116,
	278, 279, 280, 281, 282, 283, 1052, 1085, 1019, 284,
	1146, 1147, 600, 0, 285, 286, 1092, 0, 1073, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 1127, 309, 310,
	1076, 1074, 1075, 1082, 1078, 1077, 1081, 311, 312, 313,
	314, 1109, 315, 1103, 1102, 1023, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 1094,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 1029, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 1117, 1118, 345, 1041, 256, 0, 0, 0,
	0, 0, 346, 347, 348, 1101, 0, 0, 0, 349,
	0, 350, 0, 0, 1128, 351, 352, 1114, 1115, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 1124,
	0, 1051, 362, 0, 363, 364, 365, 366, 367, 1087,
	1088, 1091, 443, 1130, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 257, 374, 375, 376, 378, 0,
	1129, 377, 1096, 1097, 0, 1057, 0, 379, 380, 1131,
	1089, 1132, 381, 382, 383, 1133, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 1125, 1134, 395, 396, 1135, 0, 397, 0,
	0, 0, 398, 399, 1080, 1079, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 1136, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 1137, 430,
	1020, 258, 1138, 440, 441, 1042, 1090, 442, 1104, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 1139, 453, 1140, 1119, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 1120, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 1100, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 1141, 503, 504, 505, 506,
	1030, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 1083, 528, 529, 512, 513, 530, 531, 1142, 532,
	533, 534, 535, 536, 537, 1098, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 1145, 544, 545, 546,
	547, 1121, 550, 0, 551, 552, 1018, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	1110, 1111, 1112, 1113, 0, 570, 0, 562, 563, 564,
	1122, 565, 1123, 1040, 566, 567, 568, 569, 0, 571,
	572, 0, 1024, 573, 574, 575, 577, 578, 576, 579,
	1084, 580, 0, 0, 581, 582, 583, 639, 1107, 1144,
	0, 585, 584, 586, 642, 0, 0, 0, 0, 587,
	588, 643, 589, 590, 591, 1021, 0, 0, 0, 0,
	0, 0, 0, 1017, 0, 0, 0, 0, 0, 0,
	1015, 1016, 0, 0, 0, 0, 0, 0, 0, 1046,
	2423, 0, 2422, 1044, 1062, 1034, 1035, 1036, 1032, 1033,
	1045, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 1086, 1050, 0, 0,
	0, 268, 269, 1126, 270, 271, 272, 273, 274, 275,
	593, 1099, 0, 276, 1106, 277, 1105, 0, 1116, 278,
	279, 280, 281, 282, 283, 1052, 1085, 1019, 284, 1146,
	1147, 600, 0, 285, 286, 1092, 0, 1073, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 1127, 309, 310, 1076,
	1074, 1075, 1082, 1078, 1077, 1081, 311, 312, 313, 314,
	1109, 315, 1103, 1102, 1023, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 1094, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	1029, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 1117, 1118, 345, 1041, 256, 0, 0, 0, 0,
	0, 346, 347, 348, 1101, 0, 0, 0, 349, 0,
	350, 0, 0, 1128, 351, 352, 1114, 1115, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 1124, 0,
	1051, 362, 0, 363, 364, 365, 366, 367, 1087, 1088,
	1091, 443, 1130, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 257, 374, 375, 376, 378, 0, 1129,
	377, 1096, 1097, 0, 1057, 0, 379, 380, 1131, 1089,
	1132, 381, 382, 383, 1133, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 1125, 1134, 395, 396, 1135, 0, 397, 0, 0,
	0, 398, 399, 1080, 1079, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 1136, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 1137, 430, 1020,
	258, 1138, 440, 441, 1042, 1090, 442, 1104, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 1139, 453, 1140, 1119, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	1120, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 1100, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 1141, 503, 504, 505, 506, 1030,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	1083, 528, 529, 512, 513, 530, 531, 1142, 532, 533,
	534, 535, 536, 537, 1098, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 1145, 544, 545, 546, 547,
	1121, 550, 0, 551, 552, 1018, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 1110,
	1111, 1112, 1113, 0, 570, 0, 562, 563, 564, 1122,
	565, 1123, 1040, 566, 567, 568, 569, 0, 571, 572,
	0, 1024, 573, 574, 575, 577, 578, 576, 579, 1084,
	580, 0, 0, 581, 582, 583, 639, 1107, 1144, 0,
	585, 584, 586, 642, 0, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 1021, 0, 0, 0, 0, 0,
	0, 0, 1017, 0, 0, 0, 0, 0, 0, 1015,
	1016, 0, 0, 0, 0, 0, 0, 0, 1046, 2420,
	0, 2419, 1044, 1062, 1034, 1035, 1036, 1032, 1033, 1045,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 261, 260, 262, 263, 264, 265, 0, 266, 267,
	0, 0, 0, 0, 0, 1086, 1050, 0, 0, 0,
	268, 269, 1126, 270, 271, 272, 273, 274, 275, 593,
	1099, 0, 276, 1106, 277, 1105, 0, 1116, 278, 279,
	280, 281, 282, 283, 1052, 1085, 1019, 284, 1146, 1147,
	600, 0, 285, 286, 1092, 0, 1073, 0, 287, 288,
	289, 290, 291, 292, 293, 0, 0, 295, 296, 297,
	294, 298, 0, 299, 0, 300, 301, 302, 303, 304,
	305, 0, 306, 307, 308, 1127, 309, 310, 1076, 1074,
	1075, 1082, 1078, 1077, 1081, 311, 312, 313, 314, 1109,
	315, 1103, 1102, 1023, 319, 316, 317, 0, 320, 318,
	0, 321, 322, 323, 0, 0, 324, 1094, 326, 0,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 1029,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	1117, 1118, 345, 1041, 256, 0, 0, 0, 0, 0,
	346, 347, 348, 1101, 0, 0, 0, 349, 0, 350,
	0, 0, 1128, 351, 352, 1114, 1115, 353, 354, 355,
	356, 357, 358, 359, 360, 0, 361, 1124, 0, 1051,
	362, 0, 363, 364, 365, 366, 367, 1087, 1088, 1091,
	443, 1130, 368, 369, 0, 370, 371, 372, 373, 0,
	0, 0, 257, 374, 375, 376, 378, 0, 1129, 377,
	1096, 1097, 0, 1057, 0, 379, 380, 1131, 1089, 1132,
	381, 382, 383, 1133, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 0, 391, 393, 392, 0, 394,
	1125, 1134, 395, 396, 1135, 0, 397, 0, 0, 0,
	398, 399, 1080, 1079, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 1136, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 1137, 430, 1020, 258,
	1138, 440, 441, 1042, 1090, 442, 1104, 444, 445, 0,
	0, 446, 0, 0, 0, 448, 449, 450, 0, 0,
	451, 452, 622, 1139, 453, 1140, 1119, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 0, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 1120,
	472, 627, 473, 474, 0, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 1100, 484, 486, 485, 487,
	0, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 0,
	500, 501, 502, 1141, 503, 504, 505, 506, 1030, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 0, 523, 524, 522, 525, 526, 527, 1083,
	528, 529, 512, 513, 530, 531, 1142, 532, 533, 534,
	535, 536, 537, 1098, 0, 538, 0, 539, 540, 541,
	542, 514, 543, 548, 1145, 544, 545, 546, 547, 1121,
	550, 0, 551, 552, 1018, 549, 0, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 0, 561, 1110, 1111,
	1112, 1113, 0, 570, 0, 562, 563, 564, 1122, 565,
	1123, 1040, 566, 567, 568, 569, 0, 571, 572, 0,
	1024, 573, 574, 575, 577, 578, 576, 579, 1084, 580,
	0, 0, 581, 582, 583, 639, 1107, 1144, 0, 585,
	584, 586, 642, 0, 0, 0, 0, 587, 588, 643,
	589, 590, 591, 1021, 0, 0, 0, 0, 0, 0,
	0, 1017, 0, 0, 0, 0, 0, 0, 1015, 1016,
	0, 0, 0, 0, 0, 0, 0, 1046, 2417, 0,
	1624, 1044, 1062, 1034, 1035, 1036, 1032, 1033, 1045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 1086, 1050, 0, 0, 0, 268,
	269, 1126, 270, 271, 272, 273, 274, 275, 593, 1099,
	0, 276, 1106, 277, 1105, 0, 1116, 278, 279, 280,
	281, 282, 283, 1052, 1085, 1019, 284, 1146, 1147, 600,
	0, 285, 286, 1092, 0, 1073, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 1127, 309, 310, 1076, 1074, 1075,
	1082, 1078, 1077, 1081, 311, 312, 313, 314, 1109, 315,
	1103, 1102, 1023, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 1094, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 1029, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 1117,
	1118, 345, 1041, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 1101, 0, 0, 0, 349, 0, 350, 0,
	0, 1128, 351, 352, 1114, 1115, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 1124, 0, 1051, 362,
	0, 363, 364, 365, 366, 367, 1087, 1088, 1091, 443,
	1130, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 257, 374, 375, 376, 378, 0, 1129, 377, 1096,
	1097, 0, 1057, 0, 379, 380, 1131, 1089, 1132, 381,
	382, 383, 1133, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 1125,
	1134, 395, 396, 1135, 0, 397, 0, 0, 0, 398,
	399, 1080, 1079, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 1136, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 1137, 430, 1020, 258, 1138,
	440, 441, 1042, 1090, 442, 1104, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 1139, 453, 1140, 1119, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 1120, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 1100, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 1141, 503, 504, 505, 506, 1030, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 1083, 528,
	529, 512, 513, 530, 531, 1142, 532, 533, 534, 535,
	536, 537, 1098, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 1145, 544, 545, 546, 547, 1121, 550,
	0, 551, 552, 1018, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 1110, 1111, 1112,
	1113, 0, 570, 0, 562, 563, 564, 1122, 565, 1123,
	1040, 566, 567, 568, 569, 0, 571, 572, 0, 1024,
	573, 574, 575, 577, 578, 576, 579, 1084, 580, 0,
	0, 581, 582, 583, 639, 1107, 1144, 0, 585, 584,
	586, 642, 1623, 0, 0, 0, 587, 588, 643, 589,
	590, 591, 1021, 0, 0, 0, 0, 0, 0, 0,
	1017, 0, 0, 0, 0, 0, 0, 1015, 1016, 0,
	0, 0, 0, 0, 0, 0, 1046, 0, 0, 1011,
	1044, 1062, 1034, 1035, 1036, 1032, 1033, 1045, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 0, 0,
	0, 0, 0, 1086, 1050, 0, 0, 0, 268, 269,
	1126, 270, 271, 272, 273, 274, 275, 593, 1099, 0,
	276, 1106, 277, 1105, 0, 1116, 278, 279, 280, 281,
	282, 283, 1052, 1085, 1019, 284, 1146, 1147, 600, 0,
	285, 286, 1092, 0, 1073, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 1127, 309, 310, 1076, 1074, 1075, 1082,
	1078, 1077, 1081, 311, 312, 313, 314, 1109, 315, 1103,
	1102, 1023, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 1094, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 1029, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 1117, 1118,
	345, 1041, 256, 0, 0, 0, 0, 0, 346, 347,
	348, 1101, 0, 0, 0, 349, 0, 350, 0, 0,
	1128, 351, 352, 1114, 1115, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 1124, 0, 1051, 362, 0,
	363, 364, 365, 366, 367, 1087, 1088, 1091, 443, 1130,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 0, 1129, 377, 1096, 1097,
	0, 1057, 0, 379, 380, 1131, 1089, 1132, 381, 382,
	383, 1133, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 1125, 1134,
	395, 396, 1135, 0, 397, 0, 0, 0, 398, 399,
	1080, 1079, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 1136, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 1137, 430, 1020, 258, 1138, 440,
	441, 1042, 1090, 442, 1104, 444, 445, 0, 0, 446,
	0, 1025, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 1139, 453, 1140, 1119, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 1120, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 1100, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 1141, 503, 504, 505, 506, 1030, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 1083, 528, 529,
	512, 513, 530, 531, 1142, 532, 533, 534, 535, 536,
	537, 1098, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 1145, 544, 545, 546, 547, 1121, 550, 0,
	551, 552, 1018, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 1110, 1111, 1112, 1113,
	0, 570, 0, 562, 563, 564, 1122, 565, 1123, 1040,
	566, 567, 568, 569, 0, 571, 572, 0, 1024, 573,
	574, 575, 577, 578, 576, 579, 1084, 580, 0, 0,
	581, 582, 583, 639, 1107, 1144, 0, 585, 584, 586,
	642, 0, 0, 0, 0, 587, 588, 643, 589, 590,
	591, 1021, 0, 0, 0, 0, 0, 0, 0, 1017,
	0, 0, 0, 0, 0, 0, 1015, 1016, 1062, 1034,
	1035, 1036, 1032, 1033, 1045, 1046, 0, 0, 0, 1044,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	1086, 1050, 0, 0, 0, 268, 269, 1126, 270, 271,
	272, 273, 274, 275, 593, 1099, 0, 276, 1106, 277,
	1105, 0, 1116, 278, 279, 280, 281, 282, 283, 1052,
	1085, 1019, 284, 1146, 1147, 600, 0, 285, 286, 1092,
	0, 1073, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 4274, 305, 0, 306, 307, 308,
	1127, 309, 310, 1076, 1074, 1075, 1082, 1078, 1077, 1081,
	311, 312, 313, 314, 1109, 315, 1103, 1102, 1023, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 1094, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 1029, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 1117, 1118, 345, 1041, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 1101, 0,
	0, 0, 349, 0, 350, 0, 0, 1128, 351, 352,
	1114, 1115, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 1124, 0, 1051, 362, 0, 363, 364, 365,
	366, 367, 1087, 1088, 1091, 443, 1130, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 257, 374, 375,
	376, 378, 0, 1129, 377, 1096, 1097, 0, 1057, 0,
	379, 380, 1131, 1089, 1132, 381, 382, 383, 1133, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 1125, 1134, 395, 396, 1135,
	0, 397, 0, 0, 0, 398, 399, 1080, 1079, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 1136, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 1137, 430, 1020, 258, 1138, 440, 441, 1042, 1090,
	442, 1104, 444, 445, 0, 0, 446, 0, 1025, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 1139, 453,
	1140, 1119, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 1120, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	1100, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 1141, 503,
	504, 505, 506, 1030, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 1083, 528, 529, 512, 513, 530,
	531, 1142, 532, 533, 534, 535, 536, 537, 1098, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 1145,
	544, 545, 546, 547, 1121, 550, 0, 551, 552, 1018,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 1110, 1111, 1112, 1113, 0, 570, 0,
	562, 563, 564, 1122, 565, 1123, 1040, 566, 567, 568,
	569, 0, 571, 572, 0, 1024, 573, 574, 575, 577,
	578, 576, 579, 1084, 580, 0, 0, 581, 582, 583,
	639, 1107, 1144, 0, 585, 584, 586, 642, 0, 0,
	0, 0, 587, 588, 643, 589, 590, 591, 1021, 0,
	0, 0, 0, 0, 0, 0, 1017, 0, 0, 0,
	0, 0, 0, 1015, 1016, 1062, 1034, 1035, 1036, 1032,
	1033, 1045, 1046, 0, 0, 0, 1044, 0, 0, 0,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 1086, 1050, 0,
	0, 0, 268, 269, 1126, 270, 271, 272, 273, 274,
	275, 593, 1099, 0, 276, 1106, 277, 1105, 0, 1116,
	278, 279, 280, 281, 282, 283, 1052, 1085, 1019, 284,
	1146, 1147, 600, 0, 285, 286, 1092, 0, 1073, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 1127, 309, 310,
	1076, 1074, 1075, 1082, 1078, 1077, 1081, 311, 312, 313,
	314, 1109, 315, 1103, 1102, 1023, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 1094,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 1029, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 1117, 1118, 345, 1041, 256, 0, 0, 0,
	0, 0, 346, 347, 348, 1101, 0, 0, 0, 349,
	0, 350, 0, 0, 1128, 351, 352, 1114, 1115, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 1124,
	0, 1051, 362, 0, 363, 364, 365, 366, 367, 1087,
	1088, 1091, 443, 1130, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 2297, 374, 375, 376, 378, 0,
	1129, 377, 1096, 1097, 0, 1057, 0, 379, 380, 1131,
	1089, 1132, 381, 382, 383, 1133, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 1125, 1134, 395, 396, 1135, 0, 397, 0,
	0, 0, 398, 399, 1080, 1079, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 1136, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 1137, 430,
	1020, 258, 1138, 440, 441, 1042, 1090, 442, 1104, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 1139, 453, 1140, 1119, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 1120, 472, 627, 473, 474, 2296, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 1100, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 1141, 503, 504, 505, 506,
	1030, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 1083, 528, 529, 512, 513, 530, 531, 1142, 532,
	533, 534, 535, 536, 537, 1098, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 1145, 544, 545, 546,
	547, 1121, 550, 0, 551, 552, 1018, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	1110, 1111, 1112, 1113, 0, 570, 0, 562, 563, 564,
	1122, 565, 1123, 1040, 566, 567, 568, 569, 0, 571,
	572, 0, 1024, 573, 574, 575, 577, 578, 576, 579,
	1084, 580, 0, 0, 581, 582, 583, 639, 1107, 1144,
	0, 585, 584, 586, 642, 0, 0, 0, 0, 587,
	588, 643, 589, 590, 591, 1021, 0, 0, 0, 0,
	0, 0, 0, 1017, 0, 0, 0, 0, 0, 0,
	1015, 1016, 1062, 1034, 1035, 1036, 1032, 1033, 1045, 1046,
	0, 0, 0, 1044, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 1086, 1050, 0, 0, 0, 268,
	269, 1126, 270, 271, 272, 273, 274, 275, 593, 1099,
	0, 276, 1106, 277, 1105, 0, 1116, 278, 279, 280,
	281, 282, 283, 1052, 1085, 1019, 284, 1146, 1147, 600,
	0, 285, 286, 1092, 0, 1073, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 1127, 309, 310, 1076, 1074, 1075,
	1082, 1078, 1077, 1081, 311, 312, 313, 314, 1109, 315,
	1103, 1102, 1023, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 1094, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 1029, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 1117,
	1118, 345, 1041, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 1101, 0, 0, 0, 349, 0, 350, 0,
	0, 1128, 351, 352, 1114, 1115, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 1124, 0, 1051, 362,
	0, 363, 364, 365, 366, 367, 1087, 1088, 1091, 443,
	1130, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 257, 374, 375, 376, 378, 0, 1129, 377, 1096,
	1097, 0, 1057, 0, 379, 380, 1131, 1089, 1132, 381,
	382, 383, 1133, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 1125,
	1134, 395, 396, 1135, 0, 397, 0, 0, 0, 398,
	399, 1080, 1079, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 1136, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 1137, 430, 1020, 258, 1138,
	440, 441, 1042, 1090, 442, 1104, 444, 445, 0, 0,
	446, 0, 1025, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 1139, 453, 1140, 1119, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 1120, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 1100, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 1141, 503, 504, 505, 506, 1030, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 1083, 528,
	529, 512, 513, 530, 531, 1142, 532, 533, 534, 535,
	536, 537, 1098, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 1145, 544, 545, 546, 547, 1121, 550,
	0, 551, 552, 1018, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 1110, 1111, 1112,
	1113, 0, 570, 0, 562, 563, 564, 1122, 565, 1123,
	1040, 566, 567, 568, 569, 0, 571, 572, 0, 1024,
	573, 574, 575, 577, 578, 576, 579, 1084, 580, 0,
	0, 581, 582, 583, 639, 1107, 1144, 0, 585, 584,
	586, 642, 0, 0, 0, 0, 587, 588, 643, 589,
	590, 591, 1021, 0, 0, 0, 0, 0, 0, 0,
	1017, 0, 0, 0, 0, 0, 0, 1015, 1016, 1062,
	1034, 1035, 1036, 1032, 1033, 1045, 1046, 0, 0, 0,
	1044, 0, 0, 0, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 1086, 1050, 0, 0, 0, 268, 269, 1126, 270,
	271, 272, 273, 274, 275, 593, 1099, 0, 276, 1106,
	277, 1105, 0, 1116, 278, 279, 280, 281, 282, 283,
	1052, 1085, 1019, 284, 1146, 1147, 600, 0, 285, 286,
	1092, 0, 1073, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 4048, 305, 0, 306, 307,
	308, 1127, 309, 310, 1076, 1074, 1075, 1082, 1078, 1077,
	1081, 311, 312, 313, 314, 1109, 315, 1103, 1102, 1023,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 1094, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 1029, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 1117, 1118, 345, 1041,
	256, 0, 0, 0, 0, 0, 346, 347, 348, 1101,
	0, 0, 0, 349, 0, 350, 0, 0, 1128, 351,
	352, 1114, 1115, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 1124, 0, 1051, 362, 0, 363, 364,
	365, 366, 367, 1087, 1088, 1091, 443, 1130, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 257, 374,
	375, 376, 378, 0, 1129, 377, 1096, 1097, 0, 1057,
	0, 379, 380, 1131, 1089, 1132, 381, 382, 383, 1133,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 1125, 1134, 395, 396,
	1135, 0, 397, 0, 0, 0, 398, 399, 1080, 1079,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 1136,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 1137, 430, 1020, 258, 1138, 440, 441, 1042,
	1090, 442, 1104, 444, 445, 0, 0, 446, 0, 1025,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 1139,
	453, 1140, 1119, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 1120, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 1100, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 1141,
	503, 504, 505, 506, 1030, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 1083, 528, 529, 512, 513,
	530, 531, 1142, 532, 533, 534, 535, 536, 537, 1098,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	1145, 544, 545, 546, 547, 1121, 550, 0, 551, 552,
	1018, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 1110, 1111, 1112, 1113, 0, 570,
	0, 562, 563, 564, 1122, 565, 1123, 1040, 566, 567,
	568, 569, 0, 571, 572, 0, 1024, 573, 574, 575,
	577, 578, 576, 579, 1084, 580, 0, 0, 581, 582,
	583, 639, 1107, 1144, 0, 585, 584, 586, 642, 0,
	0, 0, 0, 587, 588, 643, 589, 590, 591, 1021,
	0, 0, 0, 0, 0, 0, 0, 1017, 0, 0,
	0, 0, 0, 0, 1015, 1016, 1062, 1034, 1035, 1036,
	1032, 1033, 1045, 1046, 0, 0, 0, 1044, 0, 0,
	0, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 1086, 1050,
	0, 0, 0, 268, 269, 1126, 270, 271, 272, 273,
	274, 275, 593, 1099, 0, 276, 1106, 277, 1105, 0,
	1116, 278, 279, 280, 281, 282, 283, 1052, 1085, 1019,
	284, 1146, 1147, 600, 0, 285, 286, 1092, 0, 1073,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 1127, 309,
	310, 1076, 1074, 1075, 1082, 1078, 1077, 1081, 311, 312,
	313, 314, 1109, 315, 1103, 1102, 1023, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	1094, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 1029, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 1117, 1118, 345, 1041, 256, 0, 0,
	0, 0, 0, 346, 347, 348, 1101, 0, 0, 0,
	349, 0, 350, 0, 0, 1128, 351, 352, 1114, 1115,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	1124, 0, 1051, 362, 0, 363, 364, 365, 366, 367,
	1087, 1088, 1091, 443, 1130, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 257, 374, 375, 376, 378,
	0, 1129, 377, 1096, 1097, 0, 1057, 0, 379, 380,
	1131, 1089, 1132, 381, 382, 383, 1133, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 1125, 1134, 395, 396, 1135, 0, 397,
	0, 0, 0, 398, 399, 1080, 1079, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 1136, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 1137,
	430, 1020, 3698, 1138, 440, 441, 1042, 1090, 442, 1104,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 1139, 453, 1140, 1119,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 1120, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 1100, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 1141, 503, 504, 505,
	506, 1030, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 1083, 528, 529, 512, 513, 530, 531, 1142,
	532, 533, 534, 535, 536, 537, 1098, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 1145, 544, 545,
	546, 547, 1121, 550, 0, 551, 552, 1018, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 1110, 1111, 1112, 1113, 0, 570, 0, 562, 563,
	564, 1122, 565, 1123, 1040, 566, 567, 568, 569, 0,
	571, 572, 0, 1024, 573, 574, 575, 577, 578, 576,
	579, 1084, 580, 0, 0, 581, 582, 583, 639, 1107,
	1144, 0, 585, 584, 586, 642, 0, 0, 0, 0,
	587, 588, 643, 589, 590, 591, 1021, 0, 0, 0,
	0, 0, 0, 0, 1017, 0, 0, 0, 0, 0,
	0, 1015, 1016, 1840, 0, 0, 0, 0, 0, 0,
	1046, 0, 0, 0, 1044, 1062, 1034, 1035, 1036, 1032,
	1033, 1045, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 1086, 1050, 0,
	0, 0, 268, 269, 1126, 270, 271, 272, 273, 274,
	275, 593, 1099, 0, 276, 1106, 277, 1105, 0, 1116,
	278, 279, 280, 281, 282, 283, 1052, 1085, 1019, 284,
	1146, 1147, 600, 0, 285, 286, 1092, 0, 1073, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 1127, 309, 310,
	1076, 1074, 1075, 1082, 1078, 1077, 1081, 311, 312, 313,
	314, 1109, 315, 1103, 1102, 1023, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 1094,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 1029, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 1117, 1118, 345, 1041, 256, 0, 0, 0,
	0, 0, 346, 347, 348, 1101, 0, 0, 0, 349,
	0, 350, 0, 0, 1128, 351, 352, 1114, 1115, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 1124,
	0, 1051, 362, 0, 363, 364, 365, 366, 367, 1087,
	1088, 1091, 443, 1130, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 257, 374, 375, 376, 378, 0,
	1129, 377, 1096, 1097, 0, 1057, 0, 379, 380, 1131,
	1089, 1132, 381, 382, 383, 1133, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 1125, 1134, 395, 396, 1135, 0, 397, 0,
	0, 0, 398, 399, 1080, 1079, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 1136, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 1137, 430,
	1020, 258, 1138, 440, 441, 1042, 1090, 442, 1104, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 1139, 453, 1140, 1119, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 1120, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 1100, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 1141, 503, 504, 505, 506,
	1030, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 1083, 528, 529, 512, 513, 530, 531, 1142, 532,
	533, 534, 535, 536, 537, 1098, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 1145, 544, 545, 546,
	547, 1121, 550, 0, 551, 552, 1018, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	1110, 1111, 1112, 1113, 0, 570, 0, 562, 563, 564,
	1122, 565, 1123, 1040, 566, 567, 568, 569, 0, 571,
	572, 0, 1024, 573, 574, 575, 577, 578, 576, 579,
	1084, 580, 0, 0, 581, 582, 583, 639, 1107, 1144,
	3448, 585, 584, 586, 642, 0, 0, 0, 0, 587,
	588, 643, 589, 590, 591, 1021, 0, 0, 0, 0,
	0, 0, 0, 1017, 0, 0, 0, 0, 0, 0,
	1015, 1016, 1062, 1034, 1035, 1036, 1032, 1033, 1045, 1046,
	0, 0, 0, 1044, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 1086, 1050, 0, 0, 0, 268,
	269, 1126, 270, 271, 272, 273, 274, 275, 593, 1099,
	0, 276, 1106, 277, 1105, 0, 1116, 278, 279, 280,
	281, 282, 283, 1052, 1085, 1019, 284, 1146, 1147, 600,
	0, 285, 286, 1092, 0, 1073, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 1127, 309, 310, 1076, 1074, 1075,
	1082, 1078, 1077, 1081, 311, 312, 313, 314, 1109, 315,
	1103, 1102, 1023, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 1094, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 1029, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 1117,
	1118, 345, 1041, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 1101, 0, 0, 0, 349, 0, 350, 0,
	0, 1128, 351, 352, 1114, 1115, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 1124, 0, 1051, 362,
	0, 363, 364, 365, 366, 367, 1087, 1088, 1091, 443,
	1130, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 257, 374, 375, 376, 378, 0, 1129, 377, 1096,
	1097, 0, 1057, 0, 379, 380, 1131, 1089, 1132, 381,
	382, 383, 1133, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 1125,
	1134, 395, 396, 1135, 0, 397, 0, 0, 0, 398,
	399, 1080, 1079, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 1136, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 1137, 430, 1020, 258, 1138,
	440, 441, 1042, 1090, 442, 1104, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 1139, 453, 1140, 1119, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 1120, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 1100, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 1141, 503, 504, 505, 506, 1030, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 1083, 528,
	529, 512, 513, 530, 531, 1142, 532, 533, 534, 535,
	536, 537, 1098, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 1145, 544, 545, 546, 547, 1121, 550,
	0, 551, 552, 1018, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 1110, 1111, 1112,
	1113, 0, 570, 0, 562, 563, 564, 1122, 565, 1123,
	1040, 566, 567, 568, 569, 0, 571, 572, 0, 1024,
	573, 574, 575, 577, 578, 576, 579, 1084, 580, 0,
	0, 581, 582, 583, 639, 1107, 1144, 0, 585, 584,
	586, 642, 0, 0, 0, 0, 587, 588, 643, 589,
	590, 591, 1021, 0, 0, 0, 0, 0, 0, 0,
	1017, 0, 0, 0, 0, 0, 0, 1015, 1016, 1840,
	0, 0, 0, 0, 0, 0, 1046, 0, 0, 0,
	1044, 1062, 1034, 1035, 1036, 1032, 1033, 1045, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 0, 0,
	0, 0, 0, 1086, 1050, 0, 0, 0, 268, 269,
	1126, 270, 271, 272, 273, 274, 275, 593, 1099, 0,
	276, 1106, 277, 1105, 0, 1116, 278, 279, 280, 281,
	282, 283, 1052, 1085, 1019, 284, 1146, 1147, 600, 0,
	285, 286, 1092, 0, 1073, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 1127, 309, 310, 1076, 1074, 1075, 1082,
	1078, 1077, 1081, 311, 312, 313, 314, 1109, 315, 1103,
	1102, 1023, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 1094, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 1029, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 1117, 1118,
	345, 1041, 256, 0, 0, 0, 0, 0, 346, 347,
	348, 1101, 0, 0, 0, 349, 0, 350, 0, 2516,
	1128, 351, 352, 1114, 1115, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 1124, 0, 1051, 362, 0,
	363, 364, 365, 366, 367, 1087, 1088, 1091, 443, 1130,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 0, 1129, 377, 1096, 1097,
	0, 1057, 0, 379, 380, 1131, 1089, 1132, 381, 382,
	383, 1133, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 1125, 1134,
	395, 396, 1135, 0, 397, 0, 0, 0, 398, 399,
	1080, 1079, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 1136, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 1137, 430, 1020, 258, 1138, 440,
	441, 1042, 1090, 442, 1104, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 1139, 453, 1140, 1119, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 1120, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 1100, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 1141, 503, 504, 505, 506, 1030, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 1083, 528, 529,
	512, 513, 530, 531, 1142, 532, 533, 534, 535, 536,
	537, 1098, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 1145, 544, 545, 546, 547, 1121, 550, 0,
	551, 552, 1018, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 1110, 1111, 1112, 1113,
	0, 570, 0, 562, 563, 564, 1122, 565, 1123, 1040,
	566, 567, 568, 569, 0, 571, 572, 0, 1024, 573,
	574, 575, 577, 578, 576, 579, 1084, 580, 0, 0,
	581, 582, 583, 639, 1107, 1144, 0, 585, 584, 586,
	642, 0, 0, 0, 0, 587, 588, 643, 589, 590,
	591, 1021, 0, 0, 0, 0, 0, 0, 0, 1017,
	0, 0, 0, 0, 0, 0, 1015, 1016, 1062, 1034,
	1035, 1036, 1032, 1033, 1045, 1046, 0, 0, 0, 1044,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	1086, 1050, 0, 0, 0, 268, 269, 1126, 270, 271,
	272, 273, 274, 275, 593, 1099, 0, 276, 1106, 277,
	1105, 0, 1116, 278, 279, 280, 281, 282, 283, 1052,
	1085, 1019, 284, 1146, 1147, 600, 0, 285, 286, 1092,
	0, 1073, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	1127, 309, 310, 1076, 1074, 1075, 1082, 1078, 1077, 1081,
	311, 312, 313, 314, 1109, 315, 1103, 1102, 1023, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 1094, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 1029, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 1117, 1118, 345, 1041, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 1101, 0,
	0, 0, 349, 0, 350, 0, 0, 1128, 351, 352,
	1114, 1115, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 1124, 0, 1051, 362, 0, 363, 364, 365,
	366, 367, 1087, 1088, 1091, 443, 1130, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 257, 374, 375,
	376, 378, 0, 1129, 377, 1096, 1097, 0, 1057, 0,
	379, 380, 1131, 1089, 1132, 381, 382, 383, 1133, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 1125, 1134, 395, 396, 1135,
	0, 397, 0, 0, 0, 398, 399, 1080, 1079, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 1136, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 1137, 430, 1020, 258, 1138, 440, 441, 1042, 1090,
	442, 1104, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 1139, 453,
	1140, 1119, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 1120, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	1100, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 1141, 503,
	504, 505, 506, 1030, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 1083, 528, 529, 512, 513, 530,
	531, 1142, 532, 533, 534, 535, 536, 537, 1098, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 1145,
	544, 545, 546, 547, 1121, 550, 0, 551, 552, 1018,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 1110, 1111, 1112, 1113, 0, 570, 0,
	562, 563, 564, 1122, 565, 1123, 1040, 566, 567, 568,
	569, 0, 571, 572, 0, 1024, 573, 574, 575, 577,
	578, 576, 579, 1084, 580, 0, 0, 581, 582, 583,
	639, 1107, 1144, 0, 585, 584, 586, 642, 0, 0,
	0, 0, 587, 588, 643, 589, 590, 591, 1021, 0,
	0, 0, 0, 0, 0, 0, 1017, 0, 0, 0,
	0, 0, 0, 1015, 1016, 0, 0, 0, 0, 0,
	0, 0, 1046, 1770, 0, 2521, 1044, 1062, 1034, 1035,
	1036, 1032, 1033, 1045, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 261, 260, 262, 263, 264,
	265, 0, 266, 267, 0, 0, 0, 0, 0, 1086,
	1050, 0, 0, 0, 268, 269, 1126, 270, 271, 272,
	273, 274, 275, 593, 1099, 0, 276, 1106, 277, 1105,
	0, 1116, 278, 279, 280, 281, 282, 283, 1052, 1085,
	1019, 284, 1146, 1147, 600, 0, 285, 286, 1092, 0,
	1073, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 1127,
	309, 310, 1076, 1074, 1075, 1082, 1078, 1077, 1081, 311,
	312, 313, 314, 1109, 315, 1103, 1102, 1023, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 0, 0,
	324, 1094, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 1029, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 1117, 1118, 345, 1041, 256, 0,
	0, 0, 0, 0, 346, 347, 348, 1101, 0, 0,
	0, 349, 0, 350, 0, 0, 1128, 351, 352, 1114,
	1115, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 1124, 0, 1051, 362, 0, 363, 364, 365, 366,
	367, 1087, 1088, 1091, 443, 1130, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 257, 374, 375, 376,
	378, 0, 1129, 377, 1096, 1097, 0, 1057, 0, 379,
	380, 1131, 1089, 1132, 381, 382, 383, 1133, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 0, 391,
	393, 392, 0, 394, 1125, 1134, 395, 396, 1135, 0,
	397, 0, 0, 0, 398, 399, 1080, 1079, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 1136, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	1137, 430, 1020, 258, 1138, 440, 441, 1042, 1090, 442,
	1104, 444, 445, 0, 0, 446, 0, 0, 0, 448,
	449, 450, 0, 0, 451, 452, 622, 1139, 453, 1140,
	1119, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 1120, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 1100,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 1141, 503, 504,
	505, 506, 1030, 507, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 0, 523, 524, 522,
	525, 526, 527, 1083, 528, 529, 512, 513, 530, 531,
	1142, 532, 533, 534, 535, 536, 537, 1098, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 1145, 544,
	545, 546, 547, 1121, 550, 0, 551, 552, 1018, 549,
	0, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	0, 561, 1110, 1111, 1112, 1113, 0, 570, 0, 562,
	563, 564, 1122, 565, 1123, 1040, 566, 567, 568, 569,
	0, 571, 572, 0, 1024, 573, 574, 575, 577, 578,
	576, 579, 1084, 580, 0, 0, 581, 582, 583, 639,
	1107, 1144, 0, 585, 584, 586, 642, 0, 0, 0,
	0, 587, 588, 643, 589, 590, 591, 1021, 0, 0,
	0, 0, 0, 0, 0, 1017, 0, 0, 0, 0,
	0, 0, 1015, 1016, 0, 0, 0, 0, 0, 0,
	0, 1046, 0, 0, 2519, 1044, 1062, 1034, 1035, 1036,
	1032, 1033, 1045, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 1086, 1050,
	0, 0, 0, 268, 269, 1126, 270, 271, 272, 273,
	274, 275, 593, 1099, 0, 276, 1106, 277, 1105, 0,
	1116, 278, 279, 280, 281, 282, 283, 1052, 1085, 1019,
	284, 1146, 1147, 600, 0, 285, 286, 1092, 0, 1073,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 1127, 309,
	310, 1076, 1074, 1075, 1082, 1078, 1077, 1081, 311, 312,
	313, 314, 1109, 315, 1103, 1102, 1023, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	1094, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 1029, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 1117, 1118, 345, 1041, 256, 0, 0,
	0, 0, 0, 346, 347, 348, 1101, 0, 0, 0,
	349, 0, 350, 0, 0, 1128, 351, 352, 1114, 1115,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	1124, 0, 1051, 362, 0, 363, 364, 365, 366, 367,
	1087, 1088, 1091, 443, 1130, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 257, 374, 375, 376, 378,
	0, 1129, 377, 1096, 1097, 0, 1057, 0, 379, 380,
	1131, 1089, 1132, 381, 382, 383, 1133, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 1125, 1134, 395, 396, 1135, 0, 397,
	0, 0, 0, 398, 399, 1080, 1079, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 1136, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 1137,
	430, 1020, 258, 1138, 440, 441, 1042, 1090, 442, 1104,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 1139, 453, 1140, 1119,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 1120, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 1100, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 1141, 503, 504, 505,
	506, 1030, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 1083, 528, 529, 512, 513, 530, 531, 1142,
	532, 533, 534, 535, 536, 537, 1098, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 1145, 544, 545,
	546, 547, 1121, 550, 0, 551, 552, 1018, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 1110, 1111, 1112, 1113, 0, 570, 0, 562, 563,
	564, 1122, 565, 1123, 1040, 566, 567, 568, 569, 0,
	571, 572, 0, 1024, 573, 574, 575, 577, 578, 576,
	579, 1084, 580, 0, 0, 581, 582, 583, 639, 1107,
	1144, 0, 585, 584, 586, 642, 0, 0, 0, 0,
	587, 588, 643, 589, 590, 591, 1021, 0, 0, 0,
	0, 0, 0, 0, 1017, 0, 0, 0, 0, 0,
	0, 1015, 1016, 0, 0, 0, 0, 0, 0, 0,
	1046, 0, 0, 2507, 1044, 1062, 1034, 1035, 1036, 1032,
	1033, 1045, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 1086, 1050, 0,
	0, 0, 268, 269, 1126, 270, 271, 272, 273, 274,
	275, 593, 1099, 0, 276, 1106, 277, 1105, 0, 1116,
	278, 279, 280, 281, 282, 283, 1052, 1085, 1019, 284,
	1146, 1147, 600, 0, 285, 286, 1092, 0, 1073, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 1127, 309, 310,
	1076, 1074, 1075, 1082, 1078, 1077, 1081, 311, 312, 313,
	314, 1109, 315, 1103, 1102, 1023, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 1094,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 1029, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 1117, 1118, 345, 1041, 256, 0, 0, 0,
	0, 0, 346, 347, 348, 1101, 0, 0, 0, 349,
	0, 350, 0, 0, 1128, 351, 352, 1114, 1115, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 1124,
	0, 1051, 362, 0, 363, 364, 365, 366, 367, 1087,
	1088, 1091, 443, 1130, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 257, 374, 375, 376, 378, 0,
	1129, 377, 1096, 1097, 0, 1057, 0, 379, 380, 1131,
	1089, 1132, 381, 382, 383, 1133, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 1125, 1134, 395, 396, 1135, 0, 397, 0,
	0, 0, 398, 399, 1080, 1079, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 1136, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 1137, 430,
	1020, 258, 1138, 440, 441, 1042, 1090, 442, 1104, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 1139, 453, 1140, 1119, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 1120, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 1100, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 1141, 503, 504, 505, 506,
	1030, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 1083, 528, 529, 512, 513, 530, 531, 1142, 532,
	533, 534, 535, 536, 537, 1098, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 1145, 544, 545, 546,
	547, 1121, 550, 0, 551, 552, 1018, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	1110, 1111, 1112, 1113, 0, 570, 0, 562, 563, 564,
	1122, 565, 1123, 1040, 566, 567, 568, 569, 0, 571,
	572, 0, 1024, 573, 574, 575, 577, 578, 576, 579,
	1084, 580, 0, 0, 581, 582, 583, 639, 1107, 1144,
	0, 585, 584, 586, 642, 0, 0, 0, 0, 587,
	588, 643, 589, 590, 591, 1021, 0, 0, 0, 0,
	0, 0, 0, 1017, 0, 0, 0, 0, 0, 0,
	1015, 1016, 0, 0, 0, 0, 0, 0, 0, 1046,
	0, 0, 2496, 1044, 1062, 1034, 1035, 1036, 1032, 1033,
	1045, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 1086, 1050, 0, 0,
	0, 268, 269, 1126, 270, 271, 272, 273, 274, 275,
	593, 1099, 0, 276, 1106, 277, 1105, 0, 1116, 278,
	279, 280, 281, 282, 283, 1052, 1085, 1019, 284, 1146,
	1147, 600, 0, 285, 286, 1092, 0, 1073, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 1127, 309, 310, 1076,
	1074, 1075, 1082, 1078, 1077, 1081, 311, 312, 313, 314,
	1109, 315, 1103, 1102, 1023, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 1094, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	1029, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 1117, 1118, 345, 1041, 256, 0, 0, 0, 0,
	0, 346, 347, 348, 1101, 0, 0, 0, 349, 0,
	350, 0, 0, 1128, 351, 352, 1114, 1115, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 1124, 0,
	1051, 362, 0, 363, 364, 365, 366, 367, 1087, 1088,
	1091, 443, 1130, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 257, 374, 375, 376, 378, 0, 1129,
	377, 1096, 1097, 0, 1057, 0, 379, 380, 1131, 1089,
	1132, 381, 382, 383, 1133, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 1125, 1134, 395, 396, 1135, 0, 397, 0, 0,
	0, 398, 399, 1080, 1079, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 1136, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 1137, 430, 1020,
	258, 1138, 440, 441, 1042, 1090, 442, 1104, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 1139, 453, 1140, 1119, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	1120, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 1100, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 1141, 503, 504, 505, 506, 1030,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	1083, 528, 529, 512, 513, 530, 531, 1142, 532, 533,
	534, 535, 536, 537, 1098, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 1145, 544, 545, 546, 547,
	1121, 550, 0, 551, 552, 1018, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 1110,
	1111, 1112, 1113, 0, 570, 0, 562, 563, 564, 1122,
	565, 1123, 1040, 566, 567, 568, 569, 0, 571, 572,
	0, 1024, 573, 574, 575, 577, 578, 576, 579, 1084,
	580, 0, 0, 581, 582, 583, 639, 1107, 1144, 0,
	585, 584, 586, 642, 0, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 1021, 0, 0, 0, 0, 0,
	0, 0, 1017, 0, 0, 0, 0, 0, 0, 1015,
	1016, 0, 0, 0, 0, 0, 0, 0, 1046, 0,
	0, 2494, 1044, 2485, 2492, 1035, 1036, 1032, 1033, 1045,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 261, 260, 262, 263, 264, 265, 0, 266, 267,
	0, 0, 0, 0, 0, 1086, 1050, 0, 0, 0,
	268, 269, 1126, 270, 271, 272, 273, 274, 275, 593,
	1099, 0, 276, 1106, 277, 1105, 0, 1116, 278, 279,
	280, 281, 282, 283, 1052, 1085, 1019, 284, 1146, 1147,
	600, 0, 285, 286, 1092, 0, 1073, 0, 287, 288,
	289, 290, 291, 292, 293, 0, 0, 295, 296, 297,
	294, 298, 0, 299, 0, 300, 301, 302, 303, 304,
	305, 0, 306, 307, 308, 1127, 309, 310, 1076, 1074,
	1075, 1082, 1078, 1077, 1081, 311, 312, 313, 314, 1109,
	2488, 1103, 1102, 1023, 319, 316, 317, 0, 320, 318,
	0, 321, 322, 323, 0, 0, 324, 1094, 326, 0,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 1029,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	1117, 1118, 345, 1041, 256, 0, 0, 0, 0, 0,
	346, 347, 348, 1101, 0, 0, 0, 349, 0, 350,
	0, 0, 1128, 351, 352, 1114, 1115, 353, 354, 355,
	356, 357, 358, 359, 360, 0, 361, 1124, 0, 1051,
	362, 0, 363, 364, 365, 2489, 367, 1087, 1088, 1091,
	443, 1130, 368, 369, 0, 370, 371, 372, 373, 0,
	0, 0, 257, 374, 375, 376, 378, 0, 1129, 377,
	1096, 1097, 0, 1057, 0, 379, 380, 1131, 1089, 1132,
	381, 382, 383, 1133, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 0, 391, 393, 392, 0, 394,
	1125, 1134, 395, 396, 1135, 0, 397, 0, 0, 0,
	398, 399, 1080, 1079, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 2490, 411, 2487, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 1136, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 1137, 430, 1020, 258,
	1138, 440, 441, 1042, 1090, 442, 1104, 444, 445, 0,
	0, 446, 0, 0, 0, 448, 449, 450, 0, 0,
	451, 452, 622, 1139, 453, 1140, 1119, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 0, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 1120,
	472, 627, 473, 474, 0, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 1100, 484, 486, 485, 487,
	0, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 0,
	500, 501, 502, 1141, 503, 504, 505, 506, 1030, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 2491, 0, 523, 524, 522, 525, 526, 527, 1083,
	528, 529, 512, 513, 530, 531, 1142, 532, 533, 534,
	535, 536, 537, 1098, 0, 538, 0, 539, 540, 541,
	542, 514, 543, 548, 1145, 544, 545, 546, 547, 1121,
	550, 0, 551, 552, 1018, 549, 0, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 0, 561, 1110, 1111,
	1112, 1113, 0, 570, 0, 562, 563, 564, 1122, 565,
	1123, 1040, 566, 567, 568, 569, 0, 571, 572, 0,
	1024, 573, 574, 575, 577, 578, 576, 579, 1084, 580,
	0, 0, 581, 582, 583, 639, 1107, 1144, 0, 585,
	584, 586, 642, 0, 0, 0, 0, 587, 588, 643,
	589, 2486, 591, 1021, 0, 0, 0, 0, 0, 0,
	0, 1017, 0, 0, 0, 0, 0, 0, 1015, 1016,
	0, 0, 0, 0, 0, 0, 0, 1046, 0, 0,
	2482, 1044, 2485, 2492, 1035, 1036, 1032, 1033, 1045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 1086, 1050, 0, 0, 0, 268,
	269, 1126, 270, 271, 272, 273, 274, 275, 593, 1099,
	0, 276, 1106, 277, 1105, 0, 1116, 278, 279, 280,
	281, 282, 283, 1052, 1085, 1019, 284, 1146, 1147, 600,
	0, 285, 286, 1092, 0, 1073, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 1127, 309, 310, 1076, 1074, 1075,
	1082, 1078, 1077, 1081, 311, 312, 313, 314, 1109, 2488,
	1103, 1102, 1023, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 1094, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 1029, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 1117,
	1118, 345, 1041, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 1101, 0, 0, 0, 349, 0, 350, 0,
	0, 1128, 351, 352, 1114, 1115, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 1124, 0, 1051, 362,
	0, 363, 364, 365, 2489, 367, 1087, 1088, 1091, 443,
	1130, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 257, 374, 375, 376, 378, 0, 1129, 377, 1096,
	1097, 0, 1057, 0, 379, 380, 1131, 1089, 1132, 381,
	382, 383, 1133, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 1125,
	1134, 395, 396, 1135, 0, 397, 0, 0, 0, 398,
	399, 1080, 1079, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 2490, 411, 2487, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 1136, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 1137, 430, 1020, 258, 1138,
	440, 441, 1042, 1090, 442, 1104, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 1139, 453, 1140, 1119, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 1120, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 1100, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 1141, 503, 504, 505, 506, 1030, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	2491, 0, 523, 524, 522, 525, 526, 527, 1083, 528,
	529, 512, 513, 530, 531, 1142, 532, 533, 534, 535,
	536, 537, 1098, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 1145, 544, 545, 546, 547, 1121, 550,
	0, 551, 552, 1018, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 1110, 1111, 1112,
	1113, 0, 570, 0, 562, 563, 564, 1122, 565, 1123,
	1040, 566, 567, 568, 569, 0, 571, 572, 0, 1024,
	573, 574, 575, 577, 578, 576, 579, 1084, 580, 0,
	0, 581, 582, 583, 639, 1107, 1144, 0, 585, 584,
	586, 642, 0, 0, 0, 0, 587, 588, 643, 589,
	2486, 591, 1021, 0, 0, 0, 0, 0, 0, 0,
	1017, 0, 0, 0, 0, 0, 0, 1015, 1016, 1062,
	1034, 1035, 1036, 1032, 1033, 1045, 1046, 0, 0, 0,
	1044, 0, 0, 0, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 1086, 1050, 0, 0, 0, 268, 269, 1126, 270,
	271, 272, 273, 274, 275, 593, 1099, 0, 276, 1106,
	277, 1105, 0, 1116, 278, 279, 280, 281, 282, 283,
	1052, 1085, 1019, 284, 1146, 1147, 600, 0, 285, 286,
	1092, 0, 1073, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 1127, 309, 310, 1076, 1074, 1075, 1082, 1078, 1077,
	1081, 311, 312, 313, 314, 1109, 315, 1103, 1102, 1023,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 1094, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 1029, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 1117, 1118, 345, 1041,
	256, 0, 0, 0, 0, 0, 346, 347, 348, 1101,
	0, 0, 0, 349, 0, 350, 0, 0, 1128, 351,
	352, 1114, 1115, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 1124, 0, 1051, 362, 0, 363, 364,
	365, 366, 367, 1087, 1088, 1091, 443, 1130, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 257, 374,
	375, 376, 378, 0, 1129, 377, 1096, 1097, 0, 1057,
	0, 379, 380, 1131, 1089, 1132, 381, 382, 383, 1133,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 1125, 1134, 395, 396,
	1135, 0, 397, 0, 0, 0, 398, 399, 1080, 1079,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 1136,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 1137, 430, 1020, 258, 1138, 440, 441, 1042,
	1090, 442, 1104, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 1139,
	453, 1140, 1119, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 1120, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 1100, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 1141,
	503, 504, 505, 506, 1030, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 1083, 528, 529, 512, 513,
	530, 531, 1142, 532, 533, 534, 535, 536, 537, 1098,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	1145, 544, 545, 546, 547, 1121, 550, 0, 551, 552,
	1018, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 1110, 1111, 1112, 1113, 0, 570,
	0, 562, 563, 564, 1122, 565, 1123, 1040, 566, 567,
	568, 569, 0, 571, 572, 0, 1024, 573, 574, 575,
	577, 578, 576, 579, 1084, 580, 0, 0, 581, 582,
	583, 639, 1107, 1144, 0, 585, 584, 586, 642, 0,
	0, 0, 0, 587, 588, 643, 589, 590, 591, 1021,
	0, 0, 0, 0, 0, 0, 0, 1017, 0, 0,
	0, 0, 0, 0, 1015, 1016, 0, 0, 0, 0,
	0, 1778, 0, 1046, 0, 0, 0, 1044, 1062, 1034,
	1035, 1036, 1032, 1033, 1045, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 2276, 266, 267, 0, 0, 0, 0, 0,
	1086, 1050, 0, 0, 0, 268, 269, 1126, 270, 271,
	272, 273, 274, 275, 593, 1099, 0, 276, 1106, 277,
	1105, 0, 1116, 278, 279, 280, 281, 282, 283, 1052,
	1085, 1019, 284, 1146, 1147, 600, 0, 285, 286, 1092,
	0, 1073, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	1127, 309, 310, 1076, 1074, 1075, 1082, 1078, 1077, 1081,
	311, 312, 313, 314, 1109, 315, 1103, 1102, 1023, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 1094, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 1029, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 1117, 1118, 345, 1041, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 1101, 0,
	0, 0, 349, 0, 350, 0, 0, 1128, 351, 352,
	1114, 1115, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 1124, 0, 1051, 362, 0, 363, 364, 365,
	366, 367, 1087, 1088, 1091, 443, 1130, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 257, 374, 375,
	376, 378, 0, 1129, 377, 1096, 1097, 0, 1057, 0,
	379, 380, 1131, 1089, 1132, 381, 382, 383, 1133, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 1125, 1134, 395, 396, 1135,
	0, 397, 0, 0, 0, 398, 399, 1080, 1079, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 1136, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 1137, 430, 1020, 258, 1138, 440, 441, 1042, 1090,
	442, 1104, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 1139, 453,
	1140, 1119, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 1120, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	1100, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 1141, 503,
	504, 505, 506, 1030, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 1083, 528, 529, 512, 513, 530,
	531, 1142, 532, 533, 534, 535, 536, 537, 1098, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 1145,
	544, 545, 546, 547, 1121, 550, 0, 551, 552, 1018,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 1110, 1111, 1112, 1113, 0, 570, 0,
	562, 563, 564, 1122, 565, 1123, 1040, 566, 567, 568,
	569, 0, 571, 572, 0, 1024, 573, 574, 575, 577,
	578, 576, 579, 1084, 580, 0, 0, 581, 582, 583,
	639, 1107, 1144, 0, 585, 584, 586, 642, 0, 0,
	0, 0, 587, 588, 643, 589, 590, 591, 1021, 0,
	0, 0, 0, 0, 0, 0, 1017, 0, 0, 0,
	0, 0, 0, 1015, 1016, 0, 0, 0, 0, 0,
	0, 0, 1046, 0, 0, 1629, 1044, 1062, 1034, 1035,
	1036, 1032, 1033, 1045, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 261, 260, 262, 263, 264,
	265, 0, 266, 267, 0, 0, 0, 0, 0, 1086,
	1050, 0, 0, 0, 268, 269, 1126, 270, 271, 272,
	273, 274, 275, 593, 1099, 0, 276, 1106, 277, 1105,
	0, 1116, 278, 279, 280, 281, 282, 283, 1052, 1085,
	1019, 284, 1146, 1147, 600, 0, 285, 286, 1092, 0,
	1073, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 1127,
	309, 310, 1076, 1074, 1075, 1082, 1078, 1077, 1081, 311,
	312, 313, 314, 1109, 315, 1103, 1102, 1023, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 0, 0,
	324, 1094, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 1029, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 1117, 1118, 345, 1041, 256, 0,
	0, 0, 0, 0, 346, 347, 348, 1101, 0, 0,
	0, 349, 0, 350, 0, 0, 1128, 351, 352, 1114,
	1115, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 1124, 0, 1051, 362, 0, 363, 364, 365, 366,
	367, 1087, 1088, 1091, 443, 1130, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 257, 374, 375, 376,
	378, 0, 1129, 377, 1096, 1097, 0, 1057, 0, 379,
	380, 1131, 1089, 1132, 381, 382, 383, 1133, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 0, 391,
	393, 392, 0, 394, 1125, 1134, 395, 396, 1135, 0,
	397, 0, 0, 0, 398, 399, 1080, 1079, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 1136, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	1137, 430, 1020, 258, 1138, 440, 441, 1042, 1090, 442,
	1104, 444, 445, 0, 0, 446, 0, 0, 0, 448,
	449, 450, 0, 0, 451, 452, 622, 1139, 453, 1140,
	1119, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 1120, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 1100,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 1141, 503, 504,
	505, 506, 1030, 507, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 0, 523, 524, 522,
	525, 526, 527, 1083, 528, 529, 512, 513, 530, 531,
	1142, 532, 533, 534, 535, 536, 537, 1098, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 1145, 544,
	545, 546, 547, 1121, 550, 0, 551, 552, 1018, 549,
	0, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	0, 561, 1110, 1111, 1112, 1113, 0, 570, 0, 562,
	563, 564, 1122, 565, 1123, 1040, 566, 567, 568, 569,
	0, 571, 572, 0, 1024, 573, 574, 575, 577, 578,
	576, 579, 1084, 580, 0, 0, 581, 582, 583, 639,
	1107, 1144, 0, 585, 584, 586, 642, 0, 0, 0,
	0, 587, 588, 643, 589, 590, 591, 1021, 0, 0,
	0, 0, 0, 0, 0, 1017, 0, 0, 0, 0,
	0, 0, 1015, 1016, 0, 0, 0, 0, 0, 0,
	0, 1046, 0, 0, 1564, 1044, 1062, 1034, 1035, 1036,
	1032, 1033, 1045, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 1086, 1050,
	0, 0, 0, 268, 269, 1126, 270, 271, 272, 273,
	274, 275, 593, 1099, 0, 276, 1106, 277, 1105, 0,
	1116, 278, 279, 280, 281, 282, 283, 1052, 1085, 1019,
	284, 1146, 1147, 600, 0, 285, 286, 1092, 0, 1073,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 1127, 309,
	310, 1076, 1074, 1075, 1082, 1078, 1077, 1081, 311, 312,
	313, 314, 1109, 315, 1103, 1102, 1023, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	1094, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 1029, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 1117, 1118, 345, 1041, 256, 0, 0,
	0, 0, 0, 346, 347, 348, 1101, 0, 0, 0,
	349, 0, 350, 0, 0, 1128, 351, 352, 1114, 1115,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	1124, 0, 1051, 362, 0, 363, 364, 365, 366, 367,
	1087, 1088, 1091, 443, 1130, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 257, 374, 375, 376, 378,
	0, 1129, 377, 1096, 1097, 0, 1057, 0, 379, 380,
	1131, 1089, 1132, 381, 382, 383, 1133, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 1125, 1134, 395, 396, 1135, 0, 397,
	0, 0, 0, 398, 399, 1080, 1079, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 1136, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 1137,
	430, 1020, 258, 1138, 440, 441, 1042, 1090, 442, 1104,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 1139, 453, 1140, 1119,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 1120, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 1100, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 1141, 503, 504, 505,
	506, 1030, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 1083, 528, 529, 512, 513, 530, 531, 1142,
	532, 533, 534, 535, 536, 537, 1098, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 1145, 544, 545,
	546, 547, 1121, 550, 0, 551, 552, 1018, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 1110, 1111, 1112, 1113, 0, 570, 0, 562, 563,
	564, 1122, 565, 1123, 1040, 566, 567, 568, 569, 0,
	571, 572, 0, 1024, 573, 574, 575, 577, 578, 576,
	579, 1084, 580, 0, 0, 581, 582, 583, 639, 1107,
	1144, 0, 585, 584, 586, 642, 0, 0, 0, 0,
	587, 588, 643, 589, 590, 591, 1021, 0, 0, 0,
	0, 0, 0, 0, 1017, 0, 0, 0, 0, 0,
	0, 1015, 1016, 0, 0, 0, 0, 0, 0, 0,
	1046, 0, 0, 1559, 1044, 1062, 1034, 1035, 1036, 1032,
	1033, 1045, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 1086, 1050, 0,
	0, 0, 268, 269, 1126, 270, 271, 272, 273, 274,
	275, 593, 1099, 0, 276, 1106, 277, 1105, 0, 1116,
	278, 279, 280, 281, 282, 283, 1052, 1085, 1019, 284,
	1146, 1147, 600, 0, 285, 286, 1092, 0, 1073, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 1127, 309, 310,
	1076, 1074, 1075, 1082, 1078, 1077, 1081, 311, 312, 313,
	314, 1109, 315, 1103, 1102, 1023, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 1094,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 1029, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 1117, 1118, 345, 1041, 256, 0, 0, 0,
	0, 0, 346, 347, 348, 1101, 0, 0, 0, 349,
	0, 350, 0, 0, 1128, 351, 352, 1114, 1115, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 1124,
	0, 1051, 362, 0, 363, 364, 365, 366, 367, 1087,
	1088, 1091, 443, 1130, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 257, 374, 375, 376, 378, 0,
	1129, 377, 1096, 1097, 0, 1057, 0, 379, 380, 1131,
	1089, 1132, 381, 382, 383, 1133, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 1125, 1134, 395, 396, 1135, 0, 397, 0,
	0, 0, 398, 399, 1080, 1079, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 1136, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 1137, 430,
	1020, 258, 1138, 440, 441, 1042, 1090, 442, 1104, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 1139, 453, 1140, 1119, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 1120, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 1100, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 1141, 503, 504, 505, 506,
	1030, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 1083, 528, 529, 512, 513, 530, 531, 1142, 532,
	533, 534, 535, 536, 537, 1098, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 1145, 544, 545, 546,
	547, 1121, 550, 0, 551, 552, 1018, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	1110, 1111, 1112, 1113, 0, 570, 0, 562, 563, 564,
	1122, 565, 1123, 1040, 566, 567, 568, 569, 0, 571,
	572, 0, 1024, 573, 574, 575, 577, 578, 576, 579,
	1084, 580, 0, 0, 581, 582, 583, 639, 1107, 1144,
	0, 585, 584, 586, 642, 0, 0, 0, 0, 587,
	588, 643, 589, 590, 591, 1021, 0, 0, 0, 0,
	0, 0, 0, 1017, 0, 0, 0, 0, 0, 0,
	1015, 1016, 0, 0, 0, 0, 0, 0, 0, 1046,
	0, 0, 1550, 1044, 1062, 1034, 1035, 1036, 1032, 1033,
	1045, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 1086, 1050, 0, 0,
	0, 268, 269, 1126, 270, 271, 272, 273, 274, 275,
	593, 1099, 0, 276, 1106, 277, 1105, 0, 1116, 278,
	279, 280, 281, 282, 283, 1052, 1085, 1019, 284, 1146,
	1147, 600, 0, 285, 286, 1092, 0, 1073, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 1127, 309, 310, 1076,
	1074, 1075, 1082, 1078, 1077, 1081, 311, 312, 313, 314,
	1109, 315, 1103, 1102, 1023, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 1094, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	1029, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 1117, 1118, 345, 1041, 256, 0, 0, 0, 0,
	0, 346, 347, 348, 1101, 0, 0, 0, 349, 0,
	350, 0, 0, 1128, 351, 352, 1114, 1115, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 1124, 0,
	1051, 362, 0, 363, 364, 365, 366, 367, 1087, 1088,
	1091, 443, 1130, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 257, 374, 375, 376, 378, 0, 1129,
	377, 1096, 1097, 0, 1057, 0, 379, 380, 1131, 1089,
	1132, 381, 382, 383, 1133, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 1125, 1134, 395, 396, 1135, 0, 397, 0, 0,
	0, 398, 399, 1080, 1079, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 1136, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 1137, 430, 1020,
	258, 1138, 440, 441, 1042, 1090, 442, 1104, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 1139, 453, 1140, 1119, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	1120, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 1100, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 1141, 503, 504, 505, 506, 1030,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	1083, 528, 529, 512, 513, 530, 531, 1142, 532, 533,
	534, 535, 536, 537, 1098, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 1145, 544, 545, 546, 547,
	1121, 550, 0, 551, 552, 1018, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 1110,
	1111, 1112, 1113, 0, 570, 0, 562, 563, 564, 1122,
	565, 1123, 1040, 566, 567, 568, 569, 0, 571, 572,
	0, 1024, 573, 574, 575, 577, 578, 576, 579, 1084,
	580, 0, 0, 581, 582, 583, 639, 1107, 1144, 0,
	585, 584, 586, 642, 0, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 1021, 0, 0, 0, 0, 0,
	0, 0, 1017, 0, 0, 0, 0, 0, 0, 1015,
	1016, 0, 0, 0, 0, 0, 0, 0, 1046, 0,
	0, 1545, 1044, 1062, 1034, 1035, 1036, 1032, 1033, 1045,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 261, 260, 262, 263, 264, 265, 0, 266, 267,
	0, 0, 0, 0, 0, 1086, 1050, 0, 0, 0,
	268, 269, 1126, 270, 271, 272, 273, 274, 275, 593,
	1099, 0, 276, 1106, 277, 1105, 0, 1116, 278, 279,
	280, 281, 282, 283, 1052, 1085, 1019, 284, 1146, 1147,
	600, 0, 285, 286, 1092, 0, 1073, 0, 287, 288,
	289, 290, 291, 292, 293, 0, 0, 295, 296, 297,
	294, 298, 0, 299, 0, 300, 301, 302, 303, 304,
	305, 0, 306, 307, 308, 1127, 309, 310, 1076, 1074,
	1075, 1082, 1078, 1077, 1081, 311, 312, 313, 314, 1109,
	315, 1103, 1102, 1023, 319, 316, 317, 0, 320, 318,
	0, 321, 322, 323, 0, 0, 324, 1094, 326, 0,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 1029,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	1117, 1118, 345, 1041, 256, 0, 0, 0, 0, 0,
	346, 347, 348, 1101, 0, 0, 0, 349, 0, 350,
	0, 0, 1128, 351, 352, 1114, 1115, 353, 354, 355,
	356, 357, 358, 359, 360, 0, 361, 1124, 0, 1051,
	362, 0, 363, 364, 365, 366, 367, 1087, 1088, 1091,
	443, 1130, 368, 369, 0, 370, 371, 372, 373, 0,
	0, 0, 257, 374, 375, 376, 378, 0, 1129, 377,
	1096, 1097, 0, 1057, 0, 379, 380, 1131, 1089, 1132,
	381, 382, 383, 1133, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 0, 391, 393, 392, 0, 394,
	1125, 1134, 395, 396, 1135, 0, 397, 0, 0, 0,
	398, 399, 1080, 1079, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 1136, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 1137, 430, 1020, 258,
	1138, 440, 441, 1042, 1090, 442, 1104, 444, 445, 0,
	0, 446, 0, 0, 0, 448, 449, 450, 0, 0,
	451, 452, 622, 1139, 453, 1140, 1119, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 0, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 1120,
	472, 627, 473, 474, 0, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 1100, 484, 486, 485, 487,
	0, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 0,
	500, 501, 502, 1141, 503, 504, 505, 506, 1030, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 0, 523, 524, 522, 525, 526, 527, 1083,
	528, 529, 512, 513, 530, 531, 1142, 532, 533, 534,
	535, 536, 537, 1098, 0, 538, 0, 539, 540, 541,
	542, 514, 543, 548, 1145, 544, 545, 546, 547, 1121,
	550, 0, 551, 552, 1018, 549, 0, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 0, 561, 1110, 1111,
	1112, 1113, 0, 570, 0, 562, 563, 564, 1122, 565,
	1123, 1040, 566, 567, 568, 569, 0, 571, 572, 0,
	1024, 573, 574, 575, 577, 578, 576, 579, 1084, 580,
	0, 0, 581, 582, 583, 639, 1107, 1144, 0, 585,
	584, 586, 642, 0, 0, 0, 0, 587, 588, 643,
	589, 590, 591, 1021, 0, 0, 0, 0, 0, 0,
	0, 1017, 0, 0, 0, 0, 0, 0, 1015, 1016,
	0, 0, 0, 0, 0, 0, 0, 1046, 0, 0,
	1527, 1044, 1062, 1034, 1035, 1036, 1032, 1033, 1045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 1086, 1050, 0, 0, 0, 268,
	269, 1126, 270, 271, 272, 273, 274, 275, 593, 1099,
	0, 276, 1106, 277, 1105, 0, 1116, 278, 279, 280,
	281, 282, 283, 1052, 1085, 1019, 284, 1146, 1147, 600,
	0, 285, 286, 1092, 0, 1073, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 1127, 309, 310, 1076, 1074, 1075,
	1082, 1078, 1077, 1081, 311, 312, 313, 314, 1109, 315,
	1103, 1102, 1023, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 1094, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 1029, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 1117,
	1118, 345, 1041, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 1101, 0, 0, 0, 349, 0, 350, 0,
	0, 1128, 351, 352, 1114, 1115, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 1124, 0, 1051, 362,
	0, 363, 364, 365, 366, 367, 1087, 1088, 1091, 443,
	1130, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 257, 374, 375, 376, 378, 0, 1129, 377, 1096,
	1097, 0, 1057, 0, 379, 380, 1131, 1089, 1132, 381,
	382, 383, 1133, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 1125,
	1134, 395, 396, 1135, 0, 397, 0, 0, 0, 398,
	399, 1080, 1079, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 1136, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 1137, 430, 1020, 258, 1138,
	440, 441, 1042, 1090, 442, 1104, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 1139, 453, 1140, 1119, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 1120, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 1100, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 1141, 503, 504, 505, 506, 1030, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 1083, 528,
	529, 512, 513, 530, 531, 1142, 532, 533, 534, 535,
	536, 537, 1098, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 1145, 544, 545, 546, 547, 1121, 550,
	0, 551, 552, 1018, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 1110, 1111, 1112,
	1113, 0, 570, 0, 562, 563, 564, 1122, 565, 1123,
	1040, 566, 567, 568, 569, 0, 571, 572, 0, 1024,
	573, 574, 575, 577, 578, 576, 579, 1084, 580, 0,
	0, 581, 582, 583, 639, 1107, 1144, 0, 585, 584,
	586, 642, 0, 0, 0, 0, 587, 588, 643, 589,
	590, 591, 1021, 0, 0, 0, 0, 0, 0, 0,
	1017, 0, 0, 0, 0, 0, 0, 1015, 1016, 0,
	0, 0, 0, 0, 0, 0, 1046, 0, 0, 1406,
	1044, 1062, 1034, 1035, 1036, 1032, 1033, 1045, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 0, 0,
	0, 0, 0, 1086, 1050, 0, 0, 0, 268, 269,
	1126, 270, 271, 272, 273, 274, 275, 593, 1099, 0,
	276, 1106, 277, 1105, 0, 1116, 278, 279, 280, 281,
	282, 283, 1052, 1085, 1019, 284, 1146, 1147, 600, 0,
	285, 286, 1092, 0, 1073, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 1127, 309, 310, 1076, 1074, 1075, 1082,
	1078, 1077, 1081, 311, 312, 313, 314, 1109, 315, 1103,
	1102, 1023, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 1094, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 1029, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 1117, 1118,
	345, 1041, 256, 0, 0, 0, 0, 0, 346, 347,
	348, 1101, 0, 0, 0, 349, 0, 350, 0, 0,
	1128, 351, 352, 1114, 1115, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 1124, 0, 1051, 362, 0,
	363, 364, 365, 366, 367, 1405, 1088, 1091, 443, 1130,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 0, 1129, 377, 1096, 1097,
	0, 1057, 0, 379, 380, 1131, 1089, 1132, 381, 382,
	383, 1133, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 1125, 1134,
	395, 396, 1135, 0, 397, 0, 0, 0, 398, 399,
	1080, 1079, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 1136, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 1137, 430, 1020, 258, 1138, 440,
	441, 1042, 1090, 442, 1104, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 1139, 453, 1140, 1119, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 1120, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 1100, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 1141, 503, 504, 505, 506, 1030, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 1083, 528, 529,
	512, 513, 530, 531, 1142, 532, 533, 534, 535, 536,
	537, 1098, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 1145, 544, 545, 546, 547, 1121, 550, 0,
	551, 552, 1018, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 1110, 1111, 1112, 1113,
	0, 570, 0, 562, 563, 564, 1122, 565, 1123, 1040,
	566, 567, 568, 569, 0, 571, 572, 0, 1024, 573,
	574, 575, 577, 578, 576, 579, 1084, 580, 0, 0,
	581, 582, 583, 639, 1107, 1144, 0, 585, 584, 586,
	642, 0, 0, 0, 0, 587, 588, 643, 589, 590,
	591, 1021, 0, 0, 0, 0, 0, 0, 0, 1017,
	0, 0, 0, 0, 0, 0, 1015, 1016, 0, 0,
	0, 0, 0, 0, 0, 1046, 0, 0, 1400, 1044,
	1062, 1034, 1035, 1036, 1032, 1033, 1045, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 1086, 1050, 0, 0, 0, 268, 269, 1126,
	270, 271, 272, 273, 274, 275, 593, 1099, 0, 276,
	1106, 277, 1105, 0, 1116, 278, 279, 280, 281, 282,
	283, 1052, 1085, 1019, 284, 1146, 1147, 600, 0, 285,
	286, 1092, 0, 1073, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 1127, 309, 310, 1076, 1074, 1075, 1082, 1078,
	1077, 1081, 311, 312, 313, 314, 1109, 315, 1103, 1102,
	1023, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 1094, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 1029, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 1117, 1118, 345,
	1041, 256, 0, 0, 0, 0, 0, 346, 347, 348,
	1101, 0, 0, 0, 349, 0, 350, 0, 0, 1128,
	351, 352, 1114, 1115, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 1124, 0, 1051, 362, 0, 363,
	364, 365, 366, 367, 1399, 1088, 1091, 443, 1130, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 257,
	374, 375, 376, 378, 0, 1129, 377, 1096, 1097, 0,
	1057, 0, 379, 380, 1131, 1089, 1132, 381, 382, 383,
	1133, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 1125, 1134, 395,
	396, 1135, 0, 397, 0, 0, 0, 398, 399, 1080,
	1079, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	1136, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 1137, 430, 1020, 258, 1138, 440, 441,
	1042, 1090, 442, 1104, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	1139, 453, 1140, 1119, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 1120, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 1100, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	1141, 503, 504, 505, 506, 1030, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 1083, 528, 529, 512,
	513, 530, 531, 1142, 532, 533, 534, 535, 536, 537,
	1098, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 1145, 544, 545, 546, 547, 1121, 550, 0, 551,
	552, 1018, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 1110, 1111, 1112, 1113, 0,
	570, 0, 562, 563, 564, 1122, 565, 1123, 1040, 566,
	567, 568, 569, 0, 571, 572, 0, 1024, 573, 574,
	575, 577, 578, 576, 579, 1084, 580, 0, 0, 581,
	582, 583, 639, 1107, 1144, 0, 585, 584, 586, 642,
	0, 0, 0, 0, 587, 588, 643, 589, 590, 591,
	1021, 0, 0, 0, 0, 0, 0, 0, 1017, 0,
	0, 0, 0, 0, 0, 1015, 1016, 0, 0, 0,
	0, 0, 0, 0, 1046, 0, 0, 1393, 1044, 1062,
	1034, 1035, 1036, 1032, 1033, 1045, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 1086, 1050, 0, 0, 0, 268, 269, 1126, 270,
	271, 272, 273, 274, 275, 593, 1099, 0, 276, 1106,
	277, 1105, 0, 1116, 278, 279, 280, 281, 282, 283,
	1052, 1085, 1019, 284, 1146, 1147, 600, 0, 285, 286,
	1092, 0, 1073, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 1127, 309, 310, 1076, 1074, 1075, 1082, 1078, 1077,
	1081, 311, 312, 313, 314, 1109, 315, 1103, 1102, 1023,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 1094, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 1029, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 1117, 1118, 345, 1041,
	256, 0, 0, 0, 0, 0, 346, 347, 348, 1101,
	0, 0, 0, 349, 0, 350, 0, 0, 1128, 351,
	352, 1114, 1115, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 1124, 0, 1051, 362, 0, 363, 364,
	365, 366, 367, 1087, 1088, 1091, 443, 1130, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 257, 374,
	375, 376, 378, 0, 1129, 377, 1096, 1097, 0, 1057,
	0, 379, 380, 1131, 1089, 1132, 381, 382, 383, 1133,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 1125, 1134, 395, 396,
	1135, 0, 397, 0, 0, 0, 398, 399, 1080, 1079,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 1136,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 1137, 430, 1020, 258, 1138, 440, 441, 1042,
	1090, 442, 1104, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 1139,
	453, 1140, 1119, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 1120, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 1100, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 1141,
	503, 504, 505, 506, 1030, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 1083, 528, 529, 512, 513,
	530, 531, 1142, 532, 533, 534, 535, 536, 537, 1098,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	1145, 544, 545, 546, 547, 1121, 550, 0, 551, 552,
	1018, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 1110, 1111, 1112, 1113, 0, 570,
	0, 562, 563, 564, 1122, 565, 1123, 1040, 566, 567,
	568, 569, 0, 571, 572, 0, 1024, 573, 574, 575,
	577, 578, 576, 579, 1084, 580, 0, 0, 581, 582,
	583, 639, 1107, 1144, 0, 585, 584, 586, 642, 0,
	0, 0, 0, 587, 588, 643, 589, 590, 591, 1021,
	0, 0, 0, 0, 0, 0, 0, 1017, 0, 0,
	0, 0, 0, 0, 1015, 1016, 1062, 1034, 1035, 1036,
	1032, 1033, 1045, 1046, 0, 0, 0, 1044, 0, 0,
	0, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 1086, 1050,
	0, 0, 0, 268, 269, 1126, 270, 271, 272, 273,
	274, 275, 593, 1099, 0, 276, 1106, 277, 1105, 0,
	1116, 278, 279, 280, 281, 282, 283, 1052, 1085, 1019,
	284, 1146, 1147, 600, 0, 285, 286, 1092, 0, 1073,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 1127, 309,
	310, 1076, 1074, 1075, 1082, 1078, 1077, 1081, 311, 312,
	313, 314, 1109, 315, 1103, 1102, 1023, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	1094, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 1029, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 1117, 1118, 345, 1041, 256, 0, 0,
	0, 0, 0, 346, 347, 348, 1101, 0, 0, 0,
	349, 0, 350, 0, 0, 1128, 351, 352, 1114, 1115,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	1124, 0, 1051, 362, 0, 363, 364, 365, 366, 367,
	1087, 1088, 1091, 443, 1130, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 257, 374, 375, 376, 378,
	0, 1129, 377, 1096, 1097, 0, 1057, 0, 379, 380,
	1131, 1089, 1132, 381, 382, 383, 1133, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 1125, 1134, 395, 396, 1135, 0, 397,
	0, 0, 0, 398, 399, 1080, 1079, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 1136, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 1137,
	430, 1020, 258, 1138, 440, 441, 1042, 1090, 442, 1104,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 1139, 453, 1140, 1119,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 1120, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 1100, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 1141, 503, 504, 505,
	506, 1030, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 1083, 528, 529, 512, 513, 530, 531, 1142,
	532, 533, 534, 535, 536, 537, 1098, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 1145, 544, 545,
	546, 547, 1121, 550, 0, 551, 552, 1018, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 1110, 1111, 1112, 1113, 0, 570, 0, 562, 563,
	564, 1122, 565, 1123, 1040, 566, 567, 568, 569, 0,
	571, 572, 0, 1024, 573, 574, 575, 577, 578, 576,
	579, 1084, 580, 0, 0, 581, 582, 583, 639, 1107,
	1144, 0, 585, 584, 586, 642, 0, 0, 0, 0,
	587, 588, 643, 589, 590, 591, 1021, 0, 0, 0,
	0, 0, 0, 0, 1017, 0, 0, 0, 0, 0,
	0, 1015, 1016, 1062, 1034, 1035, 1036, 1032, 1033, 1045,
	1046, 0, 0, 0, 1044, 0, 0, 0, 0, 0,
	259, 261, 260, 262, 263, 264, 265, 0, 266, 267,
	0, 0, 0, 0, 0, 1086, 1050, 0, 0, 0,
	268, 269, 1126, 270, 271, 272, 273, 274, 275, 593,
	1099, 0, 276, 1106, 277, 1105, 0, 1116, 278, 279,
	280, 281, 282, 283, 1052, 1085, 1019, 284, 1146, 1147,
	600, 0, 285, 286, 1092, 0, 1073, 0, 287, 288,
	289, 290, 291, 292, 293, 0, 0, 295, 296, 297,
	294, 298, 0, 299, 0, 300, 301, 302, 303, 304,
	305, 0, 306, 307, 308, 1127, 309, 4317, 1076, 1074,
	1075, 1082, 1078, 1077, 1081, 311, 312, 313, 314, 1109,
	315, 1103, 1102, 1023, 319, 316, 317, 0, 320, 318,
	0, 321, 322, 323, 0, 0, 324, 1094, 326, 0,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 1029,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	1117, 1118, 345, 1041, 256, 0, 0, 0, 0, 0,
	346, 347, 348, 1101, 0, 0, 0, 349, 0, 350,
	0, 0, 1128, 351, 352, 1114, 1115, 353, 354, 355,
	356, 357, 358, 359, 360, 0, 361, 1124, 0, 1051,
	362, 0, 363, 364, 365, 366, 367, 1087, 1088, 1091,
	443, 1130, 368, 369, 0, 370, 371, 372, 373, 0,
	0, 0, 257, 374, 375, 376, 378, 0, 1129, 377,
	1096, 1097, 0, 1057, 0, 379, 380, 1131, 1089, 1132,
	381, 382, 383, 1133, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 0, 391, 393, 392, 0, 394,
	1125, 1134, 395, 396, 1135, 0, 397, 0, 0, 0,
	398, 399, 1080, 1079, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 1136, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 1137, 430, 1020, 258,
	1138, 440, 441, 1042, 1090, 442, 1104, 444, 445, 0,
	0, 446, 0, 0, 0, 448, 449, 450, 0, 0,
	451, 452, 622, 1139, 453, 1140, 1119, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 0, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 1120,
	472, 627, 473, 474, 0, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 1100, 484, 486, 485, 487,
	0, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 0,
	500, 501, 502, 1141, 503, 504, 505, 506, 1030, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 0, 523, 524, 522, 525, 526, 527, 1083,
	528, 529, 512, 513, 530, 531, 1142, 532, 533, 534,
	535, 536, 537, 1098, 0, 538, 0, 539, 540, 541,
	542, 514, 543, 548, 1145, 544, 545, 546, 547, 1121,
	550, 0, 551, 552, 1018, 549, 0, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 0, 561, 1110, 1111,
	1112, 1113, 0, 570, 0, 562, 563, 564, 1122, 565,
	1123, 1040, 566, 567, 568, 569, 0, 4316, 572, 0,
	1024, 573, 574, 575, 577, 578, 576, 579, 1084, 580,
	0, 0, 581, 582, 583, 639, 1107, 1144, 0, 585,
	584, 586, 642, 0, 0, 0, 0, 587, 588, 643,
	589, 590, 591, 1021, 0, 0, 0, 0, 0, 0,
	0, 1017, 0, 0, 0, 0, 0, 0, 1015, 1016,
	1062, 1034, 1035, 1036, 1032, 1033, 1045, 1046, 0, 0,
	0, 1044, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 1086, 1050, 0, 0, 0, 268, 269, 1126,
	270, 271, 272, 273, 274, 275, 4315, 1099, 0, 276,
	1106, 277, 1105, 0, 1116, 278, 279, 280, 281, 282,
	283, 1052, 1085, 1019, 284, 1146, 1147, 600, 0, 285,
	286, 1092, 0, 1073, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 1127, 309, 4317, 1076, 1074, 1075, 1082, 1078,
	1077, 1081, 311, 312, 313, 314, 1109, 315, 1103, 1102,
	1023, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 1094, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 1029, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 1117, 1118, 345,
	1041, 256, 0, 0, 0, 0, 0, 346, 347, 348,
	1101, 0, 0, 0, 349, 0, 350, 0, 0, 1128,
	351, 352, 1114, 1115, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 1124, 0, 1051, 362, 0, 363,
	364, 365, 366, 367, 1087, 1088, 1091, 443, 1130, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 257,
	374, 375, 376, 378, 0, 1129, 377, 1096, 1097, 0,
	1057, 0, 379, 380, 1131, 1089, 1132, 381, 382, 383,
	1133, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 1125, 1134, 395,
	396, 1135, 0, 397, 0, 0, 0, 398, 399, 1080,
	1079, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	1136, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 1137, 430, 1020, 258, 1138, 440, 441,
	1042, 1090, 442, 1104, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	1139, 453, 1140, 1119, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 1120, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 1100, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	1141, 503, 504, 505, 506, 1030, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 1083, 528, 529, 512,
	513, 530, 531, 1142, 532, 533, 534, 535, 536, 537,
	1098, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 1145, 544, 545, 546, 547, 1121, 550, 0, 551,
	552, 1018, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 1110, 1111, 1112, 1113, 0,
	570, 0, 562, 563, 564, 1122, 565, 1123, 1040, 566,
	567, 568, 569, 0, 4316, 572, 0, 1024, 573, 574,
	575, 577, 578, 576, 579, 1084, 580, 0, 0, 581,
	582, 583, 639, 1107, 1144, 0, 585, 584, 586, 642,
	0, 0, 0, 0, 587, 588, 643, 589, 590, 591,
	1021, 0, 0, 0, 0, 0, 0, 0, 1017, 0,
	0, 0, 0, 0, 0, 1015, 1016, 1062, 1034, 1035,
	1036, 1032, 1033, 1045, 1046, 0, 0, 0, 1044, 0,
	0, 0, 0, 0, 259, 261, 260, 262, 263, 264,
	265, 0, 266, 267, 0, 0, 0, 0, 0, 1086,
	1050, 0, 0, 0, 268, 269, 1126, 270, 271, 272,
	273, 274, 275, 593, 1099, 0, 276, 1106, 277, 1105,
	0, 1116, 278, 279, 280, 281, 282, 283, 1052, 1085,
	1019, 284, 1146, 1147, 600, 0, 285, 286, 1092, 0,
	1073, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 1127,
	3998, 310, 1076, 1074, 1075, 1082, 1078, 1077, 1081, 311,
	312, 313, 314, 1109, 315, 1103, 1102, 1023, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 0, 0,
	324, 1094, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 1029, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 1117, 1118, 345, 1041, 256, 0,
	0, 0, 0, 0, 346, 347, 348, 1101, 0, 0,
	0, 349, 0, 350, 0, 0, 1128, 351, 352, 1114,
	1115, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 1124, 0, 3999, 362, 0, 363, 364, 365, 366,
	367, 1087, 1088, 1091, 443, 1130, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 257, 374, 375, 376,
	378, 0, 1129, 377, 1096, 1097, 0, 1057, 0, 379,
	380, 1131, 1089, 1132, 381, 382, 383, 1133, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 0, 391,
	393, 392, 0, 394, 1125, 1134, 395, 396, 1135, 0,
	397, 0, 0, 0, 398, 399, 1080, 1079, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 1136, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	1137, 430, 1020, 258, 1138, 440, 441, 1042, 1090, 442,
	1104, 444, 445, 0, 0, 446, 0, 0, 0, 448,
	449, 450, 0, 0, 451, 452, 622, 1139, 453, 1140,
	1119, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 1120, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 1100,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 1141, 503, 504,
	505, 3997, 1030, 507, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 0, 523, 524, 522,
	525, 526, 527, 1083, 528, 529, 512, 513, 530, 531,
	1142, 532, 533, 534, 535, 536, 537, 1098, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 1145, 544,
	545, 546, 547, 1121, 550, 0, 551, 552, 1018, 549,
	0, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	0, 561, 1110, 1111, 1112, 1113, 0, 570, 0, 562,
	563, 564, 1122, 565, 1123, 1040, 566, 567, 568, 569,
	0, 571, 572, 0, 1024, 573, 574, 575, 577, 578,
	576, 579, 1084, 580, 0, 0, 581, 582, 583, 639,
	1107, 1144, 0, 585, 584, 586, 642, 0, 0, 0,
	0, 587, 588, 643, 589, 590, 591, 1021, 0, 0,
	0, 0, 0, 0, 0, 1017, 0, 0, 0, 0,
	0, 0, 1015, 1016, 1062, 1034, 1035, 1036, 2933, 2934,
	1045, 1046, 0, 0, 0, 1044, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 1086, 1050, 0, 0,
	0, 268, 269, 1126, 270, 271, 272, 273, 274, 275,
	593, 1099, 0, 276, 1106, 277, 1105, 0, 1116, 278,
	279, 280, 281, 282, 283, 1052, 1085, 1019, 284, 1146,
	1147, 600, 0, 285, 286, 1092, 0, 1073, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 1127, 309, 310, 1076,
	1074, 1075, 1082, 1078, 1077, 1081, 311, 312, 313, 314,
	1109, 315, 1103, 1102, 1023, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 1094, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	1029, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 1117, 1118, 345, 1041, 256, 0, 0, 0, 0,
	0, 346, 347, 348, 1101, 0, 0, 0, 349, 0,
	350, 0, 0, 1128, 351, 352, 1114, 1115, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 1124, 0,
	1051, 362, 0, 363, 364, 365, 366, 367, 1087, 1088,
	1091, 443, 1130, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 257, 374, 375, 376, 378, 0, 1129,
	377, 1096, 1097, 0, 1057, 0, 379, 380, 1131, 1089,
	1132, 381, 382, 383, 1133, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 1125, 1134, 395, 396, 1135, 0, 397, 0, 0,
	0, 398, 399, 1080, 1079, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 1136, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 1137, 430, 1020,
	258, 1138, 440, 441, 1042, 1090, 442, 1104, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 1139, 453, 1140, 1119, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	1120, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 1100, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 1141, 503, 504, 505, 506, 1030,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	1083, 528, 529, 512, 513, 530, 531, 1142, 532, 533,
	534, 535, 536, 537, 1098, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 1145, 544, 545, 546, 547,
	1121, 550, 0, 551, 552, 1018, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 1110,
	1111, 1112, 1113, 0, 570, 0, 562, 563, 564, 1122,
	565, 1123, 1040, 566, 567, 568, 569, 0, 571, 572,
	0, 1024, 573, 574, 575, 577, 578, 576, 579, 1084,
	580, 0, 0, 581, 582, 583, 639, 1107, 1144, 0,
	585, 584, 586, 642, 0, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 1021, 0, 0, 0, 0, 0,
	0, 0, 1017, 0, 0, 0, 0, 0, 0, 1015,
	1016, 1062, 1034, 1035, 1036, 2931, 2932, 1045, 1046, 0,
	0, 0, 1044, 0, 0, 0, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 0, 0,
	0, 0, 0, 1086, 1050, 0, 0, 0, 268, 269,
	1126, 270, 271, 272, 273, 274, 275, 593, 1099, 0,
	276, 1106, 277, 1105, 0, 1116, 278, 279, 280, 281,
	282, 283, 1052, 1085, 1019, 284, 1146, 1147, 600, 0,
	285, 286, 1092, 0, 1073, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 1127, 309, 310, 1076, 1074, 1075, 1082,
	1078, 1077, 1081, 311, 312, 313, 314, 1109, 315, 1103,
	1102, 1023, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 1094, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 1029, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 1117, 1118,
	345, 1041, 256, 0, 0, 0, 0, 0, 346, 347,
	348, 1101, 0, 0, 0, 349, 0, 350, 0, 0,
	1128, 351, 352, 1114, 1115, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 1124, 0, 1051, 362, 0,
	363, 364, 365, 366, 367, 1087, 1088, 1091, 443, 1130,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 0, 1129, 377, 1096, 1097,
	0, 1057, 0, 379, 380, 1131, 1089, 1132, 381, 382,
	383, 1133, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 1125, 1134,
	395, 396, 1135, 0, 397, 0, 0, 0, 398, 399,
	1080, 1079, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 1136, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 1137, 430, 1020, 258, 1138, 440,
	441, 1042, 1090, 442, 1104, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 1139, 453, 1140, 1119, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 1120, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 1100, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 1141, 503, 504, 505, 506, 1030, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 1083, 528, 529,
	512, 513, 530, 531, 1142, 532, 533, 534, 535, 536,
	537, 1098, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 1145, 544, 545, 546, 547, 1121, 550, 0,
	551, 552, 1018, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 1110, 1111, 1112, 1113,
	0, 570, 0, 562, 563, 564, 1122, 565, 1123, 1040,
	566, 567, 568, 569, 0, 571, 572, 0, 1024, 573,
	574, 575, 577, 578, 576, 579, 1084, 580, 0, 0,
	581, 582, 583, 639, 1107, 1144, 0, 585, 584, 586,
	642, 0, 0, 0, 0, 587, 588, 643, 589, 590,
	591, 1021, 0, 0, 0, 0, 0, 0, 0, 1017,
	0, 0, 0, 0, 0, 0, 1015, 1016, 1062, 1034,
	1035, 1036, 1032, 1033, 1045, 1046, 0, 0, 0, 1044,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	1086, 1050, 0, 0, 0, 268, 269, 1126, 270, 271,
	272, 273, 274, 275, 593, 1099, 0, 276, 1106, 277,
	1105, 0, 1116, 278, 279, 280, 281, 282, 283, 1052,
	1085, 1019, 284, 1146, 1147, 600, 0, 285, 286, 1092,
	0, 1073, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	1127, 309, 310, 1076, 1074, 1075, 1082, 1078, 1077, 1081,
	311, 312, 313, 314, 1109, 315, 1103, 1102, 1023, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 1094, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 1029, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 1117, 1118, 345, 1041, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 1101, 0,
	0, 0, 349, 0, 350, 0, 0, 1128, 351, 352,
	1114, 1115, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 1124, 0, 1051, 362, 0, 363, 364, 365,
	366, 367, 1087, 1088, 1091, 443, 1130, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 257, 374, 375,
	376, 378, 0, 1129, 377, 1096, 1097, 0, 1057, 0,
	379, 380, 1131, 1089, 1132, 381, 382, 383, 1133, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 1125, 1134, 395, 396, 1135,
	0, 397, 0, 0, 0, 398, 399, 1080, 1079, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 1136, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 1137, 430, 1020, 258, 1138, 440, 441, 1042, 1090,
	442, 1104, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 1139, 453,
	1140, 1119, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 1120, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	1100, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 1141, 503,
	504, 505, 506, 1030, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 1083, 528, 529, 512, 513, 530,
	531, 1142, 532, 533, 534, 535, 536, 537, 1098, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 1145,
	544, 545, 546, 547, 1121, 550, 0, 551, 552, 1018,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 1110, 1111, 1112, 1113, 0, 570, 0,
	562, 563, 564, 1122, 565, 1123, 1040, 566, 567, 568,
	569, 0, 571, 572, 0, 1024, 573, 574, 575, 577,
	578, 576, 579, 1084, 580, 0, 0, 581, 582, 583,
	639, 1107, 1144, 0, 585, 584, 586, 642, 0, 0,
	0, 0, 587, 588, 643, 589, 590, 591, 1021, 0,
	0, 0, 0, 0, 0, 0, 1017, 0, 0, 0,
	0, 0, 0, 2284, 2285, 1062, 1034, 1035, 1036, 1032,
	1033, 1045, 1046, 0, 0, 0, 1044, 0, 0, 0,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 1086, 1050, 0,
	0, 0, 268, 269, 1126, 270, 271, 272, 273, 274,
	275, 593, 1099, 0, 276, 1106, 277, 1105, 0, 1116,
	278, 279, 280, 281, 282, 283, 1052, 1085, 0, 284,
	1146, 1147, 600, 0, 285, 286, 1092, 0, 1073, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 1127, 309, 310,
	1076, 1074, 1075, 1082, 1078, 1077, 1081, 311, 312, 313,
	314, 1109, 315, 1103, 1102, 0, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 1094,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 1029, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 1117, 1118, 345, 1041, 256, 0, 0, 0,
	0, 0, 346, 347, 348, 1101, 0, 0, 0, 349,
	0, 350, 0, 0, 1128, 351, 352, 1114, 1115, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 1124,
	0, 1051, 362, 0, 363, 364, 365, 366, 367, 1087,
	1088, 1091, 443, 1130, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 257, 374, 375, 376, 378, 0,
	1129, 377, 1096, 1097, 0, 1057, 0, 379, 380, 1131,
	1089, 1132, 381, 382, 383, 1133, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 1125, 1134, 395, 396, 1135, 0, 397, 0,
	0, 0, 398, 399, 1080, 1079, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 1136, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 1137, 430,
	0, 258, 1138, 440, 441, 1042, 1090, 442, 1104, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 1139, 453, 1140, 1119, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 1120, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 1100, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 1141, 503, 504, 505, 506,
	1030, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 1083, 528, 529, 512, 513, 530, 531, 1142, 532,
	533, 534, 535, 536, 537, 1098, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 1145, 544, 545, 546,
	547, 1121, 550, 0, 551, 552, 0, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	1110, 1111, 1112, 1113, 0, 570, 0, 562, 563, 564,
	1122, 565, 1123, 1040, 566, 567, 568, 569, 0, 571,
	572, 0, 0, 573, 574, 575, 577, 578, 576, 579,
	1084, 580, 0, 0, 581, 582, 583, 639, 1107, 1144,
	0, 585, 584, 586, 642, 0, 0, 0, 0, 587,
	588, 643, 589, 590, 591, 1062, 1034, 1035, 1036, 1032,
	1033, 1045, 0, 2504, 0, 0, 0, 0, 0, 0,
	2502, 2503, 259, 261, 260, 262, 263, 264, 265, 1046,
	266, 267, 0, 1044, 0, 0, 0, 1086, 1050, 0,
	0, 0, 268, 269, 1126, 270, 271, 272, 273, 274,
	275, 593, 1099, 0, 276, 1106, 277, 1105, 0, 1116,
	278, 279, 280, 281, 282, 283, 1052, 1085, 0, 284,
	1146, 1147, 600, 0, 285, 286, 1092, 0, 1073, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 1127, 309, 310,
	1076, 1074, 1075, 1082, 1078, 1077, 1081, 311, 312, 313,
	314, 1109, 315, 1103, 1102, 0, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 1094,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 1029, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 1117, 1118, 345, 1041, 256, 0, 0, 0,
	0, 0, 346, 347, 348, 1101, 0, 0, 0, 349,
	0, 350, 0, 0, 1128, 351, 352, 1114, 1115, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 1124,
	0, 1051, 362, 0, 363, 364, 365, 366, 367, 1087,
	1088, 1091, 443, 1130, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 257, 374, 375, 376, 378, 0,
	1129, 377, 1096, 1097, 0, 1057, 0, 379, 380, 1131,
	1089, 1132, 381, 382, 383, 1133, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 1125, 1134, 395, 396, 1135, 0, 397, 0,
	0, 0, 398, 399, 1080, 1079, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 1136, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 1137, 430,
	0, 258, 1138, 440, 441, 1042, 1090, 442, 1104, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 1139, 453, 1140, 1119, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 1120, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 1100, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 1141, 503, 504, 505, 506,
	2926, 2927, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 1083, 528, 529, 512, 513, 530, 531, 1142, 532,
	533, 534, 535, 536, 537, 1098, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 1145, 544, 545, 546,
	547, 1121, 550, 0, 551, 552, 0, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	1110, 1111, 1112, 1113, 0, 570, 0, 562, 563, 564,
	1122, 565, 1123, 1040, 566, 567, 568, 569, 0, 571,
	572, 0, 0, 573, 574, 575, 577, 578, 576, 579,
	1084, 580, 0, 0, 581, 582, 583, 639, 1107, 1144,
	0, 585, 584, 586, 642, 0, 0, 0, 0, 587,
	588, 643, 589, 590, 591, 1062, 1034, 1035, 1036, 1032,
	1033, 1045, 0, 0, 0, 0, 0, 0, 0, 0,
	1983, 1984, 259, 261, 260, 262, 263, 264, 265, 1046,
	266, 267, 0, 1044, 0, 0, 0, 1086, 1050, 0,
	0, 0, 268, 269, 1126, 270, 271, 272, 273, 274,
	275, 0, 1099, 0, 276, 1106, 277, 1105, 0, 1116,
	278, 279, 280, 281, 282, 283, 1052, 1085, 1019, 284,
	1146, 1147, 600, 0, 285, 286, 1092, 0, 1073, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 1127, 309, 4317,
	1076, 1074, 1075, 1082, 1078, 1077, 1081, 311, 312, 313,
	314, 1109, 315, 1103, 1102, 1023, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 1094,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 1029, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 1117, 1118, 345, 1041, 256, 0, 0, 0,
	0, 0, 346, 347, 348, 1101, 0, 0, 0, 349,
	0, 350, 0, 0, 1128, 351, 352, 1114, 1115, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 1124,
	0, 1051, 362, 0, 363, 364, 365, 366, 367, 1087,
	1088, 1091, 443, 0, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 257, 374, 375, 376, 378, 0,
	1129, 377, 1096, 1097, 0, 1057, 0, 379, 380, 0,
	1089, 0, 381, 382, 383, 1133, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 1125, 1134, 395, 396, 0, 0, 397, 0,
	0, 0, 398, 399, 1080, 1079, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 1136, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 1137, 430,
	1020, 258, 0, 440, 441, 1042, 1090, 442, 1104, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 1139, 453, 1140, 1119, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 1120, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 1100, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 1141, 503, 504, 505, 506,
	1030, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 1083, 528, 529, 512, 513, 530, 531, 0, 532,
	533, 534, 535, 536, 537, 1098, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 1145, 544, 545, 546,
	547, 1121, 550, 0, 551, 552, 1018, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	1110, 1111, 1112, 1113, 0, 570, 0, 562, 563, 564,
	1122, 565, 1123, 1040, 566, 567, 568, 569, 0, 4316,
	572, 0, 1024, 573, 574, 575, 577, 578, 576, 579,
	1084, 580, 0, 0, 581, 582, 583, 639, 1107, 1144,
	0, 585, 584, 586, 642, 0, 0, 0, 0, 587,
	588, 643, 589, 590, 591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1008, 0, 1184, 0, 0,
	1015, 1016, 0, 0, 0, 0, 0, 0, 0, 1046,
	0, 0, 0, 1044, 259, 261, 260, 262, 263, 264,
	265, 0, 266, 267, 0, 0, 0, 0, 0, 1086,
	0, 0, 0, 0, 268, 269, 1126, 270, 271, 272,
	273, 274, 275, 593, 594, 0, 276, 595, 277, 596,
	0, 597, 278, 279, 280, 281, 282, 283, 0, 1085,
	0, 284, 598, 599, 600, 0, 285, 286, 1092, 0,
	1073, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 1127,
	309, 310, 1076, 1074, 1075, 1082, 1078, 1077, 1081, 311,
	312, 313, 314, 0, 315, 602, 603, 0, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 0, 0,
	324, 325, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 604, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 1117, 1118, 345, 0, 256, 0,
	0, 0, 0, 0, 346, 347, 348, 607, 0, 0,
	0, 349, 0, 350, 0, 0, 1128, 351, 352, 608,
	609, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 1124, 0, 611, 362, 0, 363, 364, 365, 366,
	367, 1087, 1088, 1091, 443, 1130, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 257, 374, 375, 376,
	378, 0, 1129, 377, 615, 616, 0, 617, 0, 379,
	380, 1131, 1089, 1132, 381, 382, 383, 1133, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 1170, 391,
	393, 392, 0, 394, 1125, 1134, 395, 396, 1135, 0,
	397, 0, 0, 0, 398, 399, 1080, 1079, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 1136, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	1137, 430, 0, 258, 1138, 440, 441, 0, 1090, 442,
	621, 444, 445, 0, 0, 446, 0, 0, 1176, 448,
	449, 450, 0, 0, 451, 452, 622, 1139, 453, 1140,
	1119, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 1120, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 628,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 1141, 503, 504,
	505, 506, 629, 1178, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 219, 523, 524, 522,
	525, 526, 527, 1083, 528, 529, 512, 513, 530, 531,
	1142, 532, 533, 534, 535, 536, 537, 630, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 631, 544,
	545, 546, 547, 1121, 550, 0, 551, 552, 0, 549,
	221, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	0, 561, 633, 634, 635, 636, 0, 570, 0, 562,
	563, 564, 1122, 565, 1123, 0, 566, 567, 568, 569,
	0, 571, 572, 0, 0, 573, 574, 575, 577, 578,
	576, 579, 1084, 580, 0, 0, 581, 582, 583, 1534,
	640, 641, 0, 585, 584, 586, 642, 0, 1184, 0,
	213, 587, 588, 643, 589, 590, 591, 0, 0, 214,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 1174,
	1086, 1864, 0, 0, 0, 268, 269, 1126, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	1085, 0, 284, 598, 599, 600, 0, 285, 286, 1092,
	0, 1073, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	1127, 309, 310, 1076, 1074, 1075, 1082, 1078, 1077, 1081,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 1117, 1118, 345, 0, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 1128, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 1124, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 1087, 1088, 1091, 443, 1130, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 257, 374, 375,
	376, 378, 0, 1129, 377, 615, 616, 0, 617, 0,
	379, 380, 1131, 1089, 1132, 381, 382, 383, 1133, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 1170,
	391, 393, 392, 0, 394, 1125, 1134, 395, 396, 1135,
	0, 397, 0, 0, 0, 398, 399, 1080, 1079, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 1136, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 1137, 430, 0, 258, 1138, 440, 441, 0, 1090,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 1176,
	448, 449, 450, 0, 0, 451, 452, 622, 1139, 453,
	1140, 1119, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 1120, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 1141, 503,
	504, 505, 506, 629, 1178, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 219, 523, 524,
	522, 525, 526, 527, 1083, 528, 529, 512, 513, 530,
	531, 1142, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 1121, 550, 0, 551, 552, 0,
	549, 221, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 1122, 565, 1123, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 1084, 580, 0, 0, 581, 582, 583,
	1534, 640, 641, 0, 585, 584, 586, 642, 0, 0,
	0, 213, 587, 588, 643, 589, 590, 591, 0, 0,
	214, 0, 0, 0, 3110, 0, 1184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1174, 0, 1864, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 1086, 0,
	0, 0, 0, 268, 269, 1126, 270, 271, 272, 273,
	274, 275, 593, 594, 0, 276, 595, 277, 596, 0,
	597, 278, 279, 280, 281, 282, 283, 0, 1085, 0,
	284, 598, 599, 600, 0, 285, 286, 1092, 0, 1073,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 1127, 309,
	310, 1076, 1074, 1075, 1082, 1078, 1077, 1081, 311, 312,
	313, 314, 0, 315, 602, 603, 0, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	325, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 604, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 1117, 1118, 345, 0, 256, 0, 0,
	0, 0, 0, 346, 347, 348, 607, 0, 0, 0,
	349, 0, 350, 0, 0, 1128, 351, 352, 608, 609,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	1124, 0, 611, 362, 0, 363, 364, 365, 366, 367,
	1087, 1088, 1091, 443, 1130, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 257, 374, 375, 376, 378,
	0, 1129, 377, 615, 616, 0, 617, 0, 379, 380,
	1131, 1089, 1132, 381, 382, 383, 1133, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 1170, 391, 393,
	392, 0, 394, 1125, 1134, 395, 396, 1135, 0, 397,
	0, 0, 0, 398, 399, 1080, 1079, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 1136, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 1137,
	430, 0, 258, 1138, 440, 441, 0, 1090, 442, 621,
	444, 445, 0, 0, 446, 0, 0, 1176, 448, 449,
	450, 0, 0, 451, 452, 622, 1139, 453, 1140, 1119,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 1120, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 628, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 1141, 503, 504, 505,
	506, 629, 1178, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 1083, 528, 529, 512, 513, 530, 531, 1142,
	532, 533, 534, 535, 536, 537, 630, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 631, 544, 545,
	546, 547, 1121, 550, 0, 551, 552, 0, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 633, 634, 635, 636, 0, 570, 0, 562, 563,
	564, 1122, 565, 1123, 0, 566, 567, 568, 569, 0,
	571, 572, 0, 0, 573, 574, 575, 577, 578, 576,
	579, 1084, 580, 0, 0, 581, 582, 583, 639, 640,
	641, 0, 585, 584, 586, 642, 0, 1166, 0, 1184,
	587, 588, 643, 589, 590, 591, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 1174, 0,
	1172, 1086, 0, 0, 0, 0, 268, 269, 1126, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 1085, 0, 284, 598, 599, 600, 0, 285, 286,
	1092, 0, 1073, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 1127, 309, 310, 1076, 1074, 1075, 1082, 1078, 1077,
	1081, 311, 312, 313, 314, 0, 315, 602, 603, 0,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 1117, 1118, 345, 0,
	256, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 0, 0, 1128, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 1124, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 1087, 1088, 1091, 443, 1130, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 257, 374,
	375, 376, 378, 0, 1129, 377, 615, 616, 0, 617,
	0, 379, 380, 1131, 1089, 1132, 381, 382, 383, 1133,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	1170, 391, 393, 392, 0, 394, 1125, 1134, 395, 396,
	1135, 0, 397, 0, 0, 0, 398, 399, 1080, 1079,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 1136,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 1137, 430, 0, 258, 1138, 440, 441, 0,
	1090, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	1176, 448, 449, 450, 0, 0, 451, 452, 622, 1139,
	453, 1140, 1119, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 1120, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 1141,
	503, 504, 505, 506, 629, 1178, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 1083, 528, 529, 512, 513,
	530, 531, 1142, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 1121, 550, 0, 551, 552,
	0, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 1122, 565, 1123, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 0, 573, 574, 575,
	577, 578, 576, 579, 1084, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 0, 585, 584, 586, 642, 0,
	1184, 0, 0, 587, 588, 643, 589, 590, 591, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 1174, 1086, 1172, 0, 0, 0, 268, 269, 1126,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 1085, 0, 284, 598, 599, 600, 0, 285,
	286, 1092, 0, 1073, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 1127, 309, 310, 1076, 1074, 1075, 1082, 1078,
	1077, 1081, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 1117, 1118, 345,
	0, 256, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 1128,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 1124, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 1087, 1088, 1091, 443, 1130, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 257,
	374, 375, 376, 378, 0, 1129, 377, 615, 616, 0,
	617, 0, 379, 380, 1131, 1089, 1132, 381, 382, 383,
	1133, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 1170, 391, 393, 392, 0, 394, 1125, 1134, 395,
	396, 1135, 0, 397, 0, 0, 0, 398, 399, 1080,
	1079, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	1136, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 1137, 430, 0, 258, 1138, 440, 441,
	0, 1090, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 1176, 448, 449, 450, 0, 0, 451, 452, 622,
	1139, 453, 1140, 1119, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 1120, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	1141, 503, 504, 505, 506, 629, 1178, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 1083, 528, 529, 512,
	513, 530, 531, 1142, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 1121, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 1122, 565, 1123, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 1084, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 0, 585, 584, 586, 642,
	0, 1184, 0, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 0, 0,
	0, 0, 1174, 1086, 1172, 0, 0, 0, 268, 269,
	1126, 270, 271, 272, 273, 274, 275, 593, 594, 0,
	276, 595, 277, 596, 0, 597, 278, 279, 280, 281,
	282, 283, 0, 1085, 0, 284, 598, 599, 600, 0,
	285, 286, 1092, 0, 1073, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 1127, 309, 310, 1076, 1074, 1075, 1082,
	1078, 1077, 1081, 311, 312, 313, 314, 0, 315, 602,
	603, 0, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 325, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 604, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 1117, 1118,
	345, 0, 256, 0, 0, 0, 0, 0, 346, 347,
	348, 607, 0, 0, 0, 349, 0, 350, 0, 0,
	1128, 351, 352, 608, 609, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 1124, 0, 611, 362, 0,
	363, 364, 365, 366, 367, 1087, 1088, 1091, 443, 1130,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 0, 1129, 377, 615, 616,
	0, 617, 0, 379, 380, 1131, 1089, 1132, 381, 382,
	383, 1133, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 1125, 1134,
	395, 396, 1135, 0, 397, 0, 0, 0, 398, 399,
	1080, 1079, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 1136, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 1137, 430, 0, 258, 1138, 440,
	441, 0, 1090, 442, 621, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 1139, 453, 1140, 1119, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 1120, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 628, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 1141, 503, 504, 505, 506, 629, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 1083, 528, 529,
	512, 513, 530, 531, 1142, 532, 533, 534, 535, 536,
	537, 630, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 631, 544, 545, 546, 547, 1121, 550, 0,
	551, 552, 0, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 633, 634, 635, 636,
	0, 570, 0, 562, 563, 564, 1122, 565, 1123, 0,
	566, 567, 568, 569, 0, 571, 572, 0, 0, 573,
	574, 575, 577, 578, 576, 579, 1084, 580, 0, 0,
	581, 582, 583, 639, 640, 641, 0, 585, 584, 586,
	642, 1184, 0, 0, 0, 587, 588, 643, 589, 590,
	591, 0, 0, 0, 0, 0, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 0, 0,
	0, 0, 0, 1086, 0, 3844, 0, 0, 268, 269,
	1126, 270, 271, 272, 273, 274, 275, 593, 594, 0,
	276, 595, 277, 596, 0, 597, 278, 279, 280, 281,
	282, 283, 0, 1085, 0, 284, 598, 599, 600, 0,
	285, 286, 1092, 0, 1073, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 1127, 309, 310, 1076, 1074, 1075, 1082,
	1078, 1077, 1081, 311, 312, 313, 314, 0, 315, 602,
	603, 0, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 325, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 604, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 1117, 1118,
	345, 0, 256, 0, 0, 0, 0, 0, 346, 347,
	348, 607, 0, 0, 0, 349, 0, 350, 0, 0,
	1128, 351, 352, 608, 609, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 1124, 0, 611, 362, 0,
	363, 364, 365, 366, 367, 1087, 1088, 1091, 443, 1130,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 0, 1129, 377, 615, 616,
	0, 617, 0, 379, 380, 1131, 1089, 1132, 381, 382,
	383, 1133, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 1125, 1134,
	395, 396, 1135, 0, 397, 0, 0, 0, 398, 399,
	1080, 1079, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 1136, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 1137, 430, 0, 258, 1138, 440,
	441, 0, 1090, 442, 621, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 1139, 453, 1140, 1119, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 1120, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 628, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 1141, 503, 504, 505, 506, 629, 1178, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 1083, 528, 529,
	512, 513, 530, 531, 1142, 532, 533, 534, 535, 536,
	537, 630, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 631, 544, 545, 546, 547, 1121, 550, 0,
	551, 552, 0, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 633, 634, 635, 636,
	0, 570, 0, 562, 563, 564, 1122, 565, 1123, 0,
	566, 567, 568, 569, 0, 571, 572, 0, 0, 573,
	574, 575, 577, 578, 576, 579, 1084, 580, 0, 0,
	581, 582, 583, 639, 640, 641, 0, 585, 584, 586,
	642, 0, 1008, 0, 1376, 587, 588, 643, 589, 590,
	591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 1763, 592, 0, 0, 0,
	0, 268, 269, 1126, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 1342, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 1127, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 256, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 1128, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 1130, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 1129,
	377, 615, 616, 0, 617, 0, 379, 380, 1131, 618,
	1132, 381, 382, 383, 1133, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 1134, 395, 396, 1135, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 1136, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 1137, 430, 0,
	0, 1138, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 1139, 453, 1140, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 1141, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 219, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 1142, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 221, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 1534, 640, 641, 0,
	585, 584, 586, 642, 0, 0, 0, 213, 587, 588,
	643, 589, 590, 591, 0, 0, 214, 0, 0, 0,
	1531, 0, 1376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 268,
	269, 1126, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 0, 0, 284, 598, 599, 600,
	0, 285, 286, 601, 0, 1342, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 1127, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 605,
	606, 345, 0, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 1128, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 610, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 612, 613, 614, 443,
	1130, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 0, 374, 375, 376, 378, 0, 1129, 377, 615,
	616, 0, 617, 0, 379, 380, 1131, 618, 1132, 381,
	382, 383, 1133, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 619,
	1134, 395, 396, 1135, 0, 397, 0, 0, 0, 398,
	399, 0, 0, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 1136, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 1137, 430, 0, 0, 1138,
	440, 441, 0, 620, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 1139, 453, 1140, 623, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 626, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 1141, 503, 504, 505, 506, 629, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 219, 523, 524, 522, 525, 526, 527, 0, 528,
	529, 512, 513, 530, 531, 1142, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 632, 550,
	0, 551, 552, 0, 549, 221, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 633, 634, 635,
	636, 0, 570, 0, 562, 563, 564, 637, 565, 638,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 0, 580, 0,
	0, 581, 582, 583, 1534, 640, 641, 0, 585, 584,
	586, 642, 0, 0, 0, 213, 587, 588, 643, 589,
	590, 591, 1376, 1375, 214, 0, 0, 0, 1373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 180, 266, 267, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 268,
	269, 1126, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 0, 0, 284, 598, 599, 600,
	0, 285, 286, 601, 0, 1342, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 1127, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 605,
	606, 345, 0, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 1128, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 610, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 612, 613, 614, 443,
	1130, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 0, 374, 375, 376, 378, 0, 1129, 377, 615,
	616, 0, 617, 0, 379, 380, 1131, 618, 1132, 381,
	382, 383, 1133, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 619,
	1134, 395, 396, 1135, 0, 397, 0, 0, 0, 398,
	399, 0, 0, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 1136, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 1137, 430, 0, 0, 1138,
	440, 441, 0, 620, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 1139, 453, 1140, 623, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 626, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 1141, 503, 504, 505, 506, 629, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 0, 528,
	529, 512, 513, 530, 531, 1142, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 632, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 633, 634, 635,
	636, 0, 570, 0, 562, 563, 564, 637, 565, 638,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 0, 580, 0,
	0, 581, 582, 583, 639, 640, 641, 0, 585, 584,
	586, 642, 0, 0, 0, 0, 587, 588, 643, 589,
	590, 591, 1376, 1375, 0, 0, 0, 0, 1373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 1556, 266, 267, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 268,
	269, 1126, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 0, 0, 284, 598, 599, 600,
	0, 285, 286, 601, 0, 1342, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 1127, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 605,
	606, 345, 0, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 1128, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 610, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 612, 613, 614, 443,
	1130, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 0, 374, 375, 376, 378, 0, 1129, 377, 615,
	616, 0, 617, 0, 379, 380, 1131, 618, 1132, 381,
	382, 383, 1133, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 619,
	1134, 395, 396, 1135, 0, 397, 0, 0, 0, 398,
	399, 0, 0, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 1136, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 1137, 430, 0, 0, 1138,
	440, 441, 0, 620, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 1139, 453, 1140, 623, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 626, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 1141, 503, 504, 505, 506, 629, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 0, 528,
	529, 512, 513, 530, 531, 1142, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 632, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 633, 634, 635,
	636, 0, 570, 0, 562, 563, 564, 637, 565, 638,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 0, 580, 0,
	0, 581, 582, 583, 639, 640, 641, 0, 585, 584,
	586, 642, 0, 0, 0, 0, 587, 588, 643, 589,
	590, 591, 1376, 2072, 0, 0, 0, 0, 2073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 3372, 266, 267, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 268,
	269, 1126, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 0, 0, 284, 598, 599, 600,
	0, 285, 286, 601, 0, 1342, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 1127, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 605,
	606, 345, 0, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 1128, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 610, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 612, 613, 614, 443,
	1130, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 0, 374, 375, 376, 378, 0, 1129, 377, 615,
	616, 0, 617, 0, 379, 380, 1131, 618, 1132, 381,
	382, 383, 1133, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 2071, 393, 392, 0, 394, 619,
	1134, 395, 396, 1135, 0, 397, 0, 0, 0, 398,
	399, 0, 0, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 1136, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 1137, 430, 0, 0, 1138,
	440, 441, 0, 620, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 1139, 453, 1140, 623, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 626, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 1141, 503, 504, 505, 506, 629, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 0, 528,
	529, 512, 513, 530, 531, 1142, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 632, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 633, 634, 635,
	636, 0, 570, 0, 562, 563, 564, 637, 565, 638,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 0, 580, 0,
	0, 581, 582, 583, 639, 640, 641, 0, 585, 584,
	586, 642, 0, 0, 0, 0, 587, 588, 643, 589,
	590, 591, 1376, 1375, 0, 0, 0, 0, 1373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 1556, 266, 267, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 268,
	269, 1126, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 0, 0, 284, 598, 599, 600,
	0, 285, 286, 601, 0, 1342, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 1127, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 605,
	606, 345, 0, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 1128, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 610, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 612, 613, 614, 443,
	1130, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 0, 374, 375, 376, 378, 0, 1129, 377, 615,
	616, 0, 617, 0, 379, 380, 1131, 618, 1132, 381,
	382, 383, 1133, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 619,
	1134, 395, 396, 1135, 0, 397, 0, 0, 0, 398,
	399, 0, 0, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 1136, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 1137, 430, 0, 0, 1138,
	440, 441, 0, 620, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 1139, 453, 1140, 623, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 626, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 1141, 503, 504, 505, 506, 629, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 0, 528,
	529, 512, 513, 530, 531, 1142, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 632, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 633, 634, 635,
	636, 0, 570, 0, 562, 563, 564, 637, 565, 638,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 0, 580, 0,
	0, 581, 582, 583, 639, 640, 641, 0, 585, 584,
	586, 642, 1184, 0, 0, 0, 587, 588, 643, 589,
	590, 591, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 1086, 0, 1540, 0, 0, 268,
	269, 1126, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 1085, 0, 284, 598, 599, 600,
	0, 285, 286, 1092, 0, 1073, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 1127, 309, 310, 1076, 1074, 1075,
	1082, 1078, 1077, 1081, 311, 312, 313, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 1117,
	1118, 345, 0, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 1128, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 1124, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 1087, 1088, 1091, 443,
	1130, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 257, 374, 375, 376, 378, 0, 1129, 377, 615,
	616, 0, 617, 0, 379, 380, 1131, 1089, 1132, 381,
	382, 383, 1133, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 1125,
	1134, 395, 396, 1135, 0, 397, 0, 0, 0, 398,
	399, 1080, 1079, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 1136, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 1137, 430, 0, 258, 1138,
	440, 441, 0, 1090, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 1139, 453, 1140, 1119, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 1120, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 1141, 503, 504, 505, 506, 629, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 1083, 528,
	529, 512, 513, 530, 531, 1142, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 1121, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 633, 634, 635,
	636, 0, 570, 0, 562, 563, 564, 1122, 565, 1123,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 1084, 580, 0,
	0, 581, 582, 583, 639, 640, 641, 0, 585, 584,
	586, 642, 1008, 0, 253, 0, 587, 588, 643, 589,
	590, 591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 0, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	0, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 219, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 221, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 1534, 640, 641, 0,
	585, 584, 586, 642, 253, 0, 0, 213, 587, 588,
	643, 589, 590, 591, 0, 0, 214, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 180, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 256, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 257, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	258, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 0,
	585, 584, 586, 642, 253, 2845, 0, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 1878, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 0, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	0, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 253,
	585, 584, 586, 642, 0, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 592, 0, 0, 0, 0, 268, 269, 4465, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 0, 0, 284, 598, 599, 600, 0, 285, 286,
	601, 0, 0, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 0, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 314, 0, 315, 602, 603, 0,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 0,
	256, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 0, 0, 0, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 610, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 612, 613, 614, 443, 0, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 257, 374,
	375, 376, 378, 0, 0, 377, 615, 616, 0, 617,
	0, 379, 380, 0, 618, 0, 381, 382, 383, 0,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 619, 0, 395, 396,
	0, 0, 397, 0, 0, 0, 398, 399, 0, 0,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 0,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 0, 430, 0, 258, 0, 440, 441, 0,
	620, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 0,
	453, 0, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 0,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 0, 528, 529, 512, 513,
	530, 531, 0, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 0, 551, 552,
	0, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 637, 565, 638, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 0, 573, 574, 575,
	577, 578, 576, 579, 0, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 0, 585, 584, 586, 642, 0,
	253, 0, 0, 587, 588, 643, 589, 590, 591, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 3313, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 256, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 612, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 257,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 258, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 0, 585, 584, 586, 642,
	0, 253, 0, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 0, 0,
	0, 0, 1477, 592, 0, 0, 0, 0, 268, 269,
	0, 270, 271, 272, 273, 274, 275, 593, 594, 0,
	276, 595, 277, 596, 0, 597, 278, 279, 280, 281,
	282, 283, 0, 0, 0, 284, 598, 599, 600, 0,
	285, 286, 601, 0, 0, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 0, 309, 310, 0, 0, 0, 0,
	0, 0, 0, 311, 312, 313, 314, 0, 315, 602,
	603, 0, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 325, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 604, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 605, 606,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 607, 0, 0, 0, 349, 0, 350, 0, 0,
	0, 351, 352, 608, 609, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 610, 0, 611, 362, 0,
	363, 364, 365, 366, 367, 612, 613, 614, 443, 0,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	0, 374, 375, 376, 378, 0, 0, 377, 615, 616,
	0, 617, 0, 379, 380, 0, 618, 0, 381, 382,
	383, 0, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 619, 0,
	395, 396, 0, 0, 397, 0, 0, 0, 398, 399,
	0, 0, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 0, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 0, 430, 0, 0, 0, 440,
	441, 0, 620, 442, 621, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 0, 453, 0, 623, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 626, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 628, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 0, 503, 504, 505, 506, 629, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 0, 528, 529,
	512, 513, 530, 531, 0, 532, 533, 534, 535, 536,
	537, 630, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 631, 544, 545, 546, 547, 632, 550, 0,
	551, 552, 0, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 633, 634, 635, 636,
	0, 570, 0, 562, 563, 564, 637, 565, 638, 0,
	566, 567, 568, 569, 0, 571, 572, 0, 0, 573,
	574, 575, 577, 578, 576, 579, 0, 580, 0, 0,
	581, 582, 583, 639, 640, 641, 253, 585, 584, 586,
	642, 0, 0, 0, 0, 587, 588, 643, 589, 590,
	591, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 592, 0,
	0, 0, 0, 268, 269, 2816, 270, 271, 272, 273,
	274, 275, 593, 594, 0, 276, 595, 277, 596, 0,
	597, 278, 279, 280, 281, 282, 283, 0, 0, 0,
	284, 598, 599, 600, 0, 285, 286, 601, 0, 0,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 0, 309,
	310, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 314, 0, 315, 602, 603, 0, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	325, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 604, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 605, 606, 345, 0, 0, 0, 0,
	0, 0, 0, 346, 347, 348, 607, 0, 0, 0,
	349, 0, 350, 0, 0, 0, 351, 352, 608, 609,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	610, 0, 611, 362, 0, 363, 364, 365, 366, 367,
	612, 613, 614, 443, 0, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 0, 374, 375, 376, 378,
	0, 0, 377, 615, 616, 0, 617, 0, 379, 380,
	0, 618, 0, 381, 382, 383, 0, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 619, 0, 395, 396, 0, 0, 397,
	0, 0, 0, 398, 399, 0, 0, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 0, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 0,
	430, 0, 0, 0, 440, 441, 0, 620, 442, 621,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 0, 453, 0, 623,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 626, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 628, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 0, 503, 504, 505,
	506, 629, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 0, 528, 529, 512, 513, 530, 531, 0,
	532, 533, 534, 535, 536, 537, 630, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 631, 544, 545,
	546, 547, 632, 550, 0, 551, 552, 0, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 633, 634, 635, 636, 0, 570, 0, 562, 563,
	564, 637, 565, 638, 0, 566, 567, 568, 569, 0,
	571, 572, 0, 0, 573, 574, 575, 577, 578, 576,
	579, 0, 580, 0, 0, 581, 582, 583, 639, 640,
	641, 253, 585, 584, 586, 642, 0, 0, 0, 0,
	587, 588, 643, 589, 590, 591, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 0, 0,
	0, 0, 0, 592, 0, 0, 0, 0, 268, 269,
	3473, 270, 271, 272, 273, 274, 275, 593, 594, 0,
	276, 595, 277, 596, 0, 597, 278, 279, 280, 281,
	282, 283, 0, 0, 0, 284, 598, 599, 600, 0,
	285, 286, 601, 0, 0, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 0, 309, 310, 0, 0, 0, 0,
	0, 0, 0, 311, 312, 313, 314, 0, 315, 602,
	603, 0, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 325, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 604, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 605, 606,
	345, 0, 0, 0, 0, 0, 0, 0, 346, 347,
	348, 607, 0, 0, 0, 349, 0, 350, 0, 0,
	0, 351, 352, 608, 609, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 610, 0, 611, 362, 0,
	363, 364, 365, 366, 367, 612, 613, 614, 443, 0,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	0, 374, 375, 376, 378, 0, 0, 377, 615, 616,
	0, 617, 0, 379, 380, 0, 618, 0, 381, 382,
	383, 0, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 619, 0,
	395, 396, 0, 0, 397, 0, 0, 0, 398, 399,
	0, 0, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 0, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 0, 430, 0, 0, 0, 440,
	441, 0, 620, 442, 621, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 0, 453, 0, 623, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 626, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 628, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 0, 503, 504, 505, 506, 629, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 0, 528, 529,
	512, 513, 530, 531, 0, 532, 533, 534, 535, 536,
	537, 630, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 631, 544, 545, 546, 547, 632, 550, 0,
	551, 552, 0, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 633, 634, 635, 636,
	0, 570, 0, 562, 563, 564, 637, 565, 638, 0,
	566, 567, 568, 569, 0, 571, 572, 0, 0, 573,
	574, 575, 577, 578, 576, 579, 0, 580, 0, 0,
	581, 582, 583, 639, 640, 641, 0, 585, 584, 586,
	642, 0, 852, 0, 731, 587, 588, 643, 589, 590,
	591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 2175, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 738, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 256, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 850, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 257, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	258, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 736, 553, 554,
	555, 556, 557, 737, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 0,
	585, 584, 586, 642, 0, 729, 0, 731, 587, 588,
	643, 589, 590, 591, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 261, 260, 262, 263, 264,
	265, 741, 266, 267, 0, 0, 0, 0, 0, 592,
	0, 0, 0, 0, 268, 269, 0, 270, 271, 272,
	273, 274, 275, 593, 594, 0, 276, 595, 277, 596,
	0, 597, 278, 279, 280, 281, 282, 283, 0, 0,
	0, 284, 598, 599, 600, 0, 285, 286, 601, 0,
	0, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 0,
	309, 310, 0, 0, 0, 0, 0, 0, 0, 311,
	312, 738, 314, 0, 315, 602, 603, 0, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 0, 0,
	324, 325, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 604, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 605, 606, 345, 0, 256, 0,
	0, 0, 0, 0, 346, 347, 348, 607, 0, 0,
	0, 349, 0, 350, 0, 0, 0, 351, 352, 608,
	609, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 610, 0, 611, 362, 0, 363, 364, 365, 366,
	367, 612, 613, 614, 443, 0, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 257, 374, 375, 376,
	378, 0, 0, 377, 615, 616, 0, 617, 0, 379,
	380, 0, 618, 0, 381, 382, 383, 0, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 0, 391,
	393, 392, 0, 394, 619, 0, 395, 396, 0, 0,
	397, 0, 0, 0, 398, 399, 0, 0, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 0, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	0, 430, 0, 258, 0, 440, 441, 0, 620, 442,
	621, 444, 445, 0, 0, 446, 0, 0, 0, 448,
	449, 450, 0, 0, 451, 452, 622, 0, 453, 0,
	623, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 626, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 628,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 0, 503, 504,
	505, 506, 629, 507, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 0, 523, 524, 522,
	525, 526, 527, 0, 528, 529, 512, 513, 530, 531,
	0, 532, 533, 534, 535, 536, 537, 630, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 631, 544,
	545, 546, 547, 632, 550, 0, 551, 552, 0, 549,
	736, 553, 554, 555, 556, 557, 737, 559, 339, 560,
	0, 561, 633, 634, 635, 636, 0, 570, 0, 562,
	563, 564, 637, 565, 638, 0, 566, 567, 568, 569,
	0, 571, 572, 0, 0, 573, 574, 575, 577, 578,
	576, 579, 0, 580, 0, 0, 581, 582, 583, 639,
	640, 641, 1915, 585, 584, 586, 642, 0, 0, 0,
	0, 587, 588, 643, 589, 590, 591, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 741, 0, 0, 0, 0, 268,
	269, 1126, 270, 271, 272, 273, 274, 275, 0, 1921,
	0, 276, 1911, 277, 1927, 0, 1934, 278, 279, 280,
	281, 282, 283, 0, 0, 0, 284, 1937, 1938, 0,
	0, 285, 286, 0, 0, 1342, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 1127, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 314, 1109, 315,
	1925, 1924, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 1094, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 0,
	0, 345, 0, 0, 0, 0, 0, 0, 0, 346,
	347, 348, 1923, 0, 0, 0, 349, 0, 350, 0,
	0, 1128, 351, 352, 1932, 1933, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 0, 0, 0, 362,
	0, 363, 364, 365, 366, 367, 0, 0, 0, 443,
	1130, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 0, 374, 375, 376, 378, 0, 1129, 377, 1918,
	1919, 0, 1914, 0, 379, 380, 1131, 0, 1132, 381,
	382, 383, 1133, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 0,
	1134, 395, 396, 1135, 0, 397, 0, 0, 0, 398,
	399, 0, 0, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 1136, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 1137, 430, 0, 0, 1138,
	440, 441, 0, 0, 442, 1926, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 0, 1139, 453, 1140, 0, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	1908, 466, 467, 468, 1909, 469, 470, 471, 0, 472,
	0, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 1922, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 1141, 503, 504, 505, 506, 0, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 0, 528,
	529, 512, 513, 530, 531, 1142, 532, 533, 534, 535,
	536, 537, 1920, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 1936, 544, 545, 546, 547, 0, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 1928, 1929, 1930,
	1931, 0, 570, 0, 562, 563, 564, 0, 565, 0,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 0, 580, 0,
	0, 581, 582, 583, 0, 1912, 1935, 0, 585, 584,
	586, 731, 0, 0, 0, 0, 587, 588, 0, 589,
	590, 591, 0, 0, 0, 0, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 0, 0,
	0, 0, 0, 592, 0, 0, 0, 0, 268, 269,
	1902, 270, 271, 272, 273, 274, 275, 593, 594, 0,
	276, 595, 277, 596, 0, 597, 278, 279, 280, 281,
	282, 283, 0, 0, 0, 284, 598, 599, 600, 0,
	285, 286, 601, 0, 0, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 0, 309, 310, 0, 0, 0, 0,
	0, 0, 0, 311, 312, 738, 314, 0, 315, 602,
	603, 0, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 325, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 604, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 605, 606,
	345, 0, 256, 0, 0, 0, 0, 0, 346, 347,
	348, 607, 0, 0, 0, 349, 0, 350, 0, 0,
	0, 351, 352, 608, 609, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 610, 0, 611, 362, 0,
	363, 364, 365, 366, 367, 612, 613, 614, 443, 0,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 0, 0, 377, 615, 616,
	0, 617, 0, 379, 380, 0, 618, 0, 381, 382,
	383, 0, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 619, 0,
	395, 396, 0, 0, 397, 0, 0, 0, 398, 399,
	0, 0, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 0, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 0, 430, 0, 258, 0, 440,
	441, 0, 620, 442, 621, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 0, 453, 0, 623, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 626, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 628, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 0, 503, 504, 505, 506, 629, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 0, 528, 529,
	512, 513, 530, 531, 0, 532, 533, 534, 535, 536,
	537, 630, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 631, 544, 545, 546, 547, 632, 550, 0,
	551, 552, 0, 549, 736, 553, 554, 555, 556, 557,
	737, 559, 339, 560, 0, 561, 633, 634, 635, 636,
	0, 570, 0, 562, 563, 564, 637, 565, 638, 0,
	566, 567, 568, 569, 0, 571, 572, 0, 0, 573,
	574, 575, 577, 578, 576, 579, 0, 580, 0, 0,
	581, 582, 583, 639, 640, 641, 0, 585, 584, 586,
	642, 731, 0, 0, 0, 587, 588, 643, 589, 590,
	591, 0, 0, 0, 0, 0, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 741, 0,
	0, 0, 0, 592, 0, 0, 0, 0, 268, 269,
	0, 270, 271, 272, 273, 274, 275, 593, 594, 0,
	276, 595, 277, 596, 0, 597, 278, 279, 280, 281,
	282, 283, 0, 0, 0, 284, 598, 599, 600, 0,
	285, 286, 601, 0, 0, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 0, 309, 310, 0, 0, 0, 0,
	0, 0, 0, 311, 312, 738, 314, 0, 315, 602,
	603, 0, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 325, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 604, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 605, 606,
	345, 0, 256, 0, 0, 0, 0, 0, 346, 347,
	348, 607, 0, 0, 0, 349, 0, 350, 0, 0,
	0, 351, 352, 608, 609, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 610, 0, 611, 362, 0,
	363, 364, 365, 366, 367, 612, 613, 614, 443, 0,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 0, 0, 377, 615, 616,
	0, 617, 0, 379, 380, 0, 618, 0, 381, 382,
	383, 0, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 619, 0,
	395, 396, 0, 0, 397, 0, 0, 0, 398, 399,
	0, 0, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 0, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 0, 430, 0, 258, 0, 440,
	441, 0, 620, 442, 621, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 0, 453, 0, 623, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 626, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 628, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 0, 2215, 504, 505, 506, 629, 507, 0, 508,
	509, 515, 516, 510, 511, 2216, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 0, 528, 529,
	512, 513, 530, 531, 0, 532, 533, 534, 535, 536,
	537, 630, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 631, 544, 545, 546, 547, 632, 550, 0,
	551, 552, 0, 549, 736, 553, 554, 555, 556, 557,
	737, 559, 339, 560, 0, 561, 633, 634, 635, 636,
	0, 570, 0, 562, 563, 564, 637, 565, 638, 0,
	566, 567, 2217, 569, 0, 571, 572, 0, 0, 573,
	574, 575, 577, 578, 576, 579, 0, 580, 0, 0,
	581, 582, 583, 639, 640, 641, 0, 585, 584, 586,
	642, 0, 0, 0, 0, 587, 588, 643, 589, 590,
	591, 1945, 0, 1376, 1375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 741, 0,
	259, 261, 260, 262, 263, 264, 265, 0, 266, 267,
	0, 0, 0, 0, 0, 592, 0, 0, 0, 0,
	268, 269, 1126, 270, 271, 272, 273, 274, 275, 593,
	594, 0, 276, 595, 277, 596, 0, 597, 278, 279,
	280, 281, 282, 283, 0, 0, 0, 284, 598, 599,
	600, 0, 285, 286, 601, 0, 1342, 0, 287, 288,
	289, 290, 291, 292, 293, 0, 0, 295, 296, 297,
	294, 298, 0, 299, 0, 300, 301, 302, 303, 304,
	305, 0, 306, 307, 308, 1127, 309, 310, 0, 0,
	0, 0, 0, 0, 1948, 311, 312, 313, 314, 0,
	315, 602, 603, 0, 319, 316, 317, 0, 320, 318,
	0, 321, 322, 323, 0, 0, 324, 325, 326, 0,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 604,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	605, 606, 345, 0, 256, 0, 0, 0, 0, 0,
	346, 347, 348, 607, 0, 0, 0, 349, 0, 350,
	0, 0, 1128, 351, 352, 608, 609, 353, 354, 355,
	356, 357, 358, 359, 360, 0, 361, 610, 0, 611,
	362, 0, 363, 364, 365, 366, 367, 612, 613, 614,
	443, 1130, 368, 369, 0, 370, 371, 372, 373, 0,
	0, 0, 0, 374, 375, 376, 378, 0, 1129, 377,
	615, 616, 0, 617, 0, 379, 380, 1131, 618, 1132,
	381, 382, 383, 1133, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 0, 391, 393, 392, 0, 394,
	619, 1134, 395, 396, 1135, 0, 397, 0, 0, 0,
	398, 399, 0, 0, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 1136, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 1137, 430, 0, 0,
	1138, 440, 441, 0, 620, 442, 621, 444, 445, 0,
	0, 446, 0, 0, 0, 448, 449, 450, 0, 0,
	451, 452, 622, 1139, 453, 1140, 623, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 0, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 626,
	472, 627, 473, 474, 0, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 628, 484, 486, 485, 487,
	0, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 0,
	500, 501, 502, 1141, 503, 504, 505, 506, 629, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 0, 523, 524, 522, 525, 526, 527, 1949,
	528, 529, 512, 513, 530, 531, 1142, 532, 533, 534,
	535, 536, 537, 630, 0, 538, 0, 539, 540, 541,
	542, 514, 543, 548, 631, 544, 545, 546, 547, 632,
	550, 0, 551, 552, 0, 549, 0, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 0, 561, 633, 634,
	635, 636, 0, 570, 0, 562, 563, 564, 637, 565,
	638, 0, 566, 567, 568, 569, 0, 571, 572, 0,
	0, 573, 574, 575, 577, 578, 576, 579, 0, 580,
	0, 0, 581, 582, 583, 639, 640, 641, 731, 585,
	584, 586, 642, 0, 0, 0, 0, 587, 588, 643,
	589, 590, 591, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 0, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 286, 601,
	0, 0, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	0, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 738, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 0, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 612, 613, 614, 443, 0, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 257, 374, 375,
	376, 378, 0, 0, 377, 615, 616, 0, 617, 0,
	379, 380, 0, 618, 0, 381, 382, 383, 0, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 0, 395, 396, 0,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 0, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 0, 430, 0, 258, 0, 440, 441, 0, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 0, 453,
	0, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 0, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 1941, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 0, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 736, 553, 554, 555, 556, 557, 737, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 1940,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 0, 585, 584, 586, 642, 731, 0,
	0, 0, 587, 588, 643, 589, 590, 591, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 741, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 0, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 286, 601,
	0, 0, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	0, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 738, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 0, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 612, 613, 614, 443, 0, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 257, 374, 375,
	376, 378, 0, 0, 377, 615, 616, 0, 617, 0,
	379, 380, 0, 618, 0, 381, 382, 383, 0, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 0, 395, 396, 0,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 0, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 0, 430, 0, 258, 0, 440, 441, 0, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 0, 453,
	0, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 0, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 1894, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 0, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 736, 553, 554, 555, 556, 557, 737, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 1893,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 0, 585, 584, 586, 642, 1376, 1375,
	0, 0, 587, 588, 643, 589, 590, 591, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 741, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 1126, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 286, 601,
	0, 1342, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	1127, 309, 310, 0, 0, 0, 0, 0, 0, 1948,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 1128, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 612, 613, 614, 443, 1130, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 0, 374, 375,
	376, 378, 0, 1129, 377, 615, 616, 0, 617, 0,
	379, 380, 1131, 618, 1132, 381, 382, 383, 1133, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 1134, 395, 396, 1135,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 1136, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 1137, 430, 0, 0, 1138, 440, 441, 0, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 1139, 453,
	1140, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 1141, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 1949, 528, 529, 512, 513, 530,
	531, 1142, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 0, 585, 584, 586, 642, 0, 0,
	0, 0, 587, 588, 643, 589, 590, 591, 1376, 1375,
	0, 0, 0, 0, 1373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 1126, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 286, 601,
	0, 1342, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	1127, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 1128, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 612, 613, 614, 443, 1130, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 0, 374, 375,
	376, 378, 0, 1129, 377, 615, 616, 0, 617, 0,
	379, 380, 1131, 618, 1132, 381, 382, 383, 1133, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 1134, 395, 396, 1135,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 1136, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 1137, 430, 0, 0, 1138, 440, 441, 3644, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 1139, 453,
	1140, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 1141, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 1142, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 0, 585, 584, 586, 642, 0, 0,
	0, 0, 587, 588, 643, 589, 590, 591, 1376, 1375,
	0, 0, 0, 0, 1373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 1126, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 286, 601,
	0, 1342, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	1127, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 1128, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 612, 613, 614, 443, 1130, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 0, 374, 375,
	376, 378, 0, 1129, 377, 615, 616, 0, 617, 0,
	379, 380, 1131, 618, 1132, 381, 382, 383, 1133, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 1134, 395, 396, 1135,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 1136, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 1137, 430, 0, 0, 1138, 440, 441, 3285, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 1139, 453,
	1140, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 1141, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 1142, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 253, 585, 584, 586, 642, 0, 0,
	0, 0, 587, 588, 643, 589, 590, 591, 0, 0,
	259, 261, 260, 262, 263, 264, 265, 0, 266, 267,
	0, 0, 0, 0, 0, 592, 0, 0, 0, 0,
	268, 269, 0, 270, 271, 272, 273, 274, 275, 593,
	594, 0, 276, 595, 277, 596, 0, 597, 278, 279,
	280, 281, 282, 283, 0, 0, 0, 284, 598, 599,
	600, 0, 285, 286, 601, 0, 0, 0, 287, 288,
	289, 290, 291, 292, 293, 0, 0, 295, 296, 297,
	294, 298, 0, 299, 0, 300, 301, 302, 303, 304,
	305, 0, 306, 307, 308, 0, 309, 310, 0, 0,
	0, 0, 0, 0, 0, 311, 312, 313, 314, 0,
	315, 602, 603, 0, 319, 316, 317, 0, 320, 318,
	0, 321, 322, 323, 0, 0, 324, 325, 326, 0,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 604,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	605, 606, 345, 0, 256, 0, 0, 0, 0, 0,
	346, 347, 348, 607, 0, 0, 0, 349, 0, 350,
	0, 0, 0, 351, 352, 608, 609, 353, 354, 355,
	356, 357, 358, 359, 360, 0, 361, 610, 0, 611,
	362, 0, 363, 364, 365, 366, 367, 612, 613, 614,
	443, 0, 368, 369, 0, 370, 371, 372, 373, 0,
	0, 0, 257, 374, 375, 376, 378, 0, 0, 377,
	615, 616, 0, 617, 0, 379, 380, 0, 618, 0,
	381, 382, 383, 0, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 0, 391, 393, 392, 0, 394,
	619, 0, 395, 396, 0, 0, 397, 0, 0, 0,
	398, 399, 0, 0, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 0, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 0, 430, 0, 258,
	0, 440, 441, 0, 620, 442, 621, 444, 445, 0,
	0, 446, 0, 0, 0, 448, 449, 450, 0, 0,
	451, 452, 622, 0, 453, 0, 623, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 0, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 626,
	472, 627, 473, 474, 0, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 628, 484, 486, 485, 487,
	0, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 0,
	500, 501, 502, 0, 503, 504, 505, 506, 629, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 0, 523, 524, 522, 525, 526, 527, 0,
	528, 529, 512, 513, 530, 531, 0, 532, 533, 534,
	535, 536, 537, 630, 0, 538, 0, 539, 540, 541,
	542, 514, 543, 548, 631, 544, 545, 546, 547, 632,
	550, 0, 551, 552, 0, 549, 0, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 0, 561, 633, 634,
	635, 636, 0, 570, 0, 562, 563, 564, 637, 565,
	638, 0, 566, 567, 568, 569, 0, 571, 572, 0,
	0, 573, 574, 575, 577, 578, 576, 579, 0, 580,
	0, 0, 581, 582, 583, 639, 640, 641, 0, 585,
	584, 586, 642, 0, 0, 0, 0, 587, 588, 643,
	589, 590, 591, 1584, 0, 1376, 1375, 0, 0, 0,
	0, 1373, 0, 0, 0, 0, 0, 0, 0, 0,
	741, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 592, 0, 0,
	0, 0, 268, 269, 1126, 270, 271, 272, 273, 274,
	275, 593, 594, 0, 276, 595, 277, 596, 0, 597,
	278, 279, 280, 281, 282, 283, 0, 0, 0, 284,
	598, 599, 600, 0, 285, 286, 601, 0, 1342, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 1127, 309, 310,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	314, 0, 315, 602, 603, 0, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 325,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 604, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 605, 606, 345, 0, 256, 0, 0, 0,
	0, 0, 1583, 347, 348, 607, 0, 0, 0, 349,
	0, 350, 0, 0, 1128, 351, 352, 608, 609, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 610,
	0, 611, 362, 0, 363, 364, 365, 366, 367, 612,
	613, 614, 443, 1130, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 0, 374, 375, 376, 378, 0,
	1129, 377, 615, 616, 0, 617, 0, 379, 380, 1131,
	618, 1132, 381, 382, 383, 1133, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 619, 1134, 395, 396, 1135, 0, 397, 0,
	0, 0, 398, 399, 0, 0, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 1136, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 1137, 430,
	0, 0, 1138, 440, 441, 0, 620, 442, 621, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 1139, 453, 1140, 623, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 626, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 1582, 483, 628, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 1141, 503, 504, 505, 506,
	629, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	1581, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 0, 528, 529, 512, 513, 530, 531, 1142, 532,
	533, 534, 535, 536, 537, 630, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 631, 544, 545, 546,
	547, 632, 550, 0, 551, 552, 0, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	633, 634, 635, 636, 0, 570, 0, 562, 563, 564,
	637, 565, 638, 0, 566, 567, 568, 569, 0, 571,
	572, 0, 0, 573, 574, 575, 577, 578, 576, 579,
	0, 580, 0, 0, 581, 582, 583, 639, 640, 641,
	0, 585, 584, 586, 642, 0, 0, 0, 0, 587,
	588, 643, 589, 590, 591, 1524, 0, 1376, 1375, 0,
	0, 0, 0, 1373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 261, 260, 262, 263, 264,
	265, 0, 266, 267, 0, 0, 0, 0, 0, 592,
	0, 0, 0, 0, 268, 269, 1126, 270, 271, 272,
	273, 274, 275, 593, 594, 0, 276, 595, 277, 596,
	0, 597, 278, 279, 280, 281, 282, 283, 0, 0,
	0, 284, 598, 599, 600, 0, 285, 286, 601, 0,
	1342, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 1127,
	309, 310, 0, 0, 0, 0, 0, 0, 0, 311,
	312, 313, 314, 0, 315, 602, 603, 0, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 0, 0,
	324, 325, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 604, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 605, 606, 345, 0, 256, 0,
	0, 0, 0, 0, 346, 347, 348, 607, 0, 0,
	0, 349, 0, 350, 0, 0, 1128, 351, 352, 608,
	609, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 610, 0, 611, 362, 0, 363, 364, 365, 366,
	367, 1523, 613, 614, 443, 1130, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 0, 374, 375, 376,
	378, 0, 1129, 377, 615, 616, 0, 617, 0, 379,
	380, 1131, 618, 1132, 381, 382, 383, 1133, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 0, 391,
	393, 392, 0, 394, 619, 1134, 395, 396, 1135, 0,
	397, 0, 0, 0, 398, 399, 0, 0, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 425, 1136, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	1137, 430, 0, 0, 1138, 440, 441, 0, 620, 442,
	621, 444, 445, 0, 0, 446, 0, 0, 0, 448,
	449, 450, 0, 0, 451, 452, 622, 1139, 453, 1140,
	623, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 626, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 628,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 1141, 503, 504,
	505, 506, 629, 507, 0, 508, 509, 515, 516, 510,
	511, 517, 518, 519, 520, 521, 0, 523, 524, 522,
	525, 526, 527, 0, 528, 529, 512, 513, 530, 531,
	1142, 532, 533, 534, 535, 536, 537, 630, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 631, 544,
	545, 546, 547, 632, 550, 0, 551, 552, 0, 549,
	0, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	0, 561, 633, 634, 635, 636, 0, 570, 0, 562,
	563, 564, 637, 565, 638, 0, 566, 567, 568, 569,
	0, 571, 572, 0, 0, 573, 574, 575, 577, 578,
	576, 579, 0, 580, 0, 0, 581, 582, 583, 639,
	640, 641, 0, 585, 584, 586, 642, 0, 0, 0,
	0, 587, 588, 643, 589, 590, 591, 1452, 0, 1376,
	1375, 0, 0, 0, 0, 1373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 592, 0, 0, 0, 0, 268, 269, 1126, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 0, 0, 284, 598, 599, 600, 0, 285, 286,
	601, 0, 1342, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 1127, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 314, 0, 315, 602, 603, 0,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 0,
	256, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 0, 0, 1128, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 610, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 1451, 613, 614, 443, 1130, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 0, 374,
	375, 376, 378, 0, 1129, 377, 615, 616, 0, 617,
	0, 379, 380, 1131, 618, 1132, 381, 382, 383, 1133,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 619, 1134, 395, 396,
	1135, 0, 397, 0, 0, 0, 398, 399, 0, 0,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 1136,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 1137, 430, 0, 0, 1138, 440, 441, 0,
	620, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 1139,
	453, 1140, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 1141,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 0, 528, 529, 512, 513,
	530, 531, 1142, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 0, 551, 552,
	0, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 637, 565, 638, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 0, 573, 574, 575,
	577, 578, 576, 579, 0, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 0, 585, 584, 586, 642, 0,
	0, 0, 0, 587, 588, 643, 589, 590, 591, 1411,
	0, 1376, 1375, 0, 0, 0, 0, 1373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 0, 0,
	0, 0, 0, 592, 0, 0, 0, 0, 268, 269,
	1126, 270, 271, 272, 273, 274, 275, 593, 594, 0,
	276, 595, 277, 596, 0, 597, 278, 279, 280, 281,
	282, 283, 0, 0, 0, 284, 598, 599, 600, 0,
	285, 286, 601, 0, 1342, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 1127, 309, 310, 0, 0, 0, 0,
	0, 0, 0, 311, 312, 313, 314, 0, 315, 602,
	603, 0, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 325, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 604, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 605, 606,
	345, 0, 256, 0, 0, 0, 0, 0, 346, 347,
	348, 607, 0, 0, 0, 349, 0, 350, 0, 0,
	1128, 351, 352, 608, 609, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 610, 0, 611, 362, 0,
	363, 364, 365, 366, 367, 612, 613, 614, 443, 1130,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	0, 374, 375, 376, 378, 0, 1129, 377, 615, 616,
	0, 617, 0, 379, 380, 1131, 618, 1132, 381, 382,
	383, 1133, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 619, 1134,
	395, 396, 1135, 0, 397, 0, 0, 0, 398, 399,
	0, 0, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 1136, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 1137, 430, 0, 0, 1138, 440,
	441, 0, 620, 442, 621, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 1139, 453, 1140, 623, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 626, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 628, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 1141, 503, 504, 505, 506, 629, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 0, 528, 529,
	512, 513, 530, 531, 1142, 532, 533, 534, 535, 536,
	537, 630, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 631, 544, 545, 546, 547, 632, 550, 0,
	551, 552, 0, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 633, 634, 635, 636,
	0, 570, 0, 562, 563, 564, 637, 565, 638, 0,
	566, 567, 568, 569, 0, 571, 572, 0, 0, 573,
	574, 575, 577, 578, 576, 579, 0, 580, 0, 0,
	581, 582, 583, 639, 640, 641, 0, 585, 584, 586,
	642, 0, 0, 0, 0, 587, 588, 643, 589, 590,
	591, 1371, 0, 1376, 1375, 0, 0, 0, 0, 1373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 261, 260, 262, 263, 264, 265, 0, 266, 267,
	0, 0, 0, 0, 0, 592, 0, 0, 0, 0,
	268, 269, 1126, 270, 271, 272, 273, 274, 275, 593,
	594, 0, 276, 595, 277, 596, 0, 597, 278, 279,
	280, 281, 282, 283, 0, 0, 0, 284, 598, 599,
	600, 0, 285, 286, 601, 0, 1342, 0, 287, 288,
	289, 290, 291, 292, 293, 0, 0, 295, 296, 297,
	294, 298, 0, 299, 0, 300, 301, 302, 303, 304,
	305, 0, 306, 307, 308, 1127, 309, 310, 0, 0,
	0, 0, 0, 0, 0, 311, 312, 313, 314, 0,
	315, 602, 603, 0, 319, 316, 317, 0, 320, 318,
	0, 321, 322, 323, 0, 0, 324, 325, 326, 0,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 604,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	605, 606, 345, 0, 256, 0, 0, 0, 0, 0,
	346, 347, 348, 607, 0, 0, 0, 349, 0, 350,
	0, 0, 1128, 351, 352, 608, 609, 353, 354, 355,
	356, 357, 358, 359, 360, 0, 361, 610, 0, 611,
	362, 0, 363, 364, 365, 366, 367, 1370, 613, 614,
	443, 1130, 368, 369, 0, 370, 371, 372, 373, 0,
	0, 0, 0, 374, 375, 376, 378, 0, 1129, 377,
	615, 616, 0, 617, 0, 379, 380, 1131, 618, 1132,
	381, 382, 383, 1133, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 0, 391, 393, 392, 0, 394,
	619, 1134, 395, 396, 1135, 0, 397, 0, 0, 0,
	398, 399, 0, 0, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 1136, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 1137, 430, 0, 0,
	1138, 440, 441, 0, 620, 442, 621, 444, 445, 0,
	0, 446, 0, 0, 0, 448, 449, 450, 0, 0,
	451, 452, 622, 1139, 453, 1140, 623, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 0, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 626,
	472, 627, 473, 474, 0, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 628, 484, 486, 485, 487,
	0, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 0,
	500, 501, 502, 1141, 503, 504, 505, 506, 629, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 0, 523, 524, 522, 525, 526, 527, 0,
	528, 529, 512, 513, 530, 531, 1142, 532, 533, 534,
	535, 536, 537, 630, 0, 538, 0, 539, 540, 541,
	542, 514, 543, 548, 631, 544, 545, 546, 547, 632,
	550, 0, 551, 552, 0, 549, 0, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 0, 561, 633, 634,
	635, 636, 0, 570, 0, 562, 563, 564, 637, 565,
	638, 0, 566, 567, 568, 569, 0, 571, 572, 0,
	0, 573, 574, 575, 577, 578, 576, 579, 0, 580,
	0, 0, 581, 582, 583, 639, 640, 641, 0, 585,
	584, 586, 642, 0, 0, 0, 0, 587, 588, 643,
	589, 590, 591, 1376, 1375, 0, 0, 0, 0, 1373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 261, 260, 262, 263, 264, 265, 0, 266, 267,
	0, 0, 0, 0, 0, 592, 0, 0, 0, 0,
	268, 269, 1126, 270, 271, 272, 273, 274, 275, 593,
	594, 0, 276, 595, 277, 596, 0, 597, 278, 279,
	280, 281, 282, 283, 0, 0, 0, 284, 598, 599,
	600, 0, 285, 286, 601, 0, 1342, 0, 287, 288,
	289, 290, 291, 292, 293, 0, 0, 295, 296, 297,
	294, 298, 0, 299, 0, 300, 301, 302, 303, 304,
	305, 0, 306, 307, 308, 1127, 309, 310, 0, 0,
	0, 0, 0, 0, 0, 311, 312, 313, 314, 0,
	315, 602, 603, 0, 319, 316, 317, 0, 320, 318,
	0, 321, 322, 323, 0, 0, 324, 325, 326, 0,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 604,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	605, 606, 345, 0, 256, 0, 0, 0, 0, 0,
	346, 347, 348, 607, 0, 0, 0, 349, 0, 350,
	0, 0, 1128, 351, 352, 608, 609, 353, 354, 355,
	356, 357, 358, 359, 360, 0, 361, 610, 0, 611,
	362, 0, 363, 364, 365, 366, 367, 612, 613, 614,
	443, 1130, 368, 369, 0, 370, 371, 372, 373, 0,
	0, 0, 0, 374, 375, 376, 378, 0, 1129, 377,
	615, 616, 0, 617, 0, 379, 380, 1131, 618, 1132,
	381, 382, 383, 1133, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 0, 391, 393, 392, 0, 394,
	619, 1134, 395, 396, 1135, 0, 397, 0, 0, 0,
	398, 399, 0, 0, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 1136, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 1137, 430, 0, 0,
	1138, 440, 441, 0, 620, 442, 621, 444, 445, 0,
	0, 446, 0, 0, 0, 448, 449, 450, 0, 0,
	451, 452, 622, 1139, 453, 1140, 623, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 0, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 626,
	472, 627, 473, 474, 0, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 628, 484, 486, 485, 487,
	0, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 0,
	500, 501, 502, 1141, 503, 504, 505, 506, 629, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 0, 523, 524, 522, 525, 526, 527, 0,
	528, 529, 512, 513, 530, 531, 1142, 532, 533, 534,
	535, 536, 537, 630, 0, 538, 0, 539, 540, 541,
	542, 514, 543, 548, 631, 544, 545, 546, 547, 632,
	550, 0, 551, 552, 0, 549, 0, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 0, 561, 633, 634,
	635, 636, 0, 570, 0, 562, 563, 564, 637, 565,
	638, 0, 566, 567, 568, 569, 0, 571, 572, 0,
	0, 573, 574, 575, 577, 578, 576, 579, 0, 580,
	0, 0, 581, 582, 583, 639, 640, 641, 0, 585,
	584, 586, 642, 1376, 1375, 0, 0, 587, 588, 643,
	589, 590, 591, 0, 0, 0, 0, 0, 0, 0,
	259, 261, 260, 262, 263, 264, 265, 0, 266, 267,
	0, 0, 0, 0, 0, 592, 0, 0, 0, 0,
	268, 269, 1126, 270, 271, 272, 273, 274, 275, 593,
	594, 0, 276, 595, 277, 596, 0, 597, 278, 279,
	280, 281, 282, 283, 0, 0, 0, 284, 598, 599,
	600, 0, 285, 286, 601, 0, 1342, 0, 287, 288,
	289, 290, 291, 292, 293, 0, 0, 295, 296, 297,
	294, 298, 0, 299, 0, 300, 301, 302, 303, 304,
	305, 0, 306, 307, 308, 1127, 309, 310, 0, 0,
	0, 0, 0, 0, 0, 311, 312, 313, 314, 0,
	315, 602, 603, 1956, 319, 316, 317, 0, 320, 318,
	0, 321, 322, 323, 0, 0, 324, 325, 326, 0,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 604,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	605, 606, 345, 0, 256, 0, 0, 0, 0, 0,
	346, 347, 348, 607, 0, 0, 0, 349, 0, 350,
	0, 0, 1128, 351, 352, 608, 609, 353, 354, 355,
	356, 357, 358, 359, 360, 0, 361, 610, 0, 611,
	362, 0, 363, 364, 365, 366, 367, 612, 613, 614,
	443, 1130, 368, 369, 0, 370, 371, 372, 373, 0,
	0, 0, 0, 374, 375, 376, 378, 0, 1129, 377,
	615, 616, 0, 617, 0, 379, 380, 1131, 618, 1132,
	381, 382, 383, 1133, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 0, 391, 393, 392, 0, 394,
	619, 1134, 395, 396, 1135, 0, 397, 0, 0, 0,
	398, 399, 0, 0, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 1136, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 1137, 430, 0, 0,
	1138, 440, 441, 0, 620, 442, 621, 444, 445, 0,
	0, 446, 0, 0, 0, 448, 449, 450, 0, 0,
	451, 452, 622, 1139, 453, 1140, 623, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 0, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 626,
	472, 627, 473, 474, 0, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 628, 484, 486, 485, 487,
	0, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 0,
	500, 501, 502, 1141, 503, 504, 505, 506, 629, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 0, 523, 524, 522, 525, 526, 527, 0,
	528, 529, 512, 513, 530, 531, 1142, 532, 533, 534,
	535, 536, 537, 630, 0, 538, 0, 539, 540, 541,
	542, 514, 543, 548, 631, 544, 545, 546, 547, 632,
	550, 0, 551, 552, 0, 549, 0, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 0, 561, 633, 634,
	635, 636, 0, 570, 0, 562, 563, 564, 637, 565,
	638, 0, 566, 567, 568, 569, 0, 571, 572, 0,
	0, 573, 574, 575, 577, 578, 576, 579, 0, 580,
	0, 0, 581, 582, 583, 639, 640, 641, 0, 585,
	584, 586, 642, 1376, 1375, 0, 0, 587, 588, 643,
	589, 590, 591, 0, 0, 0, 0, 0, 0, 0,
	259, 261, 260, 262, 263, 264, 265, 0, 266, 267,
	0, 0, 0, 0, 0, 592, 0, 0, 0, 0,
	268, 269, 1126, 270, 271, 272, 273, 274, 275, 593,
	594, 0, 276, 595, 277, 596, 0, 597, 278, 279,
	280, 281, 282, 283, 0, 0, 0, 284, 598, 599,
	600, 0, 285, 286, 601, 0, 1342, 0, 287, 288,
	289, 290, 291, 292, 293, 0, 0, 295, 296, 297,
	294, 298, 0, 299, 0, 300, 301, 302, 303, 304,
	305, 0, 306, 307, 308, 1127, 309, 310, 0, 0,
	0, 0, 0, 0, 0, 311, 312, 313, 314, 0,
	315, 602, 603, 0, 319, 316, 317, 0, 320, 318,
	0, 321, 322, 323, 0, 0, 324, 325, 326, 0,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 604,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	605, 606, 345, 0, 256, 0, 0, 0, 0, 0,
	346, 347, 348, 607, 0, 0, 0, 349, 0, 350,
	0, 0, 1128, 351, 352, 608, 609, 353, 354, 355,
	356, 357, 358, 359, 360, 0, 361, 610, 0, 611,
	362, 0, 363, 364, 365, 366, 367, 612, 613, 614,
	443, 1130, 368, 369, 0, 370, 371, 372, 373, 0,
	0, 0, 0, 374, 375, 376, 378, 0, 1129, 377,
	615, 616, 0, 617, 0, 379, 380, 1131, 618, 1132,
	381, 382, 383, 1133, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 0, 391, 393, 392, 0, 394,
	619, 1134, 395, 396, 1135, 0, 397, 0, 0, 0,
	398, 399, 0, 0, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 1136, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 1137, 430, 0, 0,
	1138, 440, 441, 0, 620, 442, 621, 444, 445, 0,
	0, 446, 0, 0, 0, 448, 449, 450, 0, 0,
	451, 452, 622, 1139, 453, 1140, 623, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 0, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 626,
	472, 627, 473, 474, 0, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 628, 484, 486, 485, 487,
	0, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 0,
	500, 501, 502, 1141, 503, 504, 505, 506, 629, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 0, 523, 524, 522, 525, 526, 527, 0,
	528, 529, 512, 513, 530, 531, 1142, 532, 533, 534,
	535, 536, 537, 630, 0, 538, 0, 539, 540, 541,
	542, 514, 543, 548, 631, 544, 545, 546, 547, 632,
	550, 0, 551, 552, 0, 549, 0, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 0, 561, 633, 634,
	635, 636, 0, 570, 0, 562, 563, 564, 637, 565,
	638, 0, 566, 567, 568, 569, 0, 571, 572, 0,
	0, 573, 574, 575, 577, 578, 576, 579, 0, 580,
	0, 0, 581, 582, 583, 639, 640, 641, 1376, 585,
	584, 586, 642, 0, 0, 0, 0, 587, 588, 643,
	589, 590, 591, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 1126, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 286, 601,
	0, 1342, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	1127, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 1128, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 612, 613, 614, 443, 1130, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 0, 374, 375,
	376, 378, 0, 1129, 377, 615, 616, 0, 617, 0,
	379, 380, 1131, 618, 1132, 381, 382, 383, 1133, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 1134, 395, 396, 1135,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 1136, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 1137, 430, 0, 0, 1138, 440, 441, 0, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 1139, 453,
	1140, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 1141, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 1142, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 253, 585, 584, 586, 642, 0, 0,
	0, 0, 587, 588, 643, 589, 590, 591, 0, 0,
	259, 261, 260, 262, 263, 264, 265, 0, 266, 267,
	0, 0, 0, 0, 0, 592, 0, 0, 0, 0,
	268, 269, 0, 270, 271, 272, 273, 274, 275, 593,
	594, 0, 276, 595, 277, 596, 0, 597, 278, 279,
	280, 281, 282, 283, 0, 0, 0, 284, 598, 599,
	600, 2643, 285, 286, 601, 0, 0, 0, 287, 288,
	289, 290, 291, 292, 293, 0, 0, 295, 296, 297,
	294, 298, 2640, 299, 0, 300, 301, 302, 303, 304,
	305, 0, 306, 307, 308, 0, 309, 310, 0, 0,
	0, 0, 0, 0, 0, 311, 312, 313, 314, 0,
	315, 602, 603, 0, 319, 316, 317, 0, 320, 318,
	0, 321, 322, 323, 0, 0, 324, 325, 326, 0,
	327, 328, 0, 329, 330, 331, 0, 2647, 333, 604,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	605, 606, 345, 0, 2858, 0, 0, 0, 0, 0,
	346, 347, 348, 607, 0, 0, 0, 349, 0, 350,
	2646, 0, 0, 351, 352, 608, 609, 353, 354, 355,
	356, 357, 358, 359, 360, 0, 361, 610, 0, 611,
	362, 0, 363, 364, 365, 366, 367, 612, 613, 614,
	443, 0, 368, 369, 0, 370, 371, 372, 373, 0,
	0, 0, 2855, 374, 375, 376, 378, 0, 0, 377,
	615, 616, 0, 617, 0, 379, 2857, 0, 618, 0,
	381, 382, 383, 0, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 0, 391, 393, 392, 0, 394,
	619, 0, 395, 396, 2854, 0, 397, 0, 0, 0,
	398, 399, 0, 0, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 0, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 0, 430, 0, 0,
	0, 440, 441, 0, 620, 442, 621, 444, 445, 0,
	0, 446, 0, 0, 0, 448, 449, 450, 0, 0,
	451, 452, 622, 0, 453, 0, 623, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 0, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 626,
	472, 627, 473, 474, 2645, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 628, 484, 486, 485, 487,
	0, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 0,
	500, 501, 502, 0, 503, 504, 505, 506, 629, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 0, 523, 524, 522, 525, 526, 527, 0,
	528, 529, 512, 513, 530, 531, 0, 532, 533, 534,
	535, 536, 537, 630, 0, 538, 0, 539, 540, 541,
	542, 514, 543, 548, 631, 544, 545, 546, 547, 632,
	550, 0, 551, 552, 0, 549, 0, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 0, 561, 633, 634,
	635, 636, 0, 570, 0, 562, 563, 564, 637, 565,
	638, 0, 566, 567, 568, 569, 0, 571, 572, 0,
	2856, 573, 574, 575, 577, 578, 576, 579, 0, 580,
	0, 0, 581, 582, 583, 639, 640, 641, 253, 585,
	584, 586, 642, 0, 0, 0, 0, 587, 588, 643,
	589, 590, 591, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 0, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 2643, 285, 286, 601,
	0, 0, 2637, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 2640, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	0, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 2647, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 0,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 2646, 0, 0, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 2636, 613, 614, 443, 0, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 0, 374, 375,
	376, 378, 0, 0, 377, 615, 616, 0, 617, 0,
	379, 380, 0, 618, 0, 381, 382, 383, 0, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 0, 395, 396, 0,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 0, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 0, 430, 0, 0, 0, 440, 441, 0, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 0, 453,
	0, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 2645,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 0, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 0, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 2644, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 0, 585, 584, 586, 642, 1651, 0,
	253, 0, 587, 588, 643, 589, 590, 591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 256, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 612, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 257,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 258, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	1654, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 1652, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 0, 1653, 584, 586, 642,
	1346, 0, 253, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 268,
	269, 0, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 0, 0, 284, 598, 599, 600,
	0, 285, 286, 601, 0, 0, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 0, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 605,
	606, 345, 0, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 0, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 610, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 1348, 613, 614, 443,
	0, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 257, 374, 375, 376, 378, 0, 0, 377, 615,
	616, 0, 617, 0, 379, 380, 0, 618, 0, 381,
	382, 383, 0, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 619,
	0, 395, 396, 0, 0, 397, 0, 0, 0, 398,
	399, 0, 0, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 0, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 0, 430, 0, 258, 0,
	440, 441, 0, 620, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 1176, 448, 449, 450, 0, 0, 451,
	452, 622, 0, 453, 0, 623, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 626, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 0, 503, 504, 505, 506, 629, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 0, 528,
	529, 512, 513, 530, 531, 0, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 632, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 633, 634, 635,
	636, 0, 570, 0, 562, 563, 564, 637, 565, 638,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 0, 580, 0,
	0, 581, 582, 583, 639, 640, 641, 0, 585, 584,
	586, 642, 1343, 0, 253, 0, 587, 588, 643, 589,
	590, 591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 256, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 1345, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 257, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	258, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 1176, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 0,
	585, 584, 586, 642, 1249, 0, 253, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 592, 0,
	0, 0, 0, 268, 269, 0, 270, 271, 272, 273,
	274, 275, 593, 594, 0, 276, 595, 277, 596, 0,
	597, 278, 279, 280, 281, 282, 283, 0, 0, 0,
	284, 598, 599, 600, 0, 285, 286, 601, 0, 0,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 0, 309,
	310, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 314, 0, 315, 602, 603, 0, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	325, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 604, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 605, 606, 345, 0, 256, 0, 0,
	0, 0, 0, 346, 347, 348, 607, 0, 0, 0,
	349, 0, 350, 0, 0, 0, 351, 352, 608, 609,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	610, 0, 611, 362, 0, 363, 364, 365, 366, 367,
	1251, 613, 614, 443, 0, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 257, 374, 375, 376, 378,
	0, 0, 377, 615, 616, 0, 617, 0, 379, 380,
	0, 618, 0, 381, 382, 383, 0, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 619, 0, 395, 396, 0, 0, 397,
	0, 0, 0, 398, 399, 0, 0, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 0, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 0,
	430, 0, 258, 0, 440, 441, 0, 620, 442, 621,
	444, 445, 0, 0, 446, 0, 0, 1176, 448, 449,
	450, 0, 0, 451, 452, 622, 0, 453, 0, 623,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 626, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 628, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 0, 503, 504, 505,
	506, 629, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 0, 528, 529, 512, 513, 530, 531, 0,
	532, 533, 534, 535, 536, 537, 630, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 631, 544, 545,
	546, 547, 632, 550, 0, 551, 552, 0, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 633, 634, 635, 636, 0, 570, 0, 562, 563,
	564, 637, 565, 638, 0, 566, 567, 568, 569, 0,
	571, 572, 0, 0, 573, 574, 575, 577, 578, 576,
	579, 0, 580, 0, 0, 581, 582, 583, 639, 640,
	641, 0, 585, 584, 586, 642, 675, 0, 253, 0,
	587, 588, 643, 589, 590, 591, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 674,
	264, 265, 664, 266, 267, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 0, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 286, 601,
	0, 0, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 667, 306, 307, 308,
	0, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 0,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 0, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	668, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 612, 613, 614, 443, 0, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 0, 374, 375,
	376, 378, 0, 0, 377, 615, 616, 0, 617, 0,
	379, 380, 0, 618, 0, 381, 382, 383, 0, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 0, 395, 396, 0,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 0, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 0, 430, 0, 0, 0, 440, 441, 0, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 0, 453,
	0, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 0, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 669, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 0, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 0, 585, 584, 586, 642, 663, 0,
	253, 0, 587, 588, 643, 589, 590, 591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 664, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 667, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 0, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 668, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 612, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 0,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 0, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 669,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 253, 585, 584, 586, 642,
	0, 0, 0, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 592, 0, 0,
	0, 0, 268, 269, 0, 270, 271, 272, 273, 274,
	275, 593, 594, 0, 276, 595, 277, 596, 0, 597,
	278, 279, 280, 281, 282, 283, 0, 0, 0, 284,
	598, 599, 600, 0, 285, 286, 601, 0, 0, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 0, 309, 310,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	314, 0, 315, 602, 603, 0, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 325,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 604, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 605, 606, 345, 0, 256, 0, 0, 0,
	0, 0, 346, 347, 348, 607, 0, 0, 0, 349,
	0, 350, 0, 0, 0, 351, 352, 608, 609, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 610,
	0, 611, 362, 0, 363, 364, 365, 366, 367, 612,
	613, 614, 443, 0, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 257, 374, 375, 376, 378, 0,
	0, 377, 615, 616, 0, 617, 0, 379, 380, 0,
	618, 0, 381, 382, 383, 0, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 619, 0, 395, 396, 0, 0, 397, 0,
	0, 0, 398, 399, 0, 0, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 425, 0, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 0, 430,
	0, 258, 0, 440, 441, 0, 620, 442, 621, 444,
	445, 0, 0, 446, 0, 0, 1176, 448, 449, 450,
	0, 0, 451, 452, 622, 0, 453, 0, 623, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 626, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 628, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 0, 503, 504, 505, 506,
	629, 507, 0, 508, 509, 515, 516, 510, 511, 517,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 526,
	527, 0, 528, 529, 512, 513, 530, 531, 0, 532,
	533, 534, 535, 536, 537, 630, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 631, 544, 545, 546,
	547, 632, 550, 0, 551, 552, 0, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	633, 634, 635, 636, 0, 570, 0, 562, 563, 564,
	637, 565, 638, 0, 566, 567, 568, 569, 0, 571,
	572, 0, 0, 573, 574, 575, 577, 578, 576, 579,
	0, 580, 0, 0, 581, 582, 583, 639, 640, 641,
	253, 585, 584, 586, 642, 0, 0, 0, 0, 587,
	588, 643, 589, 590, 591, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 256, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 612, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 257,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 3244, 430, 0, 258, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 0, 585, 584, 586, 642,
	2787, 0, 253, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 268,
	269, 0, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 0, 0, 284, 598, 599, 600,
	0, 285, 286, 601, 0, 0, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 0, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 605,
	606, 345, 0, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 0, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 610, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 2786, 613, 614, 443,
	0, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 257, 374, 375, 376, 378, 0, 0, 377, 615,
	616, 0, 617, 0, 379, 380, 0, 618, 0, 381,
	382, 383, 0, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 619,
	0, 395, 396, 0, 0, 397, 0, 0, 0, 398,
	399, 0, 0, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 0, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 0, 430, 0, 258, 0,
	440, 441, 0, 620, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 0, 453, 0, 623, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 626, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 0, 503, 504, 505, 506, 629, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 0, 528,
	529, 512, 513, 530, 531, 0, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 632, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 633, 634, 635,
	636, 0, 570, 0, 562, 563, 564, 637, 565, 638,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 0, 580, 0,
	0, 581, 582, 583, 639, 640, 641, 0, 585, 584,
	586, 642, 2188, 0, 253, 0, 587, 588, 643, 589,
	590, 591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 256, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 257, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	258, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 253,
	585, 584, 586, 642, 0, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 592, 0, 0, 0, 0, 268, 269, 0, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 0, 0, 284, 598, 599, 600, 0, 285, 286,
	601, 0, 0, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 0, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 314, 0, 315, 602, 603, 0,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 0,
	256, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 0, 0, 0, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 610, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 612, 613, 614, 443, 0, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 257, 374,
	375, 376, 378, 0, 0, 377, 615, 616, 0, 617,
	0, 379, 380, 0, 618, 0, 381, 382, 383, 0,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 619, 0, 395, 396,
	0, 0, 397, 0, 0, 0, 398, 399, 0, 0,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 0,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 0, 430, 0, 258, 0, 440, 441, 0,
	620, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 0,
	453, 0, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 0,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 0, 528, 529, 512, 513,
	530, 531, 0, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 0, 551, 552,
	0, 549, 2104, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 637, 565, 638, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 0, 573, 574, 575,
	577, 578, 576, 579, 0, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 0, 585, 584, 586, 642, 2110,
	0, 253, 0, 587, 588, 643, 589, 590, 591, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 0, 0,
	0, 0, 0, 592, 0, 0, 0, 0, 268, 269,
	0, 270, 271, 272, 273, 274, 275, 593, 594, 0,
	276, 595, 277, 596, 0, 597, 278, 279, 280, 281,
	282, 283, 0, 0, 0, 284, 598, 599, 600, 0,
	285, 286, 601, 0, 0, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 0, 309, 310, 0, 0, 0, 0,
	0, 0, 0, 311, 312, 313, 314, 0, 315, 602,
	603, 0, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 325, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 604, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 605, 606,
	345, 0, 256, 0, 0, 0, 0, 0, 346, 347,
	348, 607, 0, 0, 0, 349, 0, 350, 0, 0,
	0, 351, 352, 608, 609, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 610, 0, 611, 362, 0,
	363, 364, 365, 366, 367, 2109, 613, 614, 443, 0,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 0, 0, 377, 615, 616,
	0, 617, 0, 379, 380, 0, 618, 0, 381, 382,
	383, 0, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 619, 0,
	395, 396, 0, 0, 397, 0, 0, 0, 398, 399,
	0, 0, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 0, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 0, 430, 0, 258, 0, 440,
	441, 0, 620, 442, 621, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 0, 453, 0, 623, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 626, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 628, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 0, 503, 504, 505, 506, 629, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 0, 528, 529,
	512, 513, 530, 531, 0, 532, 533, 534, 535, 536,
	537, 630, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 631, 544, 545, 546, 547, 632, 550, 0,
	551, 552, 0, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 633, 634, 635, 636,
	0, 570, 0, 562, 563, 564, 637, 565, 638, 0,
	566, 567, 568, 569, 0, 571, 572, 0, 0, 573,
	574, 575, 577, 578, 576, 579, 0, 580, 0, 0,
	581, 582, 583, 639, 640, 641, 0, 585, 584, 586,
	642, 2097, 0, 253, 0, 587, 588, 643, 589, 590,
	591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 261, 260, 262, 263, 264, 265, 0, 266, 267,
	0, 0, 0, 0, 0, 592, 0, 0, 0, 0,
	268, 269, 0, 270, 271, 272, 273, 274, 275, 593,
	594, 0, 276, 595, 277, 596, 0, 597, 278, 279,
	280, 281, 282, 283, 0, 0, 0, 284, 598, 599,
	600, 0, 285, 286, 601, 0, 0, 0, 287, 288,
	289, 290, 291, 292, 293, 0, 0, 295, 296, 297,
	294, 298, 0, 299, 0, 300, 301, 302, 303, 304,
	305, 0, 306, 307, 308, 0, 309, 310, 0, 0,
	0, 0, 0, 0, 0, 311, 312, 313, 314, 0,
	315, 602, 603, 0, 319, 316, 317, 0, 320, 318,
	0, 321, 322, 323, 0, 0, 324, 325, 326, 0,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 604,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	605, 606, 345, 0, 256, 0, 0, 0, 0, 0,
	346, 347, 348, 607, 0, 0, 0, 349, 0, 350,
	0, 0, 0, 351, 352, 608, 609, 353, 354, 355,
	356, 357, 358, 359, 360, 0, 361, 610, 0, 611,
	362, 0, 363, 364, 365, 366, 367, 2099, 613, 614,
	443, 0, 368, 369, 0, 370, 371, 372, 373, 0,
	0, 0, 257, 374, 375, 376, 378, 0, 0, 377,
	615, 616, 0, 617, 0, 379, 380, 0, 618, 0,
	381, 382, 383, 0, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 0, 391, 393, 392, 0, 394,
	619, 0, 395, 396, 0, 0, 397, 0, 0, 0,
	398, 399, 0, 0, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 0, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 0, 430, 0, 258,
	0, 440, 441, 0, 620, 442, 621, 444, 445, 0,
	0, 446, 0, 0, 0, 448, 449, 450, 0, 0,
	451, 452, 622, 0, 453, 0, 623, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 0, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 626,
	472, 627, 473, 474, 0, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 628, 484, 486, 485, 487,
	0, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 0,
	500, 501, 502, 0, 503, 504, 505, 506, 629, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 0, 523, 524, 522, 525, 526, 527, 0,
	528, 529, 512, 513, 530, 531, 0, 532, 533, 534,
	535, 536, 537, 630, 0, 538, 0, 539, 540, 541,
	542, 514, 543, 548, 631, 544, 545, 546, 547, 632,
	550, 0, 551, 552, 0, 549, 0, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 0, 561, 633, 634,
	635, 636, 0, 570, 0, 562, 563, 564, 637, 565,
	638, 0, 566, 567, 568, 569, 0, 571, 572, 0,
	0, 573, 574, 575, 577, 578, 576, 579, 0, 580,
	0, 0, 581, 582, 583, 639, 640, 641, 253, 585,
	584, 586, 642, 0, 0, 0, 0, 587, 588, 643,
	589, 590, 591, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 0, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 286, 601,
	0, 0, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	0, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 0, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 2068, 613, 614, 443, 0, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 257, 374, 375,
	376, 378, 0, 0, 377, 615, 616, 0, 617, 0,
	379, 380, 0, 618, 0, 381, 382, 383, 0, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 0, 395, 396, 0,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 0, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 0, 430, 0, 258, 0, 440, 441, 0, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 1176,
	448, 449, 450, 0, 0, 451, 452, 622, 0, 453,
	0, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 0, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 0, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 0, 585, 584, 586, 642, 1517, 0,
	253, 0, 587, 588, 643, 589, 590, 591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 256, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 1516, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 257,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 258, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 0, 585, 584, 586, 642,
	1508, 0, 253, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 268,
	269, 0, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 0, 0, 284, 598, 599, 600,
	0, 285, 286, 601, 0, 0, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 0, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 605,
	606, 345, 0, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 0, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 610, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 1507, 613, 614, 443,
	0, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 257, 374, 375, 376, 378, 0, 0, 377, 615,
	616, 0, 617, 0, 379, 380, 0, 618, 0, 381,
	382, 383, 0, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 619,
	0, 395, 396, 0, 0, 397, 0, 0, 0, 398,
	399, 0, 0, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 0, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 0, 430, 0, 258, 0,
	440, 441, 0, 620, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 0, 453, 0, 623, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 626, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 0, 503, 504, 505, 506, 629, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 0, 528,
	529, 512, 513, 530, 531, 0, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 632, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 633, 634, 635,
	636, 0, 570, 0, 562, 563, 564, 637, 565, 638,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 0, 580, 0,
	0, 581, 582, 583, 639, 640, 641, 0, 585, 584,
	586, 642, 1505, 0, 253, 0, 587, 588, 643, 589,
	590, 591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 256, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 1504, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 257, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	258, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 0,
	585, 584, 586, 642, 1500, 0, 253, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 592, 0,
	0, 0, 0, 268, 269, 0, 270, 271, 272, 273,
	274, 275, 593, 594, 0, 276, 595, 277, 596, 0,
	597, 278, 279, 280, 281, 282, 283, 0, 0, 0,
	284, 598, 599, 600, 0, 285, 286, 601, 0, 0,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 0, 309,
	310, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 314, 0, 315, 602, 603, 0, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	325, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 604, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 605, 606, 345, 0, 256, 0, 0,
	0, 0, 0, 346, 347, 348, 607, 0, 0, 0,
	349, 0, 350, 0, 0, 0, 351, 352, 608, 609,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	610, 0, 611, 362, 0, 363, 364, 365, 366, 367,
	1499, 613, 614, 443, 0, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 257, 374, 375, 376, 378,
	0, 0, 377, 615, 616, 0, 617, 0, 379, 380,
	0, 618, 0, 381, 382, 383, 0, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 619, 0, 395, 396, 0, 0, 397,
	0, 0, 0, 398, 399, 0, 0, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 0, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 0,
	430, 0, 258, 0, 440, 441, 0, 620, 442, 621,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 0, 453, 0, 623,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 626, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 628, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 0, 503, 504, 505,
	506, 629, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 0, 528, 529, 512, 513, 530, 531, 0,
	532, 533, 534, 535, 536, 537, 630, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 631, 544, 545,
	546, 547, 632, 550, 0, 551, 552, 0, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 633, 634, 635, 636, 0, 570, 0, 562, 563,
	564, 637, 565, 638, 0, 566, 567, 568, 569, 0,
	571, 572, 0, 0, 573, 574, 575, 577, 578, 576,
	579, 0, 580, 0, 0, 581, 582, 583, 639, 640,
	641, 0, 585, 584, 586, 642, 1455, 0, 253, 0,
	587, 588, 643, 589, 590, 591, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 0, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 286, 601,
	0, 0, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	0, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 256,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 0, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 612, 613, 614, 443, 0, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 257, 374, 375,
	376, 378, 0, 0, 377, 615, 616, 0, 617, 0,
	379, 380, 0, 618, 0, 381, 382, 383, 0, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 0, 395, 396, 0,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 0, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 0, 430, 0, 258, 0, 440, 441, 0, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 0, 453,
	0, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 0, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 0, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 0, 585, 584, 586, 642, 1364, 0,
	253, 0, 587, 588, 643, 589, 590, 591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 256, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 612, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 257,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 258, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 0, 585, 584, 586, 642,
	1357, 0, 253, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 268,
	269, 0, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 0, 0, 284, 598, 599, 600,
	0, 285, 286, 601, 0, 0, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 0, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 605,
	606, 345, 0, 256, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 0, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 610, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 1359, 613, 614, 443,
	0, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 257, 374, 375, 376, 378, 0, 0, 377, 615,
	616, 0, 617, 0, 379, 380, 0, 618, 0, 381,
	382, 383, 0, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 619,
	0, 395, 396, 0, 0, 397, 0, 0, 0, 398,
	399, 0, 0, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 0, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 0, 430, 0, 258, 0,
	440, 441, 0, 620, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 0, 453, 0, 623, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 626, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 0, 503, 504, 505, 506, 629, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 0, 528,
	529, 512, 513, 530, 531, 0, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 632, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 633, 634, 635,
	636, 0, 570, 0, 562, 563, 564, 637, 565, 638,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 0, 580, 0,
	0, 581, 582, 583, 639, 640, 641, 0, 585, 584,
	586, 642, 645, 0, 253, 0, 587, 588, 643, 589,
	590, 591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 256, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 257, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	258, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 0,
	585, 584, 586, 642, 244, 0, 253, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 592, 0,
	0, 0, 0, 268, 269, 0, 270, 271, 272, 273,
	274, 275, 593, 594, 0, 276, 595, 277, 596, 0,
	597, 278, 279, 280, 281, 282, 283, 0, 0, 0,
	284, 598, 599, 600, 0, 285, 286, 601, 0, 0,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 0, 309,
	310, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 314, 0, 315, 602, 603, 0, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	325, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 604, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 605, 606, 345, 0, 256, 0, 0,
	0, 0, 0, 346, 347, 348, 607, 0, 0, 0,
	349, 0, 350, 0, 0, 0, 351, 352, 608, 609,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	610, 0, 611, 362, 0, 363, 364, 365, 366, 367,
	612, 613, 614, 443, 0, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 257, 374, 375, 376, 378,
	0, 0, 377, 615, 616, 0, 617, 0, 379, 380,
	0, 618, 0, 381, 382, 383, 0, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 619, 0, 395, 396, 0, 0, 397,
	0, 0, 0, 398, 399, 0, 0, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 0, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 0,
	430, 0, 258, 0, 440, 441, 0, 620, 442, 621,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 0, 453, 0, 623,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 626, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 628, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 0, 503, 504, 505,
	506, 629, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 0, 528, 529, 512, 513, 530, 531, 0,
	532, 533, 534, 535, 536, 537, 630, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 631, 544, 545,
	546, 547, 632, 550, 0, 551, 552, 0, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 633, 634, 635, 636, 0, 570, 0, 562, 563,
	564, 637, 565, 638, 0, 566, 567, 568, 569, 0,
	571, 572, 0, 0, 573, 574, 575, 577, 578, 576,
	579, 0, 580, 0, 0, 581, 582, 583, 639, 640,
	641, 253, 585, 584, 586, 642, 0, 0, 0, 0,
	587, 588, 643, 589, 590, 591, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 0, 0,
	0, 0, 0, 592, 0, 0, 0, 0, 268, 269,
	0, 270, 271, 272, 273, 274, 275, 593, 594, 0,
	276, 595, 277, 596, 0, 597, 278, 279, 280, 281,
	282, 283, 0, 0, 0, 284, 598, 599, 600, 0,
	285, 286, 601, 0, 0, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 0, 309, 310, 0, 0, 0, 0,
	0, 0, 0, 311, 312, 313, 314, 0, 315, 602,
	603, 0, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 325, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 604, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 605, 606,
	345, 0, 256, 0, 0, 0, 0, 0, 346, 347,
	348, 607, 0, 0, 0, 349, 0, 350, 0, 0,
	0, 351, 352, 608, 609, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 610, 0, 611, 362, 0,
	363, 364, 365, 366, 367, 612, 613, 614, 443, 0,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 0, 0, 377, 615, 616,
	0, 617, 0, 379, 380, 0, 618, 0, 381, 382,
	383, 0, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 619, 0,
	395, 396, 0, 0, 397, 0, 0, 0, 398, 399,
	0, 0, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 0, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 0, 430, 0, 258, 0, 440,
	441, 0, 620, 442, 621, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 0, 453, 0, 623, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 626, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 628, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 0, 503, 504, 505, 506, 629, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 0, 528, 529,
	512, 513, 530, 531, 0, 532, 533, 534, 535, 536,
	537, 630, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 631, 544, 545, 546, 547, 632, 550, 0,
	551, 552, 0, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 633, 634, 635, 636,
	0, 570, 0, 562, 563, 564, 637, 565, 638, 0,
	566, 567, 568, 569, 0, 571, 572, 0, 0, 573,
	574, 575, 577, 578, 576, 579, 0, 580, 0, 0,
	581, 582, 583, 639, 640, 641, 253, 585, 584, 586,
	642, 0, 0, 0, 0, 587, 588, 643, 589, 590,
	591, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 592, 0,
	0, 0, 0, 268, 269, 0, 270, 271, 272, 273,
	274, 275, 593, 594, 0, 276, 595, 277, 596, 0,
	597, 278, 279, 280, 281, 282, 283, 0, 0, 0,
	284, 598, 599, 600, 0, 285, 286, 601, 0, 0,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 667, 306, 307, 308, 0, 309,
	310, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 314, 0, 315, 602, 603, 0, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	325, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 604, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 605, 606, 345, 0, 0, 0, 0,
	0, 0, 0, 346, 347, 348, 607, 0, 0, 0,
	349, 0, 350, 0, 0, 0, 351, 352, 608, 609,
	353, 354, 355, 356, 357, 358, 359, 360, 668, 361,
	610, 0, 611, 362, 0, 363, 364, 365, 366, 367,
	612, 613, 614, 443, 0, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 0, 374, 375, 376, 378,
	0, 0, 377, 615, 616, 0, 617, 0, 379, 380,
	0, 618, 0, 381, 382, 383, 0, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 619, 0, 395, 396, 0, 0, 397,
	0, 0, 0, 398, 399, 0, 0, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 0, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 0,
	430, 0, 0, 0, 440, 441, 0, 620, 442, 621,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 0, 453, 0, 623,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 626, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 628, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 0, 503, 504, 505,
	506, 629, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 669, 523, 524, 522, 525,
	526, 527, 0, 528, 529, 512, 513, 530, 531, 0,
	532, 533, 534, 535, 536, 537, 630, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 631, 544, 545,
	546, 547, 632, 550, 0, 551, 552, 0, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 633, 634, 635, 636, 0, 570, 0, 562, 563,
	564, 637, 565, 638, 0, 566, 567, 568, 569, 0,
	571, 572, 0, 0, 573, 574, 575, 577, 578, 576,
	579, 0, 580, 0, 0, 581, 582, 583, 639, 640,
	641, 253, 585, 584, 586, 642, 0, 0, 0, 0,
	587, 588, 643, 589, 590, 591, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 0, 0,
	0, 0, 0, 592, 0, 0, 0, 0, 268, 269,
	0, 270, 271, 272, 273, 274, 275, 593, 594, 0,
	276, 595, 277, 596, 0, 597, 278, 279, 280, 281,
	282, 283, 0, 0, 0, 284, 598, 599, 600, 0,
	285, 286, 601, 0, 0, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 0, 309, 310, 0, 0, 0, 0,
	0, 0, 0, 311, 312, 2224, 314, 0, 315, 602,
	603, 0, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 325, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 604, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 605, 606,
	345, 0, 256, 0, 0, 0, 0, 0, 346, 347,
	348, 607, 0, 0, 0, 349, 0, 350, 0, 0,
	0, 351, 352, 608, 609, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 610, 0, 611, 362, 0,
	363, 364, 365, 366, 367, 612, 613, 614, 443, 0,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 0, 0, 377, 615, 616,
	0, 617, 0, 379, 380, 0, 618, 0, 381, 382,
	383, 0, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 619, 0,
	395, 396, 0, 0, 397, 0, 0, 0, 398, 399,
	0, 0, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 0, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 0, 430, 0, 258, 0, 440,
	441, 0, 620, 442, 621, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 0, 453, 0, 623, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 626, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 628, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 0, 503, 504, 505, 506, 629, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 0, 528, 529,
	512, 513, 530, 531, 0, 532, 533, 534, 535, 536,
	537, 630, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 631, 544, 545, 546, 547, 632, 550, 0,
	551, 552, 0, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 633, 634, 635, 636,
	0, 570, 0, 562, 563, 564, 637, 565, 638, 0,
	566, 567, 568, 569, 0, 571, 572, 0, 0, 573,
	574, 575, 577, 578, 576, 579, 0, 580, 0, 0,
	581, 582, 583, 639, 640, 641, 253, 585, 584, 586,
	642, 0, 0, 0, 0, 587, 588, 643, 589, 590,
	591, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 592, 0,
	0, 0, 0, 268, 269, 0, 270, 271, 272, 273,
	274, 275, 593, 594, 0, 276, 595, 277, 596, 0,
	597, 278, 279, 280, 281, 282, 283, 0, 0, 0,
	284, 598, 599, 600, 0, 285, 286, 601, 0, 0,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 0, 309,
	310, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	2222, 314, 0, 315, 602, 603, 0, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	325, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 604, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 605, 606, 345, 0, 256, 0, 0,
	0, 0, 0, 346, 347, 348, 607, 0, 0, 0,
	349, 0, 350, 0, 0, 0, 351, 352, 608, 609,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	610, 0, 611, 362, 0, 363, 364, 365, 366, 367,
	612, 613, 614, 443, 0, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 257, 374, 375, 376, 378,
	0, 0, 377, 615, 616, 0, 617, 0, 379, 380,
	0, 618, 0, 381, 382, 383, 0, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 619, 0, 395, 396, 0, 0, 397,
	0, 0, 0, 398, 399, 0, 0, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 0, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 0,
	430, 0, 258, 0, 440, 441, 0, 620, 442, 621,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 0, 453, 0, 623,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 626, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 628, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 0, 503, 504, 505,
	506, 629, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 0, 528, 529, 512, 513, 530, 531, 0,
	532, 533, 534, 535, 536, 537, 630, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 631, 544, 545,
	546, 547, 632, 550, 0, 551, 552, 0, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 633, 634, 635, 636, 0, 570, 0, 562, 563,
	564, 637, 565, 638, 0, 566, 567, 568, 569, 0,
	571, 572, 0, 0, 573, 574, 575, 577, 578, 576,
	579, 0, 580, 0, 0, 581, 582, 583, 639, 640,
	641, 253, 585, 584, 586, 642, 0, 0, 0, 0,
	587, 588, 643, 589, 590, 591, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 0, 0,
	0, 0, 0, 592, 0, 0, 0, 0, 268, 269,
	0, 270, 271, 272, 273, 274, 275, 593, 594, 0,
	276, 595, 277, 596, 0, 597, 278, 279, 280, 281,
	282, 283, 0, 0, 0, 284, 598, 599, 600, 0,
	285, 286, 601, 0, 0, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 0, 309, 310, 0, 0, 0, 0,
	0, 0, 0, 311, 312, 2220, 314, 0, 315, 602,
	603, 0, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 325, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 604, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 605, 606,
	345, 0, 256, 0, 0, 0, 0, 0, 346, 347,
	348, 607, 0, 0, 0, 349, 0, 350, 0, 0,
	0, 351, 352, 608, 609, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 610, 0, 611, 362, 0,
	363, 364, 365, 366, 367, 612, 613, 614, 443, 0,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 0, 0, 377, 615, 616,
	0, 617, 0, 379, 380, 0, 618, 0, 381, 382,
	383, 0, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 619, 0,
	395, 396, 0, 0, 397, 0, 0, 0, 398, 399,
	0, 0, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 0, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 0, 430, 0, 258, 0, 440,
	441, 0, 620, 442, 621, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 0, 453, 0, 623, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 626, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 628, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 0, 503, 504, 505, 506, 629, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 0, 528, 529,
	512, 513, 530, 531, 0, 532, 533, 534, 535, 536,
	537, 630, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 631, 544, 545, 546, 547, 632, 550, 0,
	551, 552, 0, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 633, 634, 635, 636,
	0, 570, 0, 562, 563, 564, 637, 565, 638, 0,
	566, 567, 568, 569, 0, 571, 572, 0, 0, 573,
	574, 575, 577, 578, 576, 579, 0, 580, 0, 0,
	581, 582, 583, 639, 640, 641, 253, 585, 584, 586,
	642, 0, 0, 0, 0, 587, 588, 643, 589, 590,
	591, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 592, 0,
	0, 0, 0, 268, 269, 0, 270, 271, 272, 273,
	274, 275, 593, 594, 0, 276, 595, 277, 596, 0,
	597, 278, 279, 280, 281, 282, 283, 0, 0, 0,
	284, 598, 599, 600, 0, 285, 286, 601, 0, 0,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 0, 309,
	310, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 314, 0, 315, 602, 603, 0, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	325, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 604, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 605, 606, 345, 0, 256, 0, 0,
	0, 0, 0, 346, 347, 348, 607, 0, 0, 0,
	349, 0, 350, 0, 0, 0, 351, 352, 608, 609,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	610, 0, 611, 362, 0, 363, 364, 365, 366, 367,
	2154, 613, 614, 443, 0, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 257, 374, 375, 376, 378,
	0, 0, 377, 615, 616, 0, 617, 0, 379, 380,
	0, 618, 0, 381, 382, 383, 0, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 619, 0, 395, 396, 0, 0, 397,
	0, 0, 0, 398, 399, 0, 0, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 0, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 0,
	430, 0, 258, 0, 440, 441, 0, 620, 442, 621,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 0, 453, 0, 623,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 626, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 628, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 0, 503, 504, 505,
	506, 629, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 0, 528, 529, 512, 513, 530, 531, 0,
	532, 533, 534, 535, 536, 537, 630, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 631, 544, 545,
	546, 547, 632, 550, 0, 551, 552, 0, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 633, 634, 635, 636, 0, 570, 0, 562, 563,
	564, 637, 565, 638, 0, 566, 567, 568, 569, 0,
	571, 572, 0, 0, 573, 574, 575, 577, 578, 576,
	579, 0, 580, 0, 0, 581, 582, 583, 639, 640,
	641, 253, 585, 584, 586, 642, 0, 0, 0, 0,
	587, 588, 643, 589, 590, 591, 0, 0, 259, 261,
	260, 262, 263, 264, 265, 0, 266, 267, 0, 0,
	0, 0, 0, 592, 0, 0, 0, 0, 268, 269,
	0, 270, 271, 272, 273, 274, 275, 593, 594, 0,
	276, 595, 277, 596, 0, 597, 278, 279, 280, 281,
	282, 283, 0, 0, 0, 284, 598, 599, 600, 0,
	285, 286, 601, 0, 0, 0, 287, 288, 289, 290,
	291, 292, 293, 0, 0, 295, 296, 297, 294, 298,
	0, 299, 0, 300, 301, 302, 303, 304, 305, 0,
	306, 307, 308, 0, 309, 310, 0, 0, 0, 0,
	0, 0, 0, 311, 312, 313, 314, 0, 315, 602,
	603, 0, 319, 316, 317, 0, 320, 318, 0, 321,
	322, 323, 0, 0, 324, 325, 326, 0, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 604, 334, 335,
	336, 338, 340, 337, 341, 342, 343, 344, 605, 606,
	345, 0, 256, 0, 0, 0, 0, 0, 346, 347,
	348, 607, 0, 0, 0, 349, 0, 350, 0, 0,
	0, 351, 352, 608, 609, 353, 354, 355, 356, 357,
	358, 359, 360, 0, 361, 610, 0, 611, 362, 0,
	363, 364, 365, 366, 367, 2148, 613, 614, 443, 0,
	368, 369, 0, 370, 371, 372, 373, 0, 0, 0,
	257, 374, 375, 376, 378, 0, 0, 377, 615, 616,
	0, 617, 0, 379, 380, 0, 618, 0, 381, 382,
	383, 0, 384, 0, 0, 0, 385, 386, 387, 388,
	389, 390, 0, 391, 393, 392, 0, 394, 619, 0,
	395, 396, 0, 0, 397, 0, 0, 0, 398, 399,
	0, 0, 400, 401, 402, 403, 0, 404, 405, 407,
	410, 406, 408, 409, 411, 424, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423, 426, 0,
	425, 0, 427, 428, 429, 434, 436, 437, 432, 433,
	435, 438, 439, 431, 0, 430, 0, 258, 0, 440,
	441, 0, 620, 442, 621, 444, 445, 0, 0, 446,
	0, 0, 0, 448, 449, 450, 0, 0, 451, 452,
	622, 0, 453, 0, 623, 454, 455, 447, 456, 457,
	458, 459, 460, 461, 462, 463, 0, 464, 465, 624,
	466, 467, 468, 625, 469, 470, 471, 626, 472, 627,
	473, 474, 0, 475, 476, 0, 477, 478, 479, 480,
	481, 482, 483, 628, 484, 486, 485, 487, 0, 488,
	0, 489, 490, 0, 0, 0, 0, 491, 0, 493,
	494, 495, 492, 496, 497, 498, 499, 0, 500, 501,
	502, 0, 503, 504, 505, 506, 629, 507, 0, 508,
	509, 515, 516, 510, 511, 517, 518, 519, 520, 521,
	0, 523, 524, 522, 525, 526, 527, 0, 528, 529,
	512, 513, 530, 531, 0, 532, 533, 534, 535, 536,
	537, 630, 0, 538, 0, 539, 540, 541, 542, 514,
	543, 548, 631, 544, 545, 546, 547, 632, 550, 0,
	551, 552, 0, 549, 0, 553, 554, 555, 556, 557,
	558, 559, 339, 560, 0, 561, 633, 634, 635, 636,
	0, 570, 0, 562, 563, 564, 637, 565, 638, 0,
	566, 567, 568, 569, 0, 571, 572, 0, 0, 573,
	574, 575, 577, 578, 576, 579, 0, 580, 0, 0,
	581, 582, 583, 639, 640, 641, 253, 585, 584, 586,
	642, 0, 0, 0, 0, 587, 588, 643, 589, 590,
	591, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 592, 0,
	0, 0, 0, 268, 269, 0, 270, 271, 272, 273,
	274, 275, 593, 594, 0, 276, 595, 277, 596, 0,
	597, 278, 279, 280, 281, 282, 283, 0, 0, 0,
	284, 598, 599, 600, 0, 285, 286, 601, 0, 0,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 0, 309,
	310, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 314, 0, 315, 602, 603, 0, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	325, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 604, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 605, 606, 345, 0, 256, 0, 0,
	0, 0, 0, 346, 347, 348, 607, 0, 0, 0,
	349, 0, 350, 0, 0, 0, 351, 352, 608, 609,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	610, 0, 611, 362, 0, 363, 364, 365, 366, 367,
	2116, 613, 614, 443, 0, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 257, 374, 375, 376, 378,
	0, 0, 377, 615, 616, 0, 617, 0, 379, 380,
	0, 618, 0, 381, 382, 383, 0, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 619, 0, 395, 396, 0, 0, 397,
	0, 0, 0, 398, 399, 0, 0, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 0, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 0,
	430, 0, 258, 0, 440, 441, 0, 620, 442, 621,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 0, 453, 0, 623,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 626, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 628, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 0, 503, 504, 505,
	506, 629, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 0, 528, 529, 512, 513, 530, 531, 0,
	532, 533, 534, 535, 536, 537, 630, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 631, 544, 545,
	546, 547, 632, 550, 0, 551, 552, 0, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 633, 634, 635, 636, 0, 570, 0, 562, 563,
	564, 637, 565, 638, 0, 566, 567, 568, 569, 0,
	571, 572, 0, 0, 573, 574, 575, 577, 578, 576,
	579, 0, 580, 0, 0, 581, 582, 583, 639, 640,
	641, 0, 585, 584, 586, 642, 839, 0, 253, 0,
	587, 588, 643, 589, 590, 591, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 0, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 286, 601,
	0, 0, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	0, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 0,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 0, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 612, 613, 614, 443, 0, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 0, 374, 375,
	376, 378, 0, 0, 377, 615, 616, 0, 617, 838,
	379, 380, 0, 618, 0, 381, 382, 383, 0, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 0, 395, 396, 0,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 0, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 0, 430, 0, 0, 0, 440, 441, 0, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 0, 453,
	0, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 0, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 0, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 837, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 253, 585, 584, 586, 642, 0, 0,
	0, 0, 587, 588, 643, 589, 590, 591, 0, 0,
	259, 261, 260, 262, 263, 264, 265, 0, 266, 267,
	0, 0, 0, 0, 0, 592, 0, 0, 0, 0,
	268, 269, 0, 270, 271, 272, 273, 274, 275, 593,
	594, 0, 276, 595, 277, 596, 0, 597, 278, 279,
	280, 281, 282, 283, 0, 0, 0, 284, 598, 599,
	600, 0, 285, 286, 601, 0, 0, 0, 287, 288,
	289, 290, 291, 292, 293, 0, 0, 295, 296, 297,
	294, 298, 0, 299, 0, 300, 301, 302, 303, 304,
	305, 0, 306, 307, 308, 0, 309, 310, 0, 0,
	0, 0, 0, 0, 0, 311, 312, 313, 314, 0,
	315, 602, 603, 0, 319, 316, 317, 0, 320, 318,
	0, 321, 322, 323, 0, 0, 324, 325, 326, 0,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 604,
	334, 335, 336, 338, 340, 337, 341, 342, 343, 344,
	605, 606, 345, 0, 2858, 0, 0, 0, 0, 0,
	346, 347, 348, 607, 0, 0, 0, 349, 0, 350,
	0, 0, 0, 351, 352, 608, 609, 353, 354, 355,
	356, 357, 358, 359, 360, 0, 361, 610, 0, 611,
	362, 0, 363, 364, 365, 366, 367, 612, 613, 614,
	443, 0, 368, 369, 0, 370, 371, 372, 373, 0,
	0, 0, 0, 374, 375, 376, 378, 0, 0, 377,
	615, 616, 0, 617, 0, 379, 380, 0, 618, 0,
	381, 382, 383, 0, 384, 0, 0, 0, 385, 386,
	387, 388, 389, 390, 0, 391, 393, 392, 0, 394,
	619, 0, 395, 396, 0, 0, 397, 0, 0, 0,
	398, 399, 0, 0, 400, 401, 402, 403, 0, 404,
	405, 407, 410, 406, 408, 409, 411, 424, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	426, 0, 425, 0, 427, 428, 429, 434, 436, 437,
	432, 433, 435, 438, 439, 431, 0, 430, 0, 0,
	0, 440, 441, 0, 620, 442, 621, 444, 445, 0,
	0, 446, 0, 0, 0, 448, 449, 450, 0, 0,
	451, 452, 622, 0, 453, 0, 623, 454, 455, 447,
	456, 457, 458, 459, 460, 461, 462, 463, 0, 464,
	465, 624, 466, 467, 468, 625, 469, 470, 471, 626,
	472, 627, 473, 474, 3904, 475, 476, 0, 477, 478,
	479, 480, 481, 482, 483, 628, 484, 486, 485, 487,
	0, 488, 0, 489, 490, 0, 0, 0, 0, 491,
	0, 493, 494, 495, 492, 496, 497, 498, 499, 0,
	500, 501, 502, 0, 503, 504, 505, 506, 629, 507,
	0, 508, 509, 515, 516, 510, 511, 517, 518, 519,
	520, 521, 0, 523, 524, 522, 525, 526, 527, 0,
	528, 529, 512, 513, 530, 531, 0, 532, 533, 534,
	535, 536, 537, 630, 0, 538, 0, 539, 540, 541,
	542, 514, 543, 548, 631, 544, 545, 546, 547, 632,
	550, 0, 551, 552, 0, 549, 0, 553, 554, 555,
	556, 557, 558, 559, 339, 560, 0, 561, 633, 634,
	635, 636, 0, 570, 0, 562, 563, 564, 637, 565,
	638, 0, 566, 567, 568, 569, 0, 571, 572, 0,
	0, 573, 574, 575, 577, 578, 576, 579, 0, 580,
	0, 0, 581, 582, 583, 639, 640, 641, 0, 585,
	584, 586, 642, 698, 0, 253, 0, 587, 588, 643,
	589, 590, 591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 261, 260, 262, 263, 264, 265, 0,
	266, 267, 0, 0, 0, 0, 0, 592, 0, 0,
	0, 0, 268, 269, 1219, 270, 271, 272, 273, 274,
	275, 593, 594, 0, 276, 595, 277, 596, 0, 597,
	278, 279, 280, 281, 282, 283, 0, 0, 0, 284,
	598, 599, 1217, 0, 285, 286, 601, 0, 0, 0,
	287, 288, 289, 290, 291, 292, 293, 0, 0, 295,
	296, 297, 294, 298, 0, 299, 0, 300, 301, 302,
	303, 304, 305, 0, 306, 307, 308, 0, 309, 310,
	0, 0, 0, 0, 0, 0, 0, 311, 312, 313,
	314, 0, 315, 602, 603, 0, 319, 316, 317, 0,
	320, 318, 0, 321, 322, 323, 0, 0, 324, 325,
	326, 0, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 604, 334, 335, 336, 338, 340, 337, 341, 342,
	343, 344, 605, 606, 345, 0, 0, 0, 0, 0,
	0, 0, 346, 347, 348, 607, 0, 0, 0, 349,
	0, 350, 0, 0, 0, 351, 352, 608, 609, 353,
	354, 355, 356, 357, 358, 359, 360, 0, 361, 610,
	0, 611, 362, 0, 363, 364, 365, 366, 367, 612,
	613, 614, 443, 0, 368, 369, 0, 370, 371, 372,
	373, 0, 0, 0, 0, 374, 375, 376, 378, 0,
	0, 377, 615, 616, 0, 617, 0, 379, 380, 0,
	618, 0, 381, 382, 383, 0, 384, 0, 0, 0,
	385, 386, 387, 388, 389, 390, 0, 391, 393, 392,
	0, 394, 619, 0, 395, 396, 0, 0, 397, 0,
	0, 0, 398, 399, 0, 0, 400, 401, 402, 403,
	0, 404, 405, 407, 410, 406, 408, 409, 411, 424,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 426, 0, 699, 0, 427, 428, 429, 434,
	436, 437, 432, 433, 435, 438, 439, 431, 0, 430,
	0, 0, 0, 440, 441, 0, 620, 442, 621, 444,
	445, 0, 0, 446, 0, 0, 0, 448, 449, 450,
	0, 0, 451, 452, 622, 0, 453, 0, 623, 454,
	455, 447, 456, 457, 458, 459, 460, 461, 462, 463,
	0, 464, 465, 624, 466, 467, 468, 625, 469, 470,
	471, 626, 472, 627, 473, 474, 0, 475, 476, 0,
	477, 478, 479, 480, 481, 482, 483, 628, 484, 486,
	485, 487, 0, 488, 0, 489, 490, 0, 0, 0,
	0, 491, 0, 493, 494, 495, 492, 496, 497, 498,
	499, 0, 500, 501, 502, 0, 503, 504, 505, 506,
	629, 507, 0, 508, 509, 515, 516, 510, 511, 695,
	518, 519, 520, 521, 0, 523, 524, 522, 525, 1220,
	527, 0, 528, 529, 512, 513, 530, 531, 0, 532,
	533, 534, 535, 536, 537, 630, 0, 538, 0, 539,
	540, 541, 542, 514, 543, 548, 631, 544, 545, 546,
	547, 632, 550, 0, 551, 552, 0, 549, 0, 553,
	554, 555, 556, 557, 558, 559, 339, 560, 0, 561,
	694, 634, 635, 636, 0, 570, 0, 562, 563, 564,
	637, 565, 638, 0, 566, 567, 568, 569, 0, 571,
	572, 0, 0, 573, 574, 575, 577, 578, 576, 579,
	0, 580, 0, 0, 581, 582, 583, 639, 640, 641,
	0, 585, 584, 586, 642, 698, 0, 253, 0, 587,
	588, 643, 589, 590, 591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 261, 260, 262, 263, 264,
	265, 0, 266, 267, 0, 0, 0, 0, 0, 592,
	0, 0, 0, 0, 268, 269, 1219, 270, 271, 272,
	273, 274, 275, 593, 594, 0, 276, 595, 277, 596,
	0, 597, 278, 279, 280, 281, 282, 283, 0, 0,
	0, 284, 598, 599, 1217, 0, 285, 286, 601, 0,
	0, 0, 287, 288, 289, 290, 291, 292, 293, 0,
	0, 295, 296, 297, 294, 298, 0, 299, 0, 300,
	301, 302, 303, 304, 305, 0, 306, 307, 308, 0,
	309, 310, 0, 0, 0, 0, 0, 0, 0, 311,
	312, 313, 314, 0, 315, 602, 603, 0, 319, 316,
	317, 0, 320, 318, 0, 321, 322, 323, 0, 0,
	324, 325, 326, 0, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 604, 334, 335, 336, 338, 340, 337,
	341, 342, 343, 344, 605, 606, 345, 0, 0, 0,
	0, 0, 0, 0, 346, 347, 348, 607, 0, 0,
	0, 349, 0, 350, 0, 0, 0, 351, 352, 608,
	609, 353, 354, 355, 356, 357, 358, 359, 360, 0,
	361, 610, 0, 611, 362, 0, 363, 364, 365, 366,
	367, 612, 613, 614, 443, 0, 368, 369, 0, 370,
	371, 372, 373, 0, 0, 0, 0, 374, 375, 376,
	378, 0, 0, 377, 615, 616, 0, 617, 0, 379,
	380, 0, 618, 0, 381, 382, 383, 0, 384, 0,
	0, 0, 385, 386, 387, 388, 389, 390, 0, 391,
	393, 392, 0, 394, 619, 0, 395, 396, 0, 0,
	397, 0, 0, 0, 398, 399, 0, 0, 400, 401,
	402, 403, 0, 404, 405, 407, 410, 406, 408, 409,
	411, 424, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 426, 0, 699, 0, 427, 428,
	429, 434, 436, 437, 432, 433, 435, 438, 439, 431,
	0, 430, 0, 0, 0, 440, 441, 0, 620, 442,
	621, 444, 445, 0, 0, 446, 0, 0, 0, 448,
	449, 450, 0, 0, 451, 452, 622, 0, 453, 0,
	623, 454, 455, 447, 456, 457, 458, 459, 460, 461,
	462, 463, 0, 464, 465, 624, 466, 467, 468, 625,
	469, 470, 471, 626, 472, 627, 473, 474, 0, 475,
	476, 0, 477, 478, 479, 480, 481, 482, 483, 628,
	484, 486, 485, 487, 0, 488, 0, 489, 490, 0,
	0, 0, 0, 491, 0, 493, 494, 495, 492, 496,
	497, 498, 499, 0, 500, 501, 502, 0, 503, 504,
	505, 506, 629, 507, 0, 508, 509, 515, 516, 510,
	511, 695, 518, 519, 520, 521, 0, 523, 524, 522,
	525, 1220, 527, 0, 528, 529, 512, 513, 530, 531,
	0, 532, 533, 534, 535, 536, 537, 630, 0, 538,
	0, 539, 540, 541, 542, 514, 543, 548, 631, 544,
	545, 546, 547, 632, 550, 0, 551, 552, 0, 549,
	0, 553, 554, 555, 556, 557, 558, 559, 339, 560,
	0, 561, 694, 634, 635, 636, 0, 570, 0, 562,
	1218, 564, 637, 565, 638, 0, 566, 567, 568, 569,
	0, 571, 572, 0, 0, 573, 574, 575, 577, 578,
	576, 579, 0, 580, 0, 0, 581, 582, 583, 639,
	640, 641, 0, 585, 584, 586, 642, 654, 0, 253,
	0, 587, 588, 643, 589, 590, 591, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 653, 266, 267, 0, 0, 0, 0,
	0, 592, 0, 0, 0, 0, 268, 269, 0, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 0, 0, 284, 598, 599, 600, 0, 285, 286,
	601, 0, 0, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 0, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 314, 0, 315, 602, 603, 0,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 0, 0, 0, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 610, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 612, 613, 614, 443, 0, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 0, 374,
	375, 376, 378, 0, 0, 377, 615, 616, 0, 617,
	0, 379, 380, 0, 618, 0, 381, 382, 383, 0,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 619, 0, 395, 396,
	0, 0, 397, 0, 0, 0, 398, 399, 0, 0,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 0,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 0, 430, 0, 0, 0, 440, 441, 0,
	620, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 0,
	453, 0, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 652, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 0,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 0, 528, 529, 512, 513,
	530, 531, 0, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 0, 551, 552,
	0, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 637, 565, 638, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 0, 573, 574, 575,
	577, 578, 576, 579, 0, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 0, 585, 584, 586, 642, 253,
	2845, 0, 0, 587, 588, 643, 589, 590, 591, 0,
	0, 0, 0, 0, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 592, 0, 0, 0, 0, 268, 269, 0, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 0, 0, 284, 598, 599, 600, 0, 285, 286,
	601, 0, 0, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 0, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 314, 0, 315, 602, 603, 0,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 0, 0, 0, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 610, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 612, 613, 614, 443, 0, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 0, 374,
	375, 376, 378, 0, 0, 377, 615, 616, 0, 617,
	0, 379, 380, 0, 618, 0, 381, 382, 383, 0,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 619, 0, 395, 396,
	0, 0, 397, 0, 0, 0, 398, 399, 0, 0,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 0,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 0, 430, 0, 0, 0, 440, 441, 0,
	620, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 0,
	453, 0, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 0,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 0, 528, 529, 512, 513,
	530, 531, 0, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 0, 551, 552,
	0, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 637, 565, 638, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 0, 573, 574, 575,
	577, 578, 576, 579, 0, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 0, 585, 584, 586, 642, 253,
	3914, 0, 0, 587, 588, 643, 589, 590, 591, 0,
	0, 0, 0, 0, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 592, 0, 0, 0, 0, 268, 269, 0, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 0, 0, 284, 598, 599, 600, 0, 285, 286,
	601, 0, 0, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 0, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 314, 0, 315, 602, 603, 0,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 0, 0, 0, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 610, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 612, 613, 614, 443, 0, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 0, 374,
	375, 376, 378, 0, 0, 377, 615, 616, 0, 617,
	0, 379, 380, 0, 618, 0, 381, 382, 383, 0,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 619, 0, 395, 396,
	0, 0, 397, 0, 0, 0, 398, 399, 0, 0,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 0,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 0, 430, 0, 0, 0, 440, 441, 0,
	620, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 0,
	453, 0, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 0,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 0, 528, 529, 512, 513,
	530, 531, 0, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 0, 551, 552,
	0, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 637, 565, 638, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 0, 573, 574, 575,
	577, 578, 576, 579, 0, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 253, 585, 584, 586, 642, 0,
	0, 0, 0, 587, 588, 643, 589, 590, 591, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 3617, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 0, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	0, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 253,
	585, 584, 586, 642, 0, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 592, 0, 2555, 0, 0, 268, 269, 0, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 0, 0, 284, 598, 599, 600, 0, 285, 286,
	601, 0, 0, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 0, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 314, 0, 315, 602, 603, 0,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 0, 0, 0, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 610, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 612, 613, 614, 443, 0, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 0, 374,
	375, 376, 378, 0, 0, 377, 615, 616, 0, 617,
	0, 379, 380, 0, 618, 0, 381, 382, 383, 0,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 619, 0, 395, 396,
	0, 0, 397, 0, 0, 0, 398, 399, 0, 0,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 0,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 0, 430, 0, 0, 0, 440, 441, 0,
	620, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 0,
	453, 0, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 0,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 0, 528, 529, 512, 513,
	530, 531, 0, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 0, 551, 552,
	0, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 637, 565, 638, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 0, 573, 574, 575,
	577, 578, 576, 579, 0, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 0, 585, 584, 586, 642, 253,
	2845, 0, 0, 587, 588, 643, 589, 590, 591, 0,
	0, 0, 0, 0, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 592, 0, 0, 0, 0, 268, 269, 0, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 0, 0, 284, 598, 599, 600, 0, 285, 286,
	601, 0, 0, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 0, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 314, 0, 315, 602, 603, 0,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 0, 0, 0, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 610, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 612, 613, 614, 443, 0, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 0, 374,
	375, 376, 378, 0, 0, 377, 615, 616, 0, 617,
	0, 379, 380, 0, 618, 0, 381, 382, 383, 0,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 619, 0, 395, 396,
	0, 0, 397, 0, 0, 0, 398, 399, 0, 0,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 0,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 0, 430, 0, 0, 0, 440, 441, 0,
	620, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 2842, 0, 0, 451, 452, 622, 0,
	453, 0, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 0,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 0, 528, 529, 512, 513,
	530, 531, 0, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 0, 551, 552,
	0, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 637, 565, 638, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 0, 573, 574, 575,
	577, 578, 576, 579, 0, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 253, 585, 584, 586, 642, 0,
	0, 0, 0, 587, 588, 643, 589, 590, 591, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 2198, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 0, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	0, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 0,
	585, 584, 586, 642, 2186, 0, 253, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 592, 0,
	0, 0, 0, 268, 269, 0, 270, 271, 272, 273,
	274, 275, 593, 594, 0, 276, 595, 277, 596, 0,
	597, 278, 279, 280, 281, 282, 283, 0, 0, 0,
	284, 598, 599, 600, 0, 285, 286, 601, 0, 0,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 0, 309,
	310, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 314, 0, 315, 602, 603, 0, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	325, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 604, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 605, 606, 345, 0, 0, 0, 0,
	0, 0, 0, 346, 347, 348, 607, 0, 0, 0,
	349, 0, 350, 0, 0, 0, 351, 352, 608, 609,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	610, 0, 611, 362, 0, 363, 364, 365, 366, 367,
	612, 613, 614, 443, 0, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 0, 374, 375, 376, 378,
	0, 0, 377, 615, 616, 0, 617, 0, 379, 380,
	0, 618, 0, 381, 382, 383, 0, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 619, 0, 395, 396, 0, 0, 397,
	0, 0, 0, 398, 399, 0, 0, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 0, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 0,
	430, 0, 0, 0, 440, 441, 0, 620, 442, 621,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 0, 453, 0, 623,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 626, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 628, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 0, 503, 504, 505,
	506, 629, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 0, 528, 529, 512, 513, 530, 531, 0,
	532, 533, 534, 535, 536, 537, 630, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 631, 544, 545,
	546, 547, 632, 550, 0, 551, 552, 0, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 633, 634, 635, 636, 0, 570, 0, 562, 563,
	564, 637, 565, 638, 0, 566, 567, 568, 569, 0,
	571, 572, 0, 0, 573, 574, 575, 577, 578, 576,
	579, 0, 580, 0, 0, 581, 582, 583, 639, 640,
	641, 0, 585, 584, 586, 642, 698, 0, 253, 0,
	587, 588, 643, 589, 590, 591, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 0, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 688, 601,
	0, 0, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	0, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 0,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 0, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 612, 613, 614, 443, 0, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 0, 374, 375,
	376, 378, 0, 0, 377, 615, 616, 0, 617, 0,
	379, 380, 0, 618, 0, 381, 382, 383, 0, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 0, 395, 396, 0,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 699, 0, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 0, 430, 0, 0, 0, 440, 441, 0, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 0, 453,
	0, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 0, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 695, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 1539, 527, 0, 528, 529, 512, 513, 530,
	531, 0, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 694, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 0, 585, 584, 586, 642, 1521, 0,
	253, 0, 587, 588, 643, 589, 590, 591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 0, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 1520, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 0,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 0, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 0, 585, 584, 586, 642,
	1514, 0, 253, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 268,
	269, 0, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 0, 0, 284, 598, 599, 600,
	0, 285, 286, 601, 0, 0, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 0, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 605,
	606, 345, 0, 0, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 0, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 610, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 1513, 613, 614, 443,
	0, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 0, 374, 375, 376, 378, 0, 0, 377, 615,
	616, 0, 617, 0, 379, 380, 0, 618, 0, 381,
	382, 383, 0, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 619,
	0, 395, 396, 0, 0, 397, 0, 0, 0, 398,
	399, 0, 0, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 0, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 0, 430, 0, 0, 0,
	440, 441, 0, 620, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 0, 453, 0, 623, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 626, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 0, 503, 504, 505, 506, 629, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 0, 528,
	529, 512, 513, 530, 531, 0, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 632, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 633, 634, 635,
	636, 0, 570, 0, 562, 563, 564, 637, 565, 638,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 0, 580, 0,
	0, 581, 582, 583, 639, 640, 641, 0, 585, 584,
	586, 642, 1461, 0, 253, 0, 587, 588, 643, 589,
	590, 591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 0, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 1460, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	0, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 0,
	585, 584, 586, 642, 1444, 0, 253, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 592, 0,
	0, 0, 0, 268, 269, 0, 270, 271, 272, 273,
	274, 275, 593, 594, 0, 276, 595, 277, 596, 0,
	597, 278, 279, 280, 281, 282, 283, 0, 0, 0,
	284, 598, 599, 600, 0, 285, 286, 601, 0, 0,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 299, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 0, 309,
	310, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 314, 0, 315, 602, 603, 0, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	325, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 604, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 605, 606, 345, 0, 0, 0, 0,
	0, 0, 0, 346, 347, 348, 607, 0, 0, 0,
	349, 0, 350, 0, 0, 0, 351, 352, 608, 609,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	610, 0, 611, 362, 0, 363, 364, 365, 366, 367,
	1442, 613, 614, 443, 0, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 0, 374, 375, 376, 378,
	0, 0, 377, 615, 616, 0, 617, 0, 379, 380,
	0, 618, 0, 381, 382, 383, 0, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 619, 0, 395, 396, 0, 0, 397,
	0, 0, 0, 398, 399, 0, 0, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 425, 0, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 0,
	430, 0, 0, 0, 440, 441, 0, 620, 442, 621,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 0, 453, 0, 623,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 626, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 628, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 0, 503, 504, 505,
	506, 629, 507, 0, 508, 509, 515, 516, 510, 511,
	517, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	526, 527, 0, 528, 529, 512, 513, 530, 531, 0,
	532, 533, 534, 535, 536, 537, 630, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 631, 544, 545,
	546, 547, 632, 550, 0, 551, 552, 0, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 633, 634, 635, 636, 0, 570, 0, 562, 563,
	564, 637, 565, 638, 0, 566, 567, 568, 569, 0,
	571, 572, 0, 0, 573, 574, 575, 577, 578, 576,
	579, 0, 580, 0, 0, 581, 582, 583, 639, 640,
	641, 0, 585, 584, 586, 642, 1438, 0, 253, 0,
	587, 588, 643, 589, 590, 591, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 0, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 286, 601,
	0, 0, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	0, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 0,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 0, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 612, 613, 614, 443, 0, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 0, 374, 375,
	376, 378, 0, 0, 377, 615, 616, 0, 617, 0,
	379, 380, 0, 618, 0, 381, 382, 383, 0, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 0, 395, 396, 0,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 0, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 0, 430, 0, 0, 0, 440, 441, 0, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 0, 453,
	0, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 0, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 515, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 0, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 0, 585, 584, 586, 642, 1415, 0,
	253, 0, 587, 588, 643, 589, 590, 591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 0, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 1413, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 0,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 0, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 0, 585, 584, 586, 642,
	1367, 0, 253, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 268,
	269, 0, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 0, 0, 284, 598, 599, 600,
	0, 285, 286, 601, 0, 0, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 0, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 605,
	606, 345, 0, 0, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 0, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 610, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 612, 613, 614, 443,
	0, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 0, 374, 375, 376, 378, 0, 0, 377, 615,
	616, 0, 617, 0, 379, 380, 0, 618, 0, 381,
	382, 383, 0, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 619,
	0, 395, 396, 0, 0, 397, 0, 0, 0, 398,
	399, 0, 0, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 0, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 0, 430, 0, 0, 0,
	440, 441, 0, 620, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 0, 453, 0, 623, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 626, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 0, 503, 504, 505, 506, 629, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 0, 528,
	529, 512, 513, 530, 531, 0, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 632, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 633, 634, 635,
	636, 0, 570, 0, 562, 563, 564, 637, 565, 638,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 0, 580, 0,
	0, 581, 582, 583, 639, 640, 641, 0, 585, 584,
	586, 642, 1351, 0, 253, 0, 587, 588, 643, 589,
	590, 591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 0, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	0, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 253,
	585, 584, 586, 642, 0, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 1197, 266, 267, 0, 0, 0, 0,
	0, 592, 0, 0, 0, 0, 268, 269, 0, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 0, 0, 284, 598, 599, 600, 0, 285, 286,
	601, 0, 0, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 0, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 314, 0, 315, 602, 603, 0,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 0, 0, 0, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 610, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 612, 613, 614, 443, 0, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 0, 374,
	375, 376, 378, 0, 0, 377, 615, 616, 0, 617,
	0, 379, 380, 0, 618, 0, 381, 382, 383, 0,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 619, 0, 395, 396,
	0, 0, 397, 0, 0, 0, 398, 399, 0, 0,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 0,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 0, 430, 0, 0, 0, 440, 441, 0,
	620, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 0,
	453, 0, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 0,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 0, 528, 529, 512, 513,
	530, 531, 0, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 0, 551, 552,
	0, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 637, 565, 638, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 0, 573, 574, 575,
	577, 578, 576, 579, 0, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 253, 585, 584, 586, 642, 0,
	0, 0, 0, 587, 588, 643, 589, 590, 591, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 704, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 0, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	0, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 0,
	585, 584, 586, 642, 698, 0, 253, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 261, 260, 262, 263, 264, 265,
	0, 266, 267, 0, 0, 0, 0, 0, 592, 0,
	0, 0, 0, 268, 269, 0, 270, 271, 272, 273,
	274, 275, 593, 594, 0, 276, 595, 277, 596, 0,
	597, 278, 279, 280, 281, 282, 283, 0, 0, 0,
	284, 598, 599, 600, 0, 285, 688, 601, 0, 0,
	0, 287, 288, 289, 290, 291, 292, 293, 0, 0,
	295, 296, 297, 294, 298, 0, 686, 0, 300, 301,
	302, 303, 304, 305, 0, 306, 307, 308, 0, 309,
	310, 0, 0, 0, 0, 0, 0, 0, 311, 312,
	313, 314, 0, 315, 602, 603, 0, 319, 316, 317,
	0, 320, 318, 0, 321, 322, 323, 0, 0, 324,
	325, 326, 0, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 604, 334, 335, 336, 338, 340, 337, 341,
	342, 343, 344, 605, 606, 345, 0, 0, 0, 0,
	0, 0, 0, 346, 347, 348, 607, 0, 0, 0,
	349, 0, 350, 0, 0, 0, 351, 352, 608, 609,
	353, 354, 355, 356, 357, 358, 359, 360, 0, 361,
	610, 0, 611, 362, 0, 363, 364, 365, 366, 367,
	612, 613, 614, 443, 0, 368, 369, 0, 370, 371,
	372, 373, 0, 0, 0, 0, 374, 375, 376, 378,
	0, 0, 377, 615, 616, 0, 617, 0, 379, 380,
	0, 618, 0, 381, 382, 383, 0, 384, 0, 0,
	0, 385, 386, 387, 388, 389, 390, 0, 391, 393,
	392, 0, 394, 619, 0, 395, 396, 0, 0, 397,
	0, 0, 0, 398, 687, 0, 0, 400, 401, 402,
	403, 0, 404, 405, 407, 410, 406, 408, 409, 411,
	424, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 426, 0, 699, 0, 427, 428, 429,
	434, 436, 437, 432, 433, 435, 438, 439, 431, 0,
	430, 0, 0, 0, 440, 441, 0, 620, 442, 621,
	444, 445, 0, 0, 446, 0, 0, 0, 448, 449,
	450, 0, 0, 451, 452, 622, 0, 453, 0, 623,
	454, 455, 447, 456, 457, 458, 459, 460, 461, 462,
	463, 0, 464, 465, 624, 466, 467, 468, 625, 469,
	470, 471, 626, 472, 627, 473, 474, 0, 475, 476,
	0, 477, 478, 479, 480, 481, 482, 483, 628, 484,
	486, 485, 487, 0, 488, 0, 489, 490, 0, 0,
	0, 0, 491, 0, 493, 494, 495, 492, 496, 497,
	498, 499, 0, 500, 501, 502, 0, 503, 504, 505,
	506, 689, 507, 0, 508, 509, 515, 516, 510, 511,
	695, 518, 519, 520, 521, 0, 523, 524, 522, 525,
	690, 527, 0, 528, 529, 512, 513, 530, 531, 0,
	532, 533, 534, 535, 536, 537, 630, 0, 538, 0,
	539, 540, 541, 542, 514, 543, 548, 631, 544, 545,
	546, 547, 632, 550, 0, 551, 552, 0, 549, 0,
	553, 554, 555, 556, 557, 558, 559, 339, 560, 0,
	561, 694, 634, 635, 636, 0, 570, 0, 562, 692,
	564, 637, 565, 638, 0, 566, 567, 568, 569, 0,
	571, 572, 0, 0, 573, 574, 575, 577, 578, 576,
	579, 0, 580, 0, 0, 581, 582, 583, 639, 640,
	641, 0, 585, 584, 586, 642, 680, 0, 253, 0,
	587, 588, 643, 589, 590, 591, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 261, 260, 262, 263,
	264, 265, 0, 266, 267, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 268, 269, 0, 270, 271,
	272, 273, 274, 275, 593, 594, 0, 276, 595, 277,
	596, 0, 597, 278, 279, 280, 281, 282, 283, 0,
	0, 0, 284, 598, 599, 600, 0, 285, 286, 601,
	0, 0, 0, 287, 288, 289, 290, 291, 292, 293,
	0, 0, 295, 296, 297, 294, 298, 0, 299, 0,
	300, 301, 302, 303, 304, 305, 0, 306, 307, 308,
	0, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	311, 312, 313, 314, 0, 315, 602, 603, 0, 319,
	316, 317, 0, 320, 318, 0, 321, 322, 323, 0,
	0, 324, 325, 326, 0, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 604, 334, 335, 336, 338, 340,
	337, 341, 342, 343, 344, 605, 606, 345, 0, 0,
	0, 0, 0, 0, 0, 346, 347, 348, 607, 0,
	0, 0, 349, 0, 350, 0, 0, 0, 351, 352,
	608, 609, 353, 354, 355, 356, 357, 358, 359, 360,
	0, 361, 610, 0, 611, 362, 0, 363, 364, 365,
	366, 367, 612, 613, 614, 443, 0, 368, 369, 0,
	370, 371, 372, 373, 0, 0, 0, 0, 374, 375,
	376, 378, 0, 0, 377, 615, 616, 0, 617, 0,
	379, 380, 0, 618, 0, 381, 382, 383, 0, 384,
	0, 0, 0, 385, 386, 387, 388, 389, 390, 0,
	391, 393, 392, 0, 394, 619, 0, 395, 396, 0,
	0, 397, 0, 0, 0, 398, 399, 0, 0, 400,
	401, 402, 403, 0, 404, 405, 407, 410, 406, 408,
	409, 411, 424, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 426, 0, 425, 0, 427,
	428, 429, 434, 436, 437, 432, 433, 435, 438, 439,
	431, 0, 430, 0, 0, 0, 440, 441, 0, 620,
	442, 621, 444, 445, 0, 0, 446, 0, 0, 0,
	448, 449, 450, 0, 0, 451, 452, 622, 0, 453,
	0, 623, 454, 455, 447, 456, 457, 458, 459, 460,
	461, 462, 463, 0, 464, 465, 624, 466, 467, 468,
	625, 469, 470, 471, 626, 472, 627, 473, 474, 0,
	475, 476, 0, 477, 478, 479, 480, 481, 482, 483,
	628, 484, 486, 485, 487, 0, 488, 0, 489, 490,
	0, 0, 0, 0, 491, 0, 493, 494, 495, 492,
	496, 497, 498, 499, 0, 500, 501, 502, 0, 503,
	504, 505, 506, 629, 507, 0, 508, 509, 681, 516,
	510, 511, 517, 518, 519, 520, 521, 0, 523, 524,
	522, 525, 526, 527, 0, 528, 529, 512, 513, 530,
	531, 0, 532, 533, 534, 535, 536, 537, 630, 0,
	538, 0, 539, 540, 541, 542, 514, 543, 548, 631,
	544, 545, 546, 547, 632, 550, 0, 551, 552, 0,
	549, 0, 553, 554, 555, 556, 557, 558, 559, 339,
	560, 0, 561, 633, 634, 635, 636, 0, 570, 0,
	562, 563, 564, 637, 565, 638, 0, 566, 567, 568,
	569, 0, 571, 572, 0, 0, 573, 574, 575, 577,
	578, 576, 579, 0, 580, 0, 0, 581, 582, 583,
	639, 640, 641, 0, 585, 584, 586, 642, 677, 0,
	253, 0, 587, 588, 643, 589, 590, 591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 261, 260,
	262, 263, 264, 265, 0, 266, 267, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, 268, 269, 0,
	270, 271, 272, 273, 274, 275, 593, 594, 0, 276,
	595, 277, 596, 0, 597, 278, 279, 280, 281, 282,
	283, 0, 0, 0, 284, 598, 599, 600, 0, 285,
	286, 601, 0, 0, 0, 287, 288, 289, 290, 291,
	292, 293, 0, 0, 295, 296, 297, 294, 298, 0,
	299, 0, 300, 301, 302, 303, 304, 305, 0, 306,
	307, 308, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 311, 312, 313, 314, 0, 315, 602, 603,
	0, 319, 316, 317, 0, 320, 318, 0, 321, 322,
	323, 0, 0, 324, 325, 326, 0, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 604, 334, 335, 336,
	338, 340, 337, 341, 342, 343, 344, 605, 606, 345,
	0, 0, 0, 0, 0, 0, 0, 346, 347, 348,
	607, 0, 0, 0, 349, 0, 350, 0, 0, 0,
	351, 352, 608, 609, 353, 354, 355, 356, 357, 358,
	359, 360, 0, 361, 610, 0, 611, 362, 0, 363,
	364, 365, 366, 367, 612, 613, 614, 443, 0, 368,
	369, 0, 370, 371, 372, 373, 0, 0, 0, 0,
	374, 375, 376, 378, 0, 0, 377, 615, 616, 0,
	617, 0, 379, 380, 0, 618, 0, 381, 382, 383,
	0, 384, 0, 0, 0, 385, 386, 387, 388, 389,
	390, 0, 391, 393, 392, 0, 394, 619, 0, 395,
	396, 0, 0, 397, 0, 0, 0, 398, 399, 0,
	0, 400, 401, 402, 403, 0, 404, 405, 407, 410,
	406, 408, 409, 411, 424, 412, 413, 414, 415, 416,
	417, 418, 419, 420, 421, 422, 423, 426, 0, 425,
	0, 427, 428, 429, 434, 436, 437, 432, 433, 435,
	438, 439, 431, 0, 430, 0, 0, 0, 440, 441,
	0, 620, 442, 621, 444, 445, 0, 0, 446, 0,
	0, 0, 448, 449, 450, 0, 0, 451, 452, 622,
	0, 453, 0, 623, 454, 455, 447, 456, 457, 458,
	459, 460, 461, 462, 463, 0, 464, 465, 624, 466,
	467, 468, 625, 469, 470, 471, 626, 472, 627, 473,
	474, 0, 475, 476, 0, 477, 478, 479, 480, 481,
	482, 483, 628, 484, 486, 485, 487, 0, 488, 0,
	489, 490, 0, 0, 0, 0, 491, 0, 493, 494,
	495, 492, 496, 497, 498, 499, 0, 500, 501, 502,
	0, 503, 504, 505, 506, 629, 507, 0, 508, 509,
	515, 516, 510, 511, 517, 518, 519, 520, 521, 0,
	523, 524, 522, 525, 526, 527, 0, 528, 529, 512,
	513, 530, 531, 0, 532, 533, 534, 535, 536, 537,
	630, 0, 538, 0, 539, 540, 541, 542, 514, 543,
	548, 631, 544, 545, 546, 547, 632, 550, 0, 551,
	552, 0, 549, 0, 553, 554, 555, 556, 557, 558,
	559, 339, 560, 0, 561, 633, 634, 635, 636, 0,
	570, 0, 562, 563, 564, 637, 565, 638, 0, 566,
	567, 568, 569, 0, 571, 572, 0, 0, 573, 574,
	575, 577, 578, 576, 579, 0, 580, 0, 0, 581,
	582, 583, 639, 640, 641, 0, 585, 584, 586, 642,
	671, 0, 253, 0, 587, 588, 643, 589, 590, 591,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	261, 260, 262, 263, 264, 265, 0, 266, 267, 0,
	0, 0, 0, 0, 592, 0, 0, 0, 0, 268,
	269, 0, 270, 271, 272, 273, 274, 275, 593, 594,
	0, 276, 595, 277, 596, 0, 597, 278, 279, 280,
	281, 282, 283, 0, 0, 0, 284, 598, 599, 600,
	0, 285, 286, 601, 0, 0, 0, 287, 288, 289,
	290, 291, 292, 293, 0, 0, 295, 296, 297, 294,
	298, 0, 299, 0, 300, 301, 302, 303, 304, 305,
	0, 306, 307, 308, 0, 309, 310, 0, 0, 0,
	0, 0, 0, 0, 311, 312, 313, 314, 0, 315,
	602, 603, 0, 319, 316, 317, 0, 320, 318, 0,
	321, 322, 323, 0, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 604, 334,
	335, 336, 338, 340, 337, 341, 342, 343, 344, 605,
	606, 345, 0, 0, 0, 0, 0, 0, 0, 346,
	347, 348, 607, 0, 0, 0, 349, 0, 350, 0,
	0, 0, 351, 352, 608, 609, 353, 354, 355, 356,
	357, 358, 359, 360, 0, 361, 610, 0, 611, 362,
	0, 363, 364, 365, 366, 367, 612, 613, 614, 443,
	0, 368, 369, 0, 370, 371, 372, 373, 0, 0,
	0, 0, 374, 375, 376, 378, 0, 0, 377, 615,
	616, 0, 617, 0, 379, 380, 0, 618, 0, 381,
	382, 383, 0, 384, 0, 0, 0, 385, 386, 387,
	388, 389, 390, 0, 391, 393, 392, 0, 394, 619,
	0, 395, 396, 0, 0, 397, 0, 0, 0, 398,
	399, 0, 0, 400, 401, 402, 403, 0, 404, 405,
	407, 410, 406, 408, 409, 411, 424, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 426,
	0, 425, 0, 427, 428, 429, 434, 436, 437, 432,
	433, 435, 438, 439, 431, 0, 430, 0, 0, 0,
	440, 441, 0, 620, 442, 621, 444, 445, 0, 0,
	446, 0, 0, 0, 448, 449, 450, 0, 0, 451,
	452, 622, 0, 453, 0, 623, 454, 455, 447, 456,
	457, 458, 459, 460, 461, 462, 463, 0, 464, 465,
	624, 466, 467, 468, 625, 469, 470, 471, 626, 472,
	627, 473, 474, 0, 475, 476, 0, 477, 478, 479,
	480, 481, 482, 483, 628, 484, 486, 485, 487, 0,
	488, 0, 489, 490, 0, 0, 0, 0, 491, 0,
	493, 494, 495, 492, 496, 497, 498, 499, 0, 500,
	501, 502, 0, 503, 504, 505, 506, 629, 507, 0,
	508, 509, 515, 516, 510, 511, 517, 518, 519, 520,
	521, 0, 523, 524, 522, 525, 526, 527, 0, 528,
	529, 512, 513, 530, 531, 0, 532, 533, 534, 535,
	536, 537, 630, 0, 538, 0, 539, 540, 541, 542,
	514, 543, 548, 631, 544, 545, 546, 547, 632, 550,
	0, 551, 552, 0, 549, 0, 553, 554, 555, 556,
	557, 558, 559, 339, 560, 0, 561, 633, 634, 635,
	636, 0, 570, 0, 562, 563, 564, 637, 565, 638,
	0, 566, 567, 568, 569, 0, 571, 572, 0, 0,
	573, 574, 575, 577, 578, 576, 579, 0, 580, 0,
	0, 581, 582, 583, 639, 640, 641, 0, 585, 584,
	586, 642, 649, 0, 253, 0, 587, 588, 643, 589,
	590, 591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 0, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	0, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 253,
	585, 584, 586, 642, 0, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 592, 0, 0, 0, 0, 268, 269, 0, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 0, 0, 284, 598, 599, 600, 0, 285, 286,
	601, 0, 0, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 0, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 314, 0, 315, 602, 603, 0,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 0, 0, 0, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 610, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 612, 613, 614, 443, 0, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 0, 374,
	375, 376, 378, 0, 0, 377, 615, 616, 0, 617,
	0, 379, 380, 0, 618, 0, 381, 382, 383, 0,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 619, 0, 395, 396,
	0, 0, 397, 0, 0, 0, 398, 399, 0, 0,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 0,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 0, 430, 0, 0, 0, 440, 441, 0,
	620, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 0,
	453, 0, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 0,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 0, 528, 529, 512, 513,
	530, 531, 0, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 0, 551, 552,
	0, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 637, 565, 638, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 0, 573, 574, 575,
	577, 578, 576, 579, 0, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 253, 585, 584, 586, 642, 0,
	0, 0, 0, 587, 588, 643, 589, 590, 591, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 0, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 3331, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	0, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 253,
	585, 584, 586, 642, 0, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 592, 0, 0, 0, 0, 268, 269, 0, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 0, 0, 284, 598, 599, 600, 0, 285, 286,
	601, 0, 0, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 0, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 314, 0, 315, 602, 603, 0,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 0, 0, 0, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 610, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 3279, 613, 614, 443, 0, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 0, 374,
	375, 376, 378, 0, 0, 377, 615, 616, 0, 617,
	0, 379, 380, 0, 618, 0, 381, 382, 383, 0,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 619, 0, 395, 396,
	0, 0, 397, 0, 0, 0, 398, 399, 0, 0,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 0,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 0, 430, 0, 0, 0, 440, 441, 0,
	620, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 0,
	453, 0, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 0,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 0, 528, 529, 512, 513,
	530, 531, 0, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 0, 551, 552,
	0, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 637, 565, 638, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 0, 573, 574, 575,
	577, 578, 576, 579, 0, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 253, 585, 584, 586, 642, 0,
	0, 0, 0, 587, 588, 643, 589, 590, 591, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 0, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 3215, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	0, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 253,
	585, 584, 586, 642, 0, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 592, 0, 0, 0, 0, 268, 269, 0, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 0, 0, 284, 598, 599, 600, 0, 285, 286,
	601, 0, 0, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 0, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 314, 0, 315, 602, 603, 0,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 0, 0, 0, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 610, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 3213, 613, 614, 443, 0, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 0, 374,
	375, 376, 378, 0, 0, 377, 615, 616, 0, 617,
	0, 379, 380, 0, 618, 0, 381, 382, 383, 0,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 619, 0, 395, 396,
	0, 0, 397, 0, 0, 0, 398, 399, 0, 0,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 0,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 0, 430, 0, 0, 0, 440, 441, 0,
	620, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 0,
	453, 0, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 0,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 0, 528, 529, 512, 513,
	530, 531, 0, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 0, 551, 552,
	0, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 637, 565, 638, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 0, 573, 574, 575,
	577, 578, 576, 579, 0, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 253, 585, 584, 586, 642, 0,
	0, 0, 0, 587, 588, 643, 589, 590, 591, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 0, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 3198, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	0, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 253,
	585, 584, 586, 642, 0, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 592, 0, 0, 0, 0, 268, 269, 0, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 0, 0, 284, 598, 599, 600, 0, 285, 286,
	601, 0, 0, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 0, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 314, 0, 315, 602, 603, 0,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 0, 0, 0, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 610, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 2796, 613, 614, 443, 0, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 0, 374,
	375, 376, 378, 0, 0, 377, 615, 616, 0, 617,
	0, 379, 380, 0, 618, 0, 381, 382, 383, 0,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 619, 0, 395, 396,
	0, 0, 397, 0, 0, 0, 398, 399, 0, 0,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 0,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 0, 430, 0, 0, 0, 440, 441, 0,
	620, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 0,
	453, 0, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 0,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 0, 528, 529, 512, 513,
	530, 531, 0, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 0, 551, 552,
	0, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 637, 565, 638, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 0, 573, 574, 575,
	577, 578, 576, 579, 0, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 253, 585, 584, 586, 642, 0,
	0, 0, 0, 587, 588, 643, 589, 590, 591, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 0, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	0, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 681, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 253,
	585, 584, 586, 642, 0, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 592, 0, 2133, 0, 0, 268, 269, 0, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 0, 0, 284, 598, 599, 600, 0, 285, 286,
	601, 0, 0, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 0, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 314, 0, 315, 602, 603, 0,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 0, 0, 0, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 610, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 612, 613, 614, 443, 0, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 0, 374,
	375, 376, 378, 0, 0, 377, 615, 616, 0, 617,
	0, 379, 380, 0, 618, 0, 381, 382, 383, 0,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 619, 0, 395, 396,
	0, 0, 397, 0, 0, 0, 398, 399, 0, 0,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 0,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 0, 430, 0, 0, 0, 440, 441, 0,
	620, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 0,
	453, 0, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 486, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 0,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 0, 0, 529, 512, 513,
	530, 531, 0, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 0, 551, 552,
	0, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 637, 565, 638, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 0, 573, 574, 575,
	577, 578, 576, 579, 0, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 253, 585, 584, 586, 642, 0,
	0, 0, 0, 587, 588, 643, 589, 590, 591, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 0, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 362, 0, 363, 364, 365, 366, 367, 1485, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	0, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 458, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 481, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	507, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 253,
	585, 584, 586, 642, 0, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 0, 0, 259, 261, 260, 262,
	263, 264, 265, 0, 266, 267, 0, 0, 0, 0,
	0, 592, 0, 0, 0, 0, 268, 269, 0, 270,
	271, 272, 273, 274, 275, 593, 594, 0, 276, 595,
	277, 596, 0, 597, 278, 279, 280, 281, 282, 283,
	0, 0, 0, 284, 598, 599, 600, 0, 285, 286,
	601, 0, 0, 0, 287, 288, 289, 290, 291, 292,
	293, 0, 0, 295, 296, 297, 294, 298, 0, 299,
	0, 300, 301, 302, 303, 304, 305, 0, 306, 307,
	308, 0, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 311, 312, 313, 314, 0, 315, 602, 603, 0,
	319, 316, 317, 0, 320, 318, 0, 321, 322, 323,
	0, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 604, 334, 335, 336, 338,
	340, 337, 341, 342, 343, 344, 605, 606, 345, 0,
	0, 0, 0, 0, 0, 0, 346, 347, 348, 607,
	0, 0, 0, 349, 0, 350, 0, 0, 0, 351,
	352, 608, 609, 353, 354, 355, 356, 357, 358, 359,
	360, 0, 361, 610, 0, 611, 362, 0, 363, 364,
	365, 366, 367, 612, 613, 614, 443, 0, 368, 369,
	0, 370, 371, 372, 373, 0, 0, 0, 0, 374,
	375, 376, 378, 0, 0, 377, 615, 616, 0, 617,
	0, 379, 380, 0, 618, 0, 381, 382, 383, 0,
	384, 0, 0, 0, 385, 386, 387, 388, 389, 390,
	0, 391, 393, 392, 0, 394, 619, 0, 395, 396,
	0, 0, 397, 0, 0, 0, 398, 399, 0, 0,
	400, 401, 402, 403, 0, 404, 405, 407, 410, 406,
	408, 409, 411, 424, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 426, 0, 425, 0,
	427, 428, 429, 434, 436, 437, 432, 433, 435, 438,
	439, 431, 0, 430, 0, 0, 0, 440, 441, 0,
	620, 442, 621, 444, 445, 0, 0, 446, 0, 0,
	0, 448, 449, 450, 0, 0, 451, 452, 622, 0,
	453, 0, 623, 454, 455, 447, 456, 457, 458, 459,
	460, 461, 462, 463, 0, 464, 465, 624, 466, 467,
	468, 625, 469, 470, 471, 626, 472, 627, 473, 474,
	0, 475, 476, 0, 477, 478, 479, 480, 481, 482,
	483, 628, 484, 1149, 485, 487, 0, 488, 0, 489,
	490, 0, 0, 0, 0, 491, 0, 493, 494, 495,
	492, 496, 497, 498, 499, 0, 500, 501, 502, 0,
	503, 504, 505, 506, 629, 507, 0, 508, 509, 515,
	516, 510, 511, 517, 518, 519, 520, 521, 0, 523,
	524, 522, 525, 526, 527, 0, 528, 529, 512, 513,
	530, 531, 0, 532, 533, 534, 535, 536, 537, 630,
	0, 538, 0, 539, 540, 541, 542, 514, 543, 548,
	631, 544, 545, 546, 547, 632, 550, 0, 551, 552,
	0, 549, 0, 553, 554, 555, 556, 557, 558, 559,
	339, 560, 0, 561, 633, 634, 635, 636, 0, 570,
	0, 562, 563, 564, 637, 565, 638, 0, 566, 567,
	568, 569, 0, 571, 572, 0, 0, 573, 574, 575,
	577, 578, 576, 579, 0, 580, 0, 0, 581, 582,
	583, 639, 640, 641, 253, 585, 584, 586, 642, 0,
	0, 0, 0, 587, 588, 643, 589, 590, 591, 0,
	0, 259, 261, 260, 262, 263, 264, 265, 0, 266,
	267, 0, 0, 0, 0, 0, 592, 0, 0, 0,
	0, 268, 269, 0, 270, 271, 272, 273, 274, 275,
	593, 594, 0, 276, 595, 277, 596, 0, 597, 278,
	279, 280, 281, 282, 283, 0, 0, 0, 284, 598,
	599, 600, 0, 285, 286, 601, 0, 0, 0, 287,
	288, 289, 290, 291, 292, 293, 0, 0, 295, 296,
	297, 294, 298, 0, 299, 0, 300, 301, 302, 303,
	304, 305, 0, 306, 307, 308, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 311, 312, 313, 314,
	0, 315, 602, 603, 0, 319, 316, 317, 0, 320,
	318, 0, 321, 322, 323, 0, 0, 324, 325, 326,
	0, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	604, 334, 335, 336, 338, 340, 337, 341, 342, 343,
	344, 605, 606, 345, 0, 0, 0, 0, 0, 0,
	0, 346, 347, 348, 607, 0, 0, 0, 349, 0,
	350, 0, 0, 0, 351, 352, 608, 609, 353, 354,
	355, 356, 357, 358, 359, 360, 0, 361, 610, 0,
	611, 0, 0, 363, 364, 365, 366, 367, 612, 613,
	614, 443, 0, 368, 369, 0, 370, 371, 372, 373,
	0, 0, 0, 0, 374, 375, 376, 378, 0, 0,
	377, 615, 616, 0, 617, 0, 379, 380, 0, 618,
	0, 381, 382, 383, 0, 384, 0, 0, 0, 385,
	386, 387, 388, 389, 390, 0, 391, 393, 392, 0,
	394, 619, 0, 395, 396, 0, 0, 397, 0, 0,
	0, 398, 399, 0, 0, 400, 401, 402, 403, 0,
	404, 405, 407, 410, 406, 408, 409, 411, 424, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 426, 0, 425, 0, 427, 428, 429, 434, 436,
	437, 432, 433, 435, 438, 439, 431, 0, 430, 0,
	0, 0, 440, 441, 0, 620, 442, 621, 444, 445,
	0, 0, 446, 0, 0, 0, 448, 449, 450, 0,
	0, 451, 452, 622, 0, 453, 0, 623, 454, 455,
	447, 456, 457, 0, 459, 460, 461, 462, 463, 0,
	464, 465, 624, 466, 467, 468, 625, 469, 470, 471,
	626, 472, 627, 473, 474, 0, 475, 476, 0, 477,
	478, 479, 480, 0, 482, 483, 628, 484, 486, 485,
	487, 0, 488, 0, 489, 490, 0, 0, 0, 0,
	491, 0, 493, 494, 495, 492, 496, 497, 498, 499,
	0, 500, 501, 502, 0, 503, 504, 505, 506, 629,
	0, 0, 508, 509, 515, 516, 510, 511, 517, 518,
	519, 520, 521, 0, 523, 524, 522, 525, 526, 527,
	0, 528, 529, 512, 513, 530, 531, 0, 532, 533,
	534, 535, 536, 537, 630, 0, 538, 0, 539, 540,
	541, 542, 514, 543, 548, 631, 544, 545, 546, 547,
	632, 550, 0, 551, 552, 0, 549, 0, 553, 554,
	555, 556, 557, 558, 559, 339, 560, 0, 561, 633,
	634, 635, 636, 0, 570, 0, 562, 563, 564, 637,
	565, 638, 0, 566, 567, 568, 569, 0, 571, 572,
	0, 0, 573, 574, 575, 577, 578, 576, 579, 0,
	580, 0, 0, 581, 582, 583, 639, 640, 641, 0,
	585, 584, 586, 642, 0, 0, 0, 0, 587, 588,
	643, 589, 590, 591, 1697, 1698, 0, 1730, 1731, 1732,
	1740, 1741, 1742, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1733, 1728, 0, 0,
	0, 0, 0, 0, 1700, 0, 0, 0, 0, 0,
	0, 1697, 1698, 1746, 1730, 1731, 1732, 1740, 1741, 1742,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1733, 1728, 0, 0, 0, 0, 1699,
	0, 1700, 0, 0, 0, 0, 0, 0, 0, 1719,
	1746, 0, 0, 0, 0, 0, 0, 0, 1716, 0,
	1697, 1698, 0, 1730, 1731, 1732, 1740, 1741, 1742, 0,
	0, 0, 0, 0, 0, 0, 1699, 0, 0, 0,
	0, 0, 1733, 1728, 0, 0, 1719, 0, 0, 0,
	1700, 0, 0, 0, 0, 1716, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1699, 0, 0, 0, 0,
	1722, 1723, 1724, 1725, 0, 1719, 0, 0, 0, 0,
	1705, 0, 0, 0, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1722, 1723, 1724,
	1725, 0, 0, 0, 0, 1737, 0, 1705, 1747, 0,
	0, 0, 0, 0, 1727, 1729, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1743, 0, 1744, 0, 0, 0, 0, 0, 0,
	1714, 1715, 1737, 0, 0, 1747, 1722, 1723, 1724, 1725,
	0, 1727, 1729, 0, 0, 0, 1705, 0, 1735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1743, 0,
	1744, 0, 1720, 0, 0, 0, 0, 1714, 1715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1737, 0, 0, 1747, 1735, 0, 0, 0, 0,
	1727, 1729, 0, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 0, 0, 1745, 0, 0, 1743, 0, 1744,
	0, 0, 0, 0, 0, 0, 1714, 1715, 0, 0,
	0, 0, 1734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1735, 0, 0, 0, 0, 0,
	0, 1745, 0, 0, 0, 0, 0, 0, 1720, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1726, 0, 0, 0, 0, 0,
	1745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1721, 0, 0, 0, 1734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1726, 0, 0, 0, 0, 0, 0, 0, 0,
	1738, 0, 0, 0, 0, 0, 0, 0, 0, 1697,
	1698, 1721, 1730, 1731, 1732, 1740, 1741, 1742, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1733, 1728, 0, 0, 0, 0, 1738, 0, 1700,
	1726, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1699, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1719, 0, 1738, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 1736, 0, 0,
	0, 0, 1711, 1712, 1718, 1739, 1717, 1713, 0, 1710,
	1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707, 0, 0,
	0, 0, 4253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 1711,
	1712, 1718, 1739, 1717, 1713, 0, 1710, 1708, 1709, 1701,
	1702, 1703, 1704, 1706, 1707, 0, 0, 0, 0, 4249,
	0, 0, 0, 0, 0, 1722, 1723, 1724, 1725, 0,
	0, 0, 0, 0, 0, 1705, 0, 0, 0, 0,
	0, 0, 0, 1736, 0, 0, 0, 0, 1711, 1712,
	1718, 1739, 1717, 1713, 0, 1710, 1708, 1709, 1701, 1702,
	1703, 1704, 1706, 1707, 0, 0, 0, 0, 4175, 0,
	1737, 0, 0, 1747, 0, 0, 0, 0, 0, 1727,
	1729, 0, 0, 0, 0, 1697, 1698, 0, 1730, 1731,
	1732, 1740, 1741, 1742, 0, 0, 1743, 0, 1744, 0,
	0, 0, 0, 0, 0, 1714, 1715, 1733, 1728, 0,
	0, 0, 0, 0, 0, 1700, 0, 0, 0, 0,
	0, 0, 0, 1735, 1746, 1697, 1698, 0, 1730, 1731,
	1732, 1740, 1741, 1742, 0, 0, 0, 1720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1733, 1728, 0,
	1699, 0, 0, 0, 0, 1700, 0, 0, 0, 0,
	1719, 0, 0, 0, 1746, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1699, 0, 0, 0, 0, 0, 0, 1734, 0, 0,
	1719, 0, 0, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1722, 1723, 1724, 1725, 0, 0, 0, 0, 0,
	0, 1705, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1721,
	0, 1722, 1723, 1724, 1725, 0, 1737, 0, 0, 1747,
	0, 1705, 0, 0, 0, 1727, 1729, 0, 0, 0,
	0, 0, 0, 0, 0, 1738, 0, 0, 0, 0,
	0, 0, 1743, 0, 1744, 0, 0, 0, 0, 0,
	0, 1714, 1715, 0, 0, 0, 1737, 0, 0, 1747,
	0, 0, 0, 0, 0, 1727, 1729, 0, 0, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1743, 1720, 1744, 0, 0, 0, 0, 0,
	0, 1714, 1715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1720, 0, 1745, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 1711, 1712, 1718,
	1739, 1717, 1713, 1734, 1710, 1708, 1709, 1701, 1702, 1703,
	1704, 1706, 1707, 0, 0, 0, 0, 4143, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 1697, 1698, 0, 1730, 1731, 1732, 1740,
	1741, 1742, 0, 0, 0, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1733, 1728, 0, 0, 0,
	0, 0, 0, 1700, 0, 1726, 0, 0, 0, 0,
	0, 1738, 1746, 1697, 1698, 0, 1730, 1731, 1732, 1740,
	1741, 1742, 0, 0, 0, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1733, 1728, 0, 1699, 0,
	0, 0, 0, 1700, 0, 0, 0, 0, 1719, 0,
	0, 1738, 1746, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1699, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1719, 0,
	0, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 1711, 1712, 1718, 1739, 1717, 1713, 0,
	1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707, 1722,
	1723, 1724, 1725, 4142, 0, 0, 0, 0, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 1711, 1712, 1718, 1739, 1717, 1713, 0,
	1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707, 1722,
	1723, 1724, 1725, 3982, 1737, 0, 0, 1747, 0, 1705,
	0, 0, 0, 1727, 1729, 0, 0, 0, 0, 1697,
	1698, 0, 1730, 1731, 1732, 1740, 1741, 1742, 0, 0,
	1743, 0, 1744, 0, 0, 0, 0, 0, 0, 1714,
	1715, 1733, 1728, 0, 1737, 0, 0, 1747, 0, 1700,
	0, 0, 0, 1727, 1729, 0, 0, 1735, 1746, 1697,
	1698, 0, 1730, 1731, 1732, 1740, 1741, 1742, 0, 0,
	1743, 1720, 1744, 0, 0, 0, 0, 0, 0, 1714,
	1715, 1733, 1728, 0, 1699, 0, 0, 0, 0, 1700,
	0, 0, 0, 0, 1719, 0, 0, 1735, 1746, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 1720, 0, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1699, 0, 0, 0, 0, 0,
	0, 1734, 0, 0, 1719, 0, 0, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1734, 0, 0, 0, 1722, 1723, 1724, 1725, 0,
	0, 0, 0, 0, 0, 1705, 0, 0, 0, 0,
	0, 0, 0, 1726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1721, 0, 1722, 1723, 1724, 1725, 0,
	1737, 0, 0, 1747, 0, 1705, 0, 0, 0, 1727,
	1729, 0, 0, 1726, 0, 0, 0, 0, 0, 1738,
	0, 0, 0, 0, 0, 0, 1743, 0, 1744, 0,
	0, 0, 0, 1721, 0, 1714, 1715, 0, 0, 0,
	1737, 0, 0, 1747, 0, 0, 0, 0, 0, 1727,
	1729, 0, 0, 1735, 0, 0, 0, 0, 0, 1738,
	0, 0, 0, 0, 0, 0, 1743, 1720, 1744, 0,
	0, 0, 0, 0, 0, 1714, 1715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1720, 0, 1745,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 1711, 1712, 1718, 1739, 1717, 1713, 1734, 1710, 1708,
	1709, 1701, 1702, 1703, 1704, 1706, 1707, 0, 0, 0,
	0, 3840, 0, 0, 0, 0, 0, 0, 0, 1745,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 1711, 1712, 1718, 1739, 1717, 1713, 1734, 1710, 1708,
	1709, 1701, 1702, 1703, 1704, 1706, 1707, 0, 0, 0,
	0, 3783, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 0, 0, 0, 0, 0, 1697, 1698, 0,
	1730, 1731, 1732, 1740, 1741, 1742, 0, 0, 0, 1721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1733,
	1728, 0, 0, 0, 0, 0, 0, 1700, 0, 1726,
	0, 0, 0, 0, 0, 1738, 1746, 1697, 1698, 0,
	1730, 1731, 1732, 1740, 1741, 1742, 0, 0, 0, 1721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1733,
	1728, 0, 1699, 0, 0, 0, 0, 1700, 0, 0,
	0, 0, 1719, 0, 0, 1738, 1746, 0, 0, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1699, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1719, 0, 0, 0, 0, 0, 0, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 1711, 1712, 1718,
	1739, 1717, 1713, 0, 1710, 1708, 1709, 1701, 1702, 1703,
	1704, 1706, 1707, 1722, 1723, 1724, 1725, 3782, 0, 0,
	0, 0, 0, 1705, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 1711, 1712, 1718,
	1739, 1717, 1713, 0, 1710, 1708, 1709, 1701, 1702, 1703,
	1704, 1706, 1707, 1722, 1723, 1724, 1725, 3781, 1737, 0,
	0, 1747, 0, 1705, 0, 0, 0, 1727, 1729, 0,
	0, 0, 0, 1697, 1698, 0, 1730, 1731, 1732, 1740,
	1741, 1742, 0, 0, 1743, 0, 1744, 0, 0, 0,
	0, 0, 0, 1714, 1715, 1733, 1728, 0, 1737, 0,
	0, 1747, 0, 1700, 0, 0, 0, 1727, 1729, 0,
	0, 1735, 1746, 1697, 1698, 0, 1730, 1731, 1732, 1740,
	1741, 1742, 0, 0, 1743, 1720, 1744, 0, 0, 0,
	0, 0, 0, 1714, 1715, 1733, 1728, 0, 1699, 0,
	0, 0, 0, 1700, 0, 0, 0, 0, 1719, 0,
	0, 1735, 1746, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 1720, 0, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1699, 0,
	0, 0, 0, 0, 0, 1734, 0, 0, 1719, 0,
	0, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1734, 0, 0, 0, 1722,
	1723, 1724, 1725, 0, 0, 0, 0, 0, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1721, 0, 1722,
	1723, 1724, 1725, 0, 1737, 0, 0, 1747, 0, 1705,
	0, 0, 0, 1727, 1729, 0, 0, 1726, 0, 0,
	0, 0, 0, 1738, 0, 0, 0, 0, 0, 0,
	1743, 0, 1744, 0, 0, 0, 0, 1721, 0, 1714,
	1715, 0, 0, 0, 1737, 0, 0, 1747, 0, 0,
	0, 0, 0, 1727, 1729, 0, 0, 1735, 0, 0,
	0, 0, 0, 1738, 0, 0, 0, 0, 0, 0,
	1743, 1720, 1744, 0, 0, 0, 0, 0, 0, 1714,
	1715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1720, 0, 1745, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 0, 0, 1711, 1712, 1718, 1739, 1717,
	1713, 1734, 1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706,
	1707, 0, 0, 0, 0, 3478, 0, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 0, 0, 1711, 1712, 1718, 1739, 1717,
	1713, 1734, 1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706,
	1707, 0, 0, 0, 0, 3006, 0, 0, 0, 0,
	0, 0, 0, 1726, 0, 0, 0, 0, 0, 0,
	0, 1697, 1698, 0, 1730, 1731, 1732, 1740, 1741, 1742,
	0, 0, 0, 1721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1733, 1728, 0, 0, 0, 0, 0,
	0, 1700, 0, 1726, 0, 0, 0, 0, 0, 1738,
	1746, 1697, 1698, 0, 1730, 1731, 1732, 1740, 1741, 1742,
	0, 0, 0, 1721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1733, 1728, 0, 1699, 0, 0, 0,
	0, 1700, 0, 0, 0, 0, 1719, 0, 0, 1738,
	1746, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1699, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1719, 0, 0, 0,
	0, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 1711, 1712, 1718, 1739, 1717, 1713, 0, 1710, 1708,
	1709, 1701, 1702, 1703, 1704, 1706, 1707, 1722, 1723, 1724,
	1725, 3005, 0, 0, 0, 0, 0, 1705, 0, 0,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 1711, 1712, 1718, 1739, 1717, 1713, 0, 1710, 1708,
	1709, 1701, 1702, 1703, 1704, 1706, 1707, 1722, 1723, 1724,
	1725, 3004, 1737, 0, 0, 1747, 0, 1705, 0, 0,
	0, 1727, 1729, 0, 0, 0, 0, 1697, 1698, 0,
	1730, 1731, 1732, 1740, 1741, 1742, 0, 0, 1743, 0,
	1744, 0, 0, 0, 0, 0, 0, 1714, 1715, 1733,
	1728, 0, 1737, 0, 0, 1747, 0, 1700, 0, 0,
	0, 1727, 1729, 0, 0, 1735, 1746, 1697, 1698, 0,
	1730, 1731, 1732, 1740, 1741, 1742, 0, 0, 1743, 1720,
	1744, 0, 0, 0, 0, 0, 0, 1714, 1715, 1733,
	1728, 0, 1699, 0, 0, 2941, 0, 1700, 0, 0,
	0, 0, 1719, 0, 0, 1735, 1746, 0, 0, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 1720,
	0, 1745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1699, 0, 0, 0, 0, 0, 0, 1734,
	0, 0, 1719, 0, 0, 0, 0, 0, 0, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1734,
	0, 0, 0, 1722, 1723, 1724, 1725, 2942, 0, 0,
	0, 0, 0, 1705, 4384, 0, 0, 0, 0, 0,
	0, 1726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1721, 0, 1722, 1723, 1724, 1725, 0, 1737, 0,
	0, 1747, 0, 1705, 0, 0, 0, 1727, 1729, 0,
	0, 1726, 0, 0, 0, 0, 0, 1738, 0, 0,
	0, 0, 0, 0, 1743, 0, 1744, 0, 0, 0,
	0, 1721, 0, 1714, 1715, 0, 0, 0, 1737, 0,
	0, 1747, 0, 0, 0, 0, 0, 1727, 1729, 0,
	0, 1735, 0, 0, 0, 0, 0, 1738, 0, 0,
	0, 0, 0, 0, 1743, 1720, 1744, 0, 0, 0,
	0, 0, 0, 1714, 1715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1720, 0, 1745, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 1711,
	1712, 1718, 1739, 1717, 1713, 1734, 1710, 1708, 1709, 1701,
	1702, 1703, 1704, 1706, 1707, 0, 0, 0, 0, 3003,
	0, 0, 0, 0, 0, 0, 0, 1745, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 4383, 0, 1711,
	1712, 1718, 1739, 1717, 1713, 1734, 1710, 1708, 1709, 1701,
	1702, 1703, 1704, 1706, 1707, 0, 0, 2970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	0, 0, 0, 0, 0, 1697, 1698, 0, 1730, 1731,
	1732, 1740, 1741, 1742, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1733, 1728, 0,
	0, 0, 0, 0, 0, 1700, 0, 1726, 2529, 0,
	0, 0, 0, 1738, 1746, 1697, 1698, 0, 1730, 1731,
	1732, 1740, 1741, 1742, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1733, 1728, 0,
	1699, 0, 2528, 0, 0, 1700, 0, 0, 0, 0,
	1719, 0, 0, 1738, 1746, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1699, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1719, 0, 0, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 0, 0, 1711, 1712, 1718, 1739, 1717,
	1713, 0, 1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706,
	1707, 1722, 1723, 1724, 1725, 0, 0, 0, 0, 0,
	0, 1705, 0, 3090, 0, 0, 3089, 0, 0, 0,
	1736, 0, 0, 0, 0, 1711, 1712, 1718, 1739, 1717,
	1713, 0, 1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706,
	1707, 1722, 1723, 1724, 1725, 0, 1737, 0, 0, 1747,
	0, 1705, 0, 0, 0, 1727, 1729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1743, 0, 1744, 0, 0, 0, 0, 0,
	0, 1714, 1715, 0, 0, 0, 1737, 0, 0, 1747,
	0, 0, 0, 0, 0, 1727, 1729, 0, 0, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1743, 1720, 1744, 0, 0, 0, 0, 0,
	0, 1714, 1715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1720, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 1697, 1698, 0, 1730, 1731, 1732, 1740,
	1741, 1742, 0, 0, 0, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1733, 1728, 0, 0, 0,
	0, 0, 0, 1700, 0, 1726, 0, 0, 0, 0,
	0, 1738, 1746, 1697, 1698, 0, 1730, 1731, 1732, 1740,
	1741, 1742, 0, 0, 0, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1733, 1728, 0, 1699, 0,
	0, 0, 0, 1700, 0, 0, 0, 0, 1719, 0,
	0, 1738, 1746, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1699, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1719, 0,
	0, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 1711, 1712, 1718, 1739, 1717, 1713, 0,
	1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707, 1722,
	1723, 1724, 1725, 0, 0, 0, 0, 0, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 1711, 1712, 1718, 1739, 1717, 1713, 0,
	1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706, 1707, 1722,
	1723, 1724, 1725, 0, 1737, 0, 0, 1747, 0, 1705,
	0, 0, 0, 1727, 1729, 0, 0, 0, 0, 1697,
	1698, 0, 1730, 1731, 1732, 1740, 1741, 1742, 0, 0,
	1743, 0, 1744, 0, 0, 0, 0, 0, 0, 1714,
	1715, 1733, 1728, 0, 1737, 0, 0, 1747, 0, 1700,
	0, 0, 0, 1727, 1729, 0, 0, 1735, 1746, 1697,
	1698, 0, 1730, 1731, 1732, 1740, 1741, 1742, 0, 0,
	1743, 1720, 1744, 0, 0, 0, 0, 0, 0, 1714,
	1715, 1733, 1728, 0, 1699, 0, 3091, 0, 0, 1700,
	0, 0, 0, 0, 1719, 0, 0, 1735, 1746, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 1720, 0, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1699, 0, 0, 0, 0, 0,
	0, 1734, 1005, 0, 1719, 0, 0, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1734, 0, 0, 0, 1722, 1723, 1724, 1725, 0,
	0, 0, 0, 0, 0, 1705, 0, 0, 0, 0,
	3096, 0, 0, 1726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1721, 0, 1722, 1723, 1724, 1725, 0,
	1737, 0, 0, 1747, 0, 1705, 0, 0, 0, 1727,
	1729, 0, 0, 1726, 0, 0, 0, 0, 0, 1738,
	0, 0, 0, 0, 0, 0, 1743, 0, 1744, 0,
	0, 0, 0, 1721, 0, 1714, 1715, 0, 0, 0,
	1737, 0, 0, 1747, 0, 0, 0, 0, 0, 1727,
	1729, 0, 0, 1735, 0, 0, 0, 0, 0, 1738,
	0, 0, 0, 0, 0, 0, 1743, 1720, 1744, 0,
	0, 0, 0, 0, 0, 1714, 1715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1735, 0, 0, 0, 0, 0, 3459,
	0, 0, 0, 0, 0, 0, 0, 1720, 0, 1745,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 1711, 1712, 1718, 1739, 1717, 1713, 1734, 1710, 1708,
	1709, 1701, 1702, 1703, 1704, 1706, 1707, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1745,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 1711, 1712, 1718, 1739, 1717, 1713, 1734, 1710, 1708,
	1709, 1701, 1702, 1703, 1704, 1706, 1707, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 0, 0, 0, 0, 0, 1697, 1698, 0,
	1730, 1731, 1732, 1740, 1741, 1742, 0, 0, 0, 1721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1733,
	1728, 0, 0, 0, 0, 0, 0, 1700, 0, 1726,
	0, 0, 0, 0, 0, 1738, 1746, 1697, 1698, 0,
	1730, 1731, 1732, 1740, 1741, 1742, 0, 0, 0, 1721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1733,
	1728, 0, 1699, 0, 3007, 0, 0, 1700, 0, 0,
	0, 0, 1719, 0, 0, 1738, 1746, 0, 0, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1699, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1719, 0, 0, 0, 0, 0, 0, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 1711, 1712, 1718,
	1739, 1717, 1713, 0, 1710, 1708, 1709, 1701, 1702, 1703,
	1704, 1706, 1707, 1722, 1723, 1724, 1725, 0, 0, 0,
	0, 0, 0, 1705, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 0, 0, 0, 0, 1711, 1712, 1718,
	1739, 1717, 1713, 0, 1710, 1708, 1709, 1701, 1702, 1703,
	1704, 1706, 1707, 1722, 1723, 1724, 1725, 0, 1737, 0,
	0, 1747, 0, 1705, 0, 0, 0, 1727, 1729, 0,
	0, 0, 0, 1697, 1698, 0, 1730, 1731, 1732, 1740,
	1741, 1742, 0, 0, 1743, 0, 1744, 0, 0, 0,
	0, 0, 0, 1714, 1715, 1733, 1728, 0, 1737, 0,
	0, 1747, 0, 1700, 0, 0, 0, 1727, 1729, 0,
	0, 1735, 1746, 1697, 1698, 0, 1730, 1731, 1732, 1740,
	1741, 1742, 0, 0, 1743, 1720, 1744, 0, 0, 0,
	0, 0, 0, 1714, 1715, 0, 1728, 0, 1699, 0,
	0, 0, 0, 1700, 0, 0, 0, 0, 1719, 0,
	0, 1735, 1746, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 1720, 0, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1699, 0,
	0, 0, 0, 0, 0, 1734, 0, 0, 1719, 0,
	0, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 3058, 0, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1734, 0, 0, 0, 1722,
	1723, 1724, 1725, 0, 0, 0, 0, 0, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1721, 0, 1722,
	1723, 1724, 1725, 0, 1737, 0, 0, 1747, 0, 1705,
	0, 0, 0, 1727, 1729, 0, 0, 1726, 0, 0,
	0, 0, 0, 1738, 0, 0, 0, 0, 0, 0,
	1743, 0, 1744, 0, 0, 0, 0, 1721, 0, 1714,
	1715, 0, 0, 0, 1737, 0, 0, 1747, 0, 0,
	0, 0, 0, 1727, 1729, 0, 0, 1735, 0, 0,
	0, 0, 0, 1738, 0, 0, 0, 0, 0, 0,
	1743, 1720, 1744, 0, 0, 0, 0, 0, 0, 1714,
	1715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1720, 0, 1745, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 0, 0, 1711, 1712, 1718, 1739, 1717,
	1713, 1734, 1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706,
	1707, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 0, 0,
	1736, 0, 0, 0, 0, 1711, 1712, 1718, 1739, 1717,
	1713, 0, 1710, 1708, 1709, 1701, 1702, 1703, 1704, 1706,
	1707, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1721, 897, 0, 941, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1726, 0, 0, 0, 0, 0, 1738,
	905, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1721, 0, 0, 919, 0, 903, 902,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1738,
	0, 0, 0, 0, 0, 0, 904, 0, 0, 0,
	0, 907, 0, 0, 0, 0, 949, 0, 0, 0,
	0, 0, 0, 0, 0, 916, 917, 0, 0, 0,
	0, 0, 0, 0, 933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	942, 909, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 1711, 1712, 1718, 1739, 1717, 1713, 0, 1710, 1708,
	1709, 1701, 1702, 1703, 1704, 1706, 1707, 910, 0, 0,
	0, 0, 0, 0, 0, 0, 940, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 1711, 1712, 1718, 1739, 1717, 1713, 0, 1710, 1708,
	1709, 1701, 1702, 1703, 1704, 1706, 1707, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 912,
	0, 0, 0, 0, 0, 0, 0, 901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 913, 914, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 921, 920, 0, 0, 0, 0,
	0, 0, 915, 0, 0, 0, 930, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 946, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 943, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 908, 0, 0, 948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 906, 0, 0, 0, 937, 938, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 939, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 935, 0,
	0, 0, 0, 0, 0, 947, 931, 0, 924, 922,
	0, 927, 0, 0, 0, 0, 0, 928, 0, 0,
	899, 0, 944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 900, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 929, 0, 0, 0, 0,
	926, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 945, 0, 0, 0, 0, 0, 0, 0, 932,
	0, 0, 0, 0, 0, 0, 0, 0, 911, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 936,
}
var sqlPact = [...]int{

	9166, -1000, -1000, -1000, -1000, 163, -1000, -1000, 162, 161,
	160, 159, 157, 156, 155, 154, 152, 151, -1000, -1000,
	-1000, -1000, -1000, -1000, 147, -1000, -1000, 146, -1000, 144,
	143, 142, -1000, -1000, 135, -1000, 134, -1000, -1000, -1000,
	-1000, 133, 132, 131, 84312, 83780, 84837, 2198, 103360, 91165,
	2064, 75296, 102828, 74764, 102296, 2046, 101764, 2613, 130, -1000,
	101232, 128, 127, 126, -1000, 100700, -1000, 1934, -1000, 124,
	3082, 60903, 122, 120, 119, 2545, 117, -1000, 116, 115,
	114, -1000, 9245, 1554, -1000, 113, 111, -1000, 10883, 926,
	89044, 109, 108, 2280, 105, 104, 60370, 103, 102, 2241,
	2781, -1000, -1000, 2043, -1000, -1000, 101, 99, 98, 97,
	96, 93, 89, 87, 84, 83, 82, -1000, 80, 79,
	77, 76, 75, 74, 73, 70, -1000, 69, 68, 67,
	66, 65, 63, 62, 59, 58, 57, 54, 53, 50,
	49, -1000, 114742, 48, 1856, 1599, 1596, 1594, 1593, 1584,
	968, 45, 44, 43, 37, 35, 31, 30, 29, 28,
	-1000, 27, 23, 22, 20, 19, 18, 17, 15, 140,
	14, 13, 12, 8, 5, 4, 3, 2031, -1000, 1431,
	1478, 27847, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 109135, 103885, 1, -53, -1, -1000, 3164,
	875, 50245, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 202,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 442, 1929, 724, -1000,
	-1000, -1000, 100175, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2196, -87, -1000, 1885, -1000, -1000, -1000, -1000, -1000,
	721, -1000, 2192, 256, 2130, -1000, -1000, -1000, 3176, -1000,
	-1000, 103885, -1000, 1010, -1000, -1000, 3597, 3595, 1998, 718,
	90633, -1000, 1836, -1000, 921, 29518, -1000, 1259, -1000, 29518,
	200, -1000, -1000, -1000, -1000, -1000, -1000, 3591, 3590, 3589,
	3586, 3584, -1000, -1000, 74232, 21111, 73700, 73168, 99650, 20569,
	83248, 82716, 99118, 68929, 1004, -1000, -1000, -1000, 1373, -1000,
	-1000, -1000, -1000, -1000, -1000, -21, 66219, 3337, 103885, -1000,
	199, -1000, -1000, -1000, -1000, -1000, -1000, 42545, 499, 41976,
	640, 41407, 535, -1000, -1000, -1000, -1000, 68387, -1000, 98586,
	2328, 3583, 3582, 1081, 3581, 3084, 1754, 3580, 1770, 1149,
	3577, 3576, 3575, 3565, 3564, 3563, 3562, 1400, 98054, 2826,
	97522, 1680, 67845, 1003, 82184, 84837, 2542, 96990, 1380, 1363,
	-1000, -1000, -1000, -1000, 2957, 2766, 2697, 1282, -1000, -1000,
	2324, 3561, 3560, 3559, 3556, 3554, 108610, 1727, 3553, 2388,
	3547, 3545, 3544, 3543, 3541, 3539, 3538, -1000, 81652, 1002,
	81120, 80588, 3209, 96458, 80056, 95926, 67303, 40838, 1420, -1000,
	-1000, -1000, 52918, 5851, 5785, 95394, 55078, 84837, 84837, -1000,
	-1000, -1000, -1000, -1000, 40269, 498, 39700, 1074, -1000, -1000,
	53458, 2778, -1000, -1000, -1000, -1000, 39131, 413, 38562, 932,
	103885, -1000, 2824, 1865, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2099,
	1567, 3366, 2627, 66761, 2009, 1410, 3149, 2951, 2942, 1490,
	3536, 3535, 2498, 2940, 2936, 2932, 2929, 2919, 1395, 2450,
	403, 27278, 2815, 1708, 37993, 1444, 1475, 2912, 2911, 3379,
	1871, 1896, 2003, 72636, 3533, 3532, 3118, 2905, 2876, 2767,
	2761, -1000, -1000, -1000, -1000, 1452, -1000, -1000, -1000, -1000,
	-1000, 75821, -1000, -1000, 1212, -1000, -1000, 1212, -1000, -1000,
	-1000, -1000, -1000, 1319, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1431, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2070, -1000, 1958, -1000,
	-1000, 2384, 3109, 3109, 3109, 3173, 416, 404, -1000, 140,
	-1000, -1000, 114322, -1000, -1000, 43102, 43102, 43102, 43102, 43102,
	43102, 43102, 2077, -1000, 715, -1000, -1000, 765, -1000, 712,
	557, -1000, -1000, -1000, -1000, -1000, -1000, 710, -1000, -1000,
	-1000, -1000, -1000, -1000, 3337, -1000, 23876, -1000, -1000, -1000,
	388, 709, 43102, -1000, -1000, 3393, 3392, 955, -1000, 198,
	941, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2821, 704, 696, -1000, 686, 684, 683,
	680, 678, -1000, -1000, -1000, 677, 674, 673, 672, 669,
	664, 662, 660, -1000, 1923, -1000, -1000, -1000, -1000, -1000,
	-1000, 608, 607, 607, 607, -1000, 995, -1000, -1000, -1000,
	396, 601, 335, 600, 599, 595, -1000, 659, 654, 653,
	649, 646, 645, 639, 636, 630, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 994, -1000, -1000, -1000, -1000, -22, 103885,
	-1000, 442, -22, -1000, -1000, 629, -1000, 31758, 31758, 31758,
	-1000, -1000, 2182, 43102, -1000, 2087, -1000, -13, -13, 878,
	51837, -1000, 49164, 878, 597, 776, 56670, -1000, 2759, -1000,
	-1000, 627, 197, -1000, -1000, -1000, -1000, 21651, 2747, 103885,
	103885, 84837, 84837, 84837, 3004, 43102, -1000, -1000, 64084, 103885,
	85362, -1000, -1000, 3296, 61428, 63554, 103885, 2820, 63029, -1000,
	3111, -1000, -1000, 103885, -1000, 43102, -1000, 3295, 1616, 69999,
	3226, -33, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2366,
	2383, 1131, 2225, -1000, 3016, 1369, -1000, 29518, 3067, -1000,
	-1000, -1000, 196, 21651, -1000, -1000, -1000, -1000, -1000, -1000,
	2533, 2984, 1333, -1000, 2220, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1704, 2980, -1000, 1736, 2976, 1700,
	-1000, -1000, 2412, -1000, -1000, 3104, -1000, -1000, 1789, 2967,
	-12, -1000, -1000, 2451, -1000, -1000, 1846, -1000, -1000, 975,
	2966, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	79524, 54538, 53458, 66219, -25, -1000, -1000, -1000, -1000, -165,
	-1000, 20027, 114322, -1000, -1000, -1000, -1000, 1744, 114322, 837,
	-1000, -1000, 2965, -1000, 114322, 829, -1000, -1000, 2963, -1000,
	2817, -1000, -1000, 2288, -1000, -1000, 3531, -1000, -1000, 3530,
	-1000, 3529, 3528, 3527, -1000, 1658, 1881, 3526, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 78999, 2181, -1000, -1000,
	77935, -1000, 2287, 3221, -1000, -1000, -1000, 78467, 999, -1000,
	975, 2286, -1000, 88512, 942, -1000, 3525, 3202, 2584, 975,
	2285, -1000, -1000, -1000, -1000, -1000, 763, -1000, 58256, -1000,
	58256, -1000, 1538, -1000, 108085, -13, 84837, 3337, -1000, 3524,
	-1000, -1000, -1000, -1000, -1000, 2962, 3523, 3520, 3519, -1000,
	103885, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 203, 2960,
	-1000, -1000, 87987, 203, 2956, -1000, 203, 2955, -1000, 87462,
	-1000, -1000, 2123, 2953, -1000, 214, 2952, -1000, -1000, 205,
	2950, -1000, -70, 2949, -1000, -1000, 114322, -1000, -1000, -1000,
	-57, -1000, -1000, -1000, 875, -1000, 52370, -1000, 52370, 90101,
	69469, 952, 658, 59837, 114322, -1000, -1000, -1000, -1000, 114322,
	-1000, -1000, -1000, -259, -1000, -1000, 69469, 53458, 114322, -1000,
	-1000, -1000, -1000, 114322, -1000, -1000, -1000, 69469, 77935, -1000,
	94862, 77410, -1000, -1000, 1398, 2438, -1000, -1000, -1000, 69469,
	1276, 69469, 69469, 69469, -1000, 94330, -1000, -1000, 1960, 1370,
	3107, 1949, 84837, -1000, 1945, -1000, -1000, -1000, 3135, -1000,
	-1000, 2816, -1000, 62487, 86937, -1000, 86412, -1000, 85887, -1000,
	84837, -1000, 84837, -1000, 3517, 3515, 3513, 3512, -1000, 3511,
	3124, -1000, 114322, 3117, -1000, 3510, 3215, 2815, 114322, -1000,
	2964, 1604, 1591, 103885, -1000, -1000, 103885, -1000, 103885, -1000,
	-1000, -1000, 1449, -1000, -1000, 2365, -1000, -1000, -1000, -1000,
	84837, -1000, -1000, -1000, -1000, -1000, -1000, 2814, -1000, 1647,
	-1000, 1938, -1000, 3027, 1397, -1000, -1000, 215, -1000, -1000,
	-33, -1000, 107560, -1000, 2384, -1000, 103885, -1000, 2425, 2806,
	2812, 1557, 2206, 2458, -1000, 37424, 2447, 46444, 2214, 140,
	-1000, -1000, 140, 140, 28961, -1000, -1000, 61428, 61428, 21651,
	1334, 43102, 43102, 43102, 43102, 43102, 43102, 43102, 43102, 43102,
	43102, 43102, 43102, 43102, 43102, 43102, 43102, 43102, 43102, 43102,
	43102, 43102, 43102, 43102, 43102, 43102, 43102, 43102, 43102, 43102,
	43102, 43102, 43102, 43102, 43102, 43102, 2205, 43102, 1315, 43102,
	43102, 43102, 43102, 1788, -1000, -1000, 1905, 492, 1899, -1000,
	3343, 3343, 3343, 585, 585, 114362, 114362, 546, 3509, 765,
	-1000, 43102, -1000, 81, 43102, 22193, -1000, 404, 7565, 2400,
	-1000, 401, 22762, -1000, -1000, -1000, 23876, 557, 36855, 43102,
	986, 114322, -1000, -1000, 1383, 3352, 19486, 2830, 2669, 626,
	761, 655, 26709, 26140, 25571, 25002, 650, 43102, 43102, 43102,
	43102, 43102, 43102, 43102, 43102, -1000, -1000, 3371, -1000, 3352,
	-1000, -1000, -1000, -1000, 3352, 1325, 1286, 3352, -1000, 3352,
	3352, 5784, 5784, 36298, 35729, 35160, 47001, 34591, 43102, 24433,
	34022, 33453, -1000, 103885, -22, 3292, 43102, 241, -1000, 113134,
	-1000, 241, 241, 625, -58, 114322, 2431, 2431, 50776, 2336,
	2085, 2085, 2085, -1000, 878, 15129, 878, 93275, 2096, 878,
	878, 189, 210, 392, 48633, 2087, 93275, 742, 624, -3,
	-4, -5, -1000, -1000, -6, -7, -1000, -1000, 84837, 623,
	22193, 21651, 184, 1415, -63, 2485, 2483, 2466, -1000, 2462,
	1728, -64, 1314, 84837, 103885, -174, -1000, 4482, -65, -1000,
	964, 183, 3352, -1000, -1000, -1000, -1000, -1000, 3507, 3504,
	-1000, 993, 621, 619, 406, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 608, 607, 607, 607, -1000, 396, 601,
	335, 600, 599, 595, -1000, -1000, -1000, -1000, -1000, 2746,
	84837, 103885, -165, 85362, -111, -1000, -1000, -1000, -1000, -1000,
	84837, 870, -74, 1090, -33, -1000, -1000, -1000, 1212, -1000,
	2018, -1000, -1000, -1000, -1000, -1000, -1000, 1376, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 955, -1000, -1000, -1000,
	-1000, -1000, -1000, 3357, 3350, -23, -1000, -1000, 21651, -1000,
	-37, 1758, 1702, -1000, 72104, 2224, 3110, 3503, 2573, 3094,
	1492, -1000, 1422, 1299, 3168, 75821, 3243, 3270, 894, -1000,
	2742, -1000, -1000, 917, 1646, 1701, 1296, 75821, 1736, -1000,
	61428, -1000, 2547, 3167, 1378, 1426, 1378, 1378, 1336, -1000,
	75821, 1698, 1293, 1292, 1795, 1795, -1000, -1000, 1289, 1285,
	2260, -1000, -38, 3235, 3262, 842, -1000, 2735, 1279, -1000,
	-1000, 84837, 21651, 1504, 1503, 1693, 1277, -24, -1000, 3238,
	3229, 1271, 1270, -1000, 6599, -1000, 69469, 1684, 2948, 2623,
	860, 2622, -1000, -1000, 860, -25, 66219, 103885, 181, -1000,
	81, 43102, 43102, 81, 43102, 81, 3197, 2945, -1000, -1000,
	-1000, -1000, -1000, 3502, 1827, 2386, -1000, -1000, 594, 2284,
	2723, 103885, 2514, -26, 84837, -1000, 2939, 64614, 1736, 2283,
	-1000, -1000, 76878, -1000, 2938, 442, 2281, -1000, 617, 3499,
	-1000, 107035, -1000, 3111, 1352, 2903, 1040, 913, 3291, -1000,
	913, 58787, -1000, 103885, -1000, -13, -1000, 103885, -1000, -1000,
	-1000, 3498, -1000, 84837, -1000, -1000, 84837, 203, 2902, -1000,
	84837, -1000, 84837, 201, 2901, -1000, -1000, 103885, -1000, 84837,
	84837, -1000, 103885, 69469, 69469, 1076, 71054, -75, -76, 377,
	-1000, 93805, 103885, 1039, 71579, 103885, 3054, 966, 53458, -1000,
	-77, -259, 2621, 952, 952, 860, -1000, 860, -1000, 84837,
	2809, -1000, -1000, 69469, 952, 952, 952, -1000, -1000, -1000,
	-1000, 3497, 3489, 3485, -1000, -1000, -1000, 974, 84837, 103885,
	84837, -1000, -1000, 103885, -1000, 103885, 103885, 84837, -1000, 974,
	103885, 974, 103885, 974, 103885, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 81, 43102, -1000, -1000, 3479, 1560, -1000, 2808,
	-1000, 2807, -1000, 25, -1000, -1000, -1000, -1000, -1000, 1986,
	84837, 84837, 84837, 84837, 103885, 103885, 84837, -1000, 75821, -1000,
	2425, 2806, -1000, -1000, -1000, -1000, -1000, -1000, 1539, 2144,
	-1000, 2417, -1000, 1442, -1000, -1000, -1000, 114322, 47541, -1000,
	-1000, 114322, 1757, -1000, 45887, 45330, -1000, -1000, 1595, 84837,
	2501, -1000, 2501, -149, -1000, 112736, 2415, 84837, -1000, -1000,
	-1000, -1000, -1000, 908, 1258, 1258, 1190, 1190, 1190, 1190,
	3234, 2211, 3009, 1066, 10902, 10902, 6298, 6298, 6298, 6298,
	6298, 10902, 1414, 585, 585, 1414, 1414, 1414, 1414, 1414,
	585, 585, 585, 10902, 10902, 10902, 114362, 10271, 11178, 43102,
	43102, 1257, 1873, 492, 8894, 43102, 308, 308, 308, 308,
	-1000, 1996, -1000, -1000, -1000, -1000, 2722, 589, 47001, 47001,
	-1000, -1000, -1000, -1000, 23319, 43102, -1000, -1000, -1000, -1000,
	32884, -1000, -1000, 112520, -313, 375, -143, -2, -1000, 43102,
	43102, 43102, 369, -1000, 179, 43102, 103885, -1000, 14387, 741,
	-166, -1000, -82, 1381, -1000, 43102, -1000, -1000, 1254, -1000,
	1252, 1204, 1196, -1000, 588, 364, -1000, 176, -1000, 2079,
	587, 584, 43102, -1000, -1000, -1000, -1000, -1000, 112480, -1000,
	-1000, 112122, -1000, -1000, 112082, -1000, -1000, 111906, -1000, -1000,
	-1000, 114146, 14262, 13824, 13699, 5469, 13123, 12390, -85, 357,
	-90, 355, 904, 902, 342, 338, 337, -99, -1000, 3475,
	3473, 3472, -1000, 3471, 3470, 3469, -1000, 3467, 3466, 3464,
	-1000, 3462, 3461, 3460, -1000, 3457, 3456, 3453, -1000, 3452,
	3451, 3449, -1000, 3448, 3446, 3445, -1000, 3444, 3439, 3434,
	-101, 336, -1000, 2719, -143, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 333, -1000, 332, -1000, 114106, -143, 331,
	5054, -1000, 47001, 47001, 47001, -1000, 327, -1000, 113094, -1000,
	113748, 32327, 32327, 32327, 326, 113708, 43102, -143, -102, -1000,
	-104, -1000, -1000, 466, -114, 970, 31758, 49712, 21651, -1000,
	970, 970, 43102, -1000, 43102, 2446, -1000, -1000, -1000, 2440,
	1816, 2431, 50776, -1000, -1000, -1000, -1000, 93275, -1000, 3337,
	2586, -1000, 93275, -1000, -1000, 103885, 442, -1000, 93275, 93275,
	21651, 878, -1000, 878, 93275, 561, -1000, -1000, -1000, -1000,
	-1000, 325, 55608, -2, 175, 21651, 975, -1000, 2550, 2550,
	2550, 2550, -1000, -1000, 103885, 1163, -27, -113, 3311, -1000,
	1988, -1000, 61428, -1000, 762, 817, 21651, -1000, -1000, -1000,
	583, -1000, 3352, 3352, -1000, 3352, 103885, 2715, 148, 92,
	64614, 64614, 981, 29518, -1000, 1212, -1000, -1000, 1494, -1000,
	1831, -1000, 1130, -1000, -1000, -1000, -1000, 29518, -1000, 3253,
	103885, 103885, 84837, -1000, 103885, -1000, 2277, 106510, 2275, 61428,
	103885, -1000, -1000, 571, 937, 2408, 2402, 1035, 103885, 103885,
	2399, 105985, 105460, -1000, 3432, 103885, 1936, 43102, 64614, 2138,
	2093, 81, 81, -1000, -1000, 81, 569, 1260, 84837, 84837,
	103885, 84837, 1656, -1000, -1000, -1000, -1000, -1000, 76346, -1000,
	-1000, 3370, 3367, -1000, 1378, -1000, -1000, -1000, 1378, 1736,
	1653, 103885, 84837, 64614, 103885, -1000, -1000, 103885, 1667, 103885,
	2855, 885, -1000, 2002, 81, 81, -1000, -1000, 81, 568,
	21651, 1858, -1000, 2823, 103885, 3390, 103885, 103885, 103885, 64614,
	3144, 104935, 103885, 103885, 64614, 6599, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 65694, 1045, 975,
	1651, 1158, 75821, 53458, 962, 53458, 2596, -1000, -1000, 18945,
	-1000, 114322, 114322, -1000, 114322, -1000, 61957, 103885, -1000, 998,
	103885, 71579, 936, 2899, 57725, -165, 952, 69469, 84837, -26,
	103885, -1000, -1000, 1736, 2896, 442, 2263, -1000, 69469, 3290,
	2895, 567, 3427, 3425, -1000, 2175, 2262, -1000, -1000, 104410,
	2994, 801, 103885, 970, 50776, 1828, -1000, 56140, 1018, 103885,
	1762, 86, -1000, -1000, -1000, 10, 103885, -1000, 775, 3424,
	-1000, -1000, 203, -1000, 84837, 203, 203, -1000, 84837, 84837,
	2123, -1000, 214, 205, -1000, -70, -1000, -1000, 1076, 1076,
	952, -209, 559, -1000, 855, 853, 53998, 69469, -117, -1000,
	-1000, -1000, -1000, -1000, 84837, 103885, 1251, 2581, 103885, -123,
	-1000, 174, 558, -1000, 2245, -1000, -1000, 966, 53458, 2714,
	-1000, -1000, 979, -1000, 1386, 952, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -15, -165, -165, -165,
	-27, -1000, 974, -1000, 974, -1000, 974, -1000, 114322, -1000,
	-1000, 1556, 1549, 103885, -1000, 21651, 103885, 84837, 21651, 84837,
	2794, 2769, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1050, -1000, 1757, 2143, -1000, 557, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2347, -1000, -28, 28961,
	882, -1000, -1000, 84837, -18, 43102, 43102, 8591, 6856, 43102,
	47001, 47001, -1000, 43102, 4910, -1000, -1000, -1000, -1000, -1000,
	2711, 556, 43102, 61428, 4977, 4850, -1000, 324, 10182, 1414,
	-1000, 43102, -1000, 323, 31201, -1000, 113492, -35, -130, -1000,
	15683, -143, -133, -1000, -1000, 757, -1000, 2943, -1000, 43102,
	113532, 2291, 1953, 1794, 1582, 3352, 3389, 18404, -1000, 59312,
	984, 2103, 111866, -1000, -1000, -1000, -1000, 61428, 61428, 43102,
	43102, -1000, 43102, 43102, 43102, -1000, -1000, -1000, 3352, 903,
	-1000, -1000, -1000, 903, -1000, -1000, 1378, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1378, -1000, 43102, -1000, -1000, 2706, 43102, -1000,
	61428, 61428, 47001, 47001, 47001, 47001, 47001, 47001, 47001, 47001,
	47001, 47001, 47001, 47001, 47001, 47001, 47001, 47001, 47001, 47001,
	47001, 2475, 47001, 3335, 3335, 3335, -1000, 2700, 2706, 43102,
	43102, 61428, 318, 317, 314, -1000, 43102, -143, -1000, -1000,
	1076, 553, -1000, 2337, -1000, 2666, -1000, 43102, -1000, -223,
	-1000, 2087, -1000, -1000, 2666, 2666, -138, 114322, 50776, 50776,
	-1000, 550, 43102, 2426, -1000, -1000, 739, -311, -1000, 844,
	-1000, -1000, -1000, -1000, -1000, 442, -1000, -1000, -1000, 170,
	93275, 93275, 737, -1000, -140, -1000, -1000, -147, -1000, 3289,
	310, 21651, -1000, 970, 3088, -1000, -1000, -1000, -1000, -1000,
	-1000, -165, 103885, 103885, 2118, 3388, -1000, 3362, 755, 734,
	169, 3352, 309, 306, 304, -165, 103885, 103885, 103885, -1000,
	-1000, -1000, 2502, -1000, -33, -1000, -1000, -1000, 43102, -1000,
	-1000, 3106, 1156, 1152, -1000, -1000, 2892, -1000, 2258, -1000,
	1024, -1000, 1832, -1000, 43102, 548, 2578, 545, 544, 3423,
	1852, 3422, 1038, 2891, 2123, 2890, 2123, -1000, -1000, -1000,
	916, -1000, 114322, -1000, 540, 538, -1000, -37, 1572, 1636,
	978, -1000, -1000, 43102, 43102, 92750, -1000, 454, 3104, -19,
	-1000, -1000, 1629, 1150, -1000, -1000, -1000, -1000, 1736, 1622,
	1147, -1000, -1000, -1000, -165, -165, 977, -1000, -1000, 2854,
	-1000, 976, -1000, -1000, 43102, -1000, -38, 1146, 3212, 2255,
	84837, 1144, -1000, 1140, -1000, -1000, -1000, 3228, 2123, 2888,
	1126, -1000, -1000, -1000, -1000, -1000, 65154, -1000, 103885, 84837,
	1620, 860, -1000, 2335, 860, 962, 2705, -1000, 2494, -1000,
	84837, 3419, 291, -148, -39, 61428, 3286, -1000, 2165, 478,
	84837, 909, -1000, 3337, -1000, -1000, -1000, -1000, 3220, 84837,
	3284, 2887, 975, 81, 84837, 3386, -1000, -1000, 84837, 2886,
	2173, 2253, 2373, 801, 70529, -1000, 975, 2100, -60, -1000,
	1762, 30632, 3100, -153, -1000, -1000, -1000, 970, 58787, 50776,
	43102, 3418, -155, -1000, -1000, -1000, -1000, 203, -1000, -1000,
	-1000, 201, -1000, -1000, -1000, -1000, -1000, -1000, 91695, 91695,
	69469, 69469, 69469, 952, 103885, 103885, 71579, -1000, 536, 103885,
	103885, 533, -1000, 103885, 103885, 3416, 69469, -41, 531, -1000,
	836, 834, 830, -1000, -1000, -1000, -1000, -1000, -1000, -259,
	81, -1000, 2126, 84837, -1000, 17863, -1000, -1000, -1000, -1000,
	-1000, 974, -1000, -1000, 2015, 2209, 2015, 1737, 1734, -1000,
	2137, -1000, -1000, -1000, -1000, 2509, 3101, 21651, 3210, 308,
	43102, 43102, 356, 4613, 433, 308, 43102, 43102, 61428, 11794,
	-156, 43102, 43102, -1000, 43102, 733, 114322, 3385, 43102, 289,
	287, -1000, -1000, -1000, 3344, -1000, -1000, -1000, 114322, 43102,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 286, -1000, 166,
	-1000, -1000, -1000, 109660, -1000, 43102, 275, 3166, -1000, 274,
	273, 8305, 242, 111508, 111468, 111292, 272, -1000, -1000, 270,
	266, 114322, 2700, 114322, -1000, -1000, 838, 838, 1327, 1327,
	1327, 1327, 3335, 753, 620, 699, 260, 260, 260, 530,
	1099, 1099, 260, 260, 260, 2703, 2414, 528, 1117, -1000,
	-1000, 114322, 114322, 263, -1000, -1000, -1000, -143, 262, 1076,
	-1000, 2650, 3165, 114322, -1000, 50776, 2650, 2650, -1000, -1000,
	1816, 103885, 114322, 50776, -1000, 2586, -1000, 16235, -1000, 21651,
	-1000, -1000, -1000, -1000, 3337, -1000, 55608, -1000, 527, -1000,
	165, -1000, 3088, -1000, 825, -1000, -165, -165, -1000, -1000,
	656, 3415, 754, 21651, 261, -1000, -1000, -1000, -165, -165,
	-165, -1000, 3052, 114322, 103885, 103885, 103885, 2885, -1000, 2251,
	-1000, 1035, 111252, 51307, -1000, 51307, 103885, -1000, -1000, 1839,
	2461, 1071, -1000, 3137, 103885, -1000, 103885, -1000, -1000, 103885,
	103885, 84837, 103885, 2867, -169, 114322, -42, -1000, 824, -1000,
	1341, -1000, 17322, 103885, 84837, 103885, 84837, 2067, -1000, 2862,
	-171, 21651, -1000, 3383, 3381, 2883, 3141, 3380, 103885, -1000,
	103885, 84837, 3050, -1000, -1000, -1000, -1000, 1589, 1123, 962,
	-45, 515, -1000, 815, -1000, -1000, 813, 962, -1000, 69469,
	53458, 442, -1000, 2571, -1000, 89569, 2163, 81, -1000, 3414,
	92225, 514, -1000, 2124, -1000, 651, 64614, 1736, 81, 84837,
	-1000, -1000, 442, 257, -51, -1000, 1031, 21651, 84837, 2882,
	2381, 801, 70529, -1000, 1352, 2458, -1000, -56, -1000, 602,
	81, 2100, -1000, -60, 114322, -1000, 811, -1000, -1000, -1000,
	-178, -1000, -1000, 244, -1000, 3045, 3038, -1000, 2678, 51307,
	512, 507, 103885, 3030, -1000, -1000, -180, 2803, 2803, 69469,
	53458, 69469, 966, -1000, 2243, -1000, -1000, -1000, -1000, -1000,
	21651, 1638, -1000, 503, 502, -1000, -1000, -1000, -1000, 3101,
	308, 308, 43102, 43102, 43102, 308, 11794, -181, -1000, 308,
	308, -143, -1000, -1000, 113492, -1000, -1000, -1000, 114322, -1000,
	16781, 2017, -1000, 110894, -1000, 28961, -1000, -1000, 43102, 43102,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 47001, 2702,
	501, 61428, -1000, -1000, 243, 965, 43102, 44773, 2087, 965,
	965, -1000, -190, -1000, -1000, -1000, 3337, 165, -1000, -1000,
	3413, 21651, -1000, 69469, 744, -1000, 3411, -1000, -1000, -1000,
	-1000, -1000, -1000, 103885, -1000, 103885, -1000, 21651, 103885, 2707,
	2242, -1000, 937, 2398, 500, 47001, 84837, 788, -1000, 3278,
	2636, -192, -1000, 103885, 43102, 103885, -195, -197, 2236, -1000,
	-1000, 2230, 43102, -1000, 61428, 496, 2123, 2123, -198, -200,
	-1000, -1000, 43102, 1122, 103885, 30075, -1000, 3410, 3104, -1000,
	-1000, -1000, -1000, 103885, 43102, 1121, -1000, -1000, -1000, 3378,
	2123, 21651, -1000, 2123, 2123, 3141, 1061, 103885, 84837, -1000,
	2318, 2318, 69469, 53458, -1000, -70, 962, 3283, 2555, 3409,
	-1000, -1000, -1000, -1000, 2396, -1000, -1000, 103885, 2394, 958,
	-1000, -203, -1000, 810, 809, 71579, 936, 914, -1000, -1000,
	-1000, -1000, 442, 3279, -1000, 3377, 495, 103885, 2160, 494,
	21651, 3098, 801, 70529, -1000, 2994, 1762, -1000, 2247, 103885,
	3087, -1000, 2458, 492, -1000, 952, 491, 490, 2464, 2464,
	-208, 51307, 51307, -211, 487, 952, -1000, -213, -1000, -1000,
	-1000, -1000, -92, -1000, 780, 756, -1000, -1000, 84837, 84837,
	43102, 43102, -1000, 308, 308, 308, -1000, 212, -1000, -1000,
	2100, 3158, -1000, -100, 110854, 110638, 4588, 47001, 61428, -214,
	-1000, -1000, 103885, 114322, -120, -1000, 114322, 483, 482, 329,
	-1000, -1000, -1000, 586, -1000, -1000, 3405, -1000, -1000, 1886,
	-1000, -1000, -1000, 103885, 2252, -1000, -1000, 1034, 43102, 1117,
	481, 43102, -1000, 3276, -1000, 2516, 2726, 1860, 51307, -1000,
	3101, -1000, 110279, -1000, 1028, 1817, -1000, -1000, 114322, 3141,
	51307, -1000, -1000, 480, 471, 114322, 470, 803, 2698, -1000,
	-1000, -1000, -1000, 114322, 463, 3212, -1000, -1000, -1000, -1000,
	2123, 84837, -1000, -1000, -1000, -216, -1000, -1000, 1824, 81,
	2002, 2618, -1000, 2163, 461, -1000, -1000, 2151, 2499, -1000,
	92225, 29518, 29518, 211, 3274, 914, -1000, 3332, -1000, 3269,
	81, -1000, 51307, -1000, 84837, 51307, 2159, 1795, 2361, 70529,
	-1000, 2373, -1000, -1000, -221, 103885, 1762, -1000, -1000, 69469,
	69469, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1028, -222, -228, -1000, 69469, -1000, -1000, 2243,
	-1000, 103885, -1000, 103885, -1000, -1000, -229, -230, -1000, 2056,
	43102, 28961, -1000, -1000, 4588, -237, -1000, -132, -1000, 3255,
	44773, 3403, 3401, 3400, -1000, -1000, -1000, -1000, 2880, 2643,
	110230, 2341, 103885, 110193, -1000, 2720, -1000, -1000, 2555, 459,
	-1000, -1000, -1000, -1000, 882, 103885, 2555, 2640, 84837, 1033,
	-238, 2015, 2015, 43102, 28404, 2054, 43102, -1000, -1000, 3141,
	-1000, 2692, 3338, -1000, 936, -1000, 2044, 103885, -1000, 3128,
	-1000, 3029, -1000, -1000, -1000, 2571, 81, -1000, -1000, 81,
	-1000, -240, 1031, -246, 84837, 1401, 801, 801, -1000, 2381,
	970, -1000, -1000, -247, -248, 1860, 1028, 951, -256, -1000,
	-258, -261, -1000, -1000, 206, 44216, 44216, 44216, -143, -149,
	-1000, 103885, 443, -1000, -1000, -1000, -1000, 2841, 961, -1000,
	2153, 1916, 204, 1059, -1000, -1000, 2002, 103885, -1000, -1000,
	-1000, 960, 442, -1000, 43102, 1028, -263, -1000, 1017, -266,
	-1000, 1016, -271, -1000, 2695, -1000, -272, 2123, 959, 3194,
	-1000, -1000, -1000, 2151, 84837, -273, -1000, -1000, 2259, -1000,
	2555, 958, -1000, 1028, 441, 1860, 440, -1000, -1000, 103885,
	1378, 3098, 2971, 952, 952, 2555, 1860, 970, 438, 952,
	-1000, -1000, -1000, 2878, -1000, 48081, 2088, 1732, 112696, 2878,
	2878, -1000, -1000, 103885, 3182, -1000, 2155, 2154, 1433, -1000,
	-1000, -1000, -1000, -1000, -1000, 2636, -274, 3169, 2341, 114322,
	2555, -1000, 2015, 2607, -1000, 2015, 2694, -1000, 2025, -1000,
	-1000, -1000, 1711, 3334, -1000, 437, -1000, 103885, 1723, 1719,
	3399, 2002, 2151, 1860, 51307, 2555, 51307, -165, -1000, 1795,
	1253, -1000, -1000, 2002, 2555, -1000, -1000, -1000, 1768, 3267,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 791, -1000,
	3012, -1000, 1049, 2083, 2083, 970, -1000, 790, 2153, -1000,
	-1000, 435, -1000, 434, -1000, 2111, -1000, -1000, 103885, -1000,
	-1000, 3398, -1000, 936, -1000, 2555, -279, 2002, -280, 1401,
	-1000, 1480, 951, 2002, 1709, -1000, -1000, 2089, 43659, 43102,
	-1000, 3314, -1000, -1000, 2428, -1000, -1000, 43102, 2636, 43102,
	43102, 57200, -282, -1000, 2151, 2002, 1028, 951, 1860, -1000,
	58787, 970, 951, -1000, -1000, -1000, 114322, -1000, -1000, -1000,
	114322, -1000, -287, -288, -209, 91695, 2117, -1000, 951, 1860,
	970, 2555, -269, -1000, 970, 2002, 1116, -289, -1000, -1000,
	-1000, 970, 2555, -1000, 2002, -1000, -1000, -1000, 430, -1000,
	-1000, 2002, 951, 43102, 951, 970, -296, 970, -1000, 2002,
	-1000, -1000,
}
var sqlPgo = [...]int{

	0, 4240, 4235, 4234, 4233, 4224, 4223, 4220, 4219, 4218,
	4217, 4215, 4213, 4212, 4211, 4209, 4208, 4207, 4206, 4204,
	4203, 4197, 4196, 4195, 4193, 4192, 4191, 4190, 4189, 4182,
	4179, 4178, 4177, 4172, 4171, 4170, 4169, 4167, 4166, 4165,
	4160, 4159, 4158, 4157, 4156, 4155, 4153, 4152, 4150, 4148,
	4147, 4144, 4140, 4139, 4138, 4136, 4133, 44, 4131, 4126,
	4122, 4121, 4120, 4118, 4117, 4115, 4114, 4112, 4109, 4108,
	4106, 4105, 4104, 4103, 4102, 4101, 4099, 48, 4097, 244,
	4095, 4094, 4089, 4087, 4086, 4081, 4078, 4077, 4076, 4075,
	4074, 4072, 241, 4071, 128, 4070, 4067, 4065, 4062, 4061,
	240, 4060, 4059, 4058, 4054, 251, 4052, 4050, 4049, 4048,
	4044, 4043, 4042, 4040, 4039, 4037, 85, 143, 4036, 4034,
	194, 4033, 4027, 4026, 4023, 4021, 4017, 4016, 4015, 4014,
	4013, 217, 4012, 239, 4006, 4001, 4000, 3999, 3995, 3994,
	3993, 3990, 3987, 3983, 3981, 3980, 3977, 3974, 3973, 3962,
	3960, 3956, 3955, 3954, 3951, 3950, 3948, 3947, 3945, 3944,
	3937, 3936, 3935, 3933, 3932, 3924, 3922, 3919, 250, 158,
	3918, 3917, 238, 237, 3916, 3915, 3913, 3912, 3910, 111,
	7, 40, 3909, 3908, 60, 73, 71, 87, 89, 101,
	3906, 93, 3905, 108, 56, 3901, 10, 3, 153, 226,
	6290, 215, 3900, 3899, 3898, 210, 166, 3897, 207, 3896,
	3884, 3881, 3880, 59, 39, 155, 159, 150, 149, 662,
	3878, 3876, 83, 74, 47, 36, 19, 232, 11, 26,
	3872, 3871, 3870, 3869, 3104, 117, 3868, 236, 213, 144,
	3867, 3865, 3861, 719, 3860, 3859, 52, 3857, 189, 80,
	122, 4, 109, 3854, 131, 31, 3851, 172, 62, 3850,
	138, 88, 76, 7873, 8460, 3848, 102, 67, 79, 3984,
	152, 151, 174, 110, 142, 190, 186, 156, 132, 3846,
	220, 3844, 3267, 61, 139, 3842, 3840, 3837, 69, 176,
	90, 3834, 3833, 54, 22, 6, 1, 147, 18, 106,
	37, 25, 3832, 20, 3831, 3824, 3815, 3813, 3810, 38,
	148, 3808, 247, 3807, 70, 46, 23, 3806, 95, 188,
	3805, 199, 107, 3804, 3803, 228, 183, 145, 3801, 75,
	203, 3800, 3799, 3796, 3794, 3793, 114, 2, 112, 3790,
	3788, 133, 3787, 43, 209, 169, 3785, 55, 3783, 3782,
	154, 91, 127, 245, 130, 196, 99, 201, 161, 198,
	3781, 3774, 3773, 164, 3767, 3766, 195, 134, 3765, 3764,
	180, 255, 81, 34, 65, 206, 66, 168, 136, 3763,
	177, 3760, 3756, 252, 170, 185, 5, 13, 78, 113,
	3752, 9, 205, 137, 178, 103, 3751, 4821, 2301, 2271,
	3750, 3749, 123, 105, 63, 104, 135, 235, 64, 3748,
	3747, 2372, 3745, 3744, 3742, 3740, 162, 3739, 3738, 3737,
	116, 126, 179, 3735, 82, 51, 45, 16, 94, 216,
	246, 100, 197, 167, 227, 3733, 3727, 3724, 160, 3722,
	49, 175, 3719, 165, 230, 3717, 3716, 270, 3715, 124,
	1281, 57, 140, 3714, 192, 3711, 3708, 3707, 3703, 3702,
	3701, 3699, 543, 202, 3698, 3697, 3696, 29, 171, 3695,
	234, 129, 173, 96, 41, 3694, 84, 3847, 3691, 233,
	200, 98, 125, 3690, 3687, 3349, 53, 184, 0, 11036,
	5968, 9422, 10120, 3686, 4066, 3685, 3684, 3683, 191, 120,
	3682, 3681, 3680, 92, 3679, 68, 3678, 3675, 58, 3674,
	21, 12, 14, 27, 24, 461, 434, 3673, 3671, 50,
	115, 118, 3667, 243, 204, 3666, 3664, 3663, 3662, 86,
	3659, 32, 3654, 35, 3653, 3652, 42, 8, 28, 3650,
	3647, 212, 3639, 193, 214, 3636, 141, 3634, 3250, 121,
	3633, 3631, 231, 77, 3629, 229, 3627, 3208, 3626, 3625,
	17, 3624, 3622, 211, 157, 187, 3621, 3620, 146, 3618,
	3617, 3616, 219, 3615, 3614, 30, 3613, 15, 3611, 3610,
	181, 3029, 3608, 3603, 33, 3600, 163,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 11, 11, 7, 7,
	7, 8, 8, 8, 8, 44, 44, 9, 9, 9,
	9, 9, 9, 9, 9, 32, 28, 29, 30, 487,
	487, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 16, 16, 33, 33, 17, 17, 35, 35,
	18, 18, 36, 36, 552, 552, 21, 38, 22, 39,
	15, 553, 553, 553, 553, 31, 23, 40, 25, 25,
	25, 25, 25, 182, 182, 182, 182, 20, 20, 34,
	34, 216, 216, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 551, 551,
	218, 218, 217, 212, 212, 554, 554, 219, 219, 219,
	221, 221, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 451, 451, 451, 483, 483, 482, 482, 482, 567,
	567, 568, 568, 568, 568, 568, 119, 119, 349, 349,
	349, 46, 46, 46, 46, 46, 546, 546, 184, 184,
	184, 186, 186, 185, 185, 185, 185, 68, 68, 559,
	559, 560, 560, 558, 561, 561, 561, 183, 183, 183,
	115, 115, 115, 115, 116, 116, 117, 117, 187, 187,
	187, 189, 189, 188, 188, 188, 188, 188, 188, 188,
	188, 193, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 96, 96, 485, 485, 486, 486, 178, 178, 179,
	179, 179, 179, 180, 180, 181, 181, 181, 60, 190,
	190, 192, 192, 191, 191, 48, 48, 48, 48, 48,
	48, 48, 49, 49, 49, 49, 49, 50, 50, 50,
	50, 50, 50, 51, 51, 51, 51, 51, 51, 58,
	58, 58, 58, 169, 169, 61, 61, 61, 61, 61,
	61, 61, 61, 61, 61, 61, 65, 65, 65, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 570, 570,
	571, 571, 572, 572, 573, 573, 573, 573, 573, 573,
	573, 573, 573, 573, 573, 573, 573, 573, 573, 573,
	573, 573, 573, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 74, 74, 311, 311, 281, 281, 75, 75, 75,
	76, 76, 77, 77, 62, 62, 544, 544, 326, 326,
	442, 442, 79, 79, 348, 348, 80, 80, 80, 80,
	80, 80, 81, 81, 81, 81, 81, 81, 81, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 89, 89, 89, 89, 89, 90, 90,
	90, 87, 87, 87, 84, 84, 84, 83, 83, 83,
	88, 88, 88, 543, 272, 272, 86, 86, 86, 85,
	85, 85, 327, 327, 91, 91, 91, 91, 282, 92,
	92, 92, 92, 92, 92, 92, 92, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	444, 444, 93, 93, 93, 409, 409, 97, 97, 97,
	364, 364, 98, 98, 98, 98, 98, 99, 99, 99,
	99, 99, 99, 118, 118, 118, 118, 118, 118, 548,
	548, 319, 319, 237, 237, 237, 237, 108, 108, 108,
	108, 109, 109, 109, 110, 110, 174, 174, 125, 125,
	125, 125, 125, 124, 124, 124, 124, 124, 124, 52,
	52, 52, 53, 53, 54, 54, 55, 55, 56, 56,
	57, 57, 57, 57, 57, 127, 127, 564, 564, 129,
	126, 126, 126, 128, 128, 128, 128, 130, 131, 131,
	131, 131, 131, 131, 131, 131, 132, 132, 476, 476,
	335, 335, 474, 474, 495, 495, 475, 475, 286, 286,
	286, 286, 286, 287, 287, 287, 484, 484, 484, 484,
	484, 484, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 175, 175,
	176, 177, 177, 177, 177, 177, 154, 154, 154, 168,
	168, 168, 168, 168, 168, 168, 157, 157, 157, 143,
	143, 134, 134, 134, 134, 134, 134, 134, 138, 138,
	138, 138, 138, 138, 138, 138, 135, 135, 145, 145,
	145, 145, 145, 139, 139, 140, 140, 164, 164, 142,
	142, 144, 144, 144, 144, 144, 144, 144, 144, 144,
	136, 136, 136, 136, 147, 147, 147, 147, 371, 371,
	371, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 167, 167, 167, 167, 167, 167, 562, 562,
	563, 563, 161, 161, 161, 161, 161, 161, 423, 423,
	155, 155, 155, 155, 160, 160, 160, 160, 163, 163,
	163, 163, 354, 354, 152, 152, 152, 153, 153, 153,
	158, 158, 159, 156, 156, 162, 162, 162, 162, 137,
	137, 137, 574, 574, 574, 165, 165, 151, 151, 166,
	166, 166, 166, 166, 166, 166, 166, 149, 149, 149,
	148, 148, 148, 148, 150, 150, 141, 545, 545, 541,
	541, 541, 541, 541, 541, 541, 541, 542, 542, 542,
	542, 547, 547, 102, 102, 102, 102, 102, 111, 111,
	111, 111, 111, 103, 103, 103, 103, 103, 105, 105,
	104, 104, 104, 104, 69, 69, 69, 69, 69, 14,
	14, 14, 70, 70, 196, 196, 196, 300, 300, 197,
	197, 294, 294, 294, 294, 194, 194, 195, 195, 71,
	71, 575, 575, 575, 555, 555, 555, 556, 556, 556,
	556, 556, 556, 288, 288, 289, 289, 389, 389, 389,
	389, 389, 292, 292, 292, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 295, 295, 220, 220, 220, 298,
	299, 299, 296, 296, 297, 297, 297, 302, 302, 301,
	304, 304, 303, 388, 504, 504, 506, 506, 506, 506,
	506, 506, 506, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 372, 372, 576, 576, 502, 502,
	502, 503, 498, 498, 499, 499, 499, 499, 499, 290,
	290, 291, 291, 291, 291, 500, 501, 317, 317, 427,
	505, 505, 507, 507, 509, 577, 577, 577, 577, 577,
	577, 578, 578, 578, 387, 387, 386, 386, 309, 309,
	510, 510, 510, 510, 511, 511, 511, 511, 511, 514,
	513, 512, 512, 512, 512, 512, 73, 73, 73, 351,
	351, 350, 350, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 171, 171,
	240, 240, 67, 67, 67, 12, 12, 12, 557, 557,
	557, 72, 72, 72, 72, 72, 72, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 550, 550, 549,
	549, 241, 241, 580, 580, 78, 78, 78, 78, 78,
	78, 78, 445, 445, 446, 446, 66, 66, 66, 66,
	66, 373, 373, 370, 370, 369, 369, 316, 316, 425,
	425, 425, 426, 245, 245, 246, 246, 213, 213, 213,
	27, 26, 19, 19, 24, 24, 42, 42, 42, 42,
	45, 45, 41, 41, 41, 41, 43, 43, 37, 37,
	565, 565, 566, 566, 107, 107, 112, 112, 112, 112,
	112, 113, 113, 113, 113, 114, 114, 114, 114, 123,
	123, 170, 170, 170, 170, 170, 170, 170, 47, 47,
	47, 47, 59, 59, 59, 59, 121, 582, 582, 582,
	122, 122, 122, 581, 581, 238, 238, 383, 383, 384,
	384, 583, 583, 385, 385, 385, 385, 385, 231, 230,
	232, 232, 233, 233, 64, 64, 64, 226, 226, 227,
	227, 227, 228, 228, 222, 222, 223, 223, 224, 224,
	225, 225, 229, 229, 584, 584, 100, 100, 100, 173,
	173, 280, 280, 280, 380, 380, 380, 310, 310, 252,
	252, 382, 382, 382, 382, 347, 347, 347, 172, 172,
	324, 324, 337, 337, 338, 338, 439, 439, 339, 106,
	106, 120, 120, 200, 200, 198, 198, 198, 198, 198,
	198, 198, 198, 205, 205, 206, 206, 207, 207, 208,
	209, 209, 209, 209, 328, 328, 210, 210, 210, 199,
	199, 199, 201, 201, 201, 201, 201, 201, 201, 204,
	204, 204, 204, 211, 211, 211, 203, 203, 521, 521,
	521, 523, 523, 525, 525, 524, 524, 520, 520, 522,
	522, 579, 579, 353, 353, 353, 307, 308, 305, 305,
	306, 306, 314, 314, 312, 313, 313, 315, 315, 424,
	424, 424, 214, 214, 214, 344, 344, 344, 344, 345,
	345, 376, 376, 374, 374, 374, 374, 375, 375, 377,
	377, 377, 378, 378, 379, 379, 341, 341, 342, 342,
	343, 343, 343, 343, 405, 405, 202, 202, 202, 321,
	321, 321, 322, 322, 395, 395, 395, 395, 395, 395,
	396, 396, 394, 394, 394, 394, 428, 428, 428, 428,
	428, 428, 428, 428, 428, 429, 430, 430, 323, 323,
	431, 381, 381, 539, 539, 539, 540, 540, 422, 422,
	432, 432, 432, 432, 432, 432, 420, 420, 421, 421,
	440, 441, 441, 357, 357, 357, 357, 355, 355, 358,
	358, 358, 358, 356, 356, 433, 433, 433, 433, 346,
	346, 434, 434, 434, 434, 435, 436, 436, 437, 437,
	390, 391, 391, 447, 447, 447, 447, 449, 320, 320,
	320, 320, 320, 497, 496, 496, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 463, 463, 463,
	463, 463, 463, 463, 463, 463, 463, 464, 464, 464,
	464, 464, 464, 464, 450, 450, 450, 450, 450, 454,
	454, 454, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 455, 455, 460, 460, 461, 461, 461,
	456, 457, 462, 462, 462, 462, 585, 585, 466, 466,
	458, 458, 458, 458, 458, 458, 458, 458, 458, 452,
	452, 452, 459, 459, 459, 366, 366, 366, 366, 366,
	366, 366, 366, 366, 366, 366, 366, 366, 365, 365,
	367, 367, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 399,
	399, 399, 399, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 515, 515,
	515, 515, 515, 515, 515, 515, 401, 401, 518, 518,
	519, 519, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 526, 526, 527, 527, 529, 529, 530, 530, 531,
	532, 532, 532, 533, 534, 534, 528, 528, 535, 535,
	535, 535, 536, 536, 537, 537, 537, 537, 537, 538,
	538, 538, 538, 538, 411, 411, 412, 412, 418, 418,
	418, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 242, 242, 242,
	242, 242, 333, 333, 331, 331, 331, 334, 334, 332,
	332, 330, 330, 329, 329, 408, 408, 406, 406, 410,
	410, 359, 359, 465, 465, 465, 465, 465, 465, 465,
	465, 360, 360, 360, 368, 361, 361, 362, 362, 362,
	362, 362, 402, 403, 363, 363, 363, 404, 404, 413,
	417, 417, 416, 415, 415, 414, 414, 392, 392, 393,
	393, 340, 340, 586, 586, 336, 336, 438, 438, 438,
	438, 284, 284, 325, 325, 283, 283, 275, 275, 276,
	276, 276, 276, 318, 318, 419, 419, 467, 467, 468,
	468, 469, 469, 470, 470, 471, 472, 473, 407, 407,
	262, 261, 249, 250, 260, 259, 258, 248, 251, 255,
	256, 257, 253, 254, 268, 267, 266, 273, 274, 264,
	265, 443, 247, 277, 277, 278, 278, 278, 279, 279,
	279, 279, 243, 243, 244, 244, 269, 269, 270, 271,
	271, 263, 263, 263, 234, 234, 234, 235, 235, 236,
	236, 481, 481, 478, 478, 478, 479, 479, 479, 480,
	480, 480, 480, 477, 477, 477, 477, 477, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 489, 489, 490, 490, 490, 490, 490,
	490, 490, 490, 490, 490, 490, 490, 490, 490, 490,
	490, 490, 490, 491, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 494, 494,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	3, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 1, 1, 1, 3, 6, 6, 6, 4, 1,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 2, 3,
	10, 3, 6, 4, 3, 1, 3, 3, 2, 1,
	1, 3, 1, 3, 2, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 8, 6, 6, 6, 9, 4,
	3, 2, 2, 0, 1, 3, 1, 1, 1, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 1, 3, 12, 3, 1,
	0, 1, 1, 2, 3, 3, 0, 4, 6, 0,
	5, 6, 8, 2, 1, 3, 1, 3, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 6, 4, 9, 7, 12, 12, 12, 9,
	2, 7, 2, 1, 1, 1, 3, 3, 0, 3,
	1, 3, 1, 1, 3, 2, 5, 0, 7, 2,
	0, 1, 2, 3, 1, 1, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 6,
	6, 6, 6, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 6, 3, 3, 4,
	3, 3, 4, 3, 4, 4, 4, 3, 5, 7,
	3, 3, 4, 3, 3, 3, 3, 3, 2, 0,
	1, 0, 1, 0, 4, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 1, 2, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 5, 1, 2, 1, 3,
	2, 0, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 3,
	5, 3, 1, 3, 2, 2, 2, 2, 1, 2,
	2, 5, 3, 3, 6, 6, 3, 1, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 3, 5, 7, 2, 3, 0, 3, 5, 2,
	3, 0, 2, 3, 2, 3, 2, 6, 4, 7,
	7, 7, 2, 6, 4, 7, 7, 7, 2, 2,
	1, 1, 3, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 2, 4, 3, 2, 2, 1, 2,
	1, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	1, 3, 5, 4, 6, 4, 3, 0, 1, 3,
	2, 4, 2, 4, 1, 6, 3, 1, 1, 5,
	3, 2, 6, 3, 3, 4, 4, 3, 1, 3,
	2, 3, 3, 1, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 2,
	1, 3, 3, 3, 3, 3, 2, 3, 3, 1,
	1, 1, 1, 1, 2, 2, 5, 7, 3, 3,
	3, 4, 4, 6, 5, 5, 5, 3, 4, 4,
	3, 4, 4, 3, 4, 4, 5, 3, 5, 5,
	5, 7, 3, 3, 3, 2, 3, 2, 3, 4,
	3, 5, 3, 6, 5, 6, 3, 5, 6, 3,
	4, 3, 4, 3, 3, 4, 4, 5, 0, 1,
	1, 3, 2, 4, 3, 3, 5, 3, 4, 3,
	5, 3, 3, 4, 4, 5, 3, 3, 1, 1,
	0, 2, 5, 4, 6, 4, 6, 4, 1, 0,
	3, 4, 4, 5, 7, 5, 3, 3, 3, 4,
	4, 5, 2, 0, 4, 2, 3, 4, 2, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 3,
	4, 3, 1, 1, 1, 2, 3, 2, 3, 6,
	6, 7, 9, 7, 9, 3, 4, 10, 10, 3,
	5, 5, 5, 3, 2, 5, 5, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 6, 5, 8, 3, 6,
	6, 3, 12, 15, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	1, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 8, 0, 1, 1, 0, 2,
	1, 0, 1, 0, 9, 9, 3, 1, 3, 7,
	1, 3, 11, 3, 2, 0, 3, 1, 2, 2,
	3, 2, 6, 2, 1, 2, 2, 8, 4, 2,
	5, 5, 5, 2, 2, 0, 1, 3, 11, 12,
	8, 5, 3, 1, 5, 10, 7, 11, 3, 3,
	0, 2, 4, 3, 3, 1, 5, 1, 3, 1,
	2, 0, 1, 2, 2, 0, 1, 3, 3, 2,
	2, 1, 1, 1, 4, 0, 6, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 5, 8, 4, 1,
	0, 1, 2, 2, 1, 2, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 1, 4, 2,
	2, 2, 4, 7, 3, 4, 6, 3, 1, 1,
	1, 8, 10, 11, 7, 10, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 3, 0, 1, 8, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 17, 20, 16, 19,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 2,
	4, 2, 3, 1, 0, 2, 0, 1, 1, 0,
	9, 6, 6, 8, 6, 8, 6, 7, 8, 9,
	6, 8, 6, 7, 8, 9, 6, 8, 6, 8,
	1, 0, 2, 0, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 3, 2,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 0,
	2, 4, 2, 1, 0, 2, 1, 1, 0, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 2, 3,
	2, 2, 1, 2, 11, 14, 3, 3, 0, 3,
	4, 2, 1, 0, 3, 0, 3, 0, 3, 0,
	3, 0, 4, 0, 1, 0, 6, 7, 3, 6,
	3, 1, 3, 1, 1, 4, 2, 1, 3, 1,
	3, 4, 8, 11, 5, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 6,
	4, 1, 1, 3, 3, 1, 2, 4, 4, 2,
	3, 5, 5, 1, 3, 1, 0, 1, 2, 3,
	2, 4, 2, 3, 0, 2, 0, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 8,
	8, 8, 2, 4, 4, 4, 2, 2, 2, 2,
	3, 1, 3, 1, 2, 6, 7, 1, 0, 1,
	0, 1, 0, 1, 1, 0, 1, 5, 1, 0,
	1, 0, 1, 0, 3, 3, 5, 1, 3, 3,
	4, 5, 2, 2, 0, 2, 2, 1, 1, 1,
	0, 1, 0, 2, 2, 5, 4, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 3,
	1, 3, 3, 3, 2, 0, 4, 2, 5, 3,
	2, 0, 1, 3, 3, 5, 1, 1, 1, 1,
	1, 3, 2, 4, 4, 0, 4, 4, 3, 4,
	1, 5, 3, 4, 5, 5, 1, 5, 1, 3,
	2, 0, 3, 0, 2, 3, 1, 3, 2, 0,
	3, 5, 6, 4, 6, 4, 3, 2, 1, 0,
	5, 1, 0, 2, 2, 2, 1, 1, 0, 1,
	1, 1, 0, 4, 2, 1, 2, 2, 4, 1,
	3, 1, 2, 3, 2, 4, 1, 0, 1, 0,
	2, 1, 0, 2, 5, 7, 2, 1, 2, 4,
	3, 5, 0, 1, 3, 5, 1, 2, 1, 1,
	1, 1, 1, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 1, 1,
	4, 4, 6, 6, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 3, 0, 5, 4, 1, 2, 1,
	4, 1, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 2, 5, 1, 4, 2, 5, 1, 4, 3,
	3, 0, 1, 2, 4, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 1, 0,
	1, 4, 1, 3, 3, 3, 5, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 5,
	4, 6, 3, 5, 4, 6, 4, 6, 5, 7,
	3, 3, 3, 3, 3, 4, 3, 2, 4, 2,
	3, 3, 4, 3, 4, 3, 4, 5, 6, 6,
	7, 6, 7, 6, 7, 3, 4, 4, 1, 3,
	1, 3, 3, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 5, 6, 6, 7, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 6, 1,
	1, 1, 1, 1, 1, 2, 1, 5, 5, 6,
	3, 1, 1, 1, 2, 2, 2, 4, 3, 5,
	6, 8, 6, 5, 4, 3, 2, 2, 4, 1,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 6, 6, 8, 8, 6, 4,
	6, 6, 6, 4, 1, 3, 3, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 4, 3, 4, 3, 4, 3, 4,
	4, 3, 6, 5, 5, 5, 4, 4, 3, 4,
	3, 5, 0, 5, 0, 2, 0, 1, 3, 3,
	2, 2, 0, 6, 1, 0, 3, 0, 3, 3,
	3, 0, 1, 4, 2, 2, 2, 2, 2, 3,
	2, 2, 3, 0, 4, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 1, 2, 3, 2, 3, 2,
	3, 1, 0, 1, 3, 1, 3, 3, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 3, 1, 2, 3, 0, 3, 3, 2,
	2, 1, 2, 2, 3, 2, 1, 1, 1, 5,
	1, 2, 4, 2, 0, 1, 0, 3, 5, 1,
	0, 1, 2, 1, 0, 1, 3, 3, 2, 1,
	1, 1, 3, 1, 3, 3, 1, 1, 1, 1,
	5, 3, 1, 1, 3, 1, 1, 1, 1, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 7, 1, 7,
	5, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 571, -94, -91, -60, -58, -97, -98,
	-80, -99, -93, -118, -123, -106, -107, -119, -125, -170,
	-175, -176, -177, -3, -46, -48, -61, -79, -81, -92,
	-101, -100, -102, -108, -115, -111, -96, -52, -120, -124,
	-133, -171, -172, -173, 32, 31, 100, 80, 151, 126,
	134, 196, 373, 413, 424, 387, 405, 392, -128, -129,
	441, -47, -59, -122, -121, 73, 127, 400, -4, -12,
	29, 46, -49, -50, -51, 62, -67, -63, -74, -68,
	-65, -569, 102, -522, -82, -85, -114, -573, 139, 158,
	214, -103, -104, 356, -109, -110, 407, -112, -113, 409,
	159, -54, -53, 153, -198, -200, -126, -127, -174, -134,
	-135, -136, -137, -138, -139, -140, -164, -141, -142, -143,
	-144, -145, -146, -167, -147, -148, -149, -150, -151, -156,
	-152, -153, -154, -155, -157, -158, -160, -161, -162, -163,
	-165, -166, 446, -159, 503, 49, 460, 82, 143, 417,
	21, -5, -6, -7, -8, -9, -10, -11, -14, -13,
	-62, -64, -66, -69, -70, -71, -78, -72, -73, -521,
	-83, -84, -87, -89, -90, -86, -88, 406, -201, -199,
	568, 518, -16, -21, -22, -17, -18, -20, -23, -19,
	-24, -33, -38, -39, -35, -36, -34, -37, -40, -41,
	-42, -43, -44, -45, -26, -31, -32, -27, -28, -29,
	-30, -15, -25, 537, 546, -204, -202, -203, -211, 433,
	526, 477, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, -282, 2, -264, -269, -270, -271, -263,
	-234, -491, -494, 4, -488, -492, 165, 223, 320, 21,
	23, 22, 24, 25, 26, 27, 29, 30, 41, 42,
	44, 45, 46, 47, 48, 49, 53, 55, 59, 60,
	61, 62, 63, 64, 68, 73, 74, 79, 80, 81,
	82, 83, 84, 85, 91, 88, 89, 90, 92, 94,
	96, 97, 98, 99, 100, 101, 103, 104, 105, 107,
	108, 116, 117, 118, 119, 121, 126, 127, 130, 125,
	129, 132, 133, 134, 137, 138, 139, 141, 142, 144,
	145, 146, 148, 149, 151, 152, 153, 156, 154, 485,
	155, 157, 158, 159, 160, 163, 171, 172, 173, 178,
	180, 184, 185, 188, 189, 190, 191, 192, 193, 194,
	195, 197, 201, 203, 204, 205, 206, 207, 213, 214,
	216, 217, 218, 219, 224, 225, 226, 230, 227, 236,
	237, 241, 242, 243, 245, 249, 250, 251, 252, 253,
	254, 256, 258, 257, 260, 263, 264, 267, 271, 272,
	275, 276, 277, 278, 280, 281, 284, 282, 285, 286,
	283, 287, 289, 290, 291, 292, 293, 294, 295, 296,
	297, 298, 299, 300, 288, 303, 301, 305, 306, 307,
	318, 316, 311, 312, 308, 313, 309, 310, 314, 315,
	322, 323, 326, 211, 328, 329, 332, 350, 336, 337,
	338, 341, 342, 345, 348, 349, 351, 352, 353, 354,
	355, 356, 357, 358, 360, 361, 363, 364, 365, 367,
	368, 369, 371, 373, 374, 376, 377, 379, 380, 381,
	382, 383, 384, 385, 387, 389, 388, 390, 392, 394,
	395, 400, 405, 402, 403, 404, 406, 407, 408, 409,
	411, 412, 413, 415, 416, 417, 418, 420, 422, 423,
	426, 427, 443, 444, 462, 424, 425, 428, 429, 430,
	431, 432, 436, 434, 435, 437, 438, 439, 441, 442,
	445, 446, 448, 449, 450, 451, 452, 453, 456, 458,
	459, 460, 461, 463, 466, 467, 468, 469, 464, 476,
	471, 473, 474, 478, 479, 480, 481, 482, 483, 484,
	486, 488, 496, 497, 498, 500, 503, 504, 505, 506,
	494, 508, 509, 512, 513, 514, 517, 515, 516, 518,
	520, 523, 524, 525, 531, 530, 532, 538, 539, 541,
	542, 543, 36, 50, 51, 54, 56, 58, 69, 70,
	71, 75, 122, 123, 150, 161, 162, 174, 186, 187,
	198, 200, 208, 209, 210, 231, 232, 234, 239, 261,
	325, 327, 343, 347, 362, 366, 370, 372, 386, 419,
	454, 465, 470, 489, 490, 491, 492, 499, 501, 526,
	527, 528, 533, 540, -282, 2, -264, 334, -257, 2,
	-234, -234, 373, 28, 2, 28, 361, 435, 480, 482,
	2, -548, -319, 2, 28, -237, -234, 102, 196, 433,
	-257, 2, -548, -319, 25, 2, -234, 2, 348, -238,
	2, 424, -234, 281, 2, 571, 94, 272, 74, 419,
	438, -131, 497, -130, 489, 428, -132, -476, 2, 303,
	-234, 571, 571, 571, 28, -247, -234, 477, 223, 428,
	118, 474, 571, 2, 477, 353, 530, 434, 118, 383,
	223, 505, 428, -557, 281, 415, 199, 519, -546, 2,
	-541, 4, -492, -488, -276, -275, 477, 483, 118, -271,
	-263, 561, -270, 571, 571, 571, 2, 242, 243, 382,
	381, 438, 439, 571, 571, 571, 571, 426, 2, 160,
	22, 27, 66, 93, 98, 124, 181, 184, 339, -570,
	350, 380, 437, 476, 479, 486, 500, -556, 461, 68,
	428, -555, -557, 281, 505, 137, -369, 118, 272, 195,
	513, 482, 480, 511, 130, 230, 516, 515, 571, 571,
	22, 27, 66, 77, 98, 137, 160, 181, 184, -572,
	350, 380, 422, 437, 476, 486, 500, 2, 530, 281,
	434, 477, 223, 118, 505, 428, -557, 426, 427, 378,
	-94, 2, 568, 32, 31, 441, -193, 477, 235, 2,
	-234, 571, 571, 2, 242, 243, 426, 427, 571, 571,
	182, -541, 2, 571, 571, 2, 242, 243, 426, 427,
	235, 2, 68, 430, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 2, -168, 438,
	461, 205, 47, 46, 74, 28, 379, 79, 354, 119,
	145, 506, 197, 223, 224, 250, 93, 94, -371, 44,
	243, 242, 427, -562, 426, -423, 478, 429, 435, 473,
	254, 424, 497, 102, 520, 416, 543, 383, 384, 395,
	154, 4, 118, 303, 440, 489, 272, 423, 357, 84,
	571, -579, 2, 477, -581, 2, 497, 497, 2, -581,
	2, -581, 2, -581, 2, -582, 497, 540, 571, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, -199, -201, -200, 571, 571,
	571, 571, 571, 571, 571, -168, 438, 2, 74, 28,
	-312, -314, 510, 233, 147, 340, -198, -200, 2, -521,
	-474, 2, -397, -495, -399, 559, 560, 552, 475, 67,
	319, 544, -411, 124, 511, 334, -494, -400, -413, 150,
	419, -334, 8, 9, 5, 6, 7, -243, -401, -407,
	502, 164, 324, -279, 572, 10, 568, -518, -200, -412,
	37, 200, 65, -478, -278, -244, -450, 234, -277, -263,
	-515, -516, 4, -488, -489, -479, -453, -461, -457, -458,
	-464, -234, -491, 77, 110, 111, 109, 114, 113, 274,
	273, 115, 112, 440, 519, 66, 36, 208, 209, 239,
	325, 210, 75, -517, 138, -490, 231, 232, 454, 51,
	386, 174, 123, 122, 327, 56, 54, 527, -462, 120,
	489, 490, 491, 492, 186, 187, 58, 161, 162, 347,
	370, 470, 499, 501, 198, 261, 43, 106, 183, 229,
	212, 238, 240, 244, 262, 265, 304, 317, 321, 344,
	346, 414, 447, -585, 528, 465, 69, 70, -523, 388,
	-524, -257, -523, 571, 571, 573, 571, -305, -307, -308,
	2, 28, 135, 568, 2, -428, 2, -429, -433, -200,
	255, -432, 568, -430, 566, -264, 335, -519, 420, -515,
	-516, -243, -263, -278, 4, -488, -490, 570, -309, 568,
	118, 477, 78, 223, -364, 568, -234, 28, 334, 493,
	573, -306, 377, -409, 568, 334, 182, 337, 60, -234,
	530, 2, 2, 443, 2, 568, -131, 71, 497, 43,
	438, -384, 2, -385, -230, -231, -232, -440, -233, 241,
	376, 385, 547, 128, 319, 543, -474, -564, 182, 551,
	493, -474, -335, 570, 2, 2, 2, 2, 2, 2,
	-433, 208, -264, 2, -261, -477, 4, -488, -492, -489,
	-493, -491, 28, 31, 32, 33, 35, 37, 38, 39,
	40, 57, 65, 66, 72, 76, 78, 87, 93, 102,
	109, 110, 112, 111, 113, 114, 115, 124, 128, 131,
	135, 136, 140, 143, 147, 164, 166, 179, 181, 182,
	196, 199, 202, 215, 228, 233, 235, 255, 259, 266,
	273, 274, 319, 324, 330, 334, 335, 339, 340, 359,
	375, 391, 410, 433, 440, 457, 472, 477, 487, 493,
	495, 502, 510, 511, 519, 521, 529, 534, 535, 536,
	537, -494, 77, 2, -433, 208, 2, -266, 208, -433,
	-269, 2, -248, -234, 2, -260, -477, 2, -283, 208,
	-264, -265, -269, -267, 2, -269, -273, 2, -234, -485,
	208, 2, -481, 10, -480, 5, 4, -488, -492, -489,
	530, 235, 493, 573, -325, -275, -276, -473, 8, -318,
	-234, 570, -397, 2, -120, -105, 2, 179, -397, 208,
	2, -120, 208, 2, -397, 208, 2, -120, 208, 2,
	-559, 2, -485, 208, -234, 2, 285, 2, 2, 500,
	2, 98, 477, 117, 2, 404, -571, 422, 504, 2,
	2, 2, 2, 2, 2, 2, 477, -253, 2, -234,
	179, -273, 208, -274, 2, -234, -235, 434, -580, 388,
	-485, 208, 2, 530, -267, 2, -267, 223, 237, -248,
	208, 2, 482, 480, 482, 480, 182, 2, 235, 2,
	235, 2, -434, 2, -435, -429, -436, 566, 335, 285,
	2, 2, 2, 2, 2, 208, -234, 477, 117, 2,
	253, 2, 2, 2, 2, 2, 2, 2, -327, 208,
	2, -264, 530, -327, 208, 2, -327, 208, 2, -370,
	2, 87, -248, 208, 2, -272, 208, 2, -267, -318,
	208, 2, -486, 208, 2, -485, -397, 2, -120, 2,
	-444, 2, -443, -480, 526, -94, 568, -94, 568, 438,
	568, -485, -264, -264, -397, 2, -120, -105, 2, -397,
	2, -120, 2, -117, -116, -485, 568, 182, -397, 2,
	-120, -105, 2, -397, 2, -120, 2, -193, 179, 2,
	118, 477, -168, 2, 179, 521, 2, 8, 2, 215,
	-485, 429, 384, 171, 2, 443, 2, 444, 74, -371,
	543, 74, 182, 2, 182, 2, -354, 2, 537, 2,
	2, -545, 2, 334, 182, 2, 182, 2, 182, 2,
	182, 2, 182, 2, 381, 439, 498, 243, 2, -120,
	534, -105, -397, 534, 2, -563, 179, 427, -397, 2,
	496, 252, 155, 182, -354, 2, 182, 2, 182, 2,
	5, 2, 382, 462, 2, 241, 376, 462, 2, -264,
	-574, 2, 477, 530, 434, 2, 2, 88, 89, 182,
	2, 182, 2, 182, 182, 543, 2, -346, -433, -383,
	-384, -383, 493, -312, -314, -168, 443, 2, -205, -344,
	-207, 179, -374, -375, -208, 266, 166, 330, -209, -353,
	28, 135, -353, -353, 60, 569, 569, 11, 12, 76,
	41, 559, 560, 561, 562, 177, 563, 564, 557, 558,
	556, 549, 550, 554, 247, 248, 95, 553, 551, 86,
	279, 421, 167, 168, 169, 170, 401, 221, 34, 222,
	14, 15, 16, 33, 339, 265, 544, 212, 447, 552,
	17, 18, 19, 238, 240, 321, 50, 215, -242, -285,
	-397, -397, -397, -397, -397, -397, -397, 346, 568, -340,
	-392, 566, -200, 568, 568, 568, -473, -200, -397, -411,
	569, -332, 568, -200, -411, -406, 568, 419, 566, 568,
	-414, -397, 5, 5, 5, 568, 570, -526, 538, 179,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 372, -455, 568, -454, 568,
	-454, -454, 531, -452, 568, 546, 539, 568, -452, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 531, 573, -523, -309, 568, -336, -438, -397,
	561, -336, -336, 334, -329, -397, 106, -357, 244, 304,
	183, 262, 414, 229, -394, 572, -394, -422, 546, -200,
	-430, -263, -200, -432, 568, -428, -422, -95, -473, -79,
	-92, -100, -120, -133, -172, -173, 561, -264, 568, 182,
	568, 570, -477, 182, -318, -248, -264, -277, -278, -283,
	134, -329, -541, 505, 428, -318, -237, 38, -408, -447,
	-448, -497, 572, -496, -450, -460, -456, -459, 362, 366,
	-479, 54, 527, -462, 234, 4, -488, -490, 231, 232,
	454, 51, 386, 174, 123, 122, 327, 56, 489, 490,
	491, 492, 186, 187, 58, 528, 465, 69, 70, -541,
	505, 428, -318, 179, -483, 2, -482, -481, 115, 440,
	-370, -476, -329, 38, -384, 2, 124, -481, -583, 573,
	264, -287, 278, 318, 204, 335, 541, 328, 128, -484,
	5, 4, -407, -419, 124, 272, 234, -467, -469, 8,
	-468, 9, -470, 559, 560, -475, -474, 108, 570, -477,
	-216, 402, 441, -215, 24, 29, 139, 225, 307, 524,
	156, -297, 226, 349, 353, 150, 458, 514, -552, -553,
	425, 484, 485, 90, 328, 441, 402, 150, -350, -352,
	38, 116, 307, 348, 61, 218, 283, 284, 460, 533,
	150, 441, 402, 349, 24, 139, -227, -553, 99, 402,
	471, -553, -218, 458, 514, -552, -553, 425, 402, -217,
	-297, 150, 572, 24, 402, 441, 349, -567, -568, 139,
	29, 402, 349, -549, -520, 537, 150, -433, 208, -560,
	-116, 256, 5, 10, -116, -325, 573, 573, -477, 561,
	427, 426, 150, 150, 150, 150, 179, 319, 2, 2,
	2, 2, 2, 184, -555, -572, 2, 2, -264, 208,
	-311, 334, -544, -326, 477, -264, 319, 43, -266, 208,
	2, -269, 530, -549, 319, -268, 208, -264, 38, 568,
	2, -370, 2, 223, -520, 319, -434, -280, -264, -429,
	-280, 441, -257, 38, -394, -264, 2, 150, 2, 2,
	2, -234, -219, 573, 64, 408, 150, -327, 208, -219,
	150, -219, 150, -284, 208, -283, -219, 150, -219, 573,
	150, -219, 150, 573, 150, 569, 573, -444, -444, -485,
	-181, 537, 182, 102, 568, 568, -193, -441, 573, -440,
	-486, -117, -485, -485, -544, -248, 2, -264, 2, 477,
	245, -485, -181, 215, -485, -485, -485, -476, 28, 444,
	2, 381, 439, 498, 89, 444, 2, -264, 477, 118,
	223, 80, -547, 179, -542, 415, 428, 505, -541, -264,
	118, -264, 118, -264, 118, -264, -264, 2, 2, 2,
	2, 2, 85, 85, 2, 46, -563, 179, 2, 496,
	2, 496, 2, -234, -234, -234, 461, 264, -264, 179,
	477, 223, 477, 223, 118, 118, 477, -219, 573, -238,
	-205, -344, -476, -345, -344, -206, -205, -208, 179, 385,
	515, 307, 445, 249, -375, -374, 28, -397, -379, 173,
	306, -397, -377, -399, 559, 560, -468, -470, -328, 328,
	-199, -199, -199, -315, -424, -397, 375, 223, -449, -447,
	-447, -262, -477, 489, -397, -397, -397, -397, -397, -397,
	-397, -397, -397, -397, -397, -397, -397, -397, -397, -397,
	-397, -397, -397, -397, -397, -397, -397, -397, -397, -397,
	-397, -397, -397, -397, -397, -397, -397, -397, -397, 265,
	212, 447, 50, 215, -397, 493, -397, -397, -397, -397,
	301, 319, 324, 502, 164, 512, 135, 328, -586, 472,
	40, -404, -200, -333, 568, -418, 35, 457, 28, -411,
	568, 2, -392, -397, -393, -330, -329, -329, 569, 529,
	28, 135, 561, 2, 569, 573, 38, 569, -397, -330,
	-410, -406, -329, -417, -416, 534, -365, -366, 542, 288,
	121, 206, 286, -367, 432, -471, 8, -477, 561, -527,
	172, 199, 568, 569, 2, 569, 2, 569, -397, 2,
	569, -397, 2, 569, -397, 2, 569, -397, 2, 569,
	2, -397, -397, -397, -397, -397, -397, -397, -329, 8,
	-471, -471, 489, 489, -471, -471, -471, -463, 362, 363,
	364, 365, 267, 268, 269, 270, 366, 367, 368, 369,
	293, 294, 295, 296, 289, 290, 291, 292, 297, 298,
	299, 300, 191, 192, 193, 194, 187, 188, 189, 190,
	-463, -359, 2, -465, -329, 4, 542, 288, 121, 206,
	286, 432, 5, -359, 2, -360, 2, -397, -329, -361,
	-398, -399, 559, 560, 552, -411, -362, 2, -397, -330,
	-397, 57, 259, 495, -363, -397, 182, -329, -329, 2,
	-329, 2, -524, 38, -329, -321, 573, 182, 38, 4,
	-321, -321, 568, 569, 573, -358, 203, 282, 277, -358,
	-428, -357, 244, -355, 344, -355, -355, -422, -249, 566,
	574, -477, -422, -421, -420, 38, -257, 341, -422, -422,
	570, 569, -421, 567, -539, 568, 571, 571, 571, 571,
	571, -264, 568, -329, -477, 570, 463, 569, 238, 238,
	238, 238, 420, 569, 493, -543, -272, -318, 537, -94,
	336, 569, 573, -320, 37, 566, 570, -471, 2, 2,
	-466, 531, 568, 568, -366, 568, 182, -543, -318, -319,
	573, 493, -268, -564, 569, 497, -385, -286, 385, 456,
	403, 436, 474, 8, 9, 8, 9, 573, -477, 573,
	-565, 93, 493, 78, 428, -388, 208, 78, -498, -251,
	93, -499, -234, 72, 511, 375, 181, 148, -565, 93,
	375, -565, 93, 2, 225, 93, 441, 461, 493, 60,
	-433, 41, 41, 28, -120, 260, 182, 543, 477, 223,
	428, 493, -433, -352, -447, 116, 283, 284, 60, -472,
	-467, 559, 560, -472, 60, -472, -472, -472, 537, -266,
	-433, 428, 493, 493, -487, 394, 395, -487, 493, 493,
	394, 45, 124, 573, 41, 41, 28, -120, 260, 182,
	493, -283, -249, 525, 42, 525, 493, 42, 428, 493,
	573, 42, 42, 493, 493, -550, -239, 105, 313, 276,
	314, 97, 310, 96, 309, 103, 311, 104, 312, 532,
	322, 63, 308, 287, 315, -240, -241, 355, 523, -485,
	441, 402, 150, 215, -441, 215, -441, -275, -234, 570,
	-120, -397, -397, -120, -397, -120, 46, 150, 2, -580,
	253, 568, -290, 319, 182, -318, -442, 235, 573, -326,
	150, -482, -351, -350, 319, -268, 208, 2, 150, -309,
	319, 144, 568, 383, 2, -250, 208, -235, -234, -370,
	-222, 481, 150, -348, 521, -380, -120, 568, 124, 38,
	-380, -337, -338, -439, -339, -251, 568, -257, -394, -234,
	2, -264, -327, -219, 150, -327, -327, -219, 573, 150,
	-248, -267, -272, -318, -485, -486, -94, -443, 569, 569,
	569, -180, 338, -179, -234, 5, -193, 521, -289, -389,
	-388, -502, -503, -498, 265, 223, 511, 237, 165, -310,
	-252, -251, 117, -187, 537, -116, 569, -441, 215, -181,
	-181, -441, -441, -264, 179, -485, -181, -181, -181, 2,
	2, 2, -354, -264, -248, -283, -264, -318, -318, -318,
	-272, -354, -248, -354, -248, -354, -248, -120, -397, 2,
	438, 179, 179, 570, -354, 383, 118, 477, 353, 223,
	-264, -283, -264, -283, -248, -248, -264, -433, -345, -206,
	335, 249, 445, -377, -378, -399, 419, 420, -378, 419,
	420, 8, 9, 8, 9, -210, 449, 323, -327, 573,
	-213, 39, 131, 249, -264, 543, 146, -397, -397, 493,
	-586, 472, -404, 146, -397, 301, 324, 502, 164, 512,
	135, 328, 182, 568, -398, -398, 569, -331, -397, -397,
	567, 576, 569, -314, 573, -312, -397, -329, -329, 569,
	570, -329, -318, 567, 567, 573, 569, -415, -416, 140,
	-397, 493, 493, 493, 493, 568, 569, 570, -532, 345,
	568, 568, -397, 569, 569, 569, 569, 38, 573, 573,
	573, 569, 573, 573, 573, 569, 569, 569, 573, 569,
	543, 543, 569, 569, 569, 569, 573, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 569, 573, 569, 182, 569, 569, -368, 359, 569,
	11, 12, 559, 560, 561, 562, 177, 563, 564, 557,
	558, 556, 549, 550, 551, 86, 279, 421, 14, 15,
	16, 238, 215, -398, -398, -398, 569, -402, -403, 182,
	179, 38, -363, -363, -363, 569, 182, -329, 569, 569,
	568, -525, 281, 319, 569, -391, -390, 535, -438, -322,
	2, -428, -259, -477, -391, -391, -329, -397, 244, 244,
	-356, 521, 334, -358, -428, -421, -473, -396, -395, 180,
	39, 131, 316, 211, -421, -257, -309, -421, -421, -477,
	-422, -422, -420, 569, -540, -473, 569, -323, -431, -519,
	-314, 570, -477, -190, -520, -169, 5, 324, -169, -169,
	-169, -318, 493, 493, 25, 360, -447, 566, 567, 8,
	-477, 568, -471, -471, -471, -318, 182, 182, 182, -482,
	-482, -349, 537, -474, -384, 509, 83, 385, 489, -474,
	-215, 402, -251, -251, -264, -273, 319, -388, 208, -221,
	319, -447, -258, -234, 568, -372, 539, 249, 249, 521,
	-251, -258, 249, 208, -251, 208, -258, 2, -258, -551,
	385, 329, -397, -482, 271, 383, 320, -216, 402, 441,
	-120, -120, -120, 568, -564, 521, 134, -264, -283, -264,
	-273, -268, 441, 402, 317, -277, -472, -472, -350, 441,
	402, -273, -266, -482, -318, -318, 428, -248, 163, 543,
	-217, -120, -120, -120, 568, -249, -218, 402, 5, 208,
	-251, 5, -234, -251, -273, -482, -568, 24, -251, 208,
	-251, -273, -482, -239, -485, 324, 517, -549, 428, 493,
	-433, -116, -184, 537, -116, -178, 219, 561, -546, -234,
	530, -234, -288, -291, -289, -251, -196, -197, 539, 537,
	150, -281, -264, 566, -181, -485, -264, -273, -274, 150,
	-309, 319, -485, 38, 150, 568, 2, 2, 334, 319,
	-250, 208, -223, 141, -584, 551, -248, -391, -322, -347,
	-382, 410, 334, -310, 526, -257, -347, -324, 573, 182,
	551, 570, -310, -437, 561, 2, -219, -327, -219, -219,
	-283, -284, -219, -219, -219, -94, -94, -181, 573, 568,
	551, 551, 568, -485, -485, 569, 573, -264, -250, 223,
	223, -256, -235, 569, 573, 570, 568, -189, 338, -188,
	142, 251, 236, 450, 451, 452, 453, 133, -187, -117,
	182, -55, 537, 477, -181, 572, -354, -354, -354, 438,
	438, -234, -260, -248, -264, -261, -283, 179, 179, 515,
	-378, 335, 275, -424, -214, 545, -264, 572, -397, -397,
	146, 146, -397, -398, -398, -397, 146, 182, 568, -397,
	-408, 33, 33, 569, 573, -393, -397, 569, 529, -314,
	-314, 569, 561, -477, 572, 569, -406, 143, -397, 487,
	288, 206, 286, -367, 286, -367, -367, -471, 5, -477,
	561, -533, -254, 568, -234, 535, -313, 340, 569, -449,
	-447, -397, -397, -397, -397, -397, -471, -452, -452, -467,
	-467, -397, -402, -397, -449, -447, -398, -398, -398, -398,
	-398, -398, -398, -398, -398, -398, -398, -398, -398, -398,
	-398, -398, -398, -398, -398, 135, 319, 328, -398, -403,
	-402, -397, -397, -447, 569, 569, 569, -329, -94, 568,
	281, -341, 199, -397, -441, 573, -341, -341, 569, -428,
	-428, 568, -397, 244, 567, 573, 575, 551, -309, 570,
	-420, -421, 567, 569, 573, 569, 573, -381, 38, 569,
	-477, -391, -192, -191, 132, 53, -318, -318, 337, 5,
	8, 566, 567, 570, -471, 569, 569, 569, -318, -318,
	-318, 117, 307, -397, 493, 493, 150, 319, 523, -504,
	-499, 148, -397, 568, 223, 568, 568, 2, -212, 139,
	441, -566, 2, 521, 150, -219, 150, -219, 541, 568,
	568, 493, 428, 537, -329, -397, -182, 124, -476, -553,
	572, -553, 572, 428, 493, 428, 493, 537, 163, 537,
	-329, 493, -451, 48, 26, 319, -267, 493, 493, -219,
	150, 505, 441, -485, 324, -273, -268, 441, 402, -441,
	-186, 338, -185, 142, 412, 133, 251, -441, -184, 182,
	235, -268, 2, 569, 569, 573, -505, 38, 332, 332,
	568, -264, -75, 537, -440, -473, 43, -266, 38, 150,
	-549, -120, -268, -445, -446, 5, -264, 150, 334, 319,
	-224, 258, -584, -481, -520, -314, -347, -336, 320, 91,
	569, -391, -338, -322, -397, 2, 569, -219, -219, -179,
	-180, -485, -485, -485, -181, -193, -193, -389, -292, 568,
	-250, -235, 568, -193, -252, 2, -486, 573, 568, 551,
	551, 551, -441, -120, 338, -264, 561, -354, -299, -298,
	353, 328, -299, 419, 419, 335, 173, 254, -213, -249,
	-397, -397, 146, 33, 33, -397, -397, -408, 569, -397,
	-397, -329, 567, 5, -397, 569, 569, 8, -397, 569,
	570, -534, -234, -397, 569, 60, 569, 569, 573, 573,
	569, 569, 569, 569, 569, 569, 569, -403, 182, 135,
	328, 568, 569, 569, -94, -405, 202, 60, -428, -405,
	-405, -356, -318, -428, -395, -249, 566, -477, -473, -431,
	568, 570, -191, 551, 567, 2, 566, -477, 569, 117,
	-251, -251, -388, 150, -506, 93, -508, 76, 165, 102,
	319, 324, 511, 375, 72, 124, 391, -576, 38, 548,
	569, -316, -425, -519, 568, -234, -316, -318, 319, 468,
	124, 319, 124, 117, 505, 79, -251, -258, -318, -318,
	-264, -273, 157, 569, 573, 551, 2, 561, 561, -273,
	-268, -273, -266, 351, 157, 569, -249, 5, 5, 150,
	-246, 76, 5, -251, -251, -267, 117, 428, 493, -184,
	573, 568, 551, 551, -184, -486, -116, -309, -300, 225,
	-251, -503, -500, -501, 375, -507, -509, 165, 375, -120,
	2, -195, -194, -234, 5, 568, -290, 338, 567, -482,
	-351, -120, -268, -309, 569, 573, -373, 521, -249, -264,
	150, -225, 257, -584, -481, -222, -376, -374, 136, 568,
	334, -120, -314, 551, 569, 569, 117, 117, 217, 149,
	-316, 568, 568, -318, 117, 569, -188, -189, -485, -116,
	-485, -187, -56, -57, 223, 93, 358, -261, 477, 223,
	568, 568, -213, -397, -397, -397, 569, -314, -477, 561,
	-528, 353, 569, -424, -397, -397, -398, 182, 568, -408,
	569, -529, 536, -397, -342, -343, -397, 418, 107, 200,
	-529, -529, 569, -473, 2, -485, 566, 2, -388, -258,
	-262, -255, -234, 165, 208, 324, -372, 249, 568, -398,
	-264, 568, 2, 30, -577, 128, 228, 569, 573, -426,
	-245, -234, -397, -426, 569, 569, 324, 324, -397, -447,
	568, -219, -219, 569, 569, -397, 493, -476, 100, -474,
	2, -553, -248, -397, 493, 5, -219, -262, -219, -219,
	-246, 505, -273, -268, -185, -186, -485, -116, -184, 38,
	-295, 227, 2, -505, 249, -255, 249, -575, 537, 569,
	573, 551, 551, -288, -196, -76, -77, 494, -440, -309,
	38, 5, 568, -234, 334, 568, -249, -229, 92, -584,
	-481, -223, -347, 320, -318, 93, -376, -404, -181, 568,
	568, -293, 81, 94, 125, 207, 185, 224, 461, 466,
	28, -293, 569, -316, -316, 569, 568, -181, 569, 573,
	28, 568, 28, 568, -264, -283, -329, -329, 569, -314,
	60, 573, 569, 569, -398, -408, 569, -530, -531, -254,
	573, 568, 568, 442, 567, 2, -508, -255, 319, 521,
	-397, -236, 568, -397, 38, 228, 129, 213, -387, -578,
	101, 469, 216, -425, -213, 569, -386, 521, 391, -246,
	-316, 568, 568, 568, 551, 182, 568, -451, -219, -267,
	569, -558, 389, -120, -296, -297, 215, 568, -294, 334,
	117, 307, -194, -474, -474, 569, 38, -77, 9, 38,
	-120, -316, -264, -316, 334, -226, -487, 266, -481, -224,
	569, -258, -347, -486, -486, -386, 569, 569, -486, -57,
	-318, -318, 569, 569, -535, 383, 420, 201, -329, -315,
	569, 573, 38, -343, 2, 2, 2, 150, 203, 569,
	-510, 280, -234, 569, 129, 213, -295, 568, -214, -426,
	-295, 203, -264, -554, 521, 569, -302, -301, -298, -304,
	-303, -298, -329, -474, 100, 351, -329, -246, -561, 183,
	-560, 5, 10, -196, 351, -317, -427, -251, 82, 117,
	-300, -120, -120, 569, -373, 569, -264, -228, -227, -584,
	-584, -225, -391, 569, 569, -387, -386, -197, 537, 569,
	569, 569, 569, -536, -537, 50, 508, 108, -397, -536,
	-536, -531, -533, 165, 537, -511, -514, -513, 334, 448,
	183, 352, 569, 468, 533, -296, -318, 537, -309, -397,
	-386, 569, 573, 526, 569, 573, 526, 569, 182, 569,
	-219, -183, 537, 46, -294, -264, 569, 573, 374, 130,
	139, -295, -575, -386, 568, -387, 568, -318, -467, -229,
	136, -181, -181, -295, -387, -391, -181, -538, 148, -537,
	371, 178, 419, 371, 178, -538, -538, -255, 55, -513,
	334, -514, 334, 515, 130, -577, 569, 55, -510, -295,
	-301, 215, -303, 182, 351, 426, -560, 30, 568, -427,
	420, 420, 2, -296, -294, -387, -316, -295, -316, -226,
	320, 515, -296, -295, 108, 199, 488, 307, 33, 551,
	-512, 307, 408, 64, 441, -512, -391, 551, -511, 568,
	568, 338, -318, 2, -196, -295, 569, -296, 569, -228,
	441, -197, -296, 419, 342, -537, -397, 23, 324, 124,
	-397, -577, -329, -329, -180, 568, 569, -294, -296, -386,
	-197, -387, -337, -391, -197, 569, 569, -180, -220, 64,
	408, -197, -387, -391, -295, -391, -391, -296, 493, 569,
	-391, -295, -296, 568, -296, -197, -329, -197, -391, 569,
	-391, -296,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 29,
	30, 31, 32, 497, 498, 500, 501, 502, 504, 505,
	507, 509, 511, 512, 513, 515, 516, 518, 519, 520,
	521, 522, 524, 526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 590,
	0, 1231, 1233, 1235, 1237, 0, 730, 0, 34, 35,
	0, -2, 295, 297, 299, 0, 325, 327, 328, 330,
	332, 334, -2, 0, 432, 433, 435, 437, -2, -2,
	0, 903, 905, 0, 577, 579, 0, 908, 910, 0,
	0, 599, 600, 0, 1331, -2, 593, 595, 597, 662,
	664, 666, 668, 670, 672, 674, 676, 678, 679, 681,
	683, 685, 687, 689, 691, 693, 695, 696, 698, 700,
	702, 704, 706, 708, 710, 712, 714, 716, 718, 720,
	722, 724, -2, 726, -2, -2, 0, -2, -2, -2,
	1249, 38, 40, 42, 44, 46, 48, 50, 52, 54,
	383, 384, 386, 388, 390, 392, 395, 397, 399, 1389,
	439, 441, 443, 445, 447, 449, 451, 0, -2, 1403,
	0, 0, 56, 57, 58, 59, 60, 61, 62, 63,
	64, 93, 94, 95, 96, 97, 98, 99, 100, 68,
	69, 71, 72, 73, 77, 78, 79, 80, 81, 82,
	83, 91, 66, 0, 0, 1362, 1364, 1366, 1368, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 499, 503, 506, 508, 510, 514, 517,
	523, 525, 527, 484, 485, 488, 2059, 2076, 2077, 2078,
	2081, 2082, 2083, 2084, 2085, 2086, 2513, 2594, 2595, 2108,
	2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118,
	2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128,
	2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138,
	2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148,
	2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158,
	2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168,
	2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178,
	2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188,
	2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198,
	2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208,
	2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218,
	2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228,
	2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238,
	2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248,
	2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258,
	2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268,
	2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278,
	2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288,
	2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298,
	2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308,
	2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318,
	2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328,
	2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338,
	2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348,
	2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358,
	2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368,
	2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378,
	2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388,
	2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398,
	2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408,
	2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418,
	2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428,
	2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438,
	2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448,
	2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458,
	2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468,
	2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478,
	2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488,
	2489, 2490, 2491, 2492, 486, 487, 1069, 0, 551, 549,
	2051, 552, 2322, 554, 556, 426, 427, 428, 429, 430,
	431, 0, 570, 562, 1401, 571, 573, 574, 575, 576,
	546, 544, 0, 570, 2112, 568, 1229, 1230, 0, 1214,
	1215, 2364, 1256, 0, 207, 589, -2, -2, -2, 2478,
	-2, 621, -2, 628, 2482, 2366, 633, 0, 635, -2,
	638, 1232, 1234, 1236, 728, 729, 2062, 0, 0, 0,
	0, 0, 36, 37, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1118, 1119, 1120, 0, 215,
	217, -2, -2, -2, -2, 0, 0, 2407, 2162, 2019,
	2078, 2022, 2017, 296, 298, 300, 301, 0, 0, 0,
	0, 0, 0, 326, 329, 331, 333, -2, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	962, 954, 955, 1175, 0, 0, 0, -2, 434, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 438, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 362,
	489, 490, 0, 1390, 1390, 0, 0, 0, 0, 270,
	261, 904, 906, 907, 0, 0, 0, 0, 578, 580,
	0, 0, 243, 909, 911, 912, 0, 0, 0, 0,
	0, 272, 0, 0, 594, 596, 598, 663, 665, 667,
	669, 671, 673, 675, 677, 680, 682, 684, 686, 688,
	690, 692, 694, 697, 699, 701, 703, 705, 707, 709,
	711, 713, 715, 717, 719, 721, 723, 725, 736, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, -2,
	-2, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 820, 0, 0, 0, -2, -2, -2, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 884,
	0, 739, 741, 742, 743, 0, 800, 818, 819, 828,
	727, 0, 1109, 1391, 1258, 1239, 1253, 1258, 1241, 1242,
	1243, 1244, 1245, 1250, 1252, 1246, 1247, 1248, 39, 41,
	43, 45, 47, 49, 51, 53, 55, 385, 387, 389,
	391, 393, 396, 398, 400, -2, 1360, 1361, 440, 442,
	444, 446, 448, 450, 452, 581, 0, 583, 0, 740,
	-2, 0, 1395, 1395, 1395, 0, 0, 1361, 1359, 0,
	586, 587, 642, 643, 1662, 0, 0, 0, 0, 0,
	0, 0, 1916, 1748, 0, 644, -2, 1779, 1781, 2453,
	2478, 1915, 1783, 1784, 1785, 1786, 1787, 0, 1789, 1790,
	1791, 1792, 1793, 1794, 0, 1796, 0, 1801, 1802, 1803,
	0, 2460, 1996, 2072, -2, 0, 0, 2466, 2068, 0,
	1882, 1819, -2, -2, 2095, 2074, 1594, 1595, 1596, 1597,
	1598, -2, -2, 2496, 1823, 1824, 1825, 1826, 1827, 1828,
	1829, 1830, 1831, 1832, 1833, 0, 2441, 2461, 2462, 2467,
	2469, 2463, 2450, 1844, 2174, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1621, 1630,
	-2, -2, -2, -2, -2, -2, -2, 2454, 2455, 2472,
	2475, 2481, 2486, 2487, 2459, 2468, 2495, 2497, 2498, 2499,
	2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509,
	2510, 2511, 2512, 1622, -2, -2, -2, -2, 1378, 2335,
	1381, 1069, 1379, 1363, 1365, 0, 1367, 0, 0, 0,
	1372, 1398, 1396, 0, 1447, 1376, 1377, 1465, 1465, 1489,
	0, 1470, 0, 1489, 1390, 1515, 0, 1476, 2356, 1820,
	1821, 0, 2078, 2073, -2, -2, 2493, 0, 0, 0,
	0, 0, 0, 0, 547, 0, 553, 555, 0, 0,
	0, 569, 1400, 0, 0, 0, 0, 0, 0, 1255,
	1174, 591, 592, 0, 616, 0, 620, 2449, -2, 0,
	2375, -2, 624, 1259, 1263, 1264, 1265, 1266, 1267, 0,
	0, 0, 0, 1272, 0, 0, 630, 0, 0, 617,
	618, 636, 639, 0, 731, 732, 733, 734, 735, 65,
	0, 2461, 1515, 67, 0, 2041, 2103, 2104, 2105, 2106,
	2107, 2494, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521,
	2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531,
	2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541,
	2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551,
	2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561,
	2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571,
	2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581,
	2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591,
	2592, 2593, 2496, 70, 0, 2461, 74, 0, 2461, 0,
	-2, 84, 0, 2047, 92, 0, 2044, 101, 0, 2461,
	0, 2016, -2, 0, 190, 2055, 0, 931, 2057, -2,
	2461, 1117, 273, 274, 2091, 2092, 2099, 2100, 2101, 2102,
	0, 0, 0, 0, 894, 2013, 2018, 895, 2037, 896,
	2023, 0, 302, 303, 304, 305, 306, 0, 307, 2461,
	309, 310, 0, 312, 313, 2461, 315, 316, 0, 318,
	0, 228, 229, 2461, 337, 338, 0, 340, 341, 0,
	343, 0, 0, 0, 347, -2, 363, 0, 360, 350,
	351, 353, 354, 355, 356, 357, 0, 404, 402, 2052,
	0, 924, 2461, 0, 928, -2, 2058, 0, 0, 1154,
	-2, 2461, 1114, 0, 1160, 1156, 0, -2, 0, 1388,
	2461, 1276, 958, 959, 960, 961, 1527, 423, 0, 1298,
	0, 1300, 0, 1319, 1521, 1465, 0, 0, 1526, 0,
	365, 366, 367, 368, 369, 2461, 0, 0, 0, 374,
	0, 376, 377, 378, 379, 380, 381, 382, 179, 2461,
	457, 482, 0, 179, 2461, 460, 179, 2461, 463, 0,
	466, 1173, 179, 2461, 469, 179, 2461, 472, 474, 179,
	2461, 478, 479, 2461, 481, 275, 1225, 1226, 1227, 1228,
	0, -2, 540, 2061, -2, 492, 0, 493, 0, -2,
	0, 287, 0, 0, 913, 914, 915, 916, 917, 920,
	921, 922, 923, 1502, 246, 244, 0, 0, 1216, 1217,
	1218, 1219, 1220, 1221, 1222, 1223, 1224, 0, 0, 601,
	0, 0, 737, 738, 0, 0, 748, 749, 750, 0,
	287, 2367, 2331, 2195, 757, 0, 760, 763, -2, 0,
	0, 0, 0, 767, 0, 772, 773, 774, 0, 776,
	778, 902, 780, 0, 0, 782, 0, 786, 0, 789,
	0, 791, 0, 793, -2, -2, -2, -2, 804, -2,
	0, 807, 809, 0, 811, -2, 0, 820, 816, 817,
	0, 0, 0, 0, 836, 837, 0, 846, 0, 849,
	850, 851, 0, 853, 854, 0, 856, 857, 858, 859,
	0, 861, 862, -2, -2, 866, 868, 0, 875, 0,
	879, 0, 883, 0, 0, 744, 745, 179, 1519, 1238,
	-2, 1240, 0, -2, 0, 582, 0, 585, 1420, 1346,
	1343, 0, 1417, 1418, 1347, 0, 0, 0, 1354, 0,
	1393, 1394, 0, 0, 0, 1333, 1334, 0, 0, 0,
	0, 1921, 1922, 1923, 1924, 1925, 1926, 1929, 1930, 1927,
	1928, 1931, 1932, 0, 0, 0, 0, 0, 1933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1934, 1935, 1936, 0, 0, 1938, 0, 1940, 0, 0,
	0, 0, 0, 0, 1727, 1729, 2004, 0, 0, 1937,
	1667, 1668, 1669, 1670, 1671, 1706, 1707, 0, 0, 1780,
	2001, 2000, 1782, 0, 1952, 0, 1795, -2, 0, 1916,
	1947, 0, 0, 1804, 1805, 1806, 0, 0, 1952, 0,
	0, 1995, 1816, 1817, 1659, 0, 0, 1884, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1608, 1607, 0, 1609, 0,
	1610, 1611, 1618, 1631, 0, 0, 0, 0, 1635, 0,
	0, 0, 0, 0, 0, 0, 1976, -2, 0, 0,
	0, 0, 1623, 0, 1380, 0, 0, 1451, 2005, 2009,
	2010, 1451, 1451, 0, 0, 1953, 1512, 1512, 0, 0,
	1508, 1508, 1508, 1506, 1489, 0, 1489, 1499, 0, 1489,
	1489, 0, -2, 1470, 0, 0, 1499, 0, 1483, 528,
	530, 532, 534, 535, 536, 538, 1516, 1517, 0, 0,
	0, 0, 2079, 0, 0, 0, 0, 0, 2064, 0,
	0, 0, 0, 2417, 2366, 558, 572, 1390, 0, 1955,
	1542, 1546, 0, 1548, 1549, 1550, 1551, 1552, 0, 0,
	1543, -2, 1619, 1621, 1642, 2096, 2097, 2098, 1602, 1603,
	1604, 1605, 1606, 1614, 1601, 1601, 1601, 1612, 1641, 1633,
	1641, 1637, 1587, 1588, 1589, 1624, 1625, 1626, 1627, 0,
	2417, 2366, 564, 0, 0, 1330, 194, 196, 197, 198,
	0, 0, 0, 0, -2, 626, 631, 632, 0, 1261,
	0, 1268, 653, 654, 655, 1270, 1271, 0, 1273, 629,
	656, 657, 658, 659, 660, 661, 0, 2025, 2026, 2027,
	2028, 2031, 2032, 0, 0, 627, 646, 634, 0, 640,
	102, 1211, 0, 141, 0, 1211, 1211, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 0, 126,
	137, 114, 115, 0, 0, 0, 0, 0, 75, 1091,
	0, 1094, 0, 0, 0, 0, 0, 0, 0, 1107,
	0, 0, 0, 0, 0, 0, 88, 125, 0, 0,
	0, 120, 104, 0, 0, 0, 127, 139, 0, 170,
	172, 0, 0, 0, 0, 0, 0, 189, 199, 0,
	0, 0, 0, 1115, 0, 1387, 0, 0, 2461, 0,
	1502, 2240, -2, -2, 1502, 893, 0, 0, 2079, 2021,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 342,
	344, 345, 346, 0, 1153, 0, 352, 394, 1040, 2461,
	0, 0, 421, 416, 0, 418, 0, 0, 1090, 2461,
	1088, 2056, 0, 1112, 0, 1069, 2461, 2054, 0, 0,
	1161, 2088, 1170, 1174, 1285, 0, 425, 0, 1301, 1303,
	0, 0, 1522, 0, 1524, 1465, 364, 0, 371, 372,
	373, 0, 453, 0, 177, 178, 0, 179, 2461, 458,
	0, 461, 0, 179, 2461, 2011, 467, 0, 470, 0,
	0, 476, 0, 0, 0, 1390, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 250, 0, 1501,
	0, 1502, 244, 287, 287, 1502, 603, 1502, 605, 0,
	0, 751, 752, 0, 287, 287, 287, 758, 759, 761,
	762, -2, -2, -2, 876, 764, 765, 843, 0, 0,
	0, 842, 779, 0, 887, 2352, 2366, 2417, 900, 843,
	2162, 843, 2162, 843, 2162, 790, 792, 795, 831, 839,
	803, 808, 0, 0, 813, 821, -2, 0, 823, 0,
	825, 0, 827, 843, 844, 847, 852, 855, 860, 0,
	0, 0, 0, 0, 0, 0, 0, 1108, 0, 1251,
	1420, 1346, 584, 1337, 1419, 1338, 1345, 1348, 0, 0,
	1350, 0, 1352, 0, 1415, 1416, 1423, 1424, 0, 1434,
	1435, 1427, 0, -2, 0, 0, 1430, 1431, 1356, 0,
	1373, 1374, 1375, 1404, 1407, 1189, 0, 2594, 1663, 1537,
	1664, 1665, 2040, 0, 1672, 1673, 1674, 1675, 1676, 1677,
	1678, 1679, 1680, 1681, -2, -2, -2, -2, -2, -2,
	-2, -2, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697,
	1698, 1699, 1700, -2, -2, -2, 1704, 1705, -2, 1939,
	1941, 0, 2004, 0, -2, 0, -2, -2, -2, -2,
	1724, 0, 1726, 1731, 1733, 1735, 0, 0, 0, 0,
	2003, 1745, 1987, 1988, 0, 0, 1918, 1919, 1920, 1730,
	0, 1749, 2002, 1999, 0, 0, 1951, 1403, 1808, 0,
	0, 0, 0, 1815, 1800, 1949, 0, 1948, 0, 0,
	0, 1959, 0, 1994, 1990, 0, 2038, 1658, 1645, 1646,
	1647, 1648, 1649, 1650, 1660, 0, 2035, 2065, 2071, 1892,
	0, 0, 0, 1845, 1846, 1847, 1848, 1849, 0, 1851,
	1852, 0, 1854, 1855, 0, 1857, 1858, 0, 1860, 1861,
	1862, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1555, 0,
	0, 0, 1559, 0, 0, 0, 1563, 0, 0, 0,
	1567, 0, 0, 0, 1571, 0, 0, 0, 1575, 0,
	0, 0, 1579, 0, 0, 0, 1583, 0, 0, 0,
	0, 0, 1864, 0, 1962, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 1866, 0, 1868, 1953, 1973, 0,
	0, 1750, 0, 0, 0, 1916, 0, 1871, 1953, 1981,
	0, 0, 0, 0, 0, 1953, 0, 1986, 0, 1878,
	0, 1880, 1382, 0, 0, 1532, 0, 0, 0, 2008,
	1532, 1532, 0, 1446, 0, 0, 1509, 1510, 1511, 0,
	0, 1512, 0, 1503, 1507, 1504, 1505, 1499, 1462, 0,
	0, 2042, 1499, 1468, 1498, 0, 1069, 1488, 1499, 1499,
	0, -2, 1472, 1489, 0, 0, 529, 531, 533, 537,
	539, 0, 0, 1403, -2, 0, -2, 1068, 0, 0,
	0, 0, 548, 550, 0, 0, 473, 0, 0, 542,
	0, 545, 0, 1533, 1536, 0, 0, 1547, 1553, 1554,
	0, -2, 0, 0, 1643, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 619, 0, 1260, 1269, 0, 650,
	0, 652, 0, 2029, 2033, 2030, 2034, 0, 641, 0,
	0, 0, 0, 1210, 0, 145, 2461, 0, 181, 0,
	0, 1033, 2048, 0, 1025, 0, 0, 2181, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 111, 116, 0, 0, 0, 0, 0,
	0, 0, 0, 1092, 1093, 1095, 1102, 1104, 0, 1098,
	2036, 0, 0, 1099, 0, 1101, 1103, 1105, 0, 0,
	0, 0, 0, 0, 0, 89, 90, 0, 0, 0,
	0, 0, 1281, 0, 0, 0, 113, 117, 0, 0,
	0, 0, 2015, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1149, 1147, 1127, 1128, 1129,
	1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139,
	1140, 1141, 1142, 1143, 1144, 1145, 1146, 0, 0, -2,
	0, 0, 0, 0, 220, 0, 278, 2014, 2024, 0,
	918, 919, 308, 311, 314, 317, 216, 0, 348, 0,
	0, 964, 939, 0, 0, 403, 287, 0, 0, 417,
	2088, 926, 1086, 1089, 0, 1069, 2461, 1126, 0, 0,
	0, 0, 0, 0, 1159, 0, 2461, 2043, 2087, 2088,
	1287, 1295, 0, 1532, 0, 1317, 1304, 0, 0, 0,
	1317, 1321, 1322, 1324, 1325, 0, 0, 1523, 1529, 0,
	375, 483, 179, 455, 0, 179, 179, 464, 0, 0,
	179, 475, 179, 179, 276, 480, 491, 541, 1390, 1390,
	287, 285, 2299, 283, 280, 282, 0, 0, 0, 965,
	967, 968, 969, 970, 0, 2088, 1025, 2229, 2088, 0,
	1307, 1309, 0, 240, 0, 247, 245, 250, 0, 0,
	415, 602, 607, 746, 0, 287, 754, 755, 756, 797,
	833, 841, 766, 768, 769, 770, 0, 901, 897, 898,
	899, 781, 843, 784, 843, 787, 843, 806, 810, 815,
	822, 0, 0, 0, 835, 0, 0, 0, 0, 0,
	0, 0, 880, 881, 882, 885, 886, 1520, 1341, 1342,
	1344, 0, 1353, 0, 0, 1429, -2, -2, 1428, 1432,
	1433, -2, -2, -2, -2, 1349, 0, 1358, 1355, 0,
	1414, 1187, 1188, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 1746, 0, -2, 1725, 1728, 1732, 1734, 1736,
	0, 0, 0, 0, 0, 0, 1942, 0, 1944, 1747,
	1997, 2000, 1914, 0, 0, 1402, 1403, 1403, 0, 1814,
	0, 1950, 0, 1957, 1958, 0, 1807, 0, 1991, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1818, 0,
	0, 0, 0, 1850, 1853, 1856, 1859, 0, 0, 0,
	0, 1839, 0, 0, 0, 1843, 1613, 1599, 0, 1641,
	1639, 1640, 1634, 1641, 1638, 1591, 0, 1556, 1557, 1558,
	1560, 1561, 1562, 1564, 1565, 1566, 1568, 1569, 1570, 1572,
	1573, 1574, 1576, 1577, 1578, 1580, 1581, 1582, 1584, 1585,
	1586, 1590, 0, 1863, 0, 1865, 1867, 0, 0, 1869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1753, 1754, 1755, 1870, 1979, 1980, 0,
	0, 0, 0, 0, 0, 1876, 0, 1985, 1877, 1879,
	1390, 0, 1383, 0, 1448, 1437, 1531, 0, 2006, 1502,
	1450, 1452, 2007, 2045, 1437, 1437, 0, 1954, 0, 0,
	1493, 0, 0, 0, 1495, 1466, 0, 0, 1460, 0,
	1456, 1457, 1458, 1459, 1467, 1069, 1497, 1469, 1473, 2065,
	0, 1499, 0, 1484, 0, 1486, 1518, 0, 1478, 1481,
	0, 0, 2080, 1532, 0, 319, 323, 324, 320, 321,
	322, 557, 0, 0, 0, 0, 1956, 0, 1538, 0,
	1544, 0, 0, 0, 0, 563, 0, 0, 0, 195,
	1329, 206, 0, 615, -2, 648, 649, 651, 0, 647,
	142, 1211, 0, 0, 1192, 1194, 0, 147, 2461, 156,
	0, 1005, 0, 2046, 0, 0, 0, 0, 0, 0,
	1213, 0, 0, 2461, 179, 2461, 179, 159, 161, 164,
	0, 169, 166, 167, 0, 0, 996, 103, 1211, 0,
	106, 110, 118, 0, 0, 0, 124, 0, 0, 0,
	1196, 1202, 0, 0, 1096, 1097, 1100, 1106, 76, 0,
	0, 1200, 1206, 85, 86, 87, 0, 1191, 1279, 0,
	171, 108, 112, 119, 0, 1208, 105, 0, 193, 0,
	0, 0, 185, 0, 186, 187, 200, 0, 179, 2461,
	0, 929, 930, 1148, 1110, 1111, 0, 1116, 0, 0,
	0, 1502, 212, 0, 1502, 220, 0, 2020, 0, 336,
	0, 0, 0, 0, 963, 1051, 0, 934, 0, 0,
	0, 409, 405, 0, 414, 420, 419, 925, 0, 0,
	0, 0, -2, 0, 0, 1163, 1157, 1158, 0, 0,
	0, 2461, 1289, 1295, 0, 1294, 1388, 1403, 424, 1296,
	1317, 0, 0, 0, 1306, 1302, 1299, 1532, 0, 0,
	0, 0, 0, 1525, 1528, 370, 454, 179, 459, 462,
	2012, 179, 468, 471, 477, 494, 495, 262, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 974, 0, 2088,
	2088, 0, 2050, 0, 0, 0, 0, 248, 0, 251,
	0, 0, 0, 256, 257, 258, 259, 260, 241, 1502,
	0, 604, 0, 0, 753, 0, 783, 785, 788, 824,
	826, 843, 869, 870, 991, 0, 991, 0, 0, 1351,
	0, 1426, 1357, 1408, 1409, 0, 1189, 0, 1666, 1709,
	0, 0, -2, 0, 0, 1713, 0, 0, 0, -2,
	0, 0, 0, 1943, 1945, 0, 1999, 1809, 0, 0,
	0, 1813, 1797, 1798, 0, 1917, 1960, 1989, 1993, 0,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 0, 2039, 2066,
	2070, 1890, 1891, 1895, 2053, 0, 0, 0, 1822, 0,
	0, 0, 0, 0, 0, 0, 0, 1632, 1636, 0,
	0, 1961, 1972, 1974, 1751, 1752, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1763, 1764, 1765, -2, -2, -2, 1769,
	1770, 1771, -2, -2, -2, 0, 0, 0, 1975, 1977,
	1978, 1982, 1983, 0, 1873, 1874, 1875, 1984, 0, 1390,
	1384, 1445, 0, 1530, 1449, 0, 1445, 1445, 1397, 1491,
	0, 0, 1514, 0, 1463, 0, 1464, 0, 1496, 0,
	1471, 1474, 1475, 1485, 0, 1477, 0, 1480, 0, 1809,
	-2, 288, 289, 291, 0, 294, 560, 561, 559, 543,
	0, 0, 1540, 0, 0, 1616, 1620, 1644, 566, 567,
	565, 208, 0, 1500, 0, 0, 0, 0, 180, 1003,
	1032, 0, 0, 0, 1024, 0, 0, 1038, 149, 0,
	0, 0, 157, 0, 0, 154, 0, 163, 168, 0,
	0, 0, 0, 0, 0, 121, 122, 123, 0, 128,
	0, 129, 0, 0, 0, 0, 0, 0, 1280, 0,
	0, 0, 182, 0, 0, 0, 1186, 0, 0, 202,
	0, 0, 0, 1151, 1152, 1197, 1203, 0, 0, 220,
	218, 0, 221, 0, 224, 225, 0, 220, 214, 0,
	0, 1069, 349, 937, 1039, 0, 1041, 0, 935, 0,
	0, 1040, 401, 0, 408, 0, 0, 1090, 0, 0,
	1113, 1124, 1069, 0, 1162, 1164, 1172, 0, 0, 0,
	1291, 1295, 0, 1284, 1285, 1422, 1297, 1315, -2, 0,
	0, 1403, 1323, 1320, 1326, 1327, 0, 456, 465, 284,
	0, 279, 281, 0, 265, 0, 0, 966, 971, 0,
	0, 0, 0, 0, 1308, 1310, 0, 0, 0, 0,
	0, 0, 250, 271, 0, 747, 771, 834, 871, 990,
	0, 0, 873, 0, 0, 1425, 1412, 1413, 1410, 1189,
	1711, 1715, 0, 0, 0, 1717, -2, 0, 1739, -2,
	-2, 1946, 1998, 1788, 1403, 1810, 1812, 1799, 1992, 1661,
	0, 1897, 1894, 0, 1881, 0, 1834, 1835, 0, 0,
	1838, 1840, 1841, 1842, 1600, 1593, 1592, 1971, 0, 0,
	0, 0, 1872, 1385, 0, 1886, 0, 0, 1453, 1886,
	1886, 1492, 0, 1494, 1461, 1454, 0, 2066, 1487, 1479,
	0, 0, 292, 0, 1534, 1539, 0, 1545, 1615, 209,
	143, 144, 146, 0, 1004, 0, 1007, 0, 0, 0,
	0, 1014, 1025, 0, 0, 0, 0, 0, 1026, 0,
	1055, 0, 1177, 1184, 0, -2, 0, 0, 0, 151,
	174, 0, 0, 1212, 0, 0, 179, 179, 0, 0,
	1193, 1195, 0, 0, 0, 0, 131, 0, 0, 1198,
	1204, 1201, 1207, 0, 0, 0, 1209, 191, 192, 0,
	179, 0, 184, 179, 179, 1186, 0, 0, 0, 211,
	0, 0, 0, 0, 213, 277, 220, 0, 985, 0,
	1051, 1043, 1044, 1045, 0, 1050, 1052, 0, 0, 951,
	936, 0, 947, 0, 0, 964, 939, 0, 406, 927,
	1087, 1121, 1069, 0, 1155, 0, 0, 0, 0, 0,
	0, 1293, 1295, 0, 1286, 1287, 1317, 1421, 0, 0,
	0, 1305, 1422, 0, 286, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 252, 0, 253, 254,
	255, 242, 606, 608, 0, 0, 614, 989, 0, 0,
	0, 0, 1411, 1719, -2, -2, 1740, 0, 2067, 2069,
	1403, 0, 1883, 1405, 0, 0, -2, 0, 0, 0,
	1386, 1369, 0, 1444, 1436, 1438, 1440, 2355, 2158, 2460,
	1370, 1371, 1513, 0, 1482, 293, 0, 1541, 148, 0,
	1008, 1009, 2049, 1011, 0, 1013, 1015, 1016, 0, 1019,
	2090, 0, 1023, 0, 1034, 1056, 0, 1065, 0, 1179,
	1189, 1183, 0, 1181, 1067, 0, 150, 152, 173, 1186,
	0, 153, 162, 0, 0, 107, 0, 0, 2153, 134,
	132, 130, 1190, 109, 0, 193, 201, 1185, 188, 203,
	179, 0, 1199, 1205, 222, 0, 223, 226, 0, 0,
	993, 0, 938, 1042, 0, 1053, 1054, 941, 0, 940,
	0, 0, 0, 0, 0, 407, 410, 0, 413, 0,
	0, 1165, 0, 1171, 0, 0, 0, 1278, 0, 0,
	1288, 1289, 422, 1311, 0, 0, 1317, 1328, 264, 0,
	0, 972, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 973, 1067, 0, 0, 1031, 0, 269, 249, 0,
	610, 0, 612, 0, 872, 874, 0, 0, 1811, 1901,
	0, 0, 1836, 1837, -2, 0, 1777, 1885, 1887, 0,
	0, 0, 0, 0, 1455, 1535, 1006, 1010, 0, 0,
	0, 1073, 0, 0, 1027, 0, 1059, 1060, 985, 0,
	1061, 1062, 1063, 1178, 1414, 1184, 985, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 183, 204, 1186,
	219, 236, 0, 1122, 939, 992, 0, 0, 949, 0,
	952, 0, 948, 945, 946, 937, 0, 411, 412, 0,
	1125, 0, 1172, 0, 0, 1283, 1295, 1295, 1290, 1291,
	1532, 1314, 1318, 0, 0, 1065, 1067, 939, 0, 609,
	0, 0, 877, 878, 0, 0, 0, 0, 1896, 1406,
	1778, 0, 0, 1439, 1441, 1442, 1443, 0, 0, 1018,
	1078, 0, 0, 0, 1057, 1058, 993, 0, 1182, 1180,
	1036, 0, 1069, 155, 0, 1067, 0, 997, 0, 0,
	1000, 0, 0, 135, 2153, 133, 0, 179, 239, 0,
	233, 231, 232, 941, 0, 0, 1047, 1049, 0, 953,
	985, 951, 1123, 1067, 0, 1065, 0, 1274, 1282, 0,
	0, 1293, 0, 287, 287, 985, 1065, 1532, 0, 287,
	611, 613, 1893, 1913, 1902, -2, 2420, 2159, 0, 1913,
	1913, 1888, 1889, 0, 0, 1020, 1074, 1075, 0, 1070,
	1071, 1072, 2089, 1021, 1022, 1055, 0, 0, 1073, 175,
	985, 994, 0, 0, 995, 0, 0, 138, 0, 140,
	205, 227, 0, 0, 932, 0, 1046, 0, 0, 0,
	0, 993, 941, 1065, 0, 985, 0, 1277, 1292, 1278,
	0, 266, 267, 993, 985, 1030, 268, 1898, 0, 0,
	1904, 1905, 1906, 1907, 1908, 1899, 1900, 1012, 0, 1076,
	0, 1077, 0, 0, 0, 1532, 1064, 0, 1078, 160,
	998, 0, 1001, 0, 136, 0, 234, 235, 0, 1048,
	942, 0, 944, 939, 950, 985, 0, 993, 0, 1283,
	1312, 0, 939, 993, 0, 1910, 1911, 0, 0, 0,
	1079, 0, 1082, 1083, 0, 1080, 1035, 0, 1055, 0,
	0, 0, 0, 943, 941, 993, 1067, 939, 1065, 1275,
	0, 1532, 939, 1909, 1912, 1903, 1017, 1081, 1084, 1085,
	1066, 1037, 0, 0, 237, 0, 988, 933, 939, 1065,
	1532, 985, 1532, 1028, 1532, 993, 0, 0, 984, 986,
	987, 1532, 985, 1168, 993, 1313, 1029, 999, 0, 238,
	1166, 993, 939, 0, 939, 1532, 0, 1532, 1169, 993,
	1167, 1002,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 557, 3, 563, 558, 3,
	568, 569, 561, 559, 573, 560, 570, 562, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 576, 3,
	549, 551, 550, 554, 572, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 566, 3, 567, 564, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 574, 556, 575, 552,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 553, 57892, 555, 57893, 565, 57894, 571,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1251
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1256
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1258
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1261
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1262
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1263
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1264
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1265
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1266
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1267
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1268
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1269
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1270
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1277
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1286
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1287
		{
			return helpWith(sqllex, "ALTER")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1290
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1291
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1292
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1293
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1294
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1295
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1296
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1297
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1298
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1354
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1380
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1393
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1410
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1414
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 76:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1418
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1442
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1446
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: tree.Name(sqlDollar[6].str)}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1452
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:    tree.Name(sqlDollar[3].str),
				Regions: sqlDollar[6].union.nameList(),
			}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1461
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:    tree.Name(sqlDollar[3].str),
				Regions: sqlDollar[6].union.nameList(),
			}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1470
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvive{
				Name:    tree.Name(sqlDollar[3].str),
				Survive: sqlDollar[4].union.survive(),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1534
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1538
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1544
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1548
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1554
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1563
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1574
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1578
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1584
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1592
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1602
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1606
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1616
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1627
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1634
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1646
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1653
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1661
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1666
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1670
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1675
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1681
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1689
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1700
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 128:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1710
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 129:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1720
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 130:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1729
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 131:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1740
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 132:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1746
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1754
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1758
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1762
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 136:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1766
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1772
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1777
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1788
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1792
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1798
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1802
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1809
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1814
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1819
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1824
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1829
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1834
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1839
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1849
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1859
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1868
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1890
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1897
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1900
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1906
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1913
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1921
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1928
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1937
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1951
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1958
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1966
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: tree.Name(sqlDollar[3].str),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1973
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1974
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1982
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1988
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1996
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2000
		{
			sqlVAL.union.val = nil
		}
	case 175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2006
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 176:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = nil
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2017
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2021
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2025
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2031
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2035
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 182:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2060
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2082
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2092
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2101
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2119
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2123
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2126
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2149
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2153
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 206:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2186
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2194
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2198
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2227
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2249
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2260
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2269
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2277
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2285
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 219:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2289
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2300
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2304
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2313
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2317
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2404
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2415
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2420
		{
			sqlVAL.union.val = nil
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2428
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2432
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2450
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2464
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2468
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2472
		{
			sqlVAL.union.val = nil
		}
	case 240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2512
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2521
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2530
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2534
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2544
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2548
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2559
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2574
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2599
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2607
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2611
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2654
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2659
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2663
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2669
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2674
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2679
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2684
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2689
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2693
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2709
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2712
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2716
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2720
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2728
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2732
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2738
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2742
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2760
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2766
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2770
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2780
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2784
		{
			sqlVAL.union.val = nil
		}
	case 288:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2796
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2812
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2816
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2826
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2834
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2838
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2846
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2847
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2848
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2849
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2867
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2869
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2873
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2876
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2886
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2903
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2905
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2909
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2912
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2922
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2931
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2939
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2941
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2948
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2956
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2960
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2973
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2979
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2984
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2996
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2998
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2999
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3000
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3001
		{
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3002
		{
			return helpWith(sqllex, "CREATE")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3012
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3015
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3018
		{
			return unimplemented(sqllex, "create access method")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3019
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3020
		{
			return unimplemented(sqllex, "create cast")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3021
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3022
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3023
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3024
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3025
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3026
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3027
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3028
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3029
		{
			return unimplemented(sqllex, "create operator")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3030
		{
			return unimplemented(sqllex, "create publication")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3031
		{
			return unimplemented(sqllex, "create rule")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3032
		{
			return unimplemented(sqllex, "create server")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3033
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3034
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3035
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3036
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3039
		{
		}
	case 359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3040
		{
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3043
		{
		}
	case 361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3044
		{
		}
	case 362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3047
		{
		}
	case 363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3048
		{
		}
	case 364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3051
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3052
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3053
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3054
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3055
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3056
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3057
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3058
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3059
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3060
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3061
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3062
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3063
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3064
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3065
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3066
		{
			return unimplemented(sqllex, "drop server")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3067
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3068
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3069
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3073
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3074
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3075
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3076
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3077
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3079
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3080
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3081
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3082
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3092
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3100
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3108
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3114
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3118
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3127
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3146
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3150
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3161
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3173
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3181
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3189
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3209
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3213
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3220
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3224
		{

			sqlVAL.union.val = nil
		}
	case 422:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3238
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3248
		{
			return helpWith(sqllex, "DELETE")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3251
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3252
		{
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3260
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3263
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3264
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3265
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3266
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3267
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3276
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3277
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3278
		{
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3279
		{
			return helpWith(sqllex, "DROP")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3282
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3283
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3284
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3285
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3286
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3287
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3288
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3300
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3304
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3321
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3329
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3336
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3344
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3351
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3359
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3368
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3376
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3384
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3392
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3399
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3406
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3421
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3425
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3435
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3444
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.nameList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3452
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.nameList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3459
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3467
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3471
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3478
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3483
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3496
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3501
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3503
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3508
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3534
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3541
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3543
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3551
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3559
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3567
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3575
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3590
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3593
		{
			return helpWith(sqllex, "DELETE")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3595
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3596
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3597
		{
			return helpWith(sqllex, "INSERT")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3600
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3602
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3605
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3610
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3611
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3612
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3617
		{
			return helpWith(sqllex, "DELETE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3618
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3619
		{
			return helpWith(sqllex, "INSERT")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3621
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3625
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3626
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3634
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 542:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3644
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3652
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3660
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 546:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3685
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3693
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3701
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3715
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3719
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3723
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3726
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3748
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3752
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3756
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3760
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.nameList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3773
		{
			return helpWith(sqllex, "GRANT")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3795
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3803
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3807
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3811
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.nameList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3820
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3829
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3839
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3857
		{
			return helpWith(sqllex, "RESET")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3858
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3866
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3873
		{
			return helpWith(sqllex, "RESET")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3881
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3884
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3895
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3898
		{
			return helpWith(sqllex, "USE")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3902
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3903
		{
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3904
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3905
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3909
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3910
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3911
		{
			return helpWith(sqllex, "USE")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3927
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3942
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3945
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3963
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3971
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3975
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3979
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3985
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3989
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3995
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3999
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4003
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4007
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4011
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4022
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4025
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4035
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4051
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4055
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 622:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4060
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4079
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4082
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4084
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4087
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4091
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4110
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4117
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4122
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4127
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4132
		{
			return unimplemented(sqllex, "set from current")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4133
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4146
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4153
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4157
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4163
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4167
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4195
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4199
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4205
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4209
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4213
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4217
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4221
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4227
		{
			sqlVAL.union.val = tree.Low
		}
	case 654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4231
		{
			sqlVAL.union.val = tree.Normal
		}
	case 655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4235
		{
			sqlVAL.union.val = tree.High
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4246
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4250
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4254
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4259
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4277
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4278
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4279
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4280
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4281
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4282
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4283
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4284
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4286
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4287
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4288
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4289
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4290
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4291
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4292
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4293
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4295
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4296
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4297
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4298
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4299
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4300
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4301
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4302
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4303
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4304
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4305
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4306
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4307
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4308
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4310
		{
			return helpWith(sqllex, "SHOW")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4311
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4316
		{
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4317
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4320
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4324
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4329
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4334
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4339
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4344
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4354
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4355
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4356
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4367
		{
			sqlVAL.str = "client_encoding"
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4370
		{
			sqlVAL.str = "timezone"
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4371
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4385
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4389
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4393
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4404
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4412
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4420
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4426
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4434
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4443
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4452
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4461
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4469
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4483
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4486
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4488
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4491
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4497
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4500
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4508
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4511
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4519
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4523
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4527
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4531
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4534
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4545
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4555
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4562
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4565
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4578
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4586
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4594
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4597
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4599
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4603
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4607
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4610
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4612
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4616
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4619
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4627
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4630
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4635
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4643
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4646
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4648
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4651
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.union.val = true
		}
	case 799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4657
		{
			sqlVAL.union.val = true
		}
	case 800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = false
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4670
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4674
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4677
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4678
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4680
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4684
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4688
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4691
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4693
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4701
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4709
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4725
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4727
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4733
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4735
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4741
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4745
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4749
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 820:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4755
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4773
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4775
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4778
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4780
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4784
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4787
		{
			sqlVAL.union.val = true
		}
	case 829:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4788
		{
			sqlVAL.union.val = false
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4796
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4799
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4804
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4822
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4832
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4835
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4842
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4845
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4850
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4853
		{
			sqlVAL.union.val = true
		}
	case 843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4854
		{
			sqlVAL.union.val = false
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4865
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4868
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4875
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4882
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4889
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4900
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4910
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4913
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4921
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4926
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4931
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4935
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4943
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4947
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4951
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4964
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4967
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4975
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4978
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4982
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4986
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4990
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4998
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5006
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5013
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5020
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5024
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5035
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5043
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5049
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5058
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5063
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5067
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5070
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5079
		{
			sqlVAL.union.val = &tree.ShowRegions{}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5083
		{
			sqlVAL.union.val = &tree.ShowRegions{
				Database: tree.Name(sqlDollar[5].str),
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5091
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5098
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5103
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5223
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5227
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5231
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5270
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5274
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5283
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5291
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.nameList()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5308
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5315
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 902:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5319
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5332
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5333
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5334
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5344
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5345
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5346
		{
			return helpWith(sqllex, "RESUME")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5364
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5370
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5373
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5378
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5382
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5397
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5405
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5407
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5413
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5421
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: tree.Name(sqlDollar[3].str),
			}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5427
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      tree.Name(sqlDollar[6].str),
				IfNotExists: true,
			}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5434
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   tree.Name(sqlDollar[3].str),
				AuthRole: sqlDollar[5].str,
			}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      tree.Name(sqlDollar[6].str),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].str,
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5448
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5459
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: tree.Name(sqlDollar[3].str),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: tree.Name(sqlDollar[3].str),
				Cmd: &tree.AlterSchemaOwner{
					Owner: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5476
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5515
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[9].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[10].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[11].union.storageParams(),
				OnCommit:      sqlDollar[12].union.createTableOnCommitSetting(),
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5530
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[12].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[13].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[14].union.storageParams(),
				OnCommit:      sqlDollar[15].union.createTableOnCommitSetting(),
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5548
		{

			sqlVAL.union.val = nil
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5554
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5560
		{
			sqlVAL.str = ""
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5564
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.union.val = nil
		}
	case 940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5575
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 941:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5582
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5586
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5591
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5596
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 949:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5623
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5637
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5652
		{
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5653
		{
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5654
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5681
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5693
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5697
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5703
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5713
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5722
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5726
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 974:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5732
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5737
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5739
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5740
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5741
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5742
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5743
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5744
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5745
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5750
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5759
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5766
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5771
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 988:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5776
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5782
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 991:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.str = ""
		}
	case 993:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5796
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 994:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5802
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5809
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5826
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 999:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5832
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5852
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5866
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5877
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5881
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5895
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5903
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5907
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5911
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5929
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5933
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5937
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5943
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5947
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5954
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5958
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5962
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5972
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5976
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5980
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5987
		{
			sqlVAL.union.val = true
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5991
		{
			sqlVAL.union.val = false
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5997
		{
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5998
		{
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6016
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6043
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6055
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6060
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6073
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[4].union.idxElems(),
					Storing:     sqlDollar[6].union.nameList(),
					Interleave:  sqlDollar[7].union.interleave(),
					PartitionBy: sqlDollar[8].union.partitionBy(),
					Predicate:   sqlDollar[10].union.expr(),
				},
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6098
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6109
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6116
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6120
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6126
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6136
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6151
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6158
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6195
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6205
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6211
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6216
		{
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6217
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6218
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6219
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6220
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6221
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6239
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6243
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6249
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6261
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6265
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6285
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6289
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6293
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6297
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6306
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6310
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6314
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6318
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6322
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6328
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6342
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6346
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6377
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6386
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6394
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6401
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6405
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6410
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6420
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6423
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6425
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6427
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6429
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6430
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6432
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6433
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6435
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6448
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6456
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6466
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6470
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6473
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6485
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6488
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = true
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6498
		{

			sqlVAL.union.val = true
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = false
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6513
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6527
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6539
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6551
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6561
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6571
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6575
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6591
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6599
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6603
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6607
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6611
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6615
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6619
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6631
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6635
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6639
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6643
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6652
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6666
		{
			sqlVAL.union.val = nil
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6672
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6676
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6681
		{
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6682
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6691
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6698
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6700
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6702
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6704
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6706
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6708
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6716
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6722
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6746
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6764
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6783
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6800
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6817
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6821
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = false
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = true
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = false
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = true
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6856
		{
			sqlVAL.union.val = false
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6875
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6881
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6887
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6895
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6919
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6920
		{
			sqlVAL.str = ""
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6923
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6924
		{
			sqlVAL.str = ""
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6942
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6948
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6954
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6960
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6968
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6974
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6998
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7004
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7022
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7030
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7036
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7048
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7054
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7068
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7074
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7086
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7091
		{
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7092
		{
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7095
		{
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7096
		{
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7104
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7107
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7117
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7125
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7127
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7131
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7134
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7147
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7155
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7157
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7163
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7176
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7184
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7186
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7192
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7203
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7207
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7208
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7209
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7228
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7233
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7246
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7251
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7255
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7260
		{
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7261
		{
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7262
		{
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7276
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7279
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7282
		{
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7283
		{
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7307
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7311
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7324
		{
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7326
		{
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7330
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7365
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7379
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				Regions:         sqlDollar[10].union.nameList(),
				Survive:         sqlDollar[11].union.survive(),
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				Regions:         sqlDollar[13].union.nameList(),
				Survive:         sqlDollar[14].union.survive(),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7415
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = tree.SurviveRegionFailure
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7433
		{
			sqlVAL.union.val = tree.SurviveAvailabilityZoneFailure
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.union.val = tree.SurviveDefault
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = tree.SurviveDefault
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.str = ""
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7464
		{
			sqlVAL.str = ""
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7474
		{
			sqlVAL.str = ""
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.str = ""
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7490
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7503
		{
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7504
		{
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7519
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7526
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7533
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7551
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7555
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7564
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7583
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7613
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7617
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7624
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7632
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7640
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7644
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7682
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7685
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7688
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7694
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7711
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7714
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.strs(),
				NewRole:  sqlDollar[6].str,
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7734
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7775
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7800
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7804
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7808
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7816
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7820
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7828
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7837
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7838
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7862
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7863
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7873
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7878
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7913
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7914
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7915
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7937
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7950
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7976
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7989
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8013
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8020
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8036
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8041
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8051
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8057
		{
			sqlVAL.union.val = true
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8061
		{
			sqlVAL.union.val = false
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8067
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8077
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8089
		{
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8090
		{
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8094
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8098
		{
			sqlVAL.union.val = nil
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8103
		{
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8104
		{
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8108
		{
			sqlVAL.union.val = true
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = false
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.union.val = false
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8122
		{
			sqlVAL.union.val = true
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8133
		{
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8134
		{
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8137
		{
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8138
		{
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8146
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8152
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8169
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8179
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8200
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8205
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8217
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8234
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8243
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8254
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8267
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8300
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8322
		{
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8323
		{
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8326
		{
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8327
		{
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8353
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8361
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8362
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8363
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8393
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8395
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8410
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8412
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8432
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8437
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8442
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8453
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8465
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8484
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8492
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8523
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8533
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8560
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8564
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8568
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8579
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8609
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8632
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8636
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8642
		{
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8644
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.union.val = nil
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8649
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8657
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8663
		{
			sqlVAL.union.val = true
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8667
		{
			sqlVAL.union.val = false
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8691
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8717
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8724
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8730
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8737
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8743
		{
			sqlVAL.str = tree.AstFull
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8747
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8751
		{
			sqlVAL.str = tree.AstRight
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8755
		{
			sqlVAL.str = tree.AstInner
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8761
		{
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8762
		{
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.str = tree.AstHash
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8787
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8791
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8795
		{
			sqlVAL.str = ""
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8808
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8817
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8820
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8824
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8829
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8843
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8847
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8853
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8859
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8869
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = true
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = false
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = true
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = false
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8918
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8931
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8939
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8940
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8958
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8960
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8968
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8981
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8988
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8997
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9037
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9049
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9050
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9054
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9055
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9056
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9057
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9058
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9059
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9060
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9062
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9063
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9064
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9066
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9067
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9068
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9069
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9070
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9071
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9072
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9074
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9075
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9076
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9077
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9078
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9079
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9080
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9081
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9082
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9083
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9084
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9087
		{
			sqlVAL.union.val = types.Geography
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9091
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9095
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9099
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9107
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9133
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9141
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9149
		{
			sqlVAL.union.val = nil
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9160
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = types.Int2
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9168
		{
			sqlVAL.union.val = types.Int
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = types.Float4
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9180
		{
			sqlVAL.union.val = types.Float
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9184
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9192
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9200
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = types.Bool
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9214
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = types.Float
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9233
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9239
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9261
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9287
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.union.val = types.String
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.union.val = true
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = false
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = types.Date
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9310
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9318
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9332
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9341
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9349
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9366
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9376
		{
			sqlVAL.union.val = true
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = false
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = false
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = types.Interval
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9390
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9401
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9425
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9441
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9456
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9474
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9489
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9505
		{
			sqlVAL.union.val = nil
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9511
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9519
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9579
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9628
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9632
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9648
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9652
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9656
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9660
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9664
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9668
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9672
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9676
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9680
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9684
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9700
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9708
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9744
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9748
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9760
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9764
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9768
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9772
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9804
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9831
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9853
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9857
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9861
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9865
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9873
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9889
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9897
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9919
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9935
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9943
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9979
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9987
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9991
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10031
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10053
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10113
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10118
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10132
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10140
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10144
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10153
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10164
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10168
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10183
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10191
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10195
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10198
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10209
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10210
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10212
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10225
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10234
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10300
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10425
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10430
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10439
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10448
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10450
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10457
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10466
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10468
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10471
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10476
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10481
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10486
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10495
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10496
		{
			return unimplemented(sqllex, "treat")
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10514
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10517
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10522
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10542
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10549
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10553
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10569
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10581
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10585
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.str = ""
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10658
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10671
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10711
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10718
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10731
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10735
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10739
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10757
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10761
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10768
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10780
		{
			sqlVAL.union.val = tree.Any
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = tree.Some
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = tree.All
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10794
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = tree.Div
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10797
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10802
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = tree.LT
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqlVAL.union.val = tree.GT
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10806
		{
			sqlVAL.union.val = tree.LE
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = tree.GE
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = tree.NE
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = tree.Like
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10814
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10848
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10856
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10867
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10871
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10877
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10924
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10934
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10938
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10965
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10969
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10982
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10986
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11037
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11041
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11086
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11090
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11097
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11107
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11129
		{
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11130
		{
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11134
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11144
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11202
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11210
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11260
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11279
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11283
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11299
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11308
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11319
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11328
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11336
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11348
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11451
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11480
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11484
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11488
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11501
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11528
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11541
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11548
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11573
		{
			sqlVAL.str = ""
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11579
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11583
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
