// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionArgs() tree.FuncArgs {
	return u.val.(tree.FuncArgs)
}
func (u *sqlSymUnion) functionArg() tree.FuncArg {
	return u.val.(tree.FuncArg)
}
func (u *sqlSymUnion) functionArgClass() tree.FuncArgClass {
	return u.val.(tree.FuncArgClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}

//line sql-gen.y:952
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15047

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 5,
	-2, 1806,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 63,
	281, 512,
	-2, 0,
	-1, 75,
	8, 970,
	29, 970,
	642, 970,
	643, 970,
	-2, 0,
	-1, 76,
	8, 970,
	29, 970,
	642, 970,
	643, 970,
	-2, 0,
	-1, 78,
	1, 1656,
	139, 1656,
	269, 1656,
	356, 1656,
	419, 1656,
	429, 1656,
	623, 1656,
	655, 1656,
	-2, 0,
	-1, 79,
	1, 1656,
	655, 1656,
	-2, 0,
	-1, 85,
	262, 270,
	561, 270,
	-2, 0,
	-1, 98,
	203, 434,
	248, 1533,
	264, 1533,
	281, 434,
	421, 434,
	433, 1276,
	477, 434,
	492, 1276,
	545, 1276,
	574, 434,
	601, 1276,
	-2, 0,
	-1, 104,
	141, 1806,
	257, 1806,
	585, 1806,
	586, 1806,
	-2, 0,
	-1, 122,
	160, 1777,
	181, 1777,
	194, 1777,
	260, 1777,
	295, 1777,
	369, 1777,
	380, 1777,
	580, 1777,
	-2, 1748,
	-1, 164,
	168, 1104,
	280, 1104,
	424, 1065,
	497, 1065,
	544, 1065,
	564, 1104,
	566, 1065,
	-2, 0,
	-1, 169,
	4, 1808,
	21, 1808,
	22, 1808,
	23, 1808,
	24, 1808,
	25, 1808,
	26, 1808,
	27, 1808,
	28, 1808,
	30, 1808,
	31, 1808,
	37, 1808,
	41, 1808,
	43, 1808,
	44, 1808,
	45, 1808,
	47, 1808,
	48, 1808,
	49, 1808,
	50, 1808,
	51, 1808,
	52, 1808,
	53, 1808,
	54, 1808,
	55, 1808,
	57, 1808,
	58, 1808,
	59, 1808,
	60, 1808,
	62, 1808,
	63, 1808,
	64, 1808,
	65, 1808,
	66, 1808,
	67, 1808,
	68, 1808,
	69, 1808,
	73, 1808,
	74, 1808,
	75, 1808,
	76, 1808,
	78, 1808,
	79, 1808,
	80, 1808,
	84, 1808,
	85, 1808,
	86, 1808,
	87, 1808,
	88, 1808,
	89, 1808,
	90, 1808,
	91, 1808,
	94, 1808,
	95, 1808,
	96, 1808,
	97, 1808,
	98, 1808,
	100, 1808,
	102, 1808,
	103, 1808,
	104, 1808,
	105, 1808,
	106, 1808,
	107, 1808,
	108, 1808,
	110, 1808,
	111, 1808,
	112, 1808,
	114, 1808,
	115, 1808,
	116, 1808,
	124, 1808,
	125, 1808,
	126, 1808,
	127, 1808,
	128, 1808,
	130, 1808,
	131, 1808,
	132, 1808,
	133, 1808,
	135, 1808,
	136, 1808,
	137, 1808,
	138, 1808,
	140, 1808,
	141, 1808,
	142, 1808,
	144, 1808,
	145, 1808,
	146, 1808,
	149, 1808,
	150, 1808,
	151, 1808,
	153, 1808,
	154, 1808,
	155, 1808,
	157, 1808,
	158, 1808,
	159, 1808,
	161, 1808,
	162, 1808,
	163, 1808,
	164, 1808,
	165, 1808,
	166, 1808,
	167, 1808,
	168, 1808,
	169, 1808,
	170, 1808,
	171, 1808,
	172, 1808,
	173, 1808,
	174, 1808,
	175, 1808,
	176, 1808,
	177, 1808,
	178, 1808,
	180, 1808,
	186, 1808,
	187, 1808,
	188, 1808,
	189, 1808,
	193, 1808,
	195, 1808,
	196, 1808,
	197, 1808,
	199, 1808,
	200, 1808,
	203, 1808,
	204, 1808,
	205, 1808,
	206, 1808,
	207, 1808,
	208, 1808,
	209, 1808,
	210, 1808,
	211, 1808,
	212, 1808,
	213, 1808,
	214, 1808,
	215, 1808,
	216, 1808,
	218, 1808,
	219, 1808,
	221, 1808,
	222, 1808,
	224, 1808,
	225, 1808,
	226, 1808,
	227, 1808,
	228, 1808,
	229, 1808,
	230, 1808,
	231, 1808,
	232, 1808,
	233, 1808,
	234, 1808,
	236, 1808,
	237, 1808,
	238, 1808,
	240, 1808,
	241, 1808,
	242, 1808,
	243, 1808,
	244, 1808,
	248, 1808,
	249, 1808,
	250, 1808,
	251, 1808,
	254, 1808,
	255, 1808,
	256, 1808,
	257, 1808,
	258, 1808,
	259, 1808,
	261, 1808,
	263, 1808,
	264, 1808,
	265, 1808,
	267, 1808,
	269, 1808,
	270, 1808,
	271, 1808,
	273, 1808,
	277, 1808,
	278, 1808,
	279, 1808,
	280, 1808,
	281, 1808,
	282, 1808,
	284, 1808,
	285, 1808,
	286, 1808,
	288, 1808,
	289, 1808,
	290, 1808,
	292, 1808,
	293, 1808,
	296, 1808,
	297, 1808,
	298, 1808,
	299, 1808,
	300, 1808,
	301, 1808,
	302, 1808,
	305, 1808,
	306, 1808,
	307, 1808,
	308, 1808,
	310, 1808,
	311, 1808,
	312, 1808,
	313, 1808,
	314, 1808,
	315, 1808,
	316, 1808,
	317, 1808,
	318, 1808,
	319, 1808,
	320, 1808,
	321, 1808,
	322, 1808,
	323, 1808,
	324, 1808,
	325, 1808,
	326, 1808,
	327, 1808,
	328, 1808,
	329, 1808,
	330, 1808,
	331, 1808,
	332, 1808,
	334, 1808,
	336, 1808,
	337, 1808,
	338, 1808,
	339, 1808,
	340, 1808,
	341, 1808,
	342, 1808,
	343, 1808,
	344, 1808,
	345, 1808,
	346, 1808,
	347, 1808,
	348, 1808,
	349, 1808,
	350, 1808,
	351, 1808,
	352, 1808,
	354, 1808,
	355, 1808,
	357, 1808,
	359, 1808,
	360, 1808,
	361, 1808,
	362, 1808,
	364, 1808,
	365, 1808,
	366, 1808,
	367, 1808,
	368, 1808,
	371, 1808,
	373, 1808,
	375, 1808,
	376, 1808,
	377, 1808,
	378, 1808,
	381, 1808,
	382, 1808,
	383, 1808,
	385, 1808,
	387, 1808,
	388, 1808,
	389, 1808,
	390, 1808,
	391, 1808,
	392, 1808,
	393, 1808,
	394, 1808,
	395, 1808,
	396, 1808,
	397, 1808,
	398, 1808,
	399, 1808,
	400, 1808,
	402, 1808,
	403, 1808,
	404, 1808,
	405, 1808,
	406, 1808,
	407, 1808,
	408, 1808,
	409, 1808,
	410, 1808,
	411, 1808,
	412, 1808,
	413, 1808,
	414, 1808,
	415, 1808,
	416, 1808,
	418, 1808,
	419, 1808,
	420, 1808,
	422, 1808,
	423, 1808,
	424, 1808,
	425, 1808,
	426, 1808,
	427, 1808,
	428, 1808,
	429, 1808,
	430, 1808,
	431, 1808,
	432, 1808,
	433, 1808,
	434, 1808,
	435, 1808,
	437, 1808,
	439, 1808,
	440, 1808,
	441, 1808,
	447, 1808,
	448, 1808,
	449, 1808,
	451, 1808,
	452, 1808,
	453, 1808,
	454, 1808,
	455, 1808,
	456, 1808,
	457, 1808,
	458, 1808,
	459, 1808,
	460, 1808,
	461, 1808,
	463, 1808,
	464, 1808,
	465, 1808,
	466, 1808,
	467, 1808,
	469, 1808,
	470, 1808,
	471, 1808,
	472, 1808,
	473, 1808,
	474, 1808,
	475, 1808,
	477, 1808,
	478, 1808,
	479, 1808,
	480, 1808,
	481, 1808,
	482, 1808,
	483, 1808,
	484, 1808,
	485, 1808,
	486, 1808,
	487, 1808,
	488, 1808,
	489, 1808,
	490, 1808,
	492, 1808,
	493, 1808,
	494, 1808,
	495, 1808,
	496, 1808,
	497, 1808,
	499, 1808,
	500, 1808,
	501, 1808,
	502, 1808,
	503, 1808,
	504, 1808,
	505, 1808,
	507, 1808,
	508, 1808,
	509, 1808,
	510, 1808,
	511, 1808,
	512, 1808,
	513, 1808,
	514, 1808,
	516, 1808,
	518, 1808,
	519, 1808,
	520, 1808,
	521, 1808,
	522, 1808,
	523, 1808,
	524, 1808,
	525, 1808,
	526, 1808,
	527, 1808,
	528, 1808,
	529, 1808,
	530, 1808,
	531, 1808,
	532, 1808,
	533, 1808,
	534, 1808,
	535, 1808,
	536, 1808,
	537, 1808,
	538, 1808,
	540, 1808,
	541, 1808,
	543, 1808,
	544, 1808,
	546, 1808,
	547, 1808,
	548, 1808,
	549, 1808,
	550, 1808,
	551, 1808,
	553, 1808,
	554, 1808,
	556, 1808,
	557, 1808,
	558, 1808,
	559, 1808,
	560, 1808,
	562, 1808,
	564, 1808,
	565, 1808,
	566, 1808,
	567, 1808,
	568, 1808,
	569, 1808,
	570, 1808,
	571, 1808,
	573, 1808,
	574, 1808,
	575, 1808,
	576, 1808,
	577, 1808,
	578, 1808,
	579, 1808,
	582, 1808,
	583, 1808,
	584, 1808,
	585, 1808,
	586, 1808,
	587, 1808,
	588, 1808,
	589, 1808,
	591, 1808,
	594, 1808,
	595, 1808,
	596, 1808,
	597, 1808,
	598, 1808,
	599, 1808,
	601, 1808,
	602, 1808,
	603, 1808,
	604, 1808,
	605, 1808,
	606, 1808,
	607, 1808,
	608, 1808,
	609, 1808,
	614, 1808,
	615, 1808,
	616, 1808,
	617, 1808,
	618, 1808,
	619, 1808,
	-2, 0,
	-1, 171,
	1, 1656,
	655, 1656,
	658, 1656,
	-2, 0,
	-1, 172,
	1, 1656,
	561, 1656,
	655, 1656,
	658, 1656,
	-2, 0,
	-1, 205,
	160, 1776,
	181, 1776,
	194, 1776,
	260, 1776,
	295, 1776,
	369, 1776,
	380, 1776,
	580, 1776,
	-2, 1751,
	-1, 257,
	4, 1815,
	5, 1815,
	6, 1815,
	7, 1815,
	8, 1815,
	9, 1815,
	10, 1815,
	21, 1815,
	22, 1815,
	23, 1815,
	24, 1815,
	25, 1815,
	26, 1815,
	27, 1815,
	28, 1815,
	30, 1815,
	31, 1815,
	37, 1815,
	38, 1815,
	41, 1815,
	43, 1815,
	44, 1815,
	45, 1815,
	46, 1815,
	47, 1815,
	48, 1815,
	49, 1815,
	50, 1815,
	51, 1815,
	52, 1815,
	53, 1815,
	54, 1815,
	55, 1815,
	57, 1815,
	58, 1815,
	59, 1815,
	60, 1815,
	62, 1815,
	63, 1815,
	64, 1815,
	65, 1815,
	66, 1815,
	67, 1815,
	68, 1815,
	69, 1815,
	70, 1815,
	71, 1815,
	72, 1815,
	73, 1815,
	74, 1815,
	75, 1815,
	76, 1815,
	78, 1815,
	79, 1815,
	80, 1815,
	82, 1815,
	84, 1815,
	85, 1815,
	86, 1815,
	87, 1815,
	88, 1815,
	89, 1815,
	90, 1815,
	91, 1815,
	94, 1815,
	95, 1815,
	96, 1815,
	97, 1815,
	98, 1815,
	100, 1815,
	102, 1815,
	103, 1815,
	104, 1815,
	105, 1815,
	106, 1815,
	107, 1815,
	108, 1815,
	110, 1815,
	111, 1815,
	112, 1815,
	113, 1815,
	114, 1815,
	115, 1815,
	116, 1815,
	117, 1815,
	118, 1815,
	119, 1815,
	120, 1815,
	121, 1815,
	122, 1815,
	123, 1815,
	124, 1815,
	125, 1815,
	126, 1815,
	127, 1815,
	128, 1815,
	129, 1815,
	130, 1815,
	131, 1815,
	132, 1815,
	133, 1815,
	134, 1815,
	135, 1815,
	136, 1815,
	137, 1815,
	138, 1815,
	140, 1815,
	141, 1815,
	142, 1815,
	144, 1815,
	145, 1815,
	146, 1815,
	149, 1815,
	150, 1815,
	151, 1815,
	153, 1815,
	154, 1815,
	155, 1815,
	157, 1815,
	158, 1815,
	159, 1815,
	161, 1815,
	162, 1815,
	163, 1815,
	164, 1815,
	165, 1815,
	166, 1815,
	167, 1815,
	168, 1815,
	169, 1815,
	170, 1815,
	171, 1815,
	172, 1815,
	173, 1815,
	174, 1815,
	175, 1815,
	176, 1815,
	177, 1815,
	178, 1815,
	179, 1815,
	180, 1815,
	186, 1815,
	187, 1815,
	188, 1815,
	189, 1815,
	193, 1815,
	195, 1815,
	196, 1815,
	197, 1815,
	199, 1815,
	200, 1815,
	202, 1815,
	203, 1815,
	204, 1815,
	205, 1815,
	206, 1815,
	207, 1815,
	208, 1815,
	209, 1815,
	210, 1815,
	211, 1815,
	212, 1815,
	213, 1815,
	214, 1815,
	215, 1815,
	216, 1815,
	218, 1815,
	219, 1815,
	221, 1815,
	222, 1815,
	224, 1815,
	225, 1815,
	226, 1815,
	227, 1815,
	228, 1815,
	229, 1815,
	230, 1815,
	231, 1815,
	232, 1815,
	233, 1815,
	234, 1815,
	235, 1815,
	236, 1815,
	237, 1815,
	238, 1815,
	240, 1815,
	241, 1815,
	242, 1815,
	243, 1815,
	244, 1815,
	248, 1815,
	249, 1815,
	250, 1815,
	251, 1815,
	253, 1815,
	254, 1815,
	255, 1815,
	256, 1815,
	257, 1815,
	258, 1815,
	259, 1815,
	261, 1815,
	263, 1815,
	264, 1815,
	265, 1815,
	266, 1815,
	267, 1815,
	268, 1815,
	269, 1815,
	270, 1815,
	271, 1815,
	272, 1815,
	273, 1815,
	277, 1815,
	278, 1815,
	279, 1815,
	280, 1815,
	281, 1815,
	282, 1815,
	284, 1815,
	285, 1815,
	286, 1815,
	288, 1815,
	289, 1815,
	290, 1815,
	291, 1815,
	292, 1815,
	293, 1815,
	294, 1815,
	296, 1815,
	297, 1815,
	298, 1815,
	299, 1815,
	300, 1815,
	301, 1815,
	302, 1815,
	303, 1815,
	304, 1815,
	305, 1815,
	306, 1815,
	307, 1815,
	308, 1815,
	310, 1815,
	311, 1815,
	312, 1815,
	313, 1815,
	314, 1815,
	315, 1815,
	316, 1815,
	317, 1815,
	318, 1815,
	319, 1815,
	320, 1815,
	321, 1815,
	322, 1815,
	323, 1815,
	324, 1815,
	325, 1815,
	326, 1815,
	327, 1815,
	328, 1815,
	329, 1815,
	330, 1815,
	331, 1815,
	332, 1815,
	334, 1815,
	335, 1815,
	336, 1815,
	337, 1815,
	338, 1815,
	339, 1815,
	340, 1815,
	341, 1815,
	342, 1815,
	343, 1815,
	344, 1815,
	345, 1815,
	346, 1815,
	347, 1815,
	348, 1815,
	349, 1815,
	350, 1815,
	351, 1815,
	352, 1815,
	353, 1815,
	354, 1815,
	355, 1815,
	356, 1815,
	357, 1815,
	358, 1815,
	359, 1815,
	360, 1815,
	361, 1815,
	362, 1815,
	363, 1815,
	364, 1815,
	365, 1815,
	366, 1815,
	367, 1815,
	368, 1815,
	371, 1815,
	373, 1815,
	376, 1815,
	377, 1815,
	378, 1815,
	381, 1815,
	382, 1815,
	383, 1815,
	384, 1815,
	385, 1815,
	386, 1815,
	387, 1815,
	388, 1815,
	389, 1815,
	390, 1815,
	391, 1815,
	392, 1815,
	393, 1815,
	394, 1815,
	395, 1815,
	396, 1815,
	397, 1815,
	398, 1815,
	399, 1815,
	400, 1815,
	402, 1815,
	403, 1815,
	404, 1815,
	405, 1815,
	406, 1815,
	407, 1815,
	408, 1815,
	409, 1815,
	410, 1815,
	411, 1815,
	412, 1815,
	413, 1815,
	414, 1815,
	415, 1815,
	416, 1815,
	418, 1815,
	419, 1815,
	420, 1815,
	422, 1815,
	423, 1815,
	424, 1815,
	425, 1815,
	426, 1815,
	427, 1815,
	428, 1815,
	429, 1815,
	430, 1815,
	431, 1815,
	432, 1815,
	433, 1815,
	434, 1815,
	435, 1815,
	437, 1815,
	439, 1815,
	440, 1815,
	441, 1815,
	447, 1815,
	448, 1815,
	449, 1815,
	451, 1815,
	452, 1815,
	453, 1815,
	454, 1815,
	455, 1815,
	456, 1815,
	457, 1815,
	458, 1815,
	459, 1815,
	460, 1815,
	461, 1815,
	463, 1815,
	464, 1815,
	465, 1815,
	466, 1815,
	467, 1815,
	468, 1815,
	469, 1815,
	470, 1815,
	471, 1815,
	472, 1815,
	473, 1815,
	474, 1815,
	475, 1815,
	477, 1815,
	478, 1815,
	479, 1815,
	480, 1815,
	481, 1815,
	482, 1815,
	483, 1815,
	484, 1815,
	485, 1815,
	486, 1815,
	487, 1815,
	488, 1815,
	489, 1815,
	490, 1815,
	492, 1815,
	493, 1815,
	494, 1815,
	495, 1815,
	496, 1815,
	497, 1815,
	498, 1815,
	499, 1815,
	500, 1815,
	501, 1815,
	502, 1815,
	503, 1815,
	504, 1815,
	505, 1815,
	506, 1815,
	507, 1815,
	508, 1815,
	509, 1815,
	510, 1815,
	511, 1815,
	512, 1815,
	513, 1815,
	514, 1815,
	516, 1815,
	518, 1815,
	519, 1815,
	520, 1815,
	521, 1815,
	522, 1815,
	523, 1815,
	524, 1815,
	525, 1815,
	526, 1815,
	527, 1815,
	528, 1815,
	529, 1815,
	530, 1815,
	531, 1815,
	532, 1815,
	533, 1815,
	534, 1815,
	535, 1815,
	536, 1815,
	537, 1815,
	538, 1815,
	540, 1815,
	541, 1815,
	542, 1815,
	543, 1815,
	544, 1815,
	546, 1815,
	547, 1815,
	548, 1815,
	549, 1815,
	550, 1815,
	551, 1815,
	553, 1815,
	554, 1815,
	556, 1815,
	557, 1815,
	558, 1815,
	559, 1815,
	560, 1815,
	562, 1815,
	564, 1815,
	565, 1815,
	566, 1815,
	567, 1815,
	568, 1815,
	569, 1815,
	570, 1815,
	571, 1815,
	572, 1815,
	573, 1815,
	574, 1815,
	575, 1815,
	576, 1815,
	577, 1815,
	578, 1815,
	579, 1815,
	581, 1815,
	582, 1815,
	583, 1815,
	584, 1815,
	585, 1815,
	586, 1815,
	587, 1815,
	588, 1815,
	589, 1815,
	590, 1815,
	591, 1815,
	594, 1815,
	595, 1815,
	596, 1815,
	597, 1815,
	598, 1815,
	599, 1815,
	601, 1815,
	602, 1815,
	603, 1815,
	604, 1815,
	605, 1815,
	606, 1815,
	607, 1815,
	608, 1815,
	609, 1815,
	614, 1815,
	615, 1815,
	616, 1815,
	617, 1815,
	618, 1815,
	619, 1815,
	620, 1815,
	635, 1815,
	642, 1815,
	643, 1815,
	644, 1815,
	652, 1815,
	656, 1815,
	-2, 0,
	-1, 827,
	4, 1531,
	21, 1531,
	22, 1531,
	23, 1531,
	24, 1531,
	25, 1531,
	26, 1531,
	27, 1531,
	28, 1531,
	30, 1531,
	31, 1531,
	37, 1531,
	41, 1531,
	43, 1531,
	44, 1531,
	45, 1531,
	47, 1531,
	48, 1531,
	49, 1531,
	50, 1531,
	51, 1531,
	52, 1531,
	53, 1531,
	54, 1531,
	55, 1531,
	57, 1531,
	58, 1531,
	59, 1531,
	60, 1531,
	62, 1531,
	63, 1531,
	64, 1531,
	65, 1531,
	66, 1531,
	67, 1531,
	68, 1531,
	69, 1531,
	73, 1531,
	74, 1531,
	75, 1531,
	76, 1531,
	78, 1531,
	79, 1531,
	80, 1531,
	84, 1531,
	85, 1531,
	86, 1531,
	87, 1531,
	88, 1531,
	89, 1531,
	90, 1531,
	91, 1531,
	94, 1531,
	95, 1531,
	96, 1531,
	97, 1531,
	98, 1531,
	100, 1531,
	102, 1531,
	103, 1531,
	104, 1531,
	105, 1531,
	106, 1531,
	107, 1531,
	108, 1531,
	110, 1531,
	111, 1531,
	112, 1531,
	114, 1531,
	115, 1531,
	116, 1531,
	124, 1531,
	125, 1531,
	126, 1531,
	127, 1531,
	128, 1531,
	130, 1531,
	131, 1531,
	132, 1531,
	133, 1531,
	135, 1531,
	136, 1531,
	137, 1531,
	138, 1531,
	140, 1531,
	141, 1531,
	142, 1531,
	144, 1531,
	145, 1531,
	146, 1531,
	149, 1531,
	150, 1531,
	151, 1531,
	153, 1531,
	154, 1531,
	155, 1531,
	157, 1531,
	158, 1531,
	159, 1531,
	161, 1531,
	162, 1531,
	163, 1531,
	164, 1531,
	165, 1531,
	166, 1531,
	167, 1531,
	168, 1531,
	169, 1531,
	170, 1531,
	171, 1531,
	172, 1531,
	173, 1531,
	174, 1531,
	175, 1531,
	176, 1531,
	177, 1531,
	178, 1531,
	180, 1531,
	186, 1531,
	187, 1531,
	188, 1531,
	189, 1531,
	193, 1531,
	195, 1531,
	196, 1531,
	197, 1531,
	199, 1531,
	200, 1531,
	203, 1531,
	204, 1531,
	205, 1531,
	206, 1531,
	207, 1531,
	208, 1531,
	209, 1531,
	210, 1531,
	211, 1531,
	212, 1531,
	213, 1531,
	214, 1531,
	215, 1531,
	216, 1531,
	218, 1531,
	219, 1531,
	221, 1531,
	222, 1531,
	224, 1531,
	225, 1531,
	226, 1531,
	227, 1531,
	228, 1531,
	229, 1531,
	230, 1531,
	231, 1531,
	232, 1531,
	233, 1531,
	234, 1531,
	236, 1531,
	237, 1531,
	238, 1531,
	240, 1531,
	241, 1531,
	242, 1531,
	243, 1531,
	244, 1531,
	248, 1531,
	249, 1531,
	250, 1531,
	251, 1531,
	254, 1531,
	255, 1531,
	256, 1531,
	257, 1531,
	258, 1531,
	259, 1531,
	261, 1531,
	263, 1531,
	264, 1531,
	265, 1531,
	267, 1531,
	269, 1531,
	270, 1531,
	271, 1531,
	273, 1531,
	277, 1531,
	278, 1531,
	279, 1531,
	280, 1531,
	281, 1531,
	282, 1531,
	284, 1531,
	285, 1531,
	286, 1531,
	288, 1531,
	289, 1531,
	290, 1531,
	292, 1531,
	293, 1531,
	296, 1531,
	297, 1531,
	298, 1531,
	299, 1531,
	300, 1531,
	301, 1531,
	302, 1531,
	305, 1531,
	306, 1531,
	307, 1531,
	308, 1531,
	310, 1531,
	311, 1531,
	312, 1531,
	313, 1531,
	314, 1531,
	315, 1531,
	316, 1531,
	317, 1531,
	318, 1531,
	319, 1531,
	320, 1531,
	321, 1531,
	322, 1531,
	323, 1531,
	324, 1531,
	325, 1531,
	326, 1531,
	327, 1531,
	328, 1531,
	329, 1531,
	330, 1531,
	331, 1531,
	332, 1531,
	334, 1531,
	336, 1531,
	337, 1531,
	338, 1531,
	339, 1531,
	340, 1531,
	341, 1531,
	342, 1531,
	343, 1531,
	344, 1531,
	345, 1531,
	346, 1531,
	347, 1531,
	348, 1531,
	349, 1531,
	350, 1531,
	351, 1531,
	352, 1531,
	354, 1531,
	355, 1531,
	357, 1531,
	359, 1531,
	360, 1531,
	361, 1531,
	362, 1531,
	364, 1531,
	365, 1531,
	366, 1531,
	367, 1531,
	368, 1531,
	371, 1531,
	373, 1531,
	376, 1531,
	377, 1531,
	378, 1531,
	381, 1531,
	382, 1531,
	383, 1531,
	385, 1531,
	387, 1531,
	388, 1531,
	389, 1531,
	390, 1531,
	391, 1531,
	392, 1531,
	393, 1531,
	394, 1531,
	395, 1531,
	396, 1531,
	397, 1531,
	398, 1531,
	399, 1531,
	400, 1531,
	402, 1531,
	403, 1531,
	404, 1531,
	405, 1531,
	406, 1531,
	407, 1531,
	408, 1531,
	409, 1531,
	410, 1531,
	411, 1531,
	412, 1531,
	413, 1531,
	414, 1531,
	415, 1531,
	416, 1531,
	418, 1531,
	419, 1531,
	420, 1531,
	422, 1531,
	423, 1531,
	424, 1531,
	425, 1531,
	426, 1531,
	427, 1531,
	428, 1531,
	429, 1531,
	430, 1531,
	431, 1531,
	432, 1531,
	433, 1531,
	434, 1531,
	435, 1531,
	437, 1531,
	439, 1531,
	440, 1531,
	441, 1531,
	447, 1531,
	448, 1531,
	449, 1531,
	451, 1531,
	452, 1531,
	453, 1531,
	454, 1531,
	455, 1531,
	456, 1531,
	457, 1531,
	458, 1531,
	459, 1531,
	460, 1531,
	461, 1531,
	463, 1531,
	464, 1531,
	465, 1531,
	466, 1531,
	467, 1531,
	469, 1531,
	470, 1531,
	471, 1531,
	472, 1531,
	473, 1531,
	474, 1531,
	475, 1531,
	477, 1531,
	478, 1531,
	479, 1531,
	480, 1531,
	481, 1531,
	482, 1531,
	483, 1531,
	484, 1531,
	485, 1531,
	486, 1531,
	487, 1531,
	488, 1531,
	489, 1531,
	490, 1531,
	492, 1531,
	493, 1531,
	494, 1531,
	495, 1531,
	496, 1531,
	497, 1531,
	499, 1531,
	500, 1531,
	501, 1531,
	502, 1531,
	503, 1531,
	504, 1531,
	505, 1531,
	507, 1531,
	508, 1531,
	509, 1531,
	510, 1531,
	511, 1531,
	512, 1531,
	513, 1531,
	514, 1531,
	516, 1531,
	518, 1531,
	519, 1531,
	520, 1531,
	521, 1531,
	522, 1531,
	523, 1531,
	524, 1531,
	525, 1531,
	526, 1531,
	527, 1531,
	528, 1531,
	529, 1531,
	530, 1531,
	531, 1531,
	532, 1531,
	533, 1531,
	534, 1531,
	535, 1531,
	536, 1531,
	537, 1531,
	538, 1531,
	540, 1531,
	541, 1531,
	543, 1531,
	544, 1531,
	546, 1531,
	547, 1531,
	548, 1531,
	549, 1531,
	550, 1531,
	551, 1531,
	553, 1531,
	554, 1531,
	556, 1531,
	557, 1531,
	558, 1531,
	559, 1531,
	560, 1531,
	562, 1531,
	564, 1531,
	565, 1531,
	566, 1531,
	567, 1531,
	568, 1531,
	569, 1531,
	570, 1531,
	571, 1531,
	573, 1531,
	574, 1531,
	575, 1531,
	576, 1531,
	577, 1531,
	578, 1531,
	579, 1531,
	582, 1531,
	583, 1531,
	584, 1531,
	585, 1531,
	586, 1531,
	587, 1531,
	588, 1531,
	589, 1531,
	591, 1531,
	594, 1531,
	595, 1531,
	596, 1531,
	597, 1531,
	598, 1531,
	599, 1531,
	601, 1531,
	602, 1531,
	603, 1531,
	604, 1531,
	605, 1531,
	606, 1531,
	607, 1531,
	608, 1531,
	609, 1531,
	614, 1531,
	615, 1531,
	616, 1531,
	617, 1531,
	618, 1531,
	619, 1531,
	-2, 0,
	-1, 846,
	201, 2618,
	561, 2618,
	634, 2618,
	654, 2618,
	-2, 0,
	-1, 847,
	201, 2604,
	561, 2604,
	634, 2604,
	654, 2604,
	-2, 0,
	-1, 849,
	201, 2897,
	561, 2897,
	634, 2897,
	654, 2897,
	-2, 0,
	-1, 852,
	201, 2741,
	561, 2741,
	634, 2741,
	654, 2741,
	-2, 0,
	-1, 853,
	201, 2944,
	561, 2944,
	634, 2944,
	654, 2944,
	-2, 0,
	-1, 861,
	201, 2769,
	561, 2769,
	634, 2769,
	654, 2769,
	-2, 836,
	-1, 877,
	8, 969,
	29, 969,
	642, 969,
	643, 969,
	-2, 974,
	-1, 881,
	1, 2675,
	655, 2675,
	658, 2675,
	-2, 974,
	-1, 882,
	1, 2728,
	655, 2728,
	658, 2728,
	-2, 974,
	-1, 885,
	1, 2774,
	655, 2774,
	658, 2774,
	-2, 967,
	-1, 886,
	1, 2831,
	655, 2831,
	658, 2831,
	-2, 968,
	-1, 887,
	1, 2680,
	655, 2680,
	658, 2680,
	-2, 971,
	-1, 888,
	1, 2590,
	655, 2590,
	658, 2590,
	-2, 972,
	-1, 928,
	654, 2547,
	657, 2547,
	-2, 1191,
	-1, 929,
	654, 2549,
	657, 2549,
	-2, 1192,
	-1, 930,
	654, 2548,
	657, 2548,
	-2, 1193,
	-1, 931,
	657, 2471,
	-2, 1194,
	-1, 957,
	194, 289,
	-2, 0,
	-1, 978,
	46, 2520,
	-2, 0,
	-1, 979,
	601, 1509,
	-2, 1277,
	-1, 996,
	4, 1949,
	21, 1949,
	22, 1949,
	23, 1949,
	24, 1949,
	25, 1949,
	26, 1949,
	27, 1949,
	28, 1949,
	30, 1949,
	31, 1949,
	37, 1949,
	41, 1949,
	43, 1949,
	44, 1949,
	45, 1949,
	47, 1949,
	48, 1949,
	49, 1949,
	50, 1949,
	51, 1949,
	52, 1949,
	53, 1949,
	54, 1949,
	55, 1949,
	57, 1949,
	58, 1949,
	59, 1949,
	60, 1949,
	62, 1949,
	63, 1949,
	64, 1949,
	65, 1949,
	66, 1949,
	67, 1949,
	68, 1949,
	69, 1949,
	73, 1949,
	74, 1949,
	75, 1949,
	76, 1949,
	78, 1949,
	79, 1949,
	80, 1949,
	84, 1949,
	85, 1949,
	86, 1949,
	87, 1949,
	88, 1949,
	89, 1949,
	90, 1949,
	91, 1949,
	94, 1949,
	95, 1949,
	96, 1949,
	97, 1949,
	98, 1949,
	100, 1949,
	102, 1949,
	103, 1949,
	104, 1949,
	105, 1949,
	106, 1949,
	107, 1949,
	108, 1949,
	110, 1949,
	111, 1949,
	112, 1949,
	114, 1949,
	115, 1949,
	116, 1949,
	124, 1949,
	125, 1949,
	126, 1949,
	127, 1949,
	128, 1949,
	130, 1949,
	131, 1949,
	132, 1949,
	133, 1949,
	135, 1949,
	136, 1949,
	137, 1949,
	138, 1949,
	140, 1949,
	141, 1949,
	142, 1949,
	144, 1949,
	145, 1949,
	146, 1949,
	149, 1949,
	150, 1949,
	151, 1949,
	153, 1949,
	154, 1949,
	155, 1949,
	157, 1949,
	158, 1949,
	159, 1949,
	161, 1949,
	162, 1949,
	163, 1949,
	164, 1949,
	165, 1949,
	166, 1949,
	167, 1949,
	168, 1949,
	169, 1949,
	170, 1949,
	171, 1949,
	172, 1949,
	173, 1949,
	174, 1949,
	175, 1949,
	176, 1949,
	177, 1949,
	178, 1949,
	180, 1949,
	186, 1949,
	187, 1949,
	188, 1949,
	189, 1949,
	193, 1949,
	195, 1949,
	196, 1949,
	197, 1949,
	199, 1949,
	200, 1949,
	203, 1949,
	204, 1949,
	205, 1949,
	206, 1949,
	207, 1949,
	208, 1949,
	209, 1949,
	210, 1949,
	211, 1949,
	212, 1949,
	213, 1949,
	214, 1949,
	215, 1949,
	216, 1949,
	218, 1949,
	219, 1949,
	221, 1949,
	222, 1949,
	224, 1949,
	225, 1949,
	226, 1949,
	227, 1949,
	228, 1949,
	229, 1949,
	230, 1949,
	231, 1949,
	232, 1949,
	233, 1949,
	234, 1949,
	236, 1949,
	237, 1949,
	238, 1949,
	240, 1949,
	241, 1949,
	242, 1949,
	243, 1949,
	244, 1949,
	248, 1949,
	249, 1949,
	250, 1949,
	251, 1949,
	254, 1949,
	255, 1949,
	256, 1949,
	257, 1949,
	258, 1949,
	259, 1949,
	261, 1949,
	263, 1949,
	264, 1949,
	265, 1949,
	267, 1949,
	269, 1949,
	270, 1949,
	271, 1949,
	273, 1949,
	277, 1949,
	278, 1949,
	279, 1949,
	280, 1949,
	281, 1949,
	282, 1949,
	284, 1949,
	285, 1949,
	286, 1949,
	288, 1949,
	289, 1949,
	290, 1949,
	292, 1949,
	293, 1949,
	296, 1949,
	297, 1949,
	298, 1949,
	299, 1949,
	300, 1949,
	301, 1949,
	302, 1949,
	305, 1949,
	306, 1949,
	307, 1949,
	308, 1949,
	310, 1949,
	311, 1949,
	312, 1949,
	313, 1949,
	314, 1949,
	315, 1949,
	316, 1949,
	317, 1949,
	318, 1949,
	319, 1949,
	320, 1949,
	321, 1949,
	322, 1949,
	323, 1949,
	324, 1949,
	325, 1949,
	326, 1949,
	327, 1949,
	328, 1949,
	329, 1949,
	330, 1949,
	331, 1949,
	332, 1949,
	334, 1949,
	336, 1949,
	337, 1949,
	338, 1949,
	339, 1949,
	340, 1949,
	341, 1949,
	342, 1949,
	343, 1949,
	344, 1949,
	345, 1949,
	346, 1949,
	347, 1949,
	348, 1949,
	349, 1949,
	350, 1949,
	351, 1949,
	352, 1949,
	354, 1949,
	355, 1949,
	357, 1949,
	359, 1949,
	360, 1949,
	361, 1949,
	362, 1949,
	364, 1949,
	365, 1949,
	366, 1949,
	367, 1949,
	368, 1949,
	371, 1949,
	373, 1949,
	376, 1949,
	377, 1949,
	378, 1949,
	381, 1949,
	382, 1949,
	383, 1949,
	385, 1949,
	387, 1949,
	388, 1949,
	389, 1949,
	390, 1949,
	391, 1949,
	392, 1949,
	393, 1949,
	394, 1949,
	395, 1949,
	396, 1949,
	397, 1949,
	398, 1949,
	399, 1949,
	400, 1949,
	402, 1949,
	403, 1949,
	404, 1949,
	405, 1949,
	406, 1949,
	407, 1949,
	408, 1949,
	409, 1949,
	410, 1949,
	411, 1949,
	412, 1949,
	413, 1949,
	414, 1949,
	415, 1949,
	416, 1949,
	418, 1949,
	419, 1949,
	420, 1949,
	422, 1949,
	423, 1949,
	424, 1949,
	425, 1949,
	426, 1949,
	427, 1949,
	428, 1949,
	429, 1949,
	430, 1949,
	431, 1949,
	432, 1949,
	433, 1949,
	434, 1949,
	435, 1949,
	437, 1949,
	439, 1949,
	440, 1949,
	441, 1949,
	447, 1949,
	448, 1949,
	449, 1949,
	451, 1949,
	452, 1949,
	453, 1949,
	454, 1949,
	455, 1949,
	456, 1949,
	457, 1949,
	458, 1949,
	459, 1949,
	460, 1949,
	461, 1949,
	463, 1949,
	464, 1949,
	465, 1949,
	466, 1949,
	467, 1949,
	469, 1949,
	470, 1949,
	471, 1949,
	472, 1949,
	473, 1949,
	474, 1949,
	475, 1949,
	477, 1949,
	478, 1949,
	479, 1949,
	480, 1949,
	481, 1949,
	482, 1949,
	483, 1949,
	484, 1949,
	485, 1949,
	486, 1949,
	487, 1949,
	488, 1949,
	489, 1949,
	490, 1949,
	492, 1949,
	493, 1949,
	494, 1949,
	495, 1949,
	496, 1949,
	497, 1949,
	499, 1949,
	500, 1949,
	501, 1949,
	502, 1949,
	503, 1949,
	504, 1949,
	505, 1949,
	507, 1949,
	508, 1949,
	509, 1949,
	510, 1949,
	511, 1949,
	512, 1949,
	513, 1949,
	514, 1949,
	516, 1949,
	518, 1949,
	519, 1949,
	520, 1949,
	521, 1949,
	522, 1949,
	523, 1949,
	524, 1949,
	525, 1949,
	526, 1949,
	527, 1949,
	528, 1949,
	529, 1949,
	530, 1949,
	531, 1949,
	532, 1949,
	533, 1949,
	534, 1949,
	535, 1949,
	536, 1949,
	537, 1949,
	538, 1949,
	540, 1949,
	541, 1949,
	543, 1949,
	544, 1949,
	546, 1949,
	547, 1949,
	548, 1949,
	549, 1949,
	550, 1949,
	551, 1949,
	553, 1949,
	554, 1949,
	556, 1949,
	557, 1949,
	558, 1949,
	559, 1949,
	560, 1949,
	562, 1949,
	564, 1949,
	565, 1949,
	566, 1949,
	567, 1949,
	568, 1949,
	569, 1949,
	570, 1949,
	571, 1949,
	573, 1949,
	574, 1949,
	575, 1949,
	576, 1949,
	577, 1949,
	578, 1949,
	579, 1949,
	582, 1949,
	583, 1949,
	584, 1949,
	585, 1949,
	586, 1949,
	587, 1949,
	588, 1949,
	589, 1949,
	591, 1949,
	594, 1949,
	595, 1949,
	596, 1949,
	597, 1949,
	598, 1949,
	599, 1949,
	601, 1949,
	602, 1949,
	603, 1949,
	604, 1949,
	605, 1949,
	606, 1949,
	607, 1949,
	608, 1949,
	609, 1949,
	614, 1949,
	615, 1949,
	616, 1949,
	617, 1949,
	618, 1949,
	619, 1949,
	-2, 0,
	-1, 1006,
	281, 512,
	-2, 0,
	-1, 1084,
	201, 1013,
	-2, 0,
	-1, 1085,
	424, 1066,
	497, 1066,
	544, 1066,
	566, 1066,
	-2, 0,
	-1, 1086,
	424, 1065,
	497, 1065,
	544, 1065,
	566, 1065,
	-2, 987,
	-1, 1090,
	1, 1118,
	651, 1118,
	653, 1118,
	655, 1118,
	658, 1118,
	-2, 0,
	-1, 1092,
	1, 1040,
	651, 1040,
	653, 1040,
	655, 1040,
	658, 1040,
	-2, 0,
	-1, 1093,
	1, 1044,
	651, 1044,
	653, 1044,
	655, 1044,
	658, 1044,
	-2, 0,
	-1, 1094,
	1, 1190,
	194, 1190,
	651, 1190,
	653, 1190,
	655, 1190,
	658, 1190,
	-2, 0,
	-1, 1102,
	1, 1071,
	651, 1071,
	653, 1071,
	655, 1071,
	658, 1071,
	-2, 0,
	-1, 1109,
	1, 1118,
	651, 1118,
	653, 1118,
	655, 1118,
	658, 1118,
	-2, 0,
	-1, 1110,
	1, 1120,
	651, 1120,
	653, 1120,
	655, 1120,
	658, 1120,
	-2, 0,
	-1, 1111,
	1, 1123,
	651, 1123,
	653, 1123,
	655, 1123,
	658, 1123,
	-2, 0,
	-1, 1119,
	1, 1153,
	651, 1153,
	653, 1153,
	655, 1153,
	658, 1153,
	-2, 0,
	-1, 1120,
	1, 1155,
	651, 1155,
	653, 1155,
	655, 1155,
	658, 1155,
	-2, 0,
	-1, 1125,
	1, 1183,
	651, 1183,
	653, 1183,
	655, 1183,
	658, 1183,
	-2, 0,
	-1, 1176,
	181, 1819,
	194, 1819,
	295, 1819,
	369, 1819,
	-2, 1755,
	-1, 1192,
	181, 1818,
	194, 1818,
	295, 1818,
	369, 1818,
	-2, 1752,
	-1, 1221,
	654, 2546,
	-2, 844,
	-1, 1250,
	5, 2538,
	652, 2536,
	-2, 2527,
	-1, 1258,
	5, 2559,
	652, 2556,
	-2, 2547,
	-1, 1259,
	5, 2560,
	652, 2557,
	-2, 2548,
	-1, 1267,
	654, 2544,
	-2, 2526,
	-1, 1268,
	652, 3054,
	-2, 2545,
	-1, 1291,
	5, 2561,
	38, 2561,
	134, 2561,
	634, 2561,
	650, 2561,
	653, 2561,
	654, 2561,
	657, 2561,
	-2, 3053,
	-1, 1292,
	5, 2024,
	-2, 3023,
	-1, 1293,
	5, 2025,
	-2, 3024,
	-1, 1294,
	5, 2026,
	-2, 3039,
	-1, 1295,
	5, 2027,
	-2, 3001,
	-1, 1296,
	5, 2028,
	-2, 3036,
	-1, 1297,
	5, 2036,
	-2, 3014,
	-1, 1298,
	5, 2023,
	-2, 3010,
	-1, 1299,
	5, 2023,
	-2, 3009,
	-1, 1300,
	5, 2023,
	-2, 3029,
	-1, 1301,
	5, 2034,
	-2, 3003,
	-1, 1302,
	5, 2039,
	-2, 3002,
	-1, 1303,
	5, 2041,
	-2, 3049,
	-1, 1306,
	5, 2063,
	-2, 3042,
	-1, 1307,
	5, 2055,
	-2, 3043,
	-1, 1308,
	5, 2063,
	-2, 3044,
	-1, 1309,
	5, 2059,
	-2, 3045,
	-1, 1310,
	5, 2009,
	-2, 3015,
	-1, 1311,
	5, 2010,
	-2, 3016,
	-1, 1312,
	5, 2011,
	-2, 3004,
	-1, 1340,
	5, 2046,
	-2, 3050,
	-1, 1341,
	5, 2047,
	-2, 3040,
	-1, 1342,
	5, 2048,
	602, 2048,
	-2, 3005,
	-1, 1343,
	5, 2049,
	602, 2049,
	-2, 3006,
	-1, 1381,
	652, 2556,
	-2, 2547,
	-1, 1382,
	652, 2557,
	-2, 2548,
	-1, 1483,
	201, 2944,
	561, 2944,
	634, 2944,
	654, 2944,
	-2, 0,
	-1, 1488,
	1, 820,
	655, 820,
	658, 820,
	-2, 1664,
	-1, 1535,
	1, 1659,
	655, 1659,
	658, 1659,
	-2, 1664,
	-1, 1637,
	389, 2521,
	451, 2521,
	499, 2521,
	644, 2521,
	-2, 2509,
	-1, 1643,
	201, 149,
	288, 149,
	354, 149,
	609, 149,
	-2, 2939,
	-1, 1644,
	201, 150,
	288, 150,
	354, 150,
	609, 150,
	-2, 2665,
	-1, 1645,
	201, 151,
	288, 151,
	354, 151,
	609, 151,
	-2, 2854,
	-1, 1651,
	656, 2521,
	-2, 2523,
	-1, 1675,
	1, 1506,
	456, 1460,
	499, 1460,
	626, 1460,
	631, 1460,
	651, 1506,
	653, 1506,
	655, 1506,
	658, 1506,
	-2, 1804,
	-1, 1681,
	217, 1603,
	239, 1603,
	467, 1603,
	-2, 0,
	-1, 1748,
	46, 2519,
	-2, 1239,
	-1, 1755,
	1, 1506,
	651, 1506,
	653, 1506,
	655, 1506,
	658, 1506,
	-2, 1804,
	-1, 1758,
	433, 1276,
	601, 1276,
	-2, 433,
	-1, 1764,
	4, 1531,
	21, 1531,
	22, 1531,
	23, 1531,
	24, 1531,
	25, 1531,
	26, 1531,
	27, 1531,
	28, 1531,
	30, 1531,
	31, 1531,
	37, 1531,
	41, 1531,
	43, 1531,
	44, 1531,
	45, 1531,
	47, 1531,
	48, 1531,
	49, 1531,
	50, 1531,
	51, 1531,
	52, 1531,
	53, 1531,
	54, 1531,
	55, 1531,
	57, 1531,
	58, 1531,
	59, 1531,
	60, 1531,
	62, 1531,
	63, 1531,
	64, 1531,
	65, 1531,
	66, 1531,
	67, 1531,
	68, 1531,
	69, 1531,
	73, 1531,
	74, 1531,
	75, 1531,
	76, 1531,
	78, 1531,
	79, 1531,
	80, 1531,
	84, 1531,
	85, 1531,
	86, 1531,
	87, 1531,
	88, 1531,
	89, 1531,
	90, 1531,
	91, 1531,
	94, 1531,
	95, 1531,
	96, 1531,
	97, 1531,
	98, 1531,
	100, 1531,
	102, 1531,
	103, 1531,
	104, 1531,
	105, 1531,
	106, 1531,
	107, 1531,
	108, 1531,
	110, 1531,
	111, 1531,
	112, 1531,
	114, 1531,
	115, 1531,
	116, 1531,
	124, 1531,
	125, 1531,
	126, 1531,
	127, 1531,
	128, 1531,
	130, 1531,
	131, 1531,
	132, 1531,
	133, 1531,
	135, 1531,
	136, 1531,
	137, 1531,
	138, 1531,
	140, 1531,
	141, 1531,
	142, 1531,
	144, 1531,
	145, 1531,
	146, 1531,
	149, 1531,
	150, 1531,
	151, 1531,
	153, 1531,
	154, 1531,
	155, 1531,
	157, 1531,
	158, 1531,
	159, 1531,
	161, 1531,
	162, 1531,
	163, 1531,
	164, 1531,
	165, 1531,
	166, 1531,
	167, 1531,
	168, 1531,
	169, 1531,
	170, 1531,
	171, 1531,
	172, 1531,
	173, 1531,
	174, 1531,
	175, 1531,
	176, 1531,
	177, 1531,
	178, 1531,
	186, 1531,
	187, 1531,
	188, 1531,
	189, 1531,
	193, 1531,
	195, 1531,
	196, 1531,
	197, 1531,
	199, 1531,
	200, 1531,
	203, 1531,
	204, 1531,
	205, 1531,
	206, 1531,
	207, 1531,
	208, 1531,
	209, 1531,
	210, 1531,
	211, 1531,
	212, 1531,
	213, 1531,
	214, 1531,
	215, 1531,
	216, 1531,
	218, 1531,
	219, 1531,
	221, 1531,
	222, 1531,
	224, 1531,
	225, 1531,
	226, 1531,
	227, 1531,
	228, 1531,
	229, 1531,
	230, 1531,
	231, 1531,
	232, 1531,
	233, 1531,
	234, 1531,
	236, 1531,
	237, 1531,
	238, 1531,
	240, 1531,
	241, 1531,
	242, 1531,
	243, 1531,
	244, 1531,
	249, 1531,
	250, 1531,
	251, 1531,
	254, 1531,
	255, 1531,
	256, 1531,
	257, 1531,
	258, 1531,
	259, 1531,
	261, 1531,
	263, 1531,
	264, 1531,
	265, 1531,
	267, 1531,
	269, 1531,
	270, 1531,
	271, 1531,
	273, 1531,
	277, 1531,
	278, 1531,
	279, 1531,
	280, 1531,
	281, 1531,
	282, 1531,
	284, 1531,
	285, 1531,
	286, 1531,
	288, 1531,
	289, 1531,
	290, 1531,
	292, 1531,
	293, 1531,
	296, 1531,
	297, 1531,
	298, 1531,
	299, 1531,
	300, 1531,
	301, 1531,
	302, 1531,
	305, 1531,
	306, 1531,
	307, 1531,
	308, 1531,
	310, 1531,
	311, 1531,
	312, 1531,
	313, 1531,
	314, 1531,
	315, 1531,
	316, 1531,
	317, 1531,
	318, 1531,
	319, 1531,
	320, 1531,
	321, 1531,
	322, 1531,
	323, 1531,
	324, 1531,
	325, 1531,
	326, 1531,
	327, 1531,
	328, 1531,
	329, 1531,
	330, 1531,
	331, 1531,
	332, 1531,
	334, 1531,
	336, 1531,
	337, 1531,
	338, 1531,
	339, 1531,
	340, 1531,
	341, 1531,
	342, 1531,
	343, 1531,
	344, 1531,
	345, 1531,
	346, 1531,
	347, 1531,
	348, 1531,
	349, 1531,
	350, 1531,
	351, 1531,
	352, 1531,
	354, 1531,
	355, 1531,
	359, 1531,
	360, 1531,
	361, 1531,
	362, 1531,
	364, 1531,
	365, 1531,
	366, 1531,
	367, 1531,
	368, 1531,
	371, 1531,
	373, 1531,
	374, 1531,
	376, 1531,
	377, 1531,
	378, 1531,
	381, 1531,
	382, 1531,
	383, 1531,
	385, 1531,
	387, 1531,
	388, 1531,
	389, 1531,
	390, 1531,
	391, 1531,
	392, 1531,
	393, 1531,
	394, 1531,
	395, 1531,
	396, 1531,
	397, 1531,
	398, 1531,
	399, 1531,
	400, 1531,
	402, 1531,
	403, 1531,
	404, 1531,
	405, 1531,
	406, 1531,
	407, 1531,
	408, 1531,
	409, 1531,
	410, 1531,
	411, 1531,
	412, 1531,
	413, 1531,
	414, 1531,
	415, 1531,
	416, 1531,
	418, 1531,
	419, 1531,
	420, 1531,
	422, 1531,
	423, 1531,
	424, 1531,
	425, 1531,
	426, 1531,
	427, 1531,
	428, 1531,
	429, 1531,
	430, 1531,
	431, 1531,
	432, 1531,
	433, 1531,
	434, 1531,
	435, 1531,
	437, 1531,
	439, 1531,
	440, 1531,
	441, 1531,
	447, 1531,
	448, 1531,
	449, 1531,
	451, 1531,
	452, 1531,
	453, 1531,
	454, 1531,
	455, 1531,
	456, 1531,
	457, 1531,
	458, 1531,
	459, 1531,
	460, 1531,
	461, 1531,
	463, 1531,
	464, 1531,
	465, 1531,
	466, 1531,
	467, 1531,
	469, 1531,
	470, 1531,
	471, 1531,
	472, 1531,
	473, 1531,
	474, 1531,
	475, 1531,
	477, 1531,
	478, 1531,
	479, 1531,
	480, 1531,
	481, 1531,
	482, 1531,
	483, 1531,
	484, 1531,
	485, 1531,
	486, 1531,
	487, 1531,
	488, 1531,
	489, 1531,
	490, 1531,
	492, 1531,
	493, 1531,
	494, 1531,
	495, 1531,
	496, 1531,
	497, 1531,
	499, 1531,
	500, 1531,
	501, 1531,
	502, 1531,
	503, 1531,
	504, 1531,
	505, 1531,
	507, 1531,
	508, 1531,
	509, 1531,
	510, 1531,
	511, 1531,
	512, 1531,
	513, 1531,
	514, 1531,
	516, 1531,
	518, 1531,
	519, 1531,
	520, 1531,
	521, 1531,
	522, 1531,
	523, 1531,
	524, 1531,
	525, 1531,
	526, 1531,
	527, 1531,
	528, 1531,
	529, 1531,
	530, 1531,
	531, 1531,
	532, 1531,
	533, 1531,
	534, 1531,
	535, 1531,
	536, 1531,
	537, 1531,
	538, 1531,
	540, 1531,
	541, 1531,
	543, 1531,
	544, 1531,
	546, 1531,
	547, 1531,
	548, 1531,
	549, 1531,
	550, 1531,
	551, 1531,
	553, 1531,
	554, 1531,
	556, 1531,
	557, 1531,
	558, 1531,
	559, 1531,
	560, 1531,
	562, 1531,
	564, 1531,
	565, 1531,
	566, 1531,
	567, 1531,
	568, 1531,
	569, 1531,
	570, 1531,
	571, 1531,
	573, 1531,
	574, 1531,
	575, 1531,
	576, 1531,
	577, 1531,
	578, 1531,
	579, 1531,
	582, 1531,
	583, 1531,
	584, 1531,
	585, 1531,
	586, 1531,
	587, 1531,
	588, 1531,
	589, 1531,
	591, 1531,
	594, 1531,
	595, 1531,
	596, 1531,
	597, 1531,
	598, 1531,
	599, 1531,
	601, 1531,
	602, 1531,
	603, 1531,
	604, 1531,
	605, 1531,
	606, 1531,
	607, 1531,
	608, 1531,
	609, 1531,
	614, 1531,
	615, 1531,
	616, 1531,
	617, 1531,
	618, 1531,
	619, 1531,
	-2, 0,
	-1, 1787,
	1, 650,
	651, 650,
	653, 650,
	655, 650,
	658, 650,
	-2, 1775,
	-1, 1790,
	4, 3048,
	11, 3048,
	12, 3048,
	14, 3048,
	15, 3048,
	16, 3048,
	17, 3048,
	18, 3048,
	19, 3048,
	21, 3048,
	22, 3048,
	23, 3048,
	24, 3048,
	25, 3048,
	26, 3048,
	27, 3048,
	28, 3048,
	30, 3048,
	31, 3048,
	34, 3048,
	35, 3048,
	37, 3048,
	39, 3048,
	41, 3048,
	43, 3048,
	44, 3048,
	45, 3048,
	47, 3048,
	48, 3048,
	49, 3048,
	50, 3048,
	51, 3048,
	52, 3048,
	53, 3048,
	54, 3048,
	55, 3048,
	57, 3048,
	58, 3048,
	59, 3048,
	60, 3048,
	62, 3048,
	63, 3048,
	64, 3048,
	65, 3048,
	66, 3048,
	67, 3048,
	68, 3048,
	69, 3048,
	72, 3048,
	73, 3048,
	74, 3048,
	75, 3048,
	76, 3048,
	78, 3048,
	79, 3048,
	80, 3048,
	81, 3048,
	84, 3048,
	85, 3048,
	86, 3048,
	87, 3048,
	88, 3048,
	89, 3048,
	90, 3048,
	91, 3048,
	92, 3048,
	94, 3048,
	95, 3048,
	96, 3048,
	97, 3048,
	98, 3048,
	100, 3048,
	101, 3048,
	102, 3048,
	103, 3048,
	104, 3048,
	105, 3048,
	106, 3048,
	107, 3048,
	108, 3048,
	110, 3048,
	111, 3048,
	112, 3048,
	113, 3048,
	114, 3048,
	115, 3048,
	116, 3048,
	124, 3048,
	125, 3048,
	126, 3048,
	127, 3048,
	128, 3048,
	130, 3048,
	131, 3048,
	132, 3048,
	133, 3048,
	135, 3048,
	136, 3048,
	137, 3048,
	138, 3048,
	140, 3048,
	141, 3048,
	142, 3048,
	144, 3048,
	145, 3048,
	146, 3048,
	149, 3048,
	150, 3048,
	151, 3048,
	153, 3048,
	154, 3048,
	155, 3048,
	157, 3048,
	158, 3048,
	159, 3048,
	161, 3048,
	162, 3048,
	163, 3048,
	164, 3048,
	165, 3048,
	166, 3048,
	167, 3048,
	168, 3048,
	169, 3048,
	170, 3048,
	171, 3048,
	172, 3048,
	173, 3048,
	174, 3048,
	175, 3048,
	176, 3048,
	177, 3048,
	178, 3048,
	182, 3048,
	183, 3048,
	184, 3048,
	185, 3048,
	186, 3048,
	187, 3048,
	188, 3048,
	189, 3048,
	192, 3048,
	193, 3048,
	195, 3048,
	196, 3048,
	197, 3048,
	199, 3048,
	200, 3048,
	202, 3048,
	203, 3048,
	204, 3048,
	205, 3048,
	206, 3048,
	207, 3048,
	208, 3048,
	209, 3048,
	210, 3048,
	211, 3048,
	212, 3048,
	213, 3048,
	214, 3048,
	215, 3048,
	216, 3048,
	218, 3048,
	219, 3048,
	221, 3048,
	222, 3048,
	224, 3048,
	225, 3048,
	226, 3048,
	227, 3048,
	228, 3048,
	229, 3048,
	230, 3048,
	231, 3048,
	232, 3048,
	233, 3048,
	234, 3048,
	235, 3048,
	236, 3048,
	237, 3048,
	238, 3048,
	239, 3048,
	240, 3048,
	241, 3048,
	242, 3048,
	243, 3048,
	244, 3048,
	246, 3048,
	247, 3048,
	249, 3048,
	250, 3048,
	251, 3048,
	253, 3048,
	254, 3048,
	255, 3048,
	256, 3048,
	257, 3048,
	258, 3048,
	259, 3048,
	261, 3048,
	263, 3048,
	264, 3048,
	265, 3048,
	266, 3048,
	267, 3048,
	268, 3048,
	269, 3048,
	270, 3048,
	271, 3048,
	272, 3048,
	273, 3048,
	275, 3048,
	276, 3048,
	277, 3048,
	278, 3048,
	279, 3048,
	280, 3048,
	281, 3048,
	282, 3048,
	284, 3048,
	285, 3048,
	286, 3048,
	288, 3048,
	289, 3048,
	290, 3048,
	291, 3048,
	292, 3048,
	293, 3048,
	294, 3048,
	296, 3048,
	297, 3048,
	298, 3048,
	299, 3048,
	300, 3048,
	301, 3048,
	302, 3048,
	305, 3048,
	306, 3048,
	307, 3048,
	308, 3048,
	309, 3048,
	310, 3048,
	311, 3048,
	312, 3048,
	313, 3048,
	314, 3048,
	315, 3048,
	316, 3048,
	317, 3048,
	318, 3048,
	319, 3048,
	320, 3048,
	321, 3048,
	322, 3048,
	323, 3048,
	324, 3048,
	325, 3048,
	326, 3048,
	327, 3048,
	328, 3048,
	329, 3048,
	330, 3048,
	331, 3048,
	332, 3048,
	334, 3048,
	335, 3048,
	336, 3048,
	337, 3048,
	338, 3048,
	339, 3048,
	340, 3048,
	341, 3048,
	342, 3048,
	343, 3048,
	344, 3048,
	345, 3048,
	346, 3048,
	347, 3048,
	348, 3048,
	349, 3048,
	350, 3048,
	351, 3048,
	352, 3048,
	354, 3048,
	355, 3048,
	358, 3048,
	359, 3048,
	360, 3048,
	361, 3048,
	362, 3048,
	364, 3048,
	365, 3048,
	366, 3048,
	367, 3048,
	368, 3048,
	371, 3048,
	373, 3048,
	376, 3048,
	377, 3048,
	378, 3048,
	379, 3048,
	381, 3048,
	382, 3048,
	383, 3048,
	385, 3048,
	387, 3048,
	388, 3048,
	389, 3048,
	390, 3048,
	391, 3048,
	392, 3048,
	393, 3048,
	394, 3048,
	395, 3048,
	396, 3048,
	397, 3048,
	398, 3048,
	399, 3048,
	400, 3048,
	402, 3048,
	403, 3048,
	404, 3048,
	405, 3048,
	406, 3048,
	407, 3048,
	408, 3048,
	409, 3048,
	410, 3048,
	411, 3048,
	412, 3048,
	413, 3048,
	414, 3048,
	415, 3048,
	416, 3048,
	418, 3048,
	419, 3048,
	420, 3048,
	422, 3048,
	423, 3048,
	424, 3048,
	425, 3048,
	426, 3048,
	427, 3048,
	428, 3048,
	429, 3048,
	430, 3048,
	431, 3048,
	432, 3048,
	433, 3048,
	434, 3048,
	435, 3048,
	437, 3048,
	439, 3048,
	440, 3048,
	441, 3048,
	447, 3048,
	448, 3048,
	449, 3048,
	450, 3048,
	451, 3048,
	452, 3048,
	453, 3048,
	454, 3048,
	455, 3048,
	456, 3048,
	457, 3048,
	458, 3048,
	459, 3048,
	460, 3048,
	461, 3048,
	463, 3048,
	464, 3048,
	465, 3048,
	466, 3048,
	467, 3048,
	468, 3048,
	469, 3048,
	470, 3048,
	471, 3048,
	472, 3048,
	473, 3048,
	474, 3048,
	475, 3048,
	476, 3048,
	477, 3048,
	478, 3048,
	479, 3048,
	480, 3048,
	481, 3048,
	482, 3048,
	483, 3048,
	484, 3048,
	485, 3048,
	486, 3048,
	487, 3048,
	488, 3048,
	489, 3048,
	490, 3048,
	492, 3048,
	493, 3048,
	494, 3048,
	495, 3048,
	496, 3048,
	497, 3048,
	499, 3048,
	500, 3048,
	501, 3048,
	502, 3048,
	503, 3048,
	504, 3048,
	505, 3048,
	506, 3048,
	507, 3048,
	508, 3048,
	509, 3048,
	510, 3048,
	511, 3048,
	512, 3048,
	513, 3048,
	514, 3048,
	516, 3048,
	518, 3048,
	519, 3048,
	520, 3048,
	521, 3048,
	522, 3048,
	523, 3048,
	524, 3048,
	525, 3048,
	526, 3048,
	527, 3048,
	528, 3048,
	529, 3048,
	530, 3048,
	531, 3048,
	532, 3048,
	533, 3048,
	534, 3048,
	535, 3048,
	536, 3048,
	537, 3048,
	538, 3048,
	540, 3048,
	541, 3048,
	542, 3048,
	543, 3048,
	544, 3048,
	546, 3048,
	547, 3048,
	548, 3048,
	549, 3048,
	550, 3048,
	551, 3048,
	553, 3048,
	554, 3048,
	556, 3048,
	557, 3048,
	558, 3048,
	559, 3048,
	560, 3048,
	562, 3048,
	564, 3048,
	565, 3048,
	566, 3048,
	567, 3048,
	568, 3048,
	569, 3048,
	570, 3048,
	571, 3048,
	573, 3048,
	574, 3048,
	575, 3048,
	576, 3048,
	577, 3048,
	578, 3048,
	579, 3048,
	582, 3048,
	583, 3048,
	584, 3048,
	585, 3048,
	586, 3048,
	587, 3048,
	588, 3048,
	589, 3048,
	591, 3048,
	594, 3048,
	595, 3048,
	596, 3048,
	597, 3048,
	598, 3048,
	599, 3048,
	601, 3048,
	602, 3048,
	603, 3048,
	604, 3048,
	605, 3048,
	606, 3048,
	607, 3048,
	608, 3048,
	609, 3048,
	614, 3048,
	615, 3048,
	616, 3048,
	617, 3048,
	618, 3048,
	619, 3048,
	620, 3048,
	622, 3048,
	632, 3048,
	633, 3048,
	634, 3048,
	635, 3048,
	636, 3048,
	637, 3048,
	639, 3048,
	640, 3048,
	641, 3048,
	642, 3048,
	643, 3048,
	644, 3048,
	645, 3048,
	646, 3048,
	647, 3048,
	650, 3048,
	653, 3048,
	654, 3048,
	656, 3048,
	657, 3048,
	-2, 0,
	-1, 1795,
	201, 2897,
	561, 2897,
	634, 2897,
	654, 2897,
	-2, 0,
	-1, 1843,
	201, 1014,
	-2, 2888,
	-1, 1844,
	201, 1015,
	-2, 2673,
	-1, 1845,
	201, 1016,
	-2, 2840,
	-1, 1850,
	424, 1066,
	497, 1066,
	544, 1066,
	566, 1066,
	-2, 0,
	-1, 1861,
	1, 1603,
	239, 1603,
	651, 1603,
	653, 1603,
	655, 1603,
	658, 1603,
	-2, 0,
	-1, 1878,
	1, 1061,
	651, 1061,
	653, 1061,
	655, 1061,
	658, 1061,
	-2, 0,
	-1, 1879,
	1, 1105,
	651, 1105,
	653, 1105,
	655, 1105,
	658, 1105,
	-2, 0,
	-1, 1880,
	1, 1113,
	651, 1113,
	653, 1113,
	655, 1113,
	658, 1113,
	-2, 0,
	-1, 1883,
	1, 1070,
	651, 1070,
	653, 1070,
	655, 1070,
	658, 1070,
	-2, 0,
	-1, 1885,
	1, 1076,
	651, 1076,
	653, 1076,
	655, 1076,
	658, 1076,
	-2, 0,
	-1, 1888,
	1, 1072,
	651, 1072,
	653, 1072,
	655, 1072,
	658, 1072,
	-2, 0,
	-1, 1893,
	1, 1086,
	651, 1086,
	653, 1086,
	655, 1086,
	658, 1086,
	-2, 0,
	-1, 1927,
	1, 2878,
	651, 2878,
	653, 2878,
	654, 2878,
	655, 2878,
	658, 2878,
	-2, 0,
	-1, 1931,
	1, 1164,
	651, 1164,
	653, 1164,
	655, 1164,
	658, 1164,
	-2, 0,
	-1, 1951,
	181, 1818,
	194, 1818,
	295, 1818,
	369, 1818,
	-2, 1756,
	-1, 2053,
	160, 1777,
	181, 1777,
	194, 1777,
	260, 1777,
	295, 1777,
	369, 1777,
	380, 1777,
	580, 1777,
	-2, 2228,
	-1, 2114,
	653, 2403,
	-2, 0,
	-1, 2150,
	160, 1777,
	181, 1777,
	194, 1777,
	260, 1777,
	295, 1777,
	369, 1777,
	380, 1777,
	580, 1777,
	-2, 1910,
	-1, 2206,
	652, 2051,
	-2, 2039,
	-1, 2238,
	201, 2894,
	654, 2894,
	657, 2894,
	-2, 0,
	-1, 2282,
	1, 822,
	655, 822,
	658, 822,
	-2, 1664,
	-1, 2459,
	239, 284,
	-2, 2555,
	-1, 2460,
	239, 285,
	-2, 343,
	-1, 2574,
	1, 1063,
	651, 1063,
	653, 1063,
	655, 1063,
	658, 1063,
	-2, 0,
	-1, 2575,
	1, 1107,
	651, 1107,
	653, 1107,
	655, 1107,
	658, 1107,
	-2, 0,
	-1, 2576,
	1, 1115,
	651, 1115,
	653, 1115,
	655, 1115,
	658, 1115,
	-2, 0,
	-1, 2577,
	1, 1166,
	651, 1166,
	653, 1166,
	655, 1166,
	658, 1166,
	-2, 0,
	-1, 2618,
	1, 1088,
	651, 1088,
	653, 1088,
	655, 1088,
	658, 1088,
	-2, 0,
	-1, 2640,
	1, 1149,
	651, 1149,
	653, 1149,
	655, 1149,
	658, 1149,
	-2, 0,
	-1, 2688,
	474, 1845,
	475, 1845,
	-2, 2084,
	-1, 2721,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2104,
	-1, 2722,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2105,
	-1, 2723,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2106,
	-1, 2724,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2107,
	-1, 2725,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2108,
	-1, 2726,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2109,
	-1, 2727,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2110,
	-1, 2728,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2111,
	-1, 2740,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2123,
	-1, 2741,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2124,
	-1, 2742,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2125,
	-1, 2746,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2132,
	-1, 2752,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2136,
	-1, 2754,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2144,
	-1, 2755,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2145,
	-1, 2756,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2146,
	-1, 2757,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2147,
	-1, 2931,
	5, 2559,
	201, 2414,
	652, 2556,
	-2, 2547,
	-1, 2932,
	201, 2415,
	-2, 2979,
	-1, 2933,
	201, 2416,
	-2, 2767,
	-1, 2934,
	201, 2417,
	-2, 2637,
	-1, 2935,
	201, 2418,
	-2, 2701,
	-1, 2936,
	201, 2419,
	-2, 2752,
	-1, 2937,
	201, 2420,
	-2, 2891,
	-1, 2938,
	201, 2421,
	-2, 2211,
	-1, 3030,
	1, 1911,
	2, 1911,
	113, 1911,
	160, 1911,
	181, 1911,
	194, 1911,
	202, 1911,
	220, 1911,
	223, 1911,
	253, 1911,
	260, 1911,
	272, 1911,
	291, 1911,
	295, 1911,
	335, 1911,
	369, 1911,
	374, 1911,
	380, 1911,
	462, 1911,
	468, 1911,
	580, 1911,
	592, 1911,
	611, 1911,
	612, 1911,
	613, 1911,
	623, 1911,
	651, 1911,
	653, 1911,
	655, 1911,
	657, 1911,
	658, 1911,
	-2, 1910,
	-1, 3043,
	652, 2528,
	-2, 2542,
	-1, 3045,
	1, 360,
	611, 360,
	658, 360,
	-2, 1804,
	-1, 3076,
	652, 2050,
	-2, 2040,
	-1, 3295,
	1, 1506,
	456, 1460,
	499, 1460,
	626, 1460,
	631, 1460,
	651, 1506,
	653, 1506,
	655, 1506,
	658, 1506,
	-2, 1804,
	-1, 3478,
	375, 1848,
	-2, 3037,
	-1, 3479,
	375, 1849,
	-2, 2875,
	-1, 3483,
	474, 2482,
	475, 2482,
	-2, 2209,
	-1, 3484,
	474, 2486,
	475, 2486,
	-2, 2210,
	-1, 3485,
	474, 2483,
	475, 2483,
	-2, 2209,
	-1, 3486,
	474, 2487,
	475, 2487,
	-2, 2210,
	-1, 3500,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2134,
	-1, 3501,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2138,
	-1, 3507,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2140,
	-1, 3738,
	1, 817,
	651, 817,
	653, 817,
	655, 817,
	658, 817,
	-2, 1664,
	-1, 3922,
	38, 2559,
	134, 2559,
	634, 2559,
	650, 2559,
	653, 2559,
	654, 2559,
	657, 2559,
	-2, 2556,
	-1, 3923,
	38, 2560,
	134, 2560,
	634, 2560,
	650, 2560,
	653, 2560,
	654, 2560,
	657, 2560,
	-2, 2557,
	-1, 3954,
	46, 2519,
	-2, 1240,
	-1, 3959,
	1, 1506,
	651, 1506,
	653, 1506,
	655, 1506,
	658, 1506,
	-2, 1804,
	-1, 4069,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2142,
	-1, 4076,
	266, 0,
	268, 0,
	358, 0,
	-2, 2161,
	-1, 4144,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2190,
	-1, 4145,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2191,
	-1, 4146,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2192,
	-1, 4150,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2196,
	-1, 4151,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2197,
	-1, 4152,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2198,
	-1, 4200,
	652, 2529,
	-2, 2543,
	-1, 4429,
	654, 3155,
	-2, 1730,
	-1, 4488,
	266, 0,
	268, 0,
	358, 0,
	-2, 2162,
	-1, 4491,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2165,
	-1, 4492,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2167,
	-1, 4616,
	654, 2544,
	-2, 1541,
	-1, 4783,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2166,
	-1, 4784,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2168,
	-1, 4795,
	266, 0,
	-2, 2201,
	-1, 4992,
	266, 0,
	-2, 2202,
	-1, 5238,
	54, 0,
	235, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 3000,
}

const sqlPrivate = 57344

const sqlLast = 153867

var sqlAct = [...]int{
	299, 5379, 5153, 5461, 1464, 3638, 3249, 3369, 4857, 5317,
	5043, 5301, 5152, 1004, 6, 5237, 5285, 5035, 5250, 5224,
	1201, 195, 3941, 5088, 5393, 1005, 10, 4, 5106, 2456,
	4471, 5167, 3940, 5207, 5251, 5164, 5143, 4401, 5184, 5252,
	5326, 4924, 4612, 2342, 4960, 1661, 4937, 3219, 5248, 1520,
	4109, 1250, 3705, 4996, 4907, 4741, 1374, 4730, 4699, 5236,
	4736, 4061, 2302, 1385, 4667, 4862, 3765, 2698, 4804, 2156,
	4771, 4413, 4421, 4943, 2313, 3338, 2548, 784, 2546, 2497,
	5073, 3915, 1454, 4326, 2963, 4613, 930, 4593, 1960, 3149,
	2769, 3971, 4746, 4384, 3492, 3829, 3925, 2193, 1364, 3768,
	4357, 2264, 3977, 4359, 2708, 2523, 3389, 1193, 3771, 3900,
	2351, 4004, 4800, 930, 1541, 4006, 3326, 3353, 3358, 1456,
	3752, 3929, 3930, 3911, 2699, 195, 3932, 3893, 3355, 3757,
	3754, 3753, 2510, 3892, 1634, 1249, 3684, 1461, 796, 3057,
	1692, 2544, 4203, 3661, 4470, 3691, 3621, 3653, 3420, 1008,
	3384, 3642, 1811, 3370, 2125, 3644, 2443, 3913, 2445, 3914,
	2380, 3302, 5302, 2432, 3250, 3792, 3234, 2100, 2363, 927,
	4527, 4170, 4997, 2031, 3023, 2061, 999, 858, 1459, 2494,
	2847, 2705, 2782, 3476, 3022, 2251, 3383, 2444, 2430, 3620,
	3025, 1750, 925, 854, 1447, 2422, 3264, 2403, 2410, 1365,
	1254, 1858, 2334, 3339, 293, 3003, 2330, 292, 1535, 2262,
	1259, 2960, 2838, 3020, 1503, 2766, 2126, 2309, 2312, 2145,
	1522, 1433, 2687, 2670, 831, 1663, 2668, 1788, 3058, 3363,
	1753, 1746, 2493, 931, 3173, 3174, 2425, 1079, 2849, 933,
	3134, 5107, 1490, 3933, 2142, 1403, 771, 2841, 1368, 1518,
	794, 2135, 1347, 2095, 3012, 2973, 2045, 1222, 2819, 2927,
	1382, 205, 121, 1444, 1961, 1962, 2893, 206, 2669, 839,
	1893, 1878, 2453, 874, 2671, 850, 979, 125, 111, 1779,
	2434, 1786, 1025, 1684, 1204, 1235, 5318, 1642, 789, 50,
	937, 5380, 49, 940, 47, 38, 36, 34, 1345, 1967,
	3530, 1534, 1370, 1942, 785, 814, 798, 1698, 1100, 920,
	3524, 1380, 4184, 1515, 5472, 4185, 3640, 937, 3002, 5246,
	940, 5464, 5453, 980, 5451, 3871, 5450, 3706, 3002, 5415,
	3002, 2253, 1823, 4861, 2253, 4830, 5413, 4827, 3591, 3592,
	4861, 3609, 3610, 3611, 4826, 2253, 1197, 867, 870, 2253,
	2253, 1691, 173, 4823, 5347, 5303, 5276, 2253, 2465, 5304,
	3002, 84, 3986, 52, 51, 5274, 5271, 1499, 5268, 3002,
	5272, 2274, 5269, 5234, 5233, 5232, 4822, 2465, 2465, 3394,
	85, 1884, 5222, 5220, 78, 5211, 4861, 4861, 5210, 4861,
	5162, 5128, 4861, 5121, 4861, 3067, 5120, 3002, 90, 1257,
	3002, 2545, 5111, 5087, 5084, 1256, 2465, 2465, 4861, 73,
	5065, 4723, 1499, 4994, 4684, 1362, 54, 3067, 171, 3606,
	4974, 4939, 4880, 4879, 4446, 4253, 2465, 2465, 4868, 4867,
	4860, 4811, 2465, 4861, 4861, 2465, 3701, 53, 3987, 4561,
	98, 1186, 1348, 1348, 3723, 3719, 4174, 1977, 1978, 2271,
	2010, 2011, 2012, 2021, 2022, 2023, 1813, 1177, 3591, 3592,
	4785, 4756, 4724, 1176, 3067, 3394, 3871, 2498, 56, 74,
	1198, 2008, 2271, 1197, 4662, 3090, 4640, 57, 3002, 1980,
	3002, 4490, 63, 2274, 4437, 3067, 1747, 79, 3999, 4431,
	2027, 1400, 4381, 3999, 4284, 55, 4382, 120, 4285, 2844,
	3871, 1804, 4252, 104, 117, 4195, 4253, 1192, 2033, 4196,
	4193, 3331, 75, 2465, 4194, 104, 4177, 1979, 4093, 3597,
	3002, 4089, 2465, 3998, 1700, 3002, 3637, 3999, 1999, 2274,
	3002, 3632, 2271, 3148, 3631, 3002, 3582, 1996, 3002, 3606,
	3583, 3580, 3572, 3570, 3539, 3581, 3573, 3002, 58, 3541,
	3540, 1349, 3393, 3002, 3380, 3379, 3394, 3113, 2533, 2533,
	3066, 3002, 3062, 3055, 3067, 3491, 3614, 3002, 3002, 105,
	3047, 2274, 1712, 1700, 2465, 3001, 2975, 2532, 1351, 3002,
	1352, 2533, 1410, 5129, 4998, 4989, 4977, 1401, 257, 3394,
	4174, 2974, 4734, 3613, 4684, 2271, 4641, 4446, 2845, 4383,
	4371, 3226, 2356, 3133, 2288, 3124, 2274, 2252, 2268, 3331,
	1706, 2463, 3244, 2121, 1401, 1687, 4302, 4064, 2002, 2003,
	2004, 2005, 1860, 3002, 4033, 2143, 2415, 3988, 1985, 3039,
	3038, 3037, 3036, 1699, 3035, 1353, 3607, 1977, 1978, 3597,
	1350, 1185, 259, 1184, 1183, 257, 1182, 3989, 5261, 1181,
	76, 1180, 1179, 1175, 1174, 2610, 1173, 1172, 1171, 1377,
	1170, 1169, 1168, 3446, 4545, 1376, 3591, 3592, 1167, 1980,
	1166, 2018, 1165, 1164, 1163, 2028, 1162, 1161, 1160, 1159,
	1158, 1157, 2007, 2009, 1156, 2846, 3921, 2843, 1977, 1978,
	1143, 1077, 1076, 1700, 258, 1075, 1827, 1074, 1073, 259,
	1072, 1071, 2024, 1070, 2025, 1069, 1068, 1979, 1067, 1066,
	251, 1994, 1995, 1065, 1808, 1064, 1063, 2030, 1062, 252,
	1980, 2254, 1061, 1060, 2254, 1059, 1058, 1057, 109, 1056,
	2016, 1055, 1054, 1053, 1052, 2254, 1051, 1050, 1049, 2254,
	2254, 1048, 1047, 1000, 1046, 2000, 59, 2254, 4502, 207,
	3529, 258, 3348, 1045, 1044, 1043, 3607, 1042, 1979, 1041,
	1030, 1029, 1028, 62, 1023, 1022, 1015, 1014, 65, 1013,
	1472, 84, 998, 1003, 1002, 2271, 997, 956, 77, 955,
	954, 953, 944, 943, 942, 941, 64, 203, 902, 112,
	85, 2271, 116, 2271, 2026, 901, 865, 864, 60, 863,
	2271, 1711, 172, 3608, 1200, 845, 207, 287, 90, 4228,
	61, 286, 285, 284, 283, 282, 281, 280, 1985, 279,
	278, 257, 257, 277, 276, 1700, 2030, 3366, 275, 274,
	68, 273, 1466, 1259, 257, 272, 164, 2030, 271, 1705,
	270, 269, 268, 267, 266, 265, 264, 3597, 164, 263,
	98, 262, 261, 170, 3591, 3592, 260, 3141, 2848, 4189,
	1259, 1259, 1259, 4037, 1402, 4000, 3687, 2974, 1691, 1985,
	257, 4748, 3552, 3535, 3526, 259, 259, 3423, 1412, 3312,
	3071, 3331, 3044, 3029, 3591, 3592, 2006, 2660, 259, 2315,
	2876, 3141, 1006, 2874, 3986, 2146, 3635, 4852, 2860, 2858,
	1401, 2271, 2103, 2273, 169, 55, 1544, 120, 2169, 2102,
	1259, 2072, 2001, 104, 117, 1943, 1259, 1666, 1259, 2274,
	209, 1466, 3100, 3608, 259, 1675, 1974, 258, 258, 1694,
	2070, 1511, 1494, 2252, 1507, 1508, 1509, 2271, 2268, 2106,
	258, 3636, 2019, 251, 251, 2663, 1384, 1259, 5260, 1259,
	2063, 1259, 252, 252, 5257, 5235, 251, 204, 1666, 3603,
	3604, 3605, 208, 5219, 3607, 252, 3602, 3600, 3601, 3593,
	3594, 3595, 3596, 3598, 3599, 1494, 258, 2103, 2032, 105,
	4394, 1466, 207, 207, 2102, 1755, 3, 2842, 5092, 1886,
	257, 4986, 251, 4799, 1652, 207, 5001, 4980, 4978, 4754,
	4733, 252, 1666, 4569, 4525, 1689, 4524, 4518, 4517, 1666,
	4516, 4509, 1647, 4508, 2101, 2063, 2030, 4506, 1259, 4501,
	1259, 3080, 3350, 195, 195, 1666, 4498, 4497, 2513, 4380,
	4370, 207, 2974, 4232, 1259, 3597, 1259, 4231, 1401, 4230,
	4290, 4199, 3591, 3592, 259, 2030, 1486, 1438, 1441, 4165,
	4164, 4163, 4085, 4080, 3682, 3628, 2017, 3619, 1451, 3590,
	3587, 257, 1488, 3586, 3584, 3597, 1760, 1763, 1991, 1992,
	1998, 2020, 1997, 1993, 3139, 1990, 1988, 1989, 1981, 1982,
	1983, 1984, 1986, 1987, 3579, 1666, 3602, 3600, 3601, 3593,
	3594, 3595, 3596, 3598, 3599, 1782, 258, 4750, 1673, 257,
	1977, 1978, 3578, 1639, 1537, 1259, 1631, 1636, 1259, 3577,
	3574, 3571, 251, 3551, 1233, 259, 3534, 3527, 3525, 1542,
	3381, 252, 257, 3030, 2008, 1480, 2064, 2831, 2062, 1525,
	1526, 3608, 1980, 1974, 1361, 1973, 5467, 937, 109, 937,
	940, 2472, 940, 5401, 257, 2470, 5400, 2065, 5316, 1514,
	5314, 207, 3607, 259, 1386, 4111, 5154, 1748, 1780, 4395,
	5071, 2033, 4300, 5055, 5051, 5050, 1686, 258, 1686, 5049,
	1979, 5029, 1685, 5028, 1685, 1669, 259, 3591, 3592, 1791,
	1793, 1766, 3607, 251, 257, 257, 5026, 1828, 5000, 4999,
	4972, 1517, 252, 2778, 2772, 1527, 1528, 203, 259, 112,
	4958, 4955, 116, 257, 4954, 258, 4935, 3138, 4934, 4876,
	1259, 1259, 1259, 1259, 1259, 1259, 1259, 1259, 1688, 4847,
	4797, 251, 207, 3597, 1977, 1978, 1494, 1789, 258, 4780,
	252, 4779, 257, 2030, 4719, 4715, 4712, 3633, 259, 259,
	1007, 3138, 4685, 1259, 251, 4544, 164, 3349, 2008, 1259,
	258, 4523, 4447, 252, 4288, 4287, 1980, 259, 4268, 257,
	207, 4395, 4267, 2030, 1198, 4265, 251, 3138, 1981, 1982,
	1983, 1984, 1986, 1987, 4180, 252, 4168, 4075, 4643, 2050,
	4001, 1985, 3963, 207, 1952, 2033, 259, 3953, 3851, 3803,
	258, 258, 3770, 257, 1979, 3600, 3601, 3593, 3594, 3595,
	3596, 3598, 3599, 3713, 3556, 207, 251, 251, 3555, 258,
	2052, 1902, 3711, 259, 169, 252, 252, 3550, 1833, 3608,
	3516, 1983, 1984, 1986, 1987, 251, 1803, 3591, 3592, 5003,
	209, 3325, 3323, 3166, 252, 2007, 2009, 2109, 258, 2108,
	2107, 2104, 1822, 2096, 1948, 3365, 207, 259, 2094, 3608,
	3078, 3077, 3041, 3034, 251, 1259, 1259, 1259, 3597, 3000,
	2856, 1259, 2049, 252, 207, 258, 2168, 204, 1382, 2124,
	1382, 2118, 208, 2117, 1378, 4749, 2116, 2115, 2114, 2113,
	2112, 251, 2111, 2110, 2091, 1544, 2090, 2089, 2088, 2087,
	252, 2086, 195, 1001, 2085, 1851, 2084, 1259, 2000, 258,
	930, 1466, 2083, 2082, 2081, 1985, 2080, 2079, 2211, 930,
	1887, 1466, 2123, 2078, 1466, 251, 2077, 1975, 2076, 1380,
	207, 1380, 2065, 2051, 252, 1953, 2048, 2043, 1479, 1407,
	1396, 5002, 4722, 4565, 4494, 4227, 4192, 4183, 3538, 3032,
	1785, 1944, 2177, 4824, 3069, 2132, 4567, 4226, 2064, 1949,
	3709, 2046, 3992, 2164, 207, 1506, 3806, 3591, 3592, 2007,
	2009, 1521, 1957, 1177, 1521, 1977, 1978, 3220, 1956, 1176,
	1521, 2308, 5392, 1521, 1466, 4372, 2105, 1951, 5059, 2030,
	1259, 2184, 3602, 3600, 3601, 3593, 3594, 3595, 3596, 3598,
	3599, 1504, 2179, 2178, 1499, 1970, 1971, 1980, 5052, 4753,
	4688, 4687, 4686, 4642, 1259, 1198, 4547, 1521, 3597, 4454,
	2129, 2130, 1544, 3679, 3601, 3593, 3594, 3595, 3596, 3598,
	3599, 1521, 2000, 4453, 4452, 2153, 4451, 2172, 1505, 2393,
	5253, 1785, 4450, 4449, 4448, 1979, 4254, 1348, 2189, 4187,
	2345, 2875, 1519, 4186, 2873, 4003, 4002, 4851, 2240, 2859,
	2857, 2243, 2306, 2097, 2098, 3875, 2030, 3873, 3872, 5343,
	5341, 4944, 1494, 3192, 2280, 2001, 4398, 2174, 5249, 2185,
	2146, 4062, 3262, 2103, 3841, 4317, 1499, 2071, 2234, 3576,
	2102, 1946, 2173, 3575, 3498, 3177, 1502, 4283, 1154, 2294,
	2154, 2176, 2300, 2299, 3772, 2074, 1521, 2308, 2170, 3943,
	1903, 3942, 4388, 2030, 937, 5021, 1859, 940, 1850, 5022,
	2144, 2276, 4801, 937, 2498, 4248, 940, 4249, 2151, 1500,
	4981, 4979, 1499, 4938, 2258, 3607, 5022, 2260, 5282, 4731,
	2086, 2032, 1198, 2265, 2086, 3390, 3175, 2267, 3901, 1155,
	4674, 2514, 2270, 1860, 3544, 2122, 2447, 4369, 4323, 4314,
	2412, 4293, 4029, 3736, 2631, 2279, 2446, 2565, 2542, 2256,
	2478, 2163, 3640, 4113, 2162, 2839, 2161, 2159, 2158, 2157,
	2148, 4871, 5258, 3076, 4843, 3595, 3596, 3598, 3599, 2119,
	2099, 3960, 2506, 1666, 1666, 1759, 4627, 1680, 1475, 2001,
	2190, 1437, 2282, 5273, 4624, 1544, 5270, 4655, 3241, 2392,
	4653, 3982, 2402, 3238, 2391, 3236, 2030, 4259, 1837, 5044,
	4737, 3222, 2399, 5161, 3775, 1784, 4278, 3362, 1816, 3422,
	3304, 3884, 2303, 5344, 2356, 2316, 2426, 5345, 1990, 1988,
	1989, 1981, 1982, 1983, 1984, 1986, 1987, 4874, 4870, 2278,
	4849, 1976, 4056, 1203, 3151, 3740, 5259, 4336, 1666, 1496,
	2388, 4902, 2397, 5384, 2640, 2032, 4629, 2637, 2407, 1729,
	1722, 1900, 3114, 993, 1152, 1682, 3137, 1377, 1150, 1377,
	1148, 5463, 5060, 1376, 3742, 1376, 2624, 2402, 2402, 900,
	3137, 4895, 3135, 4882, 1360, 4677, 897, 4676, 2301, 2320,
	2622, 2321, 3608, 1666, 4334, 1666, 3135, 1666, 2354, 1901,
	4333, 2328, 2329, 4325, 4308, 4307, 1784, 4305, 3593, 3594,
	3595, 3596, 3598, 3599, 5323, 1666, 1666, 2638, 4304, 2678,
	4292, 4251, 2678, 4335, 1202, 4250, 3890, 2350, 4262, 1666,
	1139, 2295, 2322, 2323, 3889, 3843, 1501, 4608, 2362, 2326,
	2327, 1666, 3700, 3549, 1666, 1666, 1666, 2639, 3548, 2305,
	3547, 1506, 2427, 1988, 1989, 1981, 1982, 1983, 1984, 1986,
	1987, 3546, 1244, 122, 3502, 3154, 2449, 2450, 930, 2889,
	45, 1506, 1782, 1899, 2525, 4601, 2525, 2537, 2400, 994,
	2451, 2385, 2676, 2526, 3260, 2676, 3259, 2502, 3243, 2304,
	1259, 3232, 937, 3224, 3213, 940, 3212, 3204, 3203, 1497,
	1835, 2283, 3805, 3202, 3182, 3181, 3142, 3056, 2466, 1498,
	837, 837, 2507, 2753, 2191, 4872, 4623, 1489, 4844, 1950,
	4644, 1686, 2566, 2888, 1505, 2520, 2384, 1685, 1259, 2398,
	2710, 2381, 4602, 4975, 4625, 2406, 991, 2120, 990, 3359,
	2844, 5387, 1733, 1196, 1505, 4575, 4030, 2436, 2435, 2540,
	2436, 2435, 1772, 2439, 1771, 3710, 2496, 2401, 3593, 3594,
	3595, 3596, 3598, 3599, 1259, 3839, 1259, 122, 2550, 3772,
	1261, 2464, 2528, 1259, 2674, 4373, 1259, 4778, 2211, 2211,
	1544, 5385, 1259, 1259, 1259, 1259, 1259, 1259, 1259, 1259,
	1259, 1259, 1259, 1259, 1259, 1259, 1259, 1259, 1259, 1259,
	1259, 1259, 1259, 1259, 1259, 1259, 1259, 1259, 1259, 1259,
	1259, 1259, 1259, 1259, 1259, 1259, 1259, 1259, 1789, 1259,
	1789, 1259, 1259, 1259, 1259, 2570, 2557, 2530, 2517, 2481,
	2447, 2498, 2401, 2401, 1724, 2509, 1423, 2595, 1500, 2845,
	1145, 2652, 5324, 1195, 3085, 5388, 2677, 1259, 3121, 2677,
	2680, 1259, 1259, 2522, 1500, 1198, 3070, 1198, 1178, 1259,
	2658, 2582, 2556, 1259, 1683, 1259, 1259, 3060, 4912, 3198,
	1199, 1480, 937, 1544, 2534, 940, 2535, 2355, 3196, 1259,
	1259, 1259, 1259, 2561, 3153, 1259, 1259, 1259, 1259, 1259,
	1259, 1259, 1259, 3599, 2194, 1523, 1524, 3084, 1523, 1524,
	3179, 1987, 2839, 1499, 2310, 2311, 1941, 1523, 1524, 2352,
	2649, 1259, 1259, 1259, 1259, 1259, 1259, 1259, 1259, 1259,
	3061, 1259, 1366, 2574, 2395, 1259, 2846, 2675, 2843, 1741,
	2675, 1725, 2667, 2662, 2585, 2820, 2821, 1382, 5037, 2457,
	2462, 1523, 1524, 1882, 1544, 3840, 2348, 3211, 1852, 2820,
	2836, 4585, 1830, 1382, 4597, 1523, 1524, 1898, 2768, 836,
	836, 4598, 2651, 1197, 1882, 5390, 2618, 4626, 1496, 1259,
	1544, 5344, 4603, 1304, 894, 1770, 2884, 1769, 4621, 2768,
	3441, 2353, 2583, 2692, 1496, 3165, 2691, 2616, 1380, 1917,
	3397, 2704, 1466, 2709, 2703, 2930, 2930, 2944, 1945, 2820,
	2428, 1913, 2964, 2966, 1380, 2629, 3064, 996, 995, 2972,
	3046, 1860, 2349, 195, 3240, 4600, 2575, 1860, 2764, 3474,
	2664, 2666, 4584, 2784, 2672, 2679, 3207, 2665, 5255, 1177,
	2310, 2311, 1177, 1177, 4604, 2695, 3739, 1879, 2696, 2697,
	2835, 1919, 3489, 1466, 4289, 2579, 4923, 2134, 3152, 3239,
	2762, 3454, 3205, 3042, 3237, 1501, 3235, 2573, 3136, 2437,
	5419, 4042, 5386, 1881, 1848, 4275, 1478, 3117, 3164, 783,
	5039, 1501, 2164, 3952, 4777, 1466, 1466, 1831, 2440, 3108,
	838, 838, 2776, 3513, 1881, 2576, 2851, 1955, 2429, 2774,
	3119, 5396, 3009, 2527, 1754, 892, 778, 2563, 1836, 2848,
	4041, 2780, 2438, 3443, 5294, 1039, 1880, 3059, 2153, 2848,
	3017, 1198, 1348, 4102, 5012, 3511, 1544, 3087, 1497, 2382,
	4349, 1198, 3208, 2833, 2387, 1198, 4675, 898, 1498, 3063,
	4306, 898, 3120, 1147, 1497, 2886, 2138, 4913, 2623, 3031,
	2887, 3008, 898, 2890, 1498, 2891, 2892, 3128, 3206, 898,
	4911, 3103, 2621, 1752, 3118, 3823, 3083, 4909, 4303, 4236,
	4235, 1732, 3016, 1194, 3021, 2211, 1494, 3027, 3028, 4221,
	4220, 2939, 3457, 2955, 2970, 3082, 2926, 2461, 2968, 4599,
	3089, 5389, 4350, 3043, 3745, 2998, 2999, 2141, 3488, 3010,
	2356, 4273, 3106, 2105, 3014, 3015, 4034, 3178, 3896, 2389,
	4619, 2151, 3888, 2758, 3837, 3242, 2136, 2648, 3201, 3180,
	4908, 3111, 1895, 3109, 4099, 1198, 1544, 3824, 4622, 5256,
	2469, 2468, 4609, 4610, 5356, 2139, 2659, 2759, 2842, 5371,
	4348, 5370, 1666, 5125, 2760, 3814, 3072, 3054, 2765, 5421,
	4910, 2364, 3095, 937, 5331, 2383, 940, 4476, 3099, 1466,
	3105, 3481, 3482, 3295, 4608, 1422, 1914, 3079, 3143, 2650,
	4475, 3102, 3110, 4035, 3897, 3822, 5286, 2368, 3508, 2137,
	1259, 1259, 1686, 1259, 2097, 2098, 4693, 3094, 1685, 2581,
	3980, 3097, 1378, 3098, 1378, 3894, 2848, 3088, 3299, 1252,
	2356, 3127, 4601, 1390, 3112, 3140, 4594, 3815, 3104, 3509,
	1939, 4100, 1466, 3514, 3979, 3334, 3337, 2377, 3655, 1392,
	3199, 3450, 945, 3218, 4592, 1758, 3233, 2750, 3456, 2359,
	2416, 2253, 1499, 5138, 4596, 2423, 4835, 2365, 2442, 3125,
	3115, 3184, 893, 5254, 1666, 3836, 1377, 1387, 1499, 952,
	1031, 5226, 1376, 5227, 3759, 3813, 1666, 3169, 1666, 4602,
	3300, 3453, 1377, 195, 1666, 5045, 3835, 2413, 1376, 3832,
	3221, 3183, 5394, 5038, 2354, 1666, 1666, 1032, 3979, 2378,
	3253, 3787, 3388, 1754, 3346, 3200, 4620, 3156, 3159, 3146,
	3210, 2360, 5067, 1146, 1393, 3214, 2138, 1130, 895, 3387,
	2441, 1466, 891, 1466, 3254, 4595, 3129, 3130, 3298, 3307,
	3131, 3132, 2140, 2335, 3309, 3261, 1915, 3741, 2336, 3793,
	3296, 3297, 1190, 1394, 3854, 1259, 1911, 2376, 3190, 3191,
	3193, 3194, 3195, 3197, 4709, 835, 1861, 1681, 3209, 2358,
	1405, 3216, 3786, 3329, 3223, 3400, 3401, 2141, 5123, 3341,
	5309, 3230, 2396, 2761, 2369, 2092, 2417, 3408, 3409, 3410,
	5310, 3137, 5330, 2763, 3707, 3504, 3011, 2617, 1391, 3247,
	3248, 3246, 3879, 2394, 2706, 2707, 3795, 3157, 937, 3455,
	779, 940, 2413, 4555, 2848, 2139, 2767, 2335, 4472, 3305,
	4556, 5395, 2336, 2379, 1259, 3418, 5124, 4773, 3382, 2346,
	1259, 1259, 3395, 4790, 2394, 1832, 122, 1686, 2748, 3402,
	3392, 3403, 2751, 3310, 1471, 1259, 3398, 5354, 3510, 3377,
	1131, 2396, 1916, 3426, 5172, 2370, 2371, 4656, 3512, 1040,
	3375, 5397, 5417, 804, 1912, 3330, 3654, 2042, 3424, 2337,
	3425, 2830, 2437, 3554, 3045, 3895, 3794, 3013, 4378, 4274,
	3345, 5422, 2366, 4554, 3026, 2390, 2578, 2341, 1259, 1259,
	2393, 3459, 1197, 3461, 1259, 4115, 3368, 2747, 2572, 1789,
	780, 3378, 1918, 5403, 1847, 1849, 1477, 1259, 1259, 3760,
	2775, 4597, 4680, 1259, 1259, 2438, 3376, 3417, 4598, 1259,
	946, 947, 3415, 3357, 4721, 4461, 4564, 1954, 2413, 4603,
	2367, 4222, 3432, 2386, 3434, 1411, 3436, 1409, 3431, 4477,
	3433, 4058, 3435, 2337, 3437, 3438, 1016, 3472, 1033, 1034,
	122, 3305, 122, 1866, 122, 781, 5089, 782, 1697, 5362,
	1704, 2341, 1710, 3430, 1259, 1259, 1259, 3447, 2338, 2343,
	1259, 2395, 4600, 1021, 4362, 5292, 4772, 4393, 5178, 3217,
	1259, 5105, 3505, 2355, 4360, 2409, 4957, 3462, 4679, 4678,
	3464, 4604, 2140, 4419, 3967, 3722, 3053, 1259, 1217, 2373,
	2492, 4710, 2131, 3469, 1199, 122, 122, 1408, 1136, 1135,
	1399, 3480, 5329, 4473, 770, 2408, 5287, 4903, 1965, 4521,
	2628, 122, 2694, 122, 2420, 2357, 2296, 4154, 3882, 1802,
	3471, 1807, 3470, 3883, 5427, 1388, 1964, 122, 3692, 122,
	5406, 2692, 2338, 2343, 2691, 1821, 3475, 1826, 5361, 3532,
	3533, 2254, 2404, 5293, 3536, 5308, 3490, 1132, 2339, 4869,
	2392, 4818, 4966, 3497, 2372, 2391, 5082, 2293, 3766, 3528,
	1964, 5019, 4362, 4364, 949, 948, 4420, 4329, 4309, 2335,
	4260, 4258, 4360, 1959, 2336, 3968, 2418, 2353, 3958, 1259,
	1259, 1259, 1259, 3762, 3347, 1389, 3340, 3327, 1259, 1259,
	1259, 2521, 2515, 1259, 2508, 122, 3503, 3799, 4363, 2749,
	2134, 3537, 2346, 1885, 2500, 1259, 1382, 1544, 2405, 2477,
	2476, 2684, 3257, 5074, 4098, 3158, 5090, 4774, 3186, 1726,
	1414, 844, 2339, 4169, 2419, 5144, 4599, 5075, 4059, 3141,
	4951, 1259, 3391, 1259, 3647, 3648, 950, 951, 2374, 2291,
	1963, 5108, 1382, 4244, 1964, 2630, 2289, 5297, 3004, 4422,
	1035, 1036, 3407, 4742, 3324, 4478, 1425, 1380, 4930, 3797,
	1544, 4364, 5076, 4928, 2344, 1198, 4846, 2562, 3778, 4609,
	4610, 2333, 1382, 3774, 1963, 1544, 2346, 3630, 3773, 3495,
	3543, 3185, 1133, 3473, 4182, 3652, 2292, 1466, 3007, 2138,
	3651, 3373, 2554, 1380, 1178, 2337, 4363, 4358, 2211, 1889,
	1888, 2543, 1544, 3385, 1017, 1018, 2474, 3798, 2042, 1883,
	4216, 1134, 1466, 2341, 1965, 3649, 3052, 2047, 3659, 3672,
	3051, 1466, 5363, 1380, 5295, 3724, 4155, 3050, 3685, 4522,
	3049, 3006, 5078, 2331, 3681, 2053, 3005, 4156, 2344, 2059,
	2141, 3048, 1745, 1259, 1764, 4368, 1195, 1778, 1965, 4479,
	1776, 5032, 1038, 5426, 2319, 1259, 5438, 5077, 1963, 2136,
	1765, 5405, 2685, 2433, 4700, 3162, 2345, 4389, 4266, 2519,
	1138, 3904, 4858, 1466, 5351, 4932, 5079, 3761, 2139, 2211,
	3686, 2332, 4833, 4255, 4831, 4361, 3421, 4854, 3303, 4031,
	1137, 4026, 3721, 3720, 2338, 2343, 1259, 3657, 3703, 3625,
	3626, 3627, 2345, 2340, 3702, 3396, 3187, 3188, 3308, 883,
	1747, 3306, 1466, 2547, 2446, 1867, 3811, 3737, 1840, 4841,
	3646, 3641, 2137, 1494, 3699, 3694, 3695, 3696, 3697, 3743,
	5091, 3658, 3730, 1466, 3690, 1466, 3670, 3826, 3678, 3828,
	3855, 4853, 3673, 3674, 4950, 3671, 3656, 884, 5150, 3717,
	4579, 5364, 4578, 5296, 4931, 1259, 1259, 4245, 5158, 2412,
	2147, 5141, 2150, 1544, 122, 4528, 2412, 5033, 4171, 2855,
	4842, 2177, 2160, 3675, 1466, 4223, 3881, 2340, 3865, 4821,
	3676, 1378, 3677, 4361, 2339, 4859, 3693, 3777, 3688, 1936,
	3782, 1466, 5180, 3784, 1938, 3877, 2644, 1378, 3763, 3842,
	5355, 1935, 5353, 1933, 1907, 1905, 5275, 1877, 1875, 1873,
	3726, 3808, 1871, 3728, 3729, 3712, 1019, 1020, 3732, 1869,
	3733, 1863, 3734, 5063, 1659, 1857, 1855, 3790, 1774, 5053,
	843, 4829, 4796, 3833, 4572, 4520, 1466, 1666, 2346, 1666,
	3810, 3731, 4367, 1544, 5151, 3812, 3714, 3715, 3727, 3716,
	930, 1666, 3880, 3738, 3923, 2140, 3622, 3870, 4256, 4074,
	4027, 3825, 4024, 5034, 3844, 1717, 3746, 3718, 3827, 2318,
	3585, 3515, 3328, 3231, 3225, 1466, 3176, 2431, 3081, 3959,
	2657, 2653, 2564, 2553, 2538, 2242, 2171, 2167, 1940, 1815,
	4915, 4577, 2620, 1382, 3623, 3747, 3663, 3975, 4053, 4052,
	2344, 4044, 3864, 1959, 3445, 1377, 3796, 1777, 2205, 3444,
	1775, 1376, 1037, 1666, 2587, 2455, 1797, 3405, 2673, 3876,
	3817, 1894, 3804, 2590, 2475, 1666, 2241, 1666, 2239, 3852,
	195, 195, 1812, 3821, 2075, 3957, 1829, 3973, 3838, 1344,
	3948, 1377, 2854, 3748, 1380, 5247, 3951, 1376, 4657, 4316,
	4315, 5080, 4661, 4639, 5140, 3847, 4740, 5081, 4666, 4652,
	4590, 3853, 3972, 4589, 5322, 3966, 3856, 4418, 4735, 5327,
	3866, 1377, 3818, 3898, 3874, 4408, 3819, 1376, 3820, 896,
	5231, 4332, 3886, 4311, 1544, 4281, 3210, 1544, 2646, 3920,
	3878, 3995, 1842, 1937, 4223, 2645, 4279, 4257, 3962, 3664,
	1934, 3984, 1932, 1906, 1904, 3969, 1876, 1874, 1872, 3956,
	3944, 1870, 3360, 3887, 3352, 3344, 3336, 4032, 1868, 3885,
	1862, 3321, 1259, 3320, 1856, 1854, 3301, 1773, 3101, 1259,
	1259, 3891, 4022, 1259, 1259, 1259, 3096, 1259, 3184, 2340,
	2473, 3949, 3906, 2471, 3976, 3954, 1259, 2211, 2448, 2414,
	2375, 2361, 3662, 3669, 937, 1259, 3688, 940, 3955, 899,
	1259, 2347, 2275, 2272, 4020, 2269, 1544, 2266, 2261, 2259,
	4025, 2255, 2246, 4095, 1968, 1259, 1208, 1357, 2183, 4023,
	5345, 2297, 3981, 1544, 2619, 3974, 3993, 3994, 3983, 4051,
	3668, 3990, 3493, 2211, 2211, 1259, 1259, 5031, 1259, 1259,
	1259, 4050, 3465, 3867, 1358, 3466, 2586, 2454, 2423, 2285,
	2286, 2208, 2656, 3463, 3294, 5213, 1259, 5099, 4755, 4673,
	1259, 4045, 2211, 2211, 1259, 1259, 1259, 1259, 1259, 1259,
	1259, 1259, 1259, 1259, 1259, 1259, 1259, 1259, 1259, 1259,
	1259, 1259, 1259, 1259, 4077, 1259, 4060, 2946, 4576, 3386,
	3744, 1149, 1151, 1259, 1259, 2211, 2314, 1731, 1198, 3137,
	1259, 4127, 2654, 4128, 4038, 3137, 4039, 4968, 4040, 4087,
	4088, 1259, 3163, 2518, 4430, 3135, 2577, 4167, 4961, 4048,
	2356, 3160, 1382, 1382, 195, 1199, 1259, 1199, 4054, 4057,
	1446, 4055, 1969, 1930, 1931, 3494, 1445, 4047, 3749, 3750,
	1542, 2614, 2609, 5212, 2584, 4630, 3665, 3666, 3667, 4668,
	2655, 3258, 1189, 1977, 1978, 1977, 1978, 1853, 1544, 4988,
	3776, 3167, 1359, 3780, 4856, 4201, 4529, 872, 4507, 3868,
	4084, 1466, 1466, 1380, 1380, 1516, 3791, 4082, 3168, 2284,
	3189, 1972, 1473, 1413, 4166, 1980, 4094, 5339, 1513, 1466,
	1466, 4405, 4328, 930, 1466, 5283, 3168, 4110, 4101, 4103,
	4104, 3319, 288, 2501, 1446, 4188, 1484, 3238, 3236, 3245,
	5359, 1267, 4125, 1259, 4117, 3227, 4126, 4327, 3170, 4091,
	3229, 122, 4217, 1979, 3708, 1979, 1910, 1446, 5149, 2611,
	5391, 5130, 1377, 3899, 3228, 3902, 4107, 4158, 1376, 3172,
	3857, 1259, 3859, 4132, 889, 3863, 1671, 5097, 4130, 3869,
	5093, 875, 875, 3171, 4173, 767, 5030, 4952, 4949, 4105,
	4834, 4768, 4416, 295, 295, 295, 4407, 773, 774, 4392,
	790, 773, 790, 802, 1259, 1259, 842, 4178, 4179, 4198,
	862, 4159, 4124, 3961, 3367, 869, 869, 869, 869, 4175,
	4176, 3333, 2971, 2281, 2192, 4855, 3215, 295, 1679, 1678,
	1178, 1672, 1191, 1178, 1178, 3769, 3704, 3882, 4218, 4219,
	2433, 5425, 3883, 5095, 1259, 1259, 1691, 1012, 3591, 3592,
	3882, 4190, 1259, 5290, 295, 3883, 4233, 4234, 4261, 3928,
	4499, 4241, 4191, 5358, 1977, 1978, 2325, 3123, 2324, 3122,
	2850, 5116, 1839, 1666, 1666, 1691, 1666, 1690, 1838, 4225,
	3448, 1691, 2885, 2325, 2324, 1666, 1909, 4415, 4294, 1908,
	1466, 2770, 4237, 4953, 4346, 4896, 4670, 2199, 4665, 3385,
	4664, 4200, 4557, 4553, 4552, 4495, 4469, 4224, 3385, 4341,
	4106, 1199, 3861, 4242, 3923, 2211, 3858, 4243, 4299, 4301,
	3451, 2053, 2069, 2068, 3468, 2053, 2661, 937, 5410, 2211,
	940, 5372, 5217, 5134, 5133, 1834, 4324, 1130, 4318, 5132,
	4330, 5062, 5061, 5007, 5004, 4926, 4886, 4825, 2205, 2205,
	4820, 4819, 4229, 1259, 4817, 4816, 4814, 4286, 4717, 4692,
	4404, 4291, 1190, 4628, 4566, 4551, 4280, 4550, 4282, 4442,
	4436, 4379, 4351, 4352, 1666, 4277, 4269, 3965, 3964, 3783,
	1259, 3725, 3452, 4298, 3442, 3414, 3413, 3412, 1382, 1259,
	3184, 4432, 3411, 773, 773, 4375, 4377, 1666, 3351, 1366,
	4385, 295, 1666, 1666, 1666, 3322, 3161, 3092, 3074, 3073,
	2779, 2647, 2615, 4366, 2608, 2150, 4354, 4400, 4345, 4424,
	4423, 2607, 2606, 4347, 4399, 1666, 2605, 1666, 2604, 2516,
	2487, 2486, 1666, 2485, 1544, 2484, 4337, 2483, 3254, 1380,
	2482, 4356, 2249, 2248, 4365, 4331, 2247, 2245, 4344, 3920,
	2182, 1377, 1377, 4387, 2181, 122, 1929, 1376, 1376, 4355,
	1131, 1928, 1864, 1740, 1739, 1544, 1738, 4391, 1259, 1259,
	1737, 1736, 4376, 4374, 1259, 1259, 2211, 4439, 4443, 1259,
	1259, 4427, 1259, 4426, 1735, 1734, 1730, 1259, 1728, 1727,
	1378, 4406, 1656, 4410, 1655, 4412, 1654, 1533, 1259, 1532,
	1531, 2055, 1530, 1529, 1476, 2060, 1432, 4403, 1431, 1430,
	1429, 1428, 1427, 1426, 1259, 1424, 4409, 1419, 1418, 1417,
	1416, 1415, 1339, 2287, 1153, 2499, 1378, 4455, 1144, 5036,
	4607, 4606, 4458, 4425, 4428, 4605, 2643, 2495, 103, 4434,
	4433, 1723, 97, 2421, 4276, 5284, 5404, 5434, 4440, 2479,
	4441, 2208, 2208, 5189, 5183, 5182, 1378, 5068, 4480, 3912,
	3910, 3909, 5289, 4922, 4465, 4456, 4493, 960, 4767, 1106,
	5179, 5066, 1715, 4489, 2536, 1382, 975, 5160, 3785, 4459,
	3263, 2589, 4526, 1382, 4466, 1865, 4946, 1544, 1544, 195,
	1544, 2591, 2549, 2551, 3680, 3033, 4474, 1382, 5122, 4503,
	3553, 4995, 4789, 2194, 2853, 2073, 2555, 3634, 1666, 1666,
	99, 1243, 1289, 4708, 4707, 4591, 4263, 3931, 1136, 1135,
	4704, 2567, 2568, 2569, 4703, 2196, 1380, 2198, 1207, 1544,
	1547, 4481, 2977, 2979, 1380, 5225, 2298, 5416, 2307, 3075,
	2929, 1266, 1263, 2200, 2202, 4468, 1265, 1264, 1380, 2706,
	4118, 2201, 2093, 3685, 1262, 1259, 2195, 4414, 3950, 3371,
	3991, 1783, 1781, 1108, 4542, 2773, 1382, 1132, 1382, 2837,
	3542, 4559, 4560, 2066, 1223, 1245, 2834, 4519, 2706, 4133,
	1406, 1234, 3660, 3639, 3978, 4197, 2683, 985, 3588, 2840,
	1395, 2952, 2945, 1466, 2941, 3735, 3361, 4638, 1947, 4803,
	2044, 3372, 1510, 1544, 1227, 1466, 2771, 2057, 1466, 4647,
	4617, 4162, 4650, 3520, 2693, 3985, 3683, 1380, 3068, 1380,
	5206, 4534, 4614, 1259, 4614, 4114, 1544, 4533, 4536, 4583,
	4530, 122, 4340, 4543, 122, 2205, 122, 3449, 4535, 3313,
	4562, 4563, 3316, 2491, 3318, 4546, 4531, 4532, 1356, 1355,
	1404, 1354, 4586, 4537, 4539, 4570, 4571, 5166, 5163, 4574,
	2411, 4711, 4558, 3926, 3927, 2290, 3116, 2783, 1666, 1666,
	3945, 1239, 3923, 1259, 1259, 2211, 3427, 2211, 4573, 3428,
	4588, 4632, 1650, 2635, 4046, 4582, 122, 1377, 3645, 122,
	4390, 1742, 4863, 1376, 3364, 122, 1251, 3364, 2029, 3290,
	3289, 5025, 1133, 4541, 1495, 1493, 1466, 4654, 1492, 4618,
	4725, 1491, 5381, 3256, 2424, 4272, 4633, 4271, 4672, 1544,
	4637, 4270, 256, 3487, 1666, 1966, 1958, 253, 4634, 4635,
	255, 1134, 254, 4646, 3789, 4202, 4649, 3689, 4648, 1841,
	5281, 4296, 4568, 4651, 4690, 3903, 27, 876, 877, 1666,
	1666, 1666, 1666, 1666, 1666, 1666, 4697, 878, 4698, 3126,
	2317, 1512, 4247, 26, 25, 24, 4683, 2199, 2199, 4744,
	4743, 23, 122, 1544, 4729, 4689, 4732, 1378, 126, 48,
	3439, 4457, 4726, 4682, 29, 1259, 1259, 1259, 4463, 4681,
	1138, 28, 4663, 5, 22, 4694, 168, 166, 143, 163,
	162, 135, 161, 1544, 160, 4706, 4713, 3920, 1259, 4702,
	1137, 1259, 1259, 4720, 159, 4747, 4718, 1397, 4714, 158,
	3373, 1259, 157, 165, 2211, 156, 155, 150, 790, 1259,
	1259, 154, 153, 3385, 152, 151, 149, 147, 2208, 148,
	4752, 4728, 790, 4775, 4745, 142, 1544, 146, 1666, 145,
	144, 141, 140, 1421, 139, 138, 137, 136, 134, 4758,
	167, 133, 4757, 4766, 132, 295, 210, 295, 295, 131,
	1450, 295, 1460, 1466, 1377, 130, 4781, 129, 128, 127,
	1376, 855, 1377, 1474, 856, 4738, 67, 4776, 1376, 66,
	123, 862, 124, 21, 862, 1544, 1377, 46, 16, 71,
	72, 4769, 1376, 1259, 4786, 20, 15, 41, 4812, 102,
	4813, 115, 114, 113, 2770, 3769, 1259, 869, 42, 110,
	40, 4798, 19, 18, 17, 1259, 108, 107, 106, 39,
	2211, 37, 4792, 4840, 13, 2053, 11, 43, 2155, 14,
	1259, 7, 200, 1259, 4809, 4810, 295, 199, 295, 295,
	1450, 202, 295, 295, 198, 201, 101, 197, 196, 1259,
	100, 1460, 1259, 35, 12, 1377, 191, 1377, 4942, 1544,
	4397, 1376, 93, 1376, 295, 194, 295, 1466, 1693, 193,
	192, 4905, 4866, 190, 189, 188, 1542, 1666, 1666, 1666,
	4837, 94, 4838, 91, 1713, 187, 96, 186, 92, 4839,
	95, 1720, 2345, 33, 8, 70, 9, 4770, 4845, 4028,
	4828, 118, 4836, 1382, 119, 44, 4787, 4885, 1744, 89,
	1460, 88, 87, 86, 32, 295, 295, 69, 1450, 31,
	183, 234, 233, 232, 4914, 231, 230, 4901, 229, 228,
	227, 1544, 222, 4925, 1666, 226, 224, 4929, 4888, 862,
	223, 295, 295, 4941, 225, 4933, 4887, 221, 247, 4787,
	246, 291, 2194, 1809, 1380, 245, 1378, 1378, 244, 4614,
	243, 237, 236, 4898, 1817, 242, 241, 240, 239, 1012,
	1259, 1259, 238, 235, 4580, 4581, 4917, 250, 4916, 4963,
	4962, 82, 4948, 220, 4889, 4927, 4890, 1259, 2211, 219,
	4945, 4921, 218, 216, 212, 4904, 215, 217, 2709, 3255,
	4906, 214, 213, 4631, 211, 249, 4940, 4877, 4878, 4883,
	248, 83, 2525, 1466, 1466, 4691, 181, 1466, 1466, 4947,
	1466, 1466, 182, 81, 4971, 180, 4973, 4964, 1366, 179,
	178, 4747, 177, 176, 4970, 4969, 175, 174, 1259, 4965,
	1259, 4891, 1259, 4897, 2199, 4899, 4936, 4900, 80, 185,
	295, 184, 1382, 30, 4984, 4985, 4669, 2, 4671, 5020,
	1, 0, 0, 0, 1366, 1259, 4976, 1382, 0, 5018,
	4983, 0, 2709, 0, 0, 0, 295, 0, 0, 0,
	4967, 0, 0, 0, 0, 4993, 0, 4987, 0, 0,
	0, 2777, 0, 0, 0, 0, 4760, 4959, 0, 0,
	4764, 0, 0, 1380, 0, 0, 4701, 2055, 4614, 5048,
	0, 0, 0, 2211, 0, 0, 5017, 5016, 1380, 5013,
	0, 3399, 0, 4614, 0, 1382, 1382, 0, 0, 0,
	5047, 0, 3406, 0, 0, 0, 0, 5040, 0, 0,
	0, 0, 5096, 5072, 0, 0, 1382, 5070, 5041, 1382,
	5005, 5006, 0, 1666, 5008, 5009, 0, 5010, 5011, 0,
	0, 0, 1671, 1666, 0, 0, 0, 5085, 5086, 1671,
	5056, 0, 0, 0, 0, 5058, 1380, 1380, 0, 1259,
	1259, 4614, 4614, 5064, 0, 0, 0, 0, 5102, 1259,
	0, 5104, 0, 0, 5069, 0, 0, 1380, 5109, 0,
	1380, 0, 4614, 5083, 0, 4614, 5094, 0, 0, 0,
	0, 4945, 0, 0, 0, 0, 5101, 0, 0, 0,
	0, 0, 0, 122, 122, 0, 122, 5110, 2205, 0,
	0, 3800, 3801, 0, 3802, 5115, 0, 0, 5117, 5114,
	0, 0, 1259, 1259, 0, 0, 1259, 5127, 5135, 5136,
	1666, 1466, 0, 0, 1466, 0, 5157, 5131, 5112, 0,
	0, 0, 5113, 5126, 0, 0, 0, 0, 0, 0,
	5165, 5168, 0, 5139, 0, 0, 0, 5057, 773, 0,
	122, 122, 0, 122, 5205, 5209, 0, 5181, 3848, 3849,
	0, 3850, 1378, 5155, 5147, 5148, 0, 0, 5156, 295,
	0, 295, 1377, 0, 0, 295, 0, 5230, 1376, 2205,
	5118, 0, 5119, 5174, 1259, 1259, 1259, 5170, 1693, 1450,
	1460, 295, 5137, 295, 2180, 0, 5169, 0, 0, 0,
	5173, 295, 0, 790, 4919, 4920, 0, 0, 0, 0,
	295, 5214, 0, 0, 0, 0, 5228, 0, 5218, 0,
	0, 5262, 1259, 0, 5221, 0, 5229, 2250, 0, 0,
	0, 0, 0, 5267, 0, 0, 0, 0, 0, 295,
	0, 5245, 0, 5244, 5242, 5243, 295, 1666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5176, 0,
	0, 5177, 0, 0, 0, 0, 0, 5264, 0, 0,
	2194, 0, 0, 0, 0, 0, 0, 2345, 0, 862,
	0, 5306, 5288, 5265, 5307, 1366, 0, 5305, 1199, 5278,
	0, 5313, 5291, 5280, 0, 0, 0, 0, 0, 1259,
	5315, 2208, 122, 122, 0, 0, 0, 1466, 0, 0,
	2306, 2306, 0, 3928, 5328, 0, 5311, 869, 4925, 869,
	0, 1377, 5312, 5298, 5299, 0, 0, 1376, 5346, 869,
	869, 5338, 0, 5319, 5321, 0, 1377, 0, 5320, 0,
	0, 0, 1376, 5334, 5335, 5337, 0, 5342, 1259, 1378,
	5349, 5340, 0, 0, 2205, 5263, 0, 1378, 0, 0,
	5165, 0, 5348, 5168, 5352, 5350, 0, 0, 0, 0,
	0, 1378, 5325, 5357, 0, 1382, 4875, 1382, 5367, 0,
	0, 0, 2208, 4016, 5368, 0, 5365, 0, 5377, 0,
	5369, 5375, 0, 0, 1377, 1377, 5374, 4014, 5366, 0,
	1376, 1376, 0, 0, 5373, 0, 0, 4007, 0, 0,
	5383, 0, 0, 0, 0, 1377, 1466, 5376, 1377, 5378,
	5277, 1376, 0, 5279, 1376, 0, 1380, 5399, 1380, 0,
	5398, 4614, 0, 4614, 0, 5409, 0, 0, 0, 0,
	1378, 5408, 1378, 0, 5336, 0, 0, 0, 5412, 0,
	5407, 0, 1259, 1259, 5420, 0, 0, 5411, 0, 0,
	5414, 1259, 1259, 5418, 0, 0, 0, 5423, 5428, 0,
	5432, 0, 0, 5439, 0, 0, 0, 0, 6, 0,
	5444, 5437, 295, 5441, 5443, 195, 5449, 5448, 5447, 295,
	10, 5440, 5436, 5445, 0, 5442, 4018, 0, 0, 0,
	5452, 0, 0, 0, 0, 0, 5454, 1466, 5455, 5459,
	1188, 5458, 1130, 5462, 5460, 4009, 0, 0, 5457, 0,
	5382, 5456, 0, 0, 295, 5446, 0, 0, 1259, 5465,
	0, 4008, 5469, 0, 5471, 5462, 5473, 1190, 0, 0,
	5466, 0, 0, 295, 2194, 5429, 5430, 2205, 5468, 0,
	0, 0, 0, 5402, 295, 0, 122, 2208, 0, 0,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2688, 0, 1366, 1366, 5175, 295, 0, 295,
	0, 0, 0, 773, 0, 295, 0, 1189, 0, 4017,
	0, 0, 0, 2205, 2205, 0, 0, 862, 0, 0,
	0, 1012, 1671, 0, 0, 0, 0, 0, 0, 0,
	903, 0, 5470, 0, 0, 0, 0, 2199, 0, 0,
	0, 0, 2205, 2205, 0, 0, 0, 0, 0, 0,
	4005, 0, 0, 1450, 295, 1131, 914, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4016, 5431, 862,
	0, 1455, 0, 0, 0, 2205, 295, 916, 0, 0,
	0, 4014, 0, 0, 2588, 5208, 0, 0, 0, 295,
	295, 4007, 295, 0, 295, 0, 295, 0, 295, 0,
	0, 915, 0, 0, 0, 1671, 1671, 0, 0, 0,
	0, 84, 0, 0, 0, 0, 0, 0, 2199, 0,
	0, 0, 0, 2625, 0, 0, 2626, 0, 2627, 0,
	85, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2947, 0, 0, 295, 295, 295, 295, 0, 90, 1637,
	0, 0, 1651, 1455, 0, 908, 3591, 3592, 0, 3609,
	3610, 3611, 924, 0, 0, 0, 0, 0, 0, 0,
	2208, 0, 842, 0, 0, 0, 862, 913, 3907, 4486,
	4018, 4015, 4010, 4011, 4012, 4013, 0, 0, 0, 0,
	98, 0, 0, 0, 1377, 0, 1377, 0, 0, 4009,
	1376, 0, 1376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1136, 1135, 4008, 2208, 2208, 0, 0,
	0, 0, 0, 4019, 0, 1455, 1455, 0, 0, 0,
	0, 912, 1006, 0, 0, 0, 0, 3606, 0, 0,
	3997, 0, 0, 0, 0, 2208, 2208, 120, 837, 0,
	0, 0, 4021, 104, 117, 0, 0, 0, 0, 0,
	0, 0, 1132, 0, 0, 0, 0, 0, 0, 0,
	0, 2785, 0, 4017, 0, 4205, 910, 0, 2208, 0,
	0, 0, 0, 0, 0, 0, 0, 1671, 1671, 1671,
	1671, 0, 0, 2199, 0, 0, 84, 0, 0, 0,
	0, 0, 0, 0, 122, 0, 0, 1378, 0, 0,
	0, 0, 4411, 0, 0, 85, 0, 0, 5208, 105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1366, 0, 4206, 90, 0, 0, 0, 3597, 0, 923,
	0, 0, 0, 773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	4207, 0, 4204, 0, 2205, 2205, 0, 773, 0, 0,
	122, 4215, 0, 0, 295, 98, 773, 4213, 4460, 2205,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 1133, 0, 0,
	3373, 0, 0, 0, 0, 0, 0, 0, 295, 1460,
	0, 3613, 0, 4214, 0, 0, 0, 1006, 4210, 0,
	0, 0, 905, 0, 1187, 0, 1134, 0, 0, 0,
	55, 0, 120, 3373, 0, 0, 0, 0, 104, 117,
	0, 0, 0, 4211, 0, 4015, 4010, 4011, 4012, 4013,
	0, 0, 0, 0, 3607, 909, 1378, 295, 1460, 0,
	295, 790, 0, 790, 0, 0, 0, 0, 3091, 0,
	0, 1378, 0, 0, 295, 0, 0, 295, 109, 0,
	0, 295, 0, 295, 0, 1138, 2199, 4019, 1450, 0,
	295, 295, 0, 1460, 1460, 3107, 0, 836, 0, 0,
	295, 0, 0, 0, 105, 1137, 0, 0, 0, 0,
	0, 122, 0, 919, 0, 0, 0, 1366, 0, 0,
	907, 0, 0, 0, 0, 1366, 2205, 0, 0, 1378,
	1378, 0, 2199, 2199, 0, 2030, 0, 203, 0, 112,
	84, 0, 116, 0, 869, 869, 0, 0, 869, 869,
	1378, 3591, 3592, 1378, 3609, 3610, 3611, 3150, 0, 85,
	0, 2199, 2199, 0, 0, 0, 0, 2208, 2208, 295,
	0, 0, 257, 904, 4485, 0, 0, 90, 0, 917,
	1007, 4208, 2208, 295, 0, 0, 164, 0, 0, 4209,
	0, 0, 0, 0, 2199, 0, 0, 295, 0, 0,
	0, 0, 0, 911, 0, 0, 0, 0, 862, 0,
	0, 0, 0, 862, 0, 0, 0, 0, 838, 98,
	0, 3608, 0, 0, 0, 0, 259, 0, 0, 906,
	0, 0, 3606, 1651, 0, 0, 295, 0, 0, 0,
	0, 0, 0, 0, 4212, 0, 0, 0, 0, 0,
	3251, 1693, 0, 0, 169, 921, 922, 0, 918, 0,
	0, 1006, 0, 109, 122, 0, 0, 0, 0, 0,
	209, 0, 4659, 0, 0, 0, 120, 0, 258, 0,
	0, 0, 104, 117, 0, 295, 1651, 3311, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 0, 204, 0, 0,
	3477, 0, 208, 0, 1693, 1214, 0, 295, 0, 0,
	3251, 0, 203, 0, 112, 0, 0, 116, 295, 2208,
	4338, 4339, 3597, 207, 0, 122, 0, 0, 0, 3356,
	0, 0, 4342, 4716, 0, 0, 0, 0, 105, 3150,
	122, 773, 0, 0, 0, 0, 0, 257, 4727, 0,
	1012, 3150, 0, 0, 0, 1007, 0, 0, 0, 0,
	0, 164, 0, 0, 122, 0, 0, 3603, 3604, 3605,
	0, 0, 4751, 295, 3602, 3600, 3601, 3593, 3594, 3595,
	3596, 3598, 3599, 2947, 2947, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 1450, 295, 3613, 0, 0, 0,
	0, 259, 0, 0, 0, 3429, 295, 0, 0, 1450,
	0, 1450, 2205, 1450, 0, 2205, 0, 2205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 1671, 1671, 0, 0, 0, 0, 0, 3607,
	0, 0, 0, 0, 4438, 209, 0, 0, 0, 2549,
	4444, 4445, 0, 258, 3517, 3518, 0, 0, 0, 0,
	295, 295, 295, 295, 1450, 0, 0, 1450, 0, 251,
	295, 0, 0, 2199, 2199, 295, 3065, 0, 252, 0,
	0, 0, 204, 0, 0, 0, 0, 208, 2199, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 1378,
	0, 1378, 0, 0, 0, 0, 295, 0, 207, 0,
	122, 0, 0, 0, 295, 0, 0, 0, 4832, 0,
	2030, 0, 1671, 1671, 1671, 1671, 1671, 1671, 1671, 1671,
	1671, 1671, 1671, 1671, 1671, 1671, 1671, 1671, 1671, 1671,
	1671, 1671, 0, 1671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2480, 0, 203, 0, 112, 0,
	0, 116, 0, 0, 2205, 2947, 2947, 2947, 2947, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5185, 0, 0, 0, 2505, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 1007,
	0, 0, 0, 0, 0, 164, 3608, 5190, 0, 0,
	0, 0, 0, 0, 0, 2208, 0, 0, 2208, 0,
	2208, 0, 2795, 2796, 2797, 2814, 2815, 2816, 0, 0,
	0, 0, 0, 0, 0, 2199, 3615, 3616, 3617, 3618,
	0, 0, 1693, 2817, 0, 259, 0, 0, 5200, 0,
	0, 0, 0, 0, 0, 4548, 4549, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2205, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	2033, 0, 0, 0, 0, 0, 2770, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	2807, 0, 0, 0, 0, 0, 0, 0, 0, 2803,
	0, 0, 0, 251, 0, 0, 5196, 0, 0, 0,
	0, 0, 252, 0, 0, 0, 204, 0, 0, 0,
	0, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 0, 0, 0, 2636, 0, 0, 0,
	0, 0, 3603, 3604, 3605, 0, 0, 2208, 0, 3602,
	3600, 3601, 3593, 3594, 3595, 3596, 3598, 3599, 5193, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 0, 0,
	2808, 2809, 2810, 2811, 0, 0, 0, 0, 0, 0,
	2802, 0, 0, 0, 0, 0, 3591, 3592, 0, 3609,
	3610, 3611, 0, 0, 0, 2549, 0, 0, 0, 0,
	0, 0, 5186, 295, 0, 0, 122, 0, 773, 4079,
	0, 5198, 0, 773, 5054, 0, 773, 0, 2205, 773,
	773, 0, 0, 0, 0, 773, 0, 0, 0, 0,
	0, 0, 0, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 2208, 0, 0, 0, 0, 0, 0,
	0, 0, 122, 2812, 2813, 122, 0, 3606, 0, 0,
	5098, 0, 0, 5100, 0, 0, 4759, 5199, 4761, 4762,
	4763, 0, 4765, 84, 0, 0, 0, 0, 295, 0,
	0, 0, 295, 295, 0, 0, 0, 2805, 0, 0,
	0, 0, 85, 0, 0, 0, 0, 0, 0, 0,
	0, 2199, 5204, 0, 2199, 0, 2199, 0, 0, 0,
	90, 0, 0, 0, 0, 0, 3150, 3150, 295, 0,
	3755, 3758, 0, 0, 0, 0, 0, 3150, 0, 2180,
	0, 0, 0, 2205, 0, 0, 0, 0, 3150, 2180,
	0, 3150, 2180, 0, 0, 2180, 0, 0, 3755, 0,
	0, 0, 98, 0, 0, 0, 0, 3597, 0, 0,
	295, 295, 3758, 0, 295, 4815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5191, 0, 0, 0, 0,
	0, 0, 0, 3758, 0, 295, 5201, 3831, 1455, 3831,
	0, 0, 0, 0, 1006, 1450, 122, 0, 0, 0,
	122, 5197, 0, 0, 5215, 0, 0, 55, 5216, 120,
	5203, 2208, 0, 0, 0, 104, 117, 0, 3150, 0,
	3150, 0, 3862, 3150, 3758, 0, 0, 3150, 0, 0,
	0, 3613, 5194, 0, 0, 0, 0, 1455, 0, 5192,
	0, 3758, 0, 0, 862, 0, 0, 5202, 0, 0,
	0, 0, 0, 2199, 2806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1455, 1455, 0, 0, 3607, 0, 1450, 0, 0, 5187,
	0, 105, 0, 295, 0, 0, 0, 0, 0, 0,
	2947, 2947, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 0, 3908, 4918, 0, 3924, 3150, 0, 0,
	295, 0, 0, 0, 0, 0, 0, 0, 1460, 5195,
	2032, 0, 0, 5188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 2208, 0, 0, 3356,
	0, 0, 1450, 0, 295, 0, 0, 3150, 0, 773,
	0, 0, 0, 0, 0, 2030, 3150, 0, 0, 2199,
	0, 4070, 4071, 0, 0, 0, 0, 0, 0, 3591,
	3592, 0, 3609, 3610, 3611, 0, 0, 1637, 0, 0,
	2947, 2947, 2947, 2947, 2947, 2947, 2947, 2947, 2947, 2947,
	2947, 2947, 2947, 2947, 2947, 2947, 2947, 2947, 2947, 2947,
	0, 2947, 0, 0, 0, 4036, 0, 0, 0, 0,
	2792, 2793, 2794, 2818, 2804, 2798, 1651, 2800, 2801, 2799,
	2786, 2787, 2788, 2789, 2790, 2791, 0, 0, 4043, 0,
	0, 0, 1693, 0, 0, 0, 1450, 295, 0, 295,
	109, 3608, 0, 0, 0, 1450, 0, 0, 1450, 0,
	3606, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142,
	4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4152,
	4153, 0, 4157, 0, 0, 0, 0, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1977, 1978, 0, 2010, 2011, 2012, 2021, 2022, 2023, 203,
	0, 112, 0, 0, 116, 0, 0, 122, 0, 0,
	0, 0, 0, 2014, 2008, 0, 0, 0, 0, 0,
	0, 0, 1980, 0, 0, 0, 0, 2199, 0, 0,
	0, 0, 0, 2027, 257, 0, 4112, 0, 0, 0,
	0, 0, 1007, 0, 0, 0, 0, 0, 164, 0,
	3597, 2033, 0, 0, 0, 0, 0, 0, 2133, 0,
	1979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1999, 0, 0, 0, 0, 0, 0, 0, 0,
	1996, 0, 0, 0, 0, 1651, 0, 0, 259, 0,
	2549, 0, 0, 0, 0, 0, 1455, 3603, 3604, 3605,
	0, 0, 0, 0, 3602, 3600, 3601, 3593, 3594, 3595,
	3596, 3598, 3599, 0, 0, 0, 169, 0, 0, 1671,
	0, 0, 0, 0, 3613, 0, 0, 0, 0, 0,
	0, 0, 209, 295, 295, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1651, 2199, 1651, 0, 0, 251, 0, 773, 773,
	0, 2002, 2003, 2004, 2005, 252, 0, 3607, 0, 204,
	0, 1985, 0, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 2013, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1794, 0, 0, 0, 0,
	0, 1671, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2018, 0, 0, 0, 2028, 0,
	0, 0, 0, 0, 0, 2007, 2009, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2024, 0, 2025, 2030, 0,
	0, 1977, 1978, 0, 1994, 1995, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1206, 0,
	0, 0, 0, 2016, 0, 2008, 0, 0, 0, 0,
	0, 0, 0, 1980, 0, 0, 0, 862, 2000, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1977, 1978, 0, 2010, 2011, 2012, 2021,
	2022, 2023, 2033, 0, 4310, 0, 0, 4312, 4313, 0,
	0, 1979, 0, 0, 3831, 0, 2014, 2008, 0, 0,
	0, 0, 1999, 0, 3608, 1980, 0, 2026, 0, 295,
	0, 0, 0, 0, 0, 0, 2027, 0, 0, 0,
	0, 0, 0, 3251, 0, 0, 0, 0, 2015, 0,
	0, 0, 0, 0, 2033, 0, 0, 0, 0, 2030,
	3758, 0, 295, 1979, 0, 0, 790, 790, 1460, 0,
	0, 0, 0, 0, 1999, 0, 0, 0, 0, 0,
	0, 0, 0, 1996, 0, 1671, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 3356, 85, 0,
	3356, 2180, 2002, 2003, 2004, 2005, 295, 0, 0, 2006,
	0, 0, 1985, 4402, 0, 3251, 90, 0, 295, 0,
	0, 0, 295, 0, 295, 2013, 0, 0, 1671, 295,
	0, 0, 0, 0, 0, 2001, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3150, 295,
	0, 0, 0, 1671, 2002, 2003, 2004, 2005, 98, 0,
	1012, 3150, 0, 0, 1985, 2019, 2007, 2009, 0, 0,
	3603, 3604, 3605, 0, 0, 0, 0, 3602, 3600, 3601,
	3593, 3594, 3595, 3596, 3598, 3599, 0, 0, 0, 0,
	0, 0, 295, 0, 0, 0, 3758, 0, 0, 3107,
	1006, 2032, 0, 0, 0, 0, 0, 2018, 0, 0,
	0, 2028, 0, 55, 0, 120, 0, 0, 2007, 2009,
	0, 104, 117, 0, 0, 0, 0, 0, 0, 2000,
	0, 0, 0, 0, 0, 0, 0, 0, 2024, 0,
	2025, 0, 0, 0, 0, 0, 0, 1994, 1995, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2016, 0, 0, 0,
	0, 0, 0, 4504, 0, 0, 0, 0, 0, 2017,
	0, 2000, 1651, 1651, 0, 3591, 3592, 105, 3609, 3610,
	3611, 1991, 1992, 1998, 2020, 1997, 1993, 2013, 1990, 1988,
	1989, 1981, 1982, 1983, 1984, 1986, 1987, 0, 0, 0,
	2030, 0, 4512, 2013, 0, 0, 4511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2026, 0, 0, 0, 0, 0, 295, 0, 0, 0,
	0, 0, 1693, 0, 295, 0, 0, 0, 0, 0,
	0, 2013, 0, 0, 0, 0, 0, 2013, 295, 0,
	0, 1651, 2030, 2013, 0, 0, 3606, 0, 0, 0,
	2006, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1460, 1460, 0, 2505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2001, 1460, 1460, 0,
	295, 1460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3150, 3150, 0, 3755, 0, 0, 3831, 3150,
	0, 0, 2006, 0, 0, 0, 0, 4616, 0, 4616,
	1693, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3150, 0, 2180, 0, 0, 109, 3755, 2001, 1693,
	1693, 295, 3758, 0, 0, 0, 2013, 0, 0, 0,
	0, 2013, 2032, 0, 0, 3758, 3597, 295, 3758, 0,
	295, 0, 0, 3831, 0, 2013, 0, 0, 2019, 0,
	2013, 0, 0, 0, 0, 0, 0, 2947, 0, 0,
	0, 0, 0, 0, 3150, 0, 3150, 295, 0, 0,
	0, 0, 0, 0, 0, 203, 0, 112, 0, 0,
	116, 0, 0, 0, 2032, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1455, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 3150, 3150, 2013, 0, 1007, 0,
	3356, 3356, 2013, 0, 164, 0, 0, 3755, 4795, 1990,
	1988, 1989, 1981, 1982, 1983, 1984, 1986, 1987, 0, 2947,
	295, 1469, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 0, 3607, 0, 0, 0, 0, 0, 0,
	0, 0, 2017, 0, 259, 0, 1977, 1978, 1206, 1206,
	1206, 0, 0, 0, 1991, 1992, 1998, 2020, 1997, 1993,
	0, 1990, 1988, 1989, 1981, 1982, 1983, 1984, 1986, 1987,
	2008, 0, 169, 0, 0, 0, 0, 0, 1980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 1651,
	4848, 0, 0, 0, 0, 0, 258, 0, 1641, 0,
	0, 0, 0, 0, 1657, 0, 0, 2033, 0, 0,
	0, 0, 251, 0, 2030, 0, 1979, 0, 0, 0,
	0, 252, 0, 0, 0, 204, 0, 0, 0, 0,
	208, 0, 0, 0, 0, 1695, 0, 1701, 0, 1707,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 0, 0,
	0, 1792, 0, 0, 0, 0, 0, 0, 0, 0,
	2013, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2013, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2922, 2923, 2924, 2925, 2918, 2919,
	2920, 2921, 0, 0, 0, 0, 0, 0, 0, 0,
	3608, 3150, 2180, 0, 2180, 0, 1800, 4402, 1805, 0,
	0, 0, 0, 2947, 0, 0, 295, 0, 0, 2951,
	0, 0, 1819, 0, 1824, 0, 4864, 1985, 4864, 0,
	0, 0, 0, 2013, 0, 0, 0, 0, 0, 2013,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 862, 0, 0, 0, 0, 0, 0,
	0, 0, 1977, 1978, 3831, 1693, 2947, 1693, 1450, 0,
	0, 0, 0, 2898, 2899, 2900, 2901, 0, 0, 0,
	0, 2007, 2009, 0, 4992, 0, 2008, 3758, 0, 295,
	0, 2947, 0, 1890, 1980, 0, 1896, 2910, 2911, 2912,
	2913, 2906, 2907, 2908, 2909, 2914, 2915, 2916, 2917, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4402, 0, 2033, 4616, 0, 0, 1693, 0, 0,
	0, 3150, 1979, 0, 0, 295, 0, 5024, 0, 0,
	0, 0, 0, 0, 2000, 0, 0, 0, 0, 4956,
	0, 0, 0, 0, 0, 297, 3603, 3604, 3605, 0,
	0, 1693, 5046, 3602, 3600, 3601, 3593, 3594, 3595, 3596,
	3598, 3599, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2894, 2895, 2896, 2897, 2902, 2903, 2904, 2905, 295,
	295, 3591, 3592, 0, 3609, 3610, 3611, 0, 2034, 2035,
	2036, 2037, 2038, 2039, 2040, 2041, 0, 0, 0, 0,
	0, 0, 0, 4112, 4078, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2030, 0, 0, 0, 0,
	0, 2054, 0, 0, 0, 0, 0, 2067, 0, 0,
	0, 0, 0, 1985, 0, 3831, 5015, 0, 0, 0,
	0, 0, 0, 4402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3606, 4616, 0, 0, 0, 0, 1977, 1978,
	0, 2010, 2011, 2012, 2021, 2022, 2023, 0, 4616, 1455,
	0, 0, 0, 0, 0, 0, 0, 2007, 2009, 0,
	0, 0, 2008, 0, 0, 0, 0, 0, 0, 0,
	1980, 2001, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 2027, 0, 0, 0, 0, 0, 790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2033,
	0, 0, 0, 2127, 2127, 2127, 4616, 4616, 1979, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1999,
	2000, 0, 0, 0, 0, 1221, 0, 4616, 1996, 295,
	4616, 0, 3597, 0, 0, 0, 0, 2032, 0, 0,
	2180, 0, 0, 0, 0, 0, 0, 0, 2505, 0,
	0, 1693, 0, 1693, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1460, 0, 0, 0, 0, 0,
	3281, 0, 0, 0, 0, 0, 0, 0, 5145, 0,
	0, 2030, 0, 0, 0, 0, 3613, 0, 0, 2002,
	2003, 2004, 2005, 0, 4864, 0, 0, 295, 0, 1985,
	0, 0, 0, 0, 3271, 3269, 0, 0, 0, 0,
	0, 0, 3273, 3275, 3265, 0, 1989, 1981, 1982, 1983,
	1984, 1986, 1987, 3150, 0, 0, 0, 0, 0, 3607,
	0, 0, 1206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2018, 0, 0, 0, 2028, 0, 0, 0,
	0, 0, 0, 2007, 2009, 0, 3291, 295, 2013, 0,
	0, 0, 0, 0, 0, 0, 0, 2001, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4112, 1994, 1995, 0, 0, 0, 2013, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2016, 0, 0, 0, 0, 1693, 0, 0, 0,
	2030, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2013, 0,
	0, 0, 2013, 2032, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2013, 0, 0, 0,
	0, 0, 0, 0, 5300, 0, 0, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	2013, 2013, 2013, 0, 0, 0, 3608, 2030, 2013, 4402,
	2013, 2013, 2013, 2013, 0, 0, 0, 0, 3267, 0,
	1455, 0, 2951, 2951, 0, 0, 0, 0, 0, 3283,
	0, 0, 0, 0, 0, 0, 0, 2013, 0, 0,
	0, 0, 0, 1981, 1982, 1983, 1984, 1986, 1987, 0,
	0, 0, 0, 3282, 3272, 3270, 3274, 3276, 3266, 3268,
	3284, 3286, 0, 0, 0, 0, 3150, 2006, 0, 0,
	0, 3278, 3280, 3288, 0, 0, 4616, 0, 4616, 0,
	0, 1693, 0, 0, 0, 0, 0, 0, 2013, 0,
	2505, 0, 0, 2001, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3292, 0,
	0, 0, 0, 0, 0, 0, 0, 1455, 2013, 0,
	0, 2013, 0, 2019, 2013, 0, 0, 2013, 0, 0,
	0, 0, 0, 2013, 2013, 2013, 2013, 2013, 2013, 2013,
	0, 0, 0, 0, 0, 0, 0, 0, 3150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2032,
	0, 0, 3603, 3604, 3605, 3251, 0, 0, 0, 3602,
	3600, 3601, 3593, 3594, 3595, 3596, 3598, 3599, 0, 0,
	0, 3150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3251, 0, 0, 0, 2013,
	0, 0, 3612, 0, 2951, 2951, 2951, 2951, 0, 0,
	2013, 0, 2013, 0, 0, 0, 0, 2013, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2612, 0,
	0, 0, 3285, 0, 0, 0, 0, 2017, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1991,
	1992, 1998, 2020, 1997, 1993, 0, 1990, 1988, 1989, 1981,
	1982, 1983, 1984, 1986, 1987, 0, 2641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2682, 0, 2686, 0, 3293, 0, 0, 0,
	0, 2700, 0, 0, 1206, 3277, 3279, 3287, 0, 0,
	2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720,
	2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730,
	2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740,
	2741, 2742, 2743, 2744, 2745, 2746, 0, 2752, 0, 2754,
	2755, 2756, 2757, 0, 0, 1221, 1221, 1221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2781, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2054, 0, 0,
	0, 2832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 0, 0, 0, 0, 0, 2862, 2865, 2868,
	2871, 0, 0, 2877, 2878, 2879, 2880, 2881, 2882, 2883,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2943, 0, 2954, 2956, 2961, 0, 0, 0, 0,
	1372, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	52, 51, 290, 290, 769, 0, 1977, 1978, 0, 0,
	0, 0, 2021, 2022, 2023, 0, 0, 85, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2008, 0, 0, 0, 0, 90, 0, 0, 1980, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 0, 2027,
	1651, 0, 0, 54, 0, 171, 0, 0, 0, 0,
	2013, 2013, 0, 2013, 0, 0, 0, 2033, 0, 0,
	0, 0, 0, 0, 53, 0, 1979, 98, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1999, 0, 0,
	0, 0, 0, 0, 0, 0, 1996, 0, 0, 0,
	0, 0, 0, 0, 0, 56, 74, 1255, 0, 0,
	0, 0, 0, 0, 57, 0, 0, 0, 0, 63,
	0, 0, 0, 0, 5435, 0, 0, 0, 0, 0,
	0, 0, 55, 0, 120, 0, 0, 0, 0, 0,
	104, 117, 0, 0, 0, 0, 0, 0, 0, 75,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	294, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1455, 0, 0, 2002, 2003, 2004,
	2005, 0, 0, 0, 0, 58, 2013, 1985, 0, 0,
	0, 0, 0, 938, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 105, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	938, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2018, 0, 0, 0, 2028, 0, 0, 0, 0, 0,
	0, 2007, 2009, 0, 0, 0, 2013, 2013, 0, 2951,
	2951, 0, 0, 2013, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3612, 3612, 0, 0, 2013, 2013, 0,
	1994, 1995, 0, 0, 0, 0, 0, 2013, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 76, 0, 2016,
	0, 2013, 0, 0, 0, 0, 0, 0, 3314, 3315,
	0, 3317, 0, 2013, 2000, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2951,
	2951, 2951, 2951, 2951, 2951, 2951, 2951, 2951, 2951, 2951,
	2951, 2951, 2951, 2951, 2951, 2951, 2951, 2951, 2951, 0,
	2951, 3612, 3612, 3612, 3612, 109, 0, 1379, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1628, 0, 0, 59, 0, 2030, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2013, 0, 0, 0,
	62, 0, 0, 0, 0, 65, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 0,
	0, 0, 0, 64, 203, 0, 112, 0, 0, 116,
	0, 5287, 0, 0, 0, 60, 0, 0, 0, 172,
	0, 0, 0, 3440, 0, 2006, 0, 61, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	0, 2001, 0, 164, 1977, 1978, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 2008, 1221,
	0, 2019, 0, 0, 0, 0, 1980, 1628, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 2034, 2035,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1206, 2013, 2033, 0, 2032, 0, 0,
	0, 169, 0, 0, 1979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1999, 0, 209, 0, 0,
	0, 0, 0, 0, 1996, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3500, 3501, 0, 0,
	0, 251, 3507, 0, 0, 0, 0, 0, 0, 0,
	252, 2013, 2013, 0, 204, 0, 0, 0, 0, 208,
	0, 3521, 3522, 0, 0, 0, 0, 2832, 0, 0,
	0, 0, 0, 0, 0, 2017, 0, 0, 0, 0,
	207, 0, 4484, 0, 0, 0, 0, 0, 0, 0,
	2020, 1997, 1993, 0, 1990, 1988, 1989, 1981, 1982, 1983,
	1984, 1986, 1987, 0, 0, 2002, 2003, 2004, 2005, 0,
	0, 0, 3531, 0, 0, 1985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3557, 0, 0, 0, 0,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2007,
	2009, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1994, 1995,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2000, 0, 1436, 0, 1436, 1436, 0, 0,
	0, 0, 0, 0, 0, 0, 2961, 2961, 2961, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2127, 0, 0, 0, 0, 0, 0,
	0, 2013, 2013, 0, 0, 2013, 3612, 3612, 2013, 0,
	0, 0, 2013, 0, 0, 0, 1291, 0, 0, 2013,
	0, 3650, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2013, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2030, 0, 1539, 0, 0, 0, 0,
	0, 1649, 0, 0, 0, 2013, 2013, 2013, 2013, 2013,
	0, 0, 0, 0, 0, 2013, 0, 2013, 0, 0,
	3612, 3612, 3612, 3612, 3612, 3612, 3612, 3612, 3612, 3612,
	3612, 3612, 3612, 3612, 3612, 3612, 3612, 3612, 3612, 3612,
	0, 0, 0, 3612, 0, 0, 2013, 2013, 0, 0,
	0, 0, 0, 2006, 0, 0, 0, 0, 2013, 0,
	0, 0, 0, 0, 0, 0, 0, 2013, 0, 0,
	0, 294, 0, 294, 294, 0, 0, 294, 0, 2001,
	0, 1206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1206, 0, 0, 0, 0, 0, 0,
	1798, 1799, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1221, 0, 0, 0, 1628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2013, 0, 3788, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2032, 0, 0, 0, 0,
	2013, 0, 294, 0, 294, 294, 0, 0, 294, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	938, 2013, 938, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3845, 3846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2013, 2013, 0, 1628, 1920,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1383, 0, 0, 0,
	0, 294, 294, 0, 0, 0, 0, 0, 0, 1997,
	1993, 0, 1990, 1988, 1989, 1981, 1982, 1983, 1984, 1986,
	1987, 0, 0, 0, 0, 0, 0, 294, 294, 0,
	0, 0, 0, 0, 0, 0, 1977, 1978, 0, 2010,
	2011, 2012, 2021, 2022, 2023, 0, 0, 0, 0, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2014,
	2008, 0, 0, 0, 0, 0, 0, 0, 1980, 0,
	0, 0, 0, 0, 0, 1628, 0, 0, 0, 2027,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2013, 0, 0, 0, 0, 0, 2033, 0, 0,
	0, 0, 0, 0, 0, 0, 1979, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1999, 0, 0,
	0, 0, 0, 0, 0, 0, 1996, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 2013, 2013,
	0, 0, 0, 2013, 2013, 0, 0, 2013, 2013, 0,
	0, 0, 2013, 0, 0, 0, 2013, 0, 0, 0,
	0, 2013, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2951, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2002, 2003, 2004,
	2005, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 1628, 0, 0, 0, 0, 0, 0, 0, 0,
	2700, 0, 0, 0, 2165, 0, 0, 4065, 4066, 0,
	0, 4069, 0, 0, 0, 4072, 0, 0, 0, 0,
	2175, 0, 1649, 0, 4076, 0, 0, 0, 2951, 0,
	2018, 0, 0, 4083, 2028, 0, 0, 0, 3650, 0,
	0, 2007, 2009, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4096, 0, 0, 0, 0, 822, 0,
	0, 2024, 0, 2025, 0, 0, 0, 0, 1436, 0,
	1994, 1995, 0, 4119, 4120, 1649, 4121, 4122, 4123, 805,
	0, 0, 0, 0, 806, 0, 2013, 0, 0, 2016,
	0, 1628, 0, 0, 4129, 0, 0, 0, 4131, 0,
	0, 0, 0, 0, 2000, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2013, 2013, 0, 0, 0, 0, 807, 0, 0,
	0, 4160, 4161, 0, 0, 0, 0, 0, 808, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4172,
	0, 0, 0, 2026, 0, 2149, 0, 1379, 0, 0,
	809, 294, 0, 0, 4181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2015, 0, 0, 294, 2149, 294,
	0, 0, 0, 828, 0, 2030, 0, 938, 0, 0,
	0, 0, 0, 0, 0, 0, 938, 0, 0, 0,
	0, 0, 0, 0, 0, 810, 0, 0, 2013, 2013,
	2013, 0, 0, 0, 0, 0, 0, 0, 0, 2013,
	2013, 3612, 2951, 0, 0, 294, 0, 0, 2013, 0,
	811, 2013, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2006, 0, 0, 0, 0,
	0, 4246, 0, 0, 812, 0, 0, 0, 0, 813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2001, 0, 0, 3612, 2951, 837, 0, 0, 4264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2013, 0, 0, 0, 0, 0, 0, 0, 2013,
	2951, 2019, 0, 0, 827, 0, 0, 2013, 0, 0,
	0, 0, 0, 4295, 0, 0, 0, 0, 2013, 0,
	2013, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2032, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4319, 4320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 824, 0, 0,
	0, 0, 2489, 0, 0, 0, 0, 0, 0, 0,
	1221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2512, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2524, 0, 2524, 0,
	0, 0, 1383, 0, 2531, 2017, 0, 0, 3612, 0,
	0, 0, 0, 1383, 0, 0, 0, 1991, 1992, 1998,
	2020, 1997, 1993, 0, 1990, 1988, 1989, 1981, 1982, 1983,
	1984, 1986, 1987, 0, 834, 0, 815, 0, 3566, 2013,
	3612, 0, 3567, 2013, 0, 0, 0, 0, 0, 0,
	0, 2127, 0, 2559, 1383, 0, 0, 0, 294, 0,
	0, 0, 3612, 0, 0, 938, 0, 835, 0, 816,
	0, 0, 0, 0, 0, 2580, 0, 0, 2127, 0,
	0, 0, 0, 0, 0, 0, 0, 4435, 0, 2596,
	0, 2598, 0, 2600, 0, 2602, 0, 2603, 1383, 0,
	294, 0, 0, 0, 0, 1383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 836, 0, 0, 0, 294,
	0, 1383, 0, 817, 0, 0, 0, 0, 832, 833,
	294, 830, 0, 1977, 1978, 0, 0, 294, 825, 0,
	0, 818, 2632, 2633, 2634, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 294, 0, 2008, 0, 0,
	0, 294, 0, 0, 0, 1980, 4482, 4483, 0, 0,
	0, 0, 4487, 4488, 0, 0, 0, 4491, 4492, 0,
	0, 1383, 0, 0, 0, 4496, 0, 0, 0, 819,
	0, 826, 0, 0, 2033, 0, 4500, 0, 0, 0,
	820, 0, 0, 1979, 0, 0, 0, 0, 0, 0,
	294, 0, 4505, 0, 1999, 0, 821, 0, 0, 0,
	0, 829, 0, 1996, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 0, 0, 838, 0, 0, 0,
	0, 0, 1628, 0, 0, 938, 294, 823, 294, 0,
	294, 0, 294, 0, 294, 0, 0, 2013, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4073, 2013, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1628, 0, 0, 0, 294,
	294, 294, 294, 0, 2002, 2003, 2004, 2005, 0, 0,
	1628, 0, 0, 0, 1985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2007, 2009,
	0, 0, 0, 0, 0, 0, 2013, 0, 1221, 0,
	0, 0, 0, 0, 0, 0, 0, 3040, 0, 0,
	1221, 0, 0, 0, 0, 0, 0, 1994, 1995, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4660, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2000, 0, 0, 0, 0, 0, 0, 0, 0,
	2013, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1383, 0, 1383, 0, 0, 0,
	0, 4695, 4696, 3093, 0, 0, 1436, 0, 0, 0,
	1436, 1383, 1436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1628, 2512,
	0, 0, 0, 0, 2212, 0, 0, 0, 0, 1977,
	1978, 0, 2030, 0, 1379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1379, 0, 0, 2008, 0, 0, 0, 0, 0, 0,
	0, 1980, 0, 0, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 0, 0, 0, 0,
	2033, 0, 2006, 0, 0, 0, 0, 0, 1628, 1979,
	0, 0, 0, 4782, 4783, 4784, 0, 0, 0, 0,
	1999, 0, 0, 0, 0, 0, 0, 0, 2001, 1996,
	0, 0, 0, 0, 0, 0, 2700, 0, 1383, 4793,
	4794, 0, 0, 294, 0, 0, 938, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4802, 4805, 0,
	294, 0, 0, 294, 0, 1649, 0, 294, 0, 294,
	0, 0, 0, 0, 0, 0, 294, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 4068, 0, 0,
	0, 0, 0, 0, 2032, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2002, 2003, 2004, 2005, 0, 0, 0, 0, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4865, 0, 3332, 0, 0, 1628,
	0, 0, 1628, 4873, 0, 294, 0, 2512, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4881, 294,
	0, 1206, 0, 0, 2007, 2009, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 0, 0, 4892, 1997, 1993,
	4894, 1990, 1988, 1989, 1981, 1982, 1983, 1984, 1986, 1987,
	0, 0, 0, 1994, 1995, 0, 0, 0, 0, 1383,
	1383, 0, 3404, 0, 0, 0, 0, 0, 0, 0,
	0, 1383, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 3416, 0, 3419, 0, 0, 2000, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 938, 0, 0, 1383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3458,
	1649, 3460, 1649, 294, 0, 0, 0, 0, 0, 3467,
	0, 0, 0, 0, 294, 0, 0, 0, 2030, 1383,
	0, 1383, 0, 1383, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1383, 1383, 0, 0, 1436, 0, 0, 0, 0,
	0, 0, 0, 3496, 0, 1383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1383, 0, 294,
	1383, 1383, 1383, 0, 0, 0, 5023, 0, 2006, 0,
	5027, 0, 0, 1628, 0, 0, 0, 0, 0, 294,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 2001, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 294, 294, 294,
	0, 0, 0, 0, 0, 0, 294, 0, 0, 0,
	2032, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 2212, 2212, 1383, 0, 0, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 2700, 0,
	0, 0, 0, 0, 0, 0, 0, 4805, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1997, 1993, 0, 1990, 1988, 1989,
	1981, 1982, 1983, 1984, 1986, 1987, 0, 0, 0, 0,
	0, 1206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1383,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1977, 1978, 0, 2010, 2011, 2012,
	2021, 2022, 2023, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2014, 2008, 0,
	0, 0, 5241, 5241, 5241, 0, 1980, 0, 0, 0,
	0, 0, 0, 1383, 0, 0, 0, 2027, 0, 0,
	1383, 0, 0, 0, 0, 0, 0, 0, 0, 1383,
	0, 0, 0, 1977, 1978, 2033, 0, 0, 0, 0,
	5266, 0, 0, 0, 1979, 0, 1383, 0, 0, 0,
	0, 0, 0, 0, 3698, 1999, 0, 2008, 0, 0,
	0, 0, 0, 0, 1996, 1980, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2033, 0, 0, 1436, 0, 0,
	0, 1649, 1649, 1979, 0, 0, 0, 0, 0, 0,
	1628, 0, 0, 0, 1999, 0, 0, 5241, 0, 0,
	0, 0, 0, 1996, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1379, 0, 0, 0, 3751, 0, 0,
	0, 0, 0, 0, 0, 2002, 2003, 2004, 2005, 0,
	0, 0, 0, 0, 0, 1985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5360, 0, 0, 1379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3807,
	3809, 4067, 0, 2512, 0, 0, 0, 0, 0, 0,
	0, 0, 1383, 0, 0, 0, 0, 0, 2018, 2149,
	0, 0, 2028, 0, 2002, 2003, 2004, 2005, 0, 2007,
	2009, 294, 0, 0, 1985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2024,
	0, 2025, 1628, 1628, 0, 1628, 0, 0, 1994, 1995,
	0, 2212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 0, 2016, 294, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 2007, 2009,
	5241, 5424, 2000, 0, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1383, 0, 294, 0, 0, 1994, 1995, 0,
	1221, 0, 0, 0, 0, 0, 0, 0, 1383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2026, 0, 0, 0, 0, 0, 0, 0, 3946,
	0, 2000, 0, 0, 0, 0, 294, 294, 0, 0,
	294, 0, 2015, 0, 0, 0, 0, 2149, 1628, 0,
	0, 0, 0, 2030, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1383, 0, 2030, 2006, 0, 0, 0, 0, 0, 0,
	0, 0, 1383, 0, 1383, 0, 0, 0, 0, 0,
	1383, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	2978, 1383, 1383, 0, 0, 0, 0, 1977, 1978, 0,
	2010, 2011, 2012, 2021, 2022, 2023, 4049, 0, 1649, 294,
	0, 0, 0, 0, 1628, 0, 0, 0, 0, 2019,
	2014, 2008, 2006, 0, 0, 2976, 0, 938, 0, 1980,
	2980, 0, 0, 0, 0, 0, 294, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 4063, 0, 2001, 0,
	0, 0, 2981, 0, 0, 2032, 0, 0, 2033, 0,
	294, 0, 0, 0, 0, 0, 0, 1979, 1628, 0,
	1379, 0, 0, 0, 0, 0, 0, 0, 1999, 0,
	0, 0, 0, 0, 0, 0, 0, 1996, 0, 0,
	0, 0, 0, 2982, 0, 0, 0, 0, 1628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2032, 0, 0, 0, 0, 0,
	0, 0, 2983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2017, 0, 0, 0, 0, 0, 0,
	0, 1628, 0, 0, 0, 1991, 1992, 1998, 2020, 1997,
	1993, 0, 1990, 1988, 1989, 1981, 1982, 1983, 1984, 1986,
	1987, 2984, 0, 294, 0, 294, 5146, 0, 2002, 2003,
	2004, 2005, 0, 0, 0, 0, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 0, 0, 0, 1997, 1993,
	0, 1990, 1988, 1989, 1981, 1982, 1983, 1984, 1986, 1987,
	0, 2018, 0, 2985, 0, 2028, 0, 0, 0, 0,
	0, 0, 2007, 2009, 0, 0, 0, 0, 1221, 0,
	0, 2986, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2987, 2024, 0, 2025, 0, 0, 0, 0, 0,
	0, 1994, 1995, 0, 1628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2988, 0, 0, 0,
	2016, 0, 0, 0, 0, 0, 822, 0, 0, 0,
	0, 0, 0, 0, 0, 2000, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 805, 0, 0,
	0, 0, 806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1628, 0, 0, 0,
	0, 0, 0, 0, 2026, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 807, 0, 0, 0, 1379,
	1379, 0, 0, 0, 0, 2015, 808, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2030, 2989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1383, 1383, 0, 0, 0, 0, 0, 0,
	0, 828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	938, 0, 0, 810, 0, 0, 2006, 0, 1383, 0,
	0, 2512, 0, 0, 0, 0, 0, 0, 0, 2990,
	2991, 0, 0, 0, 0, 0, 1383, 0, 811, 0,
	0, 0, 2001, 0, 0, 0, 0, 0, 1383, 0,
	0, 1383, 0, 0, 0, 0, 2992, 0, 0, 0,
	0, 0, 812, 0, 0, 4386, 2997, 813, 0, 0,
	0, 0, 2019, 0, 2212, 4396, 0, 0, 1383, 0,
	0, 0, 0, 0, 837, 0, 0, 2993, 0, 1977,
	1978, 2512, 0, 2512, 0, 0, 0, 0, 4417, 0,
	0, 0, 2994, 0, 0, 0, 0, 0, 2032, 0,
	0, 0, 827, 2008, 0, 0, 0, 0, 0, 0,
	0, 1980, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2995, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 0, 0, 0,
	2033, 0, 0, 0, 0, 2212, 0, 0, 0, 1979,
	0, 4462, 0, 0, 0, 0, 0, 0, 0, 0,
	1999, 0, 0, 0, 2996, 824, 0, 0, 294, 1996,
	0, 0, 0, 0, 0, 0, 2017, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1991, 1992,
	1998, 2020, 1997, 1993, 0, 1990, 1988, 1989, 1981, 1982,
	1983, 1984, 1986, 1987, 0, 1268, 0, 0, 0, 0,
	0, 0, 294, 0, 0, 0, 0, 0, 1221, 0,
	0, 0, 294, 0, 0, 0, 0, 3506, 0, 1383,
	0, 0, 0, 0, 294, 0, 0, 0, 294, 0,
	294, 0, 0, 0, 815, 294, 0, 0, 0, 0,
	2002, 2003, 2004, 2005, 0, 0, 0, 296, 296, 296,
	1985, 0, 0, 0, 0, 1379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 835, 0, 816, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1383, 0, 1383, 1977, 1978, 294, 1383,
	0, 0, 0, 0, 2007, 2009, 0, 1383, 296, 0,
	0, 0, 0, 836, 0, 0, 0, 0, 0, 0,
	2008, 817, 0, 0, 0, 0, 832, 833, 1980, 830,
	0, 0, 0, 1994, 1995, 0, 825, 0, 0, 818,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1383,
	0, 0, 0, 0, 0, 0, 0, 2033, 0, 0,
	0, 0, 0, 0, 0, 0, 1979, 2000, 0, 1383,
	0, 1977, 1978, 0, 0, 0, 0, 1999, 0, 0,
	0, 1383, 0, 1383, 0, 0, 1996, 819, 0, 826,
	0, 0, 0, 0, 300, 2008, 0, 0, 820, 0,
	4636, 0, 0, 1980, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 821, 0, 2512, 0, 0, 829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2033, 0, 838, 0, 0, 0, 0, 0,
	1383, 1979, 1379, 1383, 3499, 823, 0, 0, 2030, 0,
	1379, 0, 1999, 0, 0, 0, 0, 0, 0, 0,
	0, 1996, 0, 0, 2149, 0, 0, 2002, 2003, 2004,
	2005, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	929, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2212, 0, 0, 294, 929, 2006, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2512,
	0, 0, 1383, 0, 0, 0, 0, 0, 0, 0,
	4739, 2007, 2009, 2149, 2001, 2149, 0, 0, 0, 1383,
	0, 0, 2002, 2003, 2004, 2005, 0, 0, 0, 2212,
	2212, 0, 1985, 0, 0, 0, 0, 294, 0, 0,
	1994, 1995, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 0, 294, 0, 2212, 2212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2000, 0, 0, 0, 0, 0,
	2032, 0, 0, 294, 0, 0, 2007, 2009, 0, 0,
	0, 2212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1994, 1995, 0, 1383, 1383,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2000,
	0, 0, 0, 0, 1383, 2030, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 0, 0, 0, 1997, 1993, 0, 1990, 1988, 1989,
	1981, 1982, 1983, 1984, 1986, 1987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2006, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2030, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2001, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2512, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1260, 0, 0,
	2006, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2032, 0, 0,
	0, 0, 0, 0, 2524, 0, 2001, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1383,
	1383, 0, 1383, 0, 0, 0, 0, 0, 0, 0,
	0, 1383, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4982, 1649,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2212, 2032, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2212, 0, 0, 0, 0,
	0, 1997, 1993, 0, 1990, 1988, 1989, 1981, 1982, 1983,
	1984, 1986, 1987, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1383, 0, 0, 0, 0, 0,
	2149, 0, 0, 1383, 0, 0, 0, 0, 1383, 1383,
	1383, 294, 0, 0, 0, 0, 1997, 1993, 0, 1990,
	1988, 1989, 1981, 1982, 1983, 1984, 1986, 1987, 0, 0,
	0, 1383, 0, 1383, 0, 0, 0, 0, 1383, 296,
	1383, 296, 296, 0, 0, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 294, 0, 0, 0,
	0, 1383, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2212, 0, 0, 0, 958, 0, 5103, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 961, 0, 0,
	0, 0, 962, 0, 0, 0, 0, 0, 0, 0,
	296, 1548, 296, 296, 0, 0, 296, 296, 0, 0,
	0, 0, 1548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 2149,
	296, 0, 0, 0, 0, 963, 0, 977, 0, 0,
	0, 0, 0, 0, 2149, 0, 0, 0, 0, 0,
	0, 0, 0, 1548, 0, 0, 5159, 0, 0, 0,
	0, 1383, 0, 964, 0, 0, 0, 0, 965, 1383,
	294, 0, 0, 1383, 1383, 0, 1383, 0, 0, 296,
	296, 0, 0, 1383, 0, 0, 0, 0, 0, 0,
	0, 986, 0, 0, 1383, 1383, 0, 1548, 966, 0,
	0, 0, 2149, 2149, 1548, 296, 296, 0, 0, 0,
	0, 0, 0, 984, 0, 1383, 5223, 0, 0, 0,
	1548, 0, 0, 2149, 0, 294, 2149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 959, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1383, 0, 1383, 0, 0, 0, 0, 0,
	0, 0, 967, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 988,
	1548, 0, 0, 0, 837, 0, 0, 0, 0, 1383,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1667, 1383, 294, 296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1667, 0, 1383, 1383, 0, 0, 0, 0,
	0, 2212, 0, 2212, 0, 987, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 982, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1667, 0, 0, 0,
	0, 0, 0, 1667, 0, 1383, 0, 0, 0, 0,
	1383, 0, 0, 0, 0, 0, 0, 0, 0, 1667,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1383, 1383, 1383, 1383, 1383,
	1383, 1383, 0, 981, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 968, 0, 0, 0, 0, 1383,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1667,
	0, 0, 0, 0, 0, 0, 0, 969, 0, 1383,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1383, 836, 1383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 957, 0, 0, 978,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1548, 1383, 2149, 0, 2149, 296, 296, 296, 976, 0,
	0, 0, 0, 0, 0, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 0, 971, 0, 0,
	0, 972, 991, 0, 990, 0, 2212, 0, 973, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 974, 0, 0, 0, 0, 983,
	296, 0, 0, 0, 0, 992, 0, 989, 0, 0,
	0, 0, 0, 0, 838, 1383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1383, 1383, 1383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1383,
	0, 0, 0, 0, 0, 0, 0, 1548, 0, 0,
	0, 0, 0, 1546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1668, 0, 0, 1383, 0, 0,
	1383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1545,
	0, 0, 0, 0, 2212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 929, 0, 0, 0, 0, 0,
	0, 0, 0, 929, 0, 0, 0, 0, 0, 1668,
	0, 0, 0, 0, 0, 0, 1668, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1668, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1383, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 1548, 1548,
	0, 0, 0, 296, 0, 0, 0, 0, 0, 0,
	1548, 0, 1668, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1545, 0, 0, 2212,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	0, 1383, 1383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 0,
	0, 0, 1383, 1548, 0, 1383, 0, 0, 296, 1383,
	0, 0, 0, 0, 0, 296, 0, 0, 0, 1383,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 296, 0, 0, 0, 0, 0, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 1548, 0,
	1548, 0, 1548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1548, 1548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1548, 0, 0, 0, 296, 0,
	0, 0, 0, 0, 0, 0, 1548, 0, 0, 1548,
	1548, 1548, 0, 0, 0, 0, 1383, 0, 0, 0,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 296, 0, 296, 0, 296, 0,
	296, 0, 296, 0, 0, 0, 0, 1667, 1667, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 296, 296,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1667, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1383, 0, 1548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1667, 0, 1667,
	0, 1667, 1546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1667,
	1667, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1667, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1667, 0, 0, 1667, 1667,
	1667, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 929, 0, 0, 0, 0, 0, 1548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1383, 0, 1383, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 0, 1548, 0, 0, 0, 0,
	0, 0, 0, 0, 1545, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 0, 296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	0, 296, 0, 0, 0, 296, 0, 296, 0, 0,
	0, 0, 0, 0, 296, 296, 0, 1545, 0, 0,
	0, 0, 0, 0, 296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1668, 1668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1546, 0, 0, 0, 0, 0, 0, 0,
	0, 1548, 0, 0, 0, 0, 1977, 1978, 0, 2010,
	2011, 2012, 2021, 2022, 2023, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1545, 2014,
	2008, 0, 0, 296, 0, 0, 0, 0, 1980, 0,
	0, 0, 0, 0, 0, 1668, 0, 296, 0, 2027,
	0, 0, 0, 0, 1545, 0, 0, 0, 0, 0,
	0, 296, 0, 0, 0, 0, 0, 2033, 0, 0,
	0, 0, 0, 0, 0, 0, 1979, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1999, 0, 0,
	1668, 0, 1668, 0, 1668, 0, 1996, 0, 0, 0,
	296, 1548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1668, 1668, 0, 0, 0, 1548, 0, 0,
	0, 0, 0, 0, 0, 0, 1668, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1668, 0,
	0, 1668, 1668, 1668, 0, 0, 0, 0, 0, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2002, 2003, 2004,
	2005, 296, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 0, 296, 0, 0, 0, 0, 0, 0, 0,
	1545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2018, 1548, 0, 1548, 2028, 0, 0, 0, 0, 1548,
	0, 2007, 2009, 0, 0, 0, 0, 296, 0, 0,
	1548, 1548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2024, 0, 2025, 0, 0, 0, 296, 0, 296,
	1994, 1995, 0, 0, 0, 0, 0, 1546, 0, 0,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 2016,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1545, 0, 0, 0, 2000, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1667, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 296, 296, 296, 0, 0,
	0, 0, 0, 0, 296, 0, 0, 0, 0, 296,
	0, 0, 0, 2026, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1546, 0, 0, 0, 2015, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 0, 2030, 0, 0, 296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1667, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1667, 0, 1667, 0, 0, 0, 0, 0, 1667, 0,
	0, 1546, 0, 0, 0, 2006, 0, 0, 0, 1667,
	1667, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1546, 0, 0,
	0, 2001, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2019, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1977, 1978, 0, 2010,
	2011, 2012, 2021, 2022, 2023, 0, 0, 2032, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2014,
	2008, 0, 0, 0, 0, 0, 0, 0, 1980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2027,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2033, 0, 0,
	0, 0, 0, 0, 0, 0, 1979, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1999, 0, 0,
	0, 0, 0, 1546, 0, 2017, 1996, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1991, 1992, 1998,
	2020, 1997, 1993, 0, 1990, 1988, 1989, 1981, 1982, 1983,
	1984, 1986, 1987, 0, 0, 0, 0, 0, 2828, 0,
	0, 0, 2829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2002, 2003, 2004,
	2005, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 0, 0, 1546, 0, 1548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1668,
	1548, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2018, 0, 0, 0, 2028, 0, 0, 1548, 0, 0,
	0, 2007, 2009, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2024, 296, 2025, 0, 0, 296, 296, 0, 0,
	1994, 1995, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2016,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 2000, 0, 0, 0, 0, 0,
	0, 1668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1668, 0, 1668, 0, 0, 0, 0,
	0, 1668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1545, 1668, 1668, 296, 296, 0, 0, 296, 0,
	0, 0, 0, 2026, 0, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 0, 0, 0, 2015, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2030, 0, 0, 0, 0,
	0, 0, 0, 0, 1545, 0, 0, 0, 1548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1545, 0, 0, 0,
	0, 0, 0, 0, 0, 2006, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 0,
	0, 2001, 1548, 0, 1548, 0, 0, 0, 1548, 0,
	0, 0, 0, 0, 0, 296, 1548, 0, 0, 1548,
	0, 0, 0, 0, 296, 0, 0, 0, 0, 0,
	0, 2019, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	0, 0, 1977, 1978, 0, 2010, 2011, 2012, 2021, 2022,
	2023, 0, 0, 0, 0, 0, 0, 2032, 0, 0,
	0, 0, 0, 0, 0, 2014, 2008, 0, 1548, 0,
	0, 0, 0, 0, 1980, 0, 0, 0, 0, 0,
	1548, 0, 1548, 0, 0, 2027, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2033, 0, 0, 0, 0, 0, 0,
	0, 0, 1979, 0, 0, 0, 0, 1545, 0, 0,
	0, 0, 0, 1999, 0, 0, 0, 0, 0, 0,
	0, 0, 1996, 0, 0, 2017, 0, 0, 0, 1548,
	0, 296, 1548, 296, 0, 0, 0, 1991, 1992, 1998,
	2020, 1997, 1993, 0, 1990, 1988, 1989, 1981, 1982, 1983,
	1984, 1986, 1987, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4510, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1667, 0, 1667, 0, 0, 0, 1545, 0, 0,
	0, 0, 0, 0, 929, 1667, 0, 0, 0, 0,
	0, 0, 0, 2002, 2003, 2004, 2005, 0, 0, 0,
	0, 1548, 0, 1985, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2018, 1667, 0, 0,
	2028, 0, 0, 0, 1546, 0, 0, 2007, 2009, 1667,
	0, 1667, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2024, 0, 2025,
	0, 0, 0, 0, 0, 0, 1994, 1995, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2016, 0, 1546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1545, 0,
	2000, 1545, 1546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1546,
	0, 0, 0, 1548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2026,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	2015, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1545, 2030, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1545, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2006, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2001, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1546, 0, 0, 0, 0, 0, 0, 2019, 0, 0,
	0, 0, 0, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1548, 1548,
	0, 1548, 0, 0, 0, 0, 0, 0, 0, 0,
	1548, 0, 1545, 2032, 0, 0, 296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1548,
	0, 0, 0, 0, 1668, 0, 1668, 929, 0, 0,
	1546, 0, 0, 0, 0, 0, 0, 0, 1668, 0,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 0, 0, 296, 0, 296, 0,
	0, 2017, 0, 296, 0, 0, 0, 0, 0, 1548,
	0, 0, 0, 1991, 1992, 1998, 2020, 1997, 1993, 0,
	1990, 1988, 1989, 1981, 1982, 1983, 1984, 1986, 1987, 0,
	1668, 0, 1548, 0, 5142, 0, 0, 1548, 1548, 1548,
	0, 0, 1668, 0, 1668, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1548, 0, 1548, 0, 0, 0, 296, 1548, 0, 1548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1548, 1546, 0, 0, 1546, 0, 0, 1667, 1667, 0,
	1667, 0, 0, 0, 0, 0, 0, 0, 0, 1667,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1546, 0, 0, 0, 0, 0, 0, 0, 1667, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1548, 1548, 0, 1548, 0, 0, 0, 0,
	0, 1667, 0, 0, 0, 0, 1667, 1667, 1667, 0,
	0, 0, 0, 1548, 1548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1667,
	0, 1667, 0, 0, 1548, 0, 1667, 0, 1545, 0,
	0, 0, 0, 0, 296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1546, 0, 0, 1548, 0,
	0, 296, 0, 0, 296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1548, 1548, 0, 0, 1548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1545, 1545, 0, 1545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1667, 1667, 296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1548, 296, 0, 0, 0, 1548,
	0, 0, 0, 1545, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1548, 1548, 1548, 1548, 1548, 1548,
	1548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1668, 1668, 0, 1668, 0, 0, 0, 0, 0, 0,
	0, 0, 1668, 0, 0, 0, 0, 1545, 1548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1548, 0, 1548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1667, 1667, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1668, 0, 0, 0, 0, 0, 0, 0, 0,
	1548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 1668, 0, 0, 0, 0, 1668,
	1668, 1668, 0, 1545, 0, 0, 0, 0, 1667, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1668, 0, 1668, 0, 0, 0, 0, 1668,
	0, 1546, 0, 1667, 1667, 1667, 1667, 1667, 1667, 1667,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1548, 0, 0, 1545, 0, 0,
	0, 0, 1546, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 1548, 1548, 1548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1545, 0, 0,
	0, 0, 0, 0, 0, 0, 1977, 1978, 0, 2010,
	2011, 2012, 2021, 2022, 2023, 0, 0, 0, 0, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2014,
	2008, 0, 0, 0, 0, 0, 1548, 0, 1980, 1548,
	1545, 0, 1667, 0, 0, 0, 0, 0, 0, 2027,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2033, 0, 0,
	0, 0, 0, 296, 296, 0, 1979, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1999, 0, 1545,
	0, 0, 0, 0, 1546, 1546, 1996, 1546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1668, 1668, 0, 0, 0,
	0, 0, 1078, 0, 1130, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1086,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1545, 0, 0, 0, 1101, 0, 1084,
	1083, 0, 0, 0, 0, 0, 0, 2002, 2003, 2004,
	2005, 1667, 1667, 1667, 0, 0, 0, 1985, 0, 0,
	0, 0, 0, 1103, 0, 0, 0, 0, 296, 1085,
	0, 0, 0, 0, 1088, 0, 0, 0, 0, 1142,
	1546, 1113, 0, 0, 0, 0, 0, 0, 0, 1098,
	1099, 0, 0, 0, 0, 0, 0, 0, 0, 1118,
	2018, 0, 0, 1546, 2028, 1545, 0, 0, 1667, 0,
	0, 2007, 2009, 0, 0, 0, 0, 1131, 1090, 0,
	0, 0, 0, 296, 1091, 0, 0, 0, 1548, 0,
	0, 2024, 0, 2025, 0, 0, 0, 0, 1548, 0,
	1994, 1995, 0, 0, 0, 1668, 1668, 0, 1092, 0,
	0, 0, 0, 0, 0, 0, 0, 1128, 0, 2016,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2000, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1129, 0, 0, 0, 1546, 0, 0, 0,
	0, 1668, 0, 0, 0, 0, 0, 0, 1094, 0,
	0, 296, 0, 0, 0, 0, 0, 1082, 0, 0,
	0, 0, 0, 2026, 0, 1548, 1668, 1668, 1668, 1668,
	1668, 1668, 1668, 0, 0, 0, 0, 0, 1095, 1096,
	0, 0, 0, 0, 2015, 0, 0, 0, 0, 0,
	1546, 0, 0, 0, 0, 2030, 0, 0, 0, 0,
	1104, 1102, 0, 0, 0, 0, 0, 0, 1097, 0,
	0, 296, 1114, 0, 0, 1136, 1135, 0, 0, 0,
	1546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1139, 1127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2006, 0, 0, 0, 0,
	0, 0, 0, 1546, 1132, 1668, 0, 1667, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1667, 0, 0,
	0, 2001, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2019, 1546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1089, 0, 0, 1141, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2032, 0, 0,
	0, 0, 1087, 0, 0, 0, 0, 1122, 1123, 0,
	0, 0, 0, 0, 1667, 0, 0, 0, 0, 0,
	0, 1125, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1133,
	1120, 0, 0, 0, 1668, 1668, 1668, 0, 1140, 1115,
	0, 0, 1107, 1105, 0, 0, 1110, 0, 0, 0,
	0, 0, 0, 1111, 0, 2017, 1080, 0, 1134, 0,
	0, 0, 0, 0, 0, 0, 0, 1991, 1992, 1998,
	2020, 1997, 1993, 0, 1990, 1988, 1989, 1981, 1982, 1983,
	1984, 1986, 1987, 0, 1081, 0, 0, 0, 1546, 0,
	0, 1668, 4081, 0, 0, 1126, 0, 0, 1124, 0,
	1112, 0, 0, 0, 0, 0, 1109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1138, 0, 0,
	0, 1667, 0, 0, 0, 1116, 0, 1117, 0, 0,
	0, 0, 0, 0, 0, 0, 1093, 1137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1119, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1121,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1668, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1668, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	1549, 312, 313, 1550, 1551, 1552, 0, 1553, 713, 1554,
	1555, 1556, 314, 1557, 315, 316, 317, 1322, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 1668, 325, 716,
	326, 717, 1558, 718, 327, 328, 329, 330, 331, 332,
	333, 1559, 1560, 0, 334, 719, 720, 721, 1561, 335,
	336, 722, 1562, 1629, 1563, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 1564, 346, 347, 348, 345, 349,
	1565, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	1566, 358, 359, 360, 1323, 361, 362, 363, 1567, 1568,
	1570, 1569, 1571, 1572, 1573, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 1574, 374, 376, 370, 372,
	1575, 375, 373, 377, 1576, 378, 379, 380, 1577, 1578,
	381, 382, 383, 1579, 384, 385, 386, 1580, 387, 388,
	389, 1581, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	1582, 301, 1583, 0, 1668, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 1584, 409, 410, 411, 1585,
	412, 413, 1586, 1324, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 1587, 426,
	731, 1588, 732, 427, 1589, 428, 429, 430, 431, 432,
	433, 434, 733, 734, 735, 527, 1326, 435, 436, 437,
	1590, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 1591, 1325, 736, 446, 528, 447, 737,
	738, 1592, 739, 1593, 448, 449, 451, 1327, 740, 1328,
	450, 452, 453, 1329, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 1594, 461, 463, 462, 1595, 465,
	741, 464, 1330, 466, 467, 1331, 1596, 468, 469, 470,
	471, 472, 473, 476, 1597, 1598, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 1332, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 1333, 520, 508, 1599, 303, 1334,
	522, 523, 524, 525, 1600, 742, 526, 743, 529, 530,
	1601, 0, 531, 0, 532, 1602, 1603, 534, 535, 536,
	1604, 1605, 537, 538, 744, 1335, 539, 1336, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 1606, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 1607, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 1608, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 1609, 598, 599, 597, 600, 601, 1337,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 1610, 626, 627, 625, 628, 629, 630, 1611,
	631, 752, 632, 613, 614, 633, 634, 1338, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 1612, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	1613, 663, 664, 0, 658, 649, 1614, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 1615, 673, 756, 757,
	758, 759, 1616, 685, 1617, 674, 676, 677, 678, 679,
	760, 680, 761, 1618, 681, 682, 683, 684, 675, 686,
	687, 1619, 1620, 688, 689, 691, 693, 694, 690, 692,
	695, 1621, 696, 1622, 0, 697, 698, 699, 762, 763,
	764, 1623, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 1624, 1625, 1626, 1627, 708, 709, 766, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1543, 0, 0, 0, 0, 0,
	0, 3018, 0, 0, 0, 0, 0, 0, 0, 0,
	3019, 304, 305, 307, 306, 308, 309, 310, 311, 1549,
	312, 313, 1550, 1551, 1552, 0, 1553, 713, 1554, 1555,
	1556, 314, 1557, 315, 316, 317, 1322, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 1558, 718, 327, 328, 329, 330, 331, 332, 333,
	1559, 1560, 0, 334, 719, 720, 721, 1561, 335, 336,
	722, 1562, 1629, 1563, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 1564, 346, 347, 348, 345, 349, 1565,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 1566,
	358, 359, 360, 1323, 361, 362, 363, 1567, 1568, 1570,
	1569, 1571, 1572, 1573, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 1574, 374, 376, 370, 372, 1575,
	375, 373, 377, 1576, 378, 379, 380, 1577, 1578, 381,
	382, 383, 1579, 384, 385, 386, 1580, 387, 388, 389,
	1581, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 1582,
	301, 1583, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 1584, 409, 410, 411, 1585, 412,
	413, 1586, 1324, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 1587, 426, 731,
	1588, 732, 427, 1589, 428, 429, 430, 431, 432, 433,
	434, 733, 734, 735, 527, 1326, 435, 436, 437, 1590,
	438, 439, 440, 441, 442, 0, 0, 0, 302, 443,
	444, 445, 1591, 1325, 736, 446, 528, 447, 737, 738,
	1592, 739, 1593, 448, 449, 451, 1327, 740, 1328, 450,
	452, 453, 1329, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 1594, 461, 463, 462, 1595, 465, 741,
	464, 1330, 466, 467, 1331, 1596, 468, 469, 470, 471,
	472, 473, 476, 1597, 1598, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 1332, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 1333, 520, 508, 1599, 303, 1334, 522,
	523, 524, 525, 1600, 742, 526, 743, 529, 530, 1601,
	0, 531, 0, 532, 1602, 1603, 534, 535, 536, 1604,
	1605, 537, 538, 744, 1335, 539, 1336, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 1606, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 1607, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 1608, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 1609, 598, 599, 597, 600, 601, 1337, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 1610, 626, 627, 625, 628, 629, 630, 1611, 631,
	752, 632, 613, 614, 633, 634, 1338, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 1612, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 1613,
	663, 664, 0, 658, 649, 1614, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 1615, 673, 756, 757, 758,
	759, 1616, 685, 1617, 674, 676, 677, 678, 679, 760,
	680, 761, 1618, 681, 682, 683, 684, 675, 686, 687,
	1619, 1620, 688, 689, 691, 693, 694, 690, 692, 695,
	1621, 696, 1622, 0, 697, 698, 699, 762, 763, 764,
	1623, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	1624, 1625, 1626, 1627, 708, 709, 766, 710, 711, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1543, 0, 0, 0, 4090, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4092, 304, 305, 307,
	306, 308, 309, 310, 311, 1549, 312, 313, 1550, 1551,
	1552, 0, 1553, 713, 1554, 1555, 1556, 314, 1557, 315,
	316, 317, 1322, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 1558, 718, 327,
	328, 329, 330, 331, 332, 333, 1559, 1560, 0, 334,
	719, 720, 721, 1561, 335, 336, 722, 1562, 1629, 1563,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 1564,
	346, 347, 348, 345, 349, 1565, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 1566, 358, 359, 360, 1323,
	361, 362, 363, 1567, 1568, 1570, 1569, 1571, 1572, 1573,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	1574, 374, 376, 370, 372, 1575, 375, 373, 377, 1576,
	378, 379, 380, 1577, 1578, 381, 382, 383, 1579, 384,
	385, 386, 1580, 387, 388, 389, 1581, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 1582, 301, 1583, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	1584, 409, 410, 411, 1585, 412, 413, 1586, 1324, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 1587, 426, 731, 1588, 732, 427, 1589,
	428, 429, 430, 431, 432, 433, 434, 733, 734, 735,
	527, 1326, 435, 436, 437, 1590, 438, 439, 440, 441,
	442, 0, 0, 0, 302, 443, 444, 445, 1591, 1325,
	736, 446, 528, 447, 737, 738, 1592, 739, 1593, 448,
	449, 451, 1327, 740, 1328, 450, 452, 453, 1329, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 1594,
	461, 463, 462, 1595, 465, 741, 464, 1330, 466, 467,
	1331, 1596, 468, 469, 470, 471, 472, 473, 476, 1597,
	1598, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 1332, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 1333,
	520, 508, 1599, 303, 1334, 522, 523, 524, 525, 1600,
	742, 526, 743, 529, 530, 1601, 0, 531, 0, 532,
	1602, 1603, 534, 535, 536, 1604, 1605, 537, 538, 744,
	1335, 539, 1336, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 1606, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 1607, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 1608, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 1609, 598,
	599, 597, 600, 601, 1337, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 1610, 626, 627,
	625, 628, 629, 630, 1611, 631, 752, 632, 613, 614,
	633, 634, 1338, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 1612, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 1613, 663, 664, 0, 658,
	649, 1614, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 1615, 673, 756, 757, 758, 759, 1616, 685, 1617,
	674, 676, 677, 678, 679, 760, 680, 761, 1618, 681,
	682, 683, 684, 675, 686, 687, 1619, 1620, 688, 689,
	691, 693, 694, 690, 692, 695, 1621, 696, 1622, 0,
	697, 698, 699, 762, 763, 764, 1623, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 1624, 1625, 1626, 1627,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4540, 304, 305, 307,
	306, 308, 309, 310, 311, 1549, 312, 313, 1550, 1551,
	1552, 0, 1553, 713, 1554, 1555, 1556, 314, 1557, 315,
	316, 317, 1322, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 1558, 718, 327,
	328, 329, 330, 331, 332, 333, 1559, 1560, 0, 334,
	719, 720, 721, 1561, 335, 336, 722, 1562, 1629, 1563,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 1564,
	346, 347, 348, 345, 349, 1565, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 1566, 358, 359, 360, 1323,
	361, 362, 363, 1567, 1568, 1570, 1569, 1571, 1572, 1573,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	1574, 374, 376, 370, 372, 1575, 375, 373, 377, 1576,
	378, 379, 380, 1577, 1578, 381, 382, 383, 1579, 384,
	385, 386, 1580, 387, 388, 389, 1581, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 1582, 301, 1583, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	1584, 409, 410, 411, 1585, 412, 413, 1586, 1324, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 1587, 426, 731, 1588, 732, 427, 1589,
	428, 429, 430, 431, 432, 433, 434, 733, 734, 735,
	527, 1326, 435, 436, 437, 1590, 438, 439, 440, 441,
	442, 0, 0, 0, 302, 443, 444, 445, 1591, 1325,
	736, 446, 528, 447, 737, 738, 1592, 739, 1593, 448,
	449, 451, 1327, 740, 1328, 450, 452, 453, 1329, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 1594,
	461, 463, 462, 1595, 465, 741, 464, 1330, 466, 467,
	1331, 1596, 468, 469, 470, 471, 472, 473, 476, 1597,
	1598, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 1332, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 1333,
	520, 508, 1599, 303, 1334, 522, 523, 524, 525, 1600,
	742, 526, 743, 529, 530, 1601, 0, 531, 0, 532,
	1602, 1603, 534, 535, 536, 1604, 1605, 537, 538, 744,
	1335, 539, 1336, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 1606, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 1607, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 1608, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 1609, 598,
	599, 597, 600, 601, 1337, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 1610, 626, 627,
	625, 628, 629, 630, 1611, 631, 752, 632, 613, 614,
	633, 634, 1338, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 1612, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 1613, 663, 664, 0, 658,
	649, 1614, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 1615, 673, 756, 757, 758, 759, 1616, 685, 1617,
	674, 676, 677, 678, 679, 760, 680, 761, 1618, 681,
	682, 683, 684, 675, 686, 687, 1619, 1620, 688, 689,
	691, 693, 694, 690, 692, 695, 1621, 696, 1622, 0,
	697, 698, 699, 762, 763, 764, 1623, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 1624, 1625, 1626, 1627,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4538, 304, 305, 307,
	306, 308, 309, 310, 311, 1549, 312, 313, 1550, 1551,
	1552, 0, 1553, 713, 1554, 1555, 1556, 314, 1557, 315,
	316, 317, 1322, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 1558, 718, 327,
	328, 329, 330, 331, 332, 333, 1559, 1560, 0, 334,
	719, 720, 721, 1561, 335, 336, 722, 1562, 1629, 1563,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 1564,
	346, 347, 348, 345, 349, 1565, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 1566, 358, 359, 360, 1323,
	361, 362, 363, 1567, 1568, 1570, 1569, 1571, 1572, 1573,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	1574, 374, 376, 370, 372, 1575, 375, 373, 377, 1576,
	378, 379, 380, 1577, 1578, 381, 382, 383, 1579, 384,
	385, 386, 1580, 387, 388, 389, 1581, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 1582, 301, 1583, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	1584, 409, 410, 411, 1585, 412, 413, 1586, 1324, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 1587, 426, 731, 1588, 732, 427, 1589,
	428, 429, 430, 431, 432, 433, 434, 733, 734, 735,
	527, 1326, 435, 436, 437, 1590, 438, 439, 440, 441,
	442, 0, 0, 0, 302, 443, 444, 445, 1591, 1325,
	736, 446, 528, 447, 737, 738, 1592, 739, 1593, 448,
	449, 451, 1327, 740, 1328, 450, 452, 453, 1329, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 1594,
	461, 463, 462, 1595, 465, 741, 464, 1330, 466, 467,
	1331, 1596, 468, 469, 470, 471, 472, 473, 476, 1597,
	1598, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 1332, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 1333,
	520, 508, 1599, 303, 1334, 522, 523, 524, 525, 1600,
	742, 526, 743, 529, 530, 1601, 0, 531, 0, 532,
	1602, 1603, 534, 535, 536, 1604, 1605, 537, 538, 744,
	1335, 539, 1336, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 1606, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 1607, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 1608, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 1609, 598,
	599, 597, 600, 601, 1337, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 1610, 626, 627,
	625, 628, 629, 630, 1611, 631, 752, 632, 613, 614,
	633, 634, 1338, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 1612, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 1613, 663, 664, 0, 658,
	649, 1614, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 1615, 673, 756, 757, 758, 759, 1616, 685, 1617,
	674, 676, 677, 678, 679, 760, 680, 761, 1618, 681,
	682, 683, 684, 675, 686, 687, 1619, 1620, 688, 689,
	691, 693, 694, 690, 692, 695, 1621, 696, 1622, 0,
	697, 698, 699, 762, 763, 764, 1623, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 1624, 1625, 1626, 1627,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 1543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4788, 304, 305, 307, 306, 308, 309, 310, 311, 1549,
	312, 313, 1550, 1551, 1552, 0, 1553, 713, 1554, 1555,
	1556, 314, 1557, 315, 316, 317, 1322, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 1558, 718, 327, 328, 329, 330, 331, 332, 333,
	1559, 1560, 0, 334, 719, 720, 721, 1561, 335, 336,
	722, 1562, 1629, 1563, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 1564, 346, 347, 348, 345, 349, 1565,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 1566,
	358, 359, 360, 1323, 361, 362, 363, 1567, 1568, 1570,
	1569, 1571, 1572, 1573, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 1574, 374, 376, 370, 372, 1575,
	375, 373, 377, 1576, 378, 379, 380, 1577, 1578, 381,
	382, 383, 1579, 384, 385, 386, 1580, 387, 388, 389,
	1581, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 1582,
	301, 1583, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 1584, 409, 410, 411, 1585, 412,
	413, 1586, 1324, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 1587, 426, 731,
	1588, 732, 427, 1589, 428, 429, 430, 431, 432, 433,
	434, 733, 734, 735, 527, 1326, 435, 436, 437, 1590,
	438, 439, 440, 441, 442, 0, 0, 0, 302, 443,
	444, 445, 1591, 1325, 736, 446, 528, 447, 737, 738,
	1592, 739, 1593, 448, 449, 451, 1327, 740, 1328, 450,
	452, 453, 1329, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 1594, 461, 463, 462, 1595, 465, 741,
	464, 1330, 466, 467, 1331, 1596, 468, 469, 470, 471,
	472, 473, 476, 1597, 1598, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 1332, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 1333, 520, 508, 1599, 303, 1334, 522,
	523, 524, 525, 1600, 742, 526, 743, 529, 530, 1601,
	0, 531, 0, 532, 1602, 1603, 534, 535, 536, 1604,
	1605, 537, 538, 744, 1335, 539, 1336, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 1606, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 1607, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 1608, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 1609, 598, 599, 597, 600, 601, 1337, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 1610, 626, 627, 625, 628, 629, 630, 1611, 631,
	752, 632, 613, 614, 633, 634, 1338, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 1612, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 1613,
	663, 664, 0, 658, 649, 1614, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 1615, 673, 756, 757, 758,
	759, 1616, 685, 1617, 674, 676, 677, 678, 679, 760,
	680, 761, 1618, 681, 682, 683, 684, 675, 686, 687,
	1619, 1620, 688, 689, 691, 693, 694, 690, 692, 695,
	1621, 696, 1622, 0, 697, 698, 699, 762, 763, 764,
	1623, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	1624, 1625, 1626, 1627, 708, 709, 766, 710, 711, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 1543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4645, 304, 305, 307, 306, 308,
	309, 310, 311, 1549, 312, 313, 1550, 1551, 1552, 0,
	1553, 713, 1554, 1555, 1556, 314, 1557, 315, 316, 317,
	1322, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 1558, 718, 327, 328, 329,
	330, 331, 332, 333, 1559, 1560, 0, 334, 719, 720,
	721, 1561, 335, 336, 722, 1562, 1629, 1563, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 1564, 346, 347,
	348, 345, 349, 1565, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 1566, 358, 359, 360, 1323, 361, 362,
	363, 1567, 1568, 1570, 1569, 1571, 1572, 1573, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 1574, 374,
	376, 370, 372, 1575, 375, 373, 377, 1576, 378, 379,
	380, 1577, 1578, 381, 382, 383, 1579, 384, 385, 386,
	1580, 387, 388, 389, 1581, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 1582, 301, 1583, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 1584, 409,
	410, 411, 1585, 412, 413, 1586, 1324, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 1587, 426, 731, 1588, 732, 427, 1589, 428, 429,
	430, 431, 432, 433, 434, 733, 734, 735, 527, 1326,
	435, 436, 437, 1590, 438, 439, 440, 441, 442, 0,
	0, 0, 302, 443, 444, 445, 1591, 1325, 736, 446,
	528, 447, 737, 738, 1592, 739, 1593, 448, 449, 451,
	1327, 740, 1328, 450, 452, 453, 1329, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 1594, 461, 463,
	462, 1595, 465, 741, 464, 1330, 466, 467, 1331, 1596,
	468, 469, 470, 471, 472, 473, 476, 1597, 1598, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 1332,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 1333, 520, 508,
	1599, 303, 1334, 522, 523, 524, 525, 1600, 742, 526,
	743, 529, 530, 1601, 0, 531, 0, 532, 1602, 1603,
	534, 535, 536, 1604, 1605, 537, 538, 744, 1335, 539,
	1336, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 1606, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 1607, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	1608, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 1609, 598, 599, 597,
	600, 601, 1337, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 1610, 626, 627, 625, 628,
	629, 630, 1611, 631, 752, 632, 613, 614, 633, 634,
	1338, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 1612, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 1613, 663, 664, 0, 658, 649, 1614,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 1615,
	673, 756, 757, 758, 759, 1616, 685, 1617, 674, 676,
	677, 678, 679, 760, 680, 761, 1618, 681, 682, 683,
	684, 675, 686, 687, 1619, 1620, 688, 689, 691, 693,
	694, 690, 692, 695, 1621, 696, 1622, 0, 697, 698,
	699, 762, 763, 764, 1623, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 1624, 1625, 1626, 1627, 708, 709,
	766, 710, 711, 712, 0, 0, 0, 0, 0, 0,
	0, 0, 1543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4464, 304,
	305, 307, 306, 308, 309, 310, 311, 1549, 312, 313,
	1550, 1551, 1552, 0, 1553, 713, 1554, 1555, 1556, 314,
	1557, 315, 316, 317, 1322, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 1558,
	718, 327, 328, 329, 330, 331, 332, 333, 1559, 1560,
	0, 334, 719, 720, 721, 1561, 335, 336, 722, 1562,
	1629, 1563, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 1564, 346, 347, 348, 345, 349, 1565, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 1566, 358, 359,
	360, 1323, 361, 362, 363, 1567, 1568, 1570, 1569, 1571,
	1572, 1573, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 1574, 374, 376, 370, 372, 1575, 375, 373,
	377, 1576, 378, 379, 380, 1577, 1578, 381, 382, 383,
	1579, 384, 385, 386, 1580, 387, 388, 389, 1581, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 1582, 301, 1583,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 1584, 409, 410, 411, 1585, 412, 413, 1586,
	1324, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 1587, 426, 731, 1588, 732,
	427, 1589, 428, 429, 430, 431, 432, 433, 434, 733,
	734, 735, 527, 1326, 435, 436, 437, 1590, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	1591, 1325, 736, 446, 528, 447, 737, 738, 1592, 739,
	1593, 448, 449, 451, 1327, 740, 1328, 450, 452, 453,
	1329, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 1594, 461, 463, 462, 1595, 465, 741, 464, 1330,
	466, 467, 1331, 1596, 468, 469, 470, 471, 472, 473,
	476, 1597, 1598, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 1332, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 1333, 520, 508, 1599, 303, 1334, 522, 523, 524,
	525, 1600, 742, 526, 743, 529, 530, 1601, 0, 531,
	0, 532, 1602, 1603, 534, 535, 536, 1604, 1605, 537,
	538, 744, 1335, 539, 1336, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 1606,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 1607, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 1608, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	1609, 598, 599, 597, 600, 601, 1337, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 1610,
	626, 627, 625, 628, 629, 630, 1611, 631, 752, 632,
	613, 614, 633, 634, 1338, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 1612, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 1613, 663, 664,
	0, 658, 649, 1614, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 1615, 673, 756, 757, 758, 759, 1616,
	685, 1617, 674, 676, 677, 678, 679, 760, 680, 761,
	1618, 681, 682, 683, 684, 675, 686, 687, 1619, 1620,
	688, 689, 691, 693, 694, 690, 692, 695, 1621, 696,
	1622, 0, 697, 698, 699, 762, 763, 764, 1623, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 1624, 1625,
	1626, 1627, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 0, 1543, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4108, 304, 305, 307, 306, 308, 309, 310,
	311, 1549, 312, 313, 1550, 1551, 1552, 0, 1553, 713,
	1554, 1555, 1556, 314, 1557, 315, 316, 317, 1322, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 1558, 718, 327, 328, 329, 330, 331,
	332, 333, 1559, 1560, 0, 334, 719, 720, 721, 1561,
	335, 336, 722, 1562, 1629, 1563, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 1564, 346, 347, 348, 345,
	349, 1565, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 1566, 358, 359, 360, 1323, 361, 362, 363, 1567,
	1568, 1570, 1569, 1571, 1572, 1573, 364, 365, 366, 367,
	368, 0, 369, 371, 723, 724, 1574, 374, 376, 370,
	372, 1575, 375, 373, 377, 1576, 378, 379, 380, 1577,
	1578, 381, 382, 383, 1579, 384, 385, 386, 1580, 387,
	388, 389, 1581, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 726, 727,
	404, 1582, 301, 1583, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 1584, 409, 410, 411,
	1585, 412, 413, 1586, 1324, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 1587,
	426, 731, 1588, 732, 427, 1589, 428, 429, 430, 431,
	432, 433, 434, 733, 734, 735, 527, 1326, 435, 436,
	437, 1590, 438, 439, 440, 441, 442, 0, 0, 0,
	302, 443, 444, 445, 1591, 1325, 736, 446, 528, 447,
	737, 738, 1592, 739, 1593, 448, 449, 451, 1327, 740,
	1328, 450, 452, 453, 1329, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 1594, 461, 463, 462, 1595,
	465, 741, 464, 1330, 466, 467, 1331, 1596, 468, 469,
	470, 471, 472, 473, 476, 1597, 1598, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 1332, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 1333, 520, 508, 1599, 303,
	1334, 522, 523, 524, 525, 1600, 742, 526, 743, 529,
	530, 1601, 0, 531, 0, 532, 1602, 1603, 534, 535,
	536, 1604, 1605, 537, 538, 744, 1335, 539, 1336, 745,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 1606, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 748, 560, 749, 561, 562, 1607,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 1608, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 1609, 598, 599, 597, 600, 601,
	1337, 602, 603, 604, 605, 606, 751, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 1610, 626, 627, 625, 628, 629, 630,
	1611, 631, 752, 632, 613, 614, 633, 634, 1338, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 1612,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 755, 659, 660, 661,
	662, 1613, 663, 664, 0, 658, 649, 1614, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 1615, 673, 756,
	757, 758, 759, 1616, 685, 1617, 674, 676, 677, 678,
	679, 760, 680, 761, 1618, 681, 682, 683, 684, 675,
	686, 687, 1619, 1620, 688, 689, 691, 693, 694, 690,
	692, 695, 1621, 696, 1622, 0, 697, 698, 699, 762,
	763, 764, 1623, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 1624, 1625, 1626, 1627, 708, 709, 766, 710,
	711, 712, 0, 0, 0, 0, 0, 0, 0, 0,
	1543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3905, 304, 305, 307,
	306, 308, 309, 310, 311, 1549, 312, 313, 1550, 1551,
	1552, 0, 1553, 713, 1554, 1555, 1556, 314, 1557, 315,
	316, 317, 1322, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 1558, 718, 327,
	328, 329, 330, 331, 332, 333, 1559, 1560, 0, 334,
	719, 720, 721, 1561, 335, 336, 722, 1562, 1629, 1563,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 1564,
	346, 347, 348, 345, 349, 1565, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 1566, 358, 359, 360, 1323,
	361, 362, 363, 1567, 1568, 1570, 1569, 1571, 1572, 1573,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	1574, 374, 376, 370, 372, 1575, 375, 373, 377, 1576,
	378, 379, 380, 1577, 1578, 381, 382, 383, 1579, 384,
	385, 386, 1580, 387, 388, 389, 1581, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 1582, 301, 1583, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	1584, 409, 410, 411, 1585, 412, 413, 1586, 1324, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 1587, 426, 731, 1588, 732, 427, 1589,
	428, 429, 430, 431, 432, 433, 434, 733, 734, 735,
	527, 1326, 435, 436, 437, 1590, 438, 439, 440, 441,
	442, 0, 0, 0, 302, 443, 444, 445, 1591, 1325,
	736, 446, 528, 447, 737, 738, 1592, 739, 1593, 448,
	449, 451, 1327, 740, 1328, 450, 452, 453, 1329, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 1594,
	461, 463, 462, 1595, 465, 741, 464, 1330, 466, 467,
	1331, 1596, 468, 469, 470, 471, 472, 473, 476, 1597,
	1598, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 1332, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 1333,
	520, 508, 1599, 303, 1334, 522, 523, 524, 525, 1600,
	742, 526, 743, 529, 530, 1601, 0, 531, 0, 532,
	1602, 1603, 534, 535, 536, 1604, 1605, 537, 538, 744,
	1335, 539, 1336, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 1606, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 1607, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 1608, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 1609, 598,
	599, 597, 600, 601, 1337, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 1610, 626, 627,
	625, 628, 629, 630, 1611, 631, 752, 632, 613, 614,
	633, 634, 1338, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 1612, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 1613, 663, 664, 0, 658,
	649, 1614, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 1615, 673, 756, 757, 758, 759, 1616, 685, 1617,
	674, 676, 677, 678, 679, 760, 680, 761, 1618, 681,
	682, 683, 684, 675, 686, 687, 1619, 1620, 688, 689,
	691, 693, 694, 690, 692, 695, 1621, 696, 1622, 0,
	697, 698, 699, 762, 763, 764, 1623, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 1624, 1625, 1626, 1627,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 1543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2852, 304, 305, 307, 306, 308, 309, 310, 311, 1549,
	312, 313, 1550, 1551, 1552, 0, 1553, 713, 1554, 1555,
	1556, 314, 1557, 315, 316, 317, 1322, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 1558, 718, 327, 328, 329, 330, 331, 332, 333,
	1559, 1560, 0, 334, 719, 720, 721, 1561, 335, 336,
	722, 1562, 1629, 1563, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 1564, 346, 347, 348, 345, 349, 1565,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 1566,
	358, 359, 360, 1323, 361, 362, 363, 1567, 1568, 1570,
	1569, 1571, 1572, 1573, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 1574, 374, 376, 370, 372, 1575,
	375, 373, 377, 1576, 378, 379, 380, 1577, 1578, 381,
	382, 383, 1579, 384, 385, 386, 1580, 387, 388, 389,
	1581, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 1582,
	301, 1583, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 1584, 409, 410, 411, 1585, 412,
	413, 1586, 1324, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 1587, 426, 731,
	1588, 732, 427, 1589, 428, 429, 430, 431, 432, 433,
	434, 733, 734, 735, 527, 1326, 435, 436, 437, 1590,
	438, 439, 440, 441, 442, 0, 0, 0, 302, 443,
	444, 445, 1591, 1325, 736, 446, 528, 447, 737, 738,
	1592, 739, 1593, 448, 449, 451, 1327, 740, 1328, 450,
	452, 453, 1329, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 1594, 461, 463, 462, 1595, 465, 741,
	464, 1330, 466, 467, 1331, 1596, 468, 469, 470, 471,
	472, 473, 476, 1597, 1598, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 1332, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 1333, 520, 508, 1599, 303, 1334, 522,
	523, 524, 525, 1600, 742, 526, 743, 529, 530, 1601,
	0, 531, 0, 532, 1602, 1603, 534, 535, 536, 1604,
	1605, 537, 538, 744, 1335, 539, 1336, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 1606, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 1607, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 1608, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 1609, 598, 599, 597, 600, 601, 1337, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 1610, 626, 627, 625, 628, 629, 630, 1611, 631,
	752, 632, 613, 614, 633, 634, 1338, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 1612, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 1613,
	663, 664, 0, 658, 649, 1614, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 1615, 673, 756, 757, 758,
	759, 1616, 685, 1617, 674, 676, 677, 678, 679, 760,
	680, 761, 1618, 681, 682, 683, 684, 675, 686, 687,
	1619, 1620, 688, 689, 691, 693, 694, 690, 692, 695,
	1621, 696, 1622, 0, 697, 698, 699, 762, 763, 764,
	1623, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	1624, 1625, 1626, 1627, 708, 709, 766, 710, 711, 712,
	0, 0, 0, 0, 0, 0, 1540, 0, 1543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2467, 304, 305, 307, 306, 308,
	309, 310, 311, 1549, 312, 313, 1550, 1551, 1552, 0,
	1553, 713, 1554, 1555, 1556, 314, 1557, 315, 316, 317,
	1322, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 1558, 718, 327, 328, 329,
	330, 331, 332, 333, 1559, 1560, 0, 334, 719, 720,
	721, 1561, 335, 336, 722, 1562, 1629, 1563, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 1564, 346, 347,
	348, 345, 349, 1565, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 1566, 358, 359, 360, 1323, 361, 362,
	363, 1567, 1568, 1570, 1569, 1571, 1572, 1573, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 1574, 374,
	376, 370, 372, 1575, 375, 373, 377, 1576, 378, 379,
	380, 1577, 1578, 381, 382, 383, 1579, 384, 385, 386,
	1580, 387, 388, 389, 1581, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 1582, 301, 1583, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 1584, 409,
	410, 411, 1585, 412, 413, 1586, 1324, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 1587, 426, 731, 1588, 732, 427, 1589, 428, 429,
	430, 431, 432, 433, 434, 733, 734, 735, 527, 1326,
	435, 436, 437, 1590, 438, 439, 440, 441, 442, 0,
	0, 0, 302, 443, 444, 445, 1591, 1325, 736, 446,
	528, 447, 737, 738, 1592, 739, 1593, 448, 449, 451,
	1327, 740, 1328, 450, 452, 453, 1329, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 1594, 461, 463,
	462, 1595, 465, 741, 464, 1330, 466, 467, 1331, 1596,
	468, 469, 470, 471, 472, 473, 476, 1597, 1598, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 1332,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 1333, 520, 508,
	1599, 303, 1334, 522, 523, 524, 525, 1600, 742, 526,
	743, 529, 530, 1601, 0, 531, 0, 532, 1602, 1603,
	534, 535, 536, 1604, 1605, 537, 538, 744, 1335, 539,
	1336, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 1606, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 1607, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	1608, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 1609, 598, 599, 597,
	600, 601, 1337, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 1610, 626, 627, 625, 628,
	629, 630, 1611, 631, 752, 632, 613, 614, 633, 634,
	1338, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 1612, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 1613, 663, 664, 0, 658, 649, 1614,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 1615,
	673, 756, 757, 758, 759, 1616, 685, 1617, 674, 676,
	677, 678, 679, 760, 680, 761, 1618, 681, 682, 683,
	684, 675, 686, 687, 1619, 1620, 688, 689, 691, 693,
	694, 690, 692, 695, 1621, 696, 1622, 0, 697, 698,
	699, 762, 763, 764, 1623, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 1624, 1625, 1626, 1627, 708, 709,
	766, 710, 711, 712, 1543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 1549,
	312, 313, 1550, 1551, 1552, 0, 1553, 713, 1554, 1555,
	1556, 314, 1557, 315, 316, 317, 1322, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 1558, 718, 327, 328, 329, 330, 331, 332, 333,
	1559, 1560, 0, 334, 719, 720, 721, 1561, 335, 336,
	722, 1562, 1629, 1563, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 1564, 346, 347, 348, 345, 349, 1565,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 1566,
	358, 359, 360, 1323, 361, 362, 363, 1567, 1568, 1570,
	1569, 1571, 1572, 1573, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 1574, 374, 376, 370, 372, 1575,
	375, 373, 377, 1576, 378, 379, 380, 1577, 1578, 381,
	382, 383, 1579, 384, 385, 386, 1580, 387, 388, 389,
	1581, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 1582,
	301, 1583, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 1584, 409, 410, 411, 1585, 412,
	413, 1586, 1324, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 1587, 426, 731,
	1588, 732, 427, 1589, 428, 429, 430, 431, 432, 433,
	434, 733, 734, 735, 527, 1326, 435, 436, 437, 1590,
	438, 439, 440, 441, 442, 0, 0, 0, 302, 443,
	444, 445, 1591, 1325, 736, 446, 528, 447, 737, 738,
	1592, 739, 1593, 448, 449, 451, 1327, 740, 1328, 450,
	452, 453, 1329, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 1594, 461, 463, 462, 1595, 465, 741,
	464, 1330, 466, 467, 1331, 1596, 468, 469, 470, 471,
	472, 473, 476, 1597, 1598, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 1332, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 1333, 520, 508, 1599, 303, 1334, 522,
	523, 524, 525, 1600, 742, 526, 743, 529, 530, 1601,
	0, 531, 0, 532, 1602, 1603, 534, 535, 536, 1604,
	1605, 537, 538, 744, 1335, 539, 1336, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 1606, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 1607, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 1608, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 1609, 598, 599, 597, 600, 601, 1337, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 1610, 626, 627, 625, 628, 629, 630, 1611, 631,
	752, 632, 613, 614, 633, 634, 1338, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 1612, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 1613,
	663, 664, 0, 658, 649, 1614, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 1615, 673, 756, 757, 758,
	759, 1616, 685, 1617, 674, 676, 677, 678, 679, 760,
	680, 761, 1618, 681, 682, 683, 684, 675, 686, 687,
	1619, 1620, 688, 689, 691, 693, 694, 690, 692, 695,
	1621, 696, 1622, 0, 697, 698, 699, 762, 763, 764,
	1623, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	1624, 1625, 1626, 1627, 708, 709, 766, 710, 711, 712,
	2827, 0, 1258, 1230, 1231, 1232, 1228, 1229, 1241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 2824, 312, 313,
	0, 0, 0, 0, 0, 1282, 1246, 0, 0, 314,
	0, 315, 316, 317, 1322, 318, 319, 320, 321, 322,
	323, 324, 714, 1295, 0, 325, 1302, 326, 1301, 0,
	1312, 327, 328, 329, 330, 331, 332, 333, 1248, 1281,
	1213, 334, 1342, 1343, 721, 0, 335, 336, 1288, 0,
	1269, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 1323, 361, 362, 363, 1272, 1270, 1271, 1278, 1274,
	1273, 1277, 364, 365, 366, 367, 368, 1305, 369, 371,
	1299, 1298, 1218, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 2825, 0, 381, 1290, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 1224, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 1313, 1314, 404, 1237, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 1297, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	1324, 414, 415, 416, 1310, 1311, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 1320, 0, 1247,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 1283,
	1284, 1287, 527, 1326, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 1325, 736, 446, 528, 447, 1292, 1293, 0, 1253,
	0, 448, 449, 451, 1327, 1285, 1328, 450, 452, 453,
	1329, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 1321, 464, 1330,
	466, 467, 1331, 0, 468, 469, 470, 471, 472, 473,
	476, 1276, 1275, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 1332, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 1333, 520, 508, 1215, 303, 1334, 522, 523, 524,
	525, 1238, 1286, 526, 1300, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 1335, 539, 1336, 1315, 540, 541, 1225, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	1316, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 1296, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 1337, 602, 603, 604,
	605, 606, 1226, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 1279, 631, 752, 632,
	613, 614, 633, 634, 1338, 635, 636, 637, 638, 639,
	640, 641, 1294, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 1341, 652, 653,
	654, 655, 1317, 659, 660, 661, 662, 0, 663, 664,
	1212, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 1306, 1307, 1308, 1309, 0,
	685, 0, 674, 676, 677, 678, 679, 1318, 680, 1319,
	1236, 681, 682, 683, 684, 675, 686, 687, 0, 1219,
	688, 689, 691, 693, 694, 690, 692, 695, 1280, 696,
	0, 0, 697, 698, 699, 762, 1303, 1340, 2823, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 0, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 1216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1211, 0, 0, 0, 0, 0, 0,
	1209, 1210, 2826, 0, 0, 0, 0, 0, 0, 0,
	1242, 2822, 0, 1200, 1240, 1258, 1230, 1231, 1232, 1228,
	1229, 1241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 1282, 1246,
	0, 0, 314, 0, 315, 316, 317, 1322, 318, 319,
	320, 321, 322, 323, 324, 714, 1295, 0, 325, 1302,
	326, 1301, 0, 1312, 327, 328, 329, 330, 331, 332,
	333, 1248, 1281, 1213, 334, 1342, 1343, 721, 0, 335,
	336, 1288, 0, 1269, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 1323, 361, 362, 363, 1272, 1270,
	1271, 1278, 1274, 1273, 1277, 364, 365, 366, 367, 368,
	1305, 369, 371, 1299, 1298, 1218, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 1290, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 1224, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 1313, 1314, 404,
	1237, 301, 0, 0, 0, 0, 0, 405, 406, 407,
	1297, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 1324, 414, 415, 416, 1310, 1311, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	1320, 0, 1247, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 1283, 1284, 1287, 527, 1326, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 0, 1325, 736, 446, 528, 447, 1292,
	1293, 0, 1253, 0, 448, 449, 451, 1327, 1285, 1328,
	450, 452, 453, 1329, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	1321, 464, 1330, 466, 467, 1331, 0, 468, 469, 470,
	471, 472, 473, 476, 1276, 1275, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 1332, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 1333, 520, 508, 1215, 303, 1334,
	522, 523, 524, 525, 1238, 1286, 526, 1300, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 1335, 539, 1336, 1315, 540,
	541, 1225, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 1316, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 1296, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 1337,
	602, 603, 604, 605, 606, 1226, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 257, 626, 627, 625, 628, 629, 630, 1279,
	631, 752, 632, 613, 614, 633, 634, 1338, 635, 636,
	637, 638, 639, 640, 641, 1294, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	1341, 652, 653, 654, 655, 1317, 659, 660, 661, 662,
	0, 663, 664, 1212, 658, 649, 259, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 1306, 1307,
	1308, 1309, 0, 685, 0, 674, 676, 677, 678, 679,
	1318, 680, 1319, 1236, 681, 682, 683, 684, 675, 686,
	687, 0, 1219, 688, 689, 691, 693, 694, 690, 692,
	695, 1280, 696, 0, 0, 697, 698, 699, 1790, 1303,
	1340, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 0, 0, 0, 251, 708, 709, 766, 710, 711,
	712, 1216, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1211, 0, 0, 0,
	0, 0, 0, 1209, 1210, 1258, 1230, 1231, 1232, 1228,
	1229, 1241, 0, 2058, 2056, 0, 0, 1240, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 1282, 1246,
	0, 0, 314, 0, 315, 316, 317, 1322, 318, 319,
	320, 321, 322, 323, 324, 714, 1295, 0, 325, 1302,
	326, 1301, 0, 1312, 327, 328, 329, 330, 331, 332,
	333, 1248, 1281, 1213, 334, 1342, 1343, 721, 0, 335,
	336, 1288, 0, 1269, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 1323, 361, 362, 363, 1272, 1270,
	1271, 1278, 1274, 1273, 1277, 364, 365, 366, 367, 368,
	1305, 369, 371, 1299, 1298, 1218, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 1290, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 1224, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 1313, 1314, 404,
	1237, 301, 0, 0, 0, 0, 0, 405, 406, 407,
	1297, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 1324, 414, 415, 416, 1310, 1311, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	1320, 0, 1247, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 1283, 1284, 1287, 527, 1326, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 0, 1325, 736, 446, 528, 447, 1292,
	1293, 0, 1253, 0, 448, 449, 451, 1327, 1285, 1328,
	450, 452, 453, 1329, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	1321, 464, 1330, 466, 467, 1331, 0, 468, 469, 470,
	471, 472, 473, 476, 1276, 1275, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 1332, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 1333, 520, 508, 1215, 303, 1334,
	522, 523, 524, 525, 1238, 1286, 526, 1300, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 1335, 539, 1336, 1315, 540,
	541, 1225, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 1316, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 1296, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 1337,
	602, 603, 604, 605, 606, 1226, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 257, 626, 627, 625, 628, 629, 630, 1279,
	631, 752, 632, 613, 614, 633, 634, 1338, 635, 636,
	637, 638, 639, 640, 641, 1294, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	1341, 652, 653, 654, 655, 1317, 659, 660, 661, 662,
	0, 663, 664, 1212, 658, 649, 259, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 1306, 1307,
	1308, 1309, 0, 685, 0, 674, 676, 677, 678, 679,
	1318, 680, 1319, 1236, 681, 682, 683, 684, 675, 686,
	687, 0, 1219, 688, 689, 691, 693, 694, 690, 692,
	695, 1280, 696, 0, 0, 697, 698, 699, 1790, 1303,
	1340, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 0, 0, 0, 251, 708, 709, 766, 710, 711,
	712, 1216, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1211, 0, 0, 0,
	0, 0, 0, 1209, 1210, 1258, 1230, 1231, 1232, 1228,
	1229, 1241, 0, 2058, 3519, 0, 0, 1240, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 1282, 1246,
	0, 0, 314, 0, 315, 316, 317, 1322, 318, 319,
	320, 321, 322, 323, 324, 714, 1295, 0, 325, 1302,
	326, 1301, 0, 1312, 327, 328, 329, 330, 331, 332,
	333, 1248, 1281, 1213, 334, 1342, 1343, 721, 0, 335,
	336, 1288, 0, 1269, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 1323, 361, 362, 363, 1272, 1270,
	1271, 1278, 1274, 1273, 1277, 364, 365, 366, 367, 368,
	1305, 369, 371, 1299, 1298, 1218, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 1290, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 1224, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 1313, 1314, 404,
	1237, 301, 0, 0, 0, 0, 0, 405, 406, 407,
	1297, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 1324, 414, 415, 416, 1310, 1311, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	1320, 0, 1247, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 1283, 1284, 1287, 527, 1326, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 0, 1325, 736, 446, 528, 447, 1292,
	1293, 0, 1253, 0, 448, 449, 451, 1327, 1285, 1328,
	450, 452, 453, 1329, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	1321, 464, 1330, 466, 467, 1331, 0, 468, 469, 470,
	471, 472, 473, 476, 1276, 1275, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 1332, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 1333, 520, 508, 1215, 303, 1334,
	522, 523, 524, 525, 1238, 1286, 526, 1300, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 1335, 539, 1336, 1315, 540,
	541, 1225, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 1316, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 1296, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 1337,
	602, 603, 604, 605, 606, 1226, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 257, 626, 627, 625, 628, 629, 630, 1279,
	631, 752, 632, 613, 614, 633, 634, 1338, 635, 636,
	637, 638, 639, 640, 641, 1294, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	1341, 652, 653, 654, 655, 1317, 659, 660, 661, 662,
	0, 663, 664, 1212, 658, 649, 259, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 1306, 1307,
	1308, 1309, 0, 685, 0, 674, 676, 677, 678, 679,
	1318, 680, 1319, 1236, 681, 682, 683, 684, 675, 686,
	687, 0, 1219, 688, 689, 691, 693, 694, 690, 692,
	695, 1280, 696, 0, 0, 697, 698, 699, 1790, 1303,
	1340, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 0, 0, 0, 251, 708, 709, 766, 710, 711,
	712, 1216, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1211, 0, 0, 0,
	0, 0, 0, 1209, 1210, 1258, 1230, 1231, 1232, 1228,
	1229, 1241, 0, 2058, 2056, 0, 0, 1240, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 1282, 1246,
	0, 0, 314, 0, 315, 316, 317, 1322, 318, 319,
	320, 321, 322, 323, 324, 714, 1295, 0, 325, 1302,
	326, 1301, 2957, 1312, 327, 328, 329, 330, 331, 332,
	333, 1248, 1281, 1213, 334, 1342, 1343, 721, 0, 335,
	336, 1288, 0, 1269, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 1323, 361, 362, 363, 1272, 1270,
	1271, 1278, 1274, 1273, 1277, 364, 365, 366, 367, 368,
	1305, 369, 371, 1299, 1298, 1218, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 1290, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 1224, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 1313, 1314, 404,
	1237, 301, 0, 0, 0, 0, 0, 405, 406, 407,
	1297, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 2962, 1324, 414, 415, 416, 1310, 1311, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	1320, 0, 1247, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 1283, 1284, 1287, 527, 1326, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 0, 1325, 736, 446, 528, 447, 1292,
	1293, 0, 1253, 0, 448, 449, 451, 1327, 1285, 1328,
	450, 452, 453, 1329, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 2958, 465,
	1321, 464, 1330, 466, 467, 1331, 0, 468, 469, 470,
	471, 472, 473, 476, 1276, 1275, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 1332, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 1333, 520, 508, 1215, 303, 1334,
	522, 523, 524, 525, 1238, 1286, 526, 1300, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 1335, 539, 1336, 1315, 540,
	541, 1225, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 1316, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 1296, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 1337,
	602, 603, 604, 605, 606, 1226, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 1279,
	631, 752, 632, 613, 614, 633, 634, 1338, 635, 636,
	637, 638, 639, 640, 641, 1294, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	1341, 652, 653, 654, 655, 1317, 659, 660, 661, 662,
	0, 663, 664, 1212, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 1306, 1307,
	1308, 1309, 0, 685, 2959, 674, 676, 677, 678, 679,
	1318, 680, 1319, 1236, 681, 682, 683, 684, 675, 686,
	687, 0, 1219, 688, 689, 691, 693, 694, 690, 692,
	695, 1280, 696, 0, 0, 697, 698, 699, 762, 1303,
	1340, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 0, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 1216, 0, 0, 0, 0, 2872, 0, 1258, 1230,
	1231, 1232, 1228, 1229, 1241, 0, 1211, 0, 0, 0,
	0, 0, 0, 1209, 1210, 304, 305, 307, 306, 308,
	309, 310, 311, 1242, 312, 313, 0, 1240, 0, 0,
	0, 1282, 1246, 0, 0, 314, 0, 315, 316, 317,
	1322, 318, 319, 320, 321, 322, 323, 324, 714, 1295,
	0, 325, 1302, 326, 1301, 0, 1312, 327, 328, 329,
	330, 331, 332, 333, 1248, 1281, 1213, 334, 1342, 1343,
	721, 0, 335, 336, 1288, 0, 1269, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 1323, 361, 362,
	363, 1272, 1270, 1271, 1278, 1274, 1273, 1277, 364, 365,
	366, 367, 368, 1305, 369, 371, 1299, 1298, 1218, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 1290, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 1224, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	1313, 1314, 404, 1237, 301, 0, 0, 0, 0, 0,
	405, 406, 407, 1297, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 1324, 414, 415, 416,
	1310, 1311, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 1320, 0, 1247, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 1283, 1284, 1287, 527, 1326,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 302, 443, 444, 445, 0, 1325, 736, 446,
	528, 447, 1292, 1293, 0, 1253, 0, 448, 449, 451,
	1327, 1285, 1328, 450, 452, 453, 1329, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 1321, 464, 1330, 466, 467, 1331, 0,
	468, 469, 470, 471, 472, 473, 476, 1276, 1275, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 1332,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 1333, 520, 508,
	1215, 303, 1334, 522, 523, 524, 525, 1238, 1286, 526,
	1300, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 1335, 539,
	1336, 1315, 540, 541, 1225, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 1316, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 1296, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 1337, 602, 603, 604, 605, 606, 1226, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 1279, 631, 752, 632, 613, 614, 633, 634,
	1338, 635, 636, 637, 638, 639, 640, 641, 1294, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 1341, 652, 653, 654, 655, 1317, 659,
	660, 661, 662, 0, 663, 664, 1212, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 1306, 1307, 1308, 1309, 0, 685, 0, 674, 676,
	677, 678, 679, 1318, 680, 1319, 1236, 681, 682, 683,
	684, 675, 686, 687, 0, 1219, 688, 689, 691, 693,
	694, 690, 692, 695, 1280, 696, 0, 0, 697, 698,
	699, 762, 1303, 1340, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 0, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 1216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1211,
	0, 0, 0, 0, 0, 0, 1209, 1210, 0, 0,
	0, 0, 0, 0, 0, 0, 1242, 2870, 0, 2869,
	1240, 1258, 1230, 1231, 1232, 1228, 1229, 1241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 0, 1282, 1246, 0, 0, 314, 0,
	315, 316, 317, 1322, 318, 319, 320, 321, 322, 323,
	324, 714, 1295, 0, 325, 1302, 326, 1301, 0, 1312,
	327, 328, 329, 330, 331, 332, 333, 1248, 1281, 1213,
	334, 1342, 1343, 721, 0, 335, 336, 1288, 0, 1269,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	1323, 361, 362, 363, 1272, 1270, 1271, 1278, 1274, 1273,
	1277, 364, 365, 366, 367, 368, 1305, 369, 371, 1299,
	1298, 1218, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 1290, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	1224, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 1313, 1314, 404, 1237, 301, 0, 0,
	0, 0, 0, 405, 406, 407, 1297, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 1324,
	414, 415, 416, 1310, 1311, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 1320, 0, 1247, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 1283, 1284,
	1287, 527, 1326, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 302, 443, 444, 445, 0,
	1325, 736, 446, 528, 447, 1292, 1293, 0, 1253, 0,
	448, 449, 451, 1327, 1285, 1328, 450, 452, 453, 1329,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 1321, 464, 1330, 466,
	467, 1331, 0, 468, 469, 470, 471, 472, 473, 476,
	1276, 1275, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 1332, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	1333, 520, 508, 1215, 303, 1334, 522, 523, 524, 525,
	1238, 1286, 526, 1300, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 1335, 539, 1336, 1315, 540, 541, 1225, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 1316,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 1296, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 1337, 602, 603, 604, 605,
	606, 1226, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 1279, 631, 752, 632, 613,
	614, 633, 634, 1338, 635, 636, 637, 638, 639, 640,
	641, 1294, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 1341, 652, 653, 654,
	655, 1317, 659, 660, 661, 662, 0, 663, 664, 1212,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 1306, 1307, 1308, 1309, 0, 685,
	0, 674, 676, 677, 678, 679, 1318, 680, 1319, 1236,
	681, 682, 683, 684, 675, 686, 687, 0, 1219, 688,
	689, 691, 693, 694, 690, 692, 695, 1280, 696, 0,
	0, 697, 698, 699, 762, 1303, 1340, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 0, 0, 0,
	0, 708, 709, 766, 710, 711, 712, 1216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1211, 0, 0, 0, 0, 0, 0, 1209,
	1210, 0, 0, 0, 0, 0, 0, 0, 0, 1242,
	2867, 0, 2866, 1240, 1258, 1230, 1231, 1232, 1228, 1229,
	1241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 0, 1282, 1246, 0,
	0, 314, 0, 315, 316, 317, 1322, 318, 319, 320,
	321, 322, 323, 324, 714, 1295, 0, 325, 1302, 326,
	1301, 0, 1312, 327, 328, 329, 330, 331, 332, 333,
	1248, 1281, 1213, 334, 1342, 1343, 721, 0, 335, 336,
	1288, 0, 1269, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 1323, 361, 362, 363, 1272, 1270, 1271,
	1278, 1274, 1273, 1277, 364, 365, 366, 367, 368, 1305,
	369, 371, 1299, 1298, 1218, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	1290, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 1224, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 1313, 1314, 404, 1237,
	301, 0, 0, 0, 0, 0, 405, 406, 407, 1297,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 1324, 414, 415, 416, 1310, 1311, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 1320,
	0, 1247, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 1283, 1284, 1287, 527, 1326, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 302, 443,
	444, 445, 0, 1325, 736, 446, 528, 447, 1292, 1293,
	0, 1253, 0, 448, 449, 451, 1327, 1285, 1328, 450,
	452, 453, 1329, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 1321,
	464, 1330, 466, 467, 1331, 0, 468, 469, 470, 471,
	472, 473, 476, 1276, 1275, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 1332, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 1333, 520, 508, 1215, 303, 1334, 522,
	523, 524, 525, 1238, 1286, 526, 1300, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 1335, 539, 1336, 1315, 540, 541,
	1225, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 1316, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	1296, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 1337, 602,
	603, 604, 605, 606, 1226, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 1279, 631,
	752, 632, 613, 614, 633, 634, 1338, 635, 636, 637,
	638, 639, 640, 641, 1294, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 1341,
	652, 653, 654, 655, 1317, 659, 660, 661, 662, 0,
	663, 664, 1212, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 1306, 1307, 1308,
	1309, 0, 685, 0, 674, 676, 677, 678, 679, 1318,
	680, 1319, 1236, 681, 682, 683, 684, 675, 686, 687,
	0, 1219, 688, 689, 691, 693, 694, 690, 692, 695,
	1280, 696, 0, 0, 697, 698, 699, 762, 1303, 1340,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	0, 0, 0, 0, 708, 709, 766, 710, 711, 712,
	1216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1211, 0, 0, 0, 0,
	0, 0, 1209, 1210, 0, 0, 0, 0, 0, 0,
	0, 0, 1242, 2864, 0, 2863, 1240, 1258, 1230, 1231,
	1232, 1228, 1229, 1241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	1282, 1246, 0, 0, 314, 0, 315, 316, 317, 1322,
	318, 319, 320, 321, 322, 323, 324, 714, 1295, 0,
	325, 1302, 326, 1301, 0, 1312, 327, 328, 329, 330,
	331, 332, 333, 1248, 1281, 1213, 334, 1342, 1343, 721,
	0, 335, 336, 1288, 0, 1269, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 1323, 361, 362, 363,
	1272, 1270, 1271, 1278, 1274, 1273, 1277, 364, 365, 366,
	367, 368, 1305, 369, 371, 1299, 1298, 1218, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 1290, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 1224, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 1313,
	1314, 404, 1237, 301, 0, 0, 0, 0, 0, 405,
	406, 407, 1297, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 1324, 414, 415, 416, 1310,
	1311, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 1320, 0, 1247, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 1283, 1284, 1287, 527, 1326, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 302, 443, 444, 445, 0, 1325, 736, 446, 528,
	447, 1292, 1293, 0, 1253, 0, 448, 449, 451, 1327,
	1285, 1328, 450, 452, 453, 1329, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 1321, 464, 1330, 466, 467, 1331, 0, 468,
	469, 470, 471, 472, 473, 476, 1276, 1275, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 1332, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 1333, 520, 508, 1215,
	303, 1334, 522, 523, 524, 525, 1238, 1286, 526, 1300,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 1335, 539, 1336,
	1315, 540, 541, 1225, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 1316, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 1296, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 1337, 602, 603, 604, 605, 606, 1226, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 1279, 631, 752, 632, 613, 614, 633, 634, 1338,
	635, 636, 637, 638, 639, 640, 641, 1294, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 1341, 652, 653, 654, 655, 1317, 659, 660,
	661, 662, 0, 663, 664, 1212, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	1306, 1307, 1308, 1309, 0, 685, 0, 674, 676, 677,
	678, 679, 1318, 680, 1319, 1236, 681, 682, 683, 684,
	675, 686, 687, 0, 1219, 688, 689, 691, 693, 694,
	690, 692, 695, 1280, 696, 0, 0, 697, 698, 699,
	762, 1303, 1340, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 0, 0, 0, 0, 708, 709, 766,
	710, 711, 712, 1216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1211, 0,
	0, 0, 0, 0, 0, 1209, 1210, 0, 0, 0,
	0, 0, 0, 0, 0, 1242, 2861, 0, 1892, 1240,
	1258, 1230, 1231, 1232, 1228, 1229, 1241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 0, 1282, 1246, 0, 0, 314, 0, 315,
	316, 317, 1322, 318, 319, 320, 321, 322, 323, 324,
	714, 1295, 0, 325, 1302, 326, 1301, 0, 1312, 327,
	328, 329, 330, 331, 332, 333, 1248, 1281, 1213, 334,
	1342, 1343, 721, 0, 335, 336, 1288, 0, 1269, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 1323,
	361, 362, 363, 1272, 1270, 1271, 1278, 1274, 1273, 1277,
	364, 365, 366, 367, 368, 1305, 369, 371, 1299, 1298,
	1218, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 1290, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 1224,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 1313, 1314, 404, 1237, 301, 0, 0, 0,
	0, 0, 405, 406, 407, 1297, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 1324, 414,
	415, 416, 1310, 1311, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 1320, 0, 1247, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 1283, 1284, 1287,
	527, 1326, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 302, 443, 444, 445, 0, 1325,
	736, 446, 528, 447, 1292, 1293, 0, 1253, 0, 448,
	449, 451, 1327, 1285, 1328, 450, 452, 453, 1329, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 1321, 464, 1330, 466, 467,
	1331, 0, 468, 469, 470, 471, 472, 473, 476, 1276,
	1275, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 1332, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 1333,
	520, 508, 1215, 303, 1334, 522, 523, 524, 525, 1238,
	1286, 526, 1300, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	1335, 539, 1336, 1315, 540, 541, 1225, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 1316, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 1296, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 1337, 602, 603, 604, 605, 606,
	1226, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 1279, 631, 752, 632, 613, 614,
	633, 634, 1338, 635, 636, 637, 638, 639, 640, 641,
	1294, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 1341, 652, 653, 654, 655,
	1317, 659, 660, 661, 662, 0, 663, 664, 1212, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 1306, 1307, 1308, 1309, 0, 685, 0,
	674, 676, 677, 678, 679, 1318, 680, 1319, 1236, 681,
	682, 683, 684, 675, 686, 687, 0, 1219, 688, 689,
	691, 693, 694, 690, 692, 695, 1280, 696, 0, 0,
	697, 698, 699, 762, 1303, 1340, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 1891, 0, 0, 0,
	708, 709, 766, 710, 711, 712, 1216, 0, 0, 0,
	0, 1205, 0, 1258, 1230, 1231, 1232, 1228, 1229, 1241,
	0, 1211, 0, 0, 0, 0, 0, 0, 1209, 1210,
	304, 305, 307, 306, 308, 309, 310, 311, 1242, 312,
	313, 0, 1240, 0, 0, 0, 1282, 1246, 0, 0,
	314, 0, 315, 316, 317, 1322, 318, 319, 320, 321,
	322, 323, 324, 714, 1295, 0, 325, 1302, 326, 1301,
	0, 1312, 327, 328, 329, 330, 331, 332, 333, 1248,
	1281, 1213, 334, 1342, 1343, 721, 0, 335, 336, 1288,
	0, 1269, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 1323, 361, 362, 363, 1272, 1270, 1271, 1278,
	1274, 1273, 1277, 364, 365, 366, 367, 368, 1305, 369,
	371, 1299, 1298, 1218, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 1290,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 1224, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 1313, 1314, 404, 1237, 301,
	0, 0, 0, 0, 0, 405, 406, 407, 1297, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 1324, 414, 415, 416, 1310, 1311, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 1320, 0,
	1247, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	1283, 1284, 1287, 527, 1326, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 302, 443, 444,
	445, 0, 1325, 736, 446, 528, 447, 1292, 1293, 0,
	1253, 0, 448, 449, 451, 1327, 1285, 1328, 450, 452,
	453, 1329, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 1321, 464,
	1330, 466, 467, 1331, 0, 468, 469, 470, 471, 472,
	473, 476, 1276, 1275, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 1332, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 1333, 520, 508, 1215, 303, 1334, 522, 523,
	524, 525, 1238, 1286, 526, 1300, 529, 530, 0, 0,
	531, 0, 532, 1220, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 1335, 539, 1336, 1315, 540, 541, 1225,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 1316, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 1296,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 1337, 602, 603,
	604, 605, 606, 1226, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 1279, 631, 752,
	632, 613, 614, 633, 634, 1338, 635, 636, 637, 638,
	639, 640, 641, 1294, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 1341, 652,
	653, 654, 655, 1317, 659, 660, 661, 662, 0, 663,
	664, 1212, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 1306, 1307, 1308, 1309,
	0, 685, 0, 674, 676, 677, 678, 679, 1318, 680,
	1319, 1236, 681, 682, 683, 684, 675, 686, 687, 0,
	1219, 688, 689, 691, 693, 694, 690, 692, 695, 1280,
	696, 0, 0, 697, 698, 699, 762, 1303, 1340, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 0,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 1216,
	0, 0, 0, 0, 0, 0, 1258, 1230, 1231, 1232,
	1228, 1229, 1241, 0, 1211, 0, 0, 0, 0, 0,
	0, 1209, 1210, 304, 305, 307, 306, 308, 309, 310,
	311, 1242, 312, 313, 0, 1240, 0, 0, 0, 1282,
	1246, 0, 0, 314, 0, 315, 316, 317, 1322, 318,
	319, 320, 321, 322, 323, 324, 714, 1295, 0, 325,
	1302, 326, 1301, 0, 1312, 327, 328, 329, 330, 331,
	332, 333, 1248, 1281, 1213, 334, 1342, 1343, 721, 0,
	335, 336, 1288, 0, 1269, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 5171, 356,
	357, 0, 358, 359, 360, 1323, 361, 362, 363, 1272,
	1270, 1271, 1278, 1274, 1273, 1277, 364, 365, 366, 367,
	368, 1305, 369, 371, 1299, 1298, 1218, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 1290, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 1224, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 1313, 1314,
	404, 1237, 301, 0, 0, 0, 0, 0, 405, 406,
	407, 1297, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 1324, 414, 415, 416, 1310, 1311,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 1320, 0, 1247, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 1283, 1284, 1287, 527, 1326, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	302, 443, 444, 445, 0, 1325, 736, 446, 528, 447,
	1292, 1293, 0, 1253, 0, 448, 449, 451, 1327, 1285,
	1328, 450, 452, 453, 1329, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 1321, 464, 1330, 466, 467, 1331, 0, 468, 469,
	470, 471, 472, 473, 476, 1276, 1275, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 1332, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 1333, 520, 508, 1215, 303,
	1334, 522, 523, 524, 525, 1238, 1286, 526, 1300, 529,
	530, 0, 0, 531, 0, 532, 1220, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 1335, 539, 1336, 1315,
	540, 541, 1225, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 1316, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 1296, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	1337, 602, 603, 604, 605, 606, 1226, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	1279, 631, 752, 632, 613, 614, 633, 634, 1338, 635,
	636, 637, 638, 639, 640, 641, 1294, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 1341, 652, 653, 654, 655, 1317, 659, 660, 661,
	662, 0, 663, 664, 1212, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 1306,
	1307, 1308, 1309, 0, 685, 0, 674, 676, 677, 678,
	679, 1318, 680, 1319, 1236, 681, 682, 683, 684, 675,
	686, 687, 0, 1219, 688, 689, 691, 693, 694, 690,
	692, 695, 1280, 696, 0, 0, 697, 698, 699, 762,
	1303, 1340, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 0, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 1216, 0, 0, 0, 0, 0, 0, 1258,
	1230, 1231, 1232, 1228, 1229, 1241, 0, 1211, 0, 0,
	0, 0, 0, 0, 1209, 1210, 304, 305, 307, 306,
	308, 309, 310, 311, 1242, 312, 313, 0, 1240, 0,
	0, 0, 1282, 1246, 0, 0, 314, 0, 315, 316,
	317, 1322, 318, 319, 320, 321, 322, 323, 324, 714,
	1295, 0, 325, 1302, 326, 1301, 0, 1312, 327, 328,
	329, 330, 331, 332, 333, 1248, 1281, 1213, 334, 1342,
	1343, 721, 0, 335, 336, 1288, 0, 1269, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 1323, 361,
	362, 363, 1272, 1270, 1271, 1278, 1274, 1273, 1277, 364,
	365, 366, 367, 368, 1305, 369, 371, 1299, 1298, 1218,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 1290, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 1224, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 1313, 1314, 404, 1237, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 1297, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 1324, 414, 415,
	416, 1310, 1311, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 1320, 0, 1247, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 1283, 1284, 1287, 527,
	1326, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 2702, 443, 444, 445, 0, 1325, 736,
	446, 528, 447, 1292, 1293, 0, 1253, 0, 448, 449,
	451, 1327, 1285, 1328, 450, 452, 453, 1329, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 1321, 464, 1330, 466, 467, 1331,
	0, 468, 469, 470, 471, 472, 473, 476, 1276, 1275,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	1332, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 1333, 520,
	508, 1215, 303, 1334, 522, 523, 524, 525, 1238, 1286,
	526, 1300, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 1335,
	539, 1336, 1315, 540, 541, 1225, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 1316, 560, 749,
	561, 562, 2701, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 1296, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 1337, 602, 603, 604, 605, 606, 1226,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 1279, 631, 752, 632, 613, 614, 633,
	634, 1338, 635, 636, 637, 638, 639, 640, 641, 1294,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 1341, 652, 653, 654, 655, 1317,
	659, 660, 661, 662, 0, 663, 664, 1212, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 1306, 1307, 1308, 1309, 0, 685, 0, 674,
	676, 677, 678, 679, 1318, 680, 1319, 1236, 681, 682,
	683, 684, 675, 686, 687, 0, 1219, 688, 689, 691,
	693, 694, 690, 692, 695, 1280, 696, 0, 0, 697,
	698, 699, 762, 1303, 1340, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 0, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 1216, 0, 0, 0, 0,
	0, 0, 1258, 1230, 1231, 1232, 1228, 1229, 1241, 0,
	1211, 0, 0, 0, 0, 0, 0, 1209, 1210, 304,
	305, 307, 306, 308, 309, 310, 311, 1242, 312, 313,
	0, 1240, 0, 0, 0, 1282, 1246, 0, 0, 314,
	0, 315, 316, 317, 1322, 318, 319, 320, 321, 322,
	323, 324, 714, 1295, 0, 325, 1302, 326, 1301, 0,
	1312, 327, 328, 329, 330, 331, 332, 333, 1248, 1281,
	1213, 334, 1342, 1343, 721, 0, 335, 336, 1288, 0,
	1269, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 4884, 356, 357, 0, 358, 359,
	360, 1323, 361, 362, 363, 1272, 1270, 1271, 1278, 1274,
	1273, 1277, 364, 365, 366, 367, 368, 1305, 369, 371,
	1299, 1298, 1218, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 1290, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 1224, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 1313, 1314, 404, 1237, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 1297, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	1324, 414, 415, 416, 1310, 1311, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 1320, 0, 1247,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 1283,
	1284, 1287, 527, 1326, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 1325, 736, 446, 528, 447, 1292, 1293, 0, 1253,
	0, 448, 449, 451, 1327, 1285, 1328, 450, 452, 453,
	1329, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 1321, 464, 1330,
	466, 467, 1331, 0, 468, 469, 470, 471, 472, 473,
	476, 1276, 1275, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 1332, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 1333, 520, 508, 1215, 303, 1334, 522, 523, 524,
	525, 1238, 1286, 526, 1300, 529, 530, 0, 0, 531,
	0, 532, 1220, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 1335, 539, 1336, 1315, 540, 541, 1225, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	1316, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 1296, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 1337, 602, 603, 604,
	605, 606, 1226, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 1279, 631, 752, 632,
	613, 614, 633, 634, 1338, 635, 636, 637, 638, 639,
	640, 641, 1294, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 1341, 652, 653,
	654, 655, 1317, 659, 660, 661, 662, 0, 663, 664,
	1212, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 1306, 1307, 1308, 1309, 0,
	685, 0, 674, 676, 677, 678, 679, 1318, 680, 1319,
	1236, 681, 682, 683, 684, 675, 686, 687, 0, 1219,
	688, 689, 691, 693, 694, 690, 692, 695, 1280, 696,
	0, 0, 697, 698, 699, 762, 1303, 1340, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 0, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 1216, 0,
	0, 0, 0, 0, 0, 1258, 1230, 1231, 1232, 1228,
	1229, 1241, 0, 1211, 0, 0, 0, 0, 0, 0,
	1209, 1210, 304, 305, 307, 306, 308, 309, 310, 311,
	1242, 312, 313, 0, 1240, 0, 0, 0, 1282, 1246,
	0, 0, 314, 0, 315, 316, 317, 1322, 318, 319,
	320, 321, 322, 323, 324, 714, 1295, 0, 325, 1302,
	326, 1301, 0, 1312, 327, 328, 329, 330, 331, 332,
	333, 1248, 1281, 1213, 334, 1342, 1343, 721, 0, 335,
	336, 1288, 0, 1269, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 1323, 361, 362, 363, 1272, 1270,
	1271, 1278, 1274, 1273, 1277, 364, 365, 366, 367, 368,
	1305, 369, 371, 1299, 1298, 1218, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 1290, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 1224, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 1313, 1314, 404,
	1237, 301, 0, 0, 0, 0, 0, 405, 406, 407,
	1297, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 1324, 414, 415, 416, 1310, 1311, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	1320, 0, 1247, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 1283, 1284, 1287, 527, 1326, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 0, 1325, 736, 446, 528, 447, 1292,
	1293, 0, 1253, 0, 448, 449, 451, 1327, 1285, 1328,
	450, 452, 453, 1329, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	1321, 464, 1330, 466, 467, 1331, 0, 468, 469, 470,
	471, 472, 473, 476, 1276, 1275, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 1332, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 1333, 520, 508, 1215, 303, 1334,
	522, 523, 524, 525, 1238, 1286, 526, 1300, 529, 530,
	0, 0, 531, 0, 532, 1220, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 1335, 539, 1336, 1315, 540,
	541, 1225, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 1316, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 1296, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 1337,
	602, 603, 604, 605, 606, 1226, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 1279,
	631, 752, 632, 613, 614, 633, 634, 1338, 635, 636,
	637, 638, 639, 640, 641, 1294, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	1341, 652, 653, 654, 655, 1317, 659, 660, 661, 662,
	0, 663, 664, 1212, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 1306, 1307,
	1308, 1309, 0, 685, 0, 674, 676, 677, 678, 679,
	1318, 680, 1319, 1236, 681, 682, 683, 684, 675, 686,
	687, 0, 1219, 688, 689, 691, 693, 694, 690, 692,
	695, 1280, 696, 0, 0, 697, 698, 699, 762, 1303,
	1340, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 0, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 1216, 0, 0, 0, 0, 0, 0, 1258, 1230,
	1231, 1232, 1228, 1229, 1241, 0, 1211, 0, 0, 0,
	0, 0, 0, 1209, 1210, 304, 305, 307, 306, 308,
	309, 310, 311, 1242, 312, 313, 0, 1240, 0, 0,
	0, 1282, 1246, 0, 0, 314, 0, 315, 316, 317,
	1322, 318, 319, 320, 321, 322, 323, 324, 714, 1295,
	0, 325, 1302, 326, 1301, 0, 1312, 327, 328, 329,
	330, 331, 332, 333, 1248, 1281, 1213, 334, 1342, 1343,
	721, 0, 335, 336, 1288, 0, 1269, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 1323, 361, 362,
	363, 1272, 1270, 1271, 1278, 1274, 1273, 1277, 364, 365,
	366, 367, 368, 1305, 369, 371, 1299, 1298, 1218, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 1290, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 1224, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	1313, 1314, 404, 1237, 301, 0, 0, 0, 0, 0,
	405, 406, 407, 1297, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 1324, 414, 415, 416,
	1310, 1311, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 1320, 0, 1247, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 1283, 1284, 1287, 527, 1326,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 302, 443, 444, 445, 0, 1325, 736, 446,
	528, 447, 1292, 1293, 0, 1253, 0, 448, 449, 451,
	1327, 1285, 1328, 450, 452, 453, 1329, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 1321, 464, 1330, 466, 467, 1331, 0,
	468, 469, 470, 471, 472, 473, 476, 1276, 1275, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 1332,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 1333, 520, 508,
	1215, 4429, 1334, 522, 523, 524, 525, 1238, 1286, 526,
	1300, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 1335, 539,
	1336, 1315, 540, 541, 1225, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 1316, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 1296, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 1337, 602, 603, 604, 605, 606, 1226, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 1279, 631, 752, 632, 613, 614, 633, 634,
	1338, 635, 636, 637, 638, 639, 640, 641, 1294, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 1341, 652, 653, 654, 655, 1317, 659,
	660, 661, 662, 0, 663, 664, 1212, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 1306, 1307, 1308, 1309, 0, 685, 0, 674, 676,
	677, 678, 679, 1318, 680, 1319, 1236, 681, 682, 683,
	684, 675, 686, 687, 0, 1219, 688, 689, 691, 693,
	694, 690, 692, 695, 1280, 696, 0, 0, 697, 698,
	699, 762, 1303, 1340, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 0, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 1216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1211,
	0, 0, 0, 0, 0, 0, 1209, 1210, 2128, 1258,
	1230, 1231, 1232, 1228, 1229, 1241, 1242, 0, 0, 0,
	1240, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 0, 1282, 1246, 0, 0, 314, 0, 315, 316,
	317, 1322, 318, 319, 320, 321, 322, 323, 324, 714,
	1295, 0, 325, 1302, 326, 1301, 0, 1312, 327, 328,
	329, 330, 331, 332, 333, 1248, 1281, 1213, 334, 1342,
	1343, 721, 0, 335, 336, 1288, 0, 1269, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 1323, 361,
	362, 363, 1272, 1270, 1271, 1278, 1274, 1273, 1277, 364,
	365, 366, 367, 368, 1305, 369, 371, 1299, 1298, 1218,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 1290, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 1224, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 1313, 1314, 404, 1237, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 1297, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 1324, 414, 415,
	416, 1310, 1311, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 1320, 0, 1247, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 1283, 1284, 1287, 527,
	1326, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 0, 1325, 736,
	446, 528, 447, 1292, 1293, 0, 1253, 0, 448, 449,
	451, 1327, 1285, 1328, 450, 452, 453, 1329, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 1321, 464, 1330, 466, 467, 1331,
	0, 468, 469, 470, 471, 472, 473, 476, 1276, 1275,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	1332, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 1333, 520,
	508, 1215, 303, 1334, 522, 523, 524, 525, 1238, 1286,
	526, 1300, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 1335,
	539, 1336, 1315, 540, 541, 1225, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 1316, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 1296, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 1337, 602, 603, 604, 605, 606, 1226,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 1279, 631, 752, 632, 613, 614, 633,
	634, 1338, 635, 636, 637, 638, 639, 640, 641, 1294,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 1341, 652, 653, 654, 655, 1317,
	659, 660, 661, 662, 0, 663, 664, 1212, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 1306, 1307, 1308, 1309, 0, 685, 0, 674,
	676, 677, 678, 679, 1318, 680, 1319, 1236, 681, 682,
	683, 684, 675, 686, 687, 0, 1219, 688, 689, 691,
	693, 694, 690, 692, 695, 1280, 696, 0, 0, 697,
	698, 699, 762, 1303, 1340, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 0, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 1216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1211, 0, 0, 0, 0, 0, 0, 1209, 1210, 2128,
	1258, 1230, 1231, 1232, 1228, 1229, 1241, 1242, 0, 0,
	0, 1240, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 0, 1282, 1246, 0, 0, 314, 0, 315,
	316, 317, 1322, 318, 319, 320, 321, 322, 323, 324,
	714, 1295, 0, 325, 1302, 326, 1301, 0, 1312, 327,
	328, 329, 330, 331, 332, 333, 1248, 1281, 1213, 334,
	1342, 1343, 721, 0, 335, 336, 1288, 0, 1269, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 1323,
	361, 362, 363, 1272, 1270, 1271, 1278, 1274, 1273, 1277,
	364, 365, 366, 367, 368, 1305, 369, 371, 1299, 1298,
	1218, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 1290, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 1224,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 1313, 1314, 404, 1237, 301, 0, 0, 0,
	0, 0, 405, 406, 407, 1297, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 1324, 414,
	415, 416, 1310, 1311, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 1320, 0, 1247, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 1283, 1284, 1287,
	527, 1326, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 302, 443, 444, 445, 0, 1325,
	736, 446, 528, 447, 1292, 1293, 0, 1253, 0, 448,
	449, 451, 1327, 1285, 1328, 450, 452, 453, 1329, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 1321, 464, 1330, 466, 467,
	1331, 0, 468, 469, 470, 471, 472, 473, 476, 1276,
	1275, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 1332, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 1333,
	520, 508, 1215, 303, 1334, 522, 523, 524, 525, 1238,
	1286, 526, 1300, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	1335, 539, 1336, 1315, 540, 541, 1225, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 1316, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 1296, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 1337, 602, 603, 604, 605, 606,
	1226, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 1279, 631, 752, 632, 613, 614,
	633, 634, 1338, 635, 636, 637, 638, 639, 640, 641,
	1294, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 1341, 652, 653, 654, 655,
	1317, 659, 660, 661, 662, 0, 663, 664, 1212, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 1306, 1307, 1308, 1309, 0, 685, 0,
	674, 676, 677, 678, 679, 1318, 680, 1319, 1236, 681,
	682, 683, 684, 675, 686, 687, 0, 1219, 688, 689,
	691, 693, 694, 690, 692, 695, 1280, 696, 0, 0,
	697, 698, 699, 762, 1303, 1340, 4086, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 0, 0, 0, 0,
	708, 709, 766, 710, 711, 712, 1216, 0, 0, 0,
	0, 0, 0, 1258, 1230, 1231, 1232, 1228, 1229, 1241,
	0, 1211, 0, 0, 0, 0, 0, 0, 1209, 1210,
	304, 305, 307, 306, 308, 309, 310, 311, 1242, 312,
	313, 0, 1240, 0, 0, 0, 1282, 1246, 0, 0,
	314, 0, 315, 316, 317, 1322, 318, 319, 320, 321,
	322, 323, 324, 714, 1295, 0, 325, 1302, 326, 1301,
	0, 1312, 327, 328, 329, 330, 331, 332, 333, 1248,
	1281, 1213, 334, 1342, 1343, 721, 0, 335, 336, 1288,
	0, 1269, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 1323, 361, 362, 363, 1272, 1270, 1271, 1278,
	1274, 1273, 1277, 364, 365, 366, 367, 368, 1305, 369,
	371, 1299, 1298, 1218, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 1290,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 1224, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 1313, 1314, 404, 1237, 301,
	0, 0, 0, 0, 0, 405, 406, 407, 1297, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	2962, 1324, 414, 415, 416, 1310, 1311, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 1320, 0,
	1247, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	1283, 1284, 1287, 527, 1326, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 302, 443, 444,
	445, 0, 1325, 736, 446, 528, 447, 1292, 1293, 0,
	1253, 0, 448, 449, 451, 1327, 1285, 1328, 450, 452,
	453, 1329, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 1321, 464,
	1330, 466, 467, 1331, 0, 468, 469, 470, 471, 472,
	473, 476, 1276, 1275, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 1332, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 1333, 520, 508, 1215, 303, 1334, 522, 523,
	524, 525, 1238, 1286, 526, 1300, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 1335, 539, 1336, 1315, 540, 541, 1225,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 1316, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 1296,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 1337, 602, 603,
	604, 605, 606, 1226, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 1279, 631, 752,
	632, 613, 614, 633, 634, 1338, 635, 636, 637, 638,
	639, 640, 641, 1294, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 1341, 652,
	653, 654, 655, 1317, 659, 660, 661, 662, 0, 663,
	664, 1212, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 1306, 1307, 1308, 1309,
	0, 685, 0, 674, 676, 677, 678, 679, 1318, 680,
	1319, 1236, 681, 682, 683, 684, 675, 686, 687, 0,
	1219, 688, 689, 691, 693, 694, 690, 692, 695, 1280,
	696, 0, 0, 697, 698, 699, 762, 1303, 1340, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 0,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 1216,
	0, 0, 0, 0, 0, 0, 1258, 1230, 1231, 1232,
	1228, 1229, 1241, 0, 1211, 0, 0, 0, 0, 0,
	0, 1209, 1210, 304, 305, 307, 306, 308, 309, 310,
	311, 1242, 312, 313, 0, 1240, 0, 0, 0, 1282,
	1246, 0, 0, 314, 0, 315, 316, 317, 1322, 318,
	319, 320, 321, 322, 323, 324, 714, 1295, 0, 325,
	1302, 326, 1301, 0, 1312, 327, 328, 329, 330, 331,
	332, 333, 1248, 1281, 1213, 334, 1342, 1343, 721, 0,
	335, 336, 1288, 0, 1269, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 1323, 361, 362, 363, 1272,
	1270, 1271, 1278, 1274, 1273, 1277, 364, 365, 366, 367,
	368, 1305, 369, 371, 1299, 1298, 1218, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 1290, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 1224, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 1313, 1314,
	404, 1237, 301, 0, 0, 0, 0, 0, 405, 406,
	407, 1297, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 1324, 414, 415, 416, 1310, 1311,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 1320, 0, 1247, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 1283, 1284, 1287, 527, 1326, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	302, 443, 444, 445, 0, 1325, 736, 446, 528, 447,
	1292, 1293, 0, 1253, 0, 448, 449, 451, 1327, 1285,
	1328, 450, 452, 453, 1329, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 1321, 464, 1330, 466, 467, 1331, 0, 468, 469,
	470, 471, 472, 473, 476, 1276, 1275, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 1332, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 1333, 520, 508, 1215, 303,
	1334, 522, 523, 524, 525, 1238, 1286, 526, 1300, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 1335, 539, 1336, 1315,
	540, 541, 1225, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 1316, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 1296, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	1337, 602, 603, 604, 605, 606, 1226, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	1279, 631, 752, 632, 613, 614, 633, 634, 1338, 635,
	636, 637, 638, 639, 640, 641, 1294, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 1341, 652, 653, 654, 655, 1317, 659, 660, 661,
	662, 0, 663, 664, 1212, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 1306,
	1307, 1308, 1309, 0, 685, 0, 674, 676, 677, 678,
	679, 1318, 680, 1319, 1236, 681, 682, 683, 684, 675,
	686, 687, 0, 1219, 688, 689, 691, 693, 694, 690,
	692, 695, 1280, 696, 0, 0, 697, 698, 699, 762,
	1303, 1340, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 0, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 1216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1211, 0, 0,
	0, 0, 0, 0, 1209, 1210, 0, 0, 0, 0,
	0, 0, 0, 0, 1242, 2056, 0, 2967, 1240, 1258,
	1230, 1231, 1232, 1228, 1229, 1241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 0, 1282, 1246, 0, 0, 314, 0, 315, 316,
	317, 1322, 318, 319, 320, 321, 322, 323, 324, 714,
	1295, 0, 325, 1302, 326, 1301, 0, 1312, 327, 328,
	329, 330, 331, 332, 333, 1248, 1281, 1213, 334, 1342,
	1343, 721, 0, 335, 336, 1288, 0, 1269, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 1323, 361,
	362, 363, 1272, 1270, 1271, 1278, 1274, 1273, 1277, 364,
	365, 366, 367, 368, 1305, 369, 371, 1299, 1298, 1218,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 1290, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 1224, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 1313, 1314, 404, 1237, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 1297, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 1324, 414, 415,
	416, 1310, 1311, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 1320, 0, 1247, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 1283, 1284, 1287, 527,
	1326, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 0, 1325, 736,
	446, 528, 447, 1292, 1293, 0, 1253, 0, 448, 449,
	451, 1327, 1285, 1328, 450, 452, 453, 1329, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 1321, 464, 1330, 466, 467, 1331,
	0, 468, 469, 470, 471, 472, 473, 476, 1276, 1275,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	1332, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 1333, 520,
	508, 1215, 303, 1334, 522, 523, 524, 525, 1238, 1286,
	526, 1300, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 1335,
	539, 1336, 1315, 540, 541, 1225, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 1316, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 1296, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 1337, 602, 603, 604, 605, 606, 1226,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 1279, 631, 752, 632, 613, 614, 633,
	634, 1338, 635, 636, 637, 638, 639, 640, 641, 1294,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 1341, 652, 653, 654, 655, 1317,
	659, 660, 661, 662, 0, 663, 664, 1212, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 1306, 1307, 1308, 1309, 0, 685, 0, 674,
	676, 677, 678, 679, 1318, 680, 1319, 1236, 681, 682,
	683, 684, 675, 686, 687, 0, 1219, 688, 689, 691,
	693, 694, 690, 692, 695, 1280, 696, 0, 0, 697,
	698, 699, 762, 1303, 1340, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 0, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 1216, 0, 0, 0, 0,
	2965, 0, 1258, 1230, 1231, 1232, 1228, 1229, 1241, 0,
	1211, 0, 0, 0, 0, 0, 0, 1209, 1210, 304,
	305, 307, 306, 308, 309, 310, 311, 1242, 312, 313,
	0, 1240, 0, 0, 0, 1282, 1246, 0, 0, 314,
	0, 315, 316, 317, 1322, 318, 319, 320, 321, 322,
	323, 324, 714, 1295, 0, 325, 1302, 326, 1301, 0,
	1312, 327, 328, 329, 330, 331, 332, 333, 1248, 1281,
	1213, 334, 1342, 1343, 721, 0, 335, 336, 1288, 0,
	1269, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 1323, 361, 362, 363, 1272, 1270, 1271, 1278, 1274,
	1273, 1277, 364, 365, 366, 367, 368, 1305, 369, 371,
	1299, 1298, 1218, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 1290, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 1224, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 1313, 1314, 404, 1237, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 1297, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	1324, 414, 415, 416, 1310, 1311, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 1320, 0, 1247,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 1283,
	1284, 1287, 527, 1326, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 1325, 736, 446, 528, 447, 1292, 1293, 0, 1253,
	0, 448, 449, 451, 1327, 1285, 1328, 450, 452, 453,
	1329, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 1321, 464, 1330,
	466, 467, 1331, 0, 468, 469, 470, 471, 472, 473,
	476, 1276, 1275, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 1332, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 1333, 520, 508, 1215, 303, 1334, 522, 523, 524,
	525, 1238, 1286, 526, 1300, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 1335, 539, 1336, 1315, 540, 541, 1225, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	1316, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 1296, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 1337, 602, 603, 604,
	605, 606, 1226, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 1279, 631, 752, 632,
	613, 614, 633, 634, 1338, 635, 636, 637, 638, 639,
	640, 641, 1294, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 1341, 652, 653,
	654, 655, 1317, 659, 660, 661, 662, 0, 663, 664,
	1212, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 1306, 1307, 1308, 1309, 0,
	685, 0, 674, 676, 677, 678, 679, 1318, 680, 1319,
	1236, 681, 682, 683, 684, 675, 686, 687, 0, 1219,
	688, 689, 691, 693, 694, 690, 692, 695, 1280, 696,
	0, 0, 697, 698, 699, 762, 1303, 1340, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 0, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 1216, 0,
	0, 0, 0, 2953, 0, 1258, 1230, 1231, 1232, 1228,
	1229, 1241, 0, 1211, 0, 0, 0, 0, 0, 0,
	1209, 1210, 304, 305, 307, 306, 308, 309, 310, 311,
	1242, 312, 313, 0, 1240, 0, 0, 0, 1282, 1246,
	0, 0, 314, 0, 315, 316, 317, 1322, 318, 319,
	320, 321, 322, 323, 324, 714, 1295, 0, 325, 1302,
	326, 1301, 0, 1312, 327, 328, 329, 330, 331, 332,
	333, 1248, 1281, 1213, 334, 1342, 1343, 721, 0, 335,
	336, 1288, 0, 1269, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 1323, 361, 362, 363, 1272, 1270,
	1271, 1278, 1274, 1273, 1277, 364, 365, 366, 367, 368,
	1305, 369, 371, 1299, 1298, 1218, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 1290, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 1224, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 1313, 1314, 404,
	1237, 301, 0, 0, 0, 0, 0, 405, 406, 407,
	1297, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 1324, 414, 415, 416, 1310, 1311, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	1320, 0, 1247, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 1283, 1284, 1287, 527, 1326, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 0, 1325, 736, 446, 528, 447, 1292,
	1293, 0, 1253, 0, 448, 449, 451, 1327, 1285, 1328,
	450, 452, 453, 1329, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	1321, 464, 1330, 466, 467, 1331, 0, 468, 469, 470,
	471, 472, 473, 476, 1276, 1275, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 1332, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 1333, 520, 508, 1215, 303, 1334,
	522, 523, 524, 525, 1238, 1286, 526, 1300, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 1335, 539, 1336, 1315, 540,
	541, 1225, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 1316, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 1296, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 1337,
	602, 603, 604, 605, 606, 1226, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 1279,
	631, 752, 632, 613, 614, 633, 634, 1338, 635, 636,
	637, 638, 639, 640, 641, 1294, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	1341, 652, 653, 654, 655, 1317, 659, 660, 661, 662,
	0, 663, 664, 1212, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 1306, 1307,
	1308, 1309, 0, 685, 0, 674, 676, 677, 678, 679,
	1318, 680, 1319, 1236, 681, 682, 683, 684, 675, 686,
	687, 0, 1219, 688, 689, 691, 693, 694, 690, 692,
	695, 1280, 696, 0, 0, 697, 698, 699, 762, 1303,
	1340, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 0, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 1216, 0, 0, 0, 0, 2942, 0, 1258, 1230,
	1231, 1232, 1228, 1229, 1241, 0, 1211, 0, 0, 0,
	0, 0, 0, 1209, 1210, 304, 305, 307, 306, 308,
	309, 310, 311, 1242, 312, 313, 0, 1240, 0, 0,
	0, 1282, 1246, 0, 0, 314, 0, 315, 316, 317,
	1322, 318, 319, 320, 321, 322, 323, 324, 714, 1295,
	0, 325, 1302, 326, 1301, 0, 1312, 327, 328, 329,
	330, 331, 332, 333, 1248, 1281, 1213, 334, 1342, 1343,
	721, 0, 335, 336, 1288, 0, 1269, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 1323, 361, 362,
	363, 1272, 1270, 1271, 1278, 1274, 1273, 1277, 364, 365,
	366, 367, 368, 1305, 369, 371, 1299, 1298, 1218, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 1290, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 1224, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	1313, 1314, 404, 1237, 301, 0, 0, 0, 0, 0,
	405, 406, 407, 1297, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 1324, 414, 415, 416,
	1310, 1311, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 1320, 0, 1247, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 1283, 1284, 1287, 527, 1326,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 302, 443, 444, 445, 0, 1325, 736, 446,
	528, 447, 1292, 1293, 0, 1253, 0, 448, 449, 451,
	1327, 1285, 1328, 450, 452, 453, 1329, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 1321, 464, 1330, 466, 467, 1331, 0,
	468, 469, 470, 471, 472, 473, 476, 1276, 1275, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 1332,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 1333, 520, 508,
	1215, 303, 1334, 522, 523, 524, 525, 1238, 1286, 526,
	1300, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 1335, 539,
	1336, 1315, 540, 541, 1225, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 1316, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 1296, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 1337, 602, 603, 604, 605, 606, 1226, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 1279, 631, 752, 632, 613, 614, 633, 634,
	1338, 635, 636, 637, 638, 639, 640, 641, 1294, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 1341, 652, 653, 654, 655, 1317, 659,
	660, 661, 662, 0, 663, 664, 1212, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 1306, 1307, 1308, 1309, 0, 685, 0, 674, 676,
	677, 678, 679, 1318, 680, 1319, 1236, 681, 682, 683,
	684, 675, 686, 687, 0, 1219, 688, 689, 691, 693,
	694, 690, 692, 695, 1280, 696, 0, 0, 697, 698,
	699, 762, 1303, 1340, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 0, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 1216, 0, 0, 0, 0, 2940,
	0, 2931, 2938, 1231, 1232, 1228, 1229, 1241, 0, 1211,
	0, 0, 0, 0, 0, 0, 1209, 1210, 304, 305,
	307, 306, 308, 309, 310, 311, 1242, 312, 313, 0,
	1240, 0, 0, 0, 1282, 1246, 0, 0, 314, 0,
	315, 316, 317, 1322, 318, 319, 320, 321, 322, 323,
	324, 714, 1295, 0, 325, 1302, 326, 1301, 0, 1312,
	327, 328, 329, 330, 331, 332, 333, 1248, 1281, 1213,
	334, 1342, 1343, 721, 0, 335, 336, 1288, 0, 1269,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	1323, 361, 362, 363, 1272, 1270, 1271, 1278, 1274, 1273,
	1277, 364, 365, 366, 367, 368, 1305, 2934, 371, 1299,
	1298, 1218, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 1290, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	1224, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 1313, 1314, 404, 1237, 301, 0, 0,
	0, 0, 0, 405, 406, 407, 1297, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 1324,
	414, 415, 416, 1310, 1311, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 1320, 0, 1247, 427,
	0, 428, 429, 430, 431, 432, 2935, 434, 1283, 1284,
	1287, 527, 1326, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 302, 443, 444, 445, 0,
	1325, 736, 446, 528, 447, 1292, 1293, 0, 1253, 0,
	448, 449, 451, 1327, 1285, 1328, 450, 452, 453, 1329,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 1321, 464, 1330, 466,
	467, 1331, 0, 468, 469, 470, 471, 472, 473, 476,
	1276, 1275, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 2936, 486, 2933, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 1332, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	1333, 520, 508, 1215, 303, 1334, 522, 523, 524, 525,
	1238, 1286, 526, 1300, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 1335, 539, 1336, 1315, 540, 541, 1225, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 1316,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 1296, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 1337, 602, 603, 604, 605,
	606, 1226, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 2937, 624, 0, 626,
	627, 625, 628, 629, 630, 1279, 631, 752, 632, 613,
	614, 633, 634, 1338, 635, 636, 637, 638, 639, 640,
	641, 1294, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 1341, 652, 653, 654,
	655, 1317, 659, 660, 661, 662, 0, 663, 664, 1212,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 1306, 1307, 1308, 1309, 0, 685,
	0, 674, 676, 677, 678, 679, 1318, 680, 1319, 1236,
	681, 682, 683, 684, 675, 686, 687, 0, 1219, 688,
	689, 691, 693, 694, 690, 692, 695, 1280, 696, 0,
	0, 697, 698, 699, 762, 1303, 1340, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 0, 0, 0,
	0, 708, 709, 766, 710, 2932, 712, 1216, 0, 0,
	0, 0, 2928, 0, 2931, 2938, 1231, 1232, 1228, 1229,
	1241, 0, 1211, 0, 0, 0, 0, 0, 0, 1209,
	1210, 304, 305, 307, 306, 308, 309, 310, 311, 1242,
	312, 313, 0, 1240, 0, 0, 0, 1282, 1246, 0,
	0, 314, 0, 315, 316, 317, 1322, 318, 319, 320,
	321, 322, 323, 324, 714, 1295, 0, 325, 1302, 326,
	1301, 0, 1312, 327, 328, 329, 330, 331, 332, 333,
	1248, 1281, 1213, 334, 1342, 1343, 721, 0, 335, 336,
	1288, 0, 1269, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 1323, 361, 362, 363, 1272, 1270, 1271,
	1278, 1274, 1273, 1277, 364, 365, 366, 367, 368, 1305,
	2934, 371, 1299, 1298, 1218, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	1290, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 1224, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 1313, 1314, 404, 1237,
	301, 0, 0, 0, 0, 0, 405, 406, 407, 1297,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 1324, 414, 415, 416, 1310, 1311, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 1320,
	0, 1247, 427, 0, 428, 429, 430, 431, 432, 2935,
	434, 1283, 1284, 1287, 527, 1326, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 302, 443,
	444, 445, 0, 1325, 736, 446, 528, 447, 1292, 1293,
	0, 1253, 0, 448, 449, 451, 1327, 1285, 1328, 450,
	452, 453, 1329, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 1321,
	464, 1330, 466, 467, 1331, 0, 468, 469, 470, 471,
	472, 473, 476, 1276, 1275, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 2936, 486, 2933, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 1332, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 1333, 520, 508, 1215, 303, 1334, 522,
	523, 524, 525, 1238, 1286, 526, 1300, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 1335, 539, 1336, 1315, 540, 541,
	1225, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 1316, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	1296, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 1337, 602,
	603, 604, 605, 606, 1226, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 2937,
	624, 0, 626, 627, 625, 628, 629, 630, 1279, 631,
	752, 632, 613, 614, 633, 634, 1338, 635, 636, 637,
	638, 639, 640, 641, 1294, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 1341,
	652, 653, 654, 655, 1317, 659, 660, 661, 662, 0,
	663, 664, 1212, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 1306, 1307, 1308,
	1309, 0, 685, 0, 674, 676, 677, 678, 679, 1318,
	680, 1319, 1236, 681, 682, 683, 684, 675, 686, 687,
	0, 1219, 688, 689, 691, 693, 694, 690, 692, 695,
	1280, 696, 0, 0, 697, 698, 699, 762, 1303, 1340,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	0, 0, 0, 0, 708, 709, 766, 710, 2932, 712,
	1216, 0, 0, 0, 0, 0, 0, 1258, 1230, 1231,
	1232, 1228, 1229, 1241, 0, 1211, 0, 0, 0, 0,
	0, 0, 1209, 1210, 304, 305, 307, 306, 308, 309,
	310, 311, 1242, 312, 313, 0, 1240, 0, 0, 0,
	1282, 1246, 0, 0, 314, 0, 315, 316, 317, 1322,
	318, 319, 320, 321, 322, 323, 324, 714, 1295, 0,
	325, 1302, 326, 1301, 0, 1312, 327, 328, 329, 330,
	331, 332, 333, 1248, 1281, 1213, 334, 1342, 1343, 721,
	0, 335, 336, 1288, 0, 1269, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 1323, 361, 362, 363,
	1272, 1270, 1271, 1278, 1274, 1273, 1277, 364, 365, 366,
	367, 368, 1305, 369, 371, 1299, 1298, 1218, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 1290, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 1224, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 1313,
	1314, 404, 1237, 301, 0, 0, 0, 0, 0, 405,
	406, 407, 1297, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 1324, 414, 415, 416, 1310,
	1311, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 1320, 0, 1247, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 1283, 1284, 1287, 527, 1326, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 302, 443, 444, 445, 0, 1325, 736, 446, 528,
	447, 1292, 1293, 0, 1253, 0, 448, 449, 451, 1327,
	1285, 1328, 450, 452, 453, 1329, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 1321, 464, 1330, 466, 467, 1331, 0, 468,
	469, 470, 471, 472, 473, 476, 1276, 1275, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 1332, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 1333, 520, 508, 1215,
	303, 1334, 522, 523, 524, 525, 1238, 1286, 526, 1300,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 1335, 539, 1336,
	1315, 540, 541, 1225, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 1316, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 1296, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 1337, 602, 603, 604, 605, 606, 1226, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 1279, 631, 752, 632, 613, 614, 633, 634, 1338,
	635, 636, 637, 638, 639, 640, 641, 1294, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 1341, 652, 653, 654, 655, 1317, 659, 660,
	661, 662, 0, 663, 664, 1212, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	1306, 1307, 1308, 1309, 0, 685, 0, 674, 676, 677,
	678, 679, 1318, 680, 1319, 1236, 681, 682, 683, 684,
	675, 686, 687, 0, 1219, 688, 689, 691, 693, 694,
	690, 692, 695, 1280, 696, 0, 0, 697, 698, 699,
	762, 1303, 1340, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 0, 0, 0, 0, 708, 709, 766,
	710, 711, 712, 1216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1211, 0,
	0, 0, 0, 0, 0, 1209, 1210, 0, 0, 0,
	0, 0, 0, 2064, 0, 1242, 0, 0, 0, 1240,
	1258, 1230, 1231, 1232, 1228, 1229, 1241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 2681, 312, 313, 0, 0,
	0, 0, 0, 1282, 1246, 0, 0, 314, 0, 315,
	316, 317, 1322, 318, 319, 320, 321, 322, 323, 324,
	714, 1295, 0, 325, 1302, 326, 1301, 0, 1312, 327,
	328, 329, 330, 331, 332, 333, 1248, 1281, 1213, 334,
	1342, 1343, 721, 0, 335, 336, 1288, 0, 1269, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 1323,
	361, 362, 363, 1272, 1270, 1271, 1278, 1274, 1273, 1277,
	364, 365, 366, 367, 368, 1305, 369, 371, 1299, 1298,
	1218, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 1290, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 1224,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 1313, 1314, 404, 1237, 301, 0, 0, 0,
	0, 0, 405, 406, 407, 1297, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 1324, 414,
	415, 416, 1310, 1311, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 1320, 0, 1247, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 1283, 1284, 1287,
	527, 1326, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 302, 443, 444, 445, 0, 1325,
	736, 446, 528, 447, 1292, 1293, 0, 1253, 0, 448,
	449, 451, 1327, 1285, 1328, 450, 452, 453, 1329, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 1321, 464, 1330, 466, 467,
	1331, 0, 468, 469, 470, 471, 472, 473, 476, 1276,
	1275, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 1332, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 1333,
	520, 508, 1215, 303, 1334, 522, 523, 524, 525, 1238,
	1286, 526, 1300, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	1335, 539, 1336, 1315, 540, 541, 1225, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 1316, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 1296, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 1337, 602, 603, 604, 605, 606,
	1226, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 1279, 631, 752, 632, 613, 614,
	633, 634, 1338, 635, 636, 637, 638, 639, 640, 641,
	1294, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 1341, 652, 653, 654, 655,
	1317, 659, 660, 661, 662, 0, 663, 664, 1212, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 1306, 1307, 1308, 1309, 0, 685, 0,
	674, 676, 677, 678, 679, 1318, 680, 1319, 1236, 681,
	682, 683, 684, 675, 686, 687, 0, 1219, 688, 689,
	691, 693, 694, 690, 692, 695, 1280, 696, 0, 0,
	697, 698, 699, 762, 1303, 1340, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 0, 0, 0, 0,
	708, 709, 766, 710, 711, 712, 1216, 0, 0, 0,
	0, 2642, 0, 1258, 1230, 1231, 1232, 1228, 1229, 1241,
	0, 1211, 0, 0, 0, 0, 0, 0, 1209, 1210,
	304, 305, 307, 306, 308, 309, 310, 311, 1242, 312,
	313, 0, 1240, 0, 0, 0, 1282, 1246, 0, 0,
	314, 0, 315, 316, 317, 1322, 318, 319, 320, 321,
	322, 323, 324, 714, 1295, 0, 325, 1302, 326, 1301,
	0, 1312, 327, 328, 329, 330, 331, 332, 333, 1248,
	1281, 1213, 334, 1342, 1343, 721, 0, 335, 336, 1288,
	0, 1269, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 1323, 361, 362, 363, 1272, 1270, 1271, 1278,
	1274, 1273, 1277, 364, 365, 366, 367, 368, 1305, 369,
	371, 1299, 1298, 1218, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 1290,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 1224, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 1313, 1314, 404, 1237, 301,
	0, 0, 0, 0, 0, 405, 406, 407, 1297, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 1324, 414, 415, 416, 1310, 1311, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 1320, 0,
	1247, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	1283, 1284, 1287, 527, 1326, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 302, 443, 444,
	445, 0, 1325, 736, 446, 528, 447, 1292, 1293, 0,
	1253, 0, 448, 449, 451, 1327, 1285, 1328, 450, 452,
	453, 1329, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 1321, 464,
	1330, 466, 467, 1331, 0, 468, 469, 470, 471, 472,
	473, 476, 1276, 1275, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 1332, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 1333, 520, 508, 1215, 303, 1334, 522, 523,
	524, 525, 1238, 1286, 526, 1300, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 1335, 539, 1336, 1315, 540, 541, 1225,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 1316, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 1296,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 1337, 602, 603,
	604, 605, 606, 1226, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 1279, 631, 752,
	632, 613, 614, 633, 634, 1338, 635, 636, 637, 638,
	639, 640, 641, 1294, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 1341, 652,
	653, 654, 655, 1317, 659, 660, 661, 662, 0, 663,
	664, 1212, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 1306, 1307, 1308, 1309,
	0, 685, 0, 674, 676, 677, 678, 679, 1318, 680,
	1319, 1236, 681, 682, 683, 684, 675, 686, 687, 0,
	1219, 688, 689, 691, 693, 694, 690, 692, 695, 1280,
	696, 0, 0, 697, 698, 699, 762, 1303, 1340, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 0,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 1216,
	0, 0, 0, 0, 2613, 0, 1258, 1230, 1231, 1232,
	1228, 1229, 1241, 0, 1211, 0, 0, 0, 0, 0,
	0, 1209, 1210, 304, 305, 307, 306, 308, 309, 310,
	311, 1242, 312, 313, 0, 1240, 0, 0, 0, 1282,
	1246, 0, 0, 314, 0, 315, 316, 317, 1322, 318,
	319, 320, 321, 322, 323, 324, 714, 1295, 0, 325,
	1302, 326, 1301, 0, 1312, 327, 328, 329, 330, 331,
	332, 333, 1248, 1281, 1213, 334, 1342, 1343, 721, 0,
	335, 336, 1288, 0, 1269, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 1323, 361, 362, 363, 1272,
	1270, 1271, 1278, 1274, 1273, 1277, 364, 365, 366, 367,
	368, 1305, 369, 371, 1299, 1298, 1218, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 1290, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 1224, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 1313, 1314,
	404, 1237, 301, 0, 0, 0, 0, 0, 405, 406,
	407, 1297, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 1324, 414, 415, 416, 1310, 1311,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 1320, 0, 1247, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 1283, 1284, 1287, 527, 1326, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	302, 443, 444, 445, 0, 1325, 736, 446, 528, 447,
	1292, 1293, 0, 1253, 0, 448, 449, 451, 1327, 1285,
	1328, 450, 452, 453, 1329, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 1321, 464, 1330, 466, 467, 1331, 0, 468, 469,
	470, 471, 472, 473, 476, 1276, 1275, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 1332, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 1333, 520, 508, 1215, 303,
	1334, 522, 523, 524, 525, 1238, 1286, 526, 1300, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 1335, 539, 1336, 1315,
	540, 541, 1225, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 1316, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 1296, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	1337, 602, 603, 604, 605, 606, 1226, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	1279, 631, 752, 632, 613, 614, 633, 634, 1338, 635,
	636, 637, 638, 639, 640, 641, 1294, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 1341, 652, 653, 654, 655, 1317, 659, 660, 661,
	662, 0, 663, 664, 1212, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 1306,
	1307, 1308, 1309, 0, 685, 0, 674, 676, 677, 678,
	679, 1318, 680, 1319, 1236, 681, 682, 683, 684, 675,
	686, 687, 0, 1219, 688, 689, 691, 693, 694, 690,
	692, 695, 1280, 696, 0, 0, 697, 698, 699, 762,
	1303, 1340, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 0, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 1216, 0, 0, 0, 0, 1897, 0, 1258,
	1230, 1231, 1232, 1228, 1229, 1241, 0, 1211, 0, 0,
	0, 0, 0, 0, 1209, 1210, 304, 305, 307, 306,
	308, 309, 310, 311, 1242, 312, 313, 0, 1240, 0,
	0, 0, 1282, 1246, 0, 0, 314, 0, 315, 316,
	317, 1322, 318, 319, 320, 321, 322, 323, 324, 714,
	1295, 0, 325, 1302, 326, 1301, 0, 1312, 327, 328,
	329, 330, 331, 332, 333, 1248, 1281, 1213, 334, 1342,
	1343, 721, 0, 335, 336, 1288, 0, 1269, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 1323, 361,
	362, 363, 1272, 1270, 1271, 1278, 1274, 1273, 1277, 364,
	365, 366, 367, 368, 1305, 369, 371, 1299, 1298, 1218,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 1290, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 1224, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 1313, 1314, 404, 1237, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 1297, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 1324, 414, 415,
	416, 1310, 1311, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 1320, 0, 1247, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 1283, 1284, 1287, 527,
	1326, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 0, 1325, 736,
	446, 528, 447, 1292, 1293, 0, 1253, 0, 448, 449,
	451, 1327, 1285, 1328, 450, 452, 453, 1329, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 1321, 464, 1330, 466, 467, 1331,
	0, 468, 469, 470, 471, 472, 473, 476, 1276, 1275,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	1332, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 1333, 520,
	508, 1215, 303, 1334, 522, 523, 524, 525, 1238, 1286,
	526, 1300, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 1335,
	539, 1336, 1315, 540, 541, 1225, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 1316, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 1296, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 1337, 602, 603, 604, 605, 606, 1226,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 1279, 631, 752, 632, 613, 614, 633,
	634, 1338, 635, 636, 637, 638, 639, 640, 641, 1294,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 1341, 652, 653, 654, 655, 1317,
	659, 660, 661, 662, 0, 663, 664, 1212, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 1306, 1307, 1308, 1309, 0, 685, 0, 674,
	676, 677, 678, 679, 1318, 680, 1319, 1236, 681, 682,
	683, 684, 675, 686, 687, 0, 1219, 688, 689, 691,
	693, 694, 690, 692, 695, 1280, 696, 0, 0, 697,
	698, 699, 762, 1303, 1340, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 0, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 1216, 0, 0, 0, 0,
	1825, 0, 1258, 1230, 1231, 1232, 1228, 1229, 1241, 0,
	1211, 0, 0, 0, 0, 0, 0, 1209, 1210, 304,
	305, 307, 306, 308, 309, 310, 311, 1242, 312, 313,
	0, 1240, 0, 0, 0, 1282, 1246, 0, 0, 314,
	0, 315, 316, 317, 1322, 318, 319, 320, 321, 322,
	323, 324, 714, 1295, 0, 325, 1302, 326, 1301, 0,
	1312, 327, 328, 329, 330, 331, 332, 333, 1248, 1281,
	1213, 334, 1342, 1343, 721, 0, 335, 336, 1288, 0,
	1269, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 1323, 361, 362, 363, 1272, 1270, 1271, 1278, 1274,
	1273, 1277, 364, 365, 366, 367, 368, 1305, 369, 371,
	1299, 1298, 1218, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 1290, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 1224, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 1313, 1314, 404, 1237, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 1297, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	1324, 414, 415, 416, 1310, 1311, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 1320, 0, 1247,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 1283,
	1284, 1287, 527, 1326, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 1325, 736, 446, 528, 447, 1292, 1293, 0, 1253,
	0, 448, 449, 451, 1327, 1285, 1328, 450, 452, 453,
	1329, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 1321, 464, 1330,
	466, 467, 1331, 0, 468, 469, 470, 471, 472, 473,
	476, 1276, 1275, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 1332, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 1333, 520, 508, 1215, 303, 1334, 522, 523, 524,
	525, 1238, 1286, 526, 1300, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 1335, 539, 1336, 1315, 540, 541, 1225, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	1316, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 1296, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 1337, 602, 603, 604,
	605, 606, 1226, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 1279, 631, 752, 632,
	613, 614, 633, 634, 1338, 635, 636, 637, 638, 639,
	640, 641, 1294, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 1341, 652, 653,
	654, 655, 1317, 659, 660, 661, 662, 0, 663, 664,
	1212, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 1306, 1307, 1308, 1309, 0,
	685, 0, 674, 676, 677, 678, 679, 1318, 680, 1319,
	1236, 681, 682, 683, 684, 675, 686, 687, 0, 1219,
	688, 689, 691, 693, 694, 690, 692, 695, 1280, 696,
	0, 0, 697, 698, 699, 762, 1303, 1340, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 0, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 1216, 0,
	0, 0, 0, 1820, 0, 1258, 1230, 1231, 1232, 1228,
	1229, 1241, 0, 1211, 0, 0, 0, 0, 0, 0,
	1209, 1210, 304, 305, 307, 306, 308, 309, 310, 311,
	1242, 312, 313, 0, 1240, 0, 0, 0, 1282, 1246,
	0, 0, 314, 0, 315, 316, 317, 1322, 318, 319,
	320, 321, 322, 323, 324, 714, 1295, 0, 325, 1302,
	326, 1301, 0, 1312, 327, 328, 329, 330, 331, 332,
	333, 1248, 1281, 1213, 334, 1342, 1343, 721, 0, 335,
	336, 1288, 0, 1269, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 1323, 361, 362, 363, 1272, 1270,
	1271, 1278, 1274, 1273, 1277, 364, 365, 366, 367, 368,
	1305, 369, 371, 1299, 1298, 1218, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 1290, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 1224, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 1313, 1314, 404,
	1237, 301, 0, 0, 0, 0, 0, 405, 406, 407,
	1297, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 1324, 414, 415, 416, 1310, 1311, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	1320, 0, 1247, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 1283, 1284, 1287, 527, 1326, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 0, 1325, 736, 446, 528, 447, 1292,
	1293, 0, 1253, 0, 448, 449, 451, 1327, 1285, 1328,
	450, 452, 453, 1329, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	1321, 464, 1330, 466, 467, 1331, 0, 468, 469, 470,
	471, 472, 473, 476, 1276, 1275, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 1332, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 1333, 520, 508, 1215, 303, 1334,
	522, 523, 524, 525, 1238, 1286, 526, 1300, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 1335, 539, 1336, 1315, 540,
	541, 1225, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 1316, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 1296, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 1337,
	602, 603, 604, 605, 606, 1226, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 1279,
	631, 752, 632, 613, 614, 633, 634, 1338, 635, 636,
	637, 638, 639, 640, 641, 1294, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	1341, 652, 653, 654, 655, 1317, 659, 660, 661, 662,
	0, 663, 664, 1212, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 1306, 1307,
	1308, 1309, 0, 685, 0, 674, 676, 677, 678, 679,
	1318, 680, 1319, 1236, 681, 682, 683, 684, 675, 686,
	687, 0, 1219, 688, 689, 691, 693, 694, 690, 692,
	695, 1280, 696, 0, 0, 697, 698, 699, 762, 1303,
	1340, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 0, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 1216, 0, 0, 0, 0, 1806, 0, 1258, 1230,
	1231, 1232, 1228, 1229, 1241, 0, 1211, 0, 0, 0,
	0, 0, 0, 1209, 1210, 304, 305, 307, 306, 308,
	309, 310, 311, 1242, 312, 313, 0, 1240, 0, 0,
	0, 1282, 1246, 0, 0, 314, 0, 315, 316, 317,
	1322, 318, 319, 320, 321, 322, 323, 324, 714, 1295,
	0, 325, 1302, 326, 1301, 0, 1312, 327, 328, 329,
	330, 331, 332, 333, 1248, 1281, 1213, 334, 1342, 1343,
	721, 0, 335, 336, 1288, 0, 1269, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 1323, 361, 362,
	363, 1272, 1270, 1271, 1278, 1274, 1273, 1277, 364, 365,
	366, 367, 368, 1305, 369, 371, 1299, 1298, 1218, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 1290, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 1224, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	1313, 1314, 404, 1237, 301, 0, 0, 0, 0, 0,
	405, 406, 407, 1297, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 1324, 414, 415, 416,
	1310, 1311, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 1320, 0, 1247, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 1283, 1284, 1287, 527, 1326,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 302, 443, 444, 445, 0, 1325, 736, 446,
	528, 447, 1292, 1293, 0, 1253, 0, 448, 449, 451,
	1327, 1285, 1328, 450, 452, 453, 1329, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 1321, 464, 1330, 466, 467, 1331, 0,
	468, 469, 470, 471, 472, 473, 476, 1276, 1275, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 1332,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 1333, 520, 508,
	1215, 303, 1334, 522, 523, 524, 525, 1238, 1286, 526,
	1300, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 1335, 539,
	1336, 1315, 540, 541, 1225, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 1316, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 1296, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 1337, 602, 603, 604, 605, 606, 1226, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 1279, 631, 752, 632, 613, 614, 633, 634,
	1338, 635, 636, 637, 638, 639, 640, 641, 1294, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 1341, 652, 653, 654, 655, 1317, 659,
	660, 661, 662, 0, 663, 664, 1212, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 1306, 1307, 1308, 1309, 0, 685, 0, 674, 676,
	677, 678, 679, 1318, 680, 1319, 1236, 681, 682, 683,
	684, 675, 686, 687, 0, 1219, 688, 689, 691, 693,
	694, 690, 692, 695, 1280, 696, 0, 0, 697, 698,
	699, 762, 1303, 1340, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 0, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 1216, 0, 0, 0, 0, 1801,
	0, 1258, 1230, 1231, 1232, 1228, 1229, 1241, 0, 1211,
	0, 0, 0, 0, 0, 0, 1209, 1210, 304, 305,
	307, 306, 308, 309, 310, 311, 1242, 312, 313, 0,
	1240, 0, 0, 0, 1282, 1246, 0, 0, 314, 0,
	315, 316, 317, 1322, 318, 319, 320, 321, 322, 323,
	324, 714, 1295, 0, 325, 1302, 326, 1301, 0, 1312,
	327, 328, 329, 330, 331, 332, 333, 1248, 1281, 1213,
	334, 1342, 1343, 721, 0, 335, 336, 1288, 0, 1269,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	1323, 361, 362, 363, 1272, 1270, 1271, 1278, 1274, 1273,
	1277, 364, 365, 366, 367, 368, 1305, 369, 371, 1299,
	1298, 1218, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 1290, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	1224, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 1313, 1314, 404, 1237, 301, 0, 0,
	0, 0, 0, 405, 406, 407, 1297, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 1324,
	414, 415, 416, 1310, 1311, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 1320, 0, 1247, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 1283, 1284,
	1287, 527, 1326, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 302, 443, 444, 445, 0,
	1325, 736, 446, 528, 447, 1292, 1293, 0, 1253, 0,
	448, 449, 451, 1327, 1285, 1328, 450, 452, 453, 1329,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 1321, 464, 1330, 466,
	467, 1331, 0, 468, 469, 470, 471, 472, 473, 476,
	1276, 1275, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 1332, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	1333, 520, 508, 1215, 303, 1334, 522, 523, 524, 525,
	1238, 1286, 526, 1300, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 1335, 539, 1336, 1315, 540, 541, 1225, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 1316,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 1296, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 1337, 602, 603, 604, 605,
	606, 1226, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 1279, 631, 752, 632, 613,
	614, 633, 634, 1338, 635, 636, 637, 638, 639, 640,
	641, 1294, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 1341, 652, 653, 654,
	655, 1317, 659, 660, 661, 662, 0, 663, 664, 1212,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 1306, 1307, 1308, 1309, 0, 685,
	0, 674, 676, 677, 678, 679, 1318, 680, 1319, 1236,
	681, 682, 683, 684, 675, 686, 687, 0, 1219, 688,
	689, 691, 693, 694, 690, 692, 695, 1280, 696, 0,
	0, 697, 698, 699, 762, 1303, 1340, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 0, 0, 0,
	0, 708, 709, 766, 710, 711, 712, 1216, 0, 0,
	0, 0, 1709, 0, 1258, 1230, 1231, 1232, 1228, 1229,
	1241, 0, 1211, 0, 0, 0, 0, 0, 0, 1209,
	1210, 304, 305, 307, 306, 308, 309, 310, 311, 1242,
	312, 313, 0, 1240, 0, 0, 0, 1282, 1246, 0,
	0, 314, 0, 315, 316, 317, 1322, 318, 319, 320,
	321, 322, 323, 324, 714, 1295, 0, 325, 1302, 326,
	1301, 0, 1312, 327, 328, 329, 330, 331, 332, 333,
	1248, 1281, 1213, 334, 1342, 1343, 721, 0, 335, 336,
	1288, 0, 1269, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 1323, 361, 362, 363, 1272, 1270, 1271,
	1278, 1274, 1273, 1277, 364, 365, 366, 367, 368, 1305,
	369, 371, 1299, 1298, 1218, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	1290, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 1224, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 1313, 1314, 404, 1237,
	301, 0, 0, 0, 0, 0, 405, 406, 407, 1297,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 1324, 414, 415, 416, 1310, 1311, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 1320,
	0, 1247, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 1708, 1284, 1287, 527, 1326, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 302, 443,
	444, 445, 0, 1325, 736, 446, 528, 447, 1292, 1293,
	0, 1253, 0, 448, 449, 451, 1327, 1285, 1328, 450,
	452, 453, 1329, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 1321,
	464, 1330, 466, 467, 1331, 0, 468, 469, 470, 471,
	472, 473, 476, 1276, 1275, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 1332, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 1333, 520, 508, 1215, 303, 1334, 522,
	523, 524, 525, 1238, 1286, 526, 1300, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 1335, 539, 1336, 1315, 540, 541,
	1225, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 1316, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	1296, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 1337, 602,
	603, 604, 605, 606, 1226, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 1279, 631,
	752, 632, 613, 614, 633, 634, 1338, 635, 636, 637,
	638, 639, 640, 641, 1294, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 1341,
	652, 653, 654, 655, 1317, 659, 660, 661, 662, 0,
	663, 664, 1212, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 1306, 1307, 1308,
	1309, 0, 685, 0, 674, 676, 677, 678, 679, 1318,
	680, 1319, 1236, 681, 682, 683, 684, 675, 686, 687,
	0, 1219, 688, 689, 691, 693, 694, 690, 692, 695,
	1280, 696, 0, 0, 697, 698, 699, 762, 1303, 1340,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	0, 0, 0, 0, 708, 709, 766, 710, 711, 712,
	1216, 0, 0, 0, 0, 1703, 0, 1258, 1230, 1231,
	1232, 1228, 1229, 1241, 0, 1211, 0, 0, 0, 0,
	0, 0, 1209, 1210, 304, 305, 307, 306, 308, 309,
	310, 311, 1242, 312, 313, 0, 1240, 0, 0, 0,
	1282, 1246, 0, 0, 314, 0, 315, 316, 317, 1322,
	318, 319, 320, 321, 322, 323, 324, 714, 1295, 0,
	325, 1302, 326, 1301, 0, 1312, 327, 328, 329, 330,
	331, 332, 333, 1248, 1281, 1213, 334, 1342, 1343, 721,
	0, 335, 336, 1288, 0, 1269, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 1323, 361, 362, 363,
	1272, 1270, 1271, 1278, 1274, 1273, 1277, 364, 365, 366,
	367, 368, 1305, 369, 371, 1299, 1298, 1218, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 1290, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 1224, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 1313,
	1314, 404, 1237, 301, 0, 0, 0, 0, 0, 405,
	406, 407, 1297, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 1324, 414, 415, 416, 1310,
	1311, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 1320, 0, 1247, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 1702, 1284, 1287, 527, 1326, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 302, 443, 444, 445, 0, 1325, 736, 446, 528,
	447, 1292, 1293, 0, 1253, 0, 448, 449, 451, 1327,
	1285, 1328, 450, 452, 453, 1329, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 1321, 464, 1330, 466, 467, 1331, 0, 468,
	469, 470, 471, 472, 473, 476, 1276, 1275, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 1332, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 1333, 520, 508, 1215,
	303, 1334, 522, 523, 524, 525, 1238, 1286, 526, 1300,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 1335, 539, 1336,
	1315, 540, 541, 1225, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 1316, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 1296, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 1337, 602, 603, 604, 605, 606, 1226, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 1279, 631, 752, 632, 613, 614, 633, 634, 1338,
	635, 636, 637, 638, 639, 640, 641, 1294, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 1341, 652, 653, 654, 655, 1317, 659, 660,
	661, 662, 0, 663, 664, 1212, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	1306, 1307, 1308, 1309, 0, 685, 0, 674, 676, 677,
	678, 679, 1318, 680, 1319, 1236, 681, 682, 683, 684,
	675, 686, 687, 0, 1219, 688, 689, 691, 693, 694,
	690, 692, 695, 1280, 696, 0, 0, 697, 698, 699,
	762, 1303, 1340, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 0, 0, 0, 0, 708, 709, 766,
	710, 711, 712, 1216, 0, 0, 0, 0, 1696, 0,
	1258, 1230, 1231, 1232, 1228, 1229, 1241, 0, 1211, 0,
	0, 0, 0, 0, 0, 1209, 1210, 304, 305, 307,
	306, 308, 309, 310, 311, 1242, 312, 313, 0, 1240,
	0, 0, 0, 1282, 1246, 0, 0, 314, 0, 315,
	316, 317, 1322, 318, 319, 320, 321, 322, 323, 324,
	714, 1295, 0, 325, 1302, 326, 1301, 0, 1312, 327,
	328, 329, 330, 331, 332, 333, 1248, 1281, 1213, 334,
	1342, 1343, 721, 0, 335, 336, 1288, 0, 1269, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 1323,
	361, 362, 363, 1272, 1270, 1271, 1278, 1274, 1273, 1277,
	364, 365, 366, 367, 368, 1305, 369, 371, 1299, 1298,
	1218, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 1290, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 1224,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 1313, 1314, 404, 1237, 301, 0, 0, 0,
	0, 0, 405, 406, 407, 1297, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 1324, 414,
	415, 416, 1310, 1311, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 1320, 0, 1247, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 1283, 1284, 1287,
	527, 1326, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 302, 443, 444, 445, 0, 1325,
	736, 446, 528, 447, 1292, 1293, 0, 1253, 0, 448,
	449, 451, 1327, 1285, 1328, 450, 452, 453, 1329, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 1321, 464, 1330, 466, 467,
	1331, 0, 468, 469, 470, 471, 472, 473, 476, 1276,
	1275, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 1332, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 1333,
	520, 508, 1215, 303, 1334, 522, 523, 524, 525, 1238,
	1286, 526, 1300, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	1335, 539, 1336, 1315, 540, 541, 1225, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 1316, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 1296, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 1337, 602, 603, 604, 605, 606,
	1226, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 1279, 631, 752, 632, 613, 614,
	633, 634, 1338, 635, 636, 637, 638, 639, 640, 641,
	1294, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 1341, 652, 653, 654, 655,
	1317, 659, 660, 661, 662, 0, 663, 664, 1212, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 1306, 1307, 1308, 1309, 0, 685, 0,
	674, 676, 677, 678, 679, 1318, 680, 1319, 1236, 681,
	682, 683, 684, 675, 686, 687, 0, 1219, 688, 689,
	691, 693, 694, 690, 692, 695, 1280, 696, 0, 0,
	697, 698, 699, 762, 1303, 1340, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 0, 0, 0, 0,
	708, 709, 766, 710, 711, 712, 1216, 0, 0, 0,
	0, 1658, 0, 1258, 1230, 1231, 1232, 1228, 1229, 1241,
	0, 1211, 0, 0, 0, 0, 0, 0, 1209, 1210,
	304, 305, 307, 306, 308, 309, 310, 311, 1242, 312,
	313, 0, 1240, 0, 0, 0, 1282, 1246, 0, 0,
	314, 0, 315, 316, 317, 1322, 318, 319, 320, 321,
	322, 323, 324, 714, 1295, 0, 325, 1302, 326, 1301,
	0, 1312, 327, 328, 329, 330, 331, 332, 333, 1248,
	1281, 1213, 334, 1342, 1343, 721, 0, 335, 336, 1288,
	0, 1269, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 1323, 361, 362, 363, 1272, 1270, 1271, 1278,
	1274, 1273, 1277, 364, 365, 366, 367, 368, 1305, 369,
	371, 1299, 1298, 1218, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 1290,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 1224, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 1313, 1314, 404, 1237, 301,
	0, 0, 0, 0, 0, 405, 406, 407, 1297, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 1324, 414, 415, 416, 1310, 1311, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 1320, 0,
	1247, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	1283, 1284, 1287, 527, 1326, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 302, 443, 444,
	445, 0, 1325, 736, 446, 528, 447, 1292, 1293, 0,
	1253, 0, 448, 449, 451, 1327, 1285, 1328, 450, 452,
	453, 1329, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 1321, 464,
	1330, 466, 467, 1331, 0, 468, 469, 470, 471, 472,
	473, 476, 1276, 1275, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 1332, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 1333, 520, 508, 1215, 303, 1334, 522, 523,
	524, 525, 1238, 1286, 526, 1300, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 1335, 539, 1336, 1315, 540, 541, 1225,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 1316, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 1296,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 1337, 602, 603,
	604, 605, 606, 1226, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 1279, 631, 752,
	632, 613, 614, 633, 634, 1338, 635, 636, 637, 638,
	639, 640, 641, 1294, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 1341, 652,
	653, 654, 655, 1317, 659, 660, 661, 662, 0, 663,
	664, 1212, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 1306, 1307, 1308, 1309,
	0, 685, 0, 674, 676, 677, 678, 679, 1318, 680,
	1319, 1236, 681, 682, 683, 684, 675, 686, 687, 0,
	1219, 688, 689, 691, 693, 694, 690, 692, 695, 1280,
	696, 0, 0, 697, 698, 699, 762, 1303, 1340, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 0,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 1216,
	0, 0, 0, 0, 1640, 0, 1258, 1230, 1231, 1232,
	1228, 1229, 1241, 0, 1211, 0, 0, 0, 0, 0,
	0, 1209, 1210, 304, 305, 307, 306, 308, 309, 310,
	311, 1242, 312, 313, 0, 1240, 0, 0, 0, 1282,
	1246, 0, 0, 314, 0, 315, 316, 317, 1322, 318,
	319, 320, 321, 322, 323, 324, 714, 1295, 0, 325,
	1302, 326, 1301, 0, 1312, 327, 328, 329, 330, 331,
	332, 333, 1248, 1281, 1213, 334, 1342, 1343, 721, 0,
	335, 336, 1288, 0, 1269, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 1323, 361, 362, 363, 1272,
	1270, 1271, 1278, 1274, 1273, 1277, 364, 365, 366, 367,
	368, 1305, 369, 371, 1299, 1298, 1218, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 1290, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 1224, 392, 393, 394, 396,
	398, 395, 1644, 399, 400, 401, 402, 403, 1313, 1314,
	404, 1237, 301, 0, 0, 0, 0, 0, 405, 406,
	407, 1297, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 1324, 414, 415, 416, 1310, 1311,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 1320, 0, 1247, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 1283, 1284, 1287, 527, 1326, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	302, 443, 444, 445, 0, 1325, 736, 446, 528, 447,
	1292, 1293, 0, 1253, 0, 448, 449, 451, 1327, 1285,
	1328, 450, 452, 453, 1329, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 1321, 464, 1330, 466, 467, 1331, 0, 468, 469,
	470, 471, 472, 473, 476, 1276, 1275, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 1332, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 1333, 520, 508, 1215, 303,
	1334, 522, 523, 524, 525, 1238, 1286, 526, 1300, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 1335, 539, 1336, 1315,
	540, 541, 1225, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 1316, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 1296, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 1645, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	1337, 602, 603, 604, 605, 606, 1226, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	1279, 631, 752, 632, 613, 614, 633, 634, 1338, 635,
	636, 637, 638, 639, 640, 641, 1294, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 1341, 652, 653, 654, 655, 1317, 659, 660, 661,
	662, 0, 663, 664, 1212, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 1643, 672, 0, 673, 1306,
	1307, 1308, 1309, 0, 685, 0, 674, 676, 677, 678,
	679, 1318, 680, 1319, 1236, 681, 682, 683, 684, 675,
	686, 687, 0, 1219, 688, 689, 691, 693, 694, 690,
	692, 695, 1280, 696, 0, 0, 697, 698, 699, 762,
	1303, 1340, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 0, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 1216, 0, 0, 0, 0, 1470, 0, 1258,
	1230, 1231, 1232, 1228, 1229, 1241, 0, 1211, 0, 0,
	0, 0, 0, 0, 1209, 1210, 304, 305, 307, 306,
	308, 309, 310, 311, 1242, 312, 313, 0, 1240, 0,
	0, 0, 1282, 1246, 0, 0, 314, 0, 315, 316,
	317, 1322, 318, 319, 320, 321, 322, 323, 324, 714,
	1295, 0, 325, 1302, 326, 1301, 0, 1312, 327, 328,
	329, 330, 331, 332, 333, 1248, 1281, 1213, 334, 1342,
	1343, 721, 0, 335, 336, 1288, 0, 1269, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 1323, 361,
	362, 363, 1272, 1270, 1271, 1278, 1274, 1273, 1277, 364,
	365, 366, 367, 368, 1305, 369, 371, 1299, 1298, 1218,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 1290, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 1224, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 1313, 1314, 404, 1237, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 1297, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 1324, 414, 415,
	416, 1310, 1311, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 1320, 0, 1247, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 1283, 1284, 1287, 527,
	1326, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 0, 1325, 736,
	446, 528, 447, 1292, 1293, 0, 1253, 0, 448, 449,
	451, 1327, 1285, 1328, 450, 452, 453, 1329, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 1321, 464, 1330, 466, 467, 1331,
	0, 468, 469, 470, 471, 472, 473, 476, 1276, 1275,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	1332, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 1333, 520,
	508, 1215, 303, 1334, 522, 523, 524, 525, 1238, 1286,
	526, 1300, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 1335,
	539, 1336, 1315, 540, 541, 1225, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 1316, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 1296, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 1337, 602, 603, 604, 605, 606, 1226,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 1279, 631, 752, 632, 613, 614, 633,
	634, 1338, 635, 636, 637, 638, 639, 640, 641, 1294,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 1341, 652, 653, 654, 655, 1317,
	659, 660, 661, 662, 0, 663, 664, 1212, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 1306, 1307, 1308, 1309, 0, 685, 0, 674,
	676, 677, 678, 679, 1318, 680, 1319, 1236, 681, 682,
	683, 684, 675, 686, 687, 0, 1219, 688, 689, 691,
	693, 694, 690, 692, 695, 1280, 696, 0, 0, 697,
	698, 699, 762, 1303, 1340, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 0, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 1216, 0, 0, 0, 0,
	0, 0, 1258, 1230, 1231, 1232, 1228, 1229, 1241, 0,
	1211, 0, 0, 0, 0, 0, 0, 1209, 1210, 304,
	305, 307, 306, 308, 309, 310, 311, 1242, 312, 313,
	0, 1240, 0, 0, 0, 1282, 1246, 0, 0, 314,
	0, 315, 316, 317, 1322, 318, 319, 320, 321, 322,
	323, 324, 714, 1295, 0, 325, 1302, 326, 1301, 0,
	1312, 327, 328, 329, 330, 331, 332, 333, 1248, 1281,
	1213, 334, 1342, 1343, 721, 0, 335, 336, 1288, 0,
	1269, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 1323, 361, 362, 363, 1272, 1270, 1271, 1278, 1274,
	1273, 1277, 364, 365, 366, 367, 368, 1305, 369, 371,
	1299, 1298, 1218, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 1290, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 1224, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 1313, 1314, 404, 1237, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 1297, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	1324, 414, 415, 416, 1310, 1311, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 1320, 0, 1247,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 1283,
	1284, 1287, 527, 1326, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 1325, 736, 446, 528, 447, 1292, 1293, 0, 1253,
	0, 448, 449, 451, 1327, 1285, 1328, 450, 452, 453,
	1329, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 1321, 464, 1330,
	466, 467, 1331, 0, 468, 469, 470, 471, 472, 473,
	476, 1276, 1275, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 1332, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 1333, 520, 508, 1215, 303, 1334, 522, 523, 524,
	525, 1238, 1286, 526, 1300, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 1335, 539, 1336, 1315, 540, 541, 1225, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	1316, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 1296, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 1337, 602, 603, 604,
	605, 606, 1226, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 1279, 631, 752, 632,
	613, 614, 633, 634, 1338, 635, 636, 637, 638, 639,
	640, 641, 1294, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 1341, 652, 653,
	654, 655, 1317, 659, 660, 661, 662, 0, 663, 664,
	1212, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 1306, 1307, 1308, 1309, 0,
	685, 0, 674, 676, 677, 678, 679, 1318, 680, 1319,
	1236, 681, 682, 683, 684, 675, 686, 687, 0, 1219,
	688, 689, 691, 693, 694, 690, 692, 695, 1280, 696,
	0, 0, 697, 698, 699, 762, 1303, 1340, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 0, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 1216, 0,
	0, 0, 0, 0, 0, 1258, 1230, 1231, 1232, 1228,
	1229, 1241, 0, 1211, 0, 0, 0, 0, 0, 0,
	1209, 1210, 304, 305, 307, 306, 308, 309, 310, 311,
	1242, 312, 313, 0, 1240, 0, 0, 0, 1282, 1246,
	0, 0, 314, 0, 315, 316, 317, 1322, 318, 319,
	320, 321, 322, 323, 324, 714, 1295, 0, 325, 1302,
	326, 1301, 0, 1312, 327, 328, 329, 330, 331, 332,
	333, 1248, 1281, 1213, 334, 1342, 1343, 721, 0, 335,
	336, 1288, 0, 1269, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 1323, 361, 362, 5240, 1272, 1270,
	1271, 1278, 1274, 1273, 1277, 364, 365, 366, 367, 368,
	1305, 369, 371, 1299, 1298, 1218, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 1290, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 1224, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 1313, 1314, 404,
	1237, 301, 0, 0, 0, 0, 0, 405, 406, 407,
	1297, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 1324, 414, 415, 416, 1310, 1311, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	1320, 0, 1247, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 1283, 1284, 1287, 527, 1326, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 0, 1325, 736, 446, 528, 447, 1292,
	1293, 0, 1253, 0, 448, 449, 451, 1327, 1285, 1328,
	450, 452, 453, 1329, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	1321, 464, 1330, 466, 467, 1331, 0, 468, 469, 470,
	471, 472, 473, 476, 1276, 1275, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 1332, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 1333, 520, 508, 1215, 303, 1334,
	522, 523, 524, 525, 1238, 1286, 526, 1300, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 1335, 539, 1336, 1315, 540,
	541, 1225, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 1316, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 1296, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 1337,
	602, 603, 604, 605, 606, 1226, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 1279,
	631, 752, 632, 613, 614, 633, 634, 1338, 635, 636,
	637, 638, 639, 640, 641, 1294, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	1341, 652, 653, 654, 655, 1317, 659, 660, 661, 662,
	0, 663, 664, 1212, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 1306, 1307,
	1308, 1309, 0, 685, 0, 674, 676, 677, 678, 679,
	1318, 680, 1319, 1236, 681, 682, 683, 684, 675, 5239,
	687, 0, 1219, 688, 689, 691, 693, 694, 690, 692,
	695, 1280, 696, 0, 0, 697, 698, 699, 762, 1303,
	1340, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 0, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 1216, 0, 0, 0, 0, 0, 0, 1258, 1230,
	1231, 1232, 1228, 1229, 1241, 0, 1211, 0, 0, 0,
	0, 0, 0, 1209, 1210, 304, 305, 307, 306, 308,
	309, 310, 311, 1242, 312, 313, 0, 1240, 0, 0,
	0, 1282, 1246, 0, 0, 314, 0, 315, 316, 317,
	1322, 318, 319, 320, 321, 322, 323, 324, 5238, 1295,
	0, 325, 1302, 326, 1301, 0, 1312, 327, 328, 329,
	330, 331, 332, 333, 1248, 1281, 1213, 334, 1342, 1343,
	721, 0, 335, 336, 1288, 0, 1269, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 1323, 361, 362,
	5240, 1272, 1270, 1271, 1278, 1274, 1273, 1277, 364, 365,
	366, 367, 368, 1305, 369, 371, 1299, 1298, 1218, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 1290, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 1224, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	1313, 1314, 404, 1237, 301, 0, 0, 0, 0, 0,
	405, 406, 407, 1297, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 1324, 414, 415, 416,
	1310, 1311, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 1320, 0, 1247, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 1283, 1284, 1287, 527, 1326,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 302, 443, 444, 445, 0, 1325, 736, 446,
	528, 447, 1292, 1293, 0, 1253, 0, 448, 449, 451,
	1327, 1285, 1328, 450, 452, 453, 1329, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 1321, 464, 1330, 466, 467, 1331, 0,
	468, 469, 470, 471, 472, 473, 476, 1276, 1275, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 1332,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 1333, 520, 508,
	1215, 303, 1334, 522, 523, 524, 525, 1238, 1286, 526,
	1300, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 1335, 539,
	1336, 1315, 540, 541, 1225, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 1316, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 1296, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 1337, 602, 603, 604, 605, 606, 1226, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 1279, 631, 752, 632, 613, 614, 633, 634,
	1338, 635, 636, 637, 638, 639, 640, 641, 1294, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 1341, 652, 653, 654, 655, 1317, 659,
	660, 661, 662, 0, 663, 664, 1212, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 1306, 1307, 1308, 1309, 0, 685, 0, 674, 676,
	677, 678, 679, 1318, 680, 1319, 1236, 681, 682, 683,
	684, 675, 5239, 687, 0, 1219, 688, 689, 691, 693,
	694, 690, 692, 695, 1280, 696, 0, 0, 697, 698,
	699, 762, 1303, 1340, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 0, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 1216, 0, 0, 0, 0, 0,
	0, 1258, 1230, 1231, 1232, 1228, 1229, 1241, 0, 1211,
	0, 0, 0, 0, 0, 0, 1209, 1210, 304, 305,
	307, 306, 308, 309, 310, 311, 1242, 312, 313, 0,
	1240, 0, 0, 0, 1282, 1246, 0, 0, 314, 0,
	315, 316, 317, 1322, 318, 319, 320, 321, 322, 323,
	324, 714, 1295, 0, 325, 1302, 326, 1301, 0, 1312,
	327, 328, 329, 330, 331, 332, 333, 1248, 1281, 1213,
	334, 1342, 1343, 721, 0, 335, 336, 1288, 0, 1269,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	1323, 361, 4807, 363, 1272, 1270, 1271, 1278, 1274, 1273,
	1277, 364, 365, 366, 367, 368, 1305, 369, 371, 1299,
	1298, 1218, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 1290, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	1224, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 1313, 1314, 404, 1237, 301, 0, 0,
	0, 0, 0, 405, 406, 407, 1297, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 1324,
	414, 415, 416, 1310, 1311, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 1320, 0, 4808, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 1283, 1284,
	1287, 527, 1326, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 302, 443, 444, 445, 0,
	1325, 736, 446, 528, 447, 1292, 1293, 0, 1253, 0,
	448, 449, 451, 1327, 1285, 1328, 450, 452, 453, 1329,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 1321, 464, 1330, 466,
	467, 1331, 0, 468, 469, 470, 471, 472, 473, 476,
	1276, 1275, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 1332, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	1333, 520, 508, 1215, 303, 1334, 522, 523, 524, 525,
	1238, 1286, 526, 1300, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 1335, 539, 1336, 1315, 540, 541, 1225, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 1316,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 1296, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 1337, 602, 603, 604, 4806,
	606, 1226, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 1279, 631, 752, 632, 613,
	614, 633, 634, 1338, 635, 636, 637, 638, 639, 640,
	641, 1294, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 1341, 652, 653, 654,
	655, 1317, 659, 660, 661, 662, 0, 663, 664, 1212,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 1306, 1307, 1308, 1309, 0, 685,
	0, 674, 676, 677, 678, 679, 1318, 680, 1319, 1236,
	681, 682, 683, 684, 675, 686, 687, 0, 1219, 688,
	689, 691, 693, 694, 690, 692, 695, 1280, 696, 0,
	0, 697, 698, 699, 762, 1303, 1340, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 0, 0, 0,
	0, 708, 709, 766, 710, 711, 712, 1216, 0, 0,
	0, 0, 0, 0, 1258, 1230, 1231, 1232, 3485, 3486,
	1241, 0, 1211, 0, 0, 0, 0, 0, 0, 1209,
	1210, 304, 305, 307, 306, 308, 309, 310, 311, 1242,
	312, 313, 0, 1240, 0, 0, 0, 1282, 1246, 0,
	0, 314, 0, 315, 316, 317, 1322, 318, 319, 320,
	321, 322, 323, 324, 714, 1295, 0, 325, 1302, 326,
	1301, 0, 1312, 327, 328, 329, 330, 331, 332, 333,
	1248, 1281, 1213, 334, 1342, 1343, 721, 0, 335, 336,
	1288, 0, 1269, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 1323, 361, 362, 363, 1272, 1270, 1271,
	1278, 1274, 1273, 1277, 364, 365, 366, 367, 368, 1305,
	369, 371, 1299, 1298, 1218, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	1290, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 1224, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 1313, 1314, 404, 1237,
	301, 0, 0, 0, 0, 0, 405, 406, 407, 1297,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 1324, 414, 415, 416, 1310, 1311, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 1320,
	0, 1247, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 1283, 1284, 1287, 527, 1326, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 302, 443,
	444, 445, 0, 1325, 736, 446, 528, 447, 1292, 1293,
	0, 1253, 0, 448, 449, 451, 1327, 1285, 1328, 450,
	452, 453, 1329, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 1321,
	464, 1330, 466, 467, 1331, 0, 468, 469, 470, 471,
	472, 473, 476, 1276, 1275, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 1332, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 1333, 520, 508, 1215, 303, 1334, 522,
	523, 524, 525, 1238, 1286, 526, 1300, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 1335, 539, 1336, 1315, 540, 541,
	1225, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 1316, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	1296, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 1337, 602,
	603, 604, 605, 606, 1226, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 1279, 631,
	752, 632, 613, 614, 633, 634, 1338, 635, 636, 637,
	638, 639, 640, 641, 1294, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 1341,
	652, 653, 654, 655, 1317, 659, 660, 661, 662, 0,
	663, 664, 1212, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 1306, 1307, 1308,
	1309, 0, 685, 0, 674, 676, 677, 678, 679, 1318,
	680, 1319, 1236, 681, 682, 683, 684, 675, 686, 687,
	0, 1219, 688, 689, 691, 693, 694, 690, 692, 695,
	1280, 696, 0, 0, 697, 698, 699, 762, 1303, 1340,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	0, 0, 0, 0, 708, 709, 766, 710, 711, 712,
	1216, 0, 0, 0, 0, 0, 0, 1258, 1230, 1231,
	1232, 3483, 3484, 1241, 0, 1211, 0, 0, 0, 0,
	0, 0, 1209, 1210, 304, 305, 307, 306, 308, 309,
	310, 311, 1242, 312, 313, 0, 1240, 0, 0, 0,
	1282, 1246, 0, 0, 314, 0, 315, 316, 317, 1322,
	318, 319, 320, 321, 322, 323, 324, 714, 1295, 0,
	325, 1302, 326, 1301, 0, 1312, 327, 328, 329, 330,
	331, 332, 333, 1248, 1281, 1213, 334, 1342, 1343, 721,
	0, 335, 336, 1288, 0, 1269, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 1323, 361, 362, 363,
	1272, 1270, 1271, 1278, 1274, 1273, 1277, 364, 365, 366,
	367, 368, 1305, 369, 371, 1299, 1298, 1218, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 1290, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 1224, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 1313,
	1314, 404, 1237, 301, 0, 0, 0, 0, 0, 405,
	406, 407, 1297, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 1324, 414, 415, 416, 1310,
	1311, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 1320, 0, 1247, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 1283, 1284, 1287, 527, 1326, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 302, 443, 444, 445, 0, 1325, 736, 446, 528,
	447, 1292, 1293, 0, 1253, 0, 448, 449, 451, 1327,
	1285, 1328, 450, 452, 453, 1329, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 1321, 464, 1330, 466, 467, 1331, 0, 468,
	469, 470, 471, 472, 473, 476, 1276, 1275, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 1332, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 1333, 520, 508, 1215,
	303, 1334, 522, 523, 524, 525, 1238, 1286, 526, 1300,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 1335, 539, 1336,
	1315, 540, 541, 1225, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 1316, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 1296, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 1337, 602, 603, 604, 605, 606, 1226, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 1279, 631, 752, 632, 613, 614, 633, 634, 1338,
	635, 636, 637, 638, 639, 640, 641, 1294, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 1341, 652, 653, 654, 655, 1317, 659, 660,
	661, 662, 0, 663, 664, 1212, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	1306, 1307, 1308, 1309, 0, 685, 0, 674, 676, 677,
	678, 679, 1318, 680, 1319, 1236, 681, 682, 683, 684,
	675, 686, 687, 0, 1219, 688, 689, 691, 693, 694,
	690, 692, 695, 1280, 696, 0, 0, 697, 698, 699,
	762, 1303, 1340, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 0, 0, 0, 0, 708, 709, 766,
	710, 711, 712, 1216, 0, 0, 0, 0, 0, 0,
	1258, 1230, 1231, 1232, 1228, 1229, 1241, 0, 1211, 0,
	0, 0, 0, 0, 0, 1209, 1210, 304, 305, 307,
	306, 308, 309, 310, 311, 1242, 312, 313, 0, 1240,
	0, 0, 0, 1282, 1246, 0, 0, 314, 0, 315,
	316, 317, 1322, 318, 319, 320, 321, 322, 323, 324,
	714, 1295, 0, 325, 1302, 326, 1301, 0, 1312, 327,
	328, 329, 330, 331, 332, 333, 1248, 1281, 1213, 334,
	1342, 1343, 721, 0, 335, 336, 1288, 0, 1269, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 1323,
	361, 362, 363, 1272, 1270, 1271, 1278, 1274, 1273, 1277,
	364, 365, 366, 367, 368, 1305, 369, 371, 1299, 1298,
	1218, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 1290, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 1224,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 1313, 1314, 404, 1237, 301, 0, 0, 0,
	0, 0, 405, 406, 407, 1297, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 1324, 414,
	415, 416, 1310, 1311, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 1320, 0, 1247, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 1283, 1284, 1287,
	527, 1326, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 302, 443, 444, 445, 0, 1325,
	736, 446, 528, 447, 1292, 1293, 0, 1253, 0, 448,
	449, 451, 1327, 1285, 1328, 450, 452, 453, 1329, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 1321, 464, 1330, 466, 467,
	1331, 0, 468, 469, 470, 471, 472, 473, 476, 1276,
	1275, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 1332, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 1333,
	520, 508, 1215, 303, 1334, 522, 523, 524, 525, 1238,
	1286, 526, 1300, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	1335, 539, 1336, 1315, 540, 541, 1225, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 1316, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 1296, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 1337, 602, 603, 604, 605, 606,
	1226, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 1279, 631, 752, 632, 613, 614,
	633, 634, 1338, 635, 636, 637, 638, 639, 640, 641,
	1294, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 1341, 652, 653, 654, 655,
	1317, 659, 660, 661, 662, 0, 663, 664, 1212, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 1306, 1307, 1308, 1309, 0, 685, 0,
	674, 676, 677, 678, 679, 1318, 680, 1319, 1236, 681,
	682, 683, 684, 675, 686, 687, 0, 1219, 688, 689,
	691, 693, 694, 690, 692, 695, 1280, 696, 0, 0,
	697, 698, 699, 762, 1303, 1340, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 0, 0, 0, 0,
	708, 709, 766, 710, 711, 712, 1216, 0, 0, 0,
	0, 0, 0, 1258, 1230, 1231, 1232, 1228, 1229, 1241,
	0, 1211, 0, 0, 0, 0, 0, 0, 2689, 2690,
	304, 305, 307, 306, 308, 309, 310, 311, 1242, 312,
	313, 0, 1240, 0, 0, 0, 1282, 1246, 0, 0,
	314, 0, 315, 316, 317, 1322, 318, 319, 320, 321,
	322, 323, 324, 714, 1295, 0, 325, 1302, 326, 1301,
	0, 1312, 327, 328, 329, 330, 331, 332, 333, 1248,
	1281, 0, 334, 1342, 1343, 721, 0, 335, 336, 1288,
	0, 1269, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 1323, 361, 362, 363, 1272, 1270, 1271, 1278,
	1274, 1273, 1277, 364, 365, 366, 367, 368, 1305, 369,
	371, 1299, 1298, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 1290,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 1224, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 1313, 1314, 404, 1237, 301,
	0, 0, 0, 0, 0, 405, 406, 407, 1297, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 1324, 414, 415, 416, 1310, 1311, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 1320, 0,
	1247, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	1283, 1284, 1287, 527, 1326, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 302, 443, 444,
	445, 0, 1325, 736, 446, 528, 447, 1292, 1293, 0,
	1253, 0, 448, 449, 451, 1327, 1285, 1328, 450, 452,
	453, 1329, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 1321, 464,
	1330, 466, 467, 1331, 0, 468, 469, 470, 471, 472,
	473, 476, 1276, 1275, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 1332, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 1333, 520, 508, 0, 303, 1334, 522, 523,
	524, 525, 1238, 1286, 526, 1300, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 1335, 539, 1336, 1315, 540, 541, 1225,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 1316, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 1296,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 1337, 602, 603,
	604, 605, 606, 1226, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 1279, 631, 752,
	632, 613, 614, 633, 634, 1338, 635, 636, 637, 638,
	639, 640, 641, 1294, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 1341, 652,
	653, 654, 655, 1317, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 1306, 1307, 1308, 1309,
	0, 685, 0, 674, 676, 677, 678, 679, 1318, 680,
	1319, 1236, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 1280,
	696, 0, 0, 697, 698, 699, 762, 1303, 1340, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 0,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 0,
	0, 0, 0, 0, 0, 0, 1258, 1230, 1231, 1232,
	1228, 1229, 1241, 0, 2950, 0, 0, 0, 0, 0,
	0, 2948, 2949, 304, 305, 307, 306, 308, 309, 310,
	311, 1242, 312, 313, 0, 1240, 0, 0, 0, 1282,
	1246, 0, 0, 314, 0, 315, 316, 317, 1322, 318,
	319, 320, 321, 322, 323, 324, 714, 1295, 0, 325,
	1302, 326, 1301, 0, 1312, 327, 328, 329, 330, 331,
	332, 333, 1248, 1281, 0, 334, 1342, 1343, 721, 0,
	335, 336, 1288, 0, 1269, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 1323, 361, 362, 363, 1272,
	1270, 1271, 1278, 1274, 1273, 1277, 364, 365, 366, 367,
	368, 1305, 369, 371, 1299, 1298, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 1290, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 1224, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 1313, 1314,
	404, 1237, 301, 0, 0, 0, 0, 0, 405, 406,
	407, 1297, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 1324, 414, 415, 416, 1310, 1311,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 1320, 0, 1247, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 1283, 1284, 1287, 527, 1326, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	302, 443, 444, 445, 0, 1325, 736, 446, 528, 447,
	1292, 1293, 0, 1253, 0, 448, 449, 451, 1327, 1285,
	1328, 450, 452, 453, 1329, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 1321, 464, 1330, 466, 467, 1331, 0, 468, 469,
	470, 471, 472, 473, 476, 1276, 1275, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 1332, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 1333, 520, 508, 0, 303,
	1334, 522, 523, 524, 525, 1238, 1286, 526, 1300, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 1335, 539, 1336, 1315,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 1316, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 1296, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	1337, 602, 603, 604, 605, 606, 3478, 3479, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	1279, 631, 752, 632, 613, 614, 633, 634, 1338, 635,
	636, 637, 638, 639, 640, 641, 1294, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 1341, 652, 653, 654, 655, 1317, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 1306,
	1307, 1308, 1309, 0, 685, 0, 674, 676, 677, 678,
	679, 1318, 680, 1319, 1236, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 1280, 696, 0, 0, 697, 698, 699, 762,
	1303, 1340, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 0, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 0, 0, 0, 0, 0, 0, 0, 1258,
	1230, 1231, 1232, 1228, 1229, 1241, 0, 0, 0, 0,
	0, 0, 0, 0, 2310, 2311, 304, 305, 307, 306,
	308, 309, 310, 311, 1242, 312, 313, 0, 1240, 0,
	0, 0, 1282, 1246, 0, 0, 314, 0, 315, 316,
	317, 1322, 318, 319, 320, 321, 322, 323, 324, 0,
	1295, 0, 325, 1302, 326, 1301, 0, 1312, 327, 328,
	329, 330, 331, 332, 333, 1248, 1281, 1213, 334, 1342,
	1343, 721, 0, 335, 336, 1288, 0, 1269, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 1323, 361,
	362, 5240, 1272, 1270, 1271, 1278, 1274, 1273, 1277, 364,
	365, 366, 367, 368, 1305, 369, 371, 1299, 1298, 1218,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 1290, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 1224, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 1313, 1314, 404, 1237, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 1297, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 1324, 414, 415,
	416, 1310, 1311, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 1320, 0, 1247, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 1283, 1284, 1287, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 0, 1325, 736,
	446, 528, 447, 1292, 1293, 0, 1253, 0, 448, 449,
	451, 0, 1285, 0, 450, 452, 453, 1329, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 1321, 464, 1330, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 473, 476, 1276, 1275,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	1332, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 1333, 520,
	508, 1215, 303, 0, 522, 523, 524, 525, 1238, 1286,
	526, 1300, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 1335,
	539, 1336, 1315, 540, 541, 1225, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 1316, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 1296, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 1337, 602, 603, 604, 605, 606, 1226,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 1279, 631, 752, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 1294,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 1341, 652, 653, 654, 655, 1317,
	659, 660, 661, 662, 0, 663, 664, 1212, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 1306, 1307, 1308, 1309, 0, 685, 0, 674,
	676, 677, 678, 679, 1318, 680, 1319, 1236, 681, 682,
	683, 684, 675, 5239, 687, 0, 1219, 688, 689, 691,
	693, 694, 690, 692, 695, 1280, 696, 0, 0, 697,
	698, 699, 762, 1303, 1340, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 0, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	2969, 0, 1258, 1230, 1231, 1232, 1228, 1229, 1241, 0,
	0, 0, 0, 0, 0, 0, 0, 1209, 1210, 304,
	305, 307, 306, 308, 309, 310, 311, 1242, 312, 313,
	0, 1240, 0, 0, 0, 1282, 1246, 0, 0, 314,
	0, 315, 316, 317, 1322, 318, 319, 320, 321, 322,
	323, 324, 714, 1295, 0, 325, 1302, 326, 1301, 0,
	1312, 327, 328, 329, 330, 331, 332, 333, 0, 1281,
	0, 334, 1342, 1343, 721, 0, 335, 336, 1288, 0,
	1269, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 1323, 361, 362, 363, 1272, 1270, 1271, 1278, 1274,
	1273, 1277, 364, 365, 366, 367, 368, 1305, 369, 371,
	1299, 1298, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 1290, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 1313, 1314, 404, 1237, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 1297, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	1324, 414, 415, 416, 1310, 1311, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 1320, 0, 1247,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 1283,
	1284, 1287, 527, 1326, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 1325, 736, 446, 528, 447, 1292, 1293, 0, 1253,
	0, 448, 449, 451, 1327, 1285, 1328, 450, 452, 453,
	1329, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 1321, 464, 1330,
	466, 467, 1331, 0, 468, 469, 470, 471, 472, 473,
	476, 1276, 1275, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 1332, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 1333, 520, 508, 0, 303, 1334, 522, 523, 524,
	525, 1238, 1286, 526, 1300, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 1335, 539, 1336, 1315, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	1316, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 1296, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 1337, 602, 603, 604,
	605, 606, 1226, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 1279, 631, 752, 632,
	613, 614, 633, 634, 1338, 635, 636, 637, 638, 639,
	640, 641, 1294, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 1341, 652, 653,
	654, 655, 1317, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 1306, 1307, 1308, 1309, 0,
	685, 0, 674, 676, 677, 678, 679, 1318, 680, 1319,
	1236, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 1280, 696,
	0, 0, 697, 698, 699, 762, 1303, 1340, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 0, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	1670, 0, 1258, 1230, 1231, 1232, 1228, 1229, 1241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	1242, 0, 0, 0, 1240, 1282, 1246, 0, 0, 314,
	0, 315, 316, 317, 1322, 318, 319, 320, 321, 322,
	323, 324, 714, 1295, 0, 325, 1302, 326, 1301, 0,
	1312, 327, 328, 329, 330, 331, 332, 333, 0, 1281,
	0, 334, 1342, 1343, 721, 0, 335, 336, 1288, 0,
	1269, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 1323, 361, 362, 363, 1272, 1270, 1271, 1278, 1274,
	1273, 1277, 364, 365, 366, 367, 368, 1305, 369, 371,
	1299, 1298, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 1290, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 1313, 1314, 404, 1237, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 1297, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	1324, 414, 415, 416, 1310, 1311, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 1320, 0, 1247,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 1283,
	1284, 1287, 527, 1326, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 1325, 736, 446, 528, 447, 1292, 1293, 0, 1253,
	0, 448, 449, 451, 1327, 1285, 1328, 450, 452, 453,
	1329, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 1321, 464, 1330,
	466, 467, 1331, 0, 468, 469, 470, 471, 472, 473,
	476, 1276, 1275, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 1332, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 1333, 520, 508, 0, 303, 1334, 522, 523, 524,
	525, 1238, 1286, 526, 1300, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 1335, 539, 1336, 1315, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	1316, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 1296, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 1337, 602, 603, 604,
	605, 606, 1226, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 1279, 631, 752, 632,
	613, 614, 633, 634, 1338, 635, 636, 637, 638, 639,
	640, 641, 1294, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 1341, 652, 653,
	654, 655, 1317, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 1306, 1307, 1308, 1309, 0,
	685, 0, 674, 676, 677, 678, 679, 1318, 680, 1319,
	1236, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 1280, 696,
	0, 0, 697, 698, 699, 762, 1303, 1340, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 0, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 1200, 0,
	1381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	1242, 0, 0, 1282, 1240, 0, 0, 314, 0, 315,
	316, 317, 1322, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 1281, 0, 334,
	719, 720, 721, 0, 335, 336, 1288, 0, 1269, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 1323,
	361, 362, 363, 1272, 1270, 1271, 1278, 1274, 1273, 1277,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 1313, 1314, 404, 0, 301, 0, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 1324, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 1320, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 1283, 1284, 1287,
	527, 1326, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 302, 443, 444, 445, 0, 1325,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 1327, 1285, 1328, 450, 452, 453, 1329, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 1367,
	461, 463, 462, 0, 465, 1321, 464, 1330, 466, 467,
	1331, 0, 468, 469, 470, 471, 472, 473, 476, 1276,
	1275, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 1332, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 1333,
	520, 508, 0, 303, 1334, 522, 523, 524, 525, 0,
	1286, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 1373, 534, 535, 536, 0, 0, 537, 538, 744,
	1335, 539, 1336, 1315, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 1316, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 1337, 602, 603, 604, 605, 606,
	751, 1375, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 257, 626, 627,
	625, 628, 629, 630, 1279, 631, 752, 632, 613, 614,
	633, 634, 1338, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	1317, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 259, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 756, 757, 758, 759, 0, 685, 0,
	674, 676, 677, 678, 679, 1318, 680, 1319, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 1280, 696, 0, 0,
	697, 698, 699, 1790, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 0, 0, 0, 251,
	708, 709, 766, 710, 711, 712, 1381, 0, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 1371, 0, 2152, 1282,
	0, 0, 0, 314, 0, 315, 316, 317, 1322, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 1281, 0, 334, 719, 720, 721, 0,
	335, 336, 1288, 0, 1269, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 1323, 361, 362, 363, 1272,
	1270, 1271, 1278, 1274, 1273, 1277, 364, 365, 366, 367,
	368, 0, 369, 371, 723, 724, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 1313, 1314,
	404, 0, 301, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 1324, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 1320, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 1283, 1284, 1287, 527, 1326, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	302, 443, 444, 445, 0, 1325, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 1327, 1285,
	1328, 450, 452, 453, 1329, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 1367, 461, 463, 462, 0,
	465, 1321, 464, 1330, 466, 467, 1331, 0, 468, 469,
	470, 471, 472, 473, 476, 1276, 1275, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 1332, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 1333, 520, 508, 0, 303,
	1334, 522, 523, 524, 525, 0, 1286, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 1373, 534, 535,
	536, 0, 0, 537, 538, 744, 1335, 539, 1336, 1315,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 1316, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	1337, 602, 603, 604, 605, 606, 751, 1375, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 257, 626, 627, 625, 628, 629, 630,
	1279, 631, 752, 632, 613, 614, 633, 634, 1338, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 1317, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 259, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 756,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 1318, 680, 1319, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 1280, 696, 0, 0, 697, 698, 699, 1790,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 0, 0, 0, 251, 708, 709, 766, 710,
	711, 712, 0, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3643, 0, 1381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1371, 0, 2152, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 1282, 0, 0, 0, 314, 0, 315, 316, 317,
	1322, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 1281, 0, 334, 719, 720,
	721, 0, 335, 336, 1288, 0, 1269, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 1323, 361, 362,
	363, 1272, 1270, 1271, 1278, 1274, 1273, 1277, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	1313, 1314, 404, 0, 301, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 1324, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 1320, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 1283, 1284, 1287, 527, 1326,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 302, 443, 444, 445, 0, 1325, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	1327, 1285, 1328, 450, 452, 453, 1329, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 1367, 461, 463,
	462, 0, 465, 1321, 464, 1330, 466, 467, 1331, 0,
	468, 469, 470, 471, 472, 473, 476, 1276, 1275, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 1332,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 1333, 520, 508,
	0, 303, 1334, 522, 523, 524, 525, 0, 1286, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 1373,
	534, 535, 536, 0, 0, 537, 538, 744, 1335, 539,
	1336, 1315, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 1316, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 1337, 602, 603, 604, 605, 606, 751, 1375,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 1279, 631, 752, 632, 613, 614, 633, 634,
	1338, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 1317, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 1318, 680, 1319, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 1280, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 0, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 1363, 0, 1381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 1371, 0, 1369, 0, 0, 1282,
	0, 0, 0, 314, 0, 315, 316, 317, 1322, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 1281, 0, 334, 719, 720, 721, 0,
	335, 336, 1288, 0, 1269, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 1323, 361, 362, 363, 1272,
	1270, 1271, 1278, 1274, 1273, 1277, 364, 365, 366, 367,
	368, 0, 369, 371, 723, 724, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 1313, 1314,
	404, 0, 301, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 1324, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 1320, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 1283, 1284, 1287, 527, 1326, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	302, 443, 444, 445, 0, 1325, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 1327, 1285,
	1328, 450, 452, 453, 1329, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 1367, 461, 463, 462, 0,
	465, 1321, 464, 1330, 466, 467, 1331, 0, 468, 469,
	470, 471, 472, 473, 476, 1276, 1275, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 1332, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 1333, 520, 508, 0, 303,
	1334, 522, 523, 524, 525, 0, 1286, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 1373, 534, 535,
	536, 0, 0, 537, 538, 744, 1335, 539, 1336, 1315,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 1316, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	1337, 602, 603, 604, 605, 606, 751, 1375, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	1279, 631, 752, 632, 613, 614, 633, 634, 1338, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 1317, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 756,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 1318, 680, 1319, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 1280, 696, 0, 0, 697, 698, 699, 762,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 0, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 1381, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 1371, 0, 1369, 1282, 0, 0, 0, 314,
	0, 315, 316, 317, 1322, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 1281,
	0, 334, 719, 720, 721, 0, 335, 336, 1288, 0,
	1269, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 1323, 361, 362, 363, 1272, 1270, 1271, 1278, 1274,
	1273, 1277, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 1313, 1314, 404, 0, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	1324, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 1320, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 1283,
	1284, 1287, 527, 1326, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 1325, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 1327, 1285, 1328, 450, 452, 453,
	1329, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 1367, 461, 463, 462, 0, 465, 1321, 464, 1330,
	466, 467, 1331, 0, 468, 469, 470, 471, 472, 473,
	476, 1276, 1275, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 1332, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 1333, 520, 508, 0, 303, 1334, 522, 523, 524,
	525, 0, 1286, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 1373, 534, 535, 536, 0, 0, 537,
	538, 744, 1335, 539, 1336, 1315, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	1316, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 1337, 602, 603, 604,
	605, 606, 751, 1375, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 1279, 631, 752, 632,
	613, 614, 633, 634, 1338, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 1317, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 1318, 680, 1319,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 1280, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 0, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 1381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 1371, 0,
	1369, 1282, 0, 0, 0, 314, 0, 315, 316, 317,
	1322, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 1281, 0, 334, 719, 720,
	721, 0, 335, 336, 1288, 0, 1269, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 1323, 361, 362,
	363, 1272, 1270, 1271, 1278, 1274, 1273, 1277, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	1313, 1314, 404, 0, 301, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 1324, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 1320, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 1283, 1284, 1287, 527, 1326,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 302, 443, 444, 445, 0, 1325, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	1327, 1285, 1328, 450, 452, 453, 1329, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 1321, 464, 1330, 466, 467, 1331, 0,
	468, 469, 470, 471, 472, 473, 476, 1276, 1275, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 1332,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 1333, 520, 508,
	0, 303, 1334, 522, 523, 524, 525, 0, 1286, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 1335, 539,
	1336, 1315, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 1316, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 1337, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 1279, 631, 752, 632, 613, 614, 633, 634,
	1338, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 1317, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 1318, 680, 1319, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 1280, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 0, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 1381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 4615, 1282, 0, 0,
	0, 314, 0, 315, 316, 317, 1322, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 1281, 0, 334, 719, 720, 721, 0, 335, 336,
	1288, 0, 1269, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 1323, 361, 362, 363, 1272, 1270, 1271,
	1278, 1274, 1273, 1277, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 1313, 1314, 404, 0,
	301, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 1324, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 1320,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 1283, 1284, 1287, 527, 1326, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 302, 443,
	444, 445, 0, 1325, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 1327, 1285, 1328, 450,
	452, 453, 1329, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 1321,
	464, 1330, 466, 467, 1331, 0, 468, 469, 470, 471,
	472, 473, 476, 1276, 1275, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 1332, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 1333, 520, 508, 0, 303, 1334, 522,
	523, 524, 525, 0, 1286, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 1335, 539, 1336, 1315, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 1316, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 1337, 602,
	603, 604, 605, 606, 751, 1375, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 1279, 631,
	752, 632, 613, 614, 633, 634, 1338, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 1317, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 756, 757, 758,
	759, 0, 685, 0, 674, 676, 677, 678, 679, 1318,
	680, 1319, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	1280, 696, 0, 0, 697, 698, 699, 762, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	298, 0, 0, 0, 708, 709, 766, 710, 711, 712,
	2795, 2796, 2797, 2814, 2815, 2816, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 2817, 0, 713, 0, 0, 0, 314, 0, 315,
	316, 317, 2048, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 2033, 334,
	719, 720, 721, 0, 335, 336, 722, 0, 0, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 2807, 0,
	346, 347, 348, 345, 349, 0, 350, 2803, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 0, 0, 0, 2808, 2809,
	2810, 2811, 405, 406, 407, 728, 0, 0, 2802, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 0, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 731, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 733, 734, 735,
	527, 0, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 0, 443, 444, 445, 0, 0,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 0, 740, 0, 450, 452, 453, 0, 454,
	0, 2812, 2813, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 741, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 2805, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 0, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 0,
	520, 508, 0, 0, 0, 522, 523, 524, 525, 0,
	742, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	0, 539, 0, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 0, 602, 603, 604, 605, 606,
	751, 607, 2806, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 0, 631, 752, 632, 613, 614,
	633, 634, 0, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 0, 663, 664, 2032, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 756, 757, 758, 759, 0, 685, 0,
	674, 676, 677, 678, 679, 760, 680, 761, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 762, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 0, 0, 0, 0,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1200, 0, 1665, 2792, 2793,
	2794, 2818, 2804, 2798, 0, 2800, 2801, 2799, 2786, 2787,
	2788, 2789, 2790, 2791, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 314, 0, 315, 316, 317, 1322,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 719, 720, 721,
	0, 335, 336, 722, 0, 1629, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 1323, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 301, 0, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 1324, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 733, 734, 735, 527, 1326, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 0, 443, 444, 445, 0, 1325, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 1327,
	740, 1328, 450, 452, 453, 1329, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 741, 464, 1330, 466, 467, 1331, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 1332, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 1333, 520, 508, 0,
	0, 1334, 522, 523, 524, 525, 0, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 1335, 539, 1336,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 1337, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 257, 626, 627, 625, 628, 629,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 1338,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 259, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	1790, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 0, 0, 0, 251, 708, 709, 766,
	710, 711, 712, 0, 1787, 252, 1665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 207, 0, 0, 0, 713,
	0, 0, 0, 314, 0, 315, 316, 317, 1322, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 0, 0, 334, 719, 720, 721, 0,
	335, 336, 722, 0, 1629, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 1323, 361, 362, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 367,
	368, 0, 369, 371, 723, 724, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 726, 727,
	404, 0, 301, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 1324, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 731, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 733, 734, 735, 527, 1326, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	0, 443, 444, 445, 0, 1325, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 1327, 740,
	1328, 450, 452, 453, 1329, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 741, 464, 1330, 466, 467, 1331, 0, 468, 469,
	470, 471, 472, 473, 476, 0, 0, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 1332, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 1333, 520, 508, 0, 0,
	1334, 522, 523, 524, 525, 0, 742, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 1335, 539, 1336, 745,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 748, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	1337, 602, 603, 604, 605, 606, 751, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 257, 626, 627, 625, 628, 629, 630,
	0, 631, 752, 632, 613, 614, 633, 634, 1338, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 755, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 259, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 756,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 760, 680, 761, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 0, 696, 0, 0, 697, 698, 699, 1790,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 0, 0, 0, 251, 708, 709, 766, 710,
	711, 712, 1665, 1664, 252, 0, 0, 0, 1662, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 207, 713, 0, 0, 0, 314,
	0, 315, 316, 317, 1322, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 721, 0, 335, 336, 722, 0,
	1629, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 1323, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	1324, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 731, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 733,
	734, 735, 527, 1326, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 0, 443, 444, 445,
	0, 1325, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 1327, 740, 1328, 450, 452, 453,
	1329, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 1330,
	466, 467, 1331, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 1332, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 1333, 520, 508, 0, 0, 1334, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 1335, 539, 1336, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 1337, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 1338, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 0, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 1665, 1664,
	0, 0, 0, 0, 1662, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	1814, 713, 0, 0, 0, 314, 0, 315, 316, 317,
	1322, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 0, 335, 336, 722, 0, 1629, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 1323, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 301, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 1324, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 733, 734, 735, 527, 1326,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 0, 443, 444, 445, 0, 1325, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	1327, 740, 1328, 450, 452, 453, 1329, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 741, 464, 1330, 466, 467, 1331, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 1332,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 1333, 520, 508,
	0, 0, 1334, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 1335, 539,
	1336, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 1337, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	1338, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 0, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 1665, 1664, 0, 0, 0, 0,
	1662, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 3996, 713, 0, 0,
	0, 314, 0, 315, 316, 317, 1322, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 719, 720, 721, 0, 335, 336,
	722, 0, 1629, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 1323, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 0,
	301, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 1324, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 731,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 733, 734, 735, 527, 1326, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 0, 443,
	444, 445, 0, 1325, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 1327, 740, 1328, 450,
	452, 453, 1329, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 741,
	464, 1330, 466, 467, 1331, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 1332, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 1333, 520, 508, 0, 0, 1334, 522,
	523, 524, 525, 0, 742, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 1335, 539, 1336, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 2552, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 1337, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 0, 631,
	752, 632, 613, 614, 633, 634, 1338, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 756, 757, 758,
	759, 0, 685, 0, 674, 676, 677, 678, 679, 760,
	680, 761, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 762, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	0, 0, 0, 0, 708, 709, 766, 710, 711, 712,
	1665, 2459, 0, 0, 0, 0, 2460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 1814, 713, 0, 0, 0, 314, 0, 315,
	316, 317, 1322, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 0, 334,
	719, 720, 721, 0, 335, 336, 722, 0, 1629, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 1323,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 0, 301, 0, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 1324, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 731, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 733, 734, 735,
	527, 1326, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 0, 443, 444, 445, 0, 1325,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 1327, 740, 1328, 450, 452, 453, 1329, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	2458, 463, 462, 0, 465, 741, 464, 1330, 466, 467,
	1331, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 1332, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 1333,
	520, 508, 0, 0, 1334, 522, 523, 524, 525, 0,
	742, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	1335, 539, 1336, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 1337, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 0, 631, 752, 632, 613, 614,
	633, 634, 1338, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 756, 757, 758, 759, 0, 685, 0,
	674, 676, 677, 678, 679, 760, 680, 761, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 762, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 0, 0, 0, 0,
	708, 709, 766, 710, 711, 712, 1665, 1664, 0, 0,
	0, 0, 1662, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 0, 0, 1814, 713,
	0, 0, 0, 314, 0, 315, 316, 317, 1322, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 0, 0, 334, 719, 720, 721, 0,
	335, 336, 722, 0, 1629, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 1323, 361, 362, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 367,
	368, 0, 369, 371, 723, 724, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 726, 727,
	404, 0, 301, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 1324, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 731, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 733, 734, 735, 527, 1326, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	0, 443, 444, 445, 0, 1325, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 1327, 740,
	1328, 450, 452, 453, 1329, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 741, 464, 1330, 466, 467, 1331, 0, 468, 469,
	470, 471, 472, 473, 476, 0, 0, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 1332, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 1333, 520, 508, 0, 0,
	1334, 522, 523, 524, 525, 0, 742, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 1335, 539, 1336, 745,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 748, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	1337, 602, 603, 604, 605, 606, 751, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	0, 631, 752, 632, 613, 614, 633, 634, 1338, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 755, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 756,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 760, 680, 761, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 0, 696, 0, 0, 697, 698, 699, 762,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 0, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 1200, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 1796, 0, 0, 713, 0, 0,
	0, 314, 0, 315, 316, 317, 0, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 719, 720, 721, 0, 335, 336,
	722, 0, 0, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 0, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 731,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 733, 734, 735, 527, 0, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 0, 443,
	444, 445, 0, 0, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 0, 740, 0, 450,
	452, 453, 0, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 741,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 0, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 0, 520, 508, 0, 0, 0, 522,
	523, 524, 525, 0, 742, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 0, 539, 0, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 0, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 257, 626, 627, 625, 628, 629, 630, 0, 631,
	752, 632, 613, 614, 633, 634, 0, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 259, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 756, 757, 758,
	759, 0, 685, 0, 674, 676, 677, 678, 679, 760,
	680, 761, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 1790, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	298, 0, 0, 251, 708, 709, 766, 710, 711, 712,
	0, 0, 252, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 314, 0, 315,
	316, 317, 207, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 0, 334,
	719, 720, 721, 0, 335, 336, 722, 0, 0, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 0, 301, 0, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 0, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 731, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 733, 734, 735,
	527, 0, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 302, 443, 444, 445, 0, 0,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 0, 740, 0, 450, 452, 453, 0, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 741, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 0, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 0,
	520, 508, 0, 303, 0, 522, 523, 524, 525, 0,
	742, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	0, 539, 0, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 0, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 0, 631, 752, 632, 613, 614,
	633, 634, 0, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 756, 757, 758, 759, 0, 685, 0,
	674, 676, 677, 678, 679, 760, 680, 761, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 762, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 298, 3252, 0, 0,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 0, 0, 0, 713,
	0, 0, 0, 314, 0, 315, 316, 317, 2166, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 0, 0, 334, 719, 720, 721, 0,
	335, 336, 722, 0, 0, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 367,
	368, 0, 369, 371, 723, 724, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 726, 727,
	404, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 0, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 731, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 733, 734, 735, 527, 0, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	0, 443, 444, 445, 0, 0, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 0, 740,
	0, 450, 452, 453, 0, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 741, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 471, 472, 473, 476, 0, 0, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 0, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 0, 520, 508, 0, 0,
	0, 522, 523, 524, 525, 0, 742, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 0, 539, 0, 745,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 748, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	0, 602, 603, 604, 605, 606, 751, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	0, 631, 752, 632, 613, 614, 633, 634, 0, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 755, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 756,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 760, 680, 761, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 0, 696, 0, 0, 697, 698, 699, 762,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 298, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 0, 713, 0, 0, 0, 314,
	0, 315, 316, 317, 5433, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 721, 0, 335, 336, 722, 0,
	0, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	0, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 731, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 733,
	734, 735, 527, 0, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 0, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 0, 740, 0, 450, 452, 453,
	0, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 0, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 0, 520, 508, 0, 303, 0, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 0, 539, 0, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 0, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 0, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 0, 0,
	298, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 314, 1784, 315,
	316, 317, 0, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 0, 334,
	719, 720, 721, 0, 335, 336, 722, 0, 0, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 0, 301, 0, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 0, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 731, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 733, 734, 735,
	527, 0, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 302, 443, 444, 445, 0, 0,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 0, 740, 0, 450, 452, 453, 0, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 741, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 0, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 0,
	520, 508, 0, 303, 0, 522, 523, 524, 525, 0,
	742, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	0, 539, 0, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 0, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 0, 631, 752, 632, 613, 614,
	633, 634, 0, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 756, 757, 758, 759, 0, 685, 0,
	674, 676, 677, 678, 679, 760, 680, 761, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 762, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 0, 0, 298, 0,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 314, 3947, 315, 316, 317,
	0, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 0, 335, 336, 722, 0, 0, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 0, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 733, 734, 735, 527, 0,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 0, 443, 444, 445, 0, 0, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	0, 740, 0, 450, 452, 453, 0, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 741, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 0,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 0, 520, 508,
	0, 0, 0, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 0, 539,
	0, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 0, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	0, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 0, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 3922, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 3374, 0, 0, 0,
	0, 314, 0, 315, 316, 317, 1322, 318, 319, 320,
	321, 322, 323, 324, 0, 2216, 0, 325, 2206, 326,
	2222, 0, 2229, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 2232, 2233, 0, 0, 335, 336,
	0, 0, 1629, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 1323, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 367, 368, 1305,
	369, 371, 2220, 2219, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	1290, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 0, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 0, 0, 404, 0,
	301, 0, 0, 0, 0, 0, 405, 406, 407, 2218,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 1324, 414, 415, 416, 2227, 2228, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 0,
	0, 0, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 0, 0, 0, 527, 1326, 435, 436, 437, 3916,
	438, 439, 440, 441, 442, 0, 0, 0, 0, 443,
	444, 445, 0, 1325, 3918, 446, 528, 447, 2213, 2214,
	0, 2209, 0, 448, 449, 451, 1327, 0, 1328, 450,
	452, 453, 1329, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 0,
	464, 1330, 466, 467, 1331, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 1332, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 1333, 520, 508, 0, 0, 1334, 522,
	523, 524, 525, 0, 0, 526, 2221, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 3917, 1335, 539, 1336, 0, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 2203, 554, 555, 556, 2204, 557,
	558, 559, 0, 560, 0, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	2217, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 1337, 602,
	603, 604, 605, 606, 0, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 0, 631,
	0, 632, 613, 614, 633, 634, 1338, 635, 636, 637,
	638, 639, 640, 641, 2215, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 2231,
	652, 653, 654, 655, 0, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 2223, 2224, 2225,
	2226, 0, 685, 0, 674, 676, 677, 678, 679, 0,
	680, 0, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 0, 2207, 2230,
	3919, 701, 700, 702, 703, 704, 0, 705, 706, 707,
	0, 0, 0, 0, 708, 709, 0, 710, 711, 712,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 0, 713, 0, 0, 2197, 314, 0, 315,
	316, 317, 0, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 0, 334,
	719, 720, 721, 0, 335, 336, 722, 0, 0, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 0, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 731, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 733, 734, 735,
	527, 0, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 0, 443, 444, 445, 0, 0,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 0, 740, 0, 450, 452, 453, 0, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 741, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 0, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 0,
	520, 508, 0, 0, 0, 522, 523, 524, 525, 0,
	742, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	0, 539, 0, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 0, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 0, 631, 752, 632, 613, 614,
	633, 634, 0, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 756, 757, 758, 759, 0, 685, 0,
	674, 676, 677, 678, 679, 760, 680, 761, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 762, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 298, 0, 0, 0,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 0, 0, 0, 713,
	0, 0, 0, 314, 0, 315, 316, 317, 4111, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 0, 0, 334, 719, 720, 721, 0,
	335, 336, 722, 0, 0, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 367,
	368, 0, 369, 371, 723, 724, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 726, 727,
	404, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 0, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 731, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 733, 734, 735, 527, 0, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	0, 443, 444, 445, 0, 0, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 0, 740,
	0, 450, 452, 453, 0, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 741, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 471, 472, 473, 476, 0, 0, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 0, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 0, 520, 508, 0, 0,
	0, 522, 523, 524, 525, 0, 742, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 0, 539, 0, 745,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 748, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	0, 602, 603, 604, 605, 606, 751, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	0, 631, 752, 632, 613, 614, 633, 634, 0, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 755, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 756,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 760, 680, 761, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 0, 696, 0, 0, 697, 698, 699, 762,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 0, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 1381, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 2539, 1282, 0, 0, 0, 314,
	0, 315, 316, 317, 1322, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 1281,
	0, 334, 719, 720, 721, 0, 335, 336, 1288, 0,
	1269, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 1323, 361, 362, 363, 1272, 1270, 1271, 1278, 1274,
	1273, 1277, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 1313, 1314, 404, 0, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	1324, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 1320, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 1283,
	1284, 1287, 527, 1326, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 1325, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 1327, 1285, 1328, 450, 452, 453,
	1329, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 1321, 464, 1330,
	466, 467, 1331, 0, 468, 469, 470, 471, 472, 473,
	476, 1276, 1275, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 1332, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 1333, 520, 508, 0, 303, 1334, 522, 523, 524,
	525, 0, 1286, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 1335, 539, 1336, 1315, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	1316, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 1337, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 1279, 631, 752, 632,
	613, 614, 633, 634, 1338, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 1317, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 1318, 680, 1319,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 1280, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 2210, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 315, 316, 317,
	1322, 318, 319, 320, 321, 322, 323, 324, 0, 2216,
	0, 325, 2206, 326, 2222, 0, 2229, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 2232, 2233,
	0, 0, 335, 336, 0, 0, 1629, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 1323, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 1305, 369, 371, 2220, 2219, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 1290, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 0, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	0, 0, 404, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 407, 2218, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 1324, 414, 415, 416,
	2227, 2228, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 0, 0, 0, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 0, 0, 0, 527, 1326,
	435, 436, 437, 3916, 438, 439, 440, 441, 442, 0,
	0, 0, 0, 443, 444, 445, 0, 1325, 3918, 446,
	528, 447, 2213, 2214, 0, 2209, 0, 448, 449, 451,
	1327, 0, 1328, 450, 452, 453, 1329, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 0, 464, 1330, 466, 467, 1331, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 1332,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 1333, 520, 508,
	0, 0, 1334, 522, 523, 524, 525, 0, 0, 526,
	2221, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 3917, 1335, 539,
	1336, 0, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 2203, 554,
	555, 556, 2204, 557, 558, 559, 0, 560, 0, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 2217, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 1337, 602, 603, 604, 605, 606, 0, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 0, 631, 0, 632, 613, 614, 633, 634,
	1338, 635, 636, 637, 638, 639, 640, 641, 2215, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 2231, 652, 653, 654, 655, 0, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 2223, 2224, 2225, 2226, 0, 685, 0, 674, 676,
	677, 678, 679, 0, 680, 0, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 0, 2207, 2230, 3919, 701, 700, 702, 703, 704,
	0, 705, 706, 707, 0, 0, 0, 0, 708, 709,
	0, 710, 711, 712, 1027, 0, 928, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 0, 0, 0, 713,
	2197, 0, 0, 314, 0, 315, 316, 317, 0, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 0, 0, 334, 719, 720, 721, 0,
	335, 336, 722, 0, 0, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 936,
	368, 0, 369, 371, 723, 724, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 726, 727,
	404, 0, 301, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 1024, 0, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 731, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 733, 734, 735, 527, 0, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	302, 443, 444, 445, 0, 0, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 0, 740,
	0, 450, 452, 453, 0, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 741, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 471, 472, 473, 476, 0, 0, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 0, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 0, 520, 508, 0, 303,
	0, 522, 523, 524, 525, 0, 742, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 0, 539, 0, 745,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 748, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	0, 602, 603, 604, 605, 606, 751, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 932, 627, 625, 628, 629, 630,
	0, 631, 752, 632, 613, 614, 633, 634, 0, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 755, 659, 660, 661,
	662, 0, 663, 1026, 0, 658, 649, 934, 665, 666,
	667, 668, 669, 935, 0, 671, 672, 0, 673, 756,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 760, 680, 761, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 0, 696, 0, 0, 697, 698, 699, 762,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 928, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 4240, 312, 313,
	0, 0, 0, 0, 0, 713, 939, 0, 0, 314,
	0, 315, 316, 317, 0, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 721, 0, 335, 336, 722, 0,
	0, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 936, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	0, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 731, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 733,
	734, 735, 527, 0, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 0, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 0, 740, 0, 450, 452, 453,
	0, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 0, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 0, 520, 508, 0, 303, 0, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 0, 539, 0, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 0, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 4239, 620, 621, 622, 623, 624, 0,
	932, 627, 625, 628, 629, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 0, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 934, 665, 666, 667, 668, 669, 935,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 4238, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 928, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 2237, 312, 313, 0, 0, 0, 0,
	0, 713, 939, 0, 0, 314, 0, 315, 316, 317,
	0, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 0, 335, 336, 722, 0, 0, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 936, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 301, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 0, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 733, 734, 735, 527, 0,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 302, 443, 444, 445, 0, 0, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	0, 740, 0, 450, 452, 453, 0, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 741, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 0,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 0, 520, 508,
	0, 303, 0, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 0, 539,
	0, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 0, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 2236,
	620, 621, 622, 623, 624, 0, 2238, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	0, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 934,
	665, 666, 667, 668, 669, 935, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 2235,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 928, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 2188,
	312, 313, 0, 0, 0, 0, 0, 713, 939, 0,
	0, 314, 0, 315, 316, 317, 0, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 719, 720, 721, 0, 335, 336,
	722, 0, 0, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 936, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 0,
	301, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 0, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 731,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 733, 734, 735, 527, 0, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 302, 443,
	444, 445, 0, 0, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 0, 740, 0, 450,
	452, 453, 0, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 741,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 0, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 0, 520, 508, 0, 303, 0, 522,
	523, 524, 525, 0, 742, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 0, 539, 0, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 0, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 2187, 620, 621, 622, 623,
	624, 0, 932, 627, 625, 628, 629, 630, 0, 631,
	752, 632, 613, 614, 633, 634, 0, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 934, 665, 666, 667, 668,
	669, 935, 0, 671, 672, 0, 673, 756, 757, 758,
	759, 0, 685, 0, 674, 676, 677, 678, 679, 760,
	680, 761, 0, 681, 682, 2186, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 762, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	926, 0, 928, 0, 708, 709, 766, 710, 711, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 939, 713, 0, 0, 0, 314,
	0, 315, 316, 317, 0, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 721, 0, 335, 336, 722, 0,
	0, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 936, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	0, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 731, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 733,
	734, 735, 527, 0, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 0, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 0, 740, 0, 450, 452, 453,
	0, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 0, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 0, 520, 508, 0, 303, 0, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 0, 539, 0, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 0, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	932, 627, 625, 628, 629, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 0, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 934, 665, 666, 667, 668, 669, 935,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 3922, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 0, 939, 0, 0, 314, 0, 315, 316, 317,
	1322, 318, 319, 320, 321, 322, 323, 324, 0, 2216,
	0, 325, 2206, 326, 2222, 0, 2229, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 2232, 2233,
	0, 0, 335, 336, 0, 0, 1629, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 1323, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 1305, 369, 371, 2220, 2219, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 1290, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 0, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	0, 0, 404, 0, 301, 0, 0, 0, 0, 0,
	405, 406, 407, 2218, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 1324, 414, 415, 416,
	2227, 2228, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 0, 0, 0, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 0, 0, 0, 527, 1326,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 0, 443, 444, 445, 0, 1325, 0, 446,
	528, 447, 2213, 2214, 0, 2209, 0, 448, 449, 451,
	1327, 0, 1328, 450, 452, 453, 1329, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 0, 464, 1330, 466, 467, 1331, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 1332,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 1333, 520, 508,
	0, 0, 1334, 522, 523, 524, 525, 0, 0, 526,
	2221, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 0, 1335, 539,
	1336, 0, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 2203, 554,
	555, 556, 2204, 557, 558, 559, 0, 560, 0, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 2217, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 1337, 602, 603, 604, 605, 606, 0, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 0, 631, 0, 632, 613, 614, 633, 634,
	1338, 635, 636, 637, 638, 639, 640, 641, 2215, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 2231, 652, 653, 654, 655, 0, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 2223, 2224, 2225, 2226, 0, 685, 0, 674, 676,
	677, 678, 679, 0, 680, 0, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 0, 2207, 2230, 0, 701, 700, 702, 703, 704,
	0, 705, 706, 707, 0, 0, 0, 0, 708, 709,
	0, 710, 711, 712, 928, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 0, 713, 0, 0,
	2197, 314, 0, 315, 316, 317, 0, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 719, 720, 721, 0, 335, 336,
	722, 0, 0, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 936, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 0,
	301, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 0, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 731,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 733, 734, 735, 527, 0, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 302, 443,
	444, 445, 0, 0, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 0, 740, 0, 450,
	452, 453, 0, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 741,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 0, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 0, 520, 508, 0, 303, 0, 522,
	523, 524, 525, 0, 742, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 0, 539, 0, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 0, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 932, 627, 625, 628, 629, 630, 0, 631,
	752, 632, 613, 614, 633, 634, 0, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 934, 665, 666, 667, 668,
	669, 935, 0, 671, 672, 0, 673, 756, 757, 758,
	759, 0, 685, 0, 674, 676, 677, 678, 679, 760,
	680, 761, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 762, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	3086, 0, 298, 0, 708, 709, 766, 710, 711, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 939, 713, 0, 0, 0, 314,
	0, 315, 316, 317, 0, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 721, 0, 335, 336, 722, 0,
	0, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	0, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 731, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 733,
	734, 735, 527, 0, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 0, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 0, 740, 0, 450, 452, 453,
	0, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 0, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 0, 520, 508, 0, 303, 0, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 0, 539, 0, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 0, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 0, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 928, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 713, 939, 0, 0, 314, 0, 315, 316, 317,
	0, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 0, 335, 336, 722, 0, 0, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 936, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 301, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 0, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 733, 734, 735, 527, 0,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 302, 443, 444, 445, 0, 0, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	0, 740, 0, 450, 452, 453, 0, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 741, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 0,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 0, 520, 508,
	0, 303, 0, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 0, 539,
	0, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 0, 2592, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 2593,
	620, 621, 622, 623, 624, 0, 932, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	0, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 934,
	665, 666, 667, 668, 669, 935, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 2594,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 2210, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 0, 0, 939, 0,
	0, 314, 0, 315, 316, 317, 1322, 318, 319, 320,
	321, 322, 323, 324, 0, 2216, 0, 325, 2206, 326,
	2222, 0, 2229, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 2232, 2233, 0, 0, 335, 336,
	0, 0, 1629, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 1323, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 367, 368, 1305,
	369, 371, 2220, 2219, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	1290, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 0, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 0, 0, 404, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 407, 2218,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 1324, 414, 415, 416, 2227, 2228, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 0,
	0, 0, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 0, 0, 0, 527, 1326, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 0, 443,
	444, 445, 0, 1325, 0, 446, 528, 447, 2213, 2214,
	0, 2209, 0, 448, 449, 451, 1327, 0, 1328, 450,
	452, 453, 1329, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 0,
	464, 1330, 466, 467, 1331, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 1332, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 1333, 520, 508, 0, 0, 1334, 522,
	523, 524, 525, 0, 0, 526, 2221, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 0, 1335, 539, 1336, 0, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 2203, 554, 555, 556, 2204, 557,
	558, 559, 0, 560, 0, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	2217, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 1337, 602,
	603, 604, 605, 606, 0, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 0, 631,
	0, 632, 613, 614, 633, 634, 1338, 635, 636, 637,
	638, 639, 640, 641, 2215, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 2231,
	652, 653, 654, 655, 0, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 2223, 2224, 2225,
	2226, 0, 685, 0, 674, 676, 677, 678, 679, 0,
	680, 0, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 0, 2207, 2230,
	0, 701, 700, 702, 703, 704, 0, 705, 706, 707,
	0, 0, 0, 0, 708, 709, 0, 710, 711, 712,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 0, 713, 0, 0, 2197, 314, 0, 315,
	316, 317, 0, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 0, 334,
	719, 720, 721, 0, 335, 336, 722, 0, 0, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 0, 301, 0, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 0, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 731, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 733, 734, 735,
	527, 0, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 302, 443, 444, 445, 0, 0,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 0, 740, 0, 450, 452, 453, 0, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 741, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 0, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 0,
	520, 508, 0, 303, 0, 522, 523, 524, 525, 0,
	742, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	0, 539, 0, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 0, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 0, 631, 752, 632, 613, 614,
	633, 634, 0, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 756, 757, 758, 759, 0, 685, 0,
	674, 676, 677, 678, 679, 760, 680, 761, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 762, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 298, 0, 0, 0,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 0, 0, 0, 713,
	939, 0, 0, 314, 0, 315, 316, 317, 0, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 0, 0, 334, 719, 720, 721, 0,
	335, 336, 722, 0, 0, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 367,
	368, 0, 369, 371, 723, 724, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 726, 727,
	404, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 0, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 731, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 733, 734, 735, 527, 0, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	0, 443, 444, 445, 0, 0, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 0, 740,
	0, 450, 452, 453, 0, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 741, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 471, 472, 473, 476, 0, 0, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 0, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 0, 520, 508, 0, 0,
	0, 522, 523, 524, 525, 0, 742, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 0, 539, 0, 745,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 748, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	0, 602, 603, 604, 605, 606, 751, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	0, 631, 752, 632, 613, 614, 633, 634, 0, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 755, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 756,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 760, 680, 761, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 0, 696, 0, 0, 697, 698, 699, 762,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 0, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 0, 0, 0, 0, 0, 0, 0, 0,
	1665, 1664, 0, 0, 0, 0, 1662, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4467, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 314, 0, 315,
	316, 317, 1322, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 0, 334,
	719, 720, 721, 0, 335, 336, 722, 0, 1629, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 1323,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 0, 301, 0, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 1324, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 731, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 733, 734, 735,
	527, 1326, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 0, 443, 444, 445, 0, 1325,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 1327, 740, 1328, 450, 452, 453, 1329, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 741, 464, 1330, 466, 467,
	1331, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 1332, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 1333,
	520, 508, 0, 0, 1334, 522, 523, 524, 525, 4343,
	742, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	1335, 539, 1336, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 1337, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 0, 631, 752, 632, 613, 614,
	633, 634, 1338, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 756, 757, 758, 759, 0, 685, 0,
	674, 676, 677, 678, 679, 760, 680, 761, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 762, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 0, 0, 0, 0,
	708, 709, 766, 710, 711, 712, 1846, 0, 1665, 1664,
	0, 0, 0, 0, 1662, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 314, 0, 315, 316, 317,
	1322, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 0, 335, 336, 722, 0, 1629, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 1323, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 301, 0, 0, 0, 0, 0,
	1844, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 1324, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 733, 734, 735, 527, 1326,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 0, 443, 444, 445, 0, 1325, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	1327, 740, 1328, 450, 452, 453, 1329, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 741, 464, 1330, 466, 467, 1331, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 1332,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 1333, 520, 508,
	0, 0, 1334, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 1335, 539,
	1336, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 1845, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 1337, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	1843, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	1338, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 0, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 1716, 0, 1665, 1664, 0, 0,
	0, 0, 1662, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 0, 0, 0, 713,
	0, 0, 0, 314, 0, 315, 316, 317, 1322, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 0, 0, 334, 719, 720, 721, 0,
	335, 336, 722, 0, 1629, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 1323, 361, 362, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 367,
	368, 0, 369, 371, 723, 724, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 726, 727,
	404, 0, 301, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 1324, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 731, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 1718, 734, 735, 527, 1326, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	0, 443, 444, 445, 0, 1325, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 1327, 740,
	1328, 450, 452, 453, 1329, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 741, 464, 1330, 466, 467, 1331, 0, 468, 469,
	470, 471, 472, 473, 476, 0, 0, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 1332, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 1333, 520, 508, 0, 0,
	1334, 522, 523, 524, 525, 0, 742, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 1335, 539, 1336, 745,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 748, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	1337, 602, 603, 604, 605, 606, 751, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	0, 631, 752, 632, 613, 614, 633, 634, 1338, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 755, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 756,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 760, 680, 761, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 0, 696, 0, 0, 697, 698, 699, 762,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 0, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 1660, 0, 1665, 1664, 0, 0, 0, 0,
	1662, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 314, 0, 315, 316, 317, 1322, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 719, 720, 721, 0, 335, 336,
	722, 0, 1629, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 1323, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 0,
	301, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 1324, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 731,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 733, 734, 735, 527, 1326, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 0, 443,
	444, 445, 0, 1325, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 1327, 740, 1328, 450,
	452, 453, 1329, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 741,
	464, 1330, 466, 467, 1331, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 1332, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 1333, 520, 508, 0, 0, 1334, 522,
	523, 524, 525, 0, 742, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 1335, 539, 1336, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 1337, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 0, 631,
	752, 632, 613, 614, 633, 634, 1338, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 756, 757, 758,
	759, 0, 685, 0, 674, 676, 677, 678, 679, 760,
	680, 761, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 762, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	0, 0, 0, 0, 708, 709, 766, 710, 711, 712,
	1665, 1664, 0, 0, 0, 0, 1662, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 314, 0, 315,
	316, 317, 1322, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 0, 334,
	719, 720, 721, 0, 335, 336, 722, 0, 1629, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 1323,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 0, 301, 0, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 1324, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 731, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 733, 734, 735,
	527, 1326, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 0, 443, 444, 445, 0, 1325,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 1327, 740, 1328, 450, 452, 453, 1329, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 741, 464, 1330, 466, 467,
	1331, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 1332, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 1333,
	520, 508, 0, 0, 1334, 522, 523, 524, 525, 0,
	742, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	1335, 539, 1336, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 1337, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 0, 631, 752, 632, 613, 614,
	633, 634, 1338, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 756, 757, 758, 759, 0, 685, 0,
	674, 676, 677, 678, 679, 760, 680, 761, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 762, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 1665, 1664, 0, 0,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 0, 0, 0, 713,
	0, 0, 0, 314, 0, 315, 316, 317, 1322, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 0, 0, 334, 719, 720, 721, 0,
	335, 336, 722, 0, 1629, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 1323, 361, 362, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 367,
	368, 0, 369, 371, 723, 724, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 726, 727,
	404, 0, 301, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 1324, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 731, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 733, 734, 735, 527, 1326, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	0, 443, 444, 445, 0, 1325, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 1327, 740,
	1328, 450, 452, 453, 1329, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 741, 464, 1330, 466, 467, 1331, 0, 468, 469,
	470, 471, 472, 473, 476, 0, 0, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 1332, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 1333, 520, 508, 0, 0,
	1334, 522, 523, 524, 525, 0, 742, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 1335, 539, 1336, 745,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 748, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	1337, 602, 603, 604, 605, 606, 751, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	0, 631, 752, 632, 613, 614, 633, 634, 1338, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 755, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 756,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 760, 680, 761, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 0, 696, 0, 0, 697, 698, 699, 762,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 1665, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 0, 713, 0, 0, 0, 314,
	0, 315, 316, 317, 1322, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 721, 0, 335, 336, 722, 0,
	1629, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 1323, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	1324, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 731, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 733,
	734, 735, 527, 1326, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 0, 443, 444, 445,
	0, 1325, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 1327, 740, 1328, 450, 452, 453,
	1329, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 1330,
	466, 467, 1331, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 1332, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 1333, 520, 508, 0, 0, 1334, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 1335, 539, 1336, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 1337, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 1338, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 298, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 314, 0, 315, 316, 317,
	0, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 3151, 335, 336, 722, 0, 0, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 3939, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 3155, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 3938, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 3154, 412, 413, 0, 0, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 733, 734, 735, 527, 0,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 3935, 443, 444, 445, 0, 0, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 3937, 451,
	0, 740, 0, 450, 452, 453, 0, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 741, 464, 0, 466, 467, 3934, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 0,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 0, 520, 508,
	0, 0, 0, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 0, 539,
	0, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 3153, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 0, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	0, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 3936, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 298, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 314, 0, 315, 316, 317, 0, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 719, 720, 721, 3151, 335, 336,
	722, 0, 0, 3145, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 3147,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 3155, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 3154, 412,
	413, 0, 0, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 731,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 3144, 734, 735, 527, 0, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 0, 443,
	444, 445, 0, 0, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 0, 740, 0, 450,
	452, 453, 0, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 741,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 0, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 0, 520, 508, 0, 0, 0, 522,
	523, 524, 525, 0, 742, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 0, 539, 0, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 3153, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 0, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 0, 631,
	752, 632, 613, 614, 633, 634, 0, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 756, 757, 758,
	759, 0, 685, 0, 674, 676, 677, 678, 679, 760,
	680, 761, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 3152, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 762, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	1926, 0, 298, 0, 708, 709, 766, 710, 711, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 1925, 312, 313,
	0, 0, 0, 0, 0, 713, 0, 0, 0, 314,
	0, 315, 316, 317, 0, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 721, 0, 335, 336, 722, 0,
	0, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 1924, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	0, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 731, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 733,
	734, 735, 527, 0, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 0, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 0, 740, 0, 450, 452, 453,
	0, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 0, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 0, 520, 508, 0, 303, 0, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 0, 539, 0, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 0, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	1927, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	1923, 627, 625, 628, 629, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 0, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 1921, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 1922,
	700, 702, 703, 704, 765, 705, 706, 707, 1633, 0,
	298, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 314, 0, 315,
	316, 317, 0, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 0, 334,
	719, 720, 721, 0, 335, 336, 722, 0, 0, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 0, 301, 0, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 0, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 731, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 1635, 734, 735,
	527, 0, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 302, 443, 444, 445, 0, 0,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 0, 740, 0, 450, 452, 453, 0, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 741, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 0, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 0,
	520, 508, 0, 303, 0, 522, 523, 524, 525, 0,
	742, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 1373, 534, 535, 536, 0, 0, 537, 538, 744,
	0, 539, 0, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 0, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 0, 631, 752, 632, 613, 614,
	633, 634, 0, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 756, 757, 758, 759, 0, 685, 0,
	674, 676, 677, 678, 679, 760, 680, 761, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 762, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 1630, 0, 298, 0,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 314, 0, 315, 316, 317,
	0, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 0, 335, 336, 722, 0, 0, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 301, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 0, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 1632, 734, 735, 527, 0,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 302, 443, 444, 445, 0, 0, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	0, 740, 0, 450, 452, 453, 0, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 741, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 0,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 0, 520, 508,
	0, 303, 0, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 1373,
	534, 535, 536, 0, 0, 537, 538, 744, 0, 539,
	0, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 0, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	0, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 1536, 0, 298, 0, 708, 709,
	766, 710, 711, 712, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 0, 0, 0, 713,
	0, 0, 0, 314, 0, 315, 316, 317, 0, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 0, 0, 334, 719, 720, 721, 0,
	335, 336, 722, 0, 0, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 367,
	368, 0, 369, 371, 723, 724, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 726, 727,
	404, 0, 301, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 0, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 731, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 1538, 734, 735, 527, 0, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	302, 443, 444, 445, 0, 0, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 0, 740,
	0, 450, 452, 453, 0, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 741, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 471, 472, 473, 476, 0, 0, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 0, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 0, 520, 508, 0, 303,
	0, 522, 523, 524, 525, 0, 742, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 1373, 534, 535,
	536, 0, 0, 537, 538, 744, 0, 539, 0, 745,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 748, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	0, 602, 603, 604, 605, 606, 751, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	0, 631, 752, 632, 613, 614, 633, 634, 0, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 755, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 756,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 760, 680, 761, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 0, 696, 0, 0, 697, 698, 699, 762,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 801, 0, 298, 0, 708, 709, 766, 710,
	711, 712, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 799, 310, 311, 788,
	312, 313, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 314, 0, 315, 316, 317, 0, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 719, 720, 721, 0, 335, 336,
	722, 0, 0, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 791,
	358, 359, 360, 0, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 0, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 797, 426, 731,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 733, 734, 735, 527, 0, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 0, 443,
	444, 445, 0, 0, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 0, 740, 0, 450,
	452, 453, 0, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 741,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 0, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 0, 520, 508, 0, 0, 0, 522,
	523, 524, 525, 0, 742, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 0, 539, 0, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 0, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 793, 626, 627, 625, 628, 629, 630, 0, 631,
	752, 632, 613, 614, 633, 634, 0, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 0,
	663, 800, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 756, 757, 758,
	759, 0, 685, 0, 674, 676, 677, 678, 679, 760,
	680, 761, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 762, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	787, 0, 298, 0, 708, 709, 766, 710, 711, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 788, 312, 313,
	0, 0, 0, 0, 0, 713, 0, 0, 0, 314,
	0, 315, 316, 317, 0, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 721, 0, 335, 336, 722, 0,
	0, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 791, 358, 359,
	360, 0, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	0, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 792, 426, 731, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 733,
	734, 735, 527, 0, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 0, 443, 444, 445,
	0, 0, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 0, 740, 0, 450, 452, 453,
	0, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 0, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 0, 520, 508, 0, 0, 0, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 0, 539, 0, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 0, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 793,
	626, 627, 625, 628, 629, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 0, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 786,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 298, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 788, 312, 313, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 314, 0, 315, 316, 317,
	0, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 0, 335, 336, 722, 0, 0, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 791, 358, 359, 360, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 0, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 792, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 733, 734, 735, 527, 0,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 0, 443, 444, 445, 0, 0, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	0, 740, 0, 450, 452, 453, 0, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 741, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 0,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 0, 520, 508,
	0, 0, 0, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 0, 539,
	0, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 0, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 793, 626, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	0, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 298, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 788,
	312, 313, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 314, 0, 315, 316, 317, 0, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 719, 720, 721, 0, 335, 336,
	722, 0, 0, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 791,
	358, 359, 360, 0, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 0, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 4353, 426, 731,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 733, 734, 735, 527, 0, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 0, 443,
	444, 445, 0, 0, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 0, 740, 0, 450,
	452, 453, 0, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 741,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 0, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 0, 520, 508, 0, 0, 0, 522,
	523, 524, 525, 0, 742, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 0, 539, 0, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 0, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 793, 626, 627, 625, 628, 629, 630, 0, 631,
	752, 632, 613, 614, 633, 634, 0, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 756, 757, 758,
	759, 0, 685, 0, 674, 676, 677, 678, 679, 760,
	680, 761, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 762, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	298, 0, 0, 0, 708, 709, 766, 710, 711, 712,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 314, 0, 315,
	316, 317, 0, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 0, 334,
	719, 720, 721, 0, 335, 336, 722, 0, 0, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 0, 301, 0, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 0, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 731, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 733, 734, 735,
	527, 0, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 302, 443, 444, 445, 0, 0,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 0, 740, 0, 450, 452, 453, 0, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 741, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 0, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 0,
	520, 508, 0, 303, 0, 522, 523, 524, 525, 0,
	742, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 1373, 534, 535, 536, 0, 0, 537, 538, 744,
	0, 539, 0, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 0, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 0, 631, 752, 632, 613, 614,
	633, 634, 0, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 756, 757, 758, 759, 0, 685, 0,
	674, 676, 677, 678, 679, 760, 680, 761, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 762, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 298, 0, 0, 0,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 0, 0, 0, 713,
	0, 0, 0, 314, 0, 315, 316, 317, 0, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 0, 0, 334, 719, 720, 721, 0,
	335, 336, 722, 0, 0, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 367,
	368, 0, 369, 371, 723, 724, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 726, 727,
	404, 0, 301, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 0, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 731, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 733, 734, 735, 527, 0, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	302, 443, 444, 445, 0, 0, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 0, 740,
	0, 450, 452, 453, 0, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 741, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 471, 472, 473, 476, 0, 0, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 0, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 3816, 520, 508, 0, 303,
	0, 522, 523, 524, 525, 0, 742, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 0, 539, 0, 745,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 748, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	0, 602, 603, 604, 605, 606, 751, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	0, 631, 752, 632, 613, 614, 633, 634, 0, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 755, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 756,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 760, 680, 761, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 0, 696, 0, 0, 697, 698, 699, 762,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 3343, 0, 298, 0, 708, 709, 766, 710,
	711, 712, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 314, 0, 315, 316, 317, 0, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 719, 720, 721, 0, 335, 336,
	722, 0, 0, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 0,
	301, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 0, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 731,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 3342, 734, 735, 527, 0, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 302, 443,
	444, 445, 0, 0, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 0, 740, 0, 450,
	452, 453, 0, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 741,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 0, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 0, 520, 508, 0, 303, 0, 522,
	523, 524, 525, 0, 742, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 0, 539, 0, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 0, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 0, 631,
	752, 632, 613, 614, 633, 634, 0, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 756, 757, 758,
	759, 0, 685, 0, 674, 676, 677, 678, 679, 760,
	680, 761, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 762, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	2560, 0, 298, 0, 708, 709, 766, 710, 711, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 0, 713, 0, 0, 0, 314,
	0, 315, 316, 317, 0, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 721, 0, 335, 336, 722, 0,
	0, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	0, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 731, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 733,
	734, 735, 527, 0, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 0, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 0, 740, 0, 450, 452, 453,
	0, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 0, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 0, 520, 508, 0, 303, 0, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 0, 539, 0, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 0, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 0, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 2504, 0,
	298, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 314, 0, 315,
	316, 317, 0, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 0, 334,
	719, 720, 721, 0, 335, 336, 722, 0, 0, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 0, 301, 0, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 0, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 731, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 2503, 734, 735,
	527, 0, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 302, 443, 444, 445, 0, 0,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 0, 740, 0, 450, 452, 453, 0, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 741, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 0, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 0,
	520, 508, 0, 303, 0, 522, 523, 524, 525, 0,
	742, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	0, 539, 0, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 0, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 0, 631, 752, 632, 613, 614,
	633, 634, 0, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 756, 757, 758, 759, 0, 685, 0,
	674, 676, 677, 678, 679, 760, 680, 761, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 762, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 2488, 0, 298, 0,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 314, 0, 315, 316, 317,
	0, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 0, 335, 336, 722, 0, 0, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 301, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 0, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 2490, 734, 735, 527, 0,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 302, 443, 444, 445, 0, 0, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	0, 740, 0, 450, 452, 453, 0, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 741, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 0,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 0, 520, 508,
	0, 303, 0, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 0, 539,
	0, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 0, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	0, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 298, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 314, 0, 315, 316, 317, 0, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 719, 720, 721, 0, 335, 336,
	722, 0, 0, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 0,
	301, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 0, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 731,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 2452, 734, 735, 527, 0, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 302, 443,
	444, 445, 0, 0, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 0, 740, 0, 450,
	452, 453, 0, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 741,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 0, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 0, 520, 508, 0, 303, 0, 522,
	523, 524, 525, 0, 742, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 1373, 534, 535, 536, 0,
	0, 537, 538, 744, 0, 539, 0, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 0, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 0, 631,
	752, 632, 613, 614, 633, 634, 0, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 756, 757, 758,
	759, 0, 685, 0, 674, 676, 677, 678, 679, 760,
	680, 761, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 762, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	1762, 0, 298, 0, 708, 709, 766, 710, 711, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 0, 713, 0, 0, 0, 314,
	0, 315, 316, 317, 0, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 721, 0, 335, 336, 722, 0,
	0, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	0, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 731, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 1761,
	734, 735, 527, 0, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 0, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 0, 740, 0, 450, 452, 453,
	0, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 0, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 0, 520, 508, 0, 303, 0, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 0, 539, 0, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 0, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 0, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 1653, 0,
	298, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 314, 0, 315,
	316, 317, 0, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 0, 334,
	719, 720, 721, 0, 335, 336, 722, 0, 0, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 0, 301, 0, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 0, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 731, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 733, 734, 735,
	527, 0, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 302, 443, 444, 445, 0, 0,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 0, 740, 0, 450, 452, 453, 0, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 741, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 0, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 0,
	520, 508, 0, 303, 0, 522, 523, 524, 525, 0,
	742, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	0, 539, 0, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 0, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 0, 631, 752, 632, 613, 614,
	633, 634, 0, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 756, 757, 758, 759, 0, 685, 0,
	674, 676, 677, 678, 679, 760, 680, 761, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 762, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 1646, 0, 298, 0,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 314, 0, 315, 316, 317,
	0, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 0, 335, 336, 722, 0, 0, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 301, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 0, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 1648, 734, 735, 527, 0,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 302, 443, 444, 445, 0, 0, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	0, 740, 0, 450, 452, 453, 0, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 741, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 0,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 0, 520, 508,
	0, 303, 0, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 0, 539,
	0, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 0, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	0, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 1453, 0, 298, 0, 708, 709,
	766, 710, 711, 712, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 0, 0, 0, 713,
	0, 0, 0, 314, 0, 315, 316, 317, 0, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 0, 0, 334, 719, 720, 721, 0,
	335, 336, 722, 0, 0, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 367,
	368, 0, 369, 371, 723, 724, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 726, 727,
	404, 0, 301, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 0, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 731, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 1452, 734, 735, 527, 0, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	302, 443, 444, 445, 0, 0, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 0, 740,
	0, 450, 452, 453, 0, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 741, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 471, 472, 473, 476, 0, 0, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 0, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 0, 520, 508, 0, 303,
	0, 522, 523, 524, 525, 0, 742, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 0, 539, 0, 745,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 748, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	0, 602, 603, 604, 605, 606, 751, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	0, 631, 752, 632, 613, 614, 633, 634, 0, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 755, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 756,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 760, 680, 761, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 0, 696, 0, 0, 697, 698, 699, 762,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 1443, 0, 298, 0, 708, 709, 766, 710,
	711, 712, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 314, 0, 315, 316, 317, 0, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 719, 720, 721, 0, 335, 336,
	722, 0, 0, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 0,
	301, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 0, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 731,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 1442, 734, 735, 527, 0, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 302, 443,
	444, 445, 0, 0, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 0, 740, 0, 450,
	452, 453, 0, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 741,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 0, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 0, 520, 508, 0, 303, 0, 522,
	523, 524, 525, 0, 742, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 0, 539, 0, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 0, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 0, 631,
	752, 632, 613, 614, 633, 634, 0, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 756, 757, 758,
	759, 0, 685, 0, 674, 676, 677, 678, 679, 760,
	680, 761, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 762, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	1440, 0, 298, 0, 708, 709, 766, 710, 711, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 0, 713, 0, 0, 0, 314,
	0, 315, 316, 317, 0, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 721, 0, 335, 336, 722, 0,
	0, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	0, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 731, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 1439,
	734, 735, 527, 0, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 0, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 0, 740, 0, 450, 452, 453,
	0, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 0, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 0, 520, 508, 0, 303, 0, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 0, 539, 0, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 0, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 0, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 1435, 0,
	298, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 314, 0, 315,
	316, 317, 0, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 0, 334,
	719, 720, 721, 0, 335, 336, 722, 0, 0, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 0, 301, 0, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 0, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 731, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 1434, 734, 735,
	527, 0, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 302, 443, 444, 445, 0, 0,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 0, 740, 0, 450, 452, 453, 0, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 741, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 0, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 0,
	520, 508, 0, 303, 0, 522, 523, 524, 525, 0,
	742, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	0, 539, 0, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 0, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 0, 631, 752, 632, 613, 614,
	633, 634, 0, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 756, 757, 758, 759, 0, 685, 0,
	674, 676, 677, 678, 679, 760, 680, 761, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 762, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 768, 0, 298, 0,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 314, 0, 315, 316, 317,
	0, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 0, 335, 336, 722, 0, 0, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 301, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 0, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 733, 734, 735, 527, 0,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 302, 443, 444, 445, 0, 0, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	0, 740, 0, 450, 452, 453, 0, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 741, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 0,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 0, 520, 508,
	0, 303, 0, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 0, 539,
	0, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 0, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	0, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 289, 0, 298, 0, 708, 709,
	766, 710, 711, 712, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 0, 0, 0, 713,
	0, 0, 0, 314, 0, 315, 316, 317, 0, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 0, 0, 334, 719, 720, 721, 0,
	335, 336, 722, 0, 0, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 367,
	368, 0, 369, 371, 723, 724, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 726, 727,
	404, 0, 301, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 0, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 731, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 733, 734, 735, 527, 0, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	302, 443, 444, 445, 0, 0, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 0, 740,
	0, 450, 452, 453, 0, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 741, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 471, 472, 473, 476, 0, 0, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 0, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 0, 520, 508, 0, 303,
	0, 522, 523, 524, 525, 0, 742, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 0, 539, 0, 745,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 748, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	0, 602, 603, 604, 605, 606, 751, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	0, 631, 752, 632, 613, 614, 633, 634, 0, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 755, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 756,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 760, 680, 761, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 0, 696, 0, 0, 697, 698, 699, 762,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 298, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 0, 713, 0, 0, 0, 314,
	0, 315, 316, 317, 0, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 721, 0, 335, 336, 722, 0,
	0, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	0, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 731, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 733,
	734, 735, 527, 0, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 0, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 0, 740, 0, 450, 452, 453,
	0, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 0, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 0, 520, 508, 0, 303, 0, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 0, 539, 0, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 0, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 0, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 298, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 314, 0, 315, 316, 317,
	0, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 0, 335, 336, 722, 0, 0, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 791, 358, 359, 360, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 0, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 792, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 733, 734, 735, 527, 0,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 0, 443, 444, 445, 0, 0, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	0, 740, 0, 450, 452, 453, 0, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 741, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 0,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 0, 520, 508,
	0, 0, 0, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 0, 539,
	0, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 0, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 793, 626, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	0, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 298, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 314, 0, 315, 316, 317, 0, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 719, 720, 721, 0, 335, 336,
	722, 0, 0, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 2601, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 0,
	301, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 0, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 731,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 733, 734, 735, 527, 0, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 302, 443,
	444, 445, 0, 0, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 0, 740, 0, 450,
	452, 453, 0, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 741,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 0, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 0, 520, 508, 0, 303, 0, 522,
	523, 524, 525, 0, 742, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 0, 539, 0, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 0, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 0, 631,
	752, 632, 613, 614, 633, 634, 0, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 756, 757, 758,
	759, 0, 685, 0, 674, 676, 677, 678, 679, 760,
	680, 761, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 762, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	298, 0, 0, 0, 708, 709, 766, 710, 711, 712,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 314, 0, 315,
	316, 317, 0, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 0, 334,
	719, 720, 721, 0, 335, 336, 722, 0, 0, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 2599, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 0, 301, 0, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 0, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 731, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 733, 734, 735,
	527, 0, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 302, 443, 444, 445, 0, 0,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 0, 740, 0, 450, 452, 453, 0, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 741, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 0, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 0,
	520, 508, 0, 303, 0, 522, 523, 524, 525, 0,
	742, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	0, 539, 0, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 0, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 0, 631, 752, 632, 613, 614,
	633, 634, 0, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 756, 757, 758, 759, 0, 685, 0,
	674, 676, 677, 678, 679, 760, 680, 761, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 762, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 298, 0, 0, 0,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 0, 0, 0, 713,
	0, 0, 0, 314, 0, 315, 316, 317, 0, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 0, 0, 334, 719, 720, 721, 0,
	335, 336, 722, 0, 0, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 2597,
	368, 0, 369, 371, 723, 724, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 726, 727,
	404, 0, 301, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 0, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 731, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 733, 734, 735, 527, 0, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	302, 443, 444, 445, 0, 0, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 0, 740,
	0, 450, 452, 453, 0, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 741, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 471, 472, 473, 476, 0, 0, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 0, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 0, 520, 508, 0, 303,
	0, 522, 523, 524, 525, 0, 742, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 0, 539, 0, 745,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 748, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	0, 602, 603, 604, 605, 606, 751, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	0, 631, 752, 632, 613, 614, 633, 634, 0, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 755, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 756,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 760, 680, 761, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 0, 696, 0, 0, 697, 698, 699, 762,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 298, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 0, 713, 0, 0, 0, 314,
	0, 315, 316, 317, 0, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 721, 0, 335, 336, 722, 0,
	0, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	0, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 731, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 2511,
	734, 735, 527, 0, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 0, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 0, 740, 0, 450, 452, 453,
	0, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 0, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 0, 520, 508, 0, 303, 0, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 0, 539, 0, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 0, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 0, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 298, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 314, 0, 315, 316, 317,
	0, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 0, 335, 336, 722, 0, 0, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 301, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 0, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 2263, 734, 735, 527, 0,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 302, 443, 444, 445, 0, 0, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	0, 740, 0, 450, 452, 453, 0, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 741, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 0,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 0, 520, 508,
	0, 303, 0, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 0, 539,
	0, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 0, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	0, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 298, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 314, 0, 315, 316, 317, 0, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 719, 720, 721, 0, 335, 336,
	722, 0, 0, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 0,
	301, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 0, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 731,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 2257, 734, 735, 527, 0, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 302, 443,
	444, 445, 0, 0, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 0, 740, 0, 450,
	452, 453, 0, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 741,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 0, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 0, 520, 508, 0, 303, 0, 522,
	523, 524, 525, 0, 742, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 0, 539, 0, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 0, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 0, 631,
	752, 632, 613, 614, 633, 634, 0, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 756, 757, 758,
	759, 0, 685, 0, 674, 676, 677, 678, 679, 760,
	680, 761, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 762, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	1011, 0, 298, 0, 708, 709, 766, 710, 711, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 0, 713, 0, 0, 0, 314,
	0, 315, 316, 317, 0, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 721, 0, 335, 336, 722, 0,
	0, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	0, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 731, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 733,
	734, 735, 527, 0, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 0, 443, 444, 445,
	0, 0, 736, 446, 528, 447, 737, 738, 0, 739,
	1010, 448, 449, 451, 0, 740, 0, 450, 452, 453,
	0, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 0, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 0, 520, 508, 0, 0, 0, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 0, 539, 0, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 0, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 0, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 1009, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 890, 0,
	298, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 879, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 314, 0, 315,
	316, 317, 0, 318, 319, 320, 321, 888, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 0, 334,
	719, 720, 721, 0, 335, 336, 722, 0, 0, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 881, 728, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 887, 413, 883, 0, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 731, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 733, 734, 735,
	527, 0, 435, 436, 437, 884, 438, 439, 440, 441,
	442, 0, 0, 0, 0, 443, 444, 445, 0, 0,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 0, 740, 0, 450, 452, 453, 0, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 882, 0,
	461, 463, 462, 0, 465, 741, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 0, 503, 504, 505, 885, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 0,
	520, 508, 0, 0, 0, 522, 523, 524, 525, 0,
	742, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	0, 539, 0, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 0, 886, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 880, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 0, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 0, 631, 752, 632, 613, 614,
	633, 634, 0, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 756, 757, 758, 759, 0, 685, 0,
	674, 676, 677, 678, 679, 760, 680, 761, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 762, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 873, 0, 298, 0,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 879, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 314, 0, 315, 316, 317,
	0, 318, 319, 320, 321, 888, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 0, 335, 336, 722, 0, 0, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 881, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 887, 413, 883, 0, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 733, 734, 735, 527, 0,
	435, 436, 437, 884, 438, 439, 440, 441, 442, 0,
	0, 0, 0, 443, 444, 445, 0, 0, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	0, 740, 0, 450, 452, 453, 0, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 882, 0, 461, 463,
	462, 0, 465, 741, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 0,
	503, 504, 505, 885, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 0, 520, 508,
	0, 0, 0, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 0, 539,
	0, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 0, 886, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 880, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 0, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	0, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 298, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 314, 0, 315, 316, 317, 0, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 719, 720, 721, 0, 335, 336,
	722, 0, 0, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 0,
	3938, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 0, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 731,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 733, 734, 735, 527, 0, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 0, 443,
	444, 445, 0, 0, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 0, 740, 0, 450,
	452, 453, 0, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 741,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 0, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 0, 520, 508, 0, 0, 0, 522,
	523, 524, 525, 0, 742, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 0, 539, 0, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 4705, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 0, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 0, 631,
	752, 632, 613, 614, 633, 634, 0, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 756, 757, 758,
	759, 0, 685, 0, 674, 676, 677, 678, 679, 760,
	680, 761, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 762, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	1481, 0, 298, 0, 708, 709, 766, 710, 711, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 0, 713, 0, 0, 0, 314,
	0, 315, 316, 317, 1484, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 1482, 0, 335, 336, 722, 0,
	0, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	0, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 731, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 733,
	734, 735, 527, 0, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 0, 443, 444, 445,
	0, 0, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 0, 740, 0, 450, 452, 453,
	0, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 861, 0, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 0, 520, 508, 0, 0, 0, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 0, 539, 0, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 0, 860, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 859, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 1485, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 0, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 857, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 1481, 0,
	298, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 314, 0, 315,
	316, 317, 1484, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 0, 334,
	719, 720, 1482, 0, 335, 336, 722, 0, 0, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 0, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 731, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 733, 734, 735,
	527, 0, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 0, 443, 444, 445, 0, 0,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 0, 740, 0, 450, 452, 453, 0, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 741, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	861, 0, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 0,
	520, 508, 0, 0, 0, 522, 523, 524, 525, 0,
	742, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	0, 539, 0, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 0, 860, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 859, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 1485, 630, 0, 631, 752, 632, 613, 614,
	633, 634, 0, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 857, 757, 758, 759, 0, 685, 0,
	674, 1483, 677, 678, 679, 760, 680, 761, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 762, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 868, 0, 298, 0,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 866, 312, 313, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 314, 0, 315, 316, 317,
	0, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 0, 335, 336, 722, 0, 0, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 0, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 733, 734, 735, 527, 0,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 0, 443, 444, 445, 0, 0, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	0, 740, 0, 450, 452, 453, 0, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 741, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 0,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 0, 520, 508,
	0, 0, 0, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 0, 539,
	0, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 0, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	0, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 777, 0, 298, 0, 708, 709,
	766, 710, 711, 712, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 776, 312, 313, 0, 0, 0, 0, 0, 713,
	0, 0, 0, 314, 0, 315, 316, 317, 0, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 0, 0, 334, 719, 720, 721, 0,
	335, 336, 722, 0, 0, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 367,
	368, 0, 369, 371, 723, 724, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 726, 727,
	404, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 0, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 731, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 733, 734, 735, 527, 0, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	0, 443, 444, 445, 0, 0, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 0, 740,
	0, 450, 452, 453, 0, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 741, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 471, 472, 473, 476, 0, 0, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 0, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 0, 520, 508, 0, 0,
	0, 522, 523, 524, 525, 0, 742, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 0, 539, 0, 745,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 748, 560, 749, 775, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	0, 602, 603, 604, 605, 606, 751, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	0, 631, 752, 632, 613, 614, 633, 634, 0, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 755, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 756,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 760, 680, 761, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 0, 696, 0, 0, 697, 698, 699, 762,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 298, 3252, 0, 0, 708, 709, 766, 710,
	711, 712, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 0, 713, 0, 0, 0, 314,
	0, 315, 316, 317, 0, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 721, 0, 335, 336, 722, 0,
	0, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	0, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 731, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 733,
	734, 735, 527, 0, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 0, 443, 444, 445,
	0, 0, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 0, 740, 0, 450, 452, 453,
	0, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 0, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 0, 520, 508, 0, 0, 0, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 0, 539, 0, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 0, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 0, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 298, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 314, 0, 315, 316, 317,
	0, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 0, 335, 336, 722, 0, 0, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 0, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 733, 734, 735, 527, 0,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 0, 443, 444, 445, 0, 0, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	0, 740, 0, 450, 452, 453, 0, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 741, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 0,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 0, 520, 508,
	0, 0, 0, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 0, 539,
	0, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 5014, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 0, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	0, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 298, 3756, 0, 0, 708, 709,
	766, 710, 711, 712, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 314, 0, 315, 316, 317, 0, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 719, 720, 721, 0, 335, 336,
	722, 0, 0, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 0, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 731,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 733, 734, 735, 527, 0, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 0, 443,
	444, 445, 0, 0, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 0, 740, 0, 450,
	452, 453, 0, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 741,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 0, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 0, 520, 508, 0, 0, 0, 522,
	523, 524, 525, 0, 742, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 0, 539, 0, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 0, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 0, 631,
	752, 632, 613, 614, 633, 634, 0, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 756, 757, 758,
	759, 0, 685, 0, 674, 676, 677, 678, 679, 760,
	680, 761, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 762, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	298, 0, 0, 0, 708, 709, 766, 710, 711, 712,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 314, 0, 315,
	316, 317, 0, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 0, 334,
	719, 720, 721, 0, 335, 336, 722, 0, 0, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 0, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 731, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 733, 734, 735,
	527, 0, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 0, 443, 444, 445, 0, 0,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 0, 740, 0, 450, 452, 453, 0, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 741, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 0, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 0,
	520, 508, 0, 0, 0, 522, 523, 524, 525, 0,
	742, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	0, 539, 0, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 4587, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 0, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 0, 631, 752, 632, 613, 614,
	633, 634, 0, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 756, 757, 758, 759, 0, 685, 0,
	674, 676, 677, 678, 679, 760, 680, 761, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 762, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 298, 0, 0, 0,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 0, 0, 0, 713,
	0, 0, 0, 314, 0, 315, 316, 317, 0, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 0, 0, 334, 719, 720, 721, 0,
	335, 336, 722, 0, 0, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 367,
	368, 0, 369, 371, 723, 724, 4297, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 726, 727,
	404, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 0, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 731, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 733, 734, 735, 527, 0, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	0, 443, 444, 445, 0, 0, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 0, 740,
	0, 450, 452, 453, 0, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 741, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 471, 472, 473, 476, 0, 0, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 0, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 0, 520, 508, 0, 0,
	0, 522, 523, 524, 525, 0, 742, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 0, 539, 0, 745,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 748, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	0, 602, 603, 604, 605, 606, 751, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	0, 631, 752, 632, 613, 614, 633, 634, 0, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 755, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 756,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 760, 680, 761, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 0, 696, 0, 0, 697, 698, 699, 762,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 298, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 0, 713, 0, 3024, 0, 314,
	0, 315, 316, 317, 0, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 721, 0, 335, 336, 722, 0,
	0, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	0, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 731, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 733,
	734, 735, 527, 0, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 0, 443, 444, 445,
	0, 0, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 0, 740, 0, 450, 452, 453,
	0, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 0, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 0, 520, 508, 0, 0, 0, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 0, 539, 0, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 0, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 0, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 298, 3252,
	0, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 314, 0, 315, 316, 317,
	0, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 0, 335, 336, 722, 0, 0, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 0, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 733, 734, 735, 527, 0,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 0, 443, 444, 445, 0, 0, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	0, 740, 0, 450, 452, 453, 0, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 741, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 0,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 0, 520, 508,
	0, 0, 0, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 3335, 0, 0, 537, 538, 744, 0, 539,
	0, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 0, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	0, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 298, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 314, 0, 315, 316, 317, 0, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 719, 720, 721, 0, 335, 336,
	722, 0, 0, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 0, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 731,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 733, 734, 735, 527, 0, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 0, 443,
	444, 445, 0, 0, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 0, 740, 0, 450,
	452, 453, 0, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 741,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 0, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 0, 520, 508, 0, 0, 0, 522,
	523, 524, 525, 0, 742, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 0, 539, 0, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 2396, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 0, 860,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 859, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 0, 631,
	752, 632, 613, 614, 633, 634, 0, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 857, 757, 758,
	759, 0, 685, 0, 674, 676, 677, 678, 679, 760,
	680, 761, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 762, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	298, 0, 0, 0, 708, 709, 766, 710, 711, 712,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 2571, 312, 313, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 314, 0, 315,
	316, 317, 0, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 0, 334,
	719, 720, 721, 0, 335, 336, 722, 0, 0, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 0, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 731, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 733, 734, 735,
	527, 0, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 0, 443, 444, 445, 0, 0,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 0, 740, 0, 450, 452, 453, 0, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 741, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 0, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 0,
	520, 508, 0, 0, 0, 522, 523, 524, 525, 0,
	742, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	0, 539, 0, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 0, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 0, 631, 752, 632, 613, 614,
	633, 634, 0, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 756, 757, 758, 759, 0, 685, 0,
	674, 676, 677, 678, 679, 760, 680, 761, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 762, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 2558, 0, 298, 0,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 314, 0, 315, 316, 317,
	0, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 0, 335, 336, 722, 0, 0, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 0, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 733, 734, 735, 527, 0,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 0, 443, 444, 445, 0, 0, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	0, 740, 0, 450, 452, 453, 0, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 741, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 0,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 0, 520, 508,
	0, 0, 0, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 0, 539,
	0, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 0, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	0, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 1818, 0, 298, 0, 708, 709,
	766, 710, 711, 712, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 0, 0, 0, 713,
	0, 0, 0, 314, 0, 315, 316, 317, 0, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 0, 0, 334, 719, 720, 721, 0,
	335, 336, 722, 0, 0, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 367,
	368, 0, 369, 371, 723, 724, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 726, 727,
	404, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 0, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 731, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 733, 734, 735, 527, 0, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	0, 443, 444, 445, 0, 0, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 0, 740,
	0, 450, 452, 453, 0, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 741, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 471, 472, 473, 476, 0, 0, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 0, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 0, 520, 508, 0, 0,
	0, 522, 523, 524, 525, 0, 742, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 0, 539, 0, 745,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 748, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	0, 602, 603, 604, 605, 606, 751, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	0, 631, 752, 632, 613, 614, 633, 634, 0, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 755, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 756,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 760, 680, 761, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 0, 696, 0, 0, 697, 698, 699, 762,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 1810, 0, 298, 0, 708, 709, 766, 710,
	711, 712, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 314, 0, 315, 316, 317, 0, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 719, 720, 721, 0, 335, 336,
	722, 0, 0, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 0, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 731,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 733, 734, 735, 527, 0, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 0, 443,
	444, 445, 0, 0, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 0, 740, 0, 450,
	452, 453, 0, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 741,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 0, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 0, 520, 508, 0, 0, 0, 522,
	523, 524, 525, 0, 742, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 0, 539, 0, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 0, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 0, 631,
	752, 632, 613, 614, 633, 634, 0, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 756, 757, 758,
	759, 0, 685, 0, 674, 676, 677, 678, 679, 760,
	680, 761, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 762, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	851, 0, 298, 0, 708, 709, 766, 710, 711, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 0, 713, 0, 0, 0, 314,
	0, 315, 316, 317, 0, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 721, 0, 335, 847, 722, 0,
	0, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	0, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 731, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 733,
	734, 735, 527, 0, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 0, 443, 444, 445,
	0, 0, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 0, 740, 0, 450, 452, 453,
	0, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 471, 472, 852,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 861, 0, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 0, 520, 508, 0, 0, 0, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 0, 539, 0, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 0, 860, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 859, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 1795, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 0, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 857, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 1768, 0,
	298, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 314, 0, 315,
	316, 317, 0, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 0, 334,
	719, 720, 721, 0, 335, 336, 722, 0, 0, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 0, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 731, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 1767, 734, 735,
	527, 0, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 0, 443, 444, 445, 0, 0,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 0, 740, 0, 450, 452, 453, 0, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 741, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 0, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 0,
	520, 508, 0, 0, 0, 522, 523, 524, 525, 0,
	742, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	0, 539, 0, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 0, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 0, 631, 752, 632, 613, 614,
	633, 634, 0, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 756, 757, 758, 759, 0, 685, 0,
	674, 676, 677, 678, 679, 760, 680, 761, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 762, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 1751, 0, 298, 0,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 314, 0, 315, 316, 317,
	0, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 0, 335, 336, 722, 0, 0, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 0, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 1749, 734, 735, 527, 0,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 0, 443, 444, 445, 0, 0, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	0, 740, 0, 450, 452, 453, 0, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 741, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 0,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 0, 520, 508,
	0, 0, 0, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 0, 539,
	0, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 0, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	0, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 1743, 0, 298, 0, 708, 709,
	766, 710, 711, 712, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 0, 0, 0, 713,
	0, 0, 0, 314, 0, 315, 316, 317, 0, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 0, 0, 334, 719, 720, 721, 0,
	335, 336, 722, 0, 0, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 367,
	368, 0, 369, 371, 723, 724, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 726, 727,
	404, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 0, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 731, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 733, 734, 735, 527, 0, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	0, 443, 444, 445, 0, 0, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 0, 740,
	0, 450, 452, 453, 0, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 741, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 471, 472, 473, 476, 0, 0, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 0, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 0, 520, 508, 0, 0,
	0, 522, 523, 524, 525, 0, 742, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 0, 539, 0, 745,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 748, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	0, 602, 603, 604, 605, 606, 751, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	0, 631, 752, 632, 613, 614, 633, 634, 0, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 755, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 756,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 760, 680, 761, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 0, 696, 0, 0, 697, 698, 699, 762,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 1721, 0, 298, 0, 708, 709, 766, 710,
	711, 712, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 314, 0, 315, 316, 317, 0, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 719, 720, 721, 0, 335, 336,
	722, 0, 0, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 0, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 731,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 1719, 734, 735, 527, 0, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 0, 443,
	444, 445, 0, 0, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 0, 740, 0, 450,
	452, 453, 0, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 741,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 0, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 0, 520, 508, 0, 0, 0, 522,
	523, 524, 525, 0, 742, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 0, 539, 0, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 0, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 0, 631,
	752, 632, 613, 614, 633, 634, 0, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 756, 757, 758,
	759, 0, 685, 0, 674, 676, 677, 678, 679, 760,
	680, 761, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 762, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	1714, 0, 298, 0, 708, 709, 766, 710, 711, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 0, 713, 0, 0, 0, 314,
	0, 315, 316, 317, 0, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 721, 0, 335, 336, 722, 0,
	0, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	0, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 731, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 733,
	734, 735, 527, 0, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 0, 443, 444, 445,
	0, 0, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 0, 740, 0, 450, 452, 453,
	0, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 0, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 0, 520, 508, 0, 0, 0, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 0, 539, 0, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 0, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 0, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 1674, 0,
	298, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 314, 0, 315,
	316, 317, 0, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 0, 334,
	719, 720, 721, 0, 335, 336, 722, 0, 0, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 0, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 731, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 733, 734, 735,
	527, 0, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 0, 443, 444, 445, 0, 0,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 0, 740, 0, 450, 452, 453, 0, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 741, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 0, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 0,
	520, 508, 0, 0, 0, 522, 523, 524, 525, 0,
	742, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	0, 539, 0, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 0, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 0, 631, 752, 632, 613, 614,
	633, 634, 0, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 756, 757, 758, 759, 0, 685, 0,
	674, 676, 677, 678, 679, 760, 680, 761, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 762, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 1638, 0, 298, 0,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 314, 0, 315, 316, 317,
	0, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 0, 335, 336, 722, 0, 0, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 0, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 733, 734, 735, 527, 0,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 0, 443, 444, 445, 0, 0, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	0, 740, 0, 450, 452, 453, 0, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 741, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 0,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 0, 520, 508,
	0, 0, 0, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 0, 539,
	0, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 0, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	0, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 1487, 0, 298, 0, 708, 709,
	766, 710, 711, 712, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 0, 0, 0, 713,
	0, 0, 0, 314, 0, 315, 316, 317, 0, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 0, 0, 334, 719, 720, 721, 0,
	335, 336, 722, 0, 0, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 367,
	368, 0, 369, 371, 723, 724, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 726, 727,
	404, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 0, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 731, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 733, 734, 735, 527, 0, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	0, 443, 444, 445, 0, 0, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 0, 740,
	0, 450, 452, 453, 0, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 741, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 471, 472, 473, 476, 0, 0, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 0, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 0, 520, 508, 0, 0,
	0, 522, 523, 524, 525, 0, 742, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 0, 539, 0, 745,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 748, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	0, 860, 603, 604, 605, 606, 751, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 859, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	0, 631, 752, 632, 613, 614, 633, 634, 0, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 755, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 857,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 760, 680, 761, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 0, 696, 0, 0, 697, 698, 699, 762,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 1458, 0, 298, 0, 708, 709, 766, 710,
	711, 712, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 314, 0, 315, 316, 317, 0, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 719, 720, 721, 0, 335, 336,
	722, 0, 0, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 0, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 731,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 1457, 734, 735, 527, 0, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 0, 443,
	444, 445, 0, 0, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 0, 740, 0, 450,
	452, 453, 0, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 741,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 0, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 0, 520, 508, 0, 0, 0, 522,
	523, 524, 525, 0, 742, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 0, 539, 0, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 0, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 0, 631,
	752, 632, 613, 614, 633, 634, 0, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 756, 757, 758,
	759, 0, 685, 0, 674, 676, 677, 678, 679, 760,
	680, 761, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 762, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	1449, 0, 298, 0, 708, 709, 766, 710, 711, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 0, 713, 0, 0, 0, 314,
	0, 315, 316, 317, 0, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 721, 0, 335, 336, 722, 0,
	0, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	0, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 731, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 1448,
	734, 735, 527, 0, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 0, 443, 444, 445,
	0, 0, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 0, 740, 0, 450, 452, 453,
	0, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 0, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 0, 520, 508, 0, 0, 0, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 0, 539, 0, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 0, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 0, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 298, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 1398, 312, 313, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 314, 0, 315, 316, 317,
	0, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 0, 335, 336, 722, 0, 0, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 0, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 733, 734, 735, 527, 0,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 0, 443, 444, 445, 0, 0, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	0, 740, 0, 450, 452, 453, 0, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 741, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 0,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 0, 520, 508,
	0, 0, 0, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 0, 539,
	0, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 0, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	0, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 871, 0, 298, 0, 708, 709,
	766, 710, 711, 712, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 0, 0, 0, 713,
	0, 0, 0, 314, 0, 315, 316, 317, 0, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 0, 0, 334, 719, 720, 721, 0,
	335, 336, 722, 0, 0, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 367,
	368, 0, 369, 371, 723, 724, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 726, 727,
	404, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 0, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 731, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 733, 734, 735, 527, 0, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	0, 443, 444, 445, 0, 0, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 0, 740,
	0, 450, 452, 453, 0, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 741, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 471, 472, 473, 476, 0, 0, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 0, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 0, 520, 508, 0, 0,
	0, 522, 523, 524, 525, 0, 742, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 0, 539, 0, 745,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 748, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	0, 602, 603, 604, 605, 606, 751, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	0, 631, 752, 632, 613, 614, 633, 634, 0, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 755, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 756,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 760, 680, 761, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 0, 696, 0, 0, 697, 698, 699, 762,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 851, 0, 298, 0, 708, 709, 766, 710,
	711, 712, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 314, 0, 315, 316, 317, 0, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 719, 720, 721, 0, 335, 847,
	722, 0, 0, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	846, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 0, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 731,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 733, 734, 735, 527, 0, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 0, 443,
	444, 445, 0, 0, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 0, 740, 0, 450,
	452, 453, 0, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 741,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 471,
	472, 852, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 861, 0, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 0, 520, 508, 0, 0, 0, 522,
	523, 524, 525, 0, 742, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 0, 539, 0, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 0, 860,
	603, 604, 605, 606, 848, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 859, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 849, 630, 0, 631,
	752, 632, 613, 614, 633, 634, 0, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 857, 757, 758,
	759, 0, 685, 0, 674, 853, 677, 678, 679, 760,
	680, 761, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 762, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	840, 0, 298, 0, 708, 709, 766, 710, 711, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 0, 713, 0, 0, 0, 314,
	0, 315, 316, 317, 0, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 721, 0, 335, 336, 722, 0,
	0, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	0, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 731, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 733,
	734, 735, 527, 0, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 0, 443, 444, 445,
	0, 0, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 0, 740, 0, 450, 452, 453,
	0, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 0, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 0, 520, 508, 0, 0, 0, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 0, 539, 0, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 0, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 841, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 0, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 803, 0,
	298, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 314, 0, 315,
	316, 317, 0, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 0, 334,
	719, 720, 721, 0, 335, 336, 722, 0, 0, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 0, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 731, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 733, 734, 735,
	527, 0, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 0, 443, 444, 445, 0, 0,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 0, 740, 0, 450, 452, 453, 0, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 741, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 0, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 0,
	520, 508, 0, 0, 0, 522, 523, 524, 525, 0,
	742, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	0, 539, 0, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 0, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 0, 631, 752, 632, 613, 614,
	633, 634, 0, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 756, 757, 758, 759, 0, 685, 0,
	674, 676, 677, 678, 679, 760, 680, 761, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 762, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 795, 0, 298, 0,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 314, 0, 315, 316, 317,
	0, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 0, 335, 336, 722, 0, 0, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 0, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 733, 734, 735, 527, 0,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 0, 443, 444, 445, 0, 0, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	0, 740, 0, 450, 452, 453, 0, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 741, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 0,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 0, 520, 508,
	0, 0, 0, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 0, 539,
	0, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 0, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	0, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 772, 0, 298, 0, 708, 709,
	766, 710, 711, 712, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 0, 0, 0, 713,
	0, 0, 0, 314, 0, 315, 316, 317, 0, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 0, 0, 334, 719, 720, 721, 0,
	335, 336, 722, 0, 0, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 367,
	368, 0, 369, 371, 723, 724, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 726, 727,
	404, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 0, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 731, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 733, 734, 735, 527, 0, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	0, 443, 444, 445, 0, 0, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 0, 740,
	0, 450, 452, 453, 0, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 741, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 471, 472, 473, 476, 0, 0, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 0, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 0, 520, 508, 0, 0,
	0, 522, 523, 524, 525, 0, 742, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 0, 539, 0, 745,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 748, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	0, 602, 603, 604, 605, 606, 751, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	0, 631, 752, 632, 613, 614, 633, 634, 0, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 755, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 756,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 760, 680, 761, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 0, 696, 0, 0, 697, 698, 699, 762,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 298, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 0, 713, 0, 0, 0, 314,
	0, 315, 316, 317, 0, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 721, 0, 335, 336, 722, 0,
	0, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	0, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 731, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 733,
	734, 735, 527, 0, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 0, 443, 444, 445,
	0, 0, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 0, 740, 0, 450, 452, 453,
	0, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 0, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 0, 520, 508, 0, 0, 0, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 0, 539, 0, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 0, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 0, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 298, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 314, 0, 315, 316, 317,
	0, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 0, 335, 336, 722, 0, 0, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 0, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 3970, 734, 735, 527, 0,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 0, 443, 444, 445, 0, 0, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	0, 740, 0, 450, 452, 453, 0, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 741, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 0,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 0, 520, 508,
	0, 0, 0, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 0, 539,
	0, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 0, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	0, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 298, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 314, 0, 315, 316, 317, 0, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 719, 720, 721, 0, 335, 336,
	722, 0, 0, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 0, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 731,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 733, 734, 735, 527, 0, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 0, 443,
	444, 445, 0, 0, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 0, 740, 0, 450,
	452, 453, 0, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 741,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 0, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 0, 520, 508, 0, 0, 0, 522,
	523, 524, 525, 0, 742, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 0, 539, 0, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 0, 860,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 859, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 0, 631,
	752, 632, 613, 614, 633, 634, 0, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 857, 757, 758,
	759, 0, 685, 0, 674, 676, 677, 678, 679, 760,
	680, 761, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 762, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	298, 0, 0, 0, 708, 709, 766, 710, 711, 712,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 314, 0, 315,
	316, 317, 0, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 0, 334,
	719, 720, 721, 0, 335, 336, 722, 0, 0, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 0, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 731, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 3860, 734, 735,
	527, 0, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 0, 443, 444, 445, 0, 0,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 0, 740, 0, 450, 452, 453, 0, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 741, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 0, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 0,
	520, 508, 0, 0, 0, 522, 523, 524, 525, 0,
	742, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	0, 539, 0, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 0, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 0, 631, 752, 632, 613, 614,
	633, 634, 0, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 756, 757, 758, 759, 0, 685, 0,
	674, 676, 677, 678, 679, 760, 680, 761, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 762, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 298, 0, 0, 0,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 0, 0, 0, 713,
	0, 0, 0, 314, 0, 315, 316, 317, 0, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 0, 0, 334, 719, 720, 721, 0,
	335, 336, 722, 0, 0, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 367,
	368, 0, 369, 371, 723, 724, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 726, 727,
	404, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 0, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 731, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 3834, 734, 735, 527, 0, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	0, 443, 444, 445, 0, 0, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 0, 740,
	0, 450, 452, 453, 0, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 741, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 471, 472, 473, 476, 0, 0, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 0, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 0, 520, 508, 0, 0,
	0, 522, 523, 524, 525, 0, 742, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 0, 539, 0, 745,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 748, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	0, 602, 603, 604, 605, 606, 751, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	0, 631, 752, 632, 613, 614, 633, 634, 0, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 755, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 756,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 760, 680, 761, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 0, 696, 0, 0, 697, 698, 699, 762,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 298, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 0, 713, 0, 0, 0, 314,
	0, 315, 316, 317, 0, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 721, 0, 335, 336, 722, 0,
	0, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	0, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 731, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 3830,
	734, 735, 527, 0, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 0, 443, 444, 445,
	0, 0, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 0, 740, 0, 450, 452, 453,
	0, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 0, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 0, 520, 508, 0, 0, 0, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 0, 539, 0, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 0, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 0, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 298, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 314, 0, 315, 316, 317,
	0, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 0, 335, 336, 722, 0, 0, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 0, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 3781, 734, 735, 527, 0,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 0, 443, 444, 445, 0, 0, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	0, 740, 0, 450, 452, 453, 0, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 741, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 0,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 0, 520, 508,
	0, 0, 0, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 0, 539,
	0, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 0, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	0, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 298, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 314, 0, 315, 316, 317, 0, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 719, 720, 721, 0, 335, 336,
	722, 0, 0, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 0, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 731,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 3779, 734, 735, 527, 0, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 0, 443,
	444, 445, 0, 0, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 0, 740, 0, 450,
	452, 453, 0, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 741,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 0, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 0, 520, 508, 0, 0, 0, 522,
	523, 524, 525, 0, 742, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 0, 539, 0, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 0, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 0, 631,
	752, 632, 613, 614, 633, 634, 0, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 756, 757, 758,
	759, 0, 685, 0, 674, 676, 677, 678, 679, 760,
	680, 761, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 762, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	298, 0, 0, 0, 708, 709, 766, 710, 711, 712,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 314, 0, 315,
	316, 317, 0, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 0, 334,
	719, 720, 721, 0, 335, 336, 722, 0, 0, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 0, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 731, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 3767, 734, 735,
	527, 0, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 0, 443, 444, 445, 0, 0,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 0, 740, 0, 450, 452, 453, 0, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 741, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 0, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 0,
	520, 508, 0, 0, 0, 522, 523, 524, 525, 0,
	742, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	0, 539, 0, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 0, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 0, 631, 752, 632, 613, 614,
	633, 634, 0, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 756, 757, 758, 759, 0, 685, 0,
	674, 676, 677, 678, 679, 760, 680, 761, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 762, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 298, 0, 0, 0,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 0, 0, 0, 713,
	0, 0, 0, 314, 0, 315, 316, 317, 0, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 0, 0, 334, 719, 720, 721, 0,
	335, 336, 722, 0, 0, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 367,
	368, 0, 369, 371, 723, 724, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 726, 727,
	404, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 0, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 731, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 3764, 734, 735, 527, 0, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	0, 443, 444, 445, 0, 0, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 0, 740,
	0, 450, 452, 453, 0, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 741, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 471, 472, 473, 476, 0, 0, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 0, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 0, 520, 508, 0, 0,
	0, 522, 523, 524, 525, 0, 742, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 0, 539, 0, 745,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 748, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	0, 602, 603, 604, 605, 606, 751, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	0, 631, 752, 632, 613, 614, 633, 634, 0, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 755, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 756,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 760, 680, 761, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 0, 696, 0, 0, 697, 698, 699, 762,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 298, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 0, 713, 0, 0, 0, 314,
	0, 315, 316, 317, 0, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 721, 0, 335, 336, 722, 0,
	0, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	0, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 731, 0, 732,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 3354,
	734, 735, 527, 0, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 0, 443, 444, 445,
	0, 0, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 0, 740, 0, 450, 452, 453,
	0, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 0, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 0, 520, 508, 0, 0, 0, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 0, 539, 0, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 0, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 0, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 298, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 713, 0, 0, 0, 314, 0, 315, 316, 317,
	0, 318, 319, 320, 321, 322, 323, 324, 714, 715,
	0, 325, 716, 326, 717, 0, 718, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 719, 720,
	721, 0, 335, 336, 722, 0, 0, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 367, 368, 0, 369, 371, 723, 724, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 725, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	726, 727, 404, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 407, 728, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 0, 414, 415, 416,
	729, 730, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 731, 0, 732, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 733, 734, 735, 527, 0,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 0, 443, 444, 445, 0, 0, 736, 446,
	528, 447, 737, 738, 0, 739, 0, 448, 449, 451,
	0, 740, 0, 450, 452, 453, 0, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 741, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 0,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 0, 520, 508,
	0, 0, 0, 522, 523, 524, 525, 0, 742, 526,
	743, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 0, 539,
	0, 745, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 748, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 750, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 0, 602, 603, 604, 605, 606, 751, 607,
	0, 608, 609, 841, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 0, 631, 752, 632, 613, 614, 633, 634,
	0, 635, 636, 637, 638, 639, 640, 641, 753, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 754, 652, 653, 654, 655, 755, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 756, 757, 758, 759, 0, 685, 0, 674, 676,
	677, 678, 679, 760, 680, 761, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 762, 763, 764, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 298, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 0, 713, 0, 2529,
	0, 314, 0, 315, 316, 317, 0, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 719, 720, 721, 0, 335, 336,
	722, 0, 0, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 0, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 731,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 733, 734, 735, 527, 0, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 0, 443,
	444, 445, 0, 0, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 0, 740, 0, 450,
	452, 453, 0, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 741,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 0, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 0, 520, 508, 0, 0, 0, 522,
	523, 524, 525, 0, 742, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 0, 539, 0, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 0, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 0, 0,
	752, 632, 613, 614, 633, 634, 0, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 756, 757, 758,
	759, 0, 685, 0, 674, 676, 677, 678, 679, 760,
	680, 761, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 762, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	298, 0, 0, 0, 708, 709, 766, 710, 711, 712,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 0, 713, 0, 0, 0, 314, 0, 315,
	316, 317, 0, 318, 319, 320, 321, 322, 323, 324,
	714, 715, 0, 325, 716, 326, 717, 0, 718, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 0, 334,
	719, 720, 721, 0, 335, 336, 722, 0, 0, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 367, 368, 0, 369, 371, 723, 724,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 725,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 726, 727, 404, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 407, 728, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 0, 414,
	415, 416, 729, 730, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 731, 0, 732, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 1420, 734, 735,
	527, 0, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 0, 443, 444, 445, 0, 0,
	736, 446, 528, 447, 737, 738, 0, 739, 0, 448,
	449, 451, 0, 740, 0, 450, 452, 453, 0, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 741, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 0, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 0,
	520, 508, 0, 0, 0, 522, 523, 524, 525, 0,
	742, 526, 743, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	0, 539, 0, 745, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 748, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 750, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 0, 602, 603, 604, 605, 606,
	751, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 0, 631, 752, 632, 613, 614,
	633, 634, 0, 635, 636, 637, 638, 639, 640, 641,
	753, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 754, 652, 653, 654, 655,
	755, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 756, 757, 758, 759, 0, 685, 0,
	674, 676, 677, 678, 679, 760, 680, 761, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 762, 763, 764, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 298, 0, 0, 0,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 0, 0, 0, 713,
	0, 0, 0, 314, 0, 315, 316, 317, 0, 318,
	319, 320, 321, 322, 323, 324, 714, 715, 0, 325,
	716, 326, 717, 0, 718, 327, 328, 329, 330, 331,
	332, 333, 0, 0, 0, 334, 719, 720, 721, 0,
	335, 336, 722, 0, 0, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 367,
	368, 0, 369, 371, 723, 724, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 725, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 726, 727,
	404, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	407, 728, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 0, 414, 415, 416, 729, 730,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 731, 0, 732, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 733, 734, 735, 527, 0, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	0, 443, 444, 445, 0, 0, 736, 446, 528, 447,
	737, 738, 0, 739, 0, 448, 449, 451, 0, 740,
	0, 450, 452, 453, 0, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 741, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 471, 472, 473, 476, 0, 0, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 0, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 0, 520, 508, 0, 0,
	0, 522, 523, 524, 525, 0, 742, 526, 743, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 0, 539, 0, 745,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 748, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 750, 574, 575, 1346, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	0, 602, 603, 604, 605, 606, 751, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	0, 631, 752, 632, 613, 614, 633, 634, 0, 635,
	636, 637, 638, 639, 640, 641, 753, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 754, 652, 653, 654, 655, 755, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 756,
	757, 758, 759, 0, 685, 0, 674, 676, 677, 678,
	679, 760, 680, 761, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 0, 696, 0, 0, 697, 698, 699, 762,
	763, 764, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 298, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 0, 713, 0, 0, 0, 314,
	0, 315, 316, 317, 0, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 0,
	718, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 719, 720, 721, 0, 335, 336, 722, 0,
	0, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	0, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 731, 0, 732,
	0, 0, 428, 429, 430, 431, 432, 433, 434, 733,
	734, 735, 527, 0, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 0, 443, 444, 445,
	0, 0, 736, 446, 528, 447, 737, 738, 0, 739,
	0, 448, 449, 451, 0, 740, 0, 450, 452, 453,
	0, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 741, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 0, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 0, 520, 508, 0, 0, 0, 522, 523, 524,
	525, 0, 742, 526, 743, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 0, 539, 0, 745, 540, 541, 533, 542,
	543, 544, 0, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 0, 572, 573, 750, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 0, 602, 603, 604,
	605, 606, 751, 0, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 0, 631, 752, 632,
	613, 614, 633, 634, 0, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 756, 757, 758, 759, 0,
	685, 0, 674, 676, 677, 678, 679, 760, 680, 761,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 762, 763, 764, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 1757, 0,
	1465, 0, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 307,
	306, 308, 309, 310, 311, 0, 312, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 315,
	316, 317, 0, 318, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 0, 326, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 0, 0, 0, 334,
	0, 0, 0, 0, 335, 336, 0, 0, 0, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 0,
	361, 362, 363, 0, 0, 0, 0, 0, 0, 1467,
	364, 365, 366, 367, 368, 0, 369, 371, 0, 0,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 0,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 0, 0, 404, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 407, 0, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 0, 414,
	415, 416, 0, 0, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 0, 0, 0, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 1756, 0, 0,
	527, 0, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 0, 443, 444, 445, 0, 0,
	0, 446, 528, 447, 0, 0, 0, 0, 0, 448,
	449, 451, 0, 0, 0, 450, 452, 453, 0, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 0, 464, 0, 466, 467,
	0, 0, 468, 469, 470, 471, 472, 473, 476, 0,
	0, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 0, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 0,
	520, 508, 0, 0, 0, 522, 523, 524, 525, 0,
	0, 526, 0, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 0,
	0, 539, 0, 0, 540, 541, 533, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	0, 554, 555, 556, 0, 557, 558, 559, 0, 560,
	0, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 0, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 0, 602, 603, 604, 605, 606,
	0, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 1468, 631, 0, 632, 613, 614,
	633, 634, 0, 635, 636, 637, 638, 639, 640, 641,
	0, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 0, 652, 653, 654, 655,
	0, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 0, 0, 0, 0, 0, 685, 0,
	674, 676, 677, 678, 679, 0, 680, 0, 0, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 0, 696, 0, 0,
	697, 698, 699, 0, 0, 0, 0, 701, 700, 702,
	703, 704, 0, 705, 706, 707, 1677, 0, 1465, 0,
	708, 709, 0, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 315, 316, 317,
	0, 318, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 0, 326, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 0, 0, 0, 334, 0, 0,
	0, 0, 335, 336, 0, 0, 0, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 0, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 1467, 364, 365,
	366, 367, 368, 0, 369, 371, 0, 0, 0, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 0, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	0, 0, 404, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 407, 0, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 0, 414, 415, 416,
	0, 0, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 0, 0, 0, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 1676, 0, 0, 527, 0,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 0, 443, 444, 445, 0, 0, 0, 446,
	528, 447, 0, 0, 0, 0, 0, 448, 449, 451,
	0, 0, 0, 450, 452, 453, 0, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 0, 464, 0, 466, 467, 0, 0,
	468, 469, 470, 471, 472, 473, 476, 0, 0, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 0,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 0, 520, 508,
	0, 0, 0, 522, 523, 524, 525, 0, 0, 526,
	0, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 0, 0, 539,
	0, 0, 540, 541, 533, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 0, 554,
	555, 556, 0, 557, 558, 559, 0, 560, 0, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 0, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 0, 602, 603, 604, 605, 606, 0, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 1468, 631, 0, 632, 613, 614, 633, 634,
	0, 635, 636, 637, 638, 639, 640, 641, 0, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 0, 652, 653, 654, 655, 0, 659,
	660, 661, 662, 0, 663, 664, 0, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 0, 0, 0, 0, 0, 685, 0, 674, 676,
	677, 678, 679, 0, 680, 0, 0, 681, 682, 683,
	684, 675, 686, 687, 0, 0, 688, 689, 691, 693,
	694, 690, 692, 695, 0, 696, 0, 0, 697, 698,
	699, 0, 0, 0, 0, 701, 700, 702, 703, 704,
	0, 705, 706, 707, 1463, 0, 1465, 0, 708, 709,
	0, 710, 711, 712, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 315, 316, 317, 0, 318,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	0, 326, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 0, 0, 0, 334, 0, 0, 0, 0,
	335, 336, 0, 0, 0, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 0, 361, 362, 363, 0,
	0, 0, 0, 0, 0, 1467, 364, 365, 366, 367,
	368, 0, 369, 371, 0, 0, 0, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 0, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 0, 0,
	404, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	407, 0, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 0, 414, 415, 416, 0, 0,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 0, 0, 0, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 1462, 0, 0, 527, 0, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	0, 443, 444, 445, 0, 0, 0, 446, 528, 447,
	0, 0, 0, 0, 0, 448, 449, 451, 0, 0,
	0, 450, 452, 453, 0, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 0, 464, 0, 466, 467, 0, 0, 468, 469,
	470, 471, 472, 473, 476, 0, 0, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 0, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 0, 520, 508, 0, 0,
	0, 522, 523, 524, 525, 0, 0, 526, 0, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 0, 0, 539, 0, 0,
	540, 541, 533, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 0, 554, 555, 556,
	0, 557, 558, 559, 0, 560, 0, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 0, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	0, 602, 603, 604, 605, 606, 0, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	1468, 631, 0, 632, 613, 614, 633, 634, 0, 635,
	636, 637, 638, 639, 640, 641, 0, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 0, 652, 653, 654, 655, 0, 659, 660, 661,
	662, 0, 663, 664, 0, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 0,
	0, 0, 0, 0, 685, 0, 674, 676, 677, 678,
	679, 0, 680, 0, 0, 681, 682, 683, 684, 675,
	686, 687, 0, 0, 688, 689, 691, 693, 694, 690,
	692, 695, 0, 696, 0, 0, 697, 698, 699, 0,
	0, 0, 0, 701, 700, 702, 703, 704, 0, 705,
	706, 707, 2277, 0, 1465, 0, 708, 709, 0, 710,
	711, 712, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 315, 316, 317, 0, 318, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 0, 326,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 0, 0, 0, 0, 335, 336,
	0, 0, 0, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 1467, 364, 365, 366, 367, 368, 0,
	369, 371, 0, 0, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 0, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 0, 0, 404, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 407, 0,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 0, 414, 415, 416, 0, 0, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 0,
	0, 0, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 0, 0, 0, 527, 0, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 0, 443,
	444, 445, 0, 0, 0, 446, 528, 447, 0, 0,
	0, 0, 0, 448, 449, 451, 0, 0, 0, 450,
	452, 453, 0, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 0,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 0, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 0, 520, 508, 0, 0, 0, 522,
	523, 524, 525, 0, 0, 526, 0, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 0, 0, 539, 0, 0, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 0, 554, 555, 556, 0, 557,
	558, 559, 0, 560, 0, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	0, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 0, 602,
	603, 604, 605, 606, 0, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 1468, 631,
	0, 632, 613, 614, 633, 634, 0, 635, 636, 637,
	638, 639, 640, 641, 0, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 0,
	652, 653, 654, 655, 0, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 0, 0, 0,
	0, 0, 685, 0, 674, 676, 677, 678, 679, 0,
	680, 0, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 0, 0, 0,
	0, 701, 700, 702, 703, 704, 0, 705, 706, 707,
	2244, 0, 1465, 0, 708, 709, 0, 710, 711, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 315, 316, 317, 0, 318, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 0, 326, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 0, 0,
	0, 334, 0, 0, 0, 0, 335, 336, 0, 0,
	0, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 0, 361, 362, 363, 0, 0, 0, 0, 0,
	0, 1467, 364, 365, 366, 367, 368, 0, 369, 371,
	0, 0, 0, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 0, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 0, 0, 404, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 407, 0, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	0, 414, 415, 416, 0, 0, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 0, 0, 0,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 0,
	0, 0, 527, 0, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 0, 443, 444, 445,
	0, 0, 0, 446, 528, 447, 0, 0, 0, 0,
	0, 448, 449, 451, 0, 0, 0, 450, 452, 453,
	0, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 0, 464, 0,
	466, 467, 0, 0, 468, 469, 470, 471, 472, 473,
	476, 0, 0, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 0, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 0, 520, 508, 0, 0, 0, 522, 523, 524,
	525, 0, 0, 526, 0, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 0, 0, 539, 0, 0, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 0, 554, 555, 556, 0, 557, 558, 559,
	0, 560, 0, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 0, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 0, 602, 603, 604,
	605, 606, 0, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 1468, 631, 0, 632,
	613, 614, 633, 634, 0, 635, 636, 637, 638, 639,
	640, 641, 0, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 0, 652, 653,
	654, 655, 0, 659, 660, 661, 662, 0, 663, 664,
	0, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 0, 0, 0, 0, 0,
	685, 0, 674, 676, 677, 678, 679, 0, 680, 0,
	0, 681, 682, 683, 684, 675, 686, 687, 0, 0,
	688, 689, 691, 693, 694, 690, 692, 695, 0, 696,
	0, 0, 697, 698, 699, 0, 0, 0, 0, 701,
	700, 702, 703, 704, 1465, 705, 706, 707, 0, 0,
	0, 0, 708, 709, 0, 710, 711, 712, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 315, 316, 317, 0, 318, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 0, 326,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 0, 0, 0, 0, 335, 336,
	0, 0, 0, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 0, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 1467, 364, 365, 366, 367, 368, 0,
	369, 371, 0, 0, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 0, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 0, 0, 404, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 407, 0,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 0, 414, 415, 416, 0, 0, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 0,
	0, 0, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 0, 0, 0, 527, 0, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 0, 443,
	444, 445, 0, 0, 0, 446, 528, 447, 0, 0,
	0, 0, 0, 448, 449, 451, 0, 0, 0, 450,
	452, 453, 0, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 0,
	464, 0, 466, 467, 0, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 0, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 0, 520, 508, 0, 0, 0, 522,
	523, 524, 525, 0, 0, 526, 0, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 0, 0, 539, 0, 0, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 0, 554, 555, 556, 0, 557,
	558, 559, 0, 560, 0, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	0, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 0, 602,
	603, 604, 605, 606, 0, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 1468, 631,
	0, 632, 613, 614, 633, 634, 0, 635, 636, 637,
	638, 639, 640, 641, 0, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 0,
	652, 653, 654, 655, 0, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 0, 0, 0,
	0, 0, 685, 0, 674, 676, 677, 678, 679, 0,
	680, 0, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 0, 0, 0,
	0, 701, 700, 702, 703, 704, 0, 705, 706, 707,
	0, 0, 0, 0, 708, 709, 0, 710, 711, 712,
	1977, 1978, 0, 2010, 2011, 2012, 2021, 2022, 2023, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2014, 2008, 0, 0, 0, 0, 0,
	0, 0, 1980, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2027, 1977, 1978, 0, 2010, 2011, 2012,
	2021, 2022, 2023, 0, 0, 0, 0, 0, 0, 0,
	0, 2033, 0, 0, 0, 0, 0, 2014, 2008, 0,
	1979, 0, 0, 0, 0, 0, 1980, 0, 0, 0,
	0, 1999, 0, 0, 0, 0, 0, 2027, 1977, 1978,
	1996, 2010, 2011, 2012, 2021, 2022, 2023, 0, 0, 0,
	0, 0, 0, 0, 0, 2033, 0, 0, 0, 0,
	0, 2014, 2008, 0, 1979, 0, 0, 0, 0, 0,
	1980, 0, 0, 0, 0, 1999, 0, 0, 0, 0,
	0, 2027, 0, 0, 1996, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2033,
	0, 0, 0, 0, 0, 0, 0, 0, 1979, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1999,
	0, 2002, 2003, 2004, 2005, 0, 0, 0, 1996, 0,
	0, 1985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2002, 2003, 2004, 2005, 0,
	0, 0, 0, 0, 2018, 1985, 0, 0, 2028, 0,
	0, 0, 0, 0, 0, 2007, 2009, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2024, 0, 2025, 0, 2002,
	2003, 2004, 2005, 0, 1994, 1995, 0, 0, 2018, 1985,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 2007,
	2009, 0, 0, 2016, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2000, 2024,
	0, 2025, 0, 0, 0, 0, 0, 0, 1994, 1995,
	0, 0, 2018, 0, 0, 0, 2028, 0, 0, 0,
	0, 0, 0, 2007, 2009, 0, 0, 2016, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2000, 2024, 0, 2025, 0, 2026, 0, 0,
	0, 0, 1994, 1995, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2015, 0,
	0, 2016, 0, 0, 0, 0, 0, 0, 0, 2030,
	0, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 2026, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2015, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2030, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2026, 0, 0, 0, 2006,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2015, 0, 0, 0,
	0, 0, 0, 0, 0, 2001, 0, 2030, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2006, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2019, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	0, 1977, 1978, 0, 2010, 2011, 2012, 2021, 2022, 2023,
	0, 0, 0, 0, 0, 0, 0, 2006, 0, 0,
	0, 2032, 0, 0, 2014, 2008, 0, 0, 0, 2019,
	0, 0, 0, 1980, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2001, 2027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2033, 0, 0, 2032, 0, 0, 0, 0,
	0, 1979, 0, 2019, 0, 0, 0, 0, 0, 0,
	0, 0, 1999, 0, 0, 0, 0, 0, 0, 0,
	0, 1996, 0, 0, 0, 0, 0, 0, 0, 2017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2032,
	0, 1991, 1992, 1998, 2020, 1997, 1993, 0, 1990, 1988,
	1989, 1981, 1982, 1983, 1984, 1986, 1987, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3569, 0, 0, 0,
	0, 0, 0, 2017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1991, 1992, 1998, 2020, 1997,
	1993, 0, 1990, 1988, 1989, 1981, 1982, 1983, 1984, 1986,
	1987, 0, 2002, 2003, 2004, 2005, 0, 0, 0, 0,
	3568, 0, 1985, 0, 0, 0, 0, 2017, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1991,
	1992, 1998, 2020, 1997, 1993, 0, 1990, 1988, 1989, 1981,
	1982, 1983, 1984, 1986, 1987, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3565, 2018, 0, 1977, 1978, 2028,
	2010, 2011, 2012, 2021, 2022, 2023, 2007, 2009, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2014, 2008, 0, 0, 0, 0, 2024, 0, 2025, 1980,
	0, 0, 0, 0, 0, 1994, 1995, 0, 0, 0,
	2027, 1977, 1978, 0, 2010, 2011, 2012, 2021, 2022, 2023,
	0, 0, 0, 0, 2016, 0, 0, 0, 2033, 0,
	0, 0, 0, 0, 2014, 2008, 0, 1979, 0, 2000,
	0, 0, 0, 1980, 0, 0, 0, 0, 1999, 0,
	0, 0, 0, 0, 2027, 0, 0, 1996, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2033, 0, 0, 0, 0, 0, 0, 0,
	0, 1979, 0, 0, 0, 0, 0, 0, 2026, 0,
	0, 0, 1999, 0, 0, 0, 0, 0, 0, 0,
	0, 1996, 0, 0, 0, 0, 0, 0, 0, 2015,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2030, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2002, 2003,
	2004, 2005, 0, 0, 0, 0, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2006, 0, 2002, 2003, 2004, 2005, 0, 0, 0, 0,
	0, 2018, 1985, 0, 0, 2028, 0, 0, 0, 0,
	0, 0, 2007, 2009, 0, 0, 2001, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2024, 0, 2025, 0, 0, 0, 0, 0,
	0, 1994, 1995, 0, 0, 2018, 2019, 1977, 1978, 2028,
	2010, 2011, 2012, 2021, 2022, 2023, 2007, 2009, 0, 0,
	2016, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2014, 2008, 0, 0, 0, 2000, 2024, 0, 2025, 1980,
	0, 0, 2032, 0, 0, 1994, 1995, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2016, 0, 0, 0, 2033, 0,
	0, 0, 0, 0, 0, 0, 0, 1979, 0, 2000,
	0, 0, 0, 0, 2026, 0, 0, 0, 1999, 0,
	0, 0, 0, 0, 0, 0, 0, 1996, 0, 0,
	0, 0, 0, 0, 0, 2015, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2030, 0, 0, 0,
	2017, 0, 0, 0, 0, 0, 0, 0, 2026, 0,
	0, 0, 1991, 1992, 1998, 2020, 1997, 1993, 0, 1990,
	1988, 1989, 1981, 1982, 1983, 1984, 1986, 1987, 0, 2015,
	0, 0, 0, 0, 0, 0, 0, 3564, 0, 0,
	2030, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2006, 0, 2002, 2003,
	2004, 2005, 0, 0, 0, 0, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2001, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2006, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2018, 2019, 0, 0, 2028, 0, 0, 0, 0,
	0, 0, 2007, 2009, 0, 0, 2001, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2024, 0, 2025, 0, 0, 0, 2032, 0,
	0, 1994, 1995, 0, 0, 0, 2019, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2016, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2000, 0, 0, 0, 0,
	0, 0, 2032, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2017, 0, 0, 0,
	0, 0, 0, 0, 2026, 0, 0, 0, 1991, 1992,
	1998, 2020, 1997, 1993, 0, 1990, 1988, 1989, 1981, 1982,
	1983, 1984, 1986, 1987, 0, 2015, 0, 0, 0, 0,
	0, 0, 0, 3563, 0, 0, 2030, 0, 0, 0,
	2017, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1991, 1992, 1998, 2020, 1997, 1993, 0, 1990,
	1988, 1989, 1981, 1982, 1983, 1984, 1986, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2829, 1977, 1978,
	0, 2010, 2011, 2012, 2021, 2022, 2023, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2006, 0, 0, 0,
	0, 2014, 2008, 0, 0, 0, 0, 0, 0, 0,
	1980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2027, 2001, 1977, 1978, 0, 2010, 2011, 2012, 2021,
	2022, 2023, 0, 0, 0, 0, 0, 0, 0, 2033,
	0, 0, 0, 0, 0, 0, 2014, 2008, 1979, 0,
	0, 0, 2019, 0, 0, 1980, 0, 0, 0, 1999,
	0, 0, 0, 0, 0, 0, 2027, 0, 1996, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2033, 0, 0, 0, 2032, 0,
	0, 0, 0, 1979, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1999, 0, 0, 0, 0, 0,
	0, 0, 0, 1996, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2002,
	2003, 2004, 2005, 0, 0, 0, 0, 0, 0, 1985,
	0, 0, 0, 0, 0, 0, 2017, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1991, 1992,
	1998, 2020, 1997, 1993, 0, 1990, 1988, 1989, 1981, 1982,
	1983, 1984, 1986, 1987, 2002, 2003, 2004, 2005, 0, 5042,
	0, 0, 2018, 0, 1985, 0, 2028, 0, 0, 0,
	0, 0, 0, 2007, 2009, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2024, 0, 2025, 0, 0, 0, 0,
	0, 0, 1994, 1995, 0, 0, 0, 2018, 0, 0,
	0, 2028, 0, 0, 0, 0, 0, 0, 2007, 2009,
	0, 2016, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 2024, 0,
	2025, 0, 0, 0, 0, 0, 0, 1994, 1995, 0,
	0, 0, 0, 0, 0, 1977, 1978, 0, 2010, 2011,
	2012, 2021, 2022, 2023, 0, 0, 2016, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2014, 2008,
	0, 2000, 0, 0, 0, 2026, 0, 1980, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2027, 0,
	0, 0, 0, 0, 0, 0, 2015, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2033, 2030, 0, 0,
	0, 0, 0, 0, 0, 1979, 0, 0, 0, 0,
	2026, 0, 0, 0, 0, 0, 1999, 0, 0, 0,
	0, 0, 0, 0, 0, 1996, 0, 0, 0, 0,
	0, 2015, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2030, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2006, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2001, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2006, 0, 0, 0, 2002, 2003, 2004, 2005,
	0, 0, 0, 2019, 0, 0, 1985, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2001, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2032,
	0, 0, 0, 0, 0, 0, 0, 0, 2019, 2018,
	0, 0, 0, 2028, 0, 0, 0, 0, 0, 0,
	2007, 2009, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2024, 0, 2025, 0, 2032, 0, 0, 0, 0, 1994,
	1995, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2016, 0,
	0, 0, 0, 0, 0, 0, 0, 2017, 0, 0,
	0, 0, 0, 2000, 0, 0, 0, 0, 0, 1991,
	1992, 1998, 2020, 1997, 1993, 0, 1990, 1988, 1989, 1981,
	1982, 1983, 1984, 1986, 1987, 0, 0, 0, 0, 0,
	4991, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2017, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2026, 0, 1991, 1992, 1998, 2020, 1997, 1993,
	0, 1990, 1988, 1989, 1981, 1982, 1983, 1984, 1986, 1987,
	0, 0, 0, 2015, 0, 4990, 0, 0, 0, 0,
	0, 0, 0, 0, 2030, 0, 0, 1977, 1978, 0,
	2010, 2011, 2012, 2021, 2022, 2023, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2014, 2008, 0, 0, 0, 0, 0, 0, 0, 1980,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 1977, 1978, 0, 2010, 2011, 2012, 2021, 2022, 2023,
	0, 0, 0, 0, 2006, 0, 0, 0, 2033, 0,
	0, 0, 0, 0, 2014, 2008, 0, 1979, 0, 0,
	0, 0, 0, 1980, 0, 0, 0, 0, 1999, 0,
	2001, 0, 0, 0, 2027, 0, 0, 1996, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2033, 0, 0, 0, 0, 0, 0, 0,
	2019, 1979, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1999, 0, 0, 0, 0, 0, 0, 0,
	0, 1996, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2032, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2002, 2003,
	2004, 2005, 0, 0, 0, 0, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2002, 2003, 2004, 2005, 0, 0, 0, 0,
	0, 2018, 1985, 0, 2017, 2028, 0, 0, 0, 0,
	0, 0, 2007, 2009, 0, 0, 1991, 1992, 1998, 2020,
	1997, 1993, 0, 1990, 1988, 1989, 1981, 1982, 1983, 1984,
	1986, 1987, 2024, 0, 2025, 0, 0, 4791, 0, 0,
	0, 1994, 1995, 0, 0, 2018, 0, 1977, 1978, 2028,
	2010, 2011, 2012, 2021, 2022, 2023, 2007, 2009, 0, 0,
	2016, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2014, 2008, 0, 0, 0, 2000, 2024, 0, 2025, 1980,
	0, 0, 0, 0, 0, 1994, 1995, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2016, 0, 0, 0, 2033, 0,
	0, 0, 0, 0, 0, 0, 0, 1979, 0, 2000,
	0, 0, 0, 0, 2026, 0, 0, 0, 1999, 0,
	0, 0, 0, 0, 0, 0, 0, 1996, 0, 0,
	0, 0, 0, 0, 0, 2015, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2030, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2026, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2015,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2030, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2006, 0, 2002, 2003,
	2004, 2005, 0, 0, 0, 0, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2001, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2006, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2018, 2019, 0, 0, 2028, 0, 0, 0, 0,
	0, 0, 2007, 2009, 0, 0, 2001, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2024, 0, 2025, 0, 0, 0, 2032, 0,
	0, 1994, 1995, 0, 0, 0, 2019, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2016, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2000, 0, 0, 0, 0,
	0, 0, 2032, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2017, 0, 0, 0,
	0, 0, 0, 0, 2026, 0, 0, 0, 1991, 1992,
	1998, 2020, 1997, 1993, 0, 1990, 1988, 1989, 1981, 1982,
	1983, 1984, 1986, 1987, 0, 2015, 0, 0, 0, 4611,
	0, 0, 0, 0, 0, 0, 2030, 0, 0, 0,
	2017, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1991, 1992, 1998, 2020, 1997, 1993, 0, 1990,
	1988, 1989, 1981, 1982, 1983, 1984, 1986, 1987, 0, 0,
	0, 0, 0, 4515, 1977, 1978, 0, 2010, 2011, 2012,
	2021, 2022, 2023, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2006, 2014, 2008, 0,
	0, 0, 0, 0, 0, 0, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2027, 0, 0,
	0, 0, 2001, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2033, 0, 0, 0, 0,
	0, 0, 1977, 1978, 1979, 2010, 2011, 2012, 2021, 2022,
	2023, 0, 2019, 0, 0, 1999, 0, 0, 0, 0,
	0, 0, 0, 0, 1996, 2014, 2008, 0, 0, 0,
	0, 0, 0, 0, 1980, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2027, 0, 0, 2032, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2033, 0, 0, 0, 0, 0, 0,
	0, 0, 1979, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1999, 0, 0, 0, 0, 0, 0,
	0, 0, 1996, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2002, 2003, 2004, 2005, 0,
	0, 0, 0, 0, 0, 1985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2017, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1991, 1992,
	1998, 2020, 1997, 1993, 0, 1990, 1988, 1989, 1981, 1982,
	1983, 1984, 1986, 1987, 0, 0, 0, 0, 2018, 4514,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 2007,
	2009, 0, 0, 2002, 2003, 2004, 2005, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 0, 0, 0, 2024,
	0, 2025, 0, 0, 0, 0, 0, 0, 1994, 1995,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2016, 0, 0,
	0, 0, 0, 0, 0, 0, 2018, 0, 0, 0,
	2028, 0, 2000, 0, 0, 0, 0, 2007, 2009, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2024, 0, 2025,
	0, 0, 0, 0, 0, 0, 1994, 1995, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2026, 0, 0, 0, 2016, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2000, 0, 2015, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2030, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2026,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2015, 0, 0, 2006, 0, 0, 0, 0, 0, 0,
	0, 2030, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1977, 1978, 0, 2010, 2011,
	2012, 2021, 2022, 2023, 0, 0, 0, 0, 0, 2019,
	0, 0, 0, 0, 0, 0, 0, 0, 2014, 2008,
	0, 2006, 0, 0, 0, 0, 0, 1980, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2027, 0,
	0, 0, 0, 0, 0, 2032, 0, 2001, 0, 0,
	0, 0, 0, 0, 0, 0, 2033, 0, 0, 0,
	0, 0, 0, 0, 0, 1979, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1999, 2019, 0, 0,
	0, 0, 0, 0, 0, 1996, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2032, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1991, 1992, 1998, 2020, 1997,
	1993, 0, 1990, 1988, 1989, 1981, 1982, 1983, 1984, 1986,
	1987, 0, 0, 0, 0, 0, 4513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2002, 2003, 2004, 2005,
	0, 0, 0, 0, 0, 0, 1985, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2017, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1991, 1992, 1998, 2020, 1997, 1993, 0,
	1990, 1988, 1989, 1981, 1982, 1983, 1984, 1986, 1987, 2018,
	0, 0, 0, 2028, 4116, 0, 0, 0, 0, 0,
	2007, 2009, 0, 0, 1977, 1978, 0, 2010, 2011, 2012,
	2021, 2022, 2023, 0, 0, 0, 0, 0, 0, 0,
	2024, 0, 2025, 0, 0, 0, 0, 2014, 2008, 1994,
	1995, 0, 0, 0, 0, 0, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2027, 2016, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2000, 0, 2033, 0, 0, 0, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1999, 0, 0, 0, 0,
	0, 0, 0, 0, 1996, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2026, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2015, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2030, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2002, 2003, 2004, 2005, 0,
	0, 0, 0, 0, 0, 1985, 0, 0, 0, 0,
	0, 0, 1977, 1978, 0, 2010, 2011, 2012, 2021, 2022,
	2023, 0, 0, 0, 2006, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2014, 2008, 0, 0, 0,
	0, 0, 0, 0, 1980, 0, 0, 0, 2018, 0,
	2001, 0, 2028, 0, 0, 2027, 0, 0, 0, 2007,
	2009, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2033, 0, 0, 0, 0, 0, 2024,
	2019, 2025, 1979, 0, 0, 0, 0, 0, 1994, 1995,
	0, 0, 0, 1999, 0, 0, 0, 0, 0, 0,
	0, 0, 1996, 0, 0, 0, 0, 2016, 0, 0,
	0, 0, 0, 0, 0, 0, 2032, 0, 0, 0,
	0, 0, 2000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2026, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2002, 2003, 2004, 2005, 0, 0, 0,
	0, 0, 2015, 1985, 2017, 0, 0, 0, 0, 0,
	0, 0, 0, 2030, 0, 0, 1991, 1992, 1998, 2020,
	1997, 1993, 0, 1990, 1988, 1989, 1981, 1982, 1983, 1984,
	1986, 1987, 0, 0, 0, 0, 0, 3561, 0, 0,
	0, 0, 0, 0, 0, 0, 2018, 0, 0, 0,
	2028, 0, 0, 0, 0, 0, 0, 2007, 2009, 0,
	0, 1977, 1978, 0, 2010, 2011, 2012, 2021, 2022, 2023,
	0, 0, 0, 2006, 0, 0, 0, 2024, 0, 2025,
	0, 0, 0, 0, 2014, 2008, 1994, 1995, 0, 0,
	0, 0, 0, 1980, 0, 0, 0, 0, 0, 2001,
	0, 0, 0, 0, 2027, 2016, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2000, 0, 2033, 0, 0, 0, 0, 0, 0, 2019,
	0, 1979, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1999, 0, 0, 0, 0, 0, 0, 0,
	0, 1996, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2032, 0, 0, 0, 2026,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2015, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2030, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2002, 2003, 2004, 2005, 0, 0, 0, 0,
	0, 0, 1985, 2017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1991, 1992, 1998, 2020, 1997,
	1993, 2006, 1990, 1988, 1989, 1981, 1982, 1983, 1984, 1986,
	1987, 0, 0, 0, 0, 0, 3560, 0, 0, 0,
	0, 0, 0, 0, 0, 2018, 0, 2001, 0, 2028,
	0, 0, 0, 0, 0, 0, 2007, 2009, 0, 0,
	1977, 1978, 0, 2010, 2011, 2012, 2021, 2022, 2023, 0,
	0, 0, 0, 0, 0, 0, 2024, 2019, 2025, 0,
	0, 0, 0, 2014, 2008, 1994, 1995, 0, 0, 0,
	0, 0, 1980, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2027, 2016, 0, 0, 0, 0, 0,
	0, 0, 0, 2032, 0, 0, 0, 0, 0, 2000,
	0, 2033, 0, 0, 0, 0, 0, 0, 0, 0,
	1979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1999, 0, 0, 0, 0, 0, 0, 0, 0,
	1996, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2026, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2015,
	0, 2017, 0, 0, 0, 0, 0, 0, 0, 0,
	2030, 0, 0, 1991, 1992, 1998, 2020, 1997, 1993, 0,
	1990, 1988, 1989, 1981, 1982, 1983, 1984, 1986, 1987, 0,
	0, 0, 0, 0, 3559, 0, 0, 0, 0, 0,
	0, 2002, 2003, 2004, 2005, 0, 0, 0, 0, 0,
	0, 1985, 0, 0, 0, 0, 0, 0, 1977, 1978,
	0, 2010, 2011, 2012, 2021, 2022, 2023, 0, 0, 0,
	2006, 0, 2426, 0, 0, 0, 0, 0, 0, 0,
	0, 2014, 2008, 0, 0, 0, 0, 0, 0, 0,
	1980, 0, 0, 0, 2018, 0, 2001, 0, 2028, 0,
	0, 2027, 0, 0, 0, 2007, 2009, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2033,
	0, 0, 0, 0, 0, 2024, 2019, 2025, 1979, 0,
	0, 0, 0, 0, 1994, 1995, 0, 0, 0, 1999,
	0, 0, 0, 0, 0, 0, 0, 0, 1996, 0,
	0, 0, 0, 2016, 0, 0, 0, 0, 0, 0,
	0, 0, 2032, 0, 0, 0, 0, 0, 2000, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2427, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2026, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2002,
	2003, 2004, 2005, 0, 0, 0, 0, 0, 2015, 1985,
	2017, 0, 0, 0, 0, 0, 0, 0, 0, 2030,
	0, 0, 1991, 1992, 1998, 2020, 1997, 1993, 0, 1990,
	1988, 1989, 1981, 1982, 1983, 1984, 1986, 1987, 0, 0,
	0, 0, 0, 3558, 0, 0, 0, 0, 0, 0,
	0, 0, 2018, 0, 0, 0, 2028, 0, 0, 0,
	0, 0, 0, 2007, 2009, 0, 0, 1977, 1978, 0,
	2010, 2011, 2012, 2021, 2022, 2023, 0, 0, 0, 2006,
	0, 0, 0, 2024, 0, 2025, 0, 0, 0, 0,
	2014, 2008, 1994, 1995, 0, 0, 0, 0, 0, 1980,
	0, 0, 0, 0, 0, 2001, 0, 0, 0, 0,
	2027, 2016, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 2033, 0,
	0, 0, 0, 0, 0, 2019, 0, 1979, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1999, 0,
	0, 0, 2356, 0, 0, 0, 0, 1996, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2032, 0, 0, 0, 2026, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2015, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2030, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2002, 2003,
	2004, 2005, 0, 0, 0, 0, 0, 0, 1985, 2017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1991, 1992, 1998, 2020, 1997, 1993, 2006, 1990, 1988,
	1989, 1981, 1982, 1983, 1984, 1986, 1987, 0, 0, 0,
	3523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2018, 0, 2001, 0, 2028, 0, 0, 0, 0,
	0, 0, 2007, 2009, 0, 0, 1977, 1978, 0, 2010,
	2011, 2012, 2021, 2022, 2023, 0, 2428, 0, 0, 0,
	0, 0, 2024, 2019, 2025, 0, 0, 0, 0, 2014,
	2008, 1994, 1995, 0, 0, 0, 0, 0, 1980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2027,
	2016, 0, 0, 0, 0, 0, 0, 0, 0, 2032,
	0, 0, 0, 0, 0, 2000, 0, 2033, 0, 0,
	0, 0, 0, 0, 0, 0, 1979, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1999, 0, 0,
	0, 0, 0, 0, 0, 0, 1996, 0, 0, 0,
	0, 0, 0, 0, 2429, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2026, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2015, 0, 2017, 0, 0,
	0, 0, 0, 0, 0, 0, 2030, 0, 0, 1991,
	1992, 1998, 2020, 1997, 1993, 0, 1990, 1988, 1989, 1981,
	1982, 1983, 1984, 1986, 1987, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2002, 2003, 2004,
	2005, 0, 0, 0, 0, 0, 0, 1985, 5333, 0,
	0, 0, 0, 0, 1977, 1978, 0, 2010, 2011, 2012,
	2021, 2022, 2023, 0, 0, 2355, 2006, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2014, 2008, 0,
	0, 0, 0, 0, 0, 0, 1980, 0, 0, 0,
	2018, 0, 2001, 0, 2028, 0, 0, 2027, 0, 0,
	0, 2007, 2009, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2033, 0, 0, 0, 0,
	0, 2024, 2019, 2025, 1979, 0, 0, 0, 0, 0,
	1994, 1995, 0, 0, 0, 1999, 0, 0, 0, 0,
	0, 0, 0, 0, 1996, 0, 0, 0, 0, 2016,
	0, 0, 0, 0, 0, 0, 0, 0, 2032, 0,
	0, 0, 0, 0, 2000, 0, 0, 0, 0, 2353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2026, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2002, 2003, 2004, 2005, 0,
	0, 0, 0, 0, 2015, 1985, 2017, 3623, 0, 0,
	0, 0, 0, 0, 3622, 2030, 0, 0, 1991, 1992,
	1998, 2020, 1997, 1993, 0, 1990, 1988, 1989, 1981, 1982,
	1983, 1984, 1986, 1987, 0, 0, 0, 0, 5332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2018, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 2007,
	2009, 0, 0, 1977, 1978, 0, 2010, 2011, 2012, 2021,
	2022, 2023, 0, 0, 0, 2006, 0, 0, 0, 2024,
	0, 2025, 0, 0, 0, 0, 2014, 2008, 1994, 1995,
	0, 0, 3493, 0, 0, 1980, 0, 0, 0, 0,
	0, 2001, 0, 0, 0, 0, 2027, 2016, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2000, 0, 2033, 0, 0, 0, 0, 0,
	0, 2019, 0, 1979, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1999, 0, 0, 0, 0, 0,
	0, 0, 0, 1996, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2032, 0, 0,
	0, 2026, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2015, 0, 0, 3494, 0, 0, 0, 0,
	0, 0, 0, 2030, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2002, 2003, 2004, 2005, 0, 0,
	0, 0, 0, 0, 1985, 2017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1991, 1992, 1998,
	2020, 1997, 1993, 2006, 1990, 1988, 1989, 1981, 1982, 1983,
	1984, 1986, 1987, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2018, 0, 2001,
	0, 2028, 0, 0, 0, 0, 0, 0, 2007, 2009,
	0, 0, 1977, 1978, 0, 2010, 2011, 2012, 2021, 2022,
	2023, 0, 0, 0, 0, 0, 0, 0, 2024, 2019,
	2025, 0, 0, 0, 0, 2014, 2008, 1994, 1995, 0,
	0, 0, 0, 0, 1980, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2027, 2016, 0, 0, 0,
	0, 0, 0, 0, 0, 2032, 0, 0, 0, 0,
	0, 2000, 0, 2033, 0, 0, 0, 0, 0, 0,
	0, 0, 1979, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1999, 0, 0, 0, 0, 0, 0,
	0, 0, 1996, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2026, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2015, 0, 2017, 0, 0, 0, 0, 0, 0,
	0, 0, 2030, 0, 0, 1991, 1992, 1998, 2020, 1997,
	1993, 0, 1990, 1988, 1989, 1981, 1982, 1983, 1984, 1986,
	1987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2002, 2003, 2004, 2005, 0, 0, 0,
	0, 0, 0, 1985, 0, 4893, 0, 0, 0, 0,
	1977, 1978, 0, 2010, 2011, 2012, 2021, 2022, 2023, 0,
	0, 0, 2006, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2014, 2008, 0, 0, 0, 0, 0,
	0, 0, 1980, 0, 0, 0, 2018, 0, 2001, 0,
	2028, 0, 0, 2027, 0, 0, 0, 2007, 2009, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2033, 0, 0, 0, 0, 0, 2024, 2019, 2025,
	1979, 0, 0, 0, 0, 0, 1994, 1995, 0, 0,
	0, 1999, 0, 0, 0, 0, 0, 0, 0, 0,
	1996, 0, 0, 0, 0, 2016, 0, 0, 0, 0,
	0, 0, 0, 0, 2032, 0, 0, 0, 0, 0,
	2000, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2026,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2002, 2003, 2004, 2005, 0, 0, 0, 0, 0,
	2015, 1985, 2017, 0, 0, 0, 0, 0, 0, 0,
	0, 2030, 0, 0, 1991, 1992, 1998, 2020, 1997, 1993,
	0, 1990, 1988, 1989, 1981, 1982, 1983, 1984, 1986, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2018, 0, 0, 0, 2028, 0,
	0, 0, 0, 0, 0, 2007, 2009, 0, 0, 1977,
	1978, 0, 2010, 2011, 2012, 2021, 2022, 2023, 0, 0,
	0, 2006, 0, 0, 0, 2024, 0, 2025, 0, 0,
	0, 0, 2014, 2008, 1994, 1995, 0, 0, 0, 0,
	0, 1980, 0, 0, 0, 0, 0, 2001, 0, 0,
	0, 0, 2027, 2016, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2000, 0,
	2033, 0, 0, 0, 0, 0, 0, 2019, 0, 1979,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1999, 0, 0, 0, 0, 0, 0, 0, 0, 1996,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2032, 0, 0, 0, 2026, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2015, 1197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2030,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2002, 2003, 2004, 2005, 0, 0, 0, 0, 0, 0,
	1985, 2017, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1991, 1992, 1998, 2020, 1997, 1993, 2006,
	1990, 1988, 1989, 1981, 1982, 1983, 1984, 1986, 1987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2018, 0, 2001, 0, 2028, 0, 0,
	0, 0, 0, 0, 2007, 2009, 0, 0, 1977, 1978,
	0, 2010, 2011, 2012, 2021, 2022, 2023, 0, 0, 0,
	0, 0, 0, 0, 2024, 2019, 2025, 0, 0, 0,
	0, 2014, 2008, 1994, 1995, 0, 0, 0, 0, 0,
	1980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2027, 2016, 0, 0, 0, 0, 0, 0, 0,
	0, 2032, 0, 0, 0, 0, 0, 2000, 0, 2033,
	0, 0, 0, 0, 0, 0, 0, 0, 1979, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1999,
	0, 0, 0, 0, 0, 0, 0, 0, 1996, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2026, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2015, 0, 2017,
	0, 0, 0, 0, 0, 0, 0, 0, 2030, 0,
	0, 1991, 1992, 1998, 2020, 1997, 1993, 0, 1990, 1988,
	1989, 1981, 1982, 1983, 1984, 1986, 1987, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2002,
	2003, 2004, 2005, 0, 0, 0, 0, 1977, 1978, 1985,
	2010, 2011, 2012, 2021, 2022, 2023, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2006, 0,
	2014, 2008, 0, 0, 0, 0, 0, 0, 0, 1980,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 2018, 0, 2001, 0, 2028, 0, 0, 0,
	0, 0, 0, 2007, 2009, 0, 0, 0, 2033, 0,
	0, 0, 0, 0, 0, 0, 0, 1979, 0, 0,
	0, 0, 0, 2024, 2019, 2025, 0, 0, 1999, 0,
	0, 0, 1994, 1995, 0, 0, 0, 1996, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2016, 0, 0, 0, 0, 0, 0, 0, 0,
	2032, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4658,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2026, 0, 0, 2002, 2003,
	2004, 2005, 0, 0, 0, 0, 0, 0, 1985, 0,
	4321, 0, 0, 0, 0, 0, 2015, 0, 2017, 0,
	0, 0, 0, 0, 0, 0, 0, 2030, 0, 0,
	1991, 1992, 1998, 2020, 1997, 1993, 0, 1990, 1988, 1989,
	1981, 1982, 1983, 1984, 1986, 1987, 0, 0, 0, 0,
	0, 2018, 0, 0, 0, 2028, 0, 0, 0, 0,
	0, 0, 2007, 2009, 0, 0, 1977, 1978, 0, 2010,
	2011, 2012, 2021, 2022, 2023, 0, 0, 0, 0, 0,
	0, 0, 2024, 0, 2025, 0, 0, 2006, 0, 2014,
	2008, 1994, 1995, 0, 0, 0, 0, 0, 1980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2027,
	2016, 0, 0, 2001, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2000, 0, 2033, 0, 0,
	0, 0, 0, 0, 0, 0, 1979, 0, 0, 0,
	0, 0, 0, 2019, 0, 0, 0, 1999, 0, 0,
	0, 0, 0, 0, 0, 0, 1996, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2026, 0, 0, 0, 0, 2032,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2015, 0, 0, 4322, 0,
	0, 0, 0, 0, 0, 0, 2030, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2002, 2003, 2004,
	2005, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2017, 0, 0,
	0, 0, 0, 0, 0, 0, 2006, 0, 0, 1991,
	1992, 1998, 2020, 1997, 1993, 0, 1990, 1988, 1989, 1981,
	1982, 1983, 1984, 1986, 1987, 0, 0, 0, 0, 0,
	2018, 0, 2001, 0, 2028, 0, 0, 0, 0, 0,
	0, 2007, 2009, 0, 0, 1977, 1978, 0, 2010, 2011,
	2012, 2021, 2022, 2023, 0, 0, 0, 0, 0, 0,
	0, 2024, 2019, 2025, 0, 0, 0, 0, 2014, 2008,
	1994, 1995, 0, 0, 0, 0, 0, 1980, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2027, 2016,
	0, 0, 0, 0, 0, 0, 0, 0, 2032, 0,
	0, 0, 0, 0, 2000, 0, 2033, 0, 0, 0,
	0, 0, 0, 0, 0, 1979, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1999, 0, 0, 0,
	0, 0, 0, 0, 0, 1996, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2026, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2015, 0, 2017, 0, 0, 0,
	0, 0, 0, 0, 0, 2030, 0, 0, 1991, 1992,
	1998, 2020, 1997, 1993, 0, 1990, 1988, 1989, 1981, 1982,
	1983, 1984, 1986, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2002, 2003, 2004, 2005,
	0, 0, 0, 0, 1977, 1978, 1985, 2010, 2011, 2012,
	2021, 2022, 2023, 0, 0, 3629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2006, 0, 2014, 2008, 0,
	0, 0, 3624, 0, 0, 0, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2027, 0, 2018,
	0, 2001, 0, 2028, 0, 0, 0, 0, 0, 0,
	2007, 2009, 0, 0, 0, 2033, 0, 0, 0, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	2024, 2019, 2025, 0, 0, 1999, 0, 0, 0, 1994,
	1995, 0, 0, 0, 1996, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2016, 0,
	0, 0, 0, 0, 0, 0, 0, 2032, 0, 0,
	0, 0, 0, 2000, 0, 0, 0, 0, 0, 0,
	4097, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2026, 0, 0, 2002, 2003, 2004, 2005, 0,
	0, 0, 0, 0, 0, 1985, 0, 0, 0, 0,
	0, 0, 0, 2015, 0, 2017, 0, 0, 0, 0,
	0, 0, 0, 0, 2030, 0, 0, 1991, 1992, 1998,
	2020, 1997, 1993, 0, 1990, 1988, 1989, 1981, 1982, 1983,
	1984, 1986, 1987, 0, 0, 0, 0, 0, 2018, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 2007,
	2009, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2024,
	0, 2025, 0, 0, 2006, 0, 0, 0, 1994, 1995,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2016, 0, 0,
	2001, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2000, 1977, 1978, 0, 2010, 2011, 2012, 2021,
	2022, 2023, 0, 0, 0, 0, 0, 0, 0, 0,
	2019, 0, 0, 0, 0, 0, 2014, 2008, 0, 0,
	0, 0, 0, 0, 0, 1980, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2027, 0, 0, 0,
	0, 2026, 0, 0, 0, 0, 2032, 0, 0, 0,
	0, 0, 0, 0, 2033, 0, 0, 0, 0, 0,
	0, 0, 2015, 1979, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2030, 1999, 0, 0, 0, 0, 0,
	0, 0, 0, 1996, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2017, 0, 0, 0, 0, 0,
	0, 0, 0, 2006, 0, 0, 1991, 1992, 1998, 2020,
	1997, 1993, 0, 1990, 1988, 1989, 1981, 1982, 1983, 1984,
	1986, 1987, 0, 0, 0, 0, 0, 0, 0, 2001,
	0, 0, 0, 0, 2002, 2003, 2004, 2005, 0, 0,
	0, 0, 1977, 1978, 1985, 2010, 2011, 2012, 2021, 2022,
	2023, 0, 0, 0, 0, 0, 0, 0, 0, 2019,
	0, 0, 0, 0, 0, 2014, 2008, 0, 0, 0,
	3562, 0, 0, 0, 1980, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2027, 0, 2018, 0, 0,
	0, 2028, 0, 0, 0, 2032, 0, 0, 2007, 2009,
	0, 0, 0, 2033, 0, 0, 0, 0, 0, 0,
	0, 0, 1979, 0, 0, 0, 0, 0, 2024, 0,
	2025, 0, 0, 1999, 0, 0, 0, 1994, 1995, 0,
	0, 0, 1996, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2016, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2000, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1991, 1992, 1998, 2020, 1997,
	1993, 0, 1990, 1988, 1989, 1981, 1982, 1983, 1984, 1986,
	1987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2026, 0, 0, 2002, 2003, 2004, 2005, 0, 0, 0,
	0, 0, 0, 1985, 0, 0, 0, 0, 0, 0,
	0, 2015, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2030, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3589, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2018, 0, 0, 0,
	2028, 0, 0, 0, 0, 0, 0, 2007, 2009, 0,
	0, 1977, 1978, 0, 2010, 2011, 2012, 2021, 2022, 2023,
	0, 0, 0, 0, 0, 0, 0, 2024, 0, 2025,
	0, 0, 2006, 0, 2014, 2008, 1994, 1995, 0, 0,
	0, 0, 0, 1980, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2027, 2016, 0, 0, 2001, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2000, 0, 2033, 0, 0, 0, 0, 0, 0, 0,
	0, 1979, 0, 0, 0, 0, 0, 0, 2019, 0,
	0, 0, 1999, 0, 0, 0, 0, 0, 0, 0,
	0, 1996, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2026,
	0, 0, 0, 0, 2032, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2015, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2030, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2002, 2003, 2004, 2005, 0, 0, 0, 0,
	0, 0, 1985, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2017, 0, 0, 0, 0, 0, 0, 0,
	0, 2006, 0, 0, 1991, 1992, 1998, 2020, 1997, 1993,
	0, 1990, 1988, 1989, 1981, 1982, 1983, 1984, 1986, 1987,
	0, 0, 0, 0, 0, 2018, 0, 2001, 0, 2028,
	0, 0, 0, 0, 0, 0, 2007, 2009, 0, 0,
	1977, 1978, 0, 2010, 2011, 2012, 2021, 2022, 2023, 0,
	0, 0, 0, 0, 0, 0, 2024, 2019, 2025, 0,
	0, 0, 0, 2014, 2008, 1994, 1995, 0, 0, 0,
	0, 0, 1980, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2027, 2016, 0, 0, 0, 0, 0,
	0, 0, 0, 2032, 0, 0, 0, 0, 0, 2000,
	0, 2033, 0, 0, 0, 0, 0, 0, 0, 0,
	1979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1999, 0, 0, 0, 0, 0, 0, 0, 0,
	1996, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2026, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2015,
	0, 2017, 0, 0, 0, 0, 0, 0, 0, 0,
	2030, 0, 0, 1991, 1992, 1998, 2020, 1997, 1993, 0,
	1990, 1988, 1989, 1981, 1982, 1983, 1984, 1986, 1987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2002, 2003, 2004, 2005, 0, 0, 0, 0, 0,
	0, 1985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2006, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2018, 0, 2001, 0, 2028, 0,
	0, 0, 0, 0, 0, 2007, 2009, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2024, 2019, 2025, 0, 0,
	0, 0, 0, 0, 1994, 1995, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2016, 0, 0, 0, 0, 0, 0,
	0, 0, 2032, 0, 0, 0, 0, 0, 2000, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2026, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2541, 0, 0, 0, 0, 2015, 0,
	2017, 0, 0, 0, 0, 0, 0, 0, 0, 2030,
	0, 0, 1991, 1992, 1998, 2020, 1997, 1993, 0, 1990,
	1988, 1989, 1981, 1982, 1983, 1984, 1986, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2006,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2001, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2019, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2032, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1991, 1992, 1998, 2020, 1997, 1993, 0, 1990, 1988,
	1989, 1981, 1982, 1983, 1984, 1986, 1987,
}

var sqlPact = [...]int{
	331, -1000, -1000, -1000, -1000, -1000, -1000, 201, -1000, -1000,
	197, 196, 194, 191, 190, 189, 188, 187, 186, 185,
	183, -1000, -1000, 180, 176, 174, 173, -1000, 169, 168,
	-1000, 165, -1000, -1000, 164, -1000, 162, 161, 160, -1000,
	-1000, 159, -1000, 158, -1000, -1000, -1000, -1000, 157, 156,
	152, 103352, 102744, 103958, 2500, 131282, 113062, 2267, 92418, 130674,
	91810, 130066, 2335, 10866, 129458, 2989, 150, -1000, 128850, 144,
	142, 141, -1000, 112454, 128242, 110024, 109416, 2047, 1784, 1777,
	-1000, 140, 133, -1000, 5548, 78988, 130, 129, 128, 127,
	2510, 126, -1000, 125, 124, -1000, 122, -1000, 14394, 1622,
	-1000, 121, 117, -1000, 741, 108808, 114, 112, 111, 2804,
	110, 109, 76562, 107, 106, 105, 2538, 3120, -1000, -1000,
	2232, -1000, -1000, 104, 102, 100, 99, 98, 89, 87,
	86, 83, 82, 81, 79, 78, -1000, 77, 76, 74,
	72, 71, -1000, 70, 68, 67, -1000, 63, -1000, 61,
	60, 58, 54, 53, 51, 50, 48, 46, 45, 43,
	42, 40, 37, 36, 18350, -1000, -1000, 35, -1000, 2038,
	1768, 1766, 1762, 1023, 29, 26, 25, 24, 23, 22,
	21, 19, 18, 17, 15, 13, 7, 6, 5, 3,
	2, 1, -1, -2, -1000, 154, -3, -4, -6, -9,
	-11, -12, -14, 5448, 3803, -1000, 1783, 802, 1247, 33709,
	3215, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 140372, 131888, -15, -77, -20, -1000, 3545, 1132, 62452,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 292, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 502,
	2410, 778, -1000, -1000, -1000, 127634, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2496, -70, 93024, -1000, 2210, -1000,
	-1000, -1000, -1000, -1000, 777, -1000, 2493, 2420, 381, 2418,
	93024, -1000, -1000, -1000, 3649, 2675, 4119, 4118, 4117, 4116,
	4115, 139766, 1910, 4113, 2745, 4111, 4110, 4109, 4108, 4107,
	4106, 4104, -1000, 102136, 1090, 101528, 100920, 3664, 127028, 100312,
	126420, 142802, 52495, 768, 3648, -1000, -1000, -1000, -1000, -1000,
	-1000, 131888, -1000, 1087, -1000, -1000, 4102, 2264, 776, 111846,
	-1000, -1000, 125812, 1915, -1000, -1000, -1000, 967, 1290, 36201,
	36201, 36201, 277, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3661, -1000, -1000, -1000, -1000, 131888, 2978, 2978, 1513, 1453,
	1453, 2978, 2978, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 4101, 4100, 4098, 4097, 4095, 1480, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 91202, 26044, 90594, 89986, 125204, 51872,
	99704, 99096, 4094, 4092, 4090, 51249, 85730, 59968, 3802, 124596,
	142194, 3800, 3799, 1086, 2207, 1503, -1000, -1000, -1000, -1000,
	-1000, -1000, 82646, -42, 82646, 3873, 131888, -1000, 275, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 50626, 631, 50003, 608,
	49380, 570, 123988, -1000, -1000, -1000, -1000, 85112, -1000, 123380,
	1557, 2674, 4087, 4086, 1189, 4084, 3523, 1816, 4083, 4082,
	4069, 4068, 4064, 4062, 4061, 1584, 122772, 2918, 122164, 1861,
	141586, 2062, 1084, 98488, 103958, 2866, 121556, 1627, 1404, -1000,
	-1000, -1000, -1000, 3296, 3118, 3115, 1156, -1000, -1000, -1000,
	-1000, 66152, 7629, 6803, -1000, -1000, 13174, 120948, 69232, 103958,
	103958, -1000, -1000, -1000, -1000, -1000, -1000, 48757, 499, 48134,
	712, 120340, -1000, -1000, 66768, 3158, 1127, -1000, -1000, -1000,
	-1000, -1000, 119732, 47511, 330, 46888, 694, 131888, -1000, 3212,
	2150, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3933, 1706, 3870, 2949, 84494, 2262, 1529, 3608, 3294, 3293,
	1604, 2206, 3289, 4060, 2811, 3287, 3280, 3277, 3276, 3275,
	1740, 2808, 379, 2799, 33086, 3197, 1929, 46265, 1593, 1598,
	3273, 3272, 3884, 3713, 2191, 2199, 2187, 2239, 89378, 4059,
	4054, 3569, 3271, 3269, 3043, 3262, 2059, -1000, 3157, 1561,
	261, -1000, -1000, -1000, -1000, -1000, -1000, 261, 1579, -1000,
	-1000, -1000, -1000, -1000, 94236, -1000, -1000, 1480, -1000, -1000,
	-1000, 1358, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1783, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2583, -1000, 2285,
	-1000, -1000, -1000, 2749, 3515, 3515, 3515, 3647, 482, 480,
	-1000, 154, 894, 1164, -1000, -1000, 153219, -1000, -1000, 53118,
	53118, 53118, 53118, 53118, 53118, 53118, 53118, 2341, -1000, 775,
	-1000, -1000, 801, -1000, 774, 710, 627, -1000, -1000, -1000,
	-1000, -1000, -1000, 771, -1000, -1000, -1000, -1000, -1000, -1000,
	3838, -1000, 29211, -1000, -1000, -1000, 476, 770, 53118, -1000,
	-1000, 3918, 3917, 925, -1000, 257, 981, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3210,
	766, 764, -1000, 761, 755, 754, 752, 751, -1000, 750,
	-1000, 744, 742, 739, 737, 736, 735, 734, 732, -1000,
	2231, -1000, -1000, -1000, -1000, -1000, -1000, 696, 691, 691,
	691, -1000, 1078, -1000, -1000, -1000, 362, 689, 287, 688,
	687, 685, -1000, 731, 730, 728, 727, 726, 725, 724,
	721, 719, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1077,
	-1000, -1000, -1000, -1000, 1386, -44, 131888, -1000, 502, -44,
	-1000, -1000, 717, -1000, 37465, 37465, 37465, -1000, -1000, 2488,
	53118, -1000, 2857, -1000, -31, -31, 948, 64300, -1000, 61202,
	948, 343, 809, 70456, -1000, 3156, -1000, -1000, 714, 254,
	-1000, -1000, -1000, -1000, 26660, 3155, 131888, 131888, 131888, 103958,
	103958, 103958, 131888, 4052, 4048, 3402, 53118, -1000, -1000, 78380,
	144620, 104564, 1353, -43, -1000, -1000, 3785, 82030, 77774, 3204,
	144620, 3202, 3154, 144018, 4045, -1000, -1000, -1000, -1000, -1000,
	3379, 4044, 4041, 4040, -1000, 131888, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 276, 3378, -1000, -1000, 108200, 276, 3376,
	-1000, 276, 3375, -1000, 107594, -1000, -1000, 2452, 3374, -1000,
	-1000, 281, 3372, -1000, -1000, -1000, 280, 3370, -1000, -1000,
	249, -128, 3369, -1000, -1000, -1000, -1000, -1000, -1000, 153219,
	-1000, -1000, -1000, 143410, -1000, 3567, -1000, 131888, -1000, 53118,
	-1000, -1000, 3784, 1899, 3575, 3690, -1000, -1000, -53, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2723, 2701, 1214, 2519,
	-1000, 3412, 1588, 36201, 3510, -1000, -1000, -1000, -1000, -1000,
	235, 26660, 3083, -1000, -1000, 131888, -1000, 131888, 2978, 2978,
	-1000, -1000, -1000, 3876, 3875, 2978, 2978, 131888, 131888, -1000,
	-1000, -1000, -1000, -1000, -1000, -53, -1000, 2652, 3368, 1628,
	-1000, 2518, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2130, 3358, -1000, 2402, 3357, 2118, -1000, -1000, 2294,
	-1000, 149856, 1424, -1000, -1000, -1000, -1000, 2394, 3356, -30,
	-1000, -1000, 2495, -1000, -1000, -1000, -1000, 149617, -1000, 3108,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1803,
	-1000, -1000, 2276, 2139, -1000, 1417, 3355, -1000, 2945, 2945,
	97880, 3383, 68616, 66768, -46, -1000, -1000, 82646, -46, -1000,
	-1000, -1000, -144, -1000, 25420, 153219, -1000, -1000, -1000, -1000,
	1938, 153219, 982, -1000, -1000, 3350, -1000, 153219, 978, -1000,
	-1000, 3347, -1000, 2805, -1000, 3200, -1000, -1000, 2624, 2623,
	1047, -1000, 103958, 2204, 4038, -1000, 4035, -1000, -1000, 4033,
	-1000, 4031, 4029, 4028, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 97274, 2486, -1000, -1000, 1411, 1001, 86346, -1000, 2618,
	3687, -1000, 96666, 1081, -1000, 1033, 2608, -1000, 1388, 106988,
	989, 2606, -1000, 4027, 3641, 2891, 1033, 2605, -1000, -1000,
	-1000, -1000, -1000, 1065, -1000, 71668, -1000, 71668, -1000, 1794,
	-1000, 139160, -31, 103958, 3838, -1000, -76, -1000, -1000, -1000,
	1132, -1000, 65533, -1000, 65533, 111238, 86346, 1001, 3153, 74722,
	152980, -1000, 1045, -1000, -1000, 153219, -1000, -1000, -1000, 2800,
	-1000, -256, 2944, -1000, 86346, 68000, 3152, 2791, -1000, 153219,
	-1000, -1000, -1000, -1000, 153219, -1000, -1000, -1000, 86346, 1411,
	-1000, 119124, 96058, -1000, -1000, 1538, 2764, -1000, -1000, -1000,
	66768, 3151, 1418, 86346, 86346, 86346, -1000, 118516, -1000, -1000,
	2255, 1719, 3551, 2243, 103958, -1000, 1934, -1000, -1000, -1000,
	3589, 3382, 131888, -1000, -1000, 3199, -1000, 81424, 106382, -1000,
	105776, -1000, 105170, -1000, 103958, -1000, 103958, -1000, 4026, 4024,
	4020, -1000, -1000, 4019, -1000, 4012, 3582, -1000, 653, 45642,
	153219, 3581, -1000, 4010, 2138, 3197, 153219, -1000, 3360, 1788,
	1774, 131888, -1000, -1000, 131888, -1000, 131888, -1000, -1000, -1000,
	2511, 1681, -1000, -1000, 2722, -1000, -1000, -1000, 1041, -1000,
	-1000, 103958, 103958, 103958, 103958, 1271, -1000, 45019, -1000, -1000,
	3264, 4009, 1862, -1000, 1914, -1000, 3150, 3553, -1000, 3149,
	1515, 1946, 233, 3922, 233, -1000, -1000, 288, -1000, -1000,
	138554, -1000, 2749, -1000, 131888, -1000, 2715, 3179, 3194, 1545,
	2509, 2833, -1000, 44396, 2793, 56856, 2515, 154, -1000, -1000,
	154, 154, 34955, -1000, -1000, 36201, 894, 82030, 82030, 26660,
	1373, 53118, 53118, 53118, 53118, 53118, 53118, 53118, 53118, 53118,
	53118, 53118, 53118, 53118, 53118, 53118, 53118, 53118, 53118, 53118,
	53118, 53118, 53118, 53118, 53118, 53118, 53118, 53118, 53118, 53118,
	53118, 53118, 53118, 53118, 53118, 53118, 53118, 2463, 53118, 1352,
	53118, 53118, 53118, 53118, 2071, -1000, -1000, 2137, 542, 2253,
	710, -1000, -1000, -1000, 3853, 3853, 3853, 626, 626, 626,
	436, 436, 541, 4008, 801, -1000, 53118, -1000, 97, 64906,
	53118, 27278, -1000, 480, 15835, 2692, -1000, 474, 27931, -1000,
	-1000, -1000, 29211, 627, 43743, 53118, 1055, 153219, -1000, -1000,
	1810, 3862, 24796, 3225, 3019, 708, 897, 896, 32433, 31780,
	31127, 30474, 891, 888, 53118, 53118, 53118, 53118, 53118, 53118,
	53118, 53118, -1000, -1000, 3874, -1000, 3862, -1000, -1000, -1000,
	-1000, 3862, 1366, 1312, 3862, -1000, 3862, 3862, 8107, 8107,
	43120, 42497, 41874, 57479, 41251, 53118, 29851, 40628, 40005, -1000,
	59348, 131888, -44, 3783, 53118, 375, -1000, 12876, -1000, 375,
	375, 707, -78, 153219, 2794, 2794, 63068, 2384, 2353, 2353,
	2353, -1000, 948, 19141, 948, 116698, 2363, 948, 948, 229,
	273, 470, 60586, 2857, 116698, 788, 701, -21, -23, -24,
	-1000, -1000, -25, -26, -1000, -1000, 103958, 700, 27278, 26660,
	228, 2208, -83, 2845, 2834, 2831, 2824, -1000, 2820, 2482,
	-1000, -1000, -1000, 1962, -90, 1346, 103958, 131888, 1574, -51,
	-1000, 144620, 6030, -93, -1000, 1406, 226, 3862, -1000, -1000,
	-1000, -1000, -1000, 4007, 4006, -1000, 1071, 699, 698, 369,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 696, 691,
	691, 691, -1000, 362, 689, 287, 688, 687, 685, -1000,
	-1000, -1000, -1000, -1000, 3147, 103958, 131888, 1551, 80818, 93024,
	-128, 104564, 144620, -86, -1000, -1000, 131888, -1000, -1000, -1000,
	4005, -1000, 103958, -1000, -1000, 103958, 276, 3343, -1000, 103958,
	-1000, 103958, 265, 3335, -1000, -1000, 131888, -1000, 103958, 103958,
	-1000, 131888, 131888, 131888, 144620, 144620, 262, -1000, 103958, 894,
	-96, 1197, -53, -1000, -1000, -1000, -1000, 1480, -1000, 1838,
	-1000, -1000, -1000, -1000, -1000, -1000, 1507, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 925, -1000, -1000, -1000, -1000,
	3860, 3858, -52, -1000, -1000, 26660, -1000, 2007, -1000, -1000,
	-1000, -1000, 131888, 131888, -1000, -1000, 131888, 131888, -1000, -1000,
	-54, 1697, 589, 1345, -1000, 88770, 2568, 3552, 4004, 2885,
	3543, 1769, -1000, 1661, 681, -1000, 3662, 94236, 3705, 3740,
	1348, -1000, 3145, -1000, -1000, -1000, 966, 1852, 1924, 1344,
	1343, 94236, 2402, -1000, 82030, -1000, 2863, 3646, 1453, 1499,
	1453, 1453, 1465, 1456, -1000, 94236, 1923, 1342, 1337, 1336,
	-1000, -1000, 1813, 1787, -1000, -1000, 117910, 1612, -1000, 1335,
	1333, 133100, 3797, 2583, 2379, 833, 2121, -1000, 1423, 1332,
	3143, -1000, -1000, -56, 3702, 3721, 1348, -1000, 3142, 1330,
	-1000, -1000, -1000, 3644, 103958, 26660, 1660, 1658, 1653, 1920,
	1327, -45, -1000, 3694, 1701, -1000, 1411, 1411, 113668, 131888,
	3815, 86346, -1000, 2644, -1000, -1000, -1000, 3603, 3602, -1000,
	-1000, 1325, 1323, -1000, 1073, 8692, 3457, -1000, 144620, 1073,
	1073, 2099, 3333, 2919, 1691, -1000, 2942, 871, 2939, -1000,
	-1000, -1000, 871, 82646, -46, 131888, 225, -1000, 97, 53118,
	53118, 97, 53118, 97, -1000, 3682, 3330, 3328, 4003, 680,
	-1000, 2743, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 679,
	2601, 3141, 131888, 224, -1000, 103958, -1000, 3782, 117304, -1000,
	3323, 144620, 2402, 2600, -1000, -1000, 95450, -1000, 3322, 2140,
	502, 2598, -1000, 595, 3996, 3321, -1000, 137948, -1000, 3567,
	1390, 3319, 1125, 693, 3775, -1000, 693, 72884, -1000, 131888,
	-1000, -31, 5786, 87558, -98, -99, 467, -1000, 131888, 131888,
	3493, 2158, 2141, -1000, 1022, 66768, -1000, 66768, -101, -1000,
	-256, 2936, 1663, 66768, -1000, 1001, -146, 871, -1000, 871,
	-1000, 103958, 3193, -1000, 86346, 66768, -1000, 1001, 1001, 1001,
	-1000, -1000, -1000, -1000, 3990, 3985, 3984, 3983, -1000, -1000,
	1030, 103958, 131888, 103958, -1000, 2917, 1690, -1000, 223, -1000,
	144620, -1000, 144620, 131888, 103958, -1000, 1030, 131888, 1030, 131888,
	1030, 131888, 1030, 1030, -1000, -1000, -1000, -1000, -1000, 97,
	-1000, -1000, 153219, -1000, 53118, -1000, -1000, 1656, 3982, 1807,
	-1000, 3185, -1000, 3180, -1000, 9, -1000, -1000, 3872, 2049,
	-1000, 3915, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3980, 153219, -1000, 2124, -1000, -1000, -1000, -1000, 103958, 103958,
	103958, 103958, 131888, 3456, -1000, 131888, 3444, 3448, 103958, -1000,
	3920, -1000, -1000, 94236, -1000, 2715, 3179, -1000, -1000, -1000,
	-1000, -1000, -1000, 1542, 2432, -1000, 2776, -1000, 1715, -1000,
	-1000, -1000, 153219, 58102, -1000, -1000, 153219, 1977, -1000, 56233,
	55610, -1000, -1000, 1880, 103958, 2856, -1000, 2856, -92, -1000,
	150522, 2772, 103958, -52, 36201, -1000, -1000, -1000, -1000, -1000,
	965, 677, 677, 1454, 1454, 1454, 1454, 3672, 8165, 8381,
	1213, 9485, 9485, 7500, 7500, 7500, 7500, 7500, 9485, 1089,
	626, 626, 1089, 1089, 1089, 1089, 1089, 626, 626, 626,
	9485, 9485, 9485, 626, 436, 7552, 13615, 53118, 53118, 1303,
	2116, 542, 13388, 53118, 13690, 13690, 13690, 13690, -1000, 2136,
	-1000, -1000, -1000, -1000, 3140, 668, 57479, 57479, -1000, -1000,
	-1000, -1000, 28571, 53118, -1000, -1000, -1000, -1000, 39352, -1000,
	-1000, 149429, -351, 465, -1000, 220, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 464,
	-89, 93, -1000, 53118, 53118, 53118, 463, -1000, 219, 53118,
	131888, -1000, 146010, 787, -107, -1000, -104, 1492, -1000, 53118,
	-1000, -1000, 1300, -1000, 1289, 1287, 1282, -1000, 665, 460,
	-1000, 218, -1000, 2348, 656, 652, 53118, -1000, -1000, -1000,
	-1000, -1000, 149190, -1000, -1000, 148951, -1000, -1000, 148763, -1000,
	-1000, 148524, -1000, -1000, -1000, -1000, -1000, 152741, 145966, 145740,
	145317, 10605, 145273, 145229, -110, 458, -111, 457, 964, 960,
	456, 449, 431, -112, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -117, 411, -1000, 3139,
	-89, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 410,
	-1000, 407, -1000, 152562, -89, 406, 327, -1000, 57479, 57479,
	57479, 57479, 404, -1000, 150283, -1000, 152263, 38729, 38729, 38729,
	402, 152084, 53118, -89, -119, -1000, -122, -1000, -1000, -1000,
	-1000, 585, -127, 1051, 37465, 61834, 26660, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1051, 1051,
	53118, -1000, 53118, 2788, -1000, -1000, -1000, -1000, 2783, 2134,
	2794, 63068, -1000, -1000, -1000, -1000, 116698, -1000, 3838, 3326,
	-1000, 116698, -1000, -1000, 131888, 502, -1000, 116698, 116698, 26660,
	948, -1000, 948, 116698, 860, -1000, -1000, -1000, -1000, -1000,
	401, 75338, 93, 212, 26660, 1033, -1000, -1000, 2893, 2893,
	2893, 2893, 2893, 103958, -1000, -1000, 144620, 1281, -49, -125,
	2935, 2929, 3810, -286, -1000, 2252, -1000, 82030, -1000, 800,
	1304, 26660, -1000, -1000, -1000, 651, -1000, 3862, 3862, -1000,
	3862, 144620, 3136, 244, 2924, 2923, -1000, 2481, 243, -128,
	144620, 3979, -1000, -1000, 276, -1000, 103958, 276, 276, -1000,
	103958, 103958, 2452, -1000, 281, -1000, 280, -1000, -1000, -128,
	-1000, 1040, 36201, -1000, 1480, -1000, -1000, 1657, -1000, 2178,
	-1000, 1217, -1000, -1000, 36201, -1000, 3496, -1000, 1900, -1000,
	-1000, -1000, -1000, 2914, 131888, 131888, 103958, -1000, 114880, 131888,
	-1000, 2329, 144620, -1000, 2597, 137342, 2572, 136736, 82030, -1000,
	-1000, 640, 979, 2771, 2766, 1122, 131888, 131888, 2761, 136130,
	135524, -1000, 3977, 131888, 2203, 53118, 114880, 3642, 2309, 2578,
	97, 97, -1000, 97, -1000, -1000, 637, 1310, 103958, 103958,
	131888, 144620, 103958, 2046, -1000, -1000, -1000, -1000, -1000, 94842,
	-1000, -1000, 1453, -1000, -1000, -1000, 1453, -1000, 1453, 2402,
	1966, 131888, 144620, 103958, 144620, 134918, 2120, 134312, 2117, -1000,
	-1000, 2096, 1919, 131888, -1000, -1000, -1000, -1000, -1000, 1526,
	-1000, 833, 1274, 3133, 53118, 53118, 2278, 97, 97, -1000,
	97, 636, 26660, 2163, -1000, 3205, 131888, 3911, 133706, 3907,
	131888, 131888, 131888, 144620, 3548, 131888, -1000, -146, -48, -157,
	-1000, 924, 923, -144, -1000, 3815, -1000, 921, 2264, 131888,
	144620, -1000, 133100, 8692, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2266, 2883, 1133, 131888, 1417, -1000, -1000, 1917, 1273,
	1265, 94236, 2268, 1913, 1994, 144620, 66768, 1025, 66768, 2898,
	-1000, -1000, 24172, -1000, 153219, 153219, -1000, 153219, -1000, 80210,
	86346, 131888, -1000, 73500, 131888, 88164, 986, 3317, 72276, -144,
	1001, 1411, 3236, 1782, -157, 635, 131888, -1000, -1000, 2402,
	3316, 502, 2592, -1000, 144620, 1080, 3774, 3305, 630, 3976,
	3975, -1000, 103958, 2480, 2589, -1000, -1000, 132494, 3279, 833,
	131888, 1051, 63068, 2106, -1000, 69850, 1104, 131888, 2042, 237,
	-1000, -1000, -1000, -7, 131888, -1000, 808, -1000, -1000, 5786,
	5786, 1001, 67384, -130, -1000, 211, 628, 912, 911, -1000,
	5192, -1000, -256, -1000, 86346, 1022, 66768, 3131, -256, 2922,
	3129, -1000, -1000, 1039, -1000, 1401, 2920, 1001, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -32,
	-1000, 1911, 1993, 131888, -128, -128, -62, -1000, -1000, 209,
	-49, -1000, 1030, -1000, 1030, -1000, 1030, -1000, -1000, -1000,
	153219, -1000, -1000, -1000, 1804, 1765, 131888, -1000, 3177, -1000,
	131888, -1000, -1000, 26660, 131888, 103958, 26660, 103958, 3175, 3174,
	-1000, -1000, -1000, 131888, -1000, -1000, 131888, -1000, -1000, -1000,
	-1000, -1000, -1000, 1157, -1000, 1977, 2426, -1000, 627, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2693, -1000,
	-50, 34955, 950, -1000, -1000, 103958, -39, -52, 53118, 53118,
	12462, 11718, 53118, 57479, 57479, -1000, 53118, 11342, -1000, -1000,
	-1000, -1000, -1000, 3128, 625, 53118, 82030, 8510, 6725, -1000,
	400, 18225, 1089, -1000, 53118, -1000, 6538, -1000, 399, 38106,
	-1000, 150949, -34, -132, -1000, 19780, -89, -135, -1000, -1000,
	798, -1000, 3387, -1000, 53118, 151845, 2666, 2185, 1997, 1820,
	3862, 3905, 23548, -1000, 74116, 1052, 2375, 148111, -1000, -1000,
	-1000, -1000, 82030, 82030, 53118, 53118, -1000, 53118, 53118, 53118,
	-1000, -1000, -1000, 3862, 958, -1000, -1000, -1000, 958, -1000,
	-1000, 1453, -1000, 1453, -1000, 53118, -1000, -1000, 3125, 53118,
	-1000, 82030, 82030, 57479, 57479, 57479, 57479, 57479, 57479, 57479,
	57479, 57479, 57479, 57479, 57479, 57479, 57479, 57479, 57479, 57479,
	57479, 57479, 57479, 2740, 57479, 3837, 3837, 3837, 1166, -1000,
	3170, 3125, 53118, 53118, 82030, 398, 397, 396, -1000, 53118,
	-89, -1000, -1000, 5601, 624, -1000, 2682, -1000, 3018, -1000,
	53118, -1000, -211, -1000, 2857, -1000, -1000, 3018, 3018, -137,
	153219, 63068, 63068, -1000, 622, 53118, 2782, -1000, -1000, 786,
	-345, -1000, 909, -1000, -1000, -1000, -1000, -1000, -1000, 905,
	-1000, 502, -1000, -1000, -1000, 205, 116698, 116698, 785, -1000,
	-143, -1000, -1000, -148, -1000, 3770, 388, 26660, -1000, 1051,
	5738, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2814, -286,
	144620, 144620, 1885, 1884, 2414, -1000, 3028, 3902, -1000, 3871,
	797, 784, 155, 3862, 386, 384, 380, -128, 144620, 144620,
	1875, 1874, 77168, 144620, -1000, -1000, -1000, 276, -1000, -1000,
	-1000, 265, -1000, -1000, -1000, -1000, 2887, -1000, -53, -1000,
	-1000, -1000, 53118, -1000, 1002, -1000, -1000, 3546, 615, 1264,
	1260, -1000, -151, -1000, 902, -1000, -1000, -1000, -1000, -1000,
	3089, -1000, 3304, -1000, 2585, -1000, 1113, 2584, 1667, -1000,
	53118, 613, 2890, 610, 606, 3974, 2240, 3973, 1124, 3303,
	2452, 3292, 2452, -1000, -1000, -1000, 970, -1000, 153219, -159,
	-1000, 2309, -1000, 603, 602, -1000, -54, 1683, 555, 1259,
	1038, -1000, -1000, 53118, 53118, 116092, -1000, 506, 3554, -40,
	-1000, -1000, -1000, 1873, 1257, 1246, -1000, -1000, -1000, -1000,
	-1000, 2402, 1845, 1244, 1243, -1000, -1000, -1000, -1000, -1000,
	2582, -1000, 131888, -1000, 3290, 131888, 131888, 1036, -1000, 3242,
	3241, 956, 131888, 53118, 53118, 151606, 151427, -1000, 1035, -1000,
	-1000, 53118, -1000, -56, 1242, 3695, 2581, 103958, -1000, 2452,
	3288, 1239, -1000, 1233, -1000, -1000, -1000, 3693, 3692, 1248,
	-1000, 113668, 86346, 86346, 3815, 66768, -1000, -1000, -1000, 3845,
	-1000, -1000, -1000, -1000, 83876, -1000, -1000, 1073, 131888, 144620,
	103958, 1931, -1000, -1000, 93024, 93630, 131888, 2919, -128, 871,
	-1000, 2689, 871, 1025, 3111, -1000, 2853, -1000, 1034, 377,
	-57, -1000, 1341, 79594, 75944, -1000, 2355, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3969, 376, -161, -58, 82030, -1000,
	-1000, -1000, -1000, 2572, 103958, 131888, 1354, 2889, 131888, 131888,
	3760, -1000, 2466, 609, 103958, 953, -1000, 3838, -1000, -1000,
	-1000, 131888, 37465, 113668, -1000, 3675, 103958, 3757, 3282, 1033,
	103958, 97, 103958, 3882, -1000, -1000, 3753, 103958, 3274, 2479,
	2580, 2733, 833, 86952, 1033, 2372, -67, -1000, 2042, 36824,
	3547, -164, -1000, -1000, -1000, 1051, 72884, 63068, 53118, 3968,
	-169, -1000, -1000, -1000, -1000, -1000, 86346, 1001, 131888, 131888,
	3967, 86346, 86346, 86346, -60, 600, -1000, 900, 899, 898,
	-1000, -1000, -1000, -1000, -1000, -1000, 892, 890, 889, 875,
	1022, -1000, -1000, -256, 66768, 1022, 66768, 97, -1000, 2407,
	103958, 66768, -1000, 22924, 131888, 2917, -1000, 83252, -1000, -1000,
	-1000, -1000, -1000, 1030, 3901, -144, -1000, -1000, -1000, 2284,
	2506, 2284, 1986, 1973, -1000, -1000, -1000, 2424, -1000, -1000,
	-1000, -1000, 2837, 3522, 26660, 3674, 13690, 53118, 53118, 9953,
	6060, 5665, 13690, 53118, 53118, 82030, 8597, -172, 53118, 53118,
	-1000, 53118, 783, 153219, -1000, 3900, 53118, 374, 373, -1000,
	-1000, -1000, 3852, -1000, -1000, -1000, 153219, 53118, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 366, -1000, 94, -1000, -1000,
	-1000, 140978, -1000, 53118, 364, 3634, -1000, 360, 358, 16355,
	7239, 148043, 147626, 147400, 357, -1000, -1000, 355, 354, 153219,
	3170, 153219, -1000, -1000, 1031, 1031, 1446, 1446, 1446, 1446,
	3837, 873, 1316, 655, 447, 447, 447, 843, 1166, 1166,
	447, 447, 447, 1166, 3104, 2732, 599, 7118, -1000, -1000,
	153219, 153219, 353, -1000, -1000, -1000, -89, 351, 5601, -1000,
	3012, 3632, 153219, -1000, 63068, 3012, 3012, -1000, -1000, 2134,
	131888, 153219, 63068, -1000, 3326, -1000, 21046, 20416, -1000, 26660,
	-1000, -1000, -1000, -1000, 3838, -1000, 75338, -1000, 593, -1000,
	10, -1000, 5738, -1000, 872, -1000, -1000, 86346, 86346, 3965,
	3963, -1000, 3899, 3898, 2317, 3897, 2893, -1000, -286, -174,
	131888, 131888, -1000, 2409, -1000, 782, 3962, 796, 26660, 350,
	-1000, -1000, -1000, -128, -128, 131888, 131888, 3103, 103958, 131888,
	1399, -128, -1000, -1000, -1000, 3492, 153219, 3167, 2994, 2992,
	131888, 131888, -1000, 114880, 36201, 1677, 115486, 131888, 3270, -1000,
	3267, -1000, 1122, 2415, 147356, 63684, -1000, 63684, 131888, -1000,
	-1000, -1000, -1000, 2044, 1560, 3961, 1181, -1000, 3591, 131888,
	-1000, 131888, -1000, -1000, -1000, 114880, -1000, 131888, 131888, 103958,
	131888, -1000, 144620, 3252, -177, 153219, -61, -1000, 869, -1000,
	1276, -1000, 22300, 131888, 144620, 103958, 131888, 144620, 103958, 3266,
	1103, 131888, -1000, 1100, 2325, -1000, -1000, 3240, -1000, 153219,
	151188, 97, 53118, 3251, -179, 26660, -1000, 3895, 3893, 3265,
	3598, -1000, 131888, 3891, 131888, 103958, 3463, -1000, -1000, -1000,
	1027, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1841, 1226,
	1224, 2475, 2474, 2395, -62, 2268, 1025, -63, 590, -1000,
	868, -1000, -1000, 867, 866, 1025, -1000, 86346, 66768, 3957,
	2012, 73500, 53118, 53118, 82030, -1000, 82030, -1000, -1000, -1000,
	2884, -1000, 110630, 88164, 2444, -1000, -1000, 584, 131888, 131888,
	583, -1000, 97, -1000, 3956, 114880, 582, -1000, 2406, -1000,
	781, -1000, -1000, 210, -191, 144620, 2402, 97, 103958, -1000,
	502, 1016, 502, 347, -65, -1000, 3281, 1118, 26660, 103958,
	3263, 2738, 833, 86952, -1000, 1390, 2833, -1000, -66, -1000,
	723, 97, 2372, -1000, -67, 153219, -1000, 865, 346, -1000,
	3462, -1000, -1000, -192, -1000, -1000, 5456, 5456, 86346, 66768,
	86346, 86346, 86346, 66768, 86346, -1000, 1022, 3752, -1000, -256,
	-1000, 2588, -1000, 1001, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 26660, 1729, -1000, 579, 577, -1000, -1000, -1000,
	-1000, 3522, 13690, 13690, 53118, 53118, 53118, 13690, 8597, -193,
	-1000, 13690, 13690, -89, -1000, -1000, 150949, -1000, -1000, -1000,
	153219, -1000, 21676, 2299, -1000, 146974, -1000, 34955, -1000, -1000,
	53118, 53118, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	57479, 3101, 568, 82030, -1000, -1000, 340, 1000, 53118, 54987,
	2857, 1000, 1000, -1000, -222, -1000, -1000, -1000, 3838, -1000,
	3838, 10, -1000, -1000, 3954, 26660, -1000, 86346, -1000, -1000,
	-1000, -1000, -1000, 3953, 3952, 2558, 3949, 3948, -1000, -1000,
	-1000, 3247, -185, -208, -1000, 793, -1000, 3945, -1000, -1000,
	143, 136, 144620, 3100, 134, 2915, -1000, 97, -1000, -1000,
	-1000, -1000, -1000, -1000, 2913, 3751, -1000, 2087, -1000, 131888,
	131888, -1000, 131888, -1000, 26660, 131888, 3009, 1311, -1000, 979,
	2759, 567, 57479, 1155, 103958, 895, 2981, 2927, -1000, 3794,
	3630, 3003, -223, -1000, 131888, 53118, 131888, -224, -225, 2556,
	-1000, -1000, 1153, 1308, 53118, 1152, -1000, -1000, -1000, 82030,
	557, 2452, 2452, -1000, -230, -231, -1000, -1000, -1000, 53118,
	1222, 131888, 35578, -1000, 3944, 3554, -1000, -1000, -1000, -1000,
	-1000, -1000, 131888, 131888, -1000, 131888, 131888, -1000, 53118, -1000,
	150761, 53118, 1220, -1000, -1000, -1000, 3890, 2452, 26660, 2452,
	-1000, 2452, 3598, 1176, 2504, 131888, 144620, 103958, 1864, 1864,
	3166, -1000, -1000, -1000, 2787, 2787, 86346, 66768, 66768, -1000,
	-68, 1025, -1000, 1746, -1000, 153219, 153219, -1000, -1000, 2295,
	3943, -1000, -1000, -1000, -1000, 2756, -1000, -1000, -1000, 131888,
	2751, 2983, 63684, 556, 554, 131888, 1010, -1000, -232, 88164,
	986, 999, -1000, 71668, -1000, -1000, -1000, -1000, 502, 3749,
	-1000, 2874, 3748, -1000, 3888, 552, 549, 131888, 2472, 548,
	26660, 3550, 833, 86952, -1000, 3279, 2042, -1000, 2565, 131888,
	3538, -1000, 2833, 542, 1001, 538, 1001, -1000, -233, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1382, 1022,
	-71, -1000, 969, 968, -1000, -1000, -1000, 103958, 103958, 53118,
	53118, -1000, 13690, 13690, 13690, -1000, 338, -1000, -1000, 2372,
	3625, -1000, -72, 146702, 146657, 7854, 57479, 82030, -240, -1000,
	-1000, 131888, 153219, -73, -1000, 153219, 537, 536, 495, -1000,
	-1000, -1000, 780, 678, -1000, -1000, -1000, -1000, 3942, -1000,
	-1000, -1000, 144620, 144620, 3941, -1000, 144620, 144620, -128, 144620,
	144620, 1829, -1000, 114274, 131888, -1000, -1000, 1667, 1798, -1000,
	-1000, 131888, 2575, -1000, -1000, -1000, 1013, 53118, 7118, 57479,
	534, 53118, -1000, 521, 519, 3747, 3433, -1000, 2869, 3097,
	2030, 63684, -1000, 3522, -1000, 146236, -1000, 1117, 2119, -1000,
	-1000, -1000, -1000, 153219, 57479, 3598, 63684, -1000, -1000, 517,
	513, 153219, 512, 864, 3098, -1000, -1000, -1000, -1000, -144,
	-144, -1000, 153219, 97, 153219, 511, 3695, -1000, -1000, -1000,
	-1000, 2452, 103958, 844, -1000, -1000, -1000, 1211, -1000, -1000,
	-1000, -1000, 3940, 3939, 3092, 93024, -1000, -243, -1000, -1000,
	-1000, 2148, 82030, -1000, 986, -1000, -1000, 2444, 508, -1000,
	996, 2897, 2897, -249, 63684, 63684, -250, 2442, 2860, -1000,
	335, 3741, 999, -1000, 3834, -1000, 1051, -1000, 3738, 97,
	3461, -1000, 97, -1000, 3882, 63684, -1000, 103958, 63684, 2467,
	2225, 2716, 86952, -1000, 2733, -1000, -1000, -251, 131888, 2042,
	-1000, -1000, 86346, -1000, -1000, 3867, -1000, 2588, -1000, 131888,
	-1000, 131888, -1000, -1000, -257, -260, -1000, 2211, 53118, 34955,
	-1000, -1000, 7854, -262, -1000, -74, -1000, 3722, 54987, 3937,
	3932, 3931, -1000, -1000, -1000, -286, -286, -1000, -128, -128,
	-128, -128, 131888, -1000, 2084, -1000, 2572, -1000, -1000, 3261,
	-1000, 3007, 507, 16871, 7118, 2685, 131888, 12403, 2402, 2402,
	-1000, 3719, 3078, -1000, -1000, 2278, 504, -1000, -1000, -1000,
	-1000, 950, 131888, 996, 3004, 103958, 7118, 1121, -263, 2284,
	2284, 53118, 34332, 2322, -1000, 53118, -1000, -1000, 3598, 66768,
	144620, -1000, -1000, 144620, 2464, -1000, 3060, 3845, 6471, -1000,
	2442, 131888, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1117, -265, -268, -1000, -1000, 3586,
	-1000, 3459, 2884, 97, -1000, -1000, -1000, 97, -1000, 3930,
	1016, 310, -270, 1118, -271, 103958, 2102, -1000, 833, -1000,
	2738, 1051, 3302, -1000, -278, -1000, -1000, -1000, -279, -280,
	-1000, -1000, 302, 54364, 54364, 54364, -89, -92, -1000, 131888,
	503, -1000, -1000, -1000, -1000, -1000, -1000, 118, -1000, -1000,
	3235, 946, -1000, 901, 2026, 301, 1140, 295, -5, -1000,
	-1000, -1000, 3003, -1000, 131888, -1000, -1000, -1000, 946, 502,
	-1000, 53118, 1117, -285, -1000, 1099, -287, -1000, 1096, -288,
	-1000, 3075, -1000, -297, 2452, -1000, -286, 262, 1864, 1015,
	3676, -1000, 2413, 6471, -1000, 3848, 86952, -1000, -1000, -1000,
	2461, 2550, -1000, -1000, -1000, -1000, 1814, 2958, -1000, 2727,
	1462, 1462, 131888, -1000, -1000, 2697, -298, -1000, -1000, 2030,
	1117, 2278, 2499, -1000, 2295, 1010, -1000, -1000, -1000, -1000,
	1117, 498, 2030, 496, 1587, 833, -1000, -1000, 1453, 3550,
	3286, 1457, 1001, -1000, -1000, -1000, 3278, -1000, 58725, 2459,
	1970, 150095, 3278, 3278, -1000, -1000, 144620, 131888, 996, 3658,
	-1000, 931, 930, 1586, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1051, -299, -1000, 2685, 153219, 996, -1000, 2284,
	2905, -1000, 2284, 3071, -1000, 2315, -1000, -1000, -1000, -1000,
	3069, -1000, 1942, 3832, -1000, -1000, 3696, 53118, -1000, -1000,
	-1000, -1000, 2545, 2445, 2956, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 996, 131888, 2278, 2030, 996, 1956, 1954,
	3929, 986, 2442, 2030, 63684, 2278, 63684, 2263, -1000, 131888,
	-1000, 2225, 1396, -1000, 1763, -1000, -1000, 1825, 3726, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -128, -1000, -1000, 838,
	-1000, 3409, -1000, 1138, 2222, 2222, -1000, -1000, 901, -1000,
	-1000, 494, -1000, 491, -1000, 144620, 2385, -1000, -1000, -1000,
	153219, 2876, 2537, -1000, -1000, -1000, -1000, 996, 2278, 1051,
	-1000, 3926, -1000, 2442, -1000, 2278, -317, 996, -324, 2333,
	-1000, -1000, -144, 2102, -1000, 1761, 72884, 1965, -1000, -1000,
	2359, 53741, 53118, -1000, 3817, -1000, -1000, 2760, -1000, 3003,
	53118, 53118, 262, 71062, 9458, -1000, 2871, 1051, 996, -1000,
	-1000, 2697, 996, 1117, 1051, 2030, -1000, 833, 1587, 72884,
	-295, -1000, -1000, -1000, 153219, -1000, -1000, -1000, -1000, -327,
	-329, -1000, -157, 113668, -336, -1000, -1000, -1000, -1000, -1000,
	1051, -1000, 1051, 2030, -1000, 2278, 144620, 2263, -295, -1000,
	2278, 1210, -332, -1000, -1000, -1000, 2278, 996, -1000, -1000,
	-1000, -1000, -1000, 484, -1000, 996, 1051, 53118, 1051, -1000,
	-339, -1000, 2278, -1000,
}

var sqlPgo = [...]int{
	0, 4870, 4867, 27, 4863, 4861, 4859, 4858, 4847, 4846,
	4843, 4842, 4840, 4839, 4835, 4833, 160, 4832, 4826, 4821,
	4820, 4815, 4814, 4812, 4811, 4807, 4806, 4804, 4803, 4802,
	4799, 4793, 4791, 4787, 4783, 4782, 4778, 4777, 4776, 4775,
	4772, 4771, 4770, 4768, 4765, 4760, 4758, 4757, 4754, 4750,
	4746, 4745, 4742, 4740, 4739, 4738, 4736, 4735, 4733, 4732,
	4731, 4730, 4729, 4727, 4724, 4723, 4722, 4721, 4719, 4715,
	4714, 4711, 4709, 4707, 70, 4706, 4705, 4704, 4703, 4700,
	4698, 4697, 4696, 4695, 4693, 4691, 4685, 4684, 4683, 4680,
	4679, 4675, 4672, 4670, 4668, 73, 4666, 297, 4664, 4663,
	4660, 4658, 4657, 4656, 4655, 4654, 4651, 4647, 4642, 4641,
	296, 4639, 13, 176, 4638, 4637, 25, 4636, 4634, 295,
	4631, 4629, 4628, 4627, 4626, 307, 4624, 4623, 4622, 4620,
	4619, 278, 4618, 4613, 4612, 4611, 4609, 4607, 456, 152,
	4606, 4605, 1870, 4600, 4599, 4598, 4597, 4593, 4592, 4590,
	277, 280, 4589, 4586, 4584, 275, 193, 4581, 294, 4579,
	4578, 4577, 4575, 4569, 4566, 4564, 4561, 4560, 4558, 4557,
	4556, 4555, 4554, 4552, 4551, 4550, 4549, 4547, 4545, 4539,
	4537, 4536, 4535, 4534, 4532, 4531, 4527, 4526, 4525, 4523,
	4522, 4519, 4514, 4504, 4502, 4501, 4500, 4499, 4498, 4497,
	4496, 271, 237, 145, 4494, 4493, 4491, 4484, 4479, 292,
	289, 4478, 4471, 4465, 4464, 4463, 3697, 4462, 4461, 4460,
	4459, 4457, 4448, 4447, 4446, 4445, 164, 6, 79, 4441,
	4440, 109, 103, 100, 106, 115, 111, 4439, 4437, 142,
	4435, 149, 130, 4434, 131, 120, 32, 22, 262, 267,
	1862, 261, 4432, 4430, 4427, 274, 223, 4426, 265, 4425,
	4423, 4422, 4421, 4417, 4415, 94, 61, 236, 4414, 4413,
	163, 188, 202, 206, 198, 197, 185, 66, 118, 91,
	72, 55, 19, 95, 241, 28, 1, 291, 4412, 286,
	9, 162, 11, 44, 4411, 4408, 4405, 4404, 3741, 128,
	4401, 288, 269, 196, 4400, 4399, 4398, 1114, 4396, 4392,
	64, 273, 194, 166, 117, 533, 150, 4391, 172, 187,
	37, 4390, 190, 99, 4388, 4384, 114, 104, 9597, 9440,
	4383, 4382, 134, 82, 132, 4761, 207, 204, 228, 129,
	148, 178, 191, 4379, 119, 4376, 239, 233, 200, 51,
	4371, 105, 4370, 3732, 101, 209, 173, 6235, 4367, 4366,
	4365, 96, 4364, 116, 4363, 4361, 80, 23, 3, 2,
	165, 41, 43, 12, 4360, 30, 144, 58, 35, 4358,
	31, 4357, 4351, 4350, 4349, 57, 4348, 63, 186, 4343,
	4337, 300, 4325, 107, 67, 42, 4320, 140, 245, 4318,
	255, 151, 4316, 4315, 283, 221, 4314, 84, 258, 4313,
	4307, 4306, 4304, 4302, 303, 154, 7, 153, 4301, 4300,
	171, 4299, 68, 268, 226, 4298, 102, 4296, 4295, 203,
	75, 168, 299, 201, 254, 147, 251, 205, 259, 4294,
	4292, 4291, 211, 4290, 4289, 247, 180, 4288, 4287, 263,
	308, 108, 60, 88, 264, 92, 222, 183, 4286, 229,
	4285, 4284, 301, 208, 242, 48, 10, 17, 122, 121,
	4283, 5, 256, 182, 244, 143, 4282, 7318, 3617, 3546,
	257, 4281, 189, 146, 90, 170, 175, 285, 97, 4280,
	4276, 2858, 4275, 4274, 4273, 4270, 212, 4269, 4265, 62,
	174, 184, 219, 4263, 124, 85, 65, 33, 155, 98,
	302, 136, 248, 199, 279, 4262, 4261, 4260, 216, 4259,
	78, 141, 231, 4258, 227, 281, 71, 4257, 686, 4256,
	181, 2489, 83, 167, 4254, 253, 4252, 4251, 4247, 4246,
	4244, 4243, 4242, 2173, 266, 4241, 4240, 4239, 49, 220,
	4238, 217, 238, 249, 69, 74, 218, 177, 213, 135,
	1970, 225, 45, 4, 4237, 137, 4236, 2377, 76, 4235,
	0, 14137, 10316, 13525, 4233, 4232, 13724, 4230, 8485, 4228,
	4227, 4225, 243, 89, 4224, 4220, 4217, 126, 4216, 93,
	4215, 4214, 87, 4213, 36, 18, 24, 39, 34, 405,
	399, 4212, 4211, 56, 158, 20, 4210, 298, 252, 4207,
	4205, 4204, 4202, 112, 4201, 53, 4200, 50, 4199, 4198,
	59, 15, 40, 4195, 4194, 169, 4191, 139, 232, 179,
	4186, 4185, 192, 4181, 77, 156, 4180, 4178, 287, 234,
	235, 110, 4177, 276, 4176, 224, 4172, 4171, 29, 4170,
	4169, 270, 133, 127, 52, 272, 161, 54, 4168, 4167,
	4163, 159, 4162, 4161, 4160, 123, 4159, 4157, 81, 4155,
	4154, 38, 4153, 157, 4149, 16, 4147, 4146, 4145, 214,
	240, 4144, 4143, 195, 4142, 4141, 305, 4138, 4137, 3705,
	313, 4136, 46, 4135, 4131, 4130, 8, 4129, 4128, 230,
	3449, 4124, 4123, 47, 4122, 215,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 8, 8, 8, 8, 8,
	8, 8, 8, 8, 8, 8, 14, 14, 10, 10,
	10, 10, 11, 11, 11, 11, 11, 58, 58, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 41, 43, 42, 36, 36, 37, 37,
	38, 39, 39, 44, 46, 45, 13, 13, 13, 9,
	9, 9, 9, 9, 9, 9, 9, 22, 22, 47,
	47, 23, 23, 49, 49, 24, 24, 50, 50, 638,
	638, 638, 639, 639, 640, 640, 640, 27, 52, 20,
	21, 21, 21, 21, 641, 641, 641, 641, 40, 28,
	53, 33, 33, 33, 33, 33, 229, 229, 229, 229,
	26, 26, 48, 48, 273, 273, 272, 272, 272, 272,
	272, 272, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 272, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 272, 272, 272, 272, 272, 637, 637, 275, 275,
	274, 262, 262, 263, 263, 264, 264, 642, 642, 276,
	276, 276, 277, 277, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 532, 532, 532, 563, 563, 563,
	563, 565, 565, 682, 682, 683, 683, 683, 683, 683,
	141, 141, 428, 428, 428, 62, 62, 62, 62, 62,
	632, 632, 231, 231, 231, 233, 233, 232, 232, 232,
	232, 232, 85, 85, 648, 648, 647, 646, 646, 646,
	649, 649, 649, 230, 230, 230, 137, 137, 137, 137,
	137, 137, 137, 137, 138, 138, 139, 139, 658, 658,
	658, 234, 234, 234, 236, 236, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 241,
	19, 19, 19, 120, 120, 120, 120, 120, 120, 120,
	115, 115, 567, 567, 568, 568, 225, 225, 226, 226,
	226, 226, 227, 227, 228, 228, 228, 77, 77, 238,
	238, 240, 240, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 65, 65, 65, 65,
	65, 66, 66, 66, 66, 66, 66, 67, 67, 67,
	67, 67, 67, 68, 68, 75, 75, 75, 75, 75,
	75, 75, 75, 203, 203, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 82, 82, 82,
	82, 82, 91, 659, 659, 660, 660, 674, 663, 663,
	664, 664, 665, 665, 665, 666, 666, 666, 666, 666,
	673, 673, 673, 673, 673, 668, 667, 669, 669, 670,
	670, 671, 671, 671, 671, 671, 672, 672, 672, 672,
	672, 672, 672, 672, 672, 672, 672, 672, 672, 672,
	672, 672, 672, 662, 675, 676, 676, 677, 677, 678,
	678, 678, 684, 684, 684, 684, 684, 684, 684, 684,
	684, 684, 684, 684, 684, 684, 684, 684, 684, 685,
	685, 686, 686, 687, 687, 687, 687, 687, 687, 687,
	687, 687, 687, 687, 687, 687, 687, 687, 687, 687,
	687, 687, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	92, 92, 389, 389, 352, 352, 93, 93, 93, 94,
	94, 95, 95, 79, 79, 79, 628, 628, 629, 630,
	688, 688, 523, 523, 522, 522, 97, 97, 427, 427,
	98, 98, 98, 98, 98, 98, 99, 99, 99, 99,
	99, 99, 99, 100, 100, 100, 100, 100, 100, 100,
	100, 100, 100, 100, 100, 100, 100, 107, 107, 107,
	107, 107, 108, 108, 108, 105, 105, 105, 102, 102,
	102, 101, 101, 101, 106, 106, 106, 627, 338, 338,
	104, 104, 104, 103, 103, 103, 405, 405, 109, 109,
	109, 109, 353, 110, 110, 110, 110, 110, 110, 110,
	110, 113, 113, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 525, 525, 5, 5,
	268, 268, 267, 267, 267, 267, 6, 6, 6, 271,
	271, 270, 269, 111, 111, 111, 489, 489, 116, 116,
	116, 443, 443, 117, 117, 117, 117, 117, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 140, 140,
	140, 140, 140, 140, 140, 140, 140, 140, 140, 140,
	140, 140, 634, 634, 398, 398, 301, 301, 301, 301,
	129, 129, 129, 129, 130, 130, 130, 130, 131, 131,
	211, 211, 147, 147, 147, 147, 146, 146, 146, 146,
	146, 146, 146, 146, 69, 69, 69, 70, 70, 71,
	71, 72, 72, 73, 73, 74, 74, 74, 74, 74,
	150, 150, 32, 32, 32, 32, 151, 151, 679, 679,
	153, 149, 149, 149, 149, 149, 149, 149, 148, 148,
	152, 152, 152, 152, 154, 156, 156, 156, 156, 156,
	155, 155, 155, 155, 155, 157, 157, 557, 557, 413,
	413, 555, 555, 579, 579, 556, 556, 359, 359, 359,
	359, 359, 360, 360, 360, 566, 566, 566, 566, 566,
	566, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 212, 212, 212,
	213, 213, 218, 218, 219, 219, 219, 220, 220, 220,
	217, 217, 217, 214, 214, 215, 215, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 223, 223, 221,
	221, 222, 222, 690, 690, 689, 689, 224, 224, 224,
	224, 224, 184, 184, 184, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 414, 414,
	187, 187, 187, 171, 171, 159, 159, 159, 159, 159,
	159, 159, 159, 237, 237, 237, 237, 164, 164, 164,
	164, 164, 164, 164, 164, 165, 165, 165, 160, 160,
	173, 173, 173, 173, 173, 166, 166, 167, 167, 167,
	168, 168, 168, 168, 195, 195, 170, 170, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 161, 161, 161,
	161, 175, 175, 175, 175, 450, 450, 450, 201, 201,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 198, 198, 198, 198,
	198, 198, 650, 650, 651, 651, 651, 191, 191, 191,
	191, 191, 191, 503, 503, 185, 185, 185, 185, 190,
	190, 190, 190, 193, 193, 193, 193, 433, 433, 182,
	182, 182, 183, 183, 183, 188, 188, 200, 189, 390,
	390, 186, 186, 192, 192, 192, 192, 194, 194, 194,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 163,
	163, 163, 163, 196, 196, 181, 181, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 691, 691,
	177, 177, 177, 176, 176, 176, 176, 179, 179, 180,
	180, 180, 180, 180, 180, 180, 178, 169, 199, 631,
	631, 625, 625, 625, 625, 625, 625, 625, 625, 625,
	625, 626, 626, 626, 626, 626, 633, 633, 121, 121,
	121, 121, 121, 121, 121, 132, 132, 132, 132, 132,
	132, 132, 135, 135, 122, 122, 122, 122, 122, 122,
	122, 125, 125, 123, 123, 123, 123, 124, 124, 86,
	86, 86, 86, 86, 18, 18, 18, 87, 87, 292,
	292, 246, 246, 246, 377, 377, 247, 247, 367, 367,
	367, 367, 242, 242, 243, 243, 244, 245, 245, 88,
	88, 692, 692, 692, 643, 643, 643, 644, 644, 644,
	644, 644, 644, 361, 361, 362, 362, 469, 469, 469,
	469, 469, 365, 365, 365, 366, 366, 366, 366, 366,
	366, 366, 366, 366, 375, 376, 376, 368, 368, 374,
	373, 373, 372, 372, 371, 371, 369, 370, 370, 370,
	379, 379, 378, 381, 381, 380, 468, 588, 588, 590,
	590, 590, 590, 590, 590, 590, 592, 592, 592, 592,
	592, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 451, 451, 693, 693, 694, 695, 586,
	586, 586, 587, 582, 582, 583, 583, 583, 583, 583,
	363, 363, 364, 364, 364, 364, 584, 585, 396, 396,
	507, 589, 589, 591, 591, 593, 696, 696, 696, 696,
	696, 696, 697, 697, 697, 467, 467, 466, 466, 465,
	465, 387, 387, 594, 594, 594, 594, 595, 595, 595,
	595, 595, 598, 597, 596, 596, 596, 596, 596, 90,
	90, 90, 430, 430, 429, 429, 431, 431, 431, 431,
	431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
	431, 431, 431, 431, 208, 208, 304, 304, 304, 84,
	84, 84, 15, 15, 15, 15, 15, 15, 15, 319,
	319, 16, 16, 16, 16, 645, 645, 645, 89, 89,
	89, 89, 89, 89, 385, 385, 385, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 636, 636, 635, 635, 305, 305, 699,
	699, 96, 96, 96, 96, 96, 96, 96, 96, 526,
	526, 527, 527, 83, 83, 83, 83, 83, 452, 452,
	449, 449, 448, 448, 395, 395, 505, 505, 505, 506,
	309, 309, 310, 310, 265, 265, 265, 35, 34, 25,
	25, 29, 29, 30, 30, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 31, 31, 55, 55, 55, 55,
	56, 56, 56, 56, 59, 59, 60, 60, 54, 54,
	54, 54, 57, 57, 51, 51, 61, 61, 61, 61,
	61, 652, 654, 654, 653, 653, 657, 657, 657, 657,
	657, 657, 655, 655, 340, 340, 656, 656, 680, 680,
	681, 681, 128, 128, 133, 133, 133, 133, 133, 134,
	134, 134, 134, 136, 136, 136, 136, 145, 145, 204,
	204, 204, 204, 204, 204, 204, 63, 63, 76, 76,
	143, 701, 701, 701, 144, 144, 144, 205, 205, 205,
	205, 206, 206, 207, 207, 700, 700, 302, 302, 462,
	462, 463, 463, 702, 702, 464, 464, 464, 464, 464,
	295, 294, 296, 296, 297, 297, 81, 81, 81, 285,
	285, 284, 286, 286, 287, 287, 282, 282, 569, 569,
	289, 289, 289, 290, 290, 278, 278, 279, 279, 280,
	280, 281, 281, 293, 293, 564, 564, 703, 703, 119,
	119, 119, 210, 210, 351, 351, 351, 459, 459, 459,
	388, 388, 316, 316, 461, 461, 461, 461, 461, 426,
	426, 426, 209, 209, 403, 403, 416, 416, 417, 417,
	519, 519, 418, 126, 126, 127, 127, 142, 142, 250,
	250, 248, 248, 248, 248, 248, 248, 248, 248, 255,
	255, 256, 256, 257, 257, 258, 259, 259, 259, 259,
	406, 406, 260, 260, 260, 249, 249, 249, 251, 251,
	251, 251, 251, 251, 251, 254, 254, 254, 254, 261,
	261, 261, 253, 253, 605, 605, 605, 607, 607, 609,
	609, 608, 608, 604, 604, 606, 606, 698, 698, 432,
	432, 432, 384, 386, 382, 382, 383, 383, 393, 393,
	391, 392, 392, 394, 394, 504, 504, 504, 266, 266,
	266, 423, 423, 423, 423, 424, 424, 455, 455, 453,
	453, 453, 453, 454, 454, 456, 456, 456, 457, 457,
	458, 458, 420, 420, 421, 421, 422, 422, 422, 422,
	485, 485, 252, 252, 252, 400, 400, 400, 401, 401,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 476, 476, 474, 474, 474, 474, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 509, 510, 510, 402,
	402, 511, 460, 460, 623, 623, 623, 624, 624, 502,
	502, 512, 512, 512, 512, 512, 512, 500, 500, 501,
	501, 520, 521, 521, 436, 436, 436, 436, 434, 434,
	437, 437, 437, 437, 437, 435, 435, 513, 513, 513,
	513, 425, 425, 514, 514, 514, 514, 515, 516, 516,
	517, 517, 470, 471, 471, 528, 528, 528, 528, 530,
	399, 399, 399, 399, 399, 581, 580, 580, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 545,
	545, 545, 545, 545, 545, 545, 531, 531, 531, 531,
	531, 535, 535, 535, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 536, 536, 541, 541, 542,
	542, 542, 537, 538, 543, 543, 543, 543, 704, 704,
	547, 547, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 533, 533, 533, 540, 540, 540, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	444, 444, 446, 446, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 479, 479, 479, 479, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 599, 599, 599, 599, 599, 599,
	599, 599, 481, 481, 602, 602, 603, 603, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 610,
	610, 611, 611, 613, 613, 614, 614, 615, 616, 616,
	616, 617, 618, 618, 612, 612, 619, 619, 619, 619,
	620, 620, 621, 621, 621, 621, 621, 622, 622, 622,
	622, 622, 491, 491, 492, 492, 498, 498, 498, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 358, 358, 357, 306, 306, 306,
	306, 306, 306, 411, 411, 409, 409, 409, 412, 412,
	410, 410, 408, 408, 407, 407, 488, 488, 486, 486,
	490, 490, 438, 438, 546, 546, 546, 546, 546, 546,
	546, 546, 439, 439, 439, 447, 440, 440, 441, 441,
	441, 441, 441, 482, 483, 442, 442, 442, 484, 484,
	493, 497, 497, 496, 495, 495, 494, 494, 472, 472,
	473, 473, 419, 419, 705, 705, 415, 415, 518, 518,
	518, 518, 575, 575, 355, 355, 404, 404, 354, 354,
	346, 346, 347, 347, 347, 347, 397, 397, 499, 499,
	548, 548, 549, 549, 550, 550, 551, 551, 552, 553,
	554, 487, 487, 327, 326, 313, 314, 325, 324, 323,
	312, 315, 320, 321, 322, 317, 318, 334, 333, 332,
	283, 288, 339, 341, 341, 344, 344, 345, 343, 342,
	342, 329, 330, 331, 524, 311, 348, 348, 349, 349,
	349, 350, 350, 350, 350, 307, 307, 308, 308, 335,
	335, 336, 337, 337, 328, 328, 328, 298, 298, 298,
	299, 299, 300, 300, 562, 562, 559, 559, 559, 560,
	560, 560, 661, 561, 561, 561, 561, 558, 558, 558,
	558, 558, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 571, 571, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 573, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 578, 578,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 3, 4, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 4, 4, 6, 9, 6, 8,
	4, 4, 5, 9, 7, 9, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 1, 1, 1, 1, 0, 1, 6, 6, 4,
	8, 7, 10, 9, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 4, 4, 6, 5, 6, 5, 6,
	4, 8, 3, 8, 4, 2, 3, 10, 3, 6,
	4, 3, 1, 3, 4, 4, 2, 1, 1, 3,
	1, 3, 2, 4, 3, 2, 3, 2, 0, 1,
	1, 0, 2, 0, 7, 10, 6, 8, 6, 6,
	6, 9, 4, 3, 2, 2, 0, 1, 1, 1,
	1, 1, 3, 1, 3, 6, 4, 6, 7, 9,
	6, 2, 2, 3, 0, 8, 6, 8, 7, 2,
	0, 1, 2, 5, 0, 1, 3, 3, 1, 1,
	3, 3, 12, 3, 1, 1, 2, 1, 4, 0,
	3, 3, 0, 4, 6, 0, 5, 7, 6, 8,
	7, 9, 8, 2, 1, 3, 1, 3, 3, 3,
	0, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 1,
	3, 3, 3, 6, 4, 9, 7, 12, 9, 2,
	7, 2, 1, 1, 1, 3, 3, 0, 3, 1,
	3, 1, 1, 3, 2, 5, 0, 7, 5, 2,
	0, 1, 2, 3, 1, 1, 2, 2, 2, 2,
	1, 2, 3, 3, 4, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 4, 3, 6, 6, 6, 6, 6,
	8, 4, 4, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 6, 3, 8,
	5, 3, 12, 2, 0, 1, 0, 1, 1, 0,
	1, 3, 1, 3, 3, 3, 3, 2, 2, 1,
	1, 1, 1, 2, 1, 1, 1, 1, 0, 1,
	2, 2, 2, 1, 1, 1, 4, 5, 1, 1,
	1, 1, 3, 3, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 1, 2, 1, 1, 3, 0, 1,
	4, 0, 4, 3, 3, 4, 3, 4, 4, 4,
	7, 3, 3, 4, 3, 3, 3, 3, 3, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 1,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 10, 5, 1, 3, 3, 1,
	1, 0, 2, 0, 2, 0, 9, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 6, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 1, 1, 3,
	4, 6, 3, 3, 5, 3, 1, 3, 2, 2,
	2, 2, 1, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 4, 3,
	1, 2, 3, 2, 2, 2, 4, 6, 3, 1,
	2, 2, 7, 5, 7, 2, 3, 0, 3, 5,
	2, 3, 0, 2, 3, 2, 3, 2, 7, 4,
	7, 8, 8, 9, 11, 11, 6, 2, 6, 9,
	4, 7, 7, 10, 7, 10, 10, 10, 13, 5,
	5, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 2, 4, 3,
	2, 2, 1, 2, 1, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 4, 4, 3, 4, 1, 1, 1, 1,
	5, 4, 5, 3, 3, 2, 2, 6, 3, 3,
	3, 3, 4, 4, 3, 1, 3, 3, 2, 2,
	1, 3, 3, 3, 1, 2, 1, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 1, 1, 1, 2, 1, 2, 2, 2,
	9, 2, 1, 0, 1, 1, 0, 1, 2, 0,
	2, 2, 0, 2, 2, 2, 2, 1, 2, 3,
	3, 4, 4, 4, 4, 3, 3, 1, 1, 1,
	0, 1, 1, 1, 0, 1, 1, 3, 3, 3,
	3, 3, 2, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 3,
	5, 7, 3, 3, 3, 4, 8, 6, 4, 5,
	5, 5, 3, 0, 1, 1, 1, 4, 4, 3,
	4, 4, 3, 4, 4, 1, 4, 4, 5, 3,
	5, 5, 5, 7, 3, 3, 3, 5, 7, 4,
	2, 6, 4, 3, 2, 3, 4, 3, 5, 3,
	6, 5, 6, 3, 5, 6, 3, 5, 3, 5,
	3, 3, 4, 4, 5, 0, 1, 1, 1, 1,
	3, 2, 3, 4, 3, 4, 3, 5, 3, 4,
	4, 3, 4, 5, 3, 4, 3, 4, 4, 5,
	3, 3, 1, 1, 0, 2, 3, 5, 4, 6,
	4, 6, 4, 1, 0, 3, 4, 4, 5, 7,
	5, 3, 3, 3, 4, 4, 5, 2, 0, 4,
	2, 3, 4, 2, 3, 3, 3, 7, 5, 2,
	0, 3, 3, 4, 3, 3, 3, 5, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 3, 4,
	5, 4, 4, 2, 3, 2, 3, 6, 6, 7,
	9, 7, 9, 4, 3, 4, 4, 5, 1, 1,
	10, 10, 3, 5, 5, 5, 3, 5, 6, 4,
	4, 5, 5, 2, 6, 3, 2, 5, 4, 2,
	0, 1, 1, 1, 1, 2, 3, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 7, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 3, 3,
	6, 5, 8, 3, 6, 6, 3, 12, 15, 1,
	0, 1, 2, 3, 0, 2, 0, 4, 0, 4,
	5, 4, 1, 1, 1, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 0, 1, 0, 1,
	1, 0, 1, 4, 1, 0, 3, 7, 7, 1,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 2, 2,
	3, 6, 4, 2, 3, 5, 5, 5, 2, 5,
	5, 2, 2, 2, 0, 1, 1, 3, 4, 10,
	11, 9, 5, 3, 1, 5, 9, 7, 11, 3,
	3, 0, 2, 4, 3, 3, 1, 6, 1, 3,
	1, 2, 0, 1, 2, 3, 0, 1, 3, 3,
	2, 2, 1, 1, 1, 4, 0, 3, 0, 4,
	0, 3, 0, 2, 2, 2, 0, 1, 1, 2,
	2, 0, 3, 3, 2, 1, 1, 2, 2, 5,
	8, 4, 1, 0, 1, 2, 2, 1, 2, 3,
	3, 2, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 2, 3, 1, 4, 2, 3, 2, 2, 4,
	7, 3, 4, 6, 5, 7, 5, 5, 3, 3,
	0, 2, 2, 2, 2, 1, 1, 1, 8, 10,
	11, 8, 11, 5, 4, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 3, 0,
	1, 8, 11, 3, 6, 6, 5, 3, 4, 1,
	0, 1, 3, 16, 19, 15, 18, 4, 2, 0,
	1, 0, 1, 0, 1, 3, 2, 4, 2, 3,
	1, 0, 2, 0, 1, 1, 0, 9, 6, 6,
	8, 6, 8, 5, 7, 2, 6, 7, 4, 4,
	5, 2, 4, 6, 6, 8, 6, 7, 8, 9,
	6, 7, 8, 9, 6, 8, 6, 8, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 6, 8, 8,
	4, 7, 3, 0, 7, 10, 1, 1, 1, 1,
	2, 2, 3, 0, 3, 0, 3, 0, 1, 0,
	2, 0, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 3, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 2, 1,
	2, 3, 2, 2, 2, 1, 0, 2, 1, 1,
	0, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	2, 3, 2, 2, 1, 2, 14, 16, 3, 1,
	0, 4, 1, 0, 2, 2, 3, 0, 1, 1,
	4, 4, 5, 1, 0, 3, 0, 3, 0, 3,
	0, 3, 0, 4, 0, 3, 0, 1, 0, 6,
	7, 3, 6, 3, 1, 3, 1, 1, 4, 2,
	1, 3, 1, 3, 4, 8, 11, 7, 10, 2,
	2, 0, 10, 3, 2, 0, 1, 3, 1, 1,
	3, 3, 5, 6, 4, 5, 4, 1, 1, 3,
	3, 1, 2, 4, 4, 2, 3, 5, 5, 1,
	3, 1, 0, 1, 2, 3, 2, 4, 2, 3,
	0, 2, 0, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 8, 8, 8, 2, 4,
	4, 4, 2, 2, 2, 2, 3, 1, 3, 1,
	2, 6, 7, 1, 0, 1, 0, 1, 0, 1,
	1, 0, 1, 5, 1, 0, 1, 0, 1, 0,
	3, 3, 5, 1, 3, 3, 4, 5, 2, 2,
	0, 2, 2, 1, 1, 1, 0, 1, 0, 2,
	2, 5, 4, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 3, 1, 3, 3, 3,
	2, 0, 4, 2, 5, 3, 2, 0, 1, 3,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 0, 3, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 5, 1, 0, 2, 2, 2, 1, 1, 0,
	1, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 4, 1, 0,
	1, 0, 2, 1, 0, 2, 5, 7, 2, 1,
	2, 4, 3, 5, 0, 1, 3, 5, 1, 2,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 6, 6, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 5, 6, 6, 7, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 2, 1, 5, 5, 6, 3, 1, 1, 1,
	2, 2, 2, 4, 3, 5, 6, 8, 6, 5,
	4, 3, 2, 2, 4, 1, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 6, 8, 8, 6, 4, 6, 6, 6, 4,
	1, 3, 3, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 1, 1, 3, 1, 3, 3, 1,
	1, 1, 1, 5, 3, 1, 1, 3, 1, 1,
	1, 1, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	7, 1, 7, 5, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 655, -3, -205, -112, -109, -77, -75,
	-116, -117, -98, -118, -111, -140, -145, -126, -127, -128,
	-141, -147, -204, -212, -213, -214, -215, -224, -206, -207,
	-4, -62, -64, -78, -97, -99, -110, -120, -119, -121,
	-129, -137, -132, -115, -69, -142, -146, -158, -208, -209,
	-210, 33, 32, 106, 85, 164, 137, 146, 217, 415,
	467, 479, 432, 151, 455, 437, -152, -153, 499, -63,
	-76, -144, -143, 78, 138, 181, 319, 447, 53, 156,
	-7, -15, -32, -19, 30, 49, -65, -66, -67, -68,
	67, -84, -80, -92, -85, -79, -82, -684, 109, -606,
	-100, -103, -136, -687, 172, 238, -122, -123, -124, 397,
	-130, -131, 458, -133, -134, -135, 461, 173, -71, -70,
	166, -248, -250, -149, -148, -150, -211, -159, -160, -161,
	-162, -163, -165, -166, -168, -195, -169, -170, -171, -172,
	-173, -174, -178, -198, -175, -176, -177, -180, -179, -181,
	-186, -182, -183, -184, -185, -187, -188, -190, -191, -192,
	-193, -194, -196, -197, 505, -189, -199, -167, -200, 573,
	522, 87, 471, 21, -8, -9, -10, -11, -12, -13,
	-14, -18, -17, -61, -5, -6, -81, -83, -86, -87,
	-88, -96, -89, -90, -91, -605, -101, -102, -105, -107,
	-108, -104, -106, 456, 626, -251, -249, 652, 631, 589,
	-164, -22, -27, -23, -24, -26, -28, -25, -29, -30,
	-31, -47, -52, -49, -50, -48, -51, -53, -54, -55,
	-56, -57, -58, -59, -60, -34, -40, -41, -35, -36,
	-37, -38, -39, -42, -43, -44, -45, -46, -20, -21,
	-33, 613, 622, -254, -252, -253, -261, 491, 597, 545,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, -353, 2,
	-329, -335, -336, -337, -328, -298, -573, -578, 4, -570,
	-576, 180, 248, 357, 21, 22, 24, 23, 25, 26,
	27, 28, 30, 31, 41, 43, 44, 45, 47, 48,
	49, 50, 51, 52, 53, 57, 59, 63, 64, 65,
	66, 67, 68, 69, 73, 78, 79, 84, 85, 86,
	87, 88, 89, 90, 91, 97, 94, 95, 96, 98,
	100, 102, 103, 104, 105, 106, 107, 108, 110, 111,
	112, 114, 115, 116, 124, 125, 126, 127, 128, 130,
	137, 131, 138, 141, 135, 140, 136, 142, 144, 145,
	146, 149, 150, 151, 153, 154, 155, 157, 158, 159,
	161, 162, 164, 165, 166, 169, 167, 170, 168, 171,
	172, 173, 174, 175, 178, 186, 187, 188, 193, 195,
	196, 197, 199, 200, 203, 204, 205, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 218, 222, 224, 225,
	226, 227, 228, 229, 230, 236, 237, 238, 240, 241,
	242, 243, 244, 249, 250, 251, 255, 257, 263, 264,
	269, 265, 270, 271, 273, 277, 278, 279, 280, 281,
	282, 284, 286, 285, 290, 288, 292, 293, 296, 297,
	298, 299, 300, 301, 305, 306, 302, 307, 308, 310,
	311, 314, 312, 315, 316, 313, 317, 320, 321, 322,
	323, 324, 325, 326, 327, 328, 329, 330, 331, 318,
	319, 334, 332, 336, 337, 338, 339, 340, 355, 350,
	351, 352, 344, 345, 341, 346, 342, 343, 347, 348,
	354, 349, 359, 360, 361, 362, 365, 234, 256, 367,
	368, 371, 373, 390, 376, 377, 378, 381, 382, 385,
	388, 389, 391, 392, 393, 394, 395, 396, 397, 398,
	399, 400, 402, 403, 405, 406, 407, 409, 410, 411,
	413, 415, 416, 418, 419, 420, 422, 423, 424, 425,
	426, 427, 428, 429, 431, 432, 434, 433, 435, 437,
	439, 440, 441, 447, 448, 455, 449, 451, 452, 453,
	454, 456, 457, 458, 459, 460, 461, 465, 463, 464,
	466, 467, 469, 470, 471, 472, 473, 475, 477, 478,
	482, 483, 484, 502, 503, 525, 479, 480, 481, 485,
	486, 487, 488, 489, 490, 494, 492, 493, 495, 496,
	497, 499, 501, 504, 505, 507, 508, 509, 510, 511,
	512, 513, 516, 518, 519, 520, 521, 522, 523, 544,
	524, 526, 530, 531, 532, 533, 527, 528, 543, 535,
	536, 537, 538, 540, 541, 546, 547, 548, 549, 550,
	551, 553, 554, 556, 564, 577, 565, 566, 567, 568,
	570, 573, 574, 575, 576, 562, 578, 579, 582, 583,
	587, 584, 588, 585, 586, 589, 591, 594, 595, 596,
	602, 601, 603, 604, 605, 607, 608, 609, 614, 615,
	617, 618, 619, 37, 54, 55, 58, 60, 62, 74,
	75, 76, 80, 132, 133, 163, 176, 177, 189, 206,
	207, 219, 221, 231, 232, 233, 254, 258, 259, 261,
	267, 289, 364, 366, 383, 387, 404, 408, 412, 414,
	430, 474, 500, 514, 529, 534, 557, 558, 559, 560,
	569, 571, 597, 598, 599, 606, 616, -353, 2, -329,
	374, -322, 2, -298, -298, 415, 29, 2, 29, 403,
	493, 548, 550, 2, -634, -398, 541, 2, 29, -301,
	-298, 109, 217, 491, -322, 2, -634, 217, -398, 26,
	541, 2, -298, 2, 388, 23, 28, 71, 82, 104,
	149, 174, 198, 203, -686, 390, 423, 477, 495, 543,
	554, 570, 2, 601, 311, 492, 545, 248, 127, 575,
	485, -645, 482, 483, 388, 421, 469, 220, 590, -302,
	2, 479, -298, 311, 2, 655, 100, 79, 474, 496,
	-155, 2, 301, 565, -156, -157, -154, 557, -557, 485,
	469, 334, -298, 655, 655, 655, 29, -311, 2, -298,
	-311, 2, -216, 2, -311, -689, -223, -222, -221, 22,
	448, 188, 282, 201, 239, 339, 418, 199, 51, -216,
	2, 545, 248, 485, 127, 541, -700, 2, 565, -700,
	2, 655, 655, 2, 545, 394, 601, 492, 127, 427,
	248, 575, 203, 149, 28, 73, 49, 551, 630, 485,
	-645, 627, 628, 311, 134, -632, 2, -625, 4, -576,
	-570, -347, 492, -346, 545, 551, 127, -337, -328, 644,
	-336, 655, 655, 655, 655, 2, 270, 271, 425, 424,
	496, 497, 29, 655, 655, 655, 655, 482, 2, 174,
	-659, 23, 28, 71, 99, 104, 134, 198, 390, 423,
	495, 543, 547, 554, 570, -644, 524, 73, 485, -643,
	-645, 379, 311, 575, 149, -448, 127, 301, 215, 583,
	550, 548, 581, 141, 257, 586, 585, 655, 655, -113,
	2, 652, 33, 32, -112, -116, 151, 499, -241, 545,
	262, 2, -298, 655, 655, 655, 2, 270, 271, 482,
	483, 29, 655, 655, 201, -625, 541, 2, 655, 655,
	655, 2, 29, 270, 271, 482, 483, 262, 2, 73,
	487, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 2, -202,
	496, 524, 227, 50, 49, 79, 29, 422, 84, 395,
	128, 134, 158, 576, 218, 248, 249, 278, 99, 100,
	-450, 47, 271, 73, 270, 483, -650, 482, -503, 546,
	486, 493, 540, 91, 282, 479, 565, 567, 109, 591,
	470, 619, 427, 428, 538, 441, 535, 302, 167, 202,
	4, 127, 334, 469, 498, 286, 285, 577, 557, 301,
	478, 398, 89, 655, -698, 2, 545, 565, 2, -700,
	2, -700, 2, -701, 565, 616, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, -249, -251, -250, 655,
	655, 655, 655, 655, 655, 655, -202, 496, 2, 79,
	29, 29, -391, -393, 580, 260, 160, 380, -248, -250,
	2, -605, 577, 496, -555, 2, -477, -579, -479, 642,
	643, 635, 542, 72, -357, 356, 620, -491, 134, 581,
	374, -578, -480, -493, 163, 390, 474, -412, 8, 9,
	5, 6, 7, -307, -481, -487, 572, 179, 363, -350,
	656, 10, 652, -602, -250, -492, 38, 221, 70, -559,
	-349, -308, -531, 261, -348, -328, -599, -600, 4, -570,
	-571, -560, -534, -542, -538, -539, -545, -298, -573, 82,
	118, 119, 117, 122, 121, 304, 303, 123, 120, 498,
	590, 71, 37, 231, 232, 267, 364, 233, 80, -601,
	150, -572, 258, 259, 514, 55, 430, 189, 133, 132,
	366, 60, 58, 598, -543, 129, 557, 558, 559, 560,
	206, 207, 62, 176, 177, 387, 412, 534, 569, 571,
	219, 289, 46, 113, 202, 253, 235, 266, 268, 272,
	291, 294, 335, 353, 358, 384, 386, 468, 506, -704,
	599, 529, 74, 75, 194, -607, 433, -608, -322, -607,
	655, 655, 657, 655, -382, -384, -386, 2, 29, 147,
	652, 2, -508, 2, -509, -513, -250, 283, -512, 652,
	-510, 650, -329, 375, -603, 475, -599, -600, -307, -328,
	-349, 4, -570, -572, 654, -387, 652, 127, 485, 545,
	83, 248, 99, 174, 203, -443, 652, -298, 29, 374,
	561, 657, -634, -398, -383, 420, -489, 652, 374, 377,
	201, 377, -634, 64, 315, 2, 2, 2, 2, 2,
	231, -298, 545, 126, 2, 281, 2, 2, 2, 2,
	2, 2, 2, -405, 231, 2, -329, 601, -405, 231,
	2, -405, 231, 2, -449, 2, 93, -312, 231, 2,
	-298, -338, 231, 2, -333, -335, -344, 231, 2, -341,
	-298, -565, 231, 2, -563, 4, -570, 123, 498, -477,
	2, -142, 2, 64, -298, 601, 2, 502, 2, 652,
	-155, 2, 76, 565, 46, 496, -156, 2, -463, 2,
	-464, -294, -295, -296, -520, -297, 269, 419, 429, 623,
	139, 356, 619, -679, 201, 634, 561, -555, -555, -555,
	-413, 654, -218, 57, -311, -690, -689, -690, -553, 29,
	-548, 8, -549, 642, 643, -553, -553, -690, -690, 2,
	2, 2, 2, 2, -462, -463, 2, -513, 231, -329,
	2, -326, -558, 4, -570, -576, -571, -577, -573, 29,
	32, 33, 34, 36, 38, 39, 40, 42, 61, 70,
	71, 77, 81, 83, 93, 99, 109, 117, 118, 120,
	119, 121, 122, 123, 134, 139, 143, 147, 148, 152,
	156, 160, 179, 181, 194, 198, 201, 217, 220, 223,
	239, 252, 260, 262, 283, 287, 295, 303, 304, 356,
	363, 369, 374, 375, 379, 380, 401, 417, 436, 462,
	491, 498, 517, 539, 545, 555, 561, 563, 572, 580,
	581, 590, 592, 600, 610, 611, 612, 613, -578, 82,
	2, -513, 231, 2, -332, 231, -513, -335, 2, -312,
	2, -477, -638, 553, 170, 449, 2, -354, 231, -329,
	-331, -335, -333, 2, 2, 2, 2, -477, 2, -567,
	2, -562, 10, -561, 5, 4, -570, -576, -571, -480,
	2, -491, 29, -341, 2, -563, 231, 2, 29, 29,
	601, 420, 262, 561, -404, -346, -347, 657, -404, -554,
	4, 8, -397, -298, 654, -477, 2, -142, -125, 2,
	194, -477, 231, 2, -142, 231, 2, -477, 231, 2,
	-142, 231, 2, -298, 2, -646, 2, -567, 231, 231,
	-298, 2, 203, -685, 477, 574, 315, 2, 2, 570,
	2, 104, 545, 126, 2, 2, 2, 2, 2, 2,
	2, 545, -317, 2, -298, 194, -522, 262, -341, 231,
	-342, 2, 492, -699, 433, -563, 231, 2, 453, 601,
	-333, 231, 2, -333, 248, 264, -312, 231, 2, 550,
	548, 550, 548, 201, 2, 262, 2, 262, 2, -514,
	2, -515, -509, -516, 650, 375, -525, 2, -524, -561,
	597, -113, 652, -113, 652, 496, 652, -567, -329, -329,
	-477, 2, -142, -125, 2, -477, 2, -142, 2, -298,
	2, -139, -567, -138, 652, 201, 591, -298, 2, -477,
	2, -142, -125, 2, -477, 2, -142, 2, -241, 194,
	2, 127, 545, -202, 2, 194, 592, 2, 8, 2,
	239, -237, -567, 486, 186, 428, 2, 502, 2, 503,
	79, -450, 619, 79, 201, 2, 201, 2, -433, 2,
	613, 420, 201, 2, 2, -631, 2, 374, 201, 2,
	201, 2, 201, 2, 201, 2, 201, 2, -201, 497,
	566, 544, 424, 271, 2, -142, 610, -125, 271, 270,
	-477, 610, 2, -651, 194, 483, -477, 2, 564, 280,
	168, 201, -433, 2, 201, 2, 201, 2, 5, 2,
	43, 425, 525, 2, 269, 419, 525, 2, 523, 2,
	-329, 545, 601, 492, 127, 29, 2, 482, 2, 2,
	94, 95, 201, 2, 201, 2, 216, 201, 2, 441,
	201, 545, -414, 654, -414, 619, 2, -425, -513, -462,
	561, -391, -393, -202, 502, 2, -255, -423, -257, 194,
	-453, -454, -258, 295, 181, 369, -259, -432, 29, 147,
	-432, -432, 64, 653, 653, -679, 577, 11, 12, 81,
	43, 642, 643, 644, 645, 192, 646, 647, 640, 641,
	639, 632, 633, 637, 275, 276, 101, 636, 634, 92,
	309, 476, 182, 183, 184, 185, 450, 246, 35, 247,
	14, 15, 16, -357, 34, 379, 294, 620, 235, 506,
	635, 17, 18, 19, 266, 268, 358, 54, 239, -306,
	390, -356, 542, 72, -477, -477, -477, -477, -477, -477,
	-477, -477, 386, 652, -419, -472, 650, -250, 652, 652,
	652, 652, -554, -250, -477, -491, 653, -410, 652, -250,
	-491, -486, 652, 474, 650, 652, -494, -477, 5, 5,
	5, 652, 654, -610, 614, 194, 652, 652, 652, 652,
	652, 652, 652, 652, 652, 652, 652, 652, 652, 652,
	652, 652, 414, -536, 652, -535, 652, -535, -535, 602,
	-533, 652, 622, 615, 652, -533, 652, 652, 652, 652,
	652, 652, 652, 652, 652, 652, 652, 652, 652, 602,
	551, 657, -607, -387, 652, -415, -518, -477, 644, -415,
	-415, 374, -407, -477, 113, -436, 272, 335, 202, 291,
	468, 253, -474, 656, -474, -502, 622, -250, -510, -328,
	-250, -512, 652, -508, -502, -114, -554, -97, -110, -119,
	-142, -158, -209, -210, 644, -329, 652, 201, 652, 654,
	-558, 201, -397, -312, -341, -329, -348, -349, -354, -323,
	-298, 2, 2, 146, -407, -625, 575, 485, 29, -565,
	-301, 561, 39, -488, -528, -529, -581, 656, -580, -531,
	-541, -537, -540, 404, 408, -560, 58, 598, -543, 261,
	4, -570, -572, 258, 259, 514, 55, 430, 189, 133,
	132, 366, 60, 557, 558, 559, 560, 206, 207, 62,
	599, 529, 74, 75, -625, 575, 485, 29, 492, 194,
	-565, 194, 201, -565, 2, 2, 163, 2, 2, 2,
	-298, -276, 657, 69, 459, 163, -405, 231, -276, 163,
	-276, 163, -355, 231, -354, -276, 163, -276, 657, 163,
	-276, 657, 163, 654, 657, 163, -565, 2, -449, -557,
	-407, 39, -463, 2, 134, 4, 5, -702, 657, 293,
	-360, 308, 355, 226, 375, 617, 367, 139, -566, 5,
	4, -487, -499, 134, 301, 261, -548, -550, 9, -551,
	642, 643, -556, -555, 116, 654, -558, -219, 256, 41,
	-311, -311, -690, -690, 8, 8, -690, -690, -311, -311,
	-273, 451, 499, 389, -272, 25, 30, 151, 250, 340,
	595, 169, -372, 251, 456, -369, 394, 163, 518, 584,
	-638, -641, 481, 553, 170, 449, 96, 367, 499, 389,
	451, 163, -429, -431, 39, 125, 340, 388, 65, 242,
	313, 314, 522, 457, 606, 163, 499, 389, 451, 389,
	-16, -287, 25, 151, -289, -284, 499, 30, -641, 105,
	451, 631, 626, 456, 400, 537, 417, -641, -638, 288,
	-640, 609, 354, -275, 518, 584, -638, -641, 481, 451,
	-274, -374, -369, 394, 163, 656, 25, 151, 451, 499,
	389, -682, -683, 30, -268, -267, 25, 151, 499, 587,
	-271, 239, -270, 25, -151, -131, -150, 456, 499, -151,
	2, 451, 389, -635, -319, -604, 239, 613, 163, -319,
	-319, -513, 231, -655, 194, 2, -648, -138, 284, 5,
	10, -567, -138, 657, -404, 657, -558, 644, 483, 482,
	163, 163, 163, 163, 271, 194, 356, 356, 613, -674,
	-335, -686, 2, 2, 2, 2, 2, 2, 2, -329,
	231, -389, 374, -628, -629, -688, 545, -228, 613, -567,
	356, 46, -332, 231, 2, -335, 601, -635, 356, -643,
	-334, 231, -329, 39, 652, 356, 2, -449, 2, 248,
	-604, 356, -514, -351, -329, -509, -351, 499, -322, 39,
	-474, -329, 653, 657, -525, -525, -567, -228, 201, 652,
	-241, 613, 613, 271, -521, 657, -520, 239, -568, -567,
	-139, -567, 454, 201, 271, -567, -628, -312, 2, -329,
	2, 545, 273, -138, 201, 239, -228, -567, -567, -567,
	-557, 29, 503, 2, -201, 497, 566, 95, 503, 2,
	-329, 545, 127, 248, 85, -655, 194, 2, -298, -633,
	194, -626, 469, 485, 575, -625, -329, 127, -329, 127,
	-329, 127, -329, -329, 2, 2, 2, 2, 2, 90,
	2, -142, -477, 2, 90, 2, 49, 519, -651, 194,
	2, 564, 2, 564, 2, -298, -298, -298, 369, 524,
	293, 613, -329, -329, -329, -330, -335, 486, 546, 576,
	483, -477, 2, -691, 2, 201, 194, 2, 545, 248,
	545, 248, 127, 201, 79, 127, 29, 201, 545, 480,
	654, 4, -276, 657, -302, -255, -423, -557, -424, -423,
	-256, -255, -258, 194, 429, 585, 340, 504, 277, -454,
	-453, 29, -477, -458, 188, 339, -477, -456, -479, 642,
	643, -549, -551, -406, 367, -249, -249, -249, -394, -504,
	-477, 417, 248, -556, -679, -530, -528, -528, -327, -558,
	557, -477, -477, -477, -477, -477, -477, -477, -477, -477,
	-477, -477, -477, -477, -477, -477, -477, -477, -477, -477,
	-477, -477, -477, -477, -477, -477, -477, -477, -477, -477,
	-477, -477, -477, -477, -477, -477, -477, 294, 235, 506,
	54, 239, -477, 561, -477, -477, -477, -477, 332, 356,
	363, 572, 179, 582, 147, 367, -705, 539, 42, -484,
	-250, -411, 652, -498, 36, 517, 29, -491, 652, 2,
	-472, -477, -473, -358, -356, -298, 642, 643, 644, 645,
	646, 647, 632, 633, 634, 14, 15, 16, 637, 641,
	639, 640, 192, 101, 636, 309, 476, 92, 182, 183,
	184, 185, 275, 276, 17, 18, 19, 35, 635, -408,
	-407, -407, 653, 600, 29, 147, 644, 2, 653, 657,
	39, 653, -477, -408, -490, -486, -407, -497, -496, 610,
	-444, -445, 618, 318, 130, 229, 316, -446, 489, -552,
	8, -558, 644, -611, 187, 220, 652, 653, 2, 653,
	2, 653, -477, 2, 653, -477, 2, 653, -477, 2,
	653, -477, 2, 653, 2, 653, 2, -477, -477, -477,
	-477, -477, -477, -477, -407, 8, -552, -552, 557, 557,
	-552, -552, -552, -544, 404, 405, 406, 407, 296, 297,
	298, 299, 408, 409, 410, 411, 324, 325, 326, 327,
	320, 321, 322, 323, 328, 329, 330, 331, 211, 212,
	213, 214, 207, 208, 209, 210, -544, -438, 2, -546,
	-407, 4, 618, 318, 130, 229, 316, 489, 5, -438,
	2, -439, 2, -477, -407, -440, -478, -479, 642, 643,
	635, -357, -441, 2, -477, -408, -477, 61, 287, 563,
	-442, -477, 201, -407, -407, 2, -407, 2, -480, 2,
	-608, 39, -407, -400, 657, 201, 39, -575, 4, -574,
	44, 66, 107, 136, 175, 237, 255, 265, 290, 391,
	463, 464, 490, 521, 536, 568, 608, 500, -400, -400,
	652, 653, 657, -437, 224, 312, 307, 264, -437, -508,
	-436, 272, -434, 384, -434, -434, -502, -313, 650, 659,
	-558, -502, -501, -500, 39, -322, 381, -502, -502, 654,
	653, -501, 651, -623, 652, 655, 655, 655, 655, 655,
	-329, 652, -407, -558, 654, 526, 2, 653, 266, 266,
	266, 266, 266, 374, 475, 653, 561, -627, -338, -344,
	493, 546, 613, -565, -112, 376, 653, 657, -399, 38,
	650, 654, -552, 2, 2, -547, 602, 652, 652, -445,
	652, 201, -627, -344, 546, 493, 2, -634, -398, -565,
	561, -298, 2, -329, -405, -276, 163, -405, -405, -276,
	657, 163, -312, -333, -338, -341, -344, -298, -563, -565,
	-276, -334, -679, 653, 565, -464, -359, 429, 516, 452,
	494, 541, 9, 9, 657, -558, -220, 484, 340, -311,
	-311, -311, -311, 657, -680, 99, 561, 83, 652, 485,
	-291, 302, 561, -468, 231, 83, -582, 99, -315, -583,
	-298, 77, 581, 417, 198, 161, -680, 99, 417, -680,
	99, 2, 250, 99, 499, 524, 652, 29, 64, -513,
	43, 43, 29, -639, -640, 288, 201, 619, 545, 248,
	485, 561, 561, -513, -431, -528, 125, 313, 314, 64,
	-553, -553, 64, -553, -553, -553, 613, -553, 613, -332,
	-513, 485, 561, 561, 561, 439, 535, 439, 535, -284,
	-156, 535, 561, 561, -156, 29, -202, 460, 134, -703,
	634, 439, 288, -640, 561, 201, 657, 43, 43, 29,
	-639, 201, 561, -354, -313, 596, 45, 596, 45, 596,
	561, 45, 485, 561, 657, 45, -267, -628, -628, -227,
	-226, -298, 5, -397, -270, -567, -269, 338, 79, 561,
	561, -16, 499, -636, -303, 112, 346, 306, 347, 103,
	343, 102, 342, 110, 344, 111, 345, 603, 359, 604,
	360, 68, 341, 317, 348, 520, 349, 605, 361, -304,
	-305, 154, 396, 594, 127, -563, -16, -16, 499, 389,
	451, 163, -656, 239, 29, -645, 239, -521, 239, -521,
	-346, -298, 654, -142, -477, -477, -142, -477, -142, 49,
	163, 163, 2, 652, 281, 652, -363, 356, 201, -397,
	-522, 657, -329, 39, -227, 378, 163, -563, -430, -429,
	356, -334, 231, 2, 163, -699, -387, 356, 157, 652,
	427, 2, 163, -314, 231, -299, -298, -449, -278, 549,
	163, -427, 592, -459, -142, 652, 134, 39, -459, -416,
	-417, -519, -418, -315, 652, -322, -474, -113, -524, 653,
	653, 653, -241, -388, -316, -315, 126, 431, 431, -234,
	613, -138, -139, 653, 657, -521, 239, 527, -139, -567,
	-228, -228, -521, -521, -329, 194, -567, -138, -228, -228,
	-228, 2, 2, 2, 2, -433, -329, -312, -354, -329,
	-340, 239, 29, 654, -565, -565, -344, -345, -343, -298,
	-338, -433, -312, -433, -312, -433, -312, -433, -433, -142,
	-477, 524, 2, 496, 194, 194, 654, -433, 8, -390,
	462, 5, 2, 427, 127, 545, 394, 248, -329, -354,
	-329, -354, -312, 127, -312, 128, 127, -329, 4, -513,
	-424, -256, 375, 277, 504, -456, -457, -479, 474, 475,
	-457, 474, 475, 8, 9, 8, 9, -260, 508, 362,
	-405, 657, -265, 40, 143, 277, -329, -556, 619, 159,
	-477, -477, 561, -705, 539, -484, 159, -477, 332, 363,
	572, 179, 582, 147, 367, 201, 652, -478, -478, 653,
	-409, -477, -477, 651, 661, 653, 654, 653, -393, 657,
	-391, -477, -407, -407, 653, 654, -407, -397, 651, 651,
	657, 653, -495, -496, 152, -477, 561, 561, 561, 561,
	652, 653, 654, -616, 385, 652, 652, -477, 653, 653,
	653, 653, 39, 657, 657, 657, 653, 657, 657, 657,
	653, 653, 653, 657, 653, 619, 619, 653, 653, 653,
	653, 657, 653, 657, 653, 201, 653, 653, -447, 401,
	653, 11, 12, 642, 643, 644, 645, 192, 646, 647,
	640, 641, 639, 632, 633, 634, 92, 309, 476, 14,
	15, 16, -357, 266, 239, -478, -478, -478, -478, 653,
	-482, -483, 201, 194, 39, -442, -442, -442, 653, 201,
	-407, 653, 653, 652, -609, 311, 356, 653, -471, -470,
	611, -518, -401, 2, -508, -324, -558, -471, -471, -407,
	-477, 272, 272, -435, 592, 374, -437, -508, -501, -554,
	-476, -475, 196, 40, 143, 350, 351, 352, 234, 197,
	-501, -322, -387, -501, -501, -558, -502, -502, -500, 653,
	-624, -554, 653, -402, -511, -603, -393, 654, -558, -238,
	-604, -203, 5, 363, -203, -203, -203, -203, -329, -565,
	561, 561, 239, 239, 26, -654, 613, 402, -528, 650,
	651, 8, -558, 652, -552, -552, -552, -565, 201, 201,
	239, 239, 374, 201, -563, 2, -276, -405, -276, -276,
	-354, -355, -276, -276, -276, -428, 613, -555, -463, 579,
	88, 429, 557, -555, 124, 484, -272, 451, 499, -315,
	-315, -329, -245, -244, -242, -298, 5, -339, -298, 215,
	440, -563, 356, -468, 231, -277, 356, 231, -323, -528,
	652, -451, 615, 277, 277, 592, -315, -323, 277, 231,
	-315, 231, -323, 2, -323, -637, 429, 368, -477, -243,
	-242, 64, -370, 300, 427, 357, -273, 451, 499, 389,
	-142, -142, -142, 652, -679, 592, 146, -329, -354, -329,
	-339, -563, -334, 499, 389, 451, 353, -348, -553, -553,
	-553, -429, 499, 389, 451, -339, -563, -332, -563, -283,
	231, -298, 439, -283, 231, 439, 439, 485, -312, 439,
	619, 48, -703, 561, 201, -477, -477, -274, -142, -142,
	-142, 652, -313, -275, 451, 5, 231, -315, 5, -315,
	231, 5, -298, -315, -339, -563, -683, 25, 151, -315,
	-228, 657, 634, 634, -271, 634, -339, -563, -303, 396,
	-648, 363, 5, 10, 588, -312, -635, -319, 485, 561,
	561, -513, -652, -653, 217, 467, 485, 470, -565, -138,
	-231, 613, -138, -225, 243, 644, -632, -567, -298, -663,
	-664, -665, -666, -673, -661, -668, 239, 383, 254, 600,
	-559, -528, 4, -570, -298, -361, -364, -362, -315, -469,
	-468, -586, -587, -582, 294, 248, 581, 264, 180, 99,
	-246, -247, 615, 613, 163, -352, -329, 650, -228, -629,
	-523, 180, 491, 652, -341, -342, 163, -387, 356, -563,
	601, 39, 163, 652, 2, 2, -333, 374, 356, -314,
	231, -279, 153, -703, -312, -471, -401, -426, -461, 462,
	374, -388, 597, -322, -426, -403, 657, 201, 634, 654,
	-388, -517, 644, -113, -113, -228, 652, -567, 653, 657,
	654, 652, 634, 634, -236, 378, -235, 155, 279, 263,
	510, 511, 512, 513, 145, 509, 131, 337, 244, 551,
	-521, -567, -234, -139, 201, -521, 239, 201, -72, 613,
	545, 239, -228, 656, 485, 470, -298, 654, -433, -433,
	-433, 496, 496, -298, 194, -397, -325, -558, -312, -329,
	-326, -354, 194, 194, -312, -312, 585, -457, 375, 305,
	-504, -266, 621, -329, 656, -477, -477, 159, 159, -477,
	-478, -478, -477, 159, 201, 652, -477, -488, 34, 34,
	653, 657, -473, -477, -356, 653, 600, -393, -393, 653,
	644, -558, 656, 653, -486, 156, -477, 555, 318, 229,
	316, -446, 316, -446, -446, -552, 5, -558, 644, -617,
	-318, 652, -298, 611, -392, 380, 653, -530, -528, -477,
	-477, -477, -477, -477, -552, -533, -533, -548, -548, -477,
	-482, -477, -530, -528, -478, -478, -478, -478, -478, -478,
	-478, -478, -478, -478, -478, -478, -478, -478, -478, -478,
	-478, -478, -478, -478, 147, 356, 367, -478, -483, -482,
	-477, -477, -528, 653, 653, 653, -407, -112, 652, 311,
	-420, 220, -477, -521, 657, -420, -420, 653, -508, -508,
	652, -477, 272, 651, 657, 660, 634, 634, -387, 654,
	-500, -501, 651, 653, 657, 653, 657, -460, 39, 653,
	-558, -471, -240, -239, 144, 57, 114, 142, 363, 371,
	200, 225, 426, 159, 195, 153, 266, -654, -565, -565,
	485, 485, 377, 217, 5, 8, 650, 651, 654, -552,
	653, 653, 653, -565, -565, 485, 485, -625, 575, 485,
	29, -565, -276, -276, 126, 340, -477, -217, 613, 615,
	561, 561, 653, 657, 634, 64, 239, 163, 356, 594,
	356, -583, 161, -588, -477, 652, 248, 652, 652, 2,
	-262, -263, -264, 151, 499, 25, -681, 2, 592, 163,
	-276, 163, -276, 617, 653, 657, -370, 652, 652, 561,
	485, -291, 561, 613, -407, -477, -229, 134, -557, -641,
	656, -641, 656, 485, 561, 561, 485, 561, 561, 356,
	-298, 163, -298, -298, 613, 178, 178, 619, -283, -477,
	-477, 194, 561, 613, -407, 561, -532, 52, 27, 356,
	-333, -276, 163, 561, 561, 575, 499, -226, -567, -567,
	-138, -648, -567, 363, -16, -339, -563, -334, 499, 389,
	451, -634, -634, 217, -344, -656, -521, -233, 378, -232,
	155, 466, 145, 279, 244, -521, -231, 201, 262, 613,
	653, 657, 134, 634, -661, -668, -673, -668, 383, 2,
	653, 653, 657, 657, -589, -277, -329, -314, 248, 248,
	-321, -299, 39, 371, 371, 652, -329, -93, 613, -520,
	-554, -320, -298, -415, -227, 46, -332, 39, 163, -635,
	-334, -142, -334, -526, -527, 5, 39, -329, 163, 374,
	356, -280, 286, -703, -562, -604, -393, -426, -415, 357,
	97, 653, -471, -417, -401, -477, 2, 653, -567, -228,
	-241, -316, 2, -568, -567, -567, 657, 652, 634, 634,
	634, 634, 634, 634, 634, -234, -521, -138, -234, -139,
	-142, 378, -329, -138, 644, -339, -340, 644, -433, 5,
	-376, -375, 394, 367, -376, 474, 474, 375, 188, 282,
	-265, -313, -477, -477, 159, 34, 34, -477, -477, -488,
	653, -477, -477, -407, 651, 5, -477, 653, 653, 8,
	-477, 653, 654, -618, -298, -477, 653, 64, 653, 653,
	657, 657, 653, 653, 653, 653, 653, 653, 653, -483,
	201, 147, 367, 652, 653, 653, -112, -485, 223, 64,
	-508, -485, -485, -435, -397, -508, -475, -313, 650, -313,
	650, -558, -554, -511, 652, 654, -239, 634, -567, -567,
	2, 2, 5, 5, 426, 356, 363, 5, -203, -654,
	-654, 613, -344, -344, 377, 651, 2, 650, -558, 653,
	-344, -344, 201, -627, -344, 546, 126, 194, 228, 228,
	-315, -315, -244, -555, 545, 474, -283, 417, -468, 163,
	163, -590, 99, -592, 81, 180, 109, 356, 363, 581,
	417, 77, 134, 374, 436, -693, -694, -695, 39, 624,
	625, 653, -395, -505, -603, 652, -298, -395, -397, 356,
	532, 134, 374, 356, 134, 374, 607, 126, 2, 575,
	84, -315, -323, -242, -397, -397, -329, -339, -563, 171,
	653, 657, 634, 2, 644, 644, -339, -563, -334, -339,
	-563, -332, 163, 597, -283, 597, 392, 178, 561, -142,
	-477, 171, 653, -313, 5, 5, 163, -310, 81, -315,
	5, -315, -333, 126, 613, 485, 561, 561, 374, 374,
	377, -652, -653, -231, 657, 652, 634, 634, 634, -231,
	-568, -138, 2, 464, -665, -477, -477, -668, -668, -377,
	250, -315, -587, -584, -585, 417, -469, -591, -593, 180,
	417, -365, 652, -314, -299, 652, -142, 2, -245, 652,
	-363, 378, 651, 201, 653, -563, -430, -142, -334, -387,
	-385, 613, -387, 653, 657, 157, -452, 592, -313, -329,
	163, -281, 285, -703, -562, -278, -455, -453, 148, 652,
	374, -142, -393, 634, 653, 126, 653, -235, -236, -567,
	-138, -567, -567, -567, -138, -567, -234, -658, 39, -521,
	-73, -74, 248, 99, 399, -228, -326, 545, 248, 652,
	652, -265, -477, -477, -477, 653, -393, -558, 644, -612,
	394, 653, -504, -477, -477, -478, 201, 652, -488, 653,
	-613, 612, -477, -421, -422, -477, 472, 115, 221, -613,
	-613, 653, -554, -554, 2, -567, 2, 2, 363, 2,
	2, 2, 561, 561, 650, 2, 201, 201, -565, 201,
	201, 239, -142, 239, 39, 439, -468, -323, -323, -327,
	-320, 180, 231, 363, 607, -451, 277, 652, -478, 585,
	-329, 652, 2, 230, 230, 31, 64, -696, 139, 252,
	653, 657, -506, -309, -298, -477, -506, 653, 653, 363,
	585, 363, 607, -477, 585, -528, 652, -276, -276, 653,
	653, -477, 561, -557, 106, -555, 2, -641, -283, -397,
	-397, -312, -477, 194, -477, 561, 5, -276, -327, -276,
	-276, -310, 575, 373, -339, -563, -334, -657, 546, 493,
	576, 486, 204, 473, -657, 194, -232, -233, -567, -138,
	-138, -231, -660, 500, -371, -372, 2, -589, 277, -320,
	277, 241, 162, -395, 652, 652, -397, -692, 613, 653,
	-361, -246, -94, -95, 562, -520, -630, -351, -387, 39,
	340, 126, 39, 5, 652, 652, -298, 374, 652, -313,
	-293, 98, -703, -562, -279, -426, 357, -397, 99, -455,
	-484, -228, 652, -228, 653, 551, -234, 657, 29, 652,
	29, 652, -329, -354, -407, -407, 653, -393, 64, 657,
	653, 653, -478, -488, 653, -614, -615, -318, 657, 652,
	652, 501, 651, 651, 2, -565, -565, 2, -565, -565,
	-565, -565, 485, -283, 417, -298, -583, -592, -320, 356,
	-247, 592, 613, -477, -478, -300, 652, -477, 652, 652,
	39, 134, 252, 140, 236, -467, -697, 108, 533, 240,
	-505, -265, 653, -466, 592, 436, -478, -310, -395, 652,
	652, 652, 634, 201, -142, 652, -532, -276, -333, 634,
	561, 2, 2, 201, -634, 653, -647, 434, -667, -668,
	-246, 652, -247, -366, 86, 100, 135, 230, 205, 249,
	524, 530, 29, -366, 653, -395, -395, 653, -367, 374,
	126, 340, 653, 39, -95, 9, -471, 39, -142, 126,
	-142, -526, -395, -329, -395, 374, -285, -284, 295, -562,
	-280, 653, -323, -426, -568, -554, 4, -74, -397, -397,
	653, 653, -619, 427, 475, 222, -407, -394, 653, 657,
	39, -422, 2, 2, 2, -654, -654, -344, 439, -277,
	163, 224, 653, -594, 310, -298, 653, -430, -430, 39,
	140, 236, -373, -369, 652, -266, -506, -247, 224, -329,
	-642, 592, 653, -379, -378, -375, -381, -380, -375, -407,
	-555, 106, 392, -407, -310, -138, -565, -565, 374, -649,
	202, -648, -669, -670, -671, 39, 281, 568, 612, -672,
	66, 464, 528, 237, 521, 608, 175, 490, 290, 356,
	107, 475, 536, 499, 391, -367, -396, -507, -315, -466,
	653, 653, 87, 126, -377, -142, -142, 2, -385, 653,
	653, -452, 653, -329, -282, -569, 439, 441, -703, -281,
	-471, 148, 653, 653, 653, 653, -620, -621, 54, 578,
	116, -477, -620, -620, -615, -617, 201, 180, -465, 622,
	-595, -598, -597, 629, 507, 202, 393, 653, 532, 606,
	653, 653, -696, -397, -465, -387, -477, -466, 653, 657,
	597, 653, 657, 597, 653, 201, 653, -276, -654, -276,
	-657, -230, 613, 49, -678, -675, 53, 463, -671, -662,
	5, -562, 374, 363, 490, 136, 265, 290, -499, -499,
	-298, -292, -291, 653, 657, -467, -466, -373, 416, 141,
	151, -371, -692, -466, 652, -467, 652, -290, -289, -703,
	-548, -293, 148, 357, 585, -228, -622, 161, -621, 413,
	193, 474, 413, 193, -622, -622, -565, -320, -247, 59,
	-597, 629, -598, 629, 585, 141, -471, 653, -594, -247,
	-378, 239, -380, 201, 392, 201, 482, -648, 31, 44,
	-477, 363, 374, 136, 265, -247, -507, -373, -467, -247,
	475, 475, 2, -246, -367, -467, -395, -373, -395, -286,
	-287, -288, -397, -285, 357, 585, 499, 116, 220, 556,
	340, 34, 634, -596, 340, 459, 69, 499, -596, -595,
	652, 652, -565, 378, -677, 255, 363, -247, -373, -471,
	2, -367, -373, 653, -247, 653, -564, 389, -282, 499,
	-416, 474, 382, -621, -477, 24, 363, 134, -696, -407,
	-407, -276, -227, 652, -676, 156, -3, -675, 255, -471,
	-247, -292, -247, -466, -471, -467, -703, -290, -416, -471,
	653, 653, -227, 658, -471, -471, -467, -373, -563, -286,
	-471, -368, -369, 561, 653, -373, -247, 652, -247, -471,
	-407, -471, 653, -368,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 1647, 1649,
	653, 654, 656, 657, 658, 660, 661, 663, 665, 667,
	668, 669, 671, 672, 674, 675, 676, 677, 678, 680,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 772, 774, 0, 1629,
	1631, 1633, 1635, 0, 0, -2, -2, 0, -2, -2,
	44, 45, 47, 49, 0, -2, 377, 379, 381, 383,
	0, 415, 417, 418, 420, 422, 423, 425, -2, 0,
	586, 587, 589, 591, -2, 0, 1208, 1210, 1212, 0,
	760, 762, 0, 1215, 1217, 1219, 0, 0, 784, 785,
	0, 1747, -2, 776, 778, 780, 782, 861, 863, 865,
	867, 869, 871, 873, 875, 877, 879, 880, 882, 884,
	886, 888, 890, 891, 893, 895, 897, 898, 900, 901,
	903, 905, 907, 909, 911, 913, 915, 917, 919, 921,
	923, 925, 927, 929, -2, 932, 933, 934, 936, -2,
	0, -2, -2, 1643, 51, 53, 55, 57, 59, 61,
	63, 65, 67, 69, 71, 73, 532, 534, 536, 538,
	540, 543, 545, 547, 549, 1805, 593, 595, 597, 599,
	601, 603, 605, 0, 0, -2, 1819, 0, 0, 0,
	1025, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 129, 130, 131, 132, 133, 134, 135, 88, 89,
	90, 92, 93, 94, 95, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 126, 127,
	86, 0, 0, 1778, 1780, 1782, 1784, -2, 0, 0,
	8, 12, 14, 16, 18, 20, 22, 24, 26, 28,
	30, 32, 36, 38, 40, 42, 1648, 1650, 655, 659,
	662, 664, 666, 670, 673, 679, 681, 683, 638, 639,
	642, 2521, 2539, 2540, 2541, 2544, 2545, 2546, 2547, 2548,
	2549, 3073, 3154, 3155, 2572, 2573, 2574, 2575, 2576, 2577,
	2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587,
	2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597,
	2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607,
	2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617,
	2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627,
	2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637,
	2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647,
	2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657,
	2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667,
	2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677,
	2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687,
	2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697,
	2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707,
	2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717,
	2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727,
	2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737,
	2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747,
	2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757,
	2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767,
	2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777,
	2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787,
	2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797,
	2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807,
	2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817,
	2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827,
	2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837,
	2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847,
	2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857,
	2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867,
	2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877,
	2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887,
	2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896, 2897,
	2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907,
	2908, 2909, 2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917,
	2918, 2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927,
	2928, 2929, 2930, 2931, 2932, 2933, 2934, 2935, 2936, 2937,
	2938, 2939, 2940, 2941, 2942, 2943, 2944, 2945, 2946, 2947,
	2948, 2949, 2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957,
	2958, 2959, 2960, 2961, 2962, 2963, 2964, 2965, 2966, 2967,
	2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976, 2977,
	2978, 2979, 2980, 2999, 3000, 3001, 3002, 3003, 3004, 3005,
	3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015,
	3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025,
	3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035,
	3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043, 3044, 3045,
	3046, 3047, 3048, 3049, 3050, 3051, 3052, 640, 641, 1402,
	0, 722, 720, 2504, 723, 2829, 725, 727, 580, 581,
	582, 583, 584, 585, 0, 753, 2932, 737, 1817, 754,
	756, 757, 758, 759, 717, 715, 0, 758, 753, 2577,
	2932, 751, 1627, 1628, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 511, 1465, 1466, 1467, 1612,
	1613, 2884, 1658, 0, 261, 773, -2, -2, 3037, -2,
	815, 816, -2, -2, 830, 834, 825, 3042, 0, 2887,
	2870, -2, 837, 1630, 1632, 1634, 937, 938, 939, 2525,
	943, 941, 953, 954, 957, 0, 974, -2, 0, 2573,
	2852, -2, -2, 975, 976, -2, -2, -2, -2, 955,
	956, 0, 0, 0, 0, 0, 1660, 1652, 1655, 1653,
	1654, 46, 48, 50, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 271, -2, -2,
	-2, -2, 2894, 0, 0, 2938, 2635, 2472, 2541, 2475,
	2470, 378, 380, 382, 384, 385, 0, 0, 0, 0,
	0, 0, 0, 416, 419, 421, 424, -2, 426, 0,
	510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1282,
	1274, 1275, 1532, 0, 0, 0, -2, 588, 590, 643,
	644, 0, 1806, 1806, 651, 652, -2, 0, 0, 0,
	0, 339, 329, 1209, 1211, 1213, 1214, 0, 0, 0,
	0, 0, 761, 763, 0, 0, 2932, 303, 1216, 1218,
	1220, 1221, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 777, 779, 781, 783, 862, 864, 866, 868, 870,
	872, 874, 876, 878, 881, 883, 885, 887, 889, 892,
	894, 896, 899, 902, 904, 906, 908, 910, 912, 914,
	916, 918, 920, 922, 924, 926, 928, 930, 931, 982,
	0, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	-2, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 1094, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, -2, 0, 1186, 0, 0,
	985, 988, 989, 990, 991, 992, 993, 994, 0, 1067,
	1092, 1093, 1103, 935, 0, 1445, 1807, 1660, 1637, 1638,
	1639, 1644, 1646, 1640, 1641, 1642, 52, 54, 56, 58,
	60, 62, 64, 66, 68, 70, 72, 74, 533, 535,
	537, 539, 541, 544, 546, 548, -2, 1776, 1777, 594,
	596, 598, 600, 602, 604, 606, 764, 0, 767, 0,
	987, 766, -2, 0, 1811, 1811, 1811, 0, 0, 1777,
	1775, 0, 0, 0, 770, 771, 841, 842, 2084, 0,
	0, 0, 0, 0, 0, 0, 0, 2344, 2172, 0,
	843, -2, 2205, 2207, 3011, 2801, 3037, 2343, 2209, 2210,
	2211, 2212, 2213, 0, 2215, 2216, 2217, 2218, 2219, 2220,
	0, 2222, 0, 2227, 2228, 2229, 0, 3018, 2447, 2535,
	-2, 0, 0, 3025, 2531, 0, 2310, 2245, -2, -2,
	2558, 2537, 2016, 2017, 2018, 2019, 2020, -2, -2, 3056,
	2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258,
	2259, 0, 2999, 3019, 3020, 3026, 3028, 3021, 3008, 2270,
	2650, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 2043, 2052, -2, -2, -2, -2,
	-2, -2, -2, 3012, 3013, 3031, 3034, 3041, 3046, 3047,
	3017, 3027, 3055, 3057, 3058, 3059, 3060, 3061, 3062, 3063,
	3064, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3072, 2044,
	-2, -2, -2, -2, 0, 1794, 2845, 1797, 1402, 1795,
	1779, 1781, 0, 1783, 0, 0, 0, 1788, 1814, 1812,
	0, 1863, 1792, 1793, 1886, 1886, 1910, 0, 1891, 0,
	1910, 1806, 1937, 0, 1897, 2875, 2246, 2247, 0, 2541,
	2536, -2, -2, 3053, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 718, 0, 724, 726, 0,
	0, 0, 0, 753, 752, 1816, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 514, 515, 516, 517, 518,
	3019, 0, 0, 0, 523, 0, 525, 526, 527, 528,
	529, 530, 531, 231, 3019, 611, 636, 0, 231, 3019,
	614, 231, 3019, 617, 0, 620, 1530, 231, 3019, 623,
	2500, 231, 3019, 626, 628, 2508, 231, 3019, 632, 2515,
	2513, 633, 0, 635, 251, 247, 248, 249, 250, 1623,
	1624, 1625, 1626, 0, 1657, 1531, 775, 0, 801, 0,
	813, 814, 3007, -2, 0, 2897, 818, 819, -2, 821,
	1661, 1665, 1666, 1667, 1668, 1669, 0, 0, 0, 0,
	1674, 0, 0, 0, 0, 808, 809, 828, 829, 835,
	838, 0, 946, 942, 958, 0, 973, 0, 974, 974,
	2489, 2480, 2481, 0, 0, 974, 974, 0, 0, 977,
	978, 979, 980, 981, 1651, -2, 85, 0, 3019, 1937,
	87, 0, 2494, 2567, 2568, 2569, 2570, 2571, 3054, 3074,
	3075, 3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083, 3084,
	3085, 3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093, 3094,
	3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104,
	3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114,
	3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123, 3124,
	3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134,
	3135, 3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144,
	3145, 3146, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3056,
	91, 0, 3019, 96, 0, 3019, 0, -2, 112, 0,
	128, 0, 155, -2, -2, -2, 136, 0, 3019, 0,
	2469, -2, 0, 243, 330, 331, 332, 0, 699, 0,
	708, 342, 343, 2554, 2555, 2563, 2564, 2565, 2566, 0,
	804, 2344, 0, 0, 1246, -2, 0, 1458, 1460, 1460,
	0, -2, 0, 0, 1195, 2466, 2471, 0, 1197, 1198,
	1199, 2490, 1200, 2476, 0, 386, 387, 388, 389, 390,
	0, 391, 3019, 393, 394, 0, 396, 397, 3019, 399,
	400, 0, 402, 0, 404, 0, 283, 287, 3019, 3019,
	428, 431, 0, 512, 0, 509, 0, 493, 494, 0,
	496, 0, 0, 0, 501, 502, 504, 505, 506, 507,
	508, 0, 553, 551, 2505, 571, 356, 0, -2, 3019,
	0, 1243, 0, 0, 1510, -2, 0, 1451, -2, 0,
	1517, 3019, 1513, 0, -2, 0, 1804, 3019, 1678, 1278,
	1279, 1280, 1281, 1949, 577, 0, 1711, 0, 1713, 0,
	1733, 1943, 1886, 0, 0, 1948, 0, -2, 696, 2524,
	-2, 646, 0, 647, 0, -2, 0, 356, 0, 0,
	1224, 1226, 1227, 1229, 1230, 1233, 1234, 1235, 1236, 0,
	1238, 1923, 304, 306, 0, 0, 0, 0, 1223, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 0, 571,
	786, 0, 0, 983, 984, 0, 0, 1002, 1003, 1004,
	0, 0, 356, -2, -2, -2, 1012, 0, 1019, 1022,
	-2, 0, 0, 0, 0, 1029, 0, 1034, 1035, 1036,
	0, -2, 0, 1043, 1045, 1207, 1047, 0, 0, 1049,
	0, 1053, 0, 1056, 0, 1058, 0, 1060, -2, -2,
	-2, 1068, 1069, -2, 1074, -2, 0, 1078, -2, 0,
	1081, 0, 1084, -2, 0, 1094, 1090, 1091, 0, 0,
	0, 0, 1111, 1112, 0, 1121, 0, 1124, 1125, 1126,
	0, 0, 1131, 1132, 0, 1134, 1135, 1136, 1138, 1139,
	1140, 0, 2969, 2894, 2635, 0, 1148, -2, 1154, 1156,
	0, -2, 0, 1172, 0, 1176, 0, 0, 1185, 0,
	0, 0, 986, 0, 995, 996, 997, 231, 1941, 1636,
	0, -2, 0, 765, 0, 769, 1836, 1762, 1759, 0,
	1833, 1834, 1763, 0, 0, 0, 1770, 0, 1809, 1810,
	0, 0, 0, 1749, 1750, 0, 0, 0, 0, 0,
	0, 2349, 2350, 2351, 2352, 2365, 2353, 2354, 2364, 2362,
	2363, 2355, 2356, 2361, 2375, 2376, 2366, 2367, 2357, 2370,
	2368, 2369, 2371, 2372, 2373, 2374, 0, 0, 2380, 0,
	2358, 2359, 2360, 2388, 0, 0, 2389, 0, 2391, 0,
	2381, 2377, 2378, 2379, 0, 2151, 2153, 2455, 0, 0,
	0, 2387, 2382, 2383, 2089, 2090, 2091, 2092, 2093, 2126,
	2130, 2131, 0, 0, 2206, 2452, 2451, 2208, 0, 0,
	2403, 0, 2221, -2, 0, 2344, 2398, 0, 0, 2230,
	2231, 2232, 0, 0, 2403, 0, 0, 2446, 2242, 2243,
	2081, 0, 0, 2312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2030, 2029, 0, 2031, 0, 2032, 2033, 2040,
	2053, 0, 0, 0, 0, 2057, 0, 0, 0, 0,
	0, 0, 0, 2427, -2, 0, 0, 0, 0, 2045,
	0, 0, 1796, 0, 0, 1867, 2456, 2460, 2461, 1867,
	1867, 0, 0, 2404, 1934, 1934, 0, 0, 1929, 1929,
	1929, 1927, 1910, 0, 1910, 1920, 0, 1910, 1910, 0,
	-2, 1891, 0, 0, 1920, 0, 1904, 684, 686, 688,
	690, 691, 692, 694, 1938, 1939, 0, 0, 0, 0,
	2542, 0, 0, 0, 0, 0, 0, 2527, 0, 0,
	2499, 411, 412, 0, 0, 0, 2951, 2887, 0, 729,
	755, 0, 1806, 0, 2406, 1964, 1968, 0, 1970, 1971,
	1972, 1973, 1974, 0, 0, 1965, -2, 2041, 2043, 2064,
	2559, 2560, 2561, 2024, 2025, 2026, 2027, 2028, 2036, 2023,
	2023, 2023, 2034, 2063, 2055, 2063, 2059, 2009, 2010, 2011,
	2046, 2047, 2048, 2049, 0, 2951, 2887, 0, -2, 0,
	740, 0, 0, 0, 1744, 513, 0, 520, 521, 522,
	0, 607, 0, 229, 230, 0, 231, 3019, 612, 0,
	615, 0, 231, 3019, 2464, 621, 0, 624, 0, 0,
	630, 0, 0, 0, 0, 0, 231, 1746, 0, 0,
	0, 0, -2, 823, 831, 832, 833, 0, 1663, 0,
	1670, 852, 853, 854, 1672, 1673, 0, 1675, 826, 855,
	856, 857, 858, 859, 860, 0, 2478, 2479, 2484, 2485,
	0, 0, 824, 845, 827, 0, 839, 949, 944, 945,
	959, 960, 0, 0, 2482, 2483, 0, 0, 965, 966,
	137, 1609, 0, 0, 184, 0, 1609, 1609, 0, 0,
	0, 0, 212, 0, 0, 1312, 0, 0, 0, 0,
	155, 169, 180, 149, 150, 151, 0, 0, 0, 0,
	0, 0, 97, 1424, 0, 1427, 0, 0, 0, 0,
	0, 0, 0, 1440, 1443, 0, 0, 0, 0, 0,
	114, 115, 0, 0, 120, 121, 0, 0, 168, 0,
	0, 0, 0, 0, 0, 1708, 0, 159, 155, 0,
	0, 154, 156, 139, 0, 0, 155, 170, 182, 0,
	218, 220, 1309, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 253, 0, 698, 700, 571, 571, 0, 0,
	706, 0, 709, 0, 802, 806, 807, 0, 0, 803,
	805, 0, 0, 1452, 0, 0, 0, 1803, 0, 0,
	0, 0, 3019, 1607, 0, 1590, 0, 1923, 2729, -2,
	-2, 304, 1923, 0, 1196, 0, 2542, 2474, 0, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	437, 0, 503, 492, 495, 497, 498, 499, 542, 1371,
	3019, 0, 0, 575, 566, 0, 570, 0, 0, 574,
	0, 0, 1423, 3019, 1421, 2509, 0, 1449, 0, 1509,
	1402, 3019, 2507, 0, 0, 0, 1518, 2551, 1527, 1531,
	1696, 0, 579, 0, 1714, 1716, 0, 0, 1944, 0,
	1946, 1886, 1806, 0, 0, 0, 0, 334, 0, 0,
	0, 0, 0, 1237, 313, 0, 1922, 0, 0, 344,
	1923, 304, 2858, 0, 1222, 356, 356, 1923, 788, 1923,
	790, 0, 0, 1005, 0, 0, 1008, 356, 356, 356,
	1017, 1018, 1020, 1021, -2, -2, -2, -2, 1023, 1024,
	1118, 0, 0, 0, 1117, 1605, 0, 1039, 1042, 1046,
	0, 1189, 2870, 2887, 2951, 1205, 1118, 2635, 1118, 2635,
	1118, 2635, 1118, 1118, 1062, 1106, 1114, 1073, 1080, 0,
	1075, 1079, 1082, 1085, 0, 1087, 1095, 0, -2, 0,
	1098, 0, 1100, 0, 1102, 1118, 1119, 1122, 0, 1130,
	1133, 0, 1141, 1142, 1143, 1144, 2522, 1145, 1146, 1147,
	-2, 1151, 1152, 0, 1163, 1168, 1169, 1165, 0, 0,
	0, 0, 0, 0, 1179, 1180, 0, 0, 0, 1188,
	0, 998, 1444, 0, 1645, 1836, 1762, 768, 1753, 1835,
	1754, 1761, 1764, 0, 0, 1766, 0, 1768, 0, 1831,
	1832, 1839, 1840, 0, 1850, 1851, 1843, 0, -2, 0,
	0, 1846, 1847, 1772, 0, 1789, 1790, 1791, 1820, 1823,
	1546, 0, 3154, 811, 0, 2085, 1959, 2086, 2087, 2493,
	0, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102,
	2103, -2, -2, -2, -2, -2, -2, -2, -2, 2112,
	2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122,
	-2, -2, -2, 2127, 2128, 2129, -2, 2390, 2392, 0,
	2455, 0, -2, 0, -2, -2, -2, -2, 2148, 0,
	2150, 2155, 2157, 2159, 0, 0, 0, 0, 2454, 2169,
	2438, 2439, 0, 0, 2346, 2347, 2348, 2154, 0, 2173,
	2453, 2450, 0, 0, 2384, 0, 2349, 2350, 2351, 2352,
	2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362,
	2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372,
	2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 0,
	2402, 1819, 2234, 0, 0, 0, 0, 2241, 2226, 2400,
	0, 2399, 0, 0, 0, 2410, 0, 2445, 2441, 0,
	2491, 2080, 2067, 2068, 2069, 2070, 2071, 2072, 2082, 0,
	2488, 2528, 2534, 2320, 0, 0, 0, 2271, 2272, 2273,
	2274, 2275, 0, 2277, 2278, 0, 2280, 2281, 0, 2283,
	2284, 0, 2286, 2287, 2288, 2289, 2290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1977, 1978, 1979, 1980, 1981, 1982,
	1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992,
	1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
	2003, 2004, 2005, 2006, 2007, 2008, 0, 0, 2292, 0,
	2413, -2, -2, -2, -2, -2, -2, -2, -2, 0,
	2294, 0, 2296, 2404, 2424, 0, 0, 2174, 0, 0,
	0, 0, 0, 2299, 2404, 2432, 0, 0, 0, 0,
	0, 2404, 0, 2437, 0, 2306, 0, 2308, 1026, 1027,
	1798, 0, 0, 1954, 0, 0, 0, 2459, 2462, 2463,
	2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990,
	2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998, 1954, 1954,
	0, 1862, 0, 0, 1930, 1931, 1932, 1933, 0, 0,
	1934, 0, 1924, 1928, 1925, 1926, 1920, 1883, 0, 0,
	2495, 1920, 1889, 1919, 0, 1402, 1909, 1920, 1920, 0,
	-2, 1893, 1910, 0, 0, 685, 687, 689, 693, 695,
	0, 0, 1819, -2, 0, -2, 358, 1401, 0, 0,
	0, 0, 0, 0, 719, 721, 0, 0, 627, 0,
	0, 0, 0, 1593, 713, 0, 716, 0, 1955, 1958,
	0, 0, 1969, 1975, 1976, 0, -2, 0, 0, 2065,
	0, 0, 0, 0, 0, 0, 750, 0, 0, 749,
	0, 0, 524, 637, 231, 609, 0, 231, 231, 618,
	0, 0, 231, 629, 231, 2516, 231, 2514, 252, 634,
	1745, 264, 0, 810, 0, 1662, 1671, 0, 849, 0,
	851, 0, 2486, 2487, 0, 840, 0, 947, 0, 961,
	962, 963, 964, 0, 0, 0, 0, 1608, 0, 0,
	1553, 0, 0, 188, 3019, 0, 233, 0, 0, 1364,
	2501, 0, 1354, 0, 0, 2658, 0, 0, 0, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 146, 0, 152, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 1425, 1426, 1428, 1435, 1437, 0,
	1431, 1432, 0, 1434, 1436, 1438, 0, 1441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 122,
	1461, 0, 0, 0, 1462, 1463, 1464, 1684, 1685, 0,
	1707, 1708, 0, 0, 0, 0, 0, 0, 0, 148,
	0, 0, 0, 0, 2468, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 701, 356, 703, 704,
	352, 349, 351, 705, 710, 0, 711, 0, 0, 0,
	0, 1454, 0, 1505, 1503, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 0, 0, 0, 0, -2, 1456, 1457, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 347,
	2467, 2477, 0, 1231, 1232, 392, 395, 398, 401, 270,
	0, 0, 430, 439, 0, 1284, 1256, 0, 0, 552,
	356, 571, 573, 0, 354, 2804, 2520, 1241, 1419, 1422,
	0, 1402, 3019, 1473, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 0, 3019, 2496, 2550, 2551, 1698, 1708,
	0, 1954, 0, 1731, 1717, 0, 0, 0, 1731, 1735,
	1736, 1738, 1739, 0, 0, 1945, 1951, 645, 697, 1806,
	1806, 356, 0, 0, 1720, 1722, 0, 0, 0, 296,
	0, 307, 1923, 305, 0, 313, 0, 0, 1923, 304,
	0, 565, 787, 792, 1000, 0, 0, 356, 1009, 1010,
	1011, 1064, 1108, 1116, 1167, 1028, 1030, 1031, 1032, 0,
	1037, 0, 0, 0, 1206, 1201, 1202, 1203, 2517, 2513,
	1204, 1048, 1118, 1051, 1118, 1054, 1118, 1057, 1059, 1077,
	1083, 1096, 1089, 1097, 0, 0, 0, 1110, 0, 1128,
	0, 1137, 1150, 0, 0, 0, 0, 0, 0, 0,
	1173, 1174, 1175, 1177, 1182, 1181, 0, 1187, 999, 1942,
	1757, 1758, 1760, 0, 1769, 0, 0, 1845, -2, -2,
	1844, 1848, 1849, -2, -2, -2, -2, 1765, 0, 1774,
	1771, 0, 1830, 1544, 1545, 0, 0, 812, 0, 0,
	-2, -2, 0, 0, 0, 2170, 0, -2, 2149, 2152,
	2156, 2158, 2160, 0, 0, 0, 0, 0, 0, 2393,
	0, 2395, 2171, 2448, 2451, 2386, 0, 2342, 0, 0,
	1818, 1819, 1819, 0, 2240, 0, 2401, 0, 2408, 2409,
	0, 2233, 0, 2442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2244, 0, 0, 0, 0, 2276, 2279,
	2282, 2285, 0, 0, 0, 0, 2265, 0, 0, 0,
	2269, 2035, 2021, 0, 2063, 2061, 2062, 2056, 2063, 2060,
	2013, 0, 2012, 0, 2291, 0, 2293, 2295, 0, 0,
	2297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2177, 2178, 2179, 2199, 2298,
	2430, 2431, 0, 0, 0, 0, 0, 0, 2304, 0,
	2436, 2305, 2307, 1806, 0, 1799, 0, 1864, 1853, 1953,
	0, 2457, 1923, 1866, 1868, 2458, 2498, 1853, 1853, 0,
	2405, 0, 0, 1914, 0, 0, 0, 1916, 1887, 0,
	0, 1881, 0, 1872, 1873, 1874, 1875, 1876, 1877, 1878,
	1888, 1402, 1918, 1890, 1894, 2528, 0, 1920, 0, 1905,
	0, 1907, 1940, 0, 1899, 1902, 0, 0, 2543, 1954,
	0, 405, 413, 414, 406, 407, 408, 409, 0, 1593,
	0, 0, 0, 0, 0, 736, 0, 0, 2407, 0,
	1960, 0, 1966, 0, 0, 0, 0, 738, 0, 0,
	0, 0, 0, 0, 1743, 519, 608, 231, 613, 616,
	2465, 231, 622, 625, 631, 260, 0, 800, -2, 847,
	848, 850, 0, 846, 952, 948, 185, 1609, 0, 0,
	0, 1549, 0, 1267, 0, 1262, 1263, 1551, 2512, 1555,
	1561, 1564, 0, 190, 3019, 202, 0, 3019, 0, 1328,
	0, 0, 0, 0, 0, 0, 1611, 0, 0, 3019,
	231, 3019, 231, 206, 208, 211, 0, 217, 213, 0,
	1264, 0, 1316, 0, 0, 1319, 138, 1609, 0, 0,
	141, 145, 157, 0, 0, 0, 167, 0, 0, 0,
	1566, 1570, 1578, 0, 0, 0, 1429, 1430, 1433, 1439,
	1442, 98, 0, 0, 0, 1574, 1576, 1582, 113, 116,
	3019, 2510, 0, 118, 3019, 0, 0, 0, 1548, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 143, 147,
	158, 0, 1584, 140, 0, 246, 0, 0, 236, 231,
	3019, 0, 238, 0, 239, 240, 254, 0, 0, 0,
	702, 0, 0, 0, 707, 0, 1244, 1245, 1504, 0,
	1447, 1448, 284, 285, 0, 1459, 1453, 0, 0, 0,
	0, 0, 1586, 1587, 0, 0, 0, 1607, 1602, 1923,
	266, 0, 1923, 274, 0, 2473, 0, 288, 427, 0,
	438, 440, 442, 0, 0, 449, 450, 451, 452, 454,
	2562, 455, -2, -2, 0, 0, 0, 1283, 1382, 1285,
	1287, 1288, 1289, 233, 0, 2551, 1354, 2717, 2551, 0,
	0, 1251, 0, 0, 0, 558, 554, 0, 563, 567,
	568, 0, 0, 0, -2, 0, 0, 0, 0, -2,
	0, 0, 0, 1520, 1514, 1515, 0, 0, 0, 0,
	3019, 1700, 1708, 0, 1804, 1819, 578, 1709, 1731, 0,
	0, 0, 1719, 1715, 1712, 1954, 0, 0, 0, 0,
	0, 1947, 1950, 648, 649, 333, 0, 356, 0, 0,
	0, 0, 0, 0, 311, 0, 314, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 0,
	313, 345, 298, 1923, 0, 313, 0, 0, 789, 0,
	0, 0, 1007, 0, 0, 1605, 1041, 0, 1050, 1052,
	1055, 1099, 1101, 1118, 0, 1129, 1157, 2497, 1158, 1306,
	0, 1306, 0, 0, 1178, 1184, 1767, 0, 1842, 1773,
	1824, 1825, 0, 1546, 0, 2088, 2133, 0, 0, -2,
	0, 0, 2137, 0, 0, 0, -2, 0, 0, 0,
	2394, 2396, 0, 2450, 2385, 2235, 0, 0, 0, 2239,
	2223, 2224, 0, 2345, 2411, 2440, 2444, 0, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 0, 2492, 2529, 2533, 2318,
	2319, 2323, 2506, 0, 0, 0, 2248, 0, 0, 0,
	0, 0, 0, 0, 0, 2054, 2058, 0, 0, 2412,
	2423, 2425, 2175, 2176, 2180, 2181, 2182, 2183, 2184, 2185,
	2186, 2187, 2188, 2189, -2, -2, -2, 2193, 2194, 2195,
	-2, -2, -2, 2200, 0, 0, 0, 2426, 2428, 2429,
	2433, 2434, 0, 2301, 2302, 2303, 2435, 0, 1806, 1800,
	1861, 0, 1952, 1865, 0, 1861, 1861, 1813, 1912, 0,
	0, 1936, 0, 1884, 0, 1885, 0, 0, 1917, 0,
	1892, 1895, 1896, 1906, 0, 1898, 0, 1901, 0, 2235,
	-2, 357, 359, 361, 0, 364, 365, 0, 0, 0,
	0, 370, 0, 0, 0, 0, 0, 728, 1593, 1593,
	0, 0, 730, 0, 714, 0, 0, 1962, 0, 0,
	2038, 2042, 2066, 742, 744, 0, 0, 0, 2951, 2887,
	0, 741, 610, 619, 262, 0, 1921, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 232,
	0, 1363, 0, 1326, 0, 0, 1353, 0, 0, 1369,
	192, 193, 194, 0, 0, 0, 0, 204, 0, 0,
	200, 0, 210, 216, 215, 0, 1313, 0, 0, 0,
	0, 1554, 0, 0, 0, 164, 165, 166, 0, 171,
	0, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 1690, 1691, 0, 1681, 161,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	1543, 256, 0, 0, 0, 0, 0, 353, 348, 350,
	0, 1446, 1507, 1508, 1455, 1567, 1571, 1579, 0, 0,
	0, 0, 0, 758, 1606, 0, 274, 272, 0, 275,
	0, 278, 279, 0, 0, 274, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 448, 0, 447, 453, 500,
	1254, 1370, 0, 0, 1372, 1290, 1294, 0, 2551, 2551,
	0, 2503, 0, 1252, 0, 0, 1371, 550, 0, 557,
	0, 572, 2502, 0, 0, 0, 1423, 0, 0, 1450,
	1402, 1476, 1402, 0, 1519, 1521, 0, 1529, 0, 0,
	0, 1702, 1708, 0, 1695, 1696, 1838, 1710, 1729, -2,
	0, 0, 1819, 1737, 1734, 1740, 1741, 0, 0, 336,
	0, 1721, 1723, 0, 1225, 1228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 313, 310, 300, 1923,
	340, 0, 1001, 356, 1033, 1604, 1038, 2518, 1109, 1127,
	1159, 1305, 0, 0, 1161, 0, 0, 1841, 1828, 1829,
	1826, 1546, 2135, 2139, 0, 0, 0, 2141, -2, 0,
	2163, -2, -2, 2397, 2449, 2214, 1819, 2236, 2238, 2225,
	2443, 2083, 0, 2325, 2322, 0, 2309, 0, 2260, 2261,
	0, 0, 2264, 2266, 2267, 2268, 2022, 2015, 2014, 2422,
	0, 0, 0, 0, 2300, 1801, 0, 2314, 0, 0,
	1869, 2314, 2314, 1913, 0, 1915, 1882, 1870, 0, 1879,
	0, 2529, 1908, 1900, 0, 0, 362, 0, 366, 367,
	368, 369, 371, 0, 0, 0, 0, 0, 410, 731,
	732, 0, 0, 0, 1592, 1956, 1961, 0, 1967, 2037,
	0, 0, 0, 0, 0, 0, 263, 0, 950, 951,
	186, 187, 1268, 1266, 1558, 1562, 1559, 0, 189, 0,
	0, 1327, 0, 1330, 0, 0, 0, 0, 1337, 1354,
	0, 0, 0, 0, 0, 0, 1356, 0, 1355, 0,
	0, 1386, 0, 1534, 1541, 0, -2, 0, 0, 0,
	196, 222, 0, 0, 0, 0, 225, 1610, 198, 0,
	0, 231, 231, 1265, 0, 0, 1550, 1552, 1565, 0,
	0, 0, 0, 174, 0, 0, 1568, 1572, 1580, 1575,
	1577, 1583, 0, 0, 119, 0, 0, 1692, 0, 160,
	0, 0, 0, 1585, 244, 245, 0, 231, 0, 231,
	237, 231, 1543, 0, 0, 0, 0, 0, 0, 0,
	0, 1588, 1589, 265, 0, 0, 0, 0, 0, 267,
	346, 274, 429, 436, 441, 443, 444, 445, 446, 1315,
	0, 1382, 1374, 1375, 1376, 0, 1286, 1381, 1383, 0,
	0, 1291, 0, 0, 0, 0, 1271, 1253, 0, 1284,
	1256, 0, 555, 0, 355, 1242, 1420, 1468, 1402, 0,
	1471, 0, 0, 1511, 0, 0, 0, 0, 0, 0,
	0, 1704, 1708, 0, 1697, 1698, 1731, 1837, 0, 0,
	0, 1718, 1838, 0, 356, 0, 356, 315, 0, 316,
	317, 318, 325, 326, 327, 328, 299, 302, 0, 313,
	791, 793, 0, 0, 799, 1006, 1304, 0, 0, 0,
	0, 1827, 2143, -2, -2, 2164, 0, 2530, 2532, 1819,
	0, 2311, 1821, 0, 0, -2, 0, 0, 0, 1802,
	1785, 0, 1860, 1852, 1854, 1856, 2873, 2630, 3018, 1786,
	1787, 1935, 0, 0, 1903, 363, 372, 373, 0, 375,
	376, 733, 0, 0, 0, 1963, 0, 0, 739, 0,
	0, 0, 940, 0, 0, 1560, 191, 0, 0, 1331,
	1332, 1334, 0, 1336, 1338, 1339, 1256, 0, 1343, 0,
	2553, 0, 1348, 1351, 1352, 0, 0, 1365, 1387, 0,
	1396, 0, 1536, 1546, 1540, 0, 1538, 1398, 0, 195,
	224, 197, 226, 221, 0, 1543, 0, 199, 209, 0,
	0, 142, 0, 0, 2623, 177, 175, 173, 117, 123,
	125, 1547, 163, 0, 144, 0, 246, 255, 1542, 257,
	241, 231, 0, 0, 1569, 1573, 1581, 0, 1596, 1597,
	1598, 1599, 0, 0, 0, 0, 276, 0, 277, 280,
	281, 0, 0, 435, 1256, 1314, 1255, 1373, 0, 1384,
	1256, 0, 0, 0, 0, 0, 0, 1258, 0, 1257,
	0, 0, 556, 559, 0, 562, 1954, 569, 0, 0,
	0, 1475, 0, 1522, 1520, 0, 1528, 0, 0, 0,
	1680, 0, 0, 1699, 1700, 576, 1724, 0, 0, 1731,
	1742, 335, 0, 338, 312, 0, 301, 0, 795, 0,
	797, 0, 1160, 1162, 0, 0, 2237, 2329, 0, 0,
	2262, 2263, -2, 0, 2203, 2313, 2315, 0, 0, 0,
	0, 0, 1871, 1880, 374, 1593, 1593, 1957, 746, 747,
	743, 745, 0, 1556, 0, 1563, 233, 1329, 1333, 0,
	1340, 0, 0, 0, 1344, 1406, 0, 0, 1423, 1423,
	1357, 0, 0, 1390, 1391, 1311, 0, 1392, 1393, 1394,
	1535, 1830, 1541, 1256, 0, 0, 223, 228, 0, 0,
	0, 0, 0, 0, 162, 0, 235, 258, 1543, 0,
	0, 1600, 1601, 0, 0, 273, 292, 0, 458, 456,
	1258, 0, 1385, 1292, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1293, 1398, 0, 0, 1362, 1269, 0,
	1272, 0, 1254, 0, 560, 561, 564, 0, 1469, 0,
	1476, 0, 0, 1529, 0, 0, 1687, 1679, 1708, 1701,
	1702, 1954, 0, 1732, 0, 308, 309, 794, 0, 0,
	1170, 1171, 0, 0, 0, 0, 2324, 1822, 2204, 0,
	0, 1855, 1857, 1858, 1859, 734, 735, 0, 1557, 203,
	0, 1400, 1342, 1411, 0, 0, 0, 0, 0, 1358,
	1388, 1389, 1386, 1310, 0, 1539, 1537, 1367, 1400, 1402,
	201, 0, 1398, 0, 1320, 0, 0, 1323, 0, 0,
	178, 2623, 176, 0, 231, 712, 1593, 231, 0, 295,
	0, 286, 491, 457, 459, 0, 0, 463, 464, 465,
	0, 0, 468, 469, 470, 471, 0, 0, 476, 0,
	0, 0, 0, 481, 482, 1250, 0, 1378, 1380, 1396,
	1398, 1311, 0, 1273, 1315, 1271, 1470, 1474, 1472, 1512,
	1398, 0, 1396, 0, 1694, 1708, 1688, 1689, 0, 1704,
	0, 0, 356, 796, 798, 2321, 2341, 2330, -2, 2954,
	2631, 0, 2341, 2341, 2316, 2317, 0, 0, 1256, 0,
	1345, 1407, 1408, 0, 1403, 1404, 1405, 2552, 1346, 1347,
	1349, 1350, 1954, 0, 1397, 1406, 227, 1256, 1317, 0,
	0, 1318, 0, 0, 181, 0, 183, 259, 1591, 1594,
	0, 282, 0, 0, 432, 489, 0, 0, 460, 461,
	483, 462, 0, 0, 0, 474, 475, 477, 478, 479,
	480, 1247, 1249, 1256, 0, 1311, 1396, 1256, 0, 0,
	0, 1256, 1258, 1396, 0, 1311, 0, 1683, 1693, 0,
	1703, 1680, 0, 1727, 0, 337, 2326, 0, 0, 2332,
	2333, 2334, 2335, 2336, 2327, 2328, 748, 1335, 1341, 0,
	1409, 0, 1410, 0, 0, 0, 1366, 1395, 1411, 207,
	1321, 0, 1324, 0, 179, 0, 0, 290, 291, 488,
	484, 0, 0, 472, 473, 1377, 1379, 1256, 1311, 1954,
	1259, 0, 1261, 1258, 1270, 1311, 0, 1256, 0, 1706,
	1682, 1686, 2511, 1687, 1725, 0, 0, 0, 2338, 2339,
	0, 0, 0, 1412, 0, 1415, 1416, 0, 1413, 1386,
	0, 0, 231, 0, 1806, 466, 0, 1954, 1256, 1361,
	1260, 1250, 1256, 1398, 1954, 1396, 1676, 1708, 1694, 0,
	1954, 2337, 2340, 2331, 1399, 1414, 1417, 1418, 1368, 0,
	0, 1595, 293, 0, 0, 490, 485, 486, 467, 1359,
	1954, 1248, 1954, 1396, 1525, 1311, 0, 1683, 1954, 1728,
	1308, 0, 0, 487, 1360, 1523, 1311, 1256, 1705, 1677,
	1726, 1322, 1307, 0, 294, 1256, 1954, 0, 1954, 1526,
	0, 1524, 1308, 1325,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 640, 3, 646, 641, 3,
	652, 653, 644, 642, 657, 643, 654, 645, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 661, 658,
	632, 634, 633, 637, 656, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 650, 3, 651, 647, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 659, 639, 660, 635,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 636,
	57975, 638, 57976, 648, 57977, 649, 57978, 655, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1604
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1609
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1613
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1619
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1622
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1623
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1624
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1625
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1626
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1627
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1628
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1629
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1630
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1631
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1632
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1635
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1636
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1637
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1638
		{
			return helpWith(sqllex, "MOVE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1646
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1647
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1649
		{
			return helpWith(sqllex, "ALTER")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1652
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1653
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1654
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1655
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1656
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1657
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1658
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1659
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1660
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1661
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1662
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1663
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1724
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 87:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1750
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1764
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1784
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1788
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1792
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1828
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1832
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1839
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1851
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1868
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1878
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1885
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1911
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1920
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1930
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1939
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1969
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2001
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2005
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2009
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2015
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2025
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2034
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2049
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2055
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2063
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2089
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2095
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2099
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2104
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 157:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2110
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2122
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2143
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 160:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2163
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2172
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2183
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2192
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2205
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2210
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2214
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2219
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2225
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2233
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2244
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 171:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2254
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 172:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2264
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2273
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 174:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2284
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 175:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2290
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2298
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2302
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2306
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 179:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2316
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2321
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2332
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2336
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2342
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2346
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2353
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2358
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2363
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2368
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2383
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2388
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2398
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2408
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2412
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2417
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2456
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2466
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2469
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2475
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 207:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2482
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2490
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2497
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2520
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2527
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2534
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2540
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2547
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2548
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2562
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2574
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2584
		{
			sqlVAL.union.val = nil
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2590
		{
			sqlVAL.union.val = true
		}
	case 226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2594
		{
			sqlVAL.union.val = false
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2600
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2604
		{
			sqlVAL.union.val = nil
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2611
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2619
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2625
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2629
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 234:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2676
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2695
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2704
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2713
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2722
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2726
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2729
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2733
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2740
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2747
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2753
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2760
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2767
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 260:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2806
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2813
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2817
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2821
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2868
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2880
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2901
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2910
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2918
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2926
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2930
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2934
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2941
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2945
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2954
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2958
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2962
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2966
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2970
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3052
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3063
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3072
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3082
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3088
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3092
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3096
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3105
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3119
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 294:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3127
		{
			sqlVAL.union.val = nil
		}
	case 296:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3165
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3184
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3212
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3222
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.targetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsTenant: sqlDollar[8].union.asTenantClause(),
			}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3229
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3233
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3237
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3243
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3254
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3262
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3276
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3280
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3291
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3295
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3304
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3308
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3312
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3320
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3324
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3328
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3332
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3340
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3344
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3358
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3364
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3368
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3372
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3399
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3408
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3414
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3419
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3424
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3428
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3445
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3448
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3452
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3456
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3464
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3468
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3478
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3488
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3492
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3496
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3502
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3506
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3516
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = nil
		}
	case 357:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3532
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3546
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3552
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3562
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3566
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3574
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3586
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3590
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3594
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3598
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3602
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3606
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3610
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3614
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3618
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3626
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3634
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3635
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3636
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3637
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3638
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3656
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3658
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3662
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3665
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3692
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3694
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3698
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3701
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3728
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3730
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3734
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3737
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3745
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3748
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3752
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3756
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3760
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3764
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3777
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3785
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3786
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3790
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3795
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3807
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3809
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3810
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3812
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3813
		{
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3814
		{
			return helpWith(sqllex, "CREATE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3821
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3824
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3828
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3831
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3834
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3839
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Args:        sqlDollar[6].union.functionArgs(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3856
		{
			sqlVAL.union.val = true
		}
	case 434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = false
		}
	case 435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3860
		{
			sqlVAL.union.val = true
		}
	case 436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3861
		{
			sqlVAL.union.val = false
		}
	case 438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3867
		{
			sqlVAL.union.val = sqlDollar[1].union.functionArgs()
		}
	case 439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3868
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3871
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3873
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3880
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3886
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3894
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3902
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionArgClass(),
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3910
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3918
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3925
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3933
		{
			sqlVAL.union.val = tree.FunctionArgIn
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3934
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3935
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3936
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3937
		{
			return unimplemented(sqllex, "create function with 'VARIADIC' argument class")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3946
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3947
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3950
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3952
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3958
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3962
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3969
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3970
		{
			return unimplemented(sqllex, "create window function")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3972
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3978
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 467:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3982
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3986
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3990
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3994
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3998
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4002
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4006
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4010
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4014
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4018
		{
			sqlVAL.union.val = tree.FunctionLeakProof(true)
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4022
		{
			sqlVAL.union.val = tree.FunctionLeakProof(false)
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4026
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4030
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4034
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4040
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4041
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4048
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4060
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4064
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4070
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4076
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4082
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4087
		{
			return unimplemented(sqllex, "create access method")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4088
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4089
		{
			return unimplemented(sqllex, "create cast")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4090
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4091
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4092
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4093
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4094
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4095
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4096
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4097
		{
			return unimplemented(sqllex, "create publication")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4098
		{
			return unimplemented(sqllex, "create rule")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4099
		{
			return unimplemented(sqllex, "create server")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4100
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4101
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4102
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4103
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4106
		{
		}
	case 510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4107
		{
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4110
		{
		}
	case 512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4111
		{
		}
	case 513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4114
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4115
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4116
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4117
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4118
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4119
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4120
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4121
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4122
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4123
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4124
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4125
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4126
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4127
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4128
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4129
		{
			return unimplemented(sqllex, "drop server")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4130
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4131
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4132
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4135
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4137
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4138
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4139
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4141
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4142
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4143
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4155
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4163
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4167
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 553:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4171
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4177
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4181
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4190
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4197
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4203
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4209
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4213
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4224
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4236
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4251
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4260
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4278
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4298
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4309
		{
		}
	case 571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4311
		{
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4319
		{
			sqlVAL.str = ""
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4325
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4329
		{

			sqlVAL.union.val = nil
		}
	case 576:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4343
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4353
		{
			return helpWith(sqllex, "DELETE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4356
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4357
		{
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4365
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4368
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4369
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4370
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4371
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4372
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4381
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4382
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4383
		{
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
			return helpWith(sqllex, "DROP")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4387
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4388
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4389
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4390
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4391
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4392
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4393
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4401
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4405
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4409
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4418
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4426
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4434
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4438
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4441
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4456
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4473
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4481
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4489
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4497
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4504
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4519
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4526
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4536
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4540
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4557
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4564
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4579
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4583
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4588
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4606
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4608
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4613
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4617
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4640
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4647
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4649
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4657
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4665
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4673
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4681
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4692
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4700
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4703
		{
			return helpWith(sqllex, "DELETE")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4705
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4706
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4707
		{
			return helpWith(sqllex, "INSERT")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4710
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4712
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4720
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4721
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4722
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4727
		{
			return helpWith(sqllex, "DELETE")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4728
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4729
		{
			return helpWith(sqllex, "INSERT")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4731
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4735
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4736
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4740
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4754
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4760
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4764
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4768
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4775
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4783
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4789
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4795
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4821
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4828
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4832
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4836
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4842
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4863
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4871
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4883
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4887
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4904
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4912
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4916
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4920
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4934
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4945
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4972
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4976
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4980
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4995
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4999
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5011
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5023
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.TargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5033
		{
			return helpWith(sqllex, "GRANT")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5056
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5060
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5064
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5072
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5076
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5080
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5091
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5102
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5114
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5126
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5138
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.TargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5148
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5151
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5157
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5161
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5171
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5189
		{
			return helpWith(sqllex, "RESET")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5190
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5198
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5202
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5206
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5209
		{
			return helpWith(sqllex, "RESET")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5217
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5220
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5231
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5234
		{
			return helpWith(sqllex, "USE")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5238
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5239
		{
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5240
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5244
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5245
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5246
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5247
		{
			return helpWith(sqllex, "USE")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5263
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5281
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5299
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5307
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5311
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 792:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5315
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5331
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5343
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5347
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5358
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5361
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5371
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5379
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5386
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5387
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5401
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5417
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5423
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5432
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5434
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5437
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5454
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5459
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5476
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5479
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5481
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5484
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5500
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5504
		{
			return unimplemented(sqllex, "set from current")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5508
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5513
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5522
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5527
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5531
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5543
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5548
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5555
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5559
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5569
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5576
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5601
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5607
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5611
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5619
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = tree.Low
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5633
		{
			sqlVAL.union.val = tree.Normal
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5637
		{
			sqlVAL.union.val = tree.High
		}
	case 855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5648
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5652
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5661
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5665
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5680
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5681
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5682
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5683
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5684
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5685
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5686
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5687
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5688
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5690
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5691
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5692
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5693
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5694
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5696
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5697
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5698
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5700
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5702
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5703
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5704
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5705
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5706
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5707
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5708
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5709
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5710
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5711
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5712
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5713
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5714
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5715
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5716
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5717
		{
			return helpWith(sqllex, "SHOW")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5720
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5729
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5735
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5740
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5760
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5764
		{
			sqlVAL.union.val = true
		}
	case 943:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5768
		{
			sqlVAL.union.val = false
		}
	case 944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5774
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5778
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 946:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5782
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5788
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5792
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5796
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5802
		{
			sqlVAL.union.val = true
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5806
		{
			sqlVAL.union.val = false
		}
	case 952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5810
		{
			sqlVAL.union.val = false
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5820
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5825
		{
			return helpWith(sqllex, "FETCH")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5833
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5838
		{
			return helpWith(sqllex, "MOVE")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5856
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5863
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5870
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5877
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5897
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5905
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5912
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5920
		{
			sqlVAL.union.val = int64(1)
		}
	case 968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5921
		{
			sqlVAL.union.val = int64(-1)
		}
	case 969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5924
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 970:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5925
		{
			sqlVAL.union.val = int64(1)
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5928
		{
			sqlVAL.union.val = int64(1)
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5929
		{
			sqlVAL.union.val = int64(-1)
		}
	case 973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5932
		{
		}
	case 974:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5933
		{
		}
	case 975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5936
		{
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5937
		{
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5941
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5946
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5951
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5956
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5961
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5971
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5972
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5973
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5978
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.str = "client_encoding"
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5993
		{
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5995
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6000
		{
			sqlVAL.str = "timezone"
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6001
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6005
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6025
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6029
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6033
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6044
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6052
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6060
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6093
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6101
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6116
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6120
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6124
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6128
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6132
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6148
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6151
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6156
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6158
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6162
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6165
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6171
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6185
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6196
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6204
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6219
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6230
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6242
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6248
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6259
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6278
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6285
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6288
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6301
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6309
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6317
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6320
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6322
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6333
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6339
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6342
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6353
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6355
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6358
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6369
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6374
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = true
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = true
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6382
		{
			sqlVAL.union.val = false
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6403
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6407
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6410
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6411
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6412
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6426
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6429
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6431
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6447
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6455
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6456
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6466
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6472
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6480
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6482
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6488
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6492
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6496
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6502
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6506
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6510
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6524
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6529
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6531
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6535
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6538
		{
			sqlVAL.union.val = true
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6539
		{
			sqlVAL.union.val = false
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6547
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6550
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6552
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6555
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6586
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6596
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6601
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = true
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = false
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6612
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6619
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6626
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6630
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6633
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6640
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6644
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6648
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6658
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6665
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6669
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6680
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6683
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6691
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6696
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6701
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6705
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6716
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6719
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6731
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6735
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6740
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6745
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6750
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6759
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6766
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6779
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6781
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6784
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6792
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6795
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6803
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6806
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6816
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6824
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6832
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6847
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6853
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6855
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6858
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6860
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6863
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6867
		{
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6876
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6884
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6890
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6899
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6904
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6911
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6920
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6924
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6940
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6946
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6958
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6971
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6977
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6981
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6987
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7000
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7129
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7133
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7176
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7180
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7185
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7191
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7199
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7208
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7217
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7229
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7237
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7254
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7255
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7256
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7257
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7267
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7268
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7269
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7270
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7281
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7309
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7311
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7322
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7331
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7354
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7356
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7362
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7373
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7388
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7409
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7437
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7473
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7488
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7505
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7516
		{

			sqlVAL.union.val = nil
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7522
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.str = ""
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7532
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = nil
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7542
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7551
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7555
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7559
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7573
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7595
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7608
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7622
		{
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7623
		{
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7624
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7642
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7644
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7648
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7650
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7651
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7657
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7663
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7667
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7679
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7701
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7705
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7711
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7716
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7717
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7719
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7720
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7721
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7722
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7723
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7724
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7729
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.str = ""
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7743
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7749
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7757
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7763
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7769
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7775
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7804
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7817
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7837
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7847
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7861
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7886
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7894
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7906
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7968
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7982
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7991
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7997
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8013
		{

			sqlVAL.union.val = true
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8018
		{
			sqlVAL.union.val = false
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8023
		{
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8027
		{
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8030
		{
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8073
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8085
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8090
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8115
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8127
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8138
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8155
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8165
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8180
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8193
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8205
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8215
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8235
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8241
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8248
		{
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8249
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8250
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8251
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8252
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8253
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8271
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8287
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8297
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8303
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8327
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8331
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8335
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8352
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8364
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8384
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8388
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8420
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8429
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8437
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8445
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8448
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8465
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8466
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8476
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8478
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8480
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8482
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8485
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8487
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8488
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8490
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8492
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8493
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8495
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8509
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8513
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8540
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8571
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8574
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.str = ""
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8594
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8605
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.union.val = true
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8617
		{

			sqlVAL.union.val = true
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = false
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8634
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8648
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8660
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8672
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8683
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8694
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.union.val = false
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8702
		{
			sqlVAL.union.val = true
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = true
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8720
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8724
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8728
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8732
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8736
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8768
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8784
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8788
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8792
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8796
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8800
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8804
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8816
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8822
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8826
		{
			sqlVAL.union.val = nil
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8832
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8841
		{
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8842
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8867
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8869
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8871
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8873
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8875
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8877
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8885
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8912
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8929
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8947
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8963
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8979
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8983
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8998
		{
			sqlVAL.union.val = false
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9004
		{
			sqlVAL.union.val = true
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqlVAL.union.val = false
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = true
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.union.val = false
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9024
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9028
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9037
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9043
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9049
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9057
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.str = ""
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.str = ""
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9110
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9116
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9130
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9169
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9181
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9233
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9249
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9276
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9286
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9330
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9341
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9347
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9359
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9365
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9379
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9385
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9393
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9397
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9444
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9448
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9459
		{
			sqlVAL.union.val = true
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = false
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9504
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9508
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9517
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9523
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.str = ""
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9538
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9543
		{
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9544
		{
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9547
		{
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9548
		{
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9559
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9577
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9579
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9583
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9586
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9599
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9607
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9615
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9628
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9636
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9638
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9644
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9652
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9655
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9659
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9660
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9661
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9677
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9680
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9693
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9697
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9702
		{
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9703
		{
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9704
		{
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9721
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9727
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9728
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9735
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9742
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9746
		{
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9747
		{
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9751
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9775
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9788
		{
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9790
		{
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9794
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9803
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9829
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9853
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9884
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9889
		{
			sqlVAL.str = ""
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9894
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9907
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9912
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9919
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9923
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9929
		{

		}
	case 1690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9936
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9944
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9953
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.str = ""
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9969
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9973
		{
			sqlVAL.str = ""
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9979
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.str = ""
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9993
		{
			sqlVAL.str = ""
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9999
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10024
		{
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10025
		{
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10054
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10072
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10076
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10085
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10090
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10110
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10114
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10134
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10138
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10145
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10153
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10179
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10217
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10229
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10249
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10270
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10285
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10429
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10464
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10465
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10466
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10501
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10527
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10549
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10564
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10571
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10587
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = true
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = false
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10640
		{
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10641
		{
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = nil
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10654
		{
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10655
		{
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = true
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10663
		{
			sqlVAL.union.val = false
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10667
		{
			sqlVAL.union.val = false
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10673
		{
			sqlVAL.union.val = true
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10684
		{
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10685
		{
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10688
		{
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10689
		{
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10720
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10724
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10730
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10742
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10747
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10773
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10794
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10802
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10806
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10820
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10861
		{
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10862
		{
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10865
		{
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10866
		{
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10883
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10887
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10899
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10900
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10901
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10902
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10932
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10934
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10946
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10949
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10971
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10976
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10981
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10992
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11002
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11013
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11018
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11030
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11041
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11049
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11091
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11101
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11136
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11147
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11177
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11192
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11204
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11210
		{
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11212
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11215
		{
			sqlVAL.union.val = nil
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11231
		{
			sqlVAL.union.val = true
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11235
		{
			sqlVAL.union.val = false
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11255
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11271
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11275
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11281
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11292
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11298
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11305
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.str = tree.AstFull
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.str = tree.AstRight
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11323
		{
			sqlVAL.str = tree.AstInner
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11329
		{
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11330
		{
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.str = tree.AstHash
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11358
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.str = ""
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11383
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11387
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11392
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11393
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11394
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11395
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11399
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11404
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11418
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11422
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11428
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11434
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11444
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = true
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = false
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = true
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = false
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11474
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11493
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11506
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11514
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11515
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11525
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11533
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11535
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11543
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11544
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11556
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11563
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11572
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11612
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11624
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11625
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11628
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11629
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11630
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11631
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11632
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11633
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11634
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11635
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11636
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11637
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11638
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11639
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11640
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11642
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11643
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11645
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11646
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11647
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11649
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11650
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11651
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11652
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11653
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11654
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11655
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11656
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11657
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11658
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11659
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11662
		{
			sqlVAL.union.val = types.Geography
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11663
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11666
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11670
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11674
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11682
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11708
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11716
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11724
		{
			sqlVAL.union.val = nil
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11731
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11735
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11739
		{
			sqlVAL.union.val = types.Int2
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11743
		{
			sqlVAL.union.val = types.Int
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11747
		{
			sqlVAL.union.val = types.Float4
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11755
		{
			sqlVAL.union.val = types.Float
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11759
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11767
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11775
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11783
		{
			sqlVAL.union.val = types.Bool
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11789
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11802
		{
			sqlVAL.union.val = types.Float
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11808
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11814
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11826
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11830
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11836
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11858
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11862
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11866
		{
			sqlVAL.union.val = types.String
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11875
		{
			sqlVAL.union.val = true
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11876
		{
			sqlVAL.union.val = false
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11881
		{
			sqlVAL.union.val = types.Date
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11885
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11893
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11905
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11907
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11916
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11924
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11937
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11941
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11951
		{
			sqlVAL.union.val = true
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11952
		{
			sqlVAL.union.val = false
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = false
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = types.Interval
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11965
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11984
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12000
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12016
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12022
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12031
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12040
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12049
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12055
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12064
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12070
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12080
		{
			sqlVAL.union.val = nil
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12086
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12094
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12135
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12139
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12143
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12154
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12163
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12171
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12175
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12179
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12183
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12187
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12191
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12195
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12199
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12203
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12207
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12211
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12235
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12239
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12243
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12247
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12251
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12255
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12259
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12263
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12267
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12271
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12275
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12279
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12283
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12287
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12291
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12295
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12299
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12303
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12311
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12321
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12325
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12329
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12333
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12337
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12341
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12345
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12357
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12361
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12365
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12369
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12373
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12377
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12381
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12385
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12389
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12393
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12397
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12401
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12409
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12417
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12421
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12425
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12429
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12433
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12450
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12454
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12462
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12466
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12470
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12474
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12478
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12482
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12490
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12494
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12498
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12502
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12506
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12510
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12527
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12532
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12544
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12548
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12552
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12556
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12560
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12564
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12568
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12572
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12576
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12580
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12584
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12588
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12592
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12596
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12600
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12604
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12608
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12612
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12620
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12632
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12636
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12640
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12648
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12658
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12662
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12666
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12670
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12684
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12692
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12728
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12732
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12736
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12740
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12744
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12749
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12751
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12755
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12759
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12763
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12767
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12771
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12775
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12784
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12791
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12795
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12799
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12809
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12814
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12818
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12822
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12826
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12830
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12833
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12837
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12841
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12844
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12845
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12847
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12853
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12857
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12860
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12869
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12922
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12935
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12947
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12956
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12957
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12962
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12966
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12970
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12976
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12980
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12984
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12988
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12992
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12996
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13002
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13006
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13010
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13014
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13018
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13022
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13026
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13030
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13034
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13038
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13042
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13046
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13050
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13057
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13060
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13062
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13065
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13067
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13071
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13074
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13076
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13080
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13083
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13085
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13089
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13092
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13094
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13098
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13101
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13103
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13106
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13108
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13111
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13113
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13116
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13118
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13121
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13123
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13126
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13128
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13132
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13135
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13136
		{
			return unimplemented(sqllex, "treat")
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13138
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13142
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13146
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13150
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13154
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13157
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13159
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13162
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13168
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13172
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13178
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13182
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13189
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13193
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13199
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13203
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13209
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13217
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13221
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13225
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13232
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13252
		{
			sqlVAL.str = ""
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13258
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13262
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13268
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13276
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13284
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13292
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13298
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13311
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13339
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13343
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13347
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13351
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13358
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13367
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13371
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13375
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13379
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13384
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13397
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13401
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13408
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13420
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13424
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13428
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13444
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13445
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13446
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13447
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13448
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13449
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13450
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13451
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13452
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13453
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13454
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13455
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13457
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13458
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13459
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13460
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13461
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13462
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13463
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13464
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13465
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13466
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13467
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13468
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13469
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13470
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13471
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13472
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13473
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13474
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13475
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13476
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13477
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13478
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13479
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13484
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13500
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13507
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13508
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13509
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13510
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13533
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13537
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13543
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13547
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13551
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13562
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13566
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13572
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13576
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13583
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13589
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13593
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13599
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13603
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13609
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13613
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13619
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13623
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13629
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13633
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13656
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13660
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13664
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13670
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13677
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13681
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13698
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13702
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13706
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13710
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13714
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13720
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13726
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13732
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13736
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13740
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13746
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13758
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13765
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13769
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13775
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13781
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13785
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13792
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13798
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13802
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13809
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13815
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13819
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13824
		{
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13825
		{
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13829
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13833
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13839
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13848
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13852
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13856
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13868
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13872
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13878
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13882
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13901
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13909
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13932
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13941
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13945
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13949
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13953
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13959
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13963
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13978
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13982
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13994
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13998
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14007
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14018
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14027
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14035
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2492:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14052
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14137
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14145
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14149
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14155
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14159
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14165
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14171
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2520:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14178
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14205
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14212
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2529:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14216
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2530:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14220
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2532:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14234
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2533:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14238
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14242
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14255
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14264
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14282
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14295
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2543:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14302
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14327
		{
			sqlVAL.str = ""
		}
	case 2552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14333
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2553:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14337
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
