// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colTableDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) colDef() tree.ColumnDef {
	return u.val.(tree.ColumnDef)
}
func (u *sqlSymUnion) colDefList() tree.ColumnDefList {
	return u.val.(tree.ColumnDefList)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterBackupScheduleCmd() tree.AlterBackupScheduleCmd {
	return u.val.(tree.AlterBackupScheduleCmd)
}
func (u *sqlSymUnion) alterBackupScheduleCmds() tree.AlterBackupScheduleCmds {
	return u.val.(tree.AlterBackupScheduleCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionArgs() tree.FuncArgs {
	return u.val.(tree.FuncArgs)
}
func (u *sqlSymUnion) functionArg() tree.FuncArg {
	return u.val.(tree.FuncArg)
}
func (u *sqlSymUnion) functionArgClass() tree.FuncArgClass {
	return u.val.(tree.FuncArgClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}
func (u *sqlSymUnion) functionObj() tree.FuncObj {
	return u.val.(tree.FuncObj)
}
func (u *sqlSymUnion) functionObjs() tree.FuncObjs {
	return u.val.(tree.FuncObjs)
}

//line sql-gen.y:982
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONNECTIONS = lexbase.CONNECTIONS
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DEPENDS = lexbase.DEPENDS
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const EXTREMES = lexbase.EXTREMES
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INDEX_BEFORE_PAREN = lexbase.INDEX_BEFORE_PAREN
const INDEX_BEFORE_NAME_THEN_PAREN = lexbase.INDEX_BEFORE_NAME_THEN_PAREN
const INDEX_AFTER_ORDER_BY_BEFORE_AT = lexbase.INDEX_AFTER_ORDER_BY_BEFORE_AT
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LABEL = lexbase.LABEL
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTHING_AFTER_RETURNING = lexbase.NOTHING_AFTER_RETURNING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMA_ONLY = lexbase.SCHEMA_ONLY
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECONDARY = lexbase.SECONDARY
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLISTEN = lexbase.UNLISTEN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VERIFY_BACKUP_TABLE_DATA = lexbase.VERIFY_BACKUP_TABLE_DATA
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWDEBUG = lexbase.VIEWDEBUG
const VIEWCLUSTERMETADATA = lexbase.VIEWCLUSTERMETADATA
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONNECTIONS",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DEPENDS",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"EXTREMES",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INDEX_BEFORE_PAREN",
	"INDEX_BEFORE_NAME_THEN_PAREN",
	"INDEX_AFTER_ORDER_BY_BEFORE_AT",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LABEL",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTHING_AFTER_RETURNING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMA_ONLY",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECONDARY",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VERIFY_BACKUP_TABLE_DATA",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWDEBUG",
	"VIEWCLUSTERMETADATA",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15916

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 5,
	-2, 1924,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 64,
	288, 582,
	-2, 0,
	-1, 76,
	8, 1057,
	29, 1057,
	656, 1057,
	657, 1057,
	-2, 0,
	-1, 77,
	8, 1057,
	29, 1057,
	656, 1057,
	657, 1057,
	-2, 0,
	-1, 80,
	1, 1771,
	140, 1771,
	275, 1771,
	363, 1771,
	427, 1771,
	437, 1771,
	637, 1771,
	669, 1771,
	-2, 0,
	-1, 81,
	1, 1771,
	669, 1771,
	-2, 0,
	-1, 87,
	268, 295,
	571, 295,
	-2, 0,
	-1, 101,
	206, 482,
	251, 1645,
	270, 1645,
	288, 482,
	429, 482,
	441, 1386,
	485, 482,
	502, 1386,
	555, 1386,
	584, 482,
	613, 1386,
	-2, 0,
	-1, 108,
	142, 1924,
	263, 1924,
	596, 1924,
	597, 1924,
	-2, 0,
	-1, 126,
	162, 1895,
	184, 1895,
	197, 1895,
	266, 1895,
	302, 1895,
	377, 1895,
	388, 1895,
	590, 1895,
	-2, 1866,
	-1, 170,
	170, 1194,
	286, 1194,
	432, 1155,
	507, 1155,
	554, 1155,
	574, 1194,
	576, 1155,
	-2, 0,
	-1, 175,
	4, 1926,
	21, 1926,
	22, 1926,
	23, 1926,
	24, 1926,
	25, 1926,
	26, 1926,
	27, 1926,
	28, 1926,
	30, 1926,
	31, 1926,
	37, 1926,
	41, 1926,
	43, 1926,
	44, 1926,
	45, 1926,
	47, 1926,
	48, 1926,
	49, 1926,
	50, 1926,
	51, 1926,
	52, 1926,
	53, 1926,
	54, 1926,
	55, 1926,
	57, 1926,
	58, 1926,
	59, 1926,
	60, 1926,
	62, 1926,
	63, 1926,
	64, 1926,
	65, 1926,
	66, 1926,
	67, 1926,
	68, 1926,
	69, 1926,
	73, 1926,
	74, 1926,
	75, 1926,
	76, 1926,
	78, 1926,
	79, 1926,
	80, 1926,
	84, 1926,
	85, 1926,
	86, 1926,
	87, 1926,
	88, 1926,
	89, 1926,
	90, 1926,
	91, 1926,
	94, 1926,
	95, 1926,
	96, 1926,
	97, 1926,
	98, 1926,
	99, 1926,
	101, 1926,
	103, 1926,
	104, 1926,
	105, 1926,
	106, 1926,
	107, 1926,
	108, 1926,
	109, 1926,
	111, 1926,
	112, 1926,
	113, 1926,
	115, 1926,
	116, 1926,
	117, 1926,
	125, 1926,
	126, 1926,
	127, 1926,
	128, 1926,
	129, 1926,
	131, 1926,
	132, 1926,
	133, 1926,
	134, 1926,
	136, 1926,
	137, 1926,
	138, 1926,
	139, 1926,
	141, 1926,
	142, 1926,
	143, 1926,
	144, 1926,
	146, 1926,
	147, 1926,
	148, 1926,
	151, 1926,
	152, 1926,
	153, 1926,
	155, 1926,
	156, 1926,
	157, 1926,
	159, 1926,
	160, 1926,
	161, 1926,
	163, 1926,
	164, 1926,
	165, 1926,
	166, 1926,
	167, 1926,
	168, 1926,
	169, 1926,
	170, 1926,
	171, 1926,
	172, 1926,
	173, 1926,
	174, 1926,
	175, 1926,
	176, 1926,
	177, 1926,
	178, 1926,
	179, 1926,
	180, 1926,
	181, 1926,
	183, 1926,
	189, 1926,
	190, 1926,
	191, 1926,
	192, 1926,
	196, 1926,
	198, 1926,
	199, 1926,
	200, 1926,
	202, 1926,
	203, 1926,
	206, 1926,
	207, 1926,
	208, 1926,
	209, 1926,
	210, 1926,
	211, 1926,
	212, 1926,
	213, 1926,
	214, 1926,
	215, 1926,
	216, 1926,
	217, 1926,
	218, 1926,
	219, 1926,
	221, 1926,
	222, 1926,
	224, 1926,
	225, 1926,
	227, 1926,
	228, 1926,
	229, 1926,
	230, 1926,
	231, 1926,
	232, 1926,
	233, 1926,
	234, 1926,
	235, 1926,
	236, 1926,
	237, 1926,
	239, 1926,
	240, 1926,
	241, 1926,
	243, 1926,
	244, 1926,
	245, 1926,
	246, 1926,
	247, 1926,
	251, 1926,
	252, 1926,
	253, 1926,
	254, 1926,
	256, 1926,
	257, 1926,
	258, 1926,
	260, 1926,
	261, 1926,
	262, 1926,
	263, 1926,
	264, 1926,
	265, 1926,
	267, 1926,
	269, 1926,
	270, 1926,
	271, 1926,
	273, 1926,
	275, 1926,
	276, 1926,
	277, 1926,
	279, 1926,
	283, 1926,
	284, 1926,
	285, 1926,
	286, 1926,
	287, 1926,
	288, 1926,
	289, 1926,
	291, 1926,
	292, 1926,
	293, 1926,
	295, 1926,
	296, 1926,
	297, 1926,
	299, 1926,
	300, 1926,
	303, 1926,
	304, 1926,
	305, 1926,
	306, 1926,
	307, 1926,
	308, 1926,
	309, 1926,
	312, 1926,
	313, 1926,
	314, 1926,
	315, 1926,
	317, 1926,
	318, 1926,
	319, 1926,
	320, 1926,
	321, 1926,
	322, 1926,
	323, 1926,
	324, 1926,
	325, 1926,
	326, 1926,
	327, 1926,
	328, 1926,
	329, 1926,
	330, 1926,
	331, 1926,
	332, 1926,
	333, 1926,
	334, 1926,
	335, 1926,
	336, 1926,
	337, 1926,
	338, 1926,
	339, 1926,
	341, 1926,
	343, 1926,
	344, 1926,
	345, 1926,
	346, 1926,
	347, 1926,
	348, 1926,
	349, 1926,
	350, 1926,
	351, 1926,
	352, 1926,
	353, 1926,
	354, 1926,
	355, 1926,
	356, 1926,
	357, 1926,
	358, 1926,
	359, 1926,
	361, 1926,
	362, 1926,
	364, 1926,
	365, 1926,
	367, 1926,
	368, 1926,
	369, 1926,
	370, 1926,
	372, 1926,
	373, 1926,
	374, 1926,
	375, 1926,
	376, 1926,
	379, 1926,
	381, 1926,
	383, 1926,
	384, 1926,
	385, 1926,
	386, 1926,
	389, 1926,
	390, 1926,
	391, 1926,
	393, 1926,
	395, 1926,
	396, 1926,
	397, 1926,
	398, 1926,
	399, 1926,
	400, 1926,
	401, 1926,
	402, 1926,
	403, 1926,
	404, 1926,
	405, 1926,
	406, 1926,
	407, 1926,
	408, 1926,
	410, 1926,
	411, 1926,
	412, 1926,
	413, 1926,
	414, 1926,
	415, 1926,
	416, 1926,
	417, 1926,
	418, 1926,
	419, 1926,
	420, 1926,
	421, 1926,
	422, 1926,
	423, 1926,
	424, 1926,
	426, 1926,
	427, 1926,
	428, 1926,
	430, 1926,
	431, 1926,
	432, 1926,
	433, 1926,
	434, 1926,
	435, 1926,
	436, 1926,
	437, 1926,
	438, 1926,
	439, 1926,
	440, 1926,
	441, 1926,
	442, 1926,
	443, 1926,
	445, 1926,
	447, 1926,
	448, 1926,
	449, 1926,
	455, 1926,
	456, 1926,
	457, 1926,
	459, 1926,
	460, 1926,
	461, 1926,
	462, 1926,
	463, 1926,
	464, 1926,
	465, 1926,
	466, 1926,
	467, 1926,
	468, 1926,
	469, 1926,
	471, 1926,
	472, 1926,
	473, 1926,
	474, 1926,
	475, 1926,
	477, 1926,
	478, 1926,
	479, 1926,
	480, 1926,
	481, 1926,
	482, 1926,
	483, 1926,
	485, 1926,
	486, 1926,
	487, 1926,
	488, 1926,
	489, 1926,
	490, 1926,
	491, 1926,
	492, 1926,
	493, 1926,
	494, 1926,
	495, 1926,
	496, 1926,
	497, 1926,
	498, 1926,
	499, 1926,
	500, 1926,
	502, 1926,
	503, 1926,
	504, 1926,
	505, 1926,
	506, 1926,
	507, 1926,
	509, 1926,
	510, 1926,
	511, 1926,
	512, 1926,
	513, 1926,
	514, 1926,
	515, 1926,
	517, 1926,
	518, 1926,
	519, 1926,
	520, 1926,
	521, 1926,
	522, 1926,
	523, 1926,
	524, 1926,
	526, 1926,
	528, 1926,
	529, 1926,
	530, 1926,
	531, 1926,
	532, 1926,
	533, 1926,
	534, 1926,
	535, 1926,
	536, 1926,
	537, 1926,
	538, 1926,
	539, 1926,
	540, 1926,
	541, 1926,
	542, 1926,
	543, 1926,
	544, 1926,
	545, 1926,
	546, 1926,
	547, 1926,
	548, 1926,
	550, 1926,
	551, 1926,
	553, 1926,
	554, 1926,
	556, 1926,
	557, 1926,
	558, 1926,
	559, 1926,
	560, 1926,
	561, 1926,
	563, 1926,
	564, 1926,
	566, 1926,
	567, 1926,
	568, 1926,
	569, 1926,
	570, 1926,
	572, 1926,
	574, 1926,
	575, 1926,
	576, 1926,
	577, 1926,
	578, 1926,
	579, 1926,
	580, 1926,
	581, 1926,
	583, 1926,
	584, 1926,
	585, 1926,
	586, 1926,
	587, 1926,
	588, 1926,
	589, 1926,
	592, 1926,
	593, 1926,
	594, 1926,
	595, 1926,
	596, 1926,
	597, 1926,
	598, 1926,
	599, 1926,
	600, 1926,
	602, 1926,
	605, 1926,
	606, 1926,
	607, 1926,
	608, 1926,
	609, 1926,
	610, 1926,
	612, 1926,
	613, 1926,
	614, 1926,
	615, 1926,
	616, 1926,
	617, 1926,
	618, 1926,
	619, 1926,
	620, 1926,
	621, 1926,
	622, 1926,
	623, 1926,
	628, 1926,
	629, 1926,
	630, 1926,
	631, 1926,
	632, 1926,
	633, 1926,
	-2, 0,
	-1, 177,
	1, 1771,
	669, 1771,
	672, 1771,
	-2, 0,
	-1, 178,
	1, 1771,
	571, 1771,
	669, 1771,
	672, 1771,
	-2, 0,
	-1, 214,
	162, 1894,
	184, 1894,
	197, 1894,
	266, 1894,
	302, 1894,
	377, 1894,
	388, 1894,
	590, 1894,
	-2, 1869,
	-1, 275,
	4, 1933,
	5, 1933,
	6, 1933,
	7, 1933,
	8, 1933,
	9, 1933,
	10, 1933,
	21, 1933,
	22, 1933,
	23, 1933,
	24, 1933,
	25, 1933,
	26, 1933,
	27, 1933,
	28, 1933,
	30, 1933,
	31, 1933,
	37, 1933,
	38, 1933,
	41, 1933,
	43, 1933,
	44, 1933,
	45, 1933,
	46, 1933,
	47, 1933,
	48, 1933,
	49, 1933,
	50, 1933,
	51, 1933,
	52, 1933,
	53, 1933,
	54, 1933,
	55, 1933,
	57, 1933,
	58, 1933,
	59, 1933,
	60, 1933,
	62, 1933,
	63, 1933,
	64, 1933,
	65, 1933,
	66, 1933,
	67, 1933,
	68, 1933,
	69, 1933,
	70, 1933,
	71, 1933,
	72, 1933,
	73, 1933,
	74, 1933,
	75, 1933,
	76, 1933,
	78, 1933,
	79, 1933,
	80, 1933,
	82, 1933,
	84, 1933,
	85, 1933,
	86, 1933,
	87, 1933,
	88, 1933,
	89, 1933,
	90, 1933,
	91, 1933,
	94, 1933,
	95, 1933,
	96, 1933,
	97, 1933,
	98, 1933,
	99, 1933,
	101, 1933,
	103, 1933,
	104, 1933,
	105, 1933,
	106, 1933,
	107, 1933,
	108, 1933,
	109, 1933,
	111, 1933,
	112, 1933,
	113, 1933,
	114, 1933,
	115, 1933,
	116, 1933,
	117, 1933,
	118, 1933,
	119, 1933,
	120, 1933,
	121, 1933,
	122, 1933,
	123, 1933,
	124, 1933,
	125, 1933,
	126, 1933,
	127, 1933,
	128, 1933,
	129, 1933,
	130, 1933,
	131, 1933,
	132, 1933,
	133, 1933,
	134, 1933,
	135, 1933,
	136, 1933,
	137, 1933,
	138, 1933,
	139, 1933,
	141, 1933,
	142, 1933,
	143, 1933,
	144, 1933,
	146, 1933,
	147, 1933,
	148, 1933,
	151, 1933,
	152, 1933,
	153, 1933,
	155, 1933,
	156, 1933,
	157, 1933,
	159, 1933,
	160, 1933,
	161, 1933,
	163, 1933,
	164, 1933,
	165, 1933,
	166, 1933,
	167, 1933,
	168, 1933,
	169, 1933,
	170, 1933,
	171, 1933,
	172, 1933,
	173, 1933,
	174, 1933,
	175, 1933,
	176, 1933,
	177, 1933,
	178, 1933,
	179, 1933,
	180, 1933,
	181, 1933,
	182, 1933,
	183, 1933,
	189, 1933,
	190, 1933,
	191, 1933,
	192, 1933,
	196, 1933,
	198, 1933,
	199, 1933,
	200, 1933,
	202, 1933,
	203, 1933,
	205, 1933,
	206, 1933,
	207, 1933,
	208, 1933,
	209, 1933,
	210, 1933,
	211, 1933,
	212, 1933,
	213, 1933,
	214, 1933,
	215, 1933,
	216, 1933,
	217, 1933,
	218, 1933,
	219, 1933,
	221, 1933,
	222, 1933,
	224, 1933,
	225, 1933,
	227, 1933,
	228, 1933,
	229, 1933,
	230, 1933,
	231, 1933,
	232, 1933,
	233, 1933,
	234, 1933,
	235, 1933,
	236, 1933,
	237, 1933,
	238, 1933,
	239, 1933,
	240, 1933,
	241, 1933,
	243, 1933,
	244, 1933,
	245, 1933,
	246, 1933,
	247, 1933,
	251, 1933,
	252, 1933,
	253, 1933,
	254, 1933,
	256, 1933,
	257, 1933,
	258, 1933,
	259, 1933,
	260, 1933,
	261, 1933,
	262, 1933,
	263, 1933,
	264, 1933,
	265, 1933,
	267, 1933,
	269, 1933,
	270, 1933,
	271, 1933,
	272, 1933,
	273, 1933,
	274, 1933,
	275, 1933,
	276, 1933,
	277, 1933,
	278, 1933,
	279, 1933,
	283, 1933,
	284, 1933,
	285, 1933,
	286, 1933,
	287, 1933,
	288, 1933,
	289, 1933,
	291, 1933,
	292, 1933,
	293, 1933,
	295, 1933,
	296, 1933,
	297, 1933,
	298, 1933,
	299, 1933,
	300, 1933,
	301, 1933,
	303, 1933,
	304, 1933,
	305, 1933,
	306, 1933,
	307, 1933,
	308, 1933,
	309, 1933,
	310, 1933,
	311, 1933,
	312, 1933,
	313, 1933,
	314, 1933,
	315, 1933,
	317, 1933,
	318, 1933,
	319, 1933,
	320, 1933,
	321, 1933,
	322, 1933,
	323, 1933,
	324, 1933,
	325, 1933,
	326, 1933,
	327, 1933,
	328, 1933,
	329, 1933,
	330, 1933,
	331, 1933,
	332, 1933,
	333, 1933,
	334, 1933,
	335, 1933,
	336, 1933,
	337, 1933,
	338, 1933,
	339, 1933,
	341, 1933,
	342, 1933,
	343, 1933,
	344, 1933,
	345, 1933,
	346, 1933,
	347, 1933,
	348, 1933,
	349, 1933,
	350, 1933,
	351, 1933,
	352, 1933,
	353, 1933,
	354, 1933,
	355, 1933,
	356, 1933,
	357, 1933,
	358, 1933,
	359, 1933,
	360, 1933,
	361, 1933,
	362, 1933,
	363, 1933,
	364, 1933,
	365, 1933,
	366, 1933,
	367, 1933,
	368, 1933,
	369, 1933,
	370, 1933,
	371, 1933,
	372, 1933,
	373, 1933,
	374, 1933,
	375, 1933,
	376, 1933,
	379, 1933,
	381, 1933,
	384, 1933,
	385, 1933,
	386, 1933,
	389, 1933,
	390, 1933,
	391, 1933,
	392, 1933,
	393, 1933,
	394, 1933,
	395, 1933,
	396, 1933,
	397, 1933,
	398, 1933,
	399, 1933,
	400, 1933,
	401, 1933,
	402, 1933,
	403, 1933,
	404, 1933,
	405, 1933,
	406, 1933,
	407, 1933,
	408, 1933,
	410, 1933,
	411, 1933,
	412, 1933,
	413, 1933,
	414, 1933,
	415, 1933,
	416, 1933,
	417, 1933,
	418, 1933,
	419, 1933,
	420, 1933,
	421, 1933,
	422, 1933,
	423, 1933,
	424, 1933,
	426, 1933,
	427, 1933,
	428, 1933,
	430, 1933,
	431, 1933,
	432, 1933,
	433, 1933,
	434, 1933,
	435, 1933,
	436, 1933,
	437, 1933,
	438, 1933,
	439, 1933,
	440, 1933,
	441, 1933,
	442, 1933,
	443, 1933,
	445, 1933,
	447, 1933,
	448, 1933,
	449, 1933,
	455, 1933,
	456, 1933,
	457, 1933,
	459, 1933,
	460, 1933,
	461, 1933,
	462, 1933,
	463, 1933,
	464, 1933,
	465, 1933,
	466, 1933,
	467, 1933,
	468, 1933,
	469, 1933,
	471, 1933,
	472, 1933,
	473, 1933,
	474, 1933,
	475, 1933,
	476, 1933,
	477, 1933,
	478, 1933,
	479, 1933,
	480, 1933,
	481, 1933,
	482, 1933,
	483, 1933,
	485, 1933,
	486, 1933,
	487, 1933,
	488, 1933,
	489, 1933,
	490, 1933,
	491, 1933,
	492, 1933,
	493, 1933,
	494, 1933,
	495, 1933,
	496, 1933,
	497, 1933,
	498, 1933,
	499, 1933,
	500, 1933,
	502, 1933,
	503, 1933,
	504, 1933,
	505, 1933,
	506, 1933,
	507, 1933,
	508, 1933,
	509, 1933,
	510, 1933,
	511, 1933,
	512, 1933,
	513, 1933,
	514, 1933,
	515, 1933,
	516, 1933,
	517, 1933,
	518, 1933,
	519, 1933,
	520, 1933,
	521, 1933,
	522, 1933,
	523, 1933,
	524, 1933,
	526, 1933,
	528, 1933,
	529, 1933,
	530, 1933,
	531, 1933,
	532, 1933,
	533, 1933,
	534, 1933,
	535, 1933,
	536, 1933,
	537, 1933,
	538, 1933,
	539, 1933,
	540, 1933,
	541, 1933,
	542, 1933,
	543, 1933,
	544, 1933,
	545, 1933,
	546, 1933,
	547, 1933,
	548, 1933,
	550, 1933,
	551, 1933,
	552, 1933,
	553, 1933,
	554, 1933,
	556, 1933,
	557, 1933,
	558, 1933,
	559, 1933,
	560, 1933,
	561, 1933,
	563, 1933,
	564, 1933,
	566, 1933,
	567, 1933,
	568, 1933,
	569, 1933,
	570, 1933,
	572, 1933,
	574, 1933,
	575, 1933,
	576, 1933,
	577, 1933,
	578, 1933,
	579, 1933,
	580, 1933,
	581, 1933,
	582, 1933,
	583, 1933,
	584, 1933,
	585, 1933,
	586, 1933,
	587, 1933,
	588, 1933,
	589, 1933,
	591, 1933,
	592, 1933,
	593, 1933,
	594, 1933,
	595, 1933,
	596, 1933,
	597, 1933,
	598, 1933,
	599, 1933,
	600, 1933,
	601, 1933,
	602, 1933,
	605, 1933,
	606, 1933,
	607, 1933,
	608, 1933,
	609, 1933,
	610, 1933,
	612, 1933,
	613, 1933,
	614, 1933,
	615, 1933,
	616, 1933,
	617, 1933,
	618, 1933,
	619, 1933,
	620, 1933,
	621, 1933,
	622, 1933,
	623, 1933,
	628, 1933,
	629, 1933,
	630, 1933,
	631, 1933,
	632, 1933,
	633, 1933,
	634, 1933,
	649, 1933,
	656, 1933,
	657, 1933,
	658, 1933,
	666, 1933,
	670, 1933,
	-2, 0,
	-1, 860,
	4, 1643,
	21, 1643,
	22, 1643,
	23, 1643,
	24, 1643,
	25, 1643,
	26, 1643,
	27, 1643,
	28, 1643,
	30, 1643,
	31, 1643,
	37, 1643,
	41, 1643,
	43, 1643,
	44, 1643,
	45, 1643,
	47, 1643,
	48, 1643,
	49, 1643,
	50, 1643,
	51, 1643,
	52, 1643,
	53, 1643,
	54, 1643,
	55, 1643,
	57, 1643,
	58, 1643,
	59, 1643,
	60, 1643,
	62, 1643,
	63, 1643,
	64, 1643,
	65, 1643,
	66, 1643,
	67, 1643,
	68, 1643,
	69, 1643,
	73, 1643,
	74, 1643,
	75, 1643,
	76, 1643,
	78, 1643,
	79, 1643,
	80, 1643,
	84, 1643,
	85, 1643,
	86, 1643,
	87, 1643,
	88, 1643,
	89, 1643,
	90, 1643,
	91, 1643,
	94, 1643,
	95, 1643,
	96, 1643,
	97, 1643,
	98, 1643,
	99, 1643,
	101, 1643,
	103, 1643,
	104, 1643,
	105, 1643,
	106, 1643,
	107, 1643,
	108, 1643,
	109, 1643,
	111, 1643,
	112, 1643,
	113, 1643,
	115, 1643,
	116, 1643,
	117, 1643,
	125, 1643,
	126, 1643,
	127, 1643,
	128, 1643,
	129, 1643,
	131, 1643,
	132, 1643,
	133, 1643,
	134, 1643,
	136, 1643,
	137, 1643,
	138, 1643,
	139, 1643,
	141, 1643,
	142, 1643,
	143, 1643,
	144, 1643,
	146, 1643,
	147, 1643,
	148, 1643,
	151, 1643,
	152, 1643,
	153, 1643,
	155, 1643,
	156, 1643,
	157, 1643,
	159, 1643,
	160, 1643,
	161, 1643,
	163, 1643,
	164, 1643,
	165, 1643,
	166, 1643,
	167, 1643,
	168, 1643,
	169, 1643,
	170, 1643,
	171, 1643,
	172, 1643,
	173, 1643,
	174, 1643,
	175, 1643,
	176, 1643,
	177, 1643,
	178, 1643,
	179, 1643,
	180, 1643,
	181, 1643,
	183, 1643,
	189, 1643,
	190, 1643,
	191, 1643,
	192, 1643,
	196, 1643,
	198, 1643,
	199, 1643,
	200, 1643,
	202, 1643,
	203, 1643,
	206, 1643,
	207, 1643,
	208, 1643,
	209, 1643,
	210, 1643,
	211, 1643,
	212, 1643,
	213, 1643,
	214, 1643,
	215, 1643,
	216, 1643,
	217, 1643,
	218, 1643,
	219, 1643,
	221, 1643,
	222, 1643,
	224, 1643,
	225, 1643,
	227, 1643,
	228, 1643,
	229, 1643,
	230, 1643,
	231, 1643,
	232, 1643,
	233, 1643,
	234, 1643,
	235, 1643,
	236, 1643,
	237, 1643,
	239, 1643,
	240, 1643,
	241, 1643,
	243, 1643,
	244, 1643,
	245, 1643,
	246, 1643,
	247, 1643,
	251, 1643,
	252, 1643,
	253, 1643,
	254, 1643,
	256, 1643,
	257, 1643,
	258, 1643,
	260, 1643,
	261, 1643,
	262, 1643,
	263, 1643,
	264, 1643,
	265, 1643,
	267, 1643,
	269, 1643,
	270, 1643,
	271, 1643,
	273, 1643,
	275, 1643,
	276, 1643,
	277, 1643,
	279, 1643,
	283, 1643,
	284, 1643,
	285, 1643,
	286, 1643,
	287, 1643,
	288, 1643,
	289, 1643,
	291, 1643,
	292, 1643,
	293, 1643,
	295, 1643,
	296, 1643,
	297, 1643,
	299, 1643,
	300, 1643,
	303, 1643,
	304, 1643,
	305, 1643,
	306, 1643,
	307, 1643,
	308, 1643,
	309, 1643,
	312, 1643,
	313, 1643,
	314, 1643,
	315, 1643,
	317, 1643,
	318, 1643,
	319, 1643,
	320, 1643,
	321, 1643,
	322, 1643,
	323, 1643,
	324, 1643,
	325, 1643,
	326, 1643,
	327, 1643,
	328, 1643,
	329, 1643,
	330, 1643,
	331, 1643,
	332, 1643,
	333, 1643,
	334, 1643,
	335, 1643,
	336, 1643,
	337, 1643,
	338, 1643,
	339, 1643,
	341, 1643,
	343, 1643,
	344, 1643,
	345, 1643,
	346, 1643,
	347, 1643,
	348, 1643,
	349, 1643,
	350, 1643,
	351, 1643,
	352, 1643,
	353, 1643,
	354, 1643,
	355, 1643,
	356, 1643,
	357, 1643,
	358, 1643,
	359, 1643,
	361, 1643,
	362, 1643,
	364, 1643,
	365, 1643,
	367, 1643,
	368, 1643,
	369, 1643,
	370, 1643,
	372, 1643,
	373, 1643,
	374, 1643,
	375, 1643,
	376, 1643,
	379, 1643,
	381, 1643,
	384, 1643,
	385, 1643,
	386, 1643,
	389, 1643,
	390, 1643,
	391, 1643,
	393, 1643,
	395, 1643,
	396, 1643,
	397, 1643,
	398, 1643,
	399, 1643,
	400, 1643,
	401, 1643,
	402, 1643,
	403, 1643,
	404, 1643,
	405, 1643,
	406, 1643,
	407, 1643,
	408, 1643,
	410, 1643,
	411, 1643,
	412, 1643,
	413, 1643,
	414, 1643,
	415, 1643,
	416, 1643,
	417, 1643,
	418, 1643,
	419, 1643,
	420, 1643,
	421, 1643,
	422, 1643,
	423, 1643,
	424, 1643,
	426, 1643,
	427, 1643,
	428, 1643,
	430, 1643,
	431, 1643,
	432, 1643,
	433, 1643,
	434, 1643,
	435, 1643,
	436, 1643,
	437, 1643,
	438, 1643,
	439, 1643,
	440, 1643,
	441, 1643,
	442, 1643,
	443, 1643,
	445, 1643,
	447, 1643,
	448, 1643,
	449, 1643,
	455, 1643,
	456, 1643,
	457, 1643,
	459, 1643,
	460, 1643,
	461, 1643,
	462, 1643,
	463, 1643,
	464, 1643,
	465, 1643,
	466, 1643,
	467, 1643,
	468, 1643,
	469, 1643,
	471, 1643,
	472, 1643,
	473, 1643,
	474, 1643,
	475, 1643,
	477, 1643,
	478, 1643,
	479, 1643,
	480, 1643,
	481, 1643,
	482, 1643,
	483, 1643,
	485, 1643,
	486, 1643,
	487, 1643,
	488, 1643,
	489, 1643,
	490, 1643,
	491, 1643,
	492, 1643,
	493, 1643,
	494, 1643,
	495, 1643,
	496, 1643,
	497, 1643,
	498, 1643,
	499, 1643,
	500, 1643,
	502, 1643,
	503, 1643,
	504, 1643,
	505, 1643,
	506, 1643,
	507, 1643,
	509, 1643,
	510, 1643,
	511, 1643,
	512, 1643,
	513, 1643,
	514, 1643,
	515, 1643,
	517, 1643,
	518, 1643,
	519, 1643,
	520, 1643,
	521, 1643,
	522, 1643,
	523, 1643,
	524, 1643,
	526, 1643,
	528, 1643,
	529, 1643,
	530, 1643,
	531, 1643,
	532, 1643,
	533, 1643,
	534, 1643,
	535, 1643,
	536, 1643,
	537, 1643,
	538, 1643,
	539, 1643,
	540, 1643,
	541, 1643,
	542, 1643,
	543, 1643,
	544, 1643,
	545, 1643,
	546, 1643,
	547, 1643,
	548, 1643,
	550, 1643,
	551, 1643,
	553, 1643,
	554, 1643,
	556, 1643,
	557, 1643,
	558, 1643,
	559, 1643,
	560, 1643,
	561, 1643,
	563, 1643,
	564, 1643,
	566, 1643,
	567, 1643,
	568, 1643,
	569, 1643,
	570, 1643,
	572, 1643,
	574, 1643,
	575, 1643,
	576, 1643,
	577, 1643,
	578, 1643,
	579, 1643,
	580, 1643,
	581, 1643,
	583, 1643,
	584, 1643,
	585, 1643,
	586, 1643,
	587, 1643,
	588, 1643,
	589, 1643,
	592, 1643,
	593, 1643,
	594, 1643,
	595, 1643,
	596, 1643,
	597, 1643,
	598, 1643,
	599, 1643,
	600, 1643,
	602, 1643,
	605, 1643,
	606, 1643,
	607, 1643,
	608, 1643,
	609, 1643,
	610, 1643,
	612, 1643,
	613, 1643,
	614, 1643,
	615, 1643,
	616, 1643,
	617, 1643,
	618, 1643,
	619, 1643,
	620, 1643,
	621, 1643,
	622, 1643,
	623, 1643,
	628, 1643,
	629, 1643,
	630, 1643,
	631, 1643,
	632, 1643,
	633, 1643,
	-2, 0,
	-1, 879,
	204, 2752,
	571, 2752,
	648, 2752,
	668, 2752,
	-2, 0,
	-1, 880,
	204, 2737,
	571, 2737,
	648, 2737,
	668, 2737,
	-2, 0,
	-1, 882,
	204, 3038,
	571, 3038,
	648, 3038,
	668, 3038,
	-2, 0,
	-1, 885,
	204, 2879,
	571, 2879,
	648, 2879,
	668, 2879,
	-2, 0,
	-1, 886,
	204, 3085,
	571, 3085,
	648, 3085,
	668, 3085,
	-2, 0,
	-1, 894,
	204, 2907,
	571, 2907,
	648, 2907,
	668, 2907,
	-2, 919,
	-1, 910,
	8, 1056,
	29, 1056,
	656, 1056,
	657, 1056,
	-2, 1061,
	-1, 914,
	1, 2811,
	669, 2811,
	672, 2811,
	-2, 1061,
	-1, 915,
	1, 2866,
	669, 2866,
	672, 2866,
	-2, 1061,
	-1, 918,
	1, 2912,
	669, 2912,
	672, 2912,
	-2, 1054,
	-1, 919,
	1, 2970,
	669, 2970,
	672, 2970,
	-2, 1055,
	-1, 920,
	1, 2816,
	669, 2816,
	672, 2816,
	-2, 1058,
	-1, 921,
	1, 2723,
	669, 2723,
	672, 2723,
	-2, 1059,
	-1, 964,
	668, 2680,
	671, 2680,
	-2, 1302,
	-1, 965,
	668, 2682,
	671, 2682,
	-2, 1303,
	-1, 966,
	668, 2681,
	671, 2681,
	-2, 1304,
	-1, 967,
	671, 2603,
	-2, 1305,
	-1, 993,
	197, 329,
	-2, 0,
	-1, 1015,
	46, 2652,
	-2, 0,
	-1, 1016,
	613, 1621,
	-2, 1387,
	-1, 1033,
	4, 2081,
	21, 2081,
	22, 2081,
	23, 2081,
	24, 2081,
	25, 2081,
	26, 2081,
	27, 2081,
	28, 2081,
	30, 2081,
	31, 2081,
	37, 2081,
	41, 2081,
	43, 2081,
	44, 2081,
	45, 2081,
	47, 2081,
	48, 2081,
	49, 2081,
	50, 2081,
	51, 2081,
	52, 2081,
	53, 2081,
	54, 2081,
	55, 2081,
	57, 2081,
	58, 2081,
	59, 2081,
	60, 2081,
	62, 2081,
	63, 2081,
	64, 2081,
	65, 2081,
	66, 2081,
	67, 2081,
	68, 2081,
	69, 2081,
	73, 2081,
	74, 2081,
	75, 2081,
	76, 2081,
	78, 2081,
	79, 2081,
	80, 2081,
	84, 2081,
	85, 2081,
	86, 2081,
	87, 2081,
	88, 2081,
	89, 2081,
	90, 2081,
	91, 2081,
	94, 2081,
	95, 2081,
	96, 2081,
	97, 2081,
	98, 2081,
	99, 2081,
	101, 2081,
	103, 2081,
	104, 2081,
	105, 2081,
	106, 2081,
	107, 2081,
	108, 2081,
	109, 2081,
	111, 2081,
	112, 2081,
	113, 2081,
	115, 2081,
	116, 2081,
	117, 2081,
	125, 2081,
	126, 2081,
	127, 2081,
	128, 2081,
	129, 2081,
	131, 2081,
	132, 2081,
	133, 2081,
	134, 2081,
	136, 2081,
	137, 2081,
	138, 2081,
	139, 2081,
	141, 2081,
	142, 2081,
	143, 2081,
	144, 2081,
	146, 2081,
	147, 2081,
	148, 2081,
	151, 2081,
	152, 2081,
	153, 2081,
	155, 2081,
	156, 2081,
	157, 2081,
	159, 2081,
	160, 2081,
	161, 2081,
	163, 2081,
	164, 2081,
	165, 2081,
	166, 2081,
	167, 2081,
	168, 2081,
	169, 2081,
	170, 2081,
	171, 2081,
	172, 2081,
	173, 2081,
	174, 2081,
	175, 2081,
	176, 2081,
	177, 2081,
	178, 2081,
	179, 2081,
	180, 2081,
	181, 2081,
	183, 2081,
	189, 2081,
	190, 2081,
	191, 2081,
	192, 2081,
	196, 2081,
	198, 2081,
	199, 2081,
	200, 2081,
	202, 2081,
	203, 2081,
	206, 2081,
	207, 2081,
	208, 2081,
	209, 2081,
	210, 2081,
	211, 2081,
	212, 2081,
	213, 2081,
	214, 2081,
	215, 2081,
	216, 2081,
	217, 2081,
	218, 2081,
	219, 2081,
	221, 2081,
	222, 2081,
	224, 2081,
	225, 2081,
	227, 2081,
	228, 2081,
	229, 2081,
	230, 2081,
	231, 2081,
	232, 2081,
	233, 2081,
	234, 2081,
	235, 2081,
	236, 2081,
	237, 2081,
	239, 2081,
	240, 2081,
	241, 2081,
	243, 2081,
	244, 2081,
	245, 2081,
	246, 2081,
	247, 2081,
	251, 2081,
	252, 2081,
	253, 2081,
	254, 2081,
	256, 2081,
	257, 2081,
	258, 2081,
	260, 2081,
	261, 2081,
	262, 2081,
	263, 2081,
	264, 2081,
	265, 2081,
	267, 2081,
	269, 2081,
	270, 2081,
	271, 2081,
	273, 2081,
	275, 2081,
	276, 2081,
	277, 2081,
	279, 2081,
	283, 2081,
	284, 2081,
	285, 2081,
	286, 2081,
	287, 2081,
	288, 2081,
	289, 2081,
	291, 2081,
	292, 2081,
	293, 2081,
	295, 2081,
	296, 2081,
	297, 2081,
	299, 2081,
	300, 2081,
	303, 2081,
	304, 2081,
	305, 2081,
	306, 2081,
	307, 2081,
	308, 2081,
	309, 2081,
	312, 2081,
	313, 2081,
	314, 2081,
	315, 2081,
	317, 2081,
	318, 2081,
	319, 2081,
	320, 2081,
	321, 2081,
	322, 2081,
	323, 2081,
	324, 2081,
	325, 2081,
	326, 2081,
	327, 2081,
	328, 2081,
	329, 2081,
	330, 2081,
	331, 2081,
	332, 2081,
	333, 2081,
	334, 2081,
	335, 2081,
	336, 2081,
	337, 2081,
	338, 2081,
	339, 2081,
	341, 2081,
	343, 2081,
	344, 2081,
	345, 2081,
	346, 2081,
	347, 2081,
	348, 2081,
	349, 2081,
	350, 2081,
	351, 2081,
	352, 2081,
	353, 2081,
	354, 2081,
	355, 2081,
	356, 2081,
	357, 2081,
	358, 2081,
	359, 2081,
	361, 2081,
	362, 2081,
	364, 2081,
	365, 2081,
	367, 2081,
	368, 2081,
	369, 2081,
	370, 2081,
	372, 2081,
	373, 2081,
	374, 2081,
	375, 2081,
	376, 2081,
	379, 2081,
	381, 2081,
	384, 2081,
	385, 2081,
	386, 2081,
	389, 2081,
	390, 2081,
	391, 2081,
	393, 2081,
	395, 2081,
	396, 2081,
	397, 2081,
	398, 2081,
	399, 2081,
	400, 2081,
	401, 2081,
	402, 2081,
	403, 2081,
	404, 2081,
	405, 2081,
	406, 2081,
	407, 2081,
	408, 2081,
	410, 2081,
	411, 2081,
	412, 2081,
	413, 2081,
	414, 2081,
	415, 2081,
	416, 2081,
	417, 2081,
	418, 2081,
	419, 2081,
	420, 2081,
	421, 2081,
	422, 2081,
	423, 2081,
	424, 2081,
	426, 2081,
	427, 2081,
	428, 2081,
	430, 2081,
	431, 2081,
	432, 2081,
	433, 2081,
	434, 2081,
	435, 2081,
	436, 2081,
	437, 2081,
	438, 2081,
	439, 2081,
	440, 2081,
	441, 2081,
	442, 2081,
	443, 2081,
	445, 2081,
	447, 2081,
	448, 2081,
	449, 2081,
	455, 2081,
	456, 2081,
	457, 2081,
	459, 2081,
	460, 2081,
	461, 2081,
	462, 2081,
	463, 2081,
	464, 2081,
	465, 2081,
	466, 2081,
	467, 2081,
	468, 2081,
	469, 2081,
	471, 2081,
	472, 2081,
	473, 2081,
	474, 2081,
	475, 2081,
	477, 2081,
	478, 2081,
	479, 2081,
	480, 2081,
	481, 2081,
	482, 2081,
	483, 2081,
	485, 2081,
	486, 2081,
	487, 2081,
	488, 2081,
	489, 2081,
	490, 2081,
	491, 2081,
	492, 2081,
	493, 2081,
	494, 2081,
	495, 2081,
	496, 2081,
	497, 2081,
	498, 2081,
	499, 2081,
	500, 2081,
	502, 2081,
	503, 2081,
	504, 2081,
	505, 2081,
	506, 2081,
	507, 2081,
	509, 2081,
	510, 2081,
	511, 2081,
	512, 2081,
	513, 2081,
	514, 2081,
	515, 2081,
	517, 2081,
	518, 2081,
	519, 2081,
	520, 2081,
	521, 2081,
	522, 2081,
	523, 2081,
	524, 2081,
	526, 2081,
	528, 2081,
	529, 2081,
	530, 2081,
	531, 2081,
	532, 2081,
	533, 2081,
	534, 2081,
	535, 2081,
	536, 2081,
	537, 2081,
	538, 2081,
	539, 2081,
	540, 2081,
	541, 2081,
	542, 2081,
	543, 2081,
	544, 2081,
	545, 2081,
	546, 2081,
	547, 2081,
	548, 2081,
	550, 2081,
	551, 2081,
	553, 2081,
	554, 2081,
	556, 2081,
	557, 2081,
	558, 2081,
	559, 2081,
	560, 2081,
	561, 2081,
	563, 2081,
	564, 2081,
	566, 2081,
	567, 2081,
	568, 2081,
	569, 2081,
	570, 2081,
	572, 2081,
	574, 2081,
	575, 2081,
	576, 2081,
	577, 2081,
	578, 2081,
	579, 2081,
	580, 2081,
	581, 2081,
	583, 2081,
	584, 2081,
	585, 2081,
	586, 2081,
	587, 2081,
	588, 2081,
	589, 2081,
	592, 2081,
	593, 2081,
	594, 2081,
	595, 2081,
	596, 2081,
	597, 2081,
	598, 2081,
	599, 2081,
	600, 2081,
	602, 2081,
	605, 2081,
	606, 2081,
	607, 2081,
	608, 2081,
	609, 2081,
	610, 2081,
	612, 2081,
	613, 2081,
	614, 2081,
	615, 2081,
	616, 2081,
	617, 2081,
	618, 2081,
	619, 2081,
	620, 2081,
	621, 2081,
	622, 2081,
	623, 2081,
	628, 2081,
	629, 2081,
	630, 2081,
	631, 2081,
	632, 2081,
	633, 2081,
	-2, 0,
	-1, 1044,
	288, 582,
	-2, 0,
	-1, 1124,
	204, 1101,
	-2, 0,
	-1, 1125,
	432, 1156,
	507, 1156,
	554, 1156,
	576, 1156,
	-2, 0,
	-1, 1126,
	432, 1155,
	507, 1155,
	554, 1155,
	576, 1155,
	-2, 1074,
	-1, 1130,
	1, 1212,
	665, 1212,
	667, 1212,
	669, 1212,
	672, 1212,
	-2, 0,
	-1, 1132,
	1, 1129,
	665, 1129,
	667, 1129,
	669, 1129,
	672, 1129,
	-2, 0,
	-1, 1133,
	1, 1133,
	665, 1133,
	667, 1133,
	669, 1133,
	672, 1133,
	-2, 0,
	-1, 1134,
	1, 1291,
	197, 1291,
	665, 1291,
	667, 1291,
	669, 1291,
	672, 1291,
	-2, 0,
	-1, 1143,
	1, 1161,
	665, 1161,
	667, 1161,
	669, 1161,
	672, 1161,
	-2, 0,
	-1, 1150,
	1, 1212,
	665, 1212,
	667, 1212,
	669, 1212,
	672, 1212,
	-2, 0,
	-1, 1151,
	1, 1205,
	665, 1205,
	667, 1205,
	669, 1205,
	672, 1205,
	-2, 0,
	-1, 1152,
	1, 1214,
	665, 1214,
	667, 1214,
	669, 1214,
	672, 1214,
	-2, 0,
	-1, 1153,
	1, 1217,
	665, 1217,
	667, 1217,
	669, 1217,
	672, 1217,
	-2, 0,
	-1, 1161,
	1, 1254,
	665, 1254,
	667, 1254,
	669, 1254,
	672, 1254,
	-2, 0,
	-1, 1162,
	1, 1256,
	665, 1256,
	667, 1256,
	669, 1256,
	672, 1256,
	-2, 0,
	-1, 1167,
	1, 1284,
	665, 1284,
	667, 1284,
	669, 1284,
	672, 1284,
	-2, 0,
	-1, 1221,
	184, 1937,
	197, 1937,
	302, 1937,
	377, 1937,
	-2, 1873,
	-1, 1238,
	184, 1936,
	197, 1936,
	302, 1936,
	377, 1936,
	-2, 1870,
	-1, 1267,
	668, 2679,
	-2, 927,
	-1, 1274,
	666, 2669,
	-2, 3301,
	-1, 1297,
	5, 2671,
	666, 2668,
	-2, 2659,
	-1, 1305,
	5, 2692,
	666, 2689,
	-2, 2680,
	-1, 1306,
	5, 2693,
	666, 2690,
	-2, 2681,
	-1, 1316,
	668, 2677,
	-2, 2658,
	-1, 1317,
	666, 3200,
	-2, 2678,
	-1, 1340,
	5, 2694,
	38, 2694,
	135, 2694,
	648, 2694,
	664, 2694,
	667, 2694,
	668, 2694,
	671, 2694,
	-2, 3199,
	-1, 1341,
	5, 2156,
	-2, 3169,
	-1, 1342,
	5, 2157,
	-2, 3170,
	-1, 1343,
	5, 2158,
	-2, 3185,
	-1, 1344,
	5, 2159,
	-2, 3147,
	-1, 1345,
	5, 2160,
	-2, 3182,
	-1, 1346,
	5, 2168,
	-2, 3160,
	-1, 1347,
	5, 2155,
	-2, 3156,
	-1, 1348,
	5, 2155,
	-2, 3155,
	-1, 1349,
	5, 2155,
	-2, 3175,
	-1, 1350,
	5, 2166,
	-2, 3149,
	-1, 1351,
	5, 2171,
	666, 2183,
	-2, 3148,
	-1, 1352,
	5, 2173,
	-2, 3195,
	-1, 1355,
	5, 2195,
	-2, 3188,
	-1, 1356,
	5, 2187,
	-2, 3189,
	-1, 1357,
	5, 2195,
	-2, 3190,
	-1, 1358,
	5, 2191,
	-2, 3191,
	-1, 1359,
	5, 2139,
	-2, 3161,
	-1, 1360,
	5, 2140,
	-2, 3162,
	-1, 1361,
	5, 2141,
	-2, 3150,
	-1, 1389,
	5, 2178,
	666, 2178,
	-2, 3196,
	-1, 1390,
	5, 2179,
	666, 2179,
	-2, 3186,
	-1, 1391,
	5, 2180,
	614, 2180,
	666, 2180,
	-2, 3151,
	-1, 1392,
	5, 2181,
	614, 2181,
	666, 2181,
	-2, 3152,
	-1, 1430,
	666, 2689,
	-2, 2680,
	-1, 1431,
	666, 2690,
	-2, 2681,
	-1, 1539,
	204, 3085,
	571, 3085,
	648, 3085,
	668, 3085,
	-2, 0,
	-1, 1544,
	1, 903,
	669, 903,
	672, 903,
	-2, 1779,
	-1, 1591,
	1, 1774,
	669, 1774,
	672, 1774,
	-2, 1779,
	-1, 1693,
	397, 2653,
	459, 2653,
	509, 2653,
	658, 2653,
	-2, 2641,
	-1, 1701,
	204, 170,
	295, 170,
	361, 170,
	623, 170,
	-2, 3080,
	-1, 1702,
	204, 171,
	295, 171,
	361, 171,
	623, 171,
	-2, 2800,
	-1, 1703,
	204, 172,
	295, 172,
	361, 172,
	623, 172,
	-2, 2993,
	-1, 1709,
	670, 2653,
	-2, 2655,
	-1, 1712,
	25, 3017,
	242, 3017,
	-2, 0,
	-1, 1733,
	1, 1618,
	464, 1572,
	509, 1572,
	640, 1572,
	645, 1572,
	665, 1618,
	667, 1618,
	669, 1618,
	672, 1618,
	-2, 1922,
	-1, 1739,
	220, 1718,
	242, 1718,
	475, 1718,
	-2, 0,
	-1, 1807,
	46, 2651,
	-2, 1349,
	-1, 1814,
	1, 1618,
	665, 1618,
	667, 1618,
	669, 1618,
	672, 1618,
	-2, 1922,
	-1, 1817,
	441, 1386,
	613, 1386,
	-2, 481,
	-1, 1823,
	4, 1643,
	21, 1643,
	22, 1643,
	23, 1643,
	24, 1643,
	25, 1643,
	26, 1643,
	27, 1643,
	28, 1643,
	30, 1643,
	31, 1643,
	37, 1643,
	41, 1643,
	43, 1643,
	44, 1643,
	45, 1643,
	47, 1643,
	48, 1643,
	49, 1643,
	50, 1643,
	51, 1643,
	52, 1643,
	53, 1643,
	54, 1643,
	55, 1643,
	57, 1643,
	58, 1643,
	59, 1643,
	60, 1643,
	62, 1643,
	63, 1643,
	64, 1643,
	65, 1643,
	66, 1643,
	67, 1643,
	68, 1643,
	69, 1643,
	73, 1643,
	74, 1643,
	75, 1643,
	76, 1643,
	78, 1643,
	79, 1643,
	80, 1643,
	84, 1643,
	85, 1643,
	86, 1643,
	87, 1643,
	88, 1643,
	89, 1643,
	90, 1643,
	91, 1643,
	94, 1643,
	95, 1643,
	96, 1643,
	97, 1643,
	98, 1643,
	99, 1643,
	101, 1643,
	103, 1643,
	104, 1643,
	105, 1643,
	106, 1643,
	107, 1643,
	108, 1643,
	109, 1643,
	111, 1643,
	112, 1643,
	113, 1643,
	115, 1643,
	116, 1643,
	117, 1643,
	125, 1643,
	126, 1643,
	127, 1643,
	128, 1643,
	129, 1643,
	131, 1643,
	132, 1643,
	133, 1643,
	134, 1643,
	136, 1643,
	137, 1643,
	138, 1643,
	139, 1643,
	141, 1643,
	142, 1643,
	143, 1643,
	144, 1643,
	146, 1643,
	147, 1643,
	148, 1643,
	151, 1643,
	152, 1643,
	153, 1643,
	155, 1643,
	156, 1643,
	157, 1643,
	159, 1643,
	160, 1643,
	161, 1643,
	163, 1643,
	164, 1643,
	165, 1643,
	166, 1643,
	167, 1643,
	168, 1643,
	169, 1643,
	170, 1643,
	171, 1643,
	172, 1643,
	173, 1643,
	174, 1643,
	175, 1643,
	176, 1643,
	177, 1643,
	178, 1643,
	179, 1643,
	180, 1643,
	181, 1643,
	189, 1643,
	190, 1643,
	191, 1643,
	192, 1643,
	196, 1643,
	198, 1643,
	199, 1643,
	200, 1643,
	202, 1643,
	203, 1643,
	206, 1643,
	207, 1643,
	208, 1643,
	209, 1643,
	210, 1643,
	211, 1643,
	212, 1643,
	213, 1643,
	214, 1643,
	215, 1643,
	216, 1643,
	217, 1643,
	218, 1643,
	219, 1643,
	221, 1643,
	222, 1643,
	224, 1643,
	225, 1643,
	227, 1643,
	228, 1643,
	229, 1643,
	230, 1643,
	231, 1643,
	232, 1643,
	233, 1643,
	234, 1643,
	235, 1643,
	236, 1643,
	237, 1643,
	239, 1643,
	240, 1643,
	241, 1643,
	243, 1643,
	244, 1643,
	245, 1643,
	246, 1643,
	247, 1643,
	251, 1643,
	252, 1643,
	253, 1643,
	254, 1643,
	260, 1643,
	261, 1643,
	262, 1643,
	263, 1643,
	264, 1643,
	265, 1643,
	267, 1643,
	269, 1643,
	270, 1643,
	271, 1643,
	273, 1643,
	275, 1643,
	276, 1643,
	277, 1643,
	279, 1643,
	283, 1643,
	284, 1643,
	285, 1643,
	286, 1643,
	287, 1643,
	288, 1643,
	289, 1643,
	291, 1643,
	292, 1643,
	293, 1643,
	295, 1643,
	296, 1643,
	297, 1643,
	299, 1643,
	300, 1643,
	303, 1643,
	304, 1643,
	305, 1643,
	306, 1643,
	307, 1643,
	308, 1643,
	309, 1643,
	312, 1643,
	313, 1643,
	314, 1643,
	315, 1643,
	317, 1643,
	318, 1643,
	319, 1643,
	320, 1643,
	321, 1643,
	322, 1643,
	323, 1643,
	324, 1643,
	325, 1643,
	326, 1643,
	327, 1643,
	328, 1643,
	329, 1643,
	330, 1643,
	331, 1643,
	332, 1643,
	333, 1643,
	334, 1643,
	335, 1643,
	336, 1643,
	337, 1643,
	338, 1643,
	339, 1643,
	341, 1643,
	343, 1643,
	344, 1643,
	345, 1643,
	346, 1643,
	347, 1643,
	348, 1643,
	349, 1643,
	350, 1643,
	351, 1643,
	352, 1643,
	353, 1643,
	354, 1643,
	355, 1643,
	356, 1643,
	357, 1643,
	358, 1643,
	359, 1643,
	361, 1643,
	362, 1643,
	364, 1643,
	367, 1643,
	368, 1643,
	369, 1643,
	370, 1643,
	372, 1643,
	373, 1643,
	374, 1643,
	375, 1643,
	376, 1643,
	379, 1643,
	381, 1643,
	382, 1643,
	384, 1643,
	385, 1643,
	386, 1643,
	389, 1643,
	390, 1643,
	391, 1643,
	393, 1643,
	395, 1643,
	396, 1643,
	397, 1643,
	398, 1643,
	399, 1643,
	400, 1643,
	401, 1643,
	402, 1643,
	403, 1643,
	404, 1643,
	405, 1643,
	406, 1643,
	407, 1643,
	408, 1643,
	410, 1643,
	411, 1643,
	412, 1643,
	413, 1643,
	414, 1643,
	415, 1643,
	416, 1643,
	417, 1643,
	418, 1643,
	419, 1643,
	420, 1643,
	421, 1643,
	422, 1643,
	423, 1643,
	424, 1643,
	426, 1643,
	427, 1643,
	428, 1643,
	430, 1643,
	431, 1643,
	432, 1643,
	433, 1643,
	434, 1643,
	435, 1643,
	436, 1643,
	437, 1643,
	438, 1643,
	439, 1643,
	440, 1643,
	441, 1643,
	442, 1643,
	443, 1643,
	445, 1643,
	447, 1643,
	448, 1643,
	449, 1643,
	455, 1643,
	456, 1643,
	457, 1643,
	459, 1643,
	460, 1643,
	461, 1643,
	462, 1643,
	463, 1643,
	464, 1643,
	465, 1643,
	466, 1643,
	467, 1643,
	468, 1643,
	469, 1643,
	471, 1643,
	472, 1643,
	473, 1643,
	474, 1643,
	475, 1643,
	477, 1643,
	478, 1643,
	479, 1643,
	480, 1643,
	481, 1643,
	482, 1643,
	483, 1643,
	485, 1643,
	486, 1643,
	487, 1643,
	488, 1643,
	489, 1643,
	490, 1643,
	491, 1643,
	492, 1643,
	493, 1643,
	494, 1643,
	495, 1643,
	496, 1643,
	497, 1643,
	498, 1643,
	499, 1643,
	500, 1643,
	502, 1643,
	503, 1643,
	504, 1643,
	505, 1643,
	506, 1643,
	507, 1643,
	509, 1643,
	510, 1643,
	511, 1643,
	512, 1643,
	513, 1643,
	514, 1643,
	515, 1643,
	517, 1643,
	518, 1643,
	519, 1643,
	520, 1643,
	521, 1643,
	522, 1643,
	523, 1643,
	524, 1643,
	526, 1643,
	528, 1643,
	529, 1643,
	530, 1643,
	531, 1643,
	532, 1643,
	533, 1643,
	534, 1643,
	535, 1643,
	536, 1643,
	537, 1643,
	538, 1643,
	539, 1643,
	540, 1643,
	541, 1643,
	542, 1643,
	543, 1643,
	544, 1643,
	545, 1643,
	546, 1643,
	547, 1643,
	548, 1643,
	550, 1643,
	551, 1643,
	553, 1643,
	554, 1643,
	556, 1643,
	557, 1643,
	558, 1643,
	559, 1643,
	560, 1643,
	561, 1643,
	563, 1643,
	564, 1643,
	566, 1643,
	567, 1643,
	568, 1643,
	569, 1643,
	570, 1643,
	572, 1643,
	574, 1643,
	575, 1643,
	576, 1643,
	577, 1643,
	578, 1643,
	579, 1643,
	580, 1643,
	581, 1643,
	583, 1643,
	584, 1643,
	585, 1643,
	586, 1643,
	587, 1643,
	588, 1643,
	589, 1643,
	592, 1643,
	593, 1643,
	594, 1643,
	595, 1643,
	596, 1643,
	597, 1643,
	598, 1643,
	599, 1643,
	600, 1643,
	602, 1643,
	605, 1643,
	606, 1643,
	607, 1643,
	608, 1643,
	609, 1643,
	610, 1643,
	612, 1643,
	613, 1643,
	614, 1643,
	615, 1643,
	616, 1643,
	617, 1643,
	618, 1643,
	619, 1643,
	620, 1643,
	621, 1643,
	622, 1643,
	623, 1643,
	628, 1643,
	629, 1643,
	630, 1643,
	631, 1643,
	632, 1643,
	633, 1643,
	-2, 0,
	-1, 1846,
	1, 729,
	665, 729,
	667, 729,
	669, 729,
	672, 729,
	-2, 1893,
	-1, 1849,
	4, 3194,
	11, 3194,
	12, 3194,
	14, 3194,
	15, 3194,
	16, 3194,
	17, 3194,
	18, 3194,
	19, 3194,
	21, 3194,
	22, 3194,
	23, 3194,
	24, 3194,
	25, 3194,
	26, 3194,
	27, 3194,
	28, 3194,
	30, 3194,
	31, 3194,
	34, 3194,
	35, 3194,
	37, 3194,
	39, 3194,
	41, 3194,
	43, 3194,
	44, 3194,
	45, 3194,
	47, 3194,
	48, 3194,
	49, 3194,
	50, 3194,
	51, 3194,
	52, 3194,
	53, 3194,
	54, 3194,
	55, 3194,
	57, 3194,
	58, 3194,
	59, 3194,
	60, 3194,
	62, 3194,
	63, 3194,
	64, 3194,
	65, 3194,
	66, 3194,
	67, 3194,
	68, 3194,
	69, 3194,
	72, 3194,
	73, 3194,
	74, 3194,
	75, 3194,
	76, 3194,
	78, 3194,
	79, 3194,
	80, 3194,
	81, 3194,
	84, 3194,
	85, 3194,
	86, 3194,
	87, 3194,
	88, 3194,
	89, 3194,
	90, 3194,
	91, 3194,
	92, 3194,
	94, 3194,
	95, 3194,
	96, 3194,
	97, 3194,
	98, 3194,
	99, 3194,
	101, 3194,
	102, 3194,
	103, 3194,
	104, 3194,
	105, 3194,
	106, 3194,
	107, 3194,
	108, 3194,
	109, 3194,
	111, 3194,
	112, 3194,
	113, 3194,
	114, 3194,
	115, 3194,
	116, 3194,
	117, 3194,
	125, 3194,
	126, 3194,
	127, 3194,
	128, 3194,
	129, 3194,
	131, 3194,
	132, 3194,
	133, 3194,
	134, 3194,
	136, 3194,
	137, 3194,
	138, 3194,
	139, 3194,
	141, 3194,
	142, 3194,
	143, 3194,
	144, 3194,
	146, 3194,
	147, 3194,
	148, 3194,
	151, 3194,
	152, 3194,
	153, 3194,
	155, 3194,
	156, 3194,
	157, 3194,
	159, 3194,
	160, 3194,
	161, 3194,
	163, 3194,
	164, 3194,
	165, 3194,
	166, 3194,
	167, 3194,
	168, 3194,
	169, 3194,
	170, 3194,
	171, 3194,
	172, 3194,
	173, 3194,
	174, 3194,
	175, 3194,
	176, 3194,
	177, 3194,
	178, 3194,
	179, 3194,
	180, 3194,
	181, 3194,
	185, 3194,
	186, 3194,
	187, 3194,
	188, 3194,
	189, 3194,
	190, 3194,
	191, 3194,
	192, 3194,
	195, 3194,
	196, 3194,
	198, 3194,
	199, 3194,
	200, 3194,
	202, 3194,
	203, 3194,
	205, 3194,
	206, 3194,
	207, 3194,
	208, 3194,
	209, 3194,
	210, 3194,
	211, 3194,
	212, 3194,
	213, 3194,
	214, 3194,
	215, 3194,
	216, 3194,
	217, 3194,
	218, 3194,
	219, 3194,
	221, 3194,
	222, 3194,
	224, 3194,
	225, 3194,
	227, 3194,
	228, 3194,
	229, 3194,
	230, 3194,
	231, 3194,
	232, 3194,
	233, 3194,
	234, 3194,
	235, 3194,
	236, 3194,
	237, 3194,
	238, 3194,
	239, 3194,
	240, 3194,
	241, 3194,
	242, 3194,
	243, 3194,
	244, 3194,
	245, 3194,
	246, 3194,
	247, 3194,
	249, 3194,
	250, 3194,
	251, 3194,
	252, 3194,
	253, 3194,
	254, 3194,
	259, 3194,
	260, 3194,
	261, 3194,
	262, 3194,
	263, 3194,
	264, 3194,
	265, 3194,
	267, 3194,
	269, 3194,
	270, 3194,
	271, 3194,
	272, 3194,
	273, 3194,
	274, 3194,
	275, 3194,
	276, 3194,
	277, 3194,
	278, 3194,
	279, 3194,
	281, 3194,
	282, 3194,
	283, 3194,
	284, 3194,
	285, 3194,
	286, 3194,
	287, 3194,
	288, 3194,
	289, 3194,
	291, 3194,
	292, 3194,
	293, 3194,
	295, 3194,
	296, 3194,
	297, 3194,
	298, 3194,
	299, 3194,
	300, 3194,
	301, 3194,
	303, 3194,
	304, 3194,
	305, 3194,
	306, 3194,
	307, 3194,
	308, 3194,
	309, 3194,
	312, 3194,
	313, 3194,
	314, 3194,
	315, 3194,
	316, 3194,
	317, 3194,
	318, 3194,
	319, 3194,
	320, 3194,
	321, 3194,
	322, 3194,
	323, 3194,
	324, 3194,
	325, 3194,
	326, 3194,
	327, 3194,
	328, 3194,
	329, 3194,
	330, 3194,
	331, 3194,
	332, 3194,
	333, 3194,
	334, 3194,
	335, 3194,
	336, 3194,
	337, 3194,
	338, 3194,
	339, 3194,
	341, 3194,
	342, 3194,
	343, 3194,
	344, 3194,
	345, 3194,
	346, 3194,
	347, 3194,
	348, 3194,
	349, 3194,
	350, 3194,
	351, 3194,
	352, 3194,
	353, 3194,
	354, 3194,
	355, 3194,
	356, 3194,
	357, 3194,
	358, 3194,
	359, 3194,
	361, 3194,
	362, 3194,
	364, 3194,
	366, 3194,
	367, 3194,
	368, 3194,
	369, 3194,
	370, 3194,
	372, 3194,
	373, 3194,
	374, 3194,
	375, 3194,
	376, 3194,
	379, 3194,
	381, 3194,
	384, 3194,
	385, 3194,
	386, 3194,
	387, 3194,
	389, 3194,
	390, 3194,
	391, 3194,
	393, 3194,
	395, 3194,
	396, 3194,
	397, 3194,
	398, 3194,
	399, 3194,
	400, 3194,
	401, 3194,
	402, 3194,
	403, 3194,
	404, 3194,
	405, 3194,
	406, 3194,
	407, 3194,
	408, 3194,
	410, 3194,
	411, 3194,
	412, 3194,
	413, 3194,
	414, 3194,
	415, 3194,
	416, 3194,
	417, 3194,
	418, 3194,
	419, 3194,
	420, 3194,
	421, 3194,
	422, 3194,
	423, 3194,
	424, 3194,
	426, 3194,
	427, 3194,
	428, 3194,
	430, 3194,
	431, 3194,
	432, 3194,
	433, 3194,
	434, 3194,
	435, 3194,
	436, 3194,
	437, 3194,
	438, 3194,
	439, 3194,
	440, 3194,
	441, 3194,
	442, 3194,
	443, 3194,
	445, 3194,
	447, 3194,
	448, 3194,
	449, 3194,
	455, 3194,
	456, 3194,
	457, 3194,
	458, 3194,
	459, 3194,
	460, 3194,
	461, 3194,
	462, 3194,
	463, 3194,
	464, 3194,
	465, 3194,
	466, 3194,
	467, 3194,
	468, 3194,
	469, 3194,
	471, 3194,
	472, 3194,
	473, 3194,
	474, 3194,
	475, 3194,
	476, 3194,
	477, 3194,
	478, 3194,
	479, 3194,
	480, 3194,
	481, 3194,
	482, 3194,
	483, 3194,
	484, 3194,
	485, 3194,
	486, 3194,
	487, 3194,
	488, 3194,
	489, 3194,
	490, 3194,
	491, 3194,
	492, 3194,
	493, 3194,
	494, 3194,
	495, 3194,
	496, 3194,
	497, 3194,
	498, 3194,
	499, 3194,
	500, 3194,
	502, 3194,
	503, 3194,
	504, 3194,
	505, 3194,
	506, 3194,
	507, 3194,
	509, 3194,
	510, 3194,
	511, 3194,
	512, 3194,
	513, 3194,
	514, 3194,
	515, 3194,
	516, 3194,
	517, 3194,
	518, 3194,
	519, 3194,
	520, 3194,
	521, 3194,
	522, 3194,
	523, 3194,
	524, 3194,
	526, 3194,
	528, 3194,
	529, 3194,
	530, 3194,
	531, 3194,
	532, 3194,
	533, 3194,
	534, 3194,
	535, 3194,
	536, 3194,
	537, 3194,
	538, 3194,
	539, 3194,
	540, 3194,
	541, 3194,
	542, 3194,
	543, 3194,
	544, 3194,
	545, 3194,
	546, 3194,
	547, 3194,
	548, 3194,
	550, 3194,
	551, 3194,
	552, 3194,
	553, 3194,
	554, 3194,
	556, 3194,
	557, 3194,
	558, 3194,
	559, 3194,
	560, 3194,
	561, 3194,
	563, 3194,
	564, 3194,
	566, 3194,
	567, 3194,
	568, 3194,
	569, 3194,
	570, 3194,
	572, 3194,
	574, 3194,
	575, 3194,
	576, 3194,
	577, 3194,
	578, 3194,
	579, 3194,
	580, 3194,
	581, 3194,
	583, 3194,
	584, 3194,
	585, 3194,
	586, 3194,
	587, 3194,
	588, 3194,
	589, 3194,
	592, 3194,
	593, 3194,
	594, 3194,
	595, 3194,
	596, 3194,
	597, 3194,
	598, 3194,
	599, 3194,
	600, 3194,
	602, 3194,
	605, 3194,
	606, 3194,
	607, 3194,
	608, 3194,
	609, 3194,
	610, 3194,
	612, 3194,
	613, 3194,
	614, 3194,
	615, 3194,
	616, 3194,
	617, 3194,
	618, 3194,
	619, 3194,
	620, 3194,
	621, 3194,
	622, 3194,
	623, 3194,
	628, 3194,
	629, 3194,
	630, 3194,
	631, 3194,
	632, 3194,
	633, 3194,
	634, 3194,
	636, 3194,
	646, 3194,
	647, 3194,
	648, 3194,
	649, 3194,
	650, 3194,
	651, 3194,
	653, 3194,
	654, 3194,
	655, 3194,
	656, 3194,
	657, 3194,
	658, 3194,
	659, 3194,
	660, 3194,
	661, 3194,
	664, 3194,
	667, 3194,
	668, 3194,
	670, 3194,
	671, 3194,
	-2, 0,
	-1, 1854,
	204, 3038,
	571, 3038,
	648, 3038,
	668, 3038,
	-2, 0,
	-1, 1902,
	204, 1102,
	-2, 3028,
	-1, 1903,
	204, 1103,
	-2, 2809,
	-1, 1904,
	204, 1104,
	-2, 2979,
	-1, 1905,
	204, 1105,
	-2, 3108,
	-1, 1910,
	432, 1156,
	507, 1156,
	554, 1156,
	576, 1156,
	-2, 0,
	-1, 1921,
	1, 1718,
	242, 1718,
	665, 1718,
	667, 1718,
	669, 1718,
	672, 1718,
	-2, 0,
	-1, 1939,
	1, 1151,
	665, 1151,
	667, 1151,
	669, 1151,
	672, 1151,
	-2, 0,
	-1, 1940,
	1, 1195,
	665, 1195,
	667, 1195,
	669, 1195,
	672, 1195,
	-2, 0,
	-1, 1941,
	1, 1207,
	665, 1207,
	667, 1207,
	669, 1207,
	672, 1207,
	-2, 0,
	-1, 1944,
	1, 1160,
	665, 1160,
	667, 1160,
	669, 1160,
	672, 1160,
	-2, 0,
	-1, 1946,
	1, 1166,
	665, 1166,
	667, 1166,
	669, 1166,
	672, 1166,
	-2, 0,
	-1, 1949,
	1, 1162,
	665, 1162,
	667, 1162,
	669, 1162,
	672, 1162,
	-2, 0,
	-1, 1954,
	1, 1176,
	665, 1176,
	667, 1176,
	669, 1176,
	672, 1176,
	-2, 0,
	-1, 1993,
	1, 3017,
	665, 3017,
	667, 3017,
	668, 3017,
	669, 3017,
	672, 3017,
	-2, 0,
	-1, 1998,
	1, 1265,
	665, 1265,
	667, 1265,
	669, 1265,
	672, 1265,
	-2, 0,
	-1, 2018,
	184, 1936,
	197, 1936,
	302, 1936,
	377, 1936,
	-2, 1874,
	-1, 2120,
	162, 1895,
	184, 1895,
	197, 1895,
	266, 1895,
	302, 1895,
	377, 1895,
	388, 1895,
	590, 1895,
	-2, 2360,
	-1, 2167,
	666, 2182,
	-2, 2172,
	-1, 2184,
	667, 2535,
	-2, 0,
	-1, 2221,
	162, 1895,
	184, 1895,
	197, 1895,
	266, 1895,
	302, 1895,
	377, 1895,
	388, 1895,
	590, 1895,
	-2, 2036,
	-1, 2260,
	668, 2680,
	671, 2680,
	-2, 1292,
	-1, 2261,
	668, 2682,
	671, 2682,
	-2, 1293,
	-1, 2262,
	668, 2681,
	671, 2681,
	-2, 1294,
	-1, 2263,
	671, 2603,
	-2, 1295,
	-1, 2299,
	666, 2183,
	-2, 2171,
	-1, 2316,
	204, 3035,
	668, 3035,
	671, 3035,
	-2, 0,
	-1, 2367,
	1, 905,
	669, 905,
	672, 905,
	-2, 1779,
	-1, 2570,
	242, 323,
	-2, 2688,
	-1, 2571,
	242, 324,
	-2, 388,
	-1, 2689,
	1, 1153,
	665, 1153,
	667, 1153,
	669, 1153,
	672, 1153,
	-2, 0,
	-1, 2690,
	1, 1197,
	665, 1197,
	667, 1197,
	669, 1197,
	672, 1197,
	-2, 0,
	-1, 2691,
	1, 1209,
	665, 1209,
	667, 1209,
	669, 1209,
	672, 1209,
	-2, 0,
	-1, 2692,
	1, 1267,
	665, 1267,
	667, 1267,
	669, 1267,
	672, 1267,
	-2, 0,
	-1, 2734,
	1, 1178,
	665, 1178,
	667, 1178,
	669, 1178,
	672, 1178,
	-2, 0,
	-1, 2760,
	1, 1246,
	665, 1246,
	667, 1246,
	669, 1246,
	672, 1246,
	-2, 0,
	-1, 2810,
	482, 1963,
	483, 1963,
	-2, 2216,
	-1, 2843,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2236,
	-1, 2844,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2237,
	-1, 2845,
	102, 0,
	281, 0,
	282, 0,
	650, 0,
	651, 0,
	-2, 2238,
	-1, 2846,
	102, 0,
	281, 0,
	282, 0,
	650, 0,
	651, 0,
	-2, 2239,
	-1, 2847,
	102, 0,
	281, 0,
	282, 0,
	650, 0,
	651, 0,
	-2, 2240,
	-1, 2848,
	102, 0,
	281, 0,
	282, 0,
	650, 0,
	651, 0,
	-2, 2241,
	-1, 2849,
	102, 0,
	281, 0,
	282, 0,
	650, 0,
	651, 0,
	-2, 2242,
	-1, 2850,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2243,
	-1, 2862,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2255,
	-1, 2863,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2256,
	-1, 2864,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2257,
	-1, 2868,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2264,
	-1, 2874,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2268,
	-1, 2876,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2276,
	-1, 2877,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2277,
	-1, 2878,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2278,
	-1, 2879,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2279,
	-1, 3056,
	5, 2692,
	204, 2546,
	666, 2689,
	-2, 2680,
	-1, 3057,
	204, 2547,
	-2, 3124,
	-1, 3058,
	204, 2548,
	-2, 2905,
	-1, 3059,
	204, 2549,
	-2, 2771,
	-1, 3060,
	204, 2550,
	-2, 2837,
	-1, 3061,
	204, 2551,
	-2, 2890,
	-1, 3062,
	204, 2552,
	-2, 3031,
	-1, 3063,
	204, 2553,
	-2, 2343,
	-1, 3158,
	1, 2037,
	2, 2037,
	114, 2037,
	162, 2037,
	184, 2037,
	197, 2037,
	205, 2037,
	223, 2037,
	226, 2037,
	259, 2037,
	266, 2037,
	278, 2037,
	298, 2037,
	302, 2037,
	342, 2037,
	377, 2037,
	382, 2037,
	388, 2037,
	470, 2037,
	476, 2037,
	590, 2037,
	603, 2037,
	625, 2037,
	626, 2037,
	627, 2037,
	637, 2037,
	665, 2037,
	667, 2037,
	669, 2037,
	671, 2037,
	672, 2037,
	-2, 2036,
	-1, 3174,
	666, 2660,
	-2, 2675,
	-1, 3176,
	1, 405,
	625, 405,
	672, 405,
	-2, 1922,
	-1, 3241,
	38, 2692,
	135, 2692,
	648, 2692,
	664, 2692,
	667, 2692,
	668, 2692,
	671, 2692,
	-2, 2689,
	-1, 3242,
	38, 2693,
	135, 2693,
	648, 2693,
	664, 2693,
	667, 2693,
	668, 2693,
	671, 2693,
	-2, 2690,
	-1, 3472,
	1, 1618,
	464, 1572,
	509, 1572,
	640, 1572,
	645, 1572,
	665, 1618,
	667, 1618,
	669, 1618,
	672, 1618,
	-2, 1922,
	-1, 3635,
	1, 1250,
	665, 1250,
	667, 1250,
	669, 1250,
	672, 1250,
	-2, 0,
	-1, 3663,
	383, 1966,
	-2, 3183,
	-1, 3664,
	383, 1967,
	-2, 3014,
	-1, 3668,
	482, 2614,
	483, 2614,
	-2, 2341,
	-1, 3669,
	482, 2618,
	483, 2618,
	-2, 2342,
	-1, 3670,
	482, 2615,
	483, 2615,
	-2, 2341,
	-1, 3671,
	482, 2619,
	483, 2619,
	-2, 2342,
	-1, 3685,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2266,
	-1, 3686,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2270,
	-1, 3692,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2272,
	-1, 3941,
	1, 900,
	665, 900,
	667, 900,
	669, 900,
	672, 900,
	-2, 1779,
	-1, 4169,
	46, 2651,
	-2, 1350,
	-1, 4174,
	1, 1618,
	665, 1618,
	667, 1618,
	669, 1618,
	672, 1618,
	-2, 1922,
	-1, 4290,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2274,
	-1, 4297,
	272, 0,
	274, 0,
	366, 0,
	-2, 2293,
	-1, 4366,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2322,
	-1, 4367,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2323,
	-1, 4368,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2324,
	-1, 4372,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2328,
	-1, 4373,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2329,
	-1, 4374,
	14, 0,
	15, 0,
	16, 0,
	646, 0,
	647, 0,
	648, 0,
	-2, 2330,
	-1, 4426,
	666, 2661,
	-2, 2676,
	-1, 4675,
	668, 3303,
	-2, 1848,
	-1, 4734,
	272, 0,
	274, 0,
	366, 0,
	-2, 2294,
	-1, 4737,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2297,
	-1, 4738,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2299,
	-1, 4867,
	668, 2677,
	-2, 1653,
	-1, 5049,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2298,
	-1, 5050,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	238, 0,
	242, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 2300,
	-1, 5061,
	272, 0,
	-2, 2333,
	-1, 5264,
	272, 0,
	-2, 2334,
	-1, 5499,
	54, 0,
	238, 0,
	301, 0,
	516, 0,
	634, 0,
	649, 0,
	-2, 3146,
}

const sqlPrivate = 57344

const sqlLast = 163356

var sqlAct = [...]int16{
	317, 5724, 5428, 5704, 1520, 3430, 5633, 5662, 3547, 5554,
	5572, 5126, 5318, 1042, 6, 5310, 1043, 10, 5498, 3828,
	3392, 5512, 5547, 5485, 4, 5363, 5647, 5466, 5379, 4155,
	4717, 5442, 5439, 5418, 1247, 203, 5513, 5581, 4156, 5232,
	5514, 2611, 5183, 5212, 5427, 2427, 4647, 1423, 2567, 1576,
	5197, 4330, 5005, 5458, 3901, 5510, 1749, 5268, 5000, 4994,
	4958, 5131, 4923, 1434, 5497, 4282, 1715, 3968, 1872, 5070,
	3516, 2227, 5035, 4192, 4667, 2820, 2662, 4659, 5346, 3971,
	3088, 4641, 816, 3677, 2398, 3829, 4090, 2660, 966, 4864,
	4844, 5010, 4040, 2325, 3301, 3234, 3300, 4563, 2891, 1511,
	2274, 4186, 4639, 4606, 3567, 2027, 4139, 4623, 4608, 1413,
	2830, 3974, 2637, 891, 3960, 4416, 1239, 966, 5066, 2436,
	1597, 4219, 3504, 4221, 1504, 3536, 3955, 4144, 2821, 2658,
	4143, 1296, 2349, 3531, 4863, 4117, 2624, 4116, 3956, 3431,
	4136, 4429, 3957, 203, 828, 3877, 3843, 3408, 4773, 4124,
	4146, 3188, 3809, 3851, 4716, 3599, 3562, 1870, 1046, 3548,
	2196, 3533, 2554, 3832, 1690, 3479, 2537, 3995, 3159, 3834,
	2556, 2486, 3421, 5555, 4137, 2448, 1744, 311, 2256, 929,
	3150, 3151, 3868, 3808, 3240, 2170, 2827, 3884, 5269, 2098,
	2128, 2193, 1918, 4393, 1745, 2904, 2969, 3661, 2608, 3561,
	1037, 1515, 1809, 2555, 3441, 2513, 961, 887, 2509, 2535,
	2531, 2517, 1559, 1301, 2971, 2415, 310, 3517, 2419, 1306,
	2347, 1591, 3232, 1487, 3194, 3233, 1414, 3085, 2888, 2216,
	2197, 2960, 2397, 1497, 2394, 2809, 2792, 1578, 1490, 3189,
	3131, 2790, 864, 1717, 1512, 1847, 3541, 1805, 1812, 2540,
	3325, 2213, 5380, 3326, 1119, 3286, 5705, 2387, 1546, 1574,
	1493, 4147, 907, 1467, 968, 972, 1464, 2963, 1452, 3100,
	5463, 2162, 2607, 1417, 1501, 3140, 2206, 1396, 1431, 2941,
	3052, 1268, 967, 2112, 1297, 2028, 3153, 3018, 2029, 2791,
	214, 2793, 215, 968, 972, 1954, 2704, 872, 2564, 1939,
	1700, 5573, 1016, 1250, 975, 883, 5634, 1774, 1838, 847,
	125, 967, 1282, 1845, 821, 51, 50, 2545, 48, 39,
	2034, 1419, 37, 35, 1394, 3715, 1590, 2009, 817, 956,
	830, 3709, 1141, 975, 1571, 1755, 4407, 900, 903, 4408,
	3830, 2327, 5714, 803, 1017, 5739, 2327, 826, 5727, 3130,
	5508, 5712, 4097, 5711, 2327, 3130, 5671, 3130, 2327, 3902,
	5130, 86, 5507, 2327, 5098, 5669, 2327, 5603, 129, 5130,
	5556, 2576, 115, 5538, 5557, 5536, 5095, 3130, 5533, 3130,
	87, 5530, 5534, 5094, 5495, 5531, 4201, 3148, 2576, 5093,
	5090, 5089, 2917, 2918, 2919, 2936, 2937, 2938, 92, 1243,
	5494, 5493, 5483, 2359, 2576, 3572, 5130, 5481, 5472, 5088,
	5470, 5130, 5130, 2939, 5130, 5437, 5401, 5394, 5393, 5130,
	3205, 3130, 3130, 5384, 5362, 5360, 5358, 2576, 2576, 5130,
	5130, 1555, 5339, 5266, 5246, 1882, 4948, 3205, 4692, 5214,
	5206, 101, 5149, 4482, 5130, 5148, 2576, 1411, 5137, 2576,
	2100, 5136, 2576, 5129, 5077, 5130, 5051, 5130, 2576, 1748,
	3205, 1555, 5020, 4809, 4988, 2659, 3572, 1232, 4097, 4987,
	2929, 4918, 4891, 4788, 4736, 3130, 3130, 4789, 3205, 4683,
	2925, 4677, 4620, 4214, 1044, 4214, 4621, 2612, 4513, 4481,
	2356, 2356, 4514, 4482, 1222, 4397, 1221, 56, 4422, 124,
	4420, 3894, 4423, 4202, 4421, 108, 121, 2359, 4400, 2356,
	4314, 4310, 3130, 3918, 2576, 3130, 2044, 2045, 3912, 2077,
	2078, 2079, 2088, 2089, 2090, 4213, 3921, 1244, 1243, 4214,
	3922, 3509, 3827, 3825, 3779, 3780, 3130, 3826, 3820, 2081,
	2075, 1238, 3130, 3819, 3226, 3770, 3724, 3130, 2047, 3771,
	2044, 2045, 3725, 1449, 3768, 3200, 1397, 1397, 3769, 2094,
	4097, 1806, 1429, 2930, 2931, 2932, 2933, 3757, 1400, 2576,
	1401, 3758, 109, 2924, 2075, 3755, 3726, 2100, 2966, 3130,
	3130, 3571, 2047, 3102, 1769, 3572, 2046, 1038, 3558, 3557,
	3265, 2359, 2647, 2647, 3130, 1398, 3204, 2066, 3186, 2359,
	3205, 2356, 3130, 3676, 3178, 3129, 2646, 2063, 2576, 3130,
	2647, 2100, 3130, 5402, 1459, 86, 46, 1041, 1040, 5270,
	2046, 5261, 5249, 3779, 3780, 108, 3572, 4397, 3101, 4998,
	1757, 4948, 2356, 4892, 87, 4692, 4622, 4615, 3399, 3285,
	2373, 2441, 2575, 275, 2359, 3276, 2353, 3509, 4086, 2326,
	3418, 3195, 92, 1450, 2191, 2340, 1450, 1742, 4531, 2934,
	2935, 4285, 4251, 2214, 2524, 4203, 1920, 3170, 3779, 3780,
	3169, 3797, 3798, 3799, 3168, 3167, 3166, 275, 1402, 2967,
	5523, 1399, 3130, 1231, 1230, 4204, 5012, 1229, 1228, 1227,
	2069, 2070, 2071, 2072, 2927, 101, 1226, 277, 2044, 2045,
	2052, 1225, 1224, 1220, 3794, 1219, 1218, 3625, 5121, 1217,
	1216, 1215, 1214, 1213, 1212, 1211, 1210, 1209, 3785, 1208,
	1207, 1206, 1205, 1204, 1203, 1202, 1201, 1945, 1200, 1199,
	2047, 277, 1198, 1185, 2052, 1117, 113, 1116, 1044, 2328,
	3779, 3780, 1115, 2085, 2328, 1114, 1113, 2095, 1112, 3794,
	276, 56, 2328, 124, 2074, 2076, 2328, 1111, 1110, 108,
	121, 2328, 1109, 1108, 2328, 1107, 1106, 1105, 2046, 269,
	2968, 1104, 2965, 1103, 1102, 1101, 1100, 2091, 270, 2092,
	1099, 1098, 1097, 1096, 276, 1095, 2061, 2062, 2074, 2076,
	1094, 1093, 1092, 1091, 1090, 212, 1089, 116, 1088, 1087,
	120, 1086, 1085, 1084, 1083, 1082, 2083, 3785, 216, 1748,
	1081, 3714, 1080, 1079, 1068, 4793, 1768, 2356, 1067, 1066,
	1863, 2067, 1517, 1061, 1060, 1053, 109, 2044, 2045, 2356,
	1052, 2356, 275, 1051, 1036, 3544, 1035, 1034, 992, 3795,
	1045, 4748, 216, 2356, 991, 4455, 170, 990, 2998, 989,
	2356, 2075, 3785, 988, 4412, 2067, 2356, 979, 978, 2047,
	977, 976, 2928, 938, 937, 1522, 1306, 898, 897, 896,
	878, 2093, 305, 304, 303, 1763, 302, 301, 300, 299,
	298, 297, 2052, 296, 295, 294, 277, 293, 2100, 292,
	291, 290, 2082, 1306, 1306, 1306, 289, 2046, 288, 3802,
	287, 1451, 286, 2097, 285, 284, 283, 282, 2066, 281,
	280, 279, 2726, 278, 175, 1461, 4255, 4215, 5014, 3293,
	3880, 2097, 1757, 3737, 3785, 3720, 3711, 3823, 3795, 3801,
	2099, 218, 3627, 5522, 275, 3602, 3101, 2097, 3489, 276,
	3526, 3209, 1600, 2359, 3293, 2970, 3175, 1306, 3252, 1756,
	1720, 3157, 275, 1306, 1306, 2782, 2356, 1522, 269, 2400,
	2353, 1733, 1304, 2073, 3509, 2326, 170, 270, 2785, 2358,
	4201, 213, 3824, 3795, 1550, 2996, 217, 1563, 1564, 1565,
	1450, 2217, 1306, 2982, 1306, 2356, 1306, 2240, 277, 2068,
	113, 2980, 2139, 2173, 1720, 2010, 1751, 216, 1886, 1867,
	2172, 2069, 2070, 2071, 2072, 1567, 277, 3796, 1433, 2173,
	2097, 2052, 2041, 5519, 5496, 1757, 2172, 5480, 1522, 5367,
	1550, 2086, 1814, 2068, 2914, 2915, 2916, 2940, 2926, 2920,
	2176, 2922, 2923, 2921, 2908, 2909, 2910, 2911, 2912, 2913,
	1720, 276, 1746, 5258, 5252, 3795, 2171, 1720, 1710, 212,
	3101, 116, 5273, 5065, 120, 2097, 1306, 2099, 1306, 276,
	269, 5018, 2130, 1720, 4997, 2074, 2076, 4771, 4770, 270,
	1697, 4764, 1306, 4763, 1306, 203, 203, 4635, 269, 2964,
	1705, 1450, 4762, 275, 4755, 4754, 275, 270, 4752, 4747,
	4744, 2099, 4743, 1542, 1045, 4619, 3796, 1496, 1500, 216,
	170, 4614, 1508, 4519, 4456, 4425, 4387, 1762, 1544, 3779,
	3780, 4386, 4385, 3214, 2137, 4346, 4306, 216, 2130, 4301,
	1819, 1822, 3875, 3779, 3780, 1720, 3816, 2097, 3291, 3807,
	3778, 3775, 2067, 3774, 3772, 3767, 3766, 277, 3765, 2084,
	277, 3796, 3762, 1841, 1757, 3761, 1306, 972, 1825, 1306,
	3760, 2058, 2059, 2065, 2087, 2064, 2060, 1731, 2057, 2055,
	2056, 2048, 2049, 2050, 2051, 2053, 2054, 1593, 175, 1687,
	1692, 1570, 1581, 1582, 3756, 3736, 4756, 3788, 3789, 3781,
	3782, 3783, 3784, 3786, 3787, 218, 975, 3719, 1536, 3712,
	276, 3710, 3559, 276, 1743, 2048, 2049, 2050, 2051, 2053,
	2054, 275, 5013, 2627, 3158, 2953, 1410, 2132, 1695, 269,
	2041, 2583, 269, 3796, 2097, 4529, 3528, 1807, 270, 2040,
	2581, 270, 5733, 1528, 5655, 213, 275, 5654, 5571, 5569,
	217, 1435, 4332, 1246, 1887, 1727, 3779, 3780, 5429, 4636,
	1426, 1850, 1852, 5344, 2131, 1573, 2129, 5330, 216, 1583,
	1584, 1039, 5326, 5325, 5324, 277, 1306, 1306, 1306, 1306,
	1306, 1306, 1306, 1306, 5304, 3790, 3788, 3789, 3781, 3782,
	3783, 3784, 3786, 3787, 2073, 3821, 3290, 1550, 3907, 5303,
	277, 5301, 5272, 1848, 5271, 5251, 5244, 2894, 5230, 5227,
	1306, 5226, 5210, 3785, 5208, 5145, 1306, 5116, 5063, 5046,
	2068, 3290, 2900, 3791, 3792, 3793, 5045, 3785, 276, 4980,
	3790, 3788, 3789, 3781, 3782, 3783, 3784, 3786, 3787, 275,
	4976, 4974, 4972, 5275, 2044, 2045, 4949, 269, 4769, 1598,
	4693, 4626, 4517, 276, 4516, 4497, 270, 4496, 2019, 2044,
	2045, 4494, 3290, 1963, 3869, 2050, 2051, 2053, 2054, 1947,
	1244, 2194, 269, 3207, 4403, 4390, 2047, 4296, 2117, 2119,
	4216, 270, 4178, 2075, 4636, 4168, 3543, 4066, 2099, 4006,
	3973, 2047, 5120, 277, 275, 1892, 3741, 3740, 3735, 1303,
	3779, 3780, 3701, 1280, 3789, 3781, 3782, 3783, 3784, 3786,
	3787, 216, 1862, 3503, 2046, 1844, 3501, 3318, 2179, 2178,
	2100, 2177, 2174, 2168, 1306, 1306, 1306, 2163, 1881, 2046,
	1306, 275, 2161, 2015, 3795, 3172, 3165, 1431, 3128, 1431,
	3785, 3009, 2978, 2116, 2331, 2239, 276, 2195, 277, 2188,
	2187, 2186, 2185, 2184, 1600, 2183, 2182, 2181, 2180, 2169,
	2158, 2157, 2156, 2155, 2154, 269, 1306, 3527, 275, 2262,
	1522, 2153, 2152, 2151, 270, 203, 2150, 2287, 2262, 1911,
	1522, 2042, 2149, 1522, 1720, 277, 2148, 5274, 3872, 2057,
	2055, 2056, 2048, 2049, 2050, 2051, 2053, 2054, 2147, 1948,
	2146, 276, 4986, 1527, 216, 2145, 2144, 2143, 2020, 2132,
	2203, 2118, 2243, 2115, 2110, 1535, 2097, 275, 275, 1456,
	269, 1839, 277, 1445, 4814, 4740, 4454, 2011, 2052, 270,
	2097, 4207, 4419, 2997, 4406, 3723, 2016, 3163, 276, 5091,
	4816, 2250, 4453, 2052, 2044, 2045, 2255, 2131, 3905, 2024,
	1522, 2023, 2113, 2235, 4894, 4009, 1306, 269, 1222, 216,
	1221, 1562, 3393, 2175, 3779, 3780, 270, 2018, 1560, 5646,
	5334, 277, 277, 1577, 2393, 276, 2047, 5327, 5515, 5017,
	1306, 2244, 2037, 2038, 3785, 2200, 2201, 4934, 1600, 1577,
	4933, 4932, 4931, 2249, 269, 4930, 216, 2074, 2076, 1577,
	4893, 2338, 3796, 270, 1577, 4795, 1577, 2343, 2224, 4616,
	1575, 2345, 4700, 4699, 2046, 1577, 2430, 4698, 2350, 1754,
	1244, 1761, 2352, 1767, 276, 276, 2355, 4697, 2391, 4696,
	4695, 4694, 4483, 216, 2499, 4410, 2365, 4409, 1561, 4218,
	2164, 2165, 4217, 269, 269, 2265, 972, 1550, 4099, 5599,
	4098, 4095, 270, 270, 2265, 972, 2312, 5597, 1555, 2245,
	2995, 2275, 5511, 2263, 2067, 2217, 4283, 2364, 2981, 2225,
	4554, 3344, 2263, 2247, 3764, 2013, 2979, 1425, 3763, 3439,
	2173, 1427, 216, 216, 2379, 975, 2215, 2172, 3683, 3329,
	1558, 4512, 1910, 1861, 975, 1866, 1843, 4158, 1196, 4157,
	3975, 5253, 1397, 5296, 4477, 3795, 4478, 2141, 5297, 1880,
	2612, 1885, 2222, 2385, 2384, 5213, 5544, 1577, 2393, 4995,
	3568, 1429, 4125, 1429, 4938, 1920, 2558, 5297, 2521, 4628,
	4056, 2097, 2153, 1919, 4613, 4560, 2341, 1964, 4551, 4522,
	2192, 2153, 275, 4246, 2248, 2557, 2097, 2679, 3939, 1244,
	3830, 2748, 275, 1197, 2656, 4642, 2234, 2233, 2219, 2232,
	2230, 1720, 1720, 2229, 2228, 2591, 4642, 5067, 4334, 3729,
	2961, 5663, 1600, 2518, 3781, 3782, 3783, 3784, 3786, 3787,
	1946, 2367, 5140, 5112, 5697, 2271, 4644, 2097, 3781, 3782,
	3783, 3784, 3786, 3787, 3406, 2138, 277, 4644, 1720, 2167,
	2189, 4175, 5520, 2620, 2533, 3327, 277, 5535, 3830, 1818,
	2498, 1738, 2522, 3395, 1531, 2497, 2505, 2488, 1492, 3830,
	1555, 4640, 2493, 5532, 4910, 4906, 2363, 1720, 4197, 2568,
	2573, 1555, 2068, 4488, 3415, 1896, 5319, 2494, 3412, 2503,
	3410, 2241, 5001, 5436, 2388, 2514, 3978, 4507, 1875, 276,
	2628, 3540, 2541, 4108, 2405, 5601, 2406, 5600, 5143, 276,
	5139, 5118, 4277, 1249, 2043, 2441, 2413, 2414, 269, 4070,
	3601, 2508, 1720, 3796, 1720, 2368, 1720, 270, 269, 2508,
	5521, 5172, 2508, 2800, 3943, 4880, 5176, 270, 2441, 4573,
	1409, 2386, 1788, 1194, 1720, 1720, 3266, 5726, 2495, 1961,
	2099, 4878, 1844, 3783, 3784, 3786, 3787, 216, 1720, 4875,
	1740, 5638, 5335, 1030, 2740, 1192, 2435, 216, 2651, 3945,
	1720, 1181, 1190, 1720, 1720, 1720, 1720, 3481, 2447, 2407,
	2408, 936, 2380, 5578, 3289, 1562, 2411, 2412, 5165, 1962,
	972, 2439, 5151, 933, 1248, 2489, 2738, 2798, 2262, 4941,
	4940, 3287, 4571, 4570, 4562, 3906, 4537, 2966, 4536, 4534,
	2560, 2561, 1841, 2680, 2639, 4572, 2639, 4533, 4521, 2640,
	2491, 1306, 4480, 4479, 2506, 2401, 2390, 4114, 1562, 975,
	2542, 3014, 3013, 1781, 4113, 2562, 2469, 2574, 2677, 2048,
	2049, 2050, 2051, 2053, 2054, 4058, 2616, 2621, 1545, 3208,
	3893, 2057, 2055, 2056, 2048, 2049, 2050, 2051, 2053, 2054,
	4008, 3734, 1561, 1556, 1306, 1960, 2634, 2389, 3733, 2490,
	2504, 3732, 3731, 3687, 2487, 3437, 2512, 3436, 3417, 5664,
	1894, 2519, 5141, 5113, 1031, 2671, 3405, 2654, 3397, 3289,
	3386, 2685, 3790, 3788, 3789, 3781, 3782, 3783, 3784, 3786,
	3787, 1306, 2664, 1306, 3385, 1561, 3287, 2231, 2967, 3373,
	1306, 3362, 3360, 1306, 870, 2287, 2287, 1600, 2550, 1306,
	1306, 1306, 1306, 1306, 1306, 1306, 1306, 1306, 1306, 1306,
	1306, 1306, 1306, 1306, 1306, 1306, 1306, 1306, 1306, 1306,
	1306, 1306, 1306, 1306, 1306, 1306, 1306, 1306, 1306, 1306,
	1306, 1306, 1306, 1306, 1306, 2588, 1306, 3975, 1306, 1306,
	1306, 1306, 2595, 2644, 2799, 1848, 2547, 1848, 2631, 2547,
	2546, 870, 4617, 2546, 2265, 972, 2710, 3355, 2784, 4054,
	2558, 1556, 2612, 2507, 1306, 3354, 1556, 4874, 1306, 1306,
	2623, 2507, 2263, 5639, 2507, 3334, 1306, 2642, 1552, 2968,
	1306, 2965, 1306, 1306, 2802, 2789, 4876, 3333, 3294, 2577,
	1600, 2636, 2832, 2800, 975, 5579, 1306, 1306, 1306, 1306,
	3187, 2751, 1306, 1306, 1306, 1306, 1306, 1306, 1306, 1306,
	1536, 2670, 1244, 1843, 1244, 2648, 5247, 2649, 2875, 2485,
	2272, 2017, 3303, 1028, 2054, 1027, 2797, 2190, 3537, 2774,
	2500, 1306, 1306, 1306, 1306, 1306, 1306, 1306, 1306, 1306,
	4895, 1306, 4091, 1741, 3787, 4825, 1306, 2502, 2942, 2943,
	5044, 2395, 2396, 3350, 1792, 3348, 2440, 2798, 1431, 4248,
	2697, 2689, 2942, 2958, 3639, 1600, 1557, 1579, 1580, 2961,
	2700, 2761, 1187, 3220, 1431, 2711, 1912, 1579, 1580, 2828,
	2829, 2496, 1579, 1580, 1579, 1580, 2499, 4836, 2437, 3006,
	1306, 1600, 1783, 1579, 1580, 1831, 1552, 1830, 1829, 2610,
	1828, 1552, 2734, 3331, 3193, 4088, 2826, 2771, 4491, 2780,
	2675, 3055, 3055, 3069, 1889, 2942, 5175, 2814, 3089, 3091,
	2813, 1478, 2270, 1522, 4087, 2825, 3099, 2433, 2008, 1800,
	1553, 2492, 2318, 1959, 1943, 2321, 2012, 3202, 1943, 5600,
	1554, 3273, 1242, 5641, 2501, 4055, 3306, 2796, 869, 3575,
	2890, 3177, 2773, 5312, 2970, 3384, 2906, 3659, 203, 2788,
	4835, 2787, 2438, 2801, 2794, 2786, 2543, 3376, 1976, 2501,
	3173, 1522, 2957, 3698, 3197, 1222, 3620, 2817, 1222, 1222,
	2818, 2819, 3242, 2698, 1557, 3374, 2890, 3642, 1920, 1557,
	3414, 1784, 1920, 3317, 2434, 2395, 2396, 1033, 1032, 2746,
	1982, 1980, 2361, 3674, 2732, 869, 3696, 927, 2694, 2690,
	1522, 1522, 3145, 1940, 3260, 3942, 2898, 1534, 2688, 3378,
	4872, 5517, 1908, 2896, 2799, 4877, 3413, 3137, 3008, 1426,
	3411, 1426, 3409, 3010, 3011, 2886, 3012, 2551, 2022, 3015,
	1890, 3016, 3017, 2224, 5196, 2902, 1241, 4598, 1553, 5642,
	3222, 1600, 4518, 1553, 5675, 2544, 1942, 2235, 1554, 2548,
	1942, 2955, 2498, 1554, 5640, 3377, 1895, 2497, 2884, 4859,
	3422, 3316, 871, 5650, 815, 2205, 1244, 2641, 2691, 4093,
	4167, 4260, 1941, 3375, 2831, 3247, 1244, 5314, 2964, 4259,
	1244, 3251, 972, 3144, 972, 3149, 934, 3136, 3155, 3156,
	2287, 810, 3622, 3255, 2549, 3262, 2797, 4852, 4504, 4599,
	1550, 1813, 3064, 3239, 3080, 3216, 2739, 3051, 934, 3095,
	3126, 3127, 3093, 3366, 5706, 1189, 3254, 4092, 1397, 871,
	925, 975, 2970, 975, 934, 3138, 3142, 3143, 3641, 2175,
	1555, 3196, 1429, 3210, 972, 5188, 934, 2222, 2737, 3948,
	3263, 3673, 4320, 3190, 5043, 1077, 3231, 3288, 1429, 4597,
	4323, 1069, 3162, 3693, 5287, 4853, 2209, 4026, 1243, 3219,
	3305, 3638, 1811, 5644, 5286, 1600, 4939, 2973, 2449, 1439,
	4535, 2391, 2391, 975, 1244, 2760, 3199, 1720, 1070, 2757,
	2781, 3383, 4532, 4461, 4824, 3694, 1441, 4460, 3295, 3699,
	3191, 4459, 4448, 3213, 2453, 4447, 4446, 3330, 3257, 3217,
	1522, 2770, 4252, 3245, 3472, 4120, 2727, 5518, 2164, 2165,
	2212, 4112, 3218, 4052, 1436, 2880, 2872, 3264, 4017, 4027,
	3250, 1306, 1306, 1496, 1306, 1500, 4502, 3416, 3224, 2207,
	3227, 3292, 980, 4321, 3256, 3476, 3228, 3361, 4870, 2881,
	2758, 3434, 3258, 3192, 3353, 3249, 2772, 2882, 1555, 2210,
	3332, 2887, 1956, 1555, 4089, 2450, 1522, 4873, 3512, 987,
	3515, 5612, 1442, 3336, 1977, 3351, 5625, 3280, 3174, 4025,
	2759, 3267, 1791, 2420, 3337, 2580, 2579, 2696, 2421, 2525,
	4018, 3640, 5398, 5624, 2532, 3666, 3667, 2462, 1720, 1054,
	3185, 5677, 1443, 2208, 2441, 5586, 3407, 3477, 4253, 3321,
	1720, 4722, 1720, 3507, 4721, 4118, 4121, 4954, 1720, 4194,
	3281, 3282, 3630, 3335, 3283, 3284, 1059, 3308, 3311, 1720,
	1720, 203, 3298, 5516, 2327, 2970, 3304, 3352, 3524, 1817,
	4016, 2006, 1308, 3845, 1234, 5548, 1172, 1440, 3484, 1477,
	3381, 5648, 3423, 3486, 3391, 3387, 1522, 3475, 1522, 2463,
	4050, 3578, 3579, 3342, 3343, 3345, 3346, 3347, 3349, 2553,
	1240, 1236, 926, 3586, 3587, 3588, 3589, 3438, 3569, 3962,
	2439, 1306, 3473, 3474, 2454, 3357, 4048, 5313, 3551, 3370,
	3371, 5320, 5643, 4848, 4195, 3379, 4093, 5413, 3585, 3380,
	3563, 4849, 3487, 972, 3389, 5104, 3695, 3519, 3396, 2461,
	2870, 2422, 4854, 3403, 2873, 1720, 3697, 2526, 2970, 5189,
	3269, 1235, 3279, 4049, 4047, 1188, 1978, 4871, 4046, 2426,
	928, 2552, 1299, 5187, 924, 1071, 1072, 2211, 3277, 3427,
	4043, 5185, 975, 3271, 3573, 3990, 1425, 5487, 1425, 5488,
	1427, 3580, 1427, 3581, 3394, 4851, 1306, 3689, 3482, 2455,
	2456, 3560, 1306, 1306, 3428, 3429, 1813, 1891, 2883, 3570,
	1173, 5649, 3596, 2869, 4855, 3576, 3566, 1306, 2885, 4580,
	3565, 3597, 4194, 811, 2733, 3176, 2451, 3272, 3611, 4578,
	3613, 3944, 3615, 2889, 5184, 1974, 3996, 3555, 1921, 2548,
	868, 1975, 5396, 4231, 2444, 3508, 3989, 1739, 1454, 3270,
	2502, 2423, 2428, 5651, 2897, 4580, 981, 982, 4229, 2693,
	1306, 1306, 3523, 4968, 5186, 4578, 1306, 1533, 4222, 2687,
	4859, 1981, 1907, 1909, 1979, 2452, 3071, 3546, 3594, 1306,
	1306, 1848, 1172, 3556, 2549, 1306, 1306, 3554, 2021, 3647,
	5397, 1306, 3649, 3998, 3644, 3610, 3646, 3612, 3535, 3614,
	5585, 3616, 3617, 2159, 3844, 5564, 2445, 1236, 4852, 3289,
	4119, 2518, 4845, 1055, 1056, 812, 5565, 3903, 1078, 4582,
	3553, 2500, 5355, 4103, 3626, 2205, 3309, 4803, 5038, 1437,
	4051, 4843, 4503, 2522, 3482, 4804, 1306, 1306, 1306, 3609,
	4718, 4847, 1306, 3605, 2458, 2424, 2431, 5056, 5673, 3963,
	2522, 1893, 1306, 1172, 5610, 4582, 2443, 4581, 4233, 2109,
	5447, 4850, 3690, 4912, 3997, 836, 4853, 3739, 3141, 1306,
	813, 5678, 814, 3927, 1178, 1177, 2952, 3154, 1236, 5347,
	4224, 1243, 4336, 5657, 4723, 4983, 4707, 2209, 4944, 1073,
	1074, 1438, 4813, 4581, 5348, 4002, 4223, 3665, 4802, 3722,
	2431, 2529, 3654, 4584, 4449, 2440, 1173, 2516, 4860, 4861,
	1460, 2457, 984, 983, 4846, 3656, 2209, 3717, 3718, 3655,
	1458, 4279, 3721, 1174, 3657, 5364, 1926, 3390, 2871, 5349,
	2814, 3660, 5453, 2813, 5378, 5229, 4943, 2515, 4942, 4665,
	3675, 2212, 4182, 4036, 4034, 1500, 3916, 3364, 3184, 3682,
	3713, 2606, 2202, 1457, 5179, 4232, 1448, 4000, 4607, 802,
	3139, 2031, 2429, 2527, 1306, 1306, 1306, 1306, 4634, 4376,
	2212, 2032, 2328, 1306, 1306, 1306, 2510, 1173, 1306, 5036,
	2210, 4767, 2745, 2031, 5037, 3201, 985, 986, 4719, 2207,
	2816, 3688, 1306, 1431, 1600, 2442, 2026, 4220, 2381, 2459,
	5138, 5351, 3885, 5549, 5084, 4969, 4540, 4001, 4035, 2210,
	3365, 2438, 5683, 2528, 5238, 3969, 5294, 4106, 2420, 1306,
	4666, 1306, 4107, 2421, 4566, 5584, 5350, 1057, 1058, 2378,
	1431, 4541, 4489, 3225, 4487, 4183, 3837, 3838, 4173, 3965,
	3525, 3518, 3505, 2511, 2635, 5352, 4579, 2629, 1600, 2622,
	2614, 2590, 2587, 2208, 2806, 3426, 5365, 4319, 3818, 1175,
	1426, 5223, 1785, 1431, 4473, 1469, 1600, 4391, 5419, 2519,
	1178, 1177, 3338, 3261, 4280, 877, 1426, 3293, 1522, 2030,
	2031, 3728, 4579, 5381, 2747, 2374, 3490, 5563, 1233, 3493,
	1176, 3495, 3369, 5006, 4848, 1244, 2287, 4668, 3502, 3839,
	1600, 2030, 4849, 1479, 2425, 4235, 1522, 5203, 3849, 5201,
	3878, 5115, 3981, 4854, 3759, 2376, 3977, 1522, 3132, 1174,
	2676, 3919, 3976, 3242, 2287, 3680, 3658, 3874, 4405, 3842,
	4230, 4225, 4226, 4227, 4228, 5039, 3841, 1950, 1949, 2668,
	4442, 1178, 1177, 4724, 3542, 3899, 2422, 3542, 2657, 1180,
	2585, 3310, 1944, 4037, 2032, 1306, 4851, 3367, 2211, 3183,
	3182, 3135, 2377, 1823, 2426, 3181, 3180, 1306, 1837, 1179,
	3179, 1835, 4234, 1076, 4612, 4855, 2032, 1241, 2430, 1804,
	3879, 4904, 1824, 4377, 2404, 1522, 4539, 2211, 5127, 3964,
	1174, 2287, 4629, 4630, 5307, 4378, 3917, 4959, 2030, 3847,
	3813, 3814, 3815, 3314, 4495, 3134, 2755, 4768, 1306, 2807,
	3133, 2633, 3920, 4128, 2430, 3848, 2538, 5205, 3924, 3926,
	3860, 2441, 3831, 4236, 1522, 3853, 3863, 3864, 4014, 3929,
	5607, 2109, 3618, 3931, 3932, 3862, 3871, 3883, 3935, 3940,
	3936, 4725, 3937, 5102, 1550, 1522, 2423, 2428, 5682, 4029,
	1806, 3946, 4484, 1522, 3239, 1175, 916, 4033, 3887, 3888,
	3889, 3890, 4830, 972, 1522, 5100, 3339, 3340, 4039, 3846,
	5099, 3600, 3480, 3952, 3953, 3933, 5366, 1429, 3866, 3980,
	3904, 5222, 3985, 3870, 4474, 3987, 1176, 4038, 1306, 1306,
	5110, 3368, 2521, 4249, 917, 3979, 1600, 5204, 3983, 4243,
	2521, 3915, 975, 5128, 3914, 4057, 1927, 3913, 1522, 3897,
	3898, 3896, 4081, 3895, 1429, 3966, 3574, 3485, 3483, 3909,
	2661, 2557, 4850, 1899, 4545, 5425, 1175, 5353, 1522, 3861,
	3854, 5308, 4101, 5354, 5123, 5122, 4071, 4013, 3867, 4829,
	2424, 5111, 5433, 5416, 4774, 1180, 3925, 1429, 3923, 4394,
	2977, 3993, 5087, 1928, 4011, 4450, 2003, 1176, 4028, 4044,
	4096, 4015, 3930, 5455, 3934, 1179, 4032, 4550, 3886, 4860,
	4861, 2005, 5611, 1522, 1720, 3972, 1720, 5609, 3941, 5537,
	1600, 3836, 2002, 4105, 3852, 3859, 2000, 966, 1720, 1720,
	2418, 876, 3242, 5337, 3949, 2431, 5328, 4073, 5097, 4075,
	5062, 4053, 4079, 4821, 4766, 2403, 4085, 2766, 4104, 4611,
	4030, 1970, 1968, 1522, 1966, 1938, 1180, 4174, 3603, 1936,
	3604, 4080, 3858, 5426, 1934, 1932, 4466, 3999, 1930, 5309,
	4485, 1431, 4007, 2536, 1836, 3865, 1179, 1834, 3810, 1075,
	4163, 4100, 4123, 4067, 4126, 4020, 4295, 4244, 4188, 4190,
	4241, 1720, 2416, 3881, 1923, 1917, 1915, 2429, 1833, 4024,
	4059, 3911, 3773, 1720, 3700, 1720, 3633, 3506, 3404, 3398,
	3328, 3215, 2779, 4172, 2775, 2754, 2678, 1425, 2667, 2652,
	2320, 1427, 203, 203, 2242, 2238, 4109, 3908, 2007, 1874,
	4142, 4210, 5191, 1425, 4021, 4828, 3811, 1427, 4022, 4274,
	4023, 4062, 2417, 4069, 2736, 4273, 4068, 4263, 2026, 2702,
	4199, 2566, 3624, 3623, 4247, 3583, 2248, 4250, 2795, 4082,
	4181, 1955, 2705, 3239, 4094, 4110, 2586, 2319, 2976, 1600,
	3563, 2317, 1600, 2142, 1888, 4102, 1393, 3381, 5509, 3563,
	4166, 4913, 3855, 3856, 3857, 4553, 1263, 4552, 4985, 932,
	4538, 4917, 4890, 4189, 5415, 5004, 4922, 4908, 4905, 4184,
	4841, 4840, 4664, 968, 972, 4072, 4111, 1306, 4239, 4654,
	4450, 4569, 4543, 2004, 1306, 1306, 4510, 4264, 1306, 1306,
	1306, 967, 1306, 3336, 2001, 4508, 4486, 4999, 1999, 4177,
	4237, 1306, 2287, 4130, 4191, 4115, 4242, 1254, 4164, 2425,
	1306, 4171, 2768, 975, 4159, 1306, 4169, 4170, 3538, 2767,
	3530, 1600, 3522, 1969, 1967, 3514, 1965, 1937, 5582, 4316,
	1306, 1935, 4240, 3499, 3497, 3478, 1933, 1931, 1600, 3253,
	1929, 935, 2420, 4196, 3248, 2584, 2582, 2421, 2287, 2287,
	1306, 1306, 4205, 1306, 1306, 1306, 2559, 2523, 4208, 4209,
	2460, 2446, 4271, 2432, 4269, 2360, 1922, 1916, 1914, 2357,
	1832, 2354, 2351, 4275, 1306, 4272, 4276, 4187, 1306, 2346,
	2287, 2287, 1306, 1306, 1306, 1306, 1306, 1306, 1306, 1306,
	1306, 1306, 1306, 1306, 1306, 1306, 1306, 1306, 1306, 1306,
	1306, 1306, 4298, 1306, 4256, 4281, 4257, 2344, 4258, 2735,
	4431, 1306, 1306, 2287, 2701, 2339, 2565, 2333, 1306, 4349,
	2329, 4350, 1406, 5577, 5492, 1429, 2254, 3363, 5601, 2035,
	3678, 1306, 4198, 4308, 4309, 4389, 2382, 1191, 1193, 4083,
	5306, 3650, 1431, 1431, 2532, 5474, 1306, 2370, 2371, 1407,
	3651, 3648, 3471, 5372, 1244, 5019, 203, 4929, 4278, 2778,
	4827, 3564, 3947, 2399, 1790, 963, 3289, 3289, 4432, 5240,
	2422, 3315, 3635, 5233, 3198, 2764, 1777, 3881, 1463, 4676,
	2692, 1600, 2441, 3287, 3312, 2632, 2275, 1503, 2426, 1997,
	1998, 2730, 1502, 2725, 1522, 1522, 4433, 5473, 4388, 4430,
	2699, 4305, 4427, 4881, 4924, 4303, 3435, 1235, 4441, 2776,
	2044, 2045, 1522, 1522, 4439, 1913, 4315, 2262, 1572, 1522,
	905, 2044, 2045, 3242, 2287, 5260, 2287, 5125, 4331, 4322,
	4324, 4325, 2828, 4339, 4338, 3679, 4775, 3319, 4753, 4003,
	4004, 3994, 4005, 3320, 3341, 2039, 1306, 4443, 4347, 2036,
	4326, 4440, 4348, 2047, 5595, 1529, 4436, 1462, 2777, 1569,
	4352, 4380, 4396, 4565, 2828, 4355, 4354, 4084, 306, 1408,
	2423, 2428, 3320, 4345, 1306, 5545, 1503, 4583, 2369, 3496,
	2046, 4437, 1063, 1503, 4651, 2615, 1540, 3412, 4564, 3410,
	3419, 2046, 5615, 4381, 3400, 908, 908, 4384, 922, 3402,
	3324, 3322, 1973, 5424, 5403, 5370, 5368, 1306, 1306, 5645,
	3892, 4401, 4402, 3401, 3323, 5305, 5224, 4063, 4064, 4469,
	4065, 4470, 799, 5221, 4471, 5103, 4268, 5032, 4472, 1598,
	4662, 4398, 4399, 4653, 4633, 4176, 3545, 3511, 3910, 3498,
	3096, 2366, 2273, 5124, 4106, 5250, 3388, 4424, 4413, 4107,
	4414, 4418, 4106, 4411, 3239, 1737, 1736, 4107, 1730, 1306,
	1306, 1237, 3900, 2538, 2424, 1426, 4490, 1306, 5681, 4546,
	5614, 3779, 3780, 2044, 2045, 4106, 4984, 4509, 4935, 4511,
	4107, 2410, 3275, 2409, 3274, 2534, 5389, 4523, 1720, 1720,
	1748, 1748, 1898, 2265, 972, 4462, 1720, 4468, 1897, 1720,
	1720, 1747, 1426, 1748, 4745, 1748, 4452, 2972, 4312, 1720,
	3628, 2263, 3007, 2410, 1522, 2409, 5552, 1972, 4595, 2431,
	1971, 4661, 4527, 5225, 4434, 4328, 1429, 1429, 5166, 4926,
	4528, 4530, 4435, 975, 4921, 1426, 4920, 4805, 4801, 4800,
	4741, 4715, 4585, 2287, 4451, 4327, 4077, 4561, 4074, 2284,
	4555, 3631, 4590, 2136, 2135, 3653, 2783, 4576, 5666, 5626,
	5478, 5407, 4515, 5406, 4586, 3162, 5405, 5336, 1306, 4568,
	4548, 4549, 5280, 4567, 4650, 4520, 3950, 5276, 5199, 5155,
	5092, 2429, 5086, 5085, 5083, 5082, 4978, 4438, 4953, 1720,
	4879, 4815, 4799, 4798, 4688, 1306, 4682, 4618, 4577, 4506,
	3336, 4600, 4601, 1431, 1306, 4498, 4266, 4180, 4669, 4179,
	3986, 3928, 1720, 3634, 3621, 4624, 3593, 1720, 1720, 1720,
	4678, 3592, 3591, 3590, 3529, 3500, 3951, 4594, 3313, 3244,
	3212, 3211, 2901, 2769, 4646, 2731, 2724, 4587, 2723, 2280,
	2722, 2721, 1720, 2720, 1720, 2630, 4645, 2601, 4643, 2600,
	1720, 4596, 1600, 4605, 4685, 4670, 4609, 2599, 2598, 4574,
	2597, 3423, 2596, 2336, 2335, 2334, 2332, 4673, 4426, 2253,
	2252, 1996, 1995, 1924, 1799, 1798, 1797, 4610, 1796, 1795,
	1794, 1793, 1789, 4593, 1787, 1786, 1600, 4604, 1724, 1306,
	1306, 1723, 1589, 4689, 1588, 1306, 1306, 2287, 3551, 1587,
	1306, 1306, 1586, 1306, 1585, 4122, 1532, 4672, 1306, 1486,
	4703, 3563, 4656, 1485, 4658, 4632, 1484, 1483, 4709, 1306,
	1482, 1481, 1480, 2425, 1474, 1473, 1472, 3972, 4649, 1471,
	1470, 1388, 2372, 1195, 1186, 1306, 4652, 4655, 5311, 4858,
	4857, 4856, 4701, 2765, 2609, 107, 1782, 4704, 3356, 100,
	2530, 4505, 5546, 5658, 5690, 4674, 2592, 2464, 5457, 5456,
	4671, 4679, 5341, 3229, 2330, 4603, 4680, 4711, 4726, 4135,
	4702, 4687, 4686, 4134, 5551, 2468, 5195, 997, 5031, 1147,
	5454, 1772, 1012, 4739, 5435, 3988, 3440, 1925, 5218, 2706,
	3873, 3164, 5395, 4749, 3738, 5267, 5055, 4735, 1431, 2975,
	2140, 4705, 3822, 102, 4772, 1290, 1431, 1338, 4967, 4712,
	1600, 1600, 4966, 1600, 4842, 4492, 4145, 4963, 2287, 4962,
	2277, 2279, 1253, 1603, 1431, 203, 3104, 4720, 3106, 5486,
	2383, 5672, 2392, 4727, 1720, 1720, 2166, 3054, 1315, 1353,
	1310, 1311, 2281, 1314, 1312, 1313, 2160, 1309, 2276, 4660,
	4165, 3549, 4206, 1842, 4714, 1840, 1600, 1149, 3160, 2895,
	4780, 2959, 3727, 2133, 1269, 1292, 2956, 1522, 1455, 1281,
	3850, 3878, 4193, 3097, 4415, 2805, 1022, 3776, 2962, 1444,
	3077, 2275, 1425, 3070, 1306, 3066, 1427, 1429, 3938, 3539,
	2014, 5069, 2111, 4791, 3550, 1431, 1566, 1431, 1273, 4807,
	4808, 2893, 2124, 1426, 3705, 4765, 2815, 4200, 3876, 3206,
	5465, 4335, 3629, 2605, 1405, 1404, 1453, 1403, 5441, 1425,
	5438, 2520, 1522, 1427, 4970, 4140, 4889, 4141, 2375, 3268,
	2905, 1316, 1600, 4160, 1522, 1286, 3606, 1522, 4898, 3607,
	1708, 4901, 4865, 2752, 4865, 4267, 3835, 4777, 4778, 4779,
	4631, 1801, 1425, 5132, 4869, 1298, 1427, 4783, 4785, 2096,
	1306, 4782, 3467, 1600, 3466, 5300, 1551, 4776, 4834, 4792,
	4794, 1549, 1548, 4885, 4886, 4781, 4831, 4832, 4837, 1547,
	5635, 3425, 3420, 2539, 313, 313, 313, 4501, 805, 806,
	4883, 822, 805, 822, 834, 4500, 4499, 875, 274, 3672,
	2033, 895, 4790, 2025, 271, 4882, 902, 902, 902, 902,
	1729, 313, 1720, 1720, 4839, 4822, 3242, 1306, 1306, 313,
	273, 4833, 272, 3992, 4428, 3882, 1900, 1431, 5543, 4525,
	4806, 4868, 4936, 4127, 4888, 27, 4907, 909, 910, 4909,
	911, 1050, 3278, 4911, 2402, 1568, 4476, 4897, 313, 26,
	4900, 25, 1522, 24, 23, 130, 4989, 4884, 28, 49,
	30, 29, 5, 22, 174, 1600, 4925, 172, 4927, 149,
	1720, 4899, 4928, 169, 4865, 168, 140, 167, 166, 165,
	164, 4952, 1429, 163, 171, 162, 161, 156, 4951, 5007,
	1429, 4810, 4811, 4812, 160, 1720, 1720, 1720, 1720, 1720,
	1720, 1720, 4902, 159, 4818, 4819, 4820, 158, 1429, 4823,
	4919, 157, 155, 153, 154, 148, 4444, 4445, 4960, 1600,
	4993, 4982, 4996, 4990, 4937, 4645, 152, 4643, 151, 150,
	147, 1306, 1306, 1306, 4457, 4458, 5008, 2284, 2284, 146,
	4946, 4467, 4945, 145, 144, 143, 142, 3239, 141, 1600,
	5040, 5041, 139, 4965, 1306, 4947, 4955, 1306, 1306, 4950,
	4981, 4971, 4973, 4979, 5024, 173, 138, 1306, 5028, 137,
	2287, 219, 4961, 136, 135, 1306, 1306, 134, 5011, 1429,
	133, 1429, 132, 131, 888, 889, 68, 67, 127, 128,
	21, 4992, 47, 4657, 1600, 5016, 1720, 5009, 16, 72,
	4787, 805, 805, 73, 1426, 1426, 20, 5030, 15, 313,
	42, 5047, 5002, 105, 119, 5022, 5021, 118, 117, 43,
	114, 41, 1522, 19, 18, 17, 112, 2280, 2280, 111,
	110, 40, 38, 13, 11, 5033, 44, 2226, 14, 5042,
	7, 211, 208, 4817, 207, 210, 1600, 206, 209, 104,
	205, 106, 204, 103, 1306, 36, 5078, 12, 5079, 5052,
	199, 4706, 4638, 95, 202, 201, 200, 1306, 198, 197,
	5064, 196, 193, 96, 93, 195, 1306, 99, 98, 194,
	94, 2287, 5058, 97, 34, 8, 71, 9, 5034, 4245,
	122, 1306, 123, 5109, 1306, 45, 5075, 5076, 91, 90,
	89, 88, 33, 70, 32, 5080, 268, 266, 267, 265,
	264, 1429, 189, 244, 243, 1306, 242, 241, 1306, 240,
	1425, 5106, 239, 5107, 1427, 1600, 238, 237, 236, 5135,
	231, 1720, 1306, 235, 1720, 1720, 233, 232, 234, 230,
	260, 1522, 259, 258, 257, 5181, 2122, 256, 255, 254,
	2127, 253, 247, 246, 2275, 252, 5108, 251, 250, 249,
	248, 2430, 5114, 5158, 245, 263, 84, 5159, 5105, 229,
	228, 227, 225, 1431, 221, 1431, 5146, 5147, 5154, 224,
	226, 223, 222, 220, 262, 261, 5190, 192, 85, 187,
	188, 5171, 83, 186, 185, 184, 183, 182, 5157, 181,
	180, 82, 5177, 5178, 5198, 1600, 5152, 191, 1720, 190,
	31, 5216, 2, 1, 0, 5202, 5156, 5167, 0, 5169,
	4865, 5170, 4865, 0, 2284, 0, 0, 5234, 0, 0,
	0, 5160, 0, 5211, 0, 5168, 0, 5161, 0, 0,
	0, 0, 0, 0, 0, 0, 1306, 1306, 0, 0,
	0, 0, 0, 5193, 5180, 0, 5220, 5192, 0, 0,
	5243, 0, 5245, 1306, 2287, 5144, 0, 0, 5200, 4645,
	5239, 4643, 0, 0, 5235, 0, 0, 4142, 5182, 0,
	0, 0, 0, 0, 5237, 0, 5217, 5215, 0, 1522,
	1522, 1522, 0, 0, 1522, 1522, 1522, 2639, 1522, 1522,
	5219, 0, 5194, 0, 0, 0, 1598, 5207, 5241, 5209,
	0, 5236, 0, 0, 2280, 0, 5242, 1306, 0, 1306,
	0, 1306, 5011, 0, 0, 0, 5256, 5257, 0, 0,
	0, 1431, 0, 0, 0, 0, 5053, 0, 5248, 0,
	0, 0, 2284, 0, 1306, 0, 1431, 0, 0, 0,
	0, 0, 5231, 0, 5295, 0, 0, 5293, 0, 0,
	0, 0, 0, 0, 5265, 1426, 0, 0, 0, 0,
	0, 0, 5259, 0, 0, 4915, 0, 5255, 4865, 0,
	0, 5053, 0, 0, 0, 0, 0, 0, 0, 2572,
	0, 0, 0, 4865, 0, 5288, 2287, 0, 5292, 0,
	0, 5291, 0, 0, 0, 0, 0, 5322, 0, 1431,
	0, 1431, 0, 0, 0, 0, 5316, 0, 0, 5357,
	5315, 1425, 1425, 0, 0, 1427, 1427, 5343, 1431, 0,
	0, 1431, 2280, 2831, 0, 1720, 0, 0, 5369, 0,
	0, 0, 5345, 0, 0, 1720, 0, 0, 2275, 0,
	4977, 0, 0, 0, 0, 0, 4865, 1429, 4865, 1429,
	0, 1306, 1306, 0, 5331, 5332, 0, 0, 0, 0,
	4991, 1306, 5333, 0, 5338, 4865, 0, 0, 4865, 0,
	5323, 5340, 0, 0, 5356, 0, 0, 0, 0, 4826,
	0, 5342, 0, 0, 5015, 0, 0, 0, 0, 4982,
	0, 5382, 0, 4645, 5374, 4643, 0, 0, 5391, 0,
	5392, 5383, 2831, 0, 0, 5386, 0, 0, 0, 5388,
	5385, 5387, 5390, 0, 0, 0, 0, 1306, 1306, 0,
	0, 1306, 5408, 5409, 5410, 1720, 1522, 5400, 1522, 1446,
	5404, 5399, 0, 5359, 0, 5361, 0, 0, 0, 0,
	822, 0, 0, 0, 0, 5440, 5443, 5432, 0, 5414,
	1426, 0, 5375, 0, 822, 5377, 0, 0, 1426, 5464,
	313, 5469, 0, 5468, 5422, 5423, 0, 1476, 0, 5431,
	0, 0, 5430, 0, 0, 0, 1426, 0, 313, 0,
	313, 313, 0, 1507, 313, 1516, 5449, 1306, 1306, 1306,
	0, 0, 5489, 5450, 5491, 5471, 1530, 5444, 0, 0,
	0, 5448, 5445, 0, 895, 1429, 0, 895, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5475, 0,
	1429, 0, 0, 5479, 0, 5482, 5490, 1306, 0, 5524,
	902, 5467, 0, 0, 0, 5101, 0, 0, 0, 0,
	5529, 0, 0, 0, 0, 5506, 0, 1426, 0, 1426,
	5505, 1720, 5503, 5504, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 313, 313, 313, 1507, 2430, 313,
	313, 0, 0, 5560, 0, 5559, 5525, 1516, 0, 5526,
	0, 0, 0, 1429, 5568, 1429, 5542, 0, 5527, 5570,
	1306, 313, 0, 1750, 0, 0, 5540, 5574, 1522, 1522,
	5561, 5550, 1429, 5558, 0, 1429, 0, 5562, 5583, 1770,
	5567, 5198, 0, 0, 0, 0, 5566, 5553, 1779, 0,
	5576, 5411, 5412, 0, 0, 5580, 0, 0, 0, 5575,
	0, 5589, 5590, 5539, 5602, 1803, 5541, 1516, 0, 5594,
	1306, 5598, 313, 313, 5596, 1507, 5593, 0, 0, 0,
	0, 5604, 5440, 0, 5606, 5443, 5608, 0, 5605, 0,
	1431, 0, 1431, 0, 0, 0, 5621, 895, 0, 313,
	313, 5622, 1425, 0, 5629, 5618, 1427, 0, 0, 1426,
	0, 1868, 0, 5628, 5613, 5617, 5627, 5619, 0, 0,
	0, 5623, 1876, 0, 5620, 5637, 0, 1050, 0, 0,
	0, 0, 1522, 0, 0, 5631, 0, 4865, 0, 4865,
	0, 0, 0, 0, 0, 0, 5653, 0, 5652, 0,
	0, 5636, 0, 0, 0, 0, 0, 0, 0, 5659,
	0, 0, 0, 5665, 5096, 0, 1306, 1306, 0, 5676,
	0, 0, 0, 5667, 5467, 1306, 1306, 0, 0, 5660,
	0, 5674, 0, 5688, 5679, 5684, 5661, 5694, 0, 0,
	5670, 0, 6, 5698, 5668, 10, 0, 5699, 0, 0,
	5695, 5693, 5701, 5692, 5709, 5708, 0, 5703, 0, 0,
	5702, 0, 313, 203, 5707, 5713, 5710, 0, 0, 0,
	5696, 0, 0, 5715, 5630, 0, 5632, 5700, 1522, 0,
	5719, 0, 5721, 0, 5725, 5722, 5716, 5718, 313, 0,
	5717, 0, 0, 0, 5728, 5729, 5732, 0, 5459, 5723,
	0, 0, 0, 0, 1306, 5685, 5686, 3551, 0, 0,
	2810, 5741, 5725, 5738, 0, 5740, 0, 0, 5720, 0,
	5687, 5735, 0, 0, 5737, 2471, 0, 0, 0, 5731,
	0, 0, 0, 5730, 0, 0, 2899, 0, 0, 5734,
	0, 0, 3551, 0, 0, 3702, 3703, 1425, 0, 0,
	5329, 1427, 2122, 0, 0, 1425, 0, 0, 0, 1427,
	0, 0, 0, 0, 0, 0, 0, 2481, 0, 0,
	0, 0, 0, 1425, 0, 0, 0, 1427, 939, 0,
	0, 0, 0, 0, 5736, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 951, 0, 0, 0, 5371, 0,
	1729, 5373, 0, 0, 0, 0, 0, 1729, 0, 0,
	0, 0, 0, 0, 1429, 949, 1429, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2477, 0, 0, 0,
	0, 0, 0, 0, 1425, 0, 1425, 0, 1427, 952,
	1427, 0, 0, 0, 0, 0, 0, 0, 0, 4231,
	0, 3072, 0, 0, 0, 0, 0, 0, 2284, 0,
	0, 0, 0, 0, 4229, 0, 0, 0, 0, 0,
	0, 5277, 5278, 5279, 4222, 0, 5281, 5282, 5283, 0,
	5284, 5285, 0, 0, 0, 2284, 2284, 805, 0, 2474,
	0, 0, 0, 0, 945, 1426, 0, 1426, 0, 0,
	0, 960, 0, 0, 0, 0, 0, 0, 313, 0,
	313, 0, 0, 0, 313, 0, 0, 950, 0, 0,
	3803, 3804, 3805, 3806, 0, 0, 0, 1750, 1507, 1516,
	313, 0, 313, 2251, 0, 0, 0, 5460, 0, 0,
	313, 0, 822, 0, 0, 5476, 2479, 5477, 2280, 313,
	0, 0, 0, 2284, 0, 0, 0, 3779, 3780, 0,
	3797, 3798, 3799, 0, 4233, 0, 1425, 0, 0, 0,
	1427, 2337, 944, 0, 0, 2280, 2280, 0, 0, 0,
	4732, 0, 0, 0, 313, 0, 4224, 0, 0, 870,
	0, 0, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 4223, 0, 0, 0, 0, 0, 2044, 2045,
	0, 0, 2480, 0, 0, 0, 0, 947, 0, 0,
	0, 0, 0, 0, 0, 895, 0, 0, 0, 0,
	0, 0, 2075, 0, 0, 0, 0, 0, 3794, 0,
	2047, 0, 0, 2280, 0, 0, 0, 0, 2484, 0,
	0, 0, 0, 1426, 0, 0, 0, 0, 0, 0,
	0, 4232, 0, 902, 0, 902, 0, 0, 1426, 2100,
	0, 0, 0, 0, 0, 902, 902, 0, 2046, 0,
	0, 0, 0, 0, 959, 0, 0, 0, 3779, 3780,
	0, 3797, 3798, 3799, 0, 0, 0, 0, 0, 1713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4731, 0, 0, 0, 0, 0, 0, 5451, 0,
	5452, 2472, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1426, 2482, 1426, 0, 0, 0, 0, 2044, 2045,
	0, 3785, 0, 1775, 0, 0, 0, 0, 0, 2478,
	1426, 0, 0, 1426, 2284, 0, 0, 0, 3359, 0,
	0, 0, 2075, 0, 0, 0, 0, 0, 941, 3794,
	2047, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2475, 0, 0, 0, 0, 0, 0, 2473, 0, 0,
	0, 0, 2052, 0, 0, 2483, 1856, 0, 0, 2100,
	0, 946, 0, 0, 0, 0, 0, 0, 2046, 0,
	0, 4235, 1871, 0, 0, 0, 0, 0, 3801, 0,
	0, 0, 0, 0, 0, 0, 0, 5461, 2044, 2045,
	313, 0, 0, 0, 313, 0, 4230, 4225, 4226, 4227,
	4228, 0, 0, 869, 2280, 0, 2074, 2076, 0, 0,
	0, 0, 2075, 0, 0, 0, 0, 0, 0, 955,
	2047, 0, 3795, 0, 0, 0, 0, 0, 943, 0,
	0, 2476, 3785, 313, 1901, 5462, 0, 0, 4234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2100,
	5591, 5592, 313, 0, 0, 0, 0, 0, 2046, 0,
	0, 0, 0, 313, 0, 0, 0, 0, 0, 2066,
	313, 0, 1425, 2067, 1425, 0, 1427, 0, 1427, 2063,
	0, 940, 2052, 0, 0, 0, 313, 953, 313, 4236,
	0, 0, 805, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2097, 0, 895, 0, 0, 3801,
	1050, 948, 0, 0, 2284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 871, 0, 0,
	0, 0, 0, 0, 0, 0, 2074, 2076, 4730, 942,
	0, 0, 1507, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3795, 5656, 2097, 0, 0, 0, 895,
	2284, 2284, 2069, 2070, 2071, 2072, 313, 957, 958, 0,
	954, 0, 2052, 0, 2703, 0, 0, 0, 0, 313,
	0, 313, 1729, 313, 0, 313, 0, 313, 0, 313,
	3796, 0, 2284, 2284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 2280, 0, 0, 0, 0, 0,
	315, 1260, 0, 0, 2741, 0, 0, 2742, 0, 2743,
	0, 2744, 0, 0, 0, 2284, 2074, 2076, 0, 0,
	1425, 0, 0, 3662, 1427, 2097, 313, 313, 313, 313,
	0, 2068, 313, 0, 0, 1425, 0, 0, 0, 1427,
	2280, 2280, 1426, 0, 1426, 0, 0, 0, 2061, 2062,
	0, 0, 0, 0, 0, 1729, 1729, 0, 0, 875,
	0, 0, 0, 895, 0, 0, 0, 0, 0, 0,
	0, 0, 2280, 2280, 0, 2097, 0, 0, 0, 0,
	0, 0, 0, 2067, 0, 4291, 4292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1425, 2099,
	1425, 0, 1427, 0, 1427, 2280, 3072, 3072, 0, 0,
	0, 3796, 0, 0, 0, 0, 0, 1425, 0, 0,
	1425, 1427, 0, 0, 1427, 2284, 2284, 0, 2284, 0,
	0, 0, 0, 0, 0, 0, 3779, 3780, 0, 3797,
	3798, 3799, 3791, 3792, 3793, 0, 0, 0, 0, 3790,
	3788, 3789, 3781, 3782, 3783, 3784, 3786, 3787, 2907, 4300,
	0, 2068, 0, 2323, 0, 2097, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4356, 4357,
	4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367,
	4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 0, 4379,
	0, 2055, 2056, 2048, 2049, 2050, 2051, 2053, 2054, 0,
	0, 0, 0, 0, 0, 2280, 2280, 3794, 2280, 1267,
	0, 0, 0, 0, 0, 2073, 0, 0, 0, 2099,
	0, 0, 0, 805, 0, 2471, 3098, 0, 0, 0,
	1729, 1729, 1729, 1729, 0, 0, 0, 0, 0, 313,
	0, 2068, 0, 0, 0, 2471, 0, 0, 805, 0,
	0, 0, 0, 0, 0, 313, 0, 805, 0, 0,
	0, 0, 0, 3791, 3792, 3793, 0, 2481, 0, 313,
	3790, 3788, 3789, 3781, 3782, 3783, 3784, 3786, 3787, 0,
	0, 3072, 3072, 3072, 3072, 0, 0, 2481, 0, 313,
	1516, 0, 0, 0, 0, 0, 313, 0, 313, 1750,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 2099,
	3785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2056, 2048, 2049, 2050, 2051, 2053, 2054, 0,
	0, 0, 0, 0, 0, 2284, 2477, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 1516, 0, 313, 822,
	0, 822, 0, 0, 0, 0, 2477, 0, 313, 0,
	0, 313, 0, 0, 0, 3243, 0, 0, 0, 0,
	0, 313, 313, 0, 0, 0, 313, 0, 313, 0,
	0, 0, 0, 1507, 0, 313, 313, 3801, 1516, 1516,
	3259, 0, 0, 0, 0, 313, 2044, 2045, 0, 2474,
	0, 0, 0, 0, 0, 0, 0, 2064, 2060, 0,
	2057, 2055, 2056, 2048, 2049, 2050, 2051, 2053, 2054, 2474,
	2075, 0, 0, 0, 0, 2280, 0, 0, 2047, 0,
	0, 3795, 0, 0, 0, 0, 0, 0, 0, 902,
	902, 0, 0, 902, 902, 0, 0, 0, 0, 1425,
	0, 1425, 3302, 1427, 0, 1427, 2479, 2100, 0, 0,
	0, 0, 0, 0, 313, 0, 2046, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 2479, 2066, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 2063, 0, 2284,
	0, 0, 313, 0, 0, 0, 2613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2470, 0, 0, 0,
	0, 0, 0, 2097, 0, 3372, 0, 0, 0, 0,
	0, 0, 2480, 0, 895, 0, 0, 0, 0, 895,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2480, 0, 0, 2650, 4294, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 2467, 0, 2484, 0,
	0, 0, 0, 2663, 2665, 0, 0, 0, 0, 0,
	2069, 2070, 2071, 2072, 0, 3432, 1750, 2669, 2484, 2280,
	2052, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2681, 2682, 2683, 2684, 0, 0, 0, 3796,
	0, 0, 0, 0, 0, 0, 0, 313, 3488, 0,
	2284, 0, 0, 0, 0, 0, 0, 0, 2465, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2472, 0, 0, 2074, 2076, 0, 0, 1750, 0,
	0, 313, 2482, 0, 3432, 0, 3358, 0, 0, 0,
	0, 2472, 313, 0, 0, 0, 0, 0, 0, 2478,
	0, 0, 2482, 3534, 0, 0, 2061, 2062, 2466, 0,
	0, 0, 0, 3302, 0, 805, 0, 0, 0, 2478,
	0, 0, 0, 0, 1050, 3302, 0, 0, 3359, 0,
	2475, 0, 0, 0, 0, 0, 0, 2473, 0, 0,
	2280, 2067, 0, 0, 0, 2483, 0, 313, 0, 0,
	2475, 0, 0, 0, 0, 0, 0, 2473, 0, 0,
	0, 0, 0, 0, 0, 2483, 0, 0, 313, 1507,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3608, 313, 0, 0, 0, 1507, 0, 1507, 0, 1507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3791, 3792, 3793, 0, 0, 0, 0, 3790, 3788,
	3789, 3781, 3782, 3783, 3784, 3786, 3787, 0, 0, 0,
	0, 2476, 0, 2097, 0, 0, 313, 0, 0, 0,
	0, 2044, 2045, 0, 2077, 2078, 2079, 2088, 2089, 2090,
	0, 2476, 313, 313, 313, 313, 1507, 0, 2284, 1507,
	0, 0, 313, 0, 0, 2075, 0, 313, 0, 0,
	0, 0, 0, 2047, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2094, 0, 0, 0, 0, 0,
	0, 0, 0, 2073, 0, 1729, 1729, 0, 313, 0,
	0, 0, 2100, 0, 0, 0, 313, 0, 0, 0,
	0, 2046, 0, 0, 0, 0, 0, 0, 0, 2068,
	0, 0, 2066, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2063, 1267, 1267, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3072, 3072, 2280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1684, 0, 0, 0, 0, 2099, 1729, 1729,
	1729, 1729, 1729, 1729, 1729, 1729, 1729, 1729, 1729, 1729,
	1729, 1729, 1729, 1729, 1729, 1729, 1729, 1729, 0, 1729,
	0, 0, 2284, 0, 0, 2069, 2070, 2071, 2072, 0,
	0, 0, 0, 0, 0, 2052, 0, 0, 0, 0,
	0, 0, 0, 0, 1750, 0, 0, 0, 0, 3072,
	3072, 3072, 3072, 3072, 3072, 3072, 3072, 3072, 3072, 3072,
	3072, 3072, 3072, 3072, 3072, 3072, 3072, 3072, 3072, 0,
	3072, 0, 0, 0, 0, 0, 0, 0, 2085, 0,
	0, 0, 2095, 0, 0, 0, 0, 0, 0, 2074,
	2076, 0, 0, 0, 0, 2064, 2060, 0, 2057, 2055,
	2056, 2048, 2049, 2050, 2051, 2053, 2054, 0, 0, 0,
	0, 0, 2280, 0, 0, 0, 0, 0, 0, 0,
	0, 2061, 2062, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2284, 0, 0, 0, 0, 0, 0,
	86, 2083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2067, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 0, 0, 0,
	2044, 2045, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5061, 0, 0, 0, 0, 0, 0,
	101, 0, 0, 2280, 2075, 0, 0, 0, 0, 0,
	0, 313, 2047, 0, 0, 0, 805, 0, 2097, 0,
	0, 805, 0, 0, 805, 0, 0, 805, 805, 0,
	0, 0, 0, 805, 0, 0, 805, 0, 0, 0,
	0, 2100, 0, 1044, 313, 0, 0, 0, 0, 0,
	2046, 0, 0, 0, 0, 0, 313, 0, 124, 0,
	0, 2066, 0, 0, 108, 121, 3424, 313, 0, 0,
	1750, 2063, 0, 0, 0, 0, 0, 0, 2073, 0,
	5117, 0, 0, 0, 2080, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 822, 2284, 0, 0, 0,
	0, 0, 0, 0, 2068, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 313, 313, 0, 0, 0, 0,
	4289, 109, 0, 0, 0, 0, 2086, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2069, 2070, 2071, 2072, 3302, 3302,
	313, 0, 3958, 3961, 2052, 0, 0, 0, 0, 3302,
	0, 2251, 2099, 0, 0, 0, 0, 0, 0, 0,
	3302, 2251, 0, 3302, 2251, 0, 2280, 2251, 0, 0,
	3958, 0, 0, 0, 0, 0, 0, 3577, 0, 0,
	0, 0, 313, 313, 3961, 0, 313, 0, 3584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2074, 2076,
	0, 0, 0, 0, 0, 3961, 0, 313, 2284, 0,
	0, 0, 4031, 3961, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4042, 0, 4042, 0,
	2061, 2062, 0, 0, 2084, 0, 0, 0, 1507, 0,
	0, 0, 0, 0, 1684, 0, 2058, 2059, 2065, 2087,
	2064, 2060, 0, 2057, 2055, 2056, 2048, 2049, 2050, 2051,
	2053, 2054, 3302, 0, 3302, 2067, 4078, 3302, 3961, 5264,
	0, 3302, 0, 0, 3636, 113, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3961, 0,
	0, 895, 0, 0, 0, 0, 0, 0, 2280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 0, 5299, 0, 0, 0, 0,
	313, 0, 0, 0, 212, 0, 116, 2080, 0, 120,
	0, 0, 0, 0, 0, 0, 0, 2097, 313, 0,
	5321, 4133, 0, 0, 4138, 3302, 0, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 0, 0,
	1267, 275, 0, 0, 0, 0, 0, 0, 1684, 1045,
	0, 0, 313, 0, 0, 170, 0, 3534, 0, 0,
	1507, 0, 313, 0, 0, 3302, 0, 805, 0, 0,
	3458, 0, 0, 0, 3302, 0, 0, 2073, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	0, 0, 0, 2068, 0, 3448, 3446, 0, 0, 0,
	0, 0, 0, 3450, 3452, 3442, 0, 0, 0, 0,
	0, 0, 0, 175, 4254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 4261, 276, 4262,
	0, 0, 1750, 0, 0, 313, 0, 0, 3468, 0,
	0, 1507, 313, 0, 313, 0, 0, 269, 0, 0,
	1507, 2099, 0, 1507, 0, 0, 270, 0, 0, 0,
	213, 2080, 0, 0, 0, 217, 0, 0, 0, 0,
	3779, 3780, 0, 3797, 3798, 3799, 0, 0, 0, 0,
	0, 0, 313, 0, 0, 0, 216, 2080, 0, 0,
	0, 0, 0, 4299, 0, 0, 0, 0, 0, 0,
	0, 2044, 2045, 0, 2077, 2078, 2079, 2088, 2089, 2090,
	0, 0, 1684, 0, 2080, 0, 0, 0, 0, 0,
	2080, 0, 0, 0, 2081, 2075, 2080, 0, 0, 0,
	0, 0, 0, 2047, 0, 0, 0, 0, 0, 0,
	0, 4333, 0, 0, 2094, 0, 0, 0, 0, 2064,
	2060, 3794, 2057, 2055, 2056, 2048, 2049, 2050, 2051, 2053,
	2054, 0, 2100, 0, 0, 0, 0, 0, 0, 0,
	0, 2046, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2066, 0, 0, 3779, 3780, 0, 3797, 3798,
	3799, 0, 2063, 0, 0, 3444, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2080, 0, 0, 0, 0, 2080, 0, 4392, 0,
	3459, 3449, 3447, 3451, 3453, 3443, 3445, 3461, 3463, 0,
	2080, 0, 0, 313, 313, 2080, 0, 0, 0, 3455,
	3457, 3465, 0, 0, 3785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3794, 0, 805, 0,
	0, 4417, 805, 0, 0, 2069, 2070, 2071, 2072, 0,
	805, 0, 0, 0, 0, 2052, 3469, 0, 0, 0,
	0, 0, 0, 1729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2080, 0, 0, 0, 0, 313, 2080,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 0,
	0, 3801, 2095, 0, 0, 0, 0, 0, 0, 2074,
	2076, 0, 0, 0, 3072, 0, 3779, 3780, 0, 3797,
	3798, 3799, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2091, 0, 2092, 0, 0, 0, 0, 3785,
	0, 2061, 2062, 0, 0, 3795, 0, 0, 0, 1421,
	1729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1267, 2204, 0, 2067, 1684, 0, 0,
	895, 0, 3462, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3794, 0, 0,
	0, 3072, 308, 308, 801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4542, 3801, 0, 4544, 0,
	0, 4547, 0, 0, 0, 0, 2093, 2097, 0, 4042,
	0, 0, 0, 2080, 2080, 2080, 2080, 2080, 2080, 2080,
	2080, 0, 0, 0, 0, 313, 0, 2082, 0, 0,
	0, 0, 0, 2080, 0, 0, 0, 3470, 2097, 0,
	3795, 0, 0, 0, 0, 0, 2080, 3454, 3456, 3432,
	1684, 3464, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3961, 0, 313, 0, 0, 0,
	822, 822, 1516, 0, 0, 0, 0, 0, 0, 0,
	3785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3796, 0, 3076, 0, 0, 2073, 0,
	313, 0, 4627, 0, 0, 3534, 2251, 4131, 4132, 0,
	2080, 313, 0, 0, 0, 0, 2080, 0, 4648, 0,
	3432, 0, 2097, 313, 2068, 1684, 0, 313, 0, 313,
	0, 0, 0, 0, 313, 0, 0, 0, 0, 1729,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1684, 0, 3302, 313, 0, 2086, 0, 0, 0,
	0, 0, 0, 0, 0, 1050, 3302, 0, 0, 0,
	4212, 0, 0, 1252, 0, 0, 0, 0, 0, 0,
	0, 0, 4238, 0, 0, 0, 0, 0, 0, 0,
	3072, 0, 2099, 0, 0, 1729, 0, 0, 0, 0,
	313, 3795, 0, 0, 3961, 0, 0, 3259, 3796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1729, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3072, 0, 0, 0,
	0, 0, 0, 0, 0, 3791, 3792, 3793, 0, 0,
	0, 0, 3790, 3788, 3789, 3781, 3782, 3783, 3784, 3786,
	3787, 3072, 0, 0, 2084, 0, 0, 0, 0, 0,
	0, 0, 0, 2097, 4750, 0, 2058, 2059, 2065, 2087,
	2064, 2060, 0, 2057, 2055, 2056, 2048, 2049, 2050, 2051,
	2053, 2054, 0, 0, 0, 0, 0, 5421, 0, 0,
	0, 1684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 0, 0, 0, 0, 1750, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3796,
	3791, 3792, 3793, 0, 0, 313, 0, 3790, 3788, 3789,
	3781, 3782, 3783, 3784, 3786, 3787, 0, 3047, 3048, 3049,
	3050, 3043, 3044, 3045, 3046, 309, 0, 0, 1516, 1516,
	1516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 1516, 1516, 0, 313, 1516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3302, 3302, 0, 3958, 1684, 0, 4042, 3302, 0,
	0, 0, 0, 0, 0, 0, 4867, 0, 4867, 1750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3302, 0, 2251, 0, 0, 0, 3958, 0, 1750, 1750,
	313, 3961, 0, 0, 0, 931, 0, 0, 0, 0,
	3023, 3024, 3025, 3026, 3961, 0, 313, 3961, 0, 313,
	4903, 0, 0, 0, 0, 4042, 0, 0, 4042, 0,
	0, 0, 4042, 0, 3035, 3036, 3037, 3038, 3031, 3032,
	3033, 3034, 3039, 3040, 3041, 3042, 0, 0, 0, 0,
	0, 3302, 0, 3302, 313, 0, 0, 0, 0, 0,
	0, 3791, 3792, 3793, 0, 0, 3432, 0, 3790, 3788,
	3789, 3781, 3782, 3783, 3784, 3786, 3787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3302, 3302, 0, 0, 0, 4867, 0,
	3534, 0, 4975, 0, 0, 0, 0, 0, 3958, 3019,
	3020, 3021, 3022, 3027, 3028, 3029, 3030, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2080, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2080, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4588, 4589,
	0, 0, 0, 0, 0, 0, 2080, 0, 4591, 0,
	2080, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2080, 0, 0, 1267, 0, 0,
	0, 4417, 0, 0, 0, 2080, 2080, 2080, 2080, 2080,
	2080, 2080, 2080, 2080, 2080, 2080, 2080, 2080, 2080, 2080,
	2080, 2080, 2080, 2080, 2080, 2080, 2080, 2080, 2080, 2080,
	2080, 2080, 2080, 2080, 2080, 2080, 2080, 2080, 2080, 2080,
	2080, 0, 0, 0, 0, 0, 2080, 0, 2080, 2080,
	2080, 2080, 3302, 2251, 0, 2251, 0, 0, 4648, 0,
	3076, 3076, 0, 0, 0, 0, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 2080, 0, 5133, 0, 5133,
	1525, 4684, 0, 0, 0, 0, 2663, 4690, 4691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 895, 0, 0, 1252, 1252, 1252,
	0, 0, 0, 0, 0, 0, 0, 4042, 1750, 0,
	0, 0, 1750, 0, 1507, 0, 2080, 0, 0, 0,
	1595, 0, 0, 0, 0, 0, 0, 1707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3961, 0, 313, 0, 0, 2080, 0, 0, 2080,
	0, 1699, 2080, 0, 0, 2080, 0, 1725, 0, 0,
	0, 2080, 2080, 2080, 2080, 2080, 2080, 2080, 0, 0,
	4648, 0, 0, 0, 4867, 0, 4867, 0, 1750, 0,
	0, 0, 3302, 0, 0, 0, 1752, 0, 1758, 313,
	1764, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5228, 0, 855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 839, 1857, 1858, 0,
	2080, 840, 0, 3800, 0, 3076, 3076, 3076, 3076, 0,
	0, 2080, 0, 2080, 0, 313, 313, 0, 2080, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 86, 1864, 0, 1684, 0, 0, 0, 0, 4333,
	0, 0, 0, 0, 841, 0, 1878, 0, 1883, 0,
	87, 0, 0, 0, 0, 842, 0, 0, 0, 0,
	0, 0, 0, 4796, 4797, 0, 0, 0, 92, 0,
	0, 0, 0, 0, 4042, 5290, 0, 0, 843, 0,
	0, 0, 4648, 0, 0, 0, 0, 0, 1684, 0,
	0, 0, 0, 0, 0, 0, 0, 1291, 126, 0,
	0, 861, 4867, 0, 0, 0, 1684, 0, 0, 0,
	1983, 101, 0, 0, 0, 0, 0, 4867, 0, 0,
	1951, 0, 0, 1957, 844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1684, 0, 0, 0, 313, 0, 0, 0, 0, 845,
	837, 0, 0, 0, 1044, 0, 0, 2044, 2045, 0,
	0, 0, 0, 822, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 846, 108, 121, 0, 0, 838,
	4867, 2075, 4867, 0, 0, 0, 0, 0, 0, 2047,
	0, 0, 0, 0, 0, 1267, 870, 0, 0, 4867,
	0, 313, 4867, 0, 0, 0, 126, 1267, 0, 0,
	0, 0, 2251, 0, 0, 0, 0, 0, 2100, 0,
	0, 0, 0, 1750, 860, 1750, 0, 2046, 0, 0,
	2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2066, 0,
	0, 2663, 109, 0, 0, 0, 0, 0, 2063, 0,
	0, 0, 0, 0, 1468, 0, 0, 0, 1516, 1516,
	0, 0, 0, 0, 2121, 0, 0, 0, 0, 0,
	2134, 0, 1491, 5420, 1491, 1491, 0, 0, 931, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5133,
	0, 857, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 1223, 0, 0, 0, 0, 0, 4288, 0, 0,
	0, 0, 0, 0, 1245, 0, 3302, 0, 0, 0,
	0, 0, 0, 0, 5023, 0, 5025, 5026, 5027, 0,
	5029, 2069, 2070, 2071, 2072, 0, 1684, 0, 0, 0,
	0, 2052, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 1693,
	1468, 0, 0, 1709, 931, 0, 0, 0, 0, 867,
	0, 848, 2236, 0, 4333, 1415, 0, 0, 2198, 2198,
	2198, 0, 0, 0, 0, 3203, 0, 0, 2246, 0,
	1707, 0, 0, 0, 0, 2074, 2076, 0, 0, 0,
	0, 1750, 868, 0, 849, 0, 113, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1684, 0, 0, 2080, 2080, 5081, 2080, 2061, 2062, 0,
	0, 0, 0, 0, 0, 0, 931, 931, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	869, 1707, 0, 0, 0, 0, 0, 0, 850, 0,
	0, 0, 2067, 865, 866, 212, 863, 116, 0, 0,
	120, 0, 0, 0, 0, 858, 0, 0, 851, 0,
	0, 4648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	1045, 0, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 852, 0, 859, 3302,
	0, 0, 0, 0, 1252, 0, 0, 853, 0, 0,
	0, 4867, 0, 4867, 2097, 0, 1750, 0, 0, 0,
	0, 2080, 0, 854, 0, 0, 277, 0, 862, 0,
	5173, 0, 0, 0, 0, 0, 0, 0, 0, 1684,
	0, 0, 1684, 0, 871, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 0, 856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 2073, 0, 0, 0, 0, 276,
	0, 0, 3302, 0, 0, 0, 0, 2080, 2080, 0,
	3076, 3076, 0, 0, 2080, 0, 0, 0, 269, 3432,
	2068, 0, 0, 0, 3800, 3800, 0, 270, 2080, 2080,
	0, 213, 0, 0, 0, 0, 217, 3302, 2080, 0,
	0, 1684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3432, 2080, 0, 0, 0, 0, 216, 1684, 0,
	0, 0, 0, 0, 2080, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2099, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3076, 3076, 3076, 3076, 3076, 3076, 3076,
	3076, 3076, 3076, 3076, 3076, 3076, 3076, 3076, 3076, 3076,
	3076, 3076, 3076, 0, 3076, 3800, 3800, 3800, 3800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2603, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2626, 0,
	0, 0, 2080, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2638, 0, 2638, 0, 0, 0,
	0, 0, 2645, 0, 0, 0, 2064, 2060, 0, 2057,
	2055, 2056, 2048, 2049, 2050, 2051, 2053, 2054, 0, 0,
	0, 1684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2673, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 2695, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2663, 0, 0, 0, 0, 2712,
	0, 2714, 0, 2716, 0, 2718, 0, 2719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1491, 0,
	0, 0, 0, 0, 0, 0, 0, 1709, 0, 0,
	0, 0, 0, 2080, 0, 2728, 0, 0, 0, 0,
	0, 0, 0, 0, 2749, 2750, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 2762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2080, 2080, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2804, 0, 2808, 0, 0,
	0, 0, 0, 0, 2822, 0, 0, 1252, 0, 0,
	0, 0, 0, 2833, 2834, 2835, 2836, 2837, 2838, 2839,
	2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849,
	2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859,
	2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 0,
	2874, 0, 2876, 2877, 2878, 2879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 126, 0, 126, 0, 0, 0, 2903, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2121, 0, 0, 0, 2954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2984, 2987, 2990, 2993, 0, 0, 2999, 3000, 3001, 3002,
	3003, 3004, 3005, 0, 0, 0, 0, 1245, 126, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 126, 3068, 0, 3079,
	3081, 3086, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1684, 0, 0, 0, 0, 3171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1684, 0, 2080, 2080,
	0, 0, 2080, 3800, 3800, 2080, 0, 2619, 86, 2080,
	0, 0, 0, 0, 0, 0, 2080, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 87, 0, 2080,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 0, 0, 0, 0,
	0, 0, 2080, 2080, 2080, 2080, 2080, 0, 0, 0,
	0, 0, 0, 2080, 0, 2080, 0, 0, 3800, 3800,
	3800, 3800, 3800, 3800, 3800, 3800, 3800, 3800, 3800, 3800,
	3800, 3800, 3800, 3800, 3800, 3800, 3800, 3800, 101, 0,
	0, 3800, 0, 2626, 2080, 2080, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2080, 0, 0,
	0, 0, 0, 0, 0, 0, 2080, 0, 0, 0,
	1684, 1684, 0, 1684, 0, 1223, 0, 0, 0, 0,
	0, 1044, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 56, 0, 124, 0, 2114, 0,
	0, 0, 108, 121, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1684, 2120, 0, 0,
	0, 2126, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2619, 2753, 0, 0, 2756, 2080, 0, 0,
	0, 0, 0, 0, 1267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2080, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 86, 0, 0, 0, 0,
	0, 0, 0, 0, 1302, 0, 2080, 0, 0, 0,
	0, 0, 1684, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 1707, 0, 0, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 0, 2080, 2080,
	0, 0, 0, 1684, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 312, 312,
	0, 0, 0, 0, 2218, 0, 2221, 0, 126, 0,
	0, 0, 0, 0, 0, 101, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3491, 3492, 0, 3494, 3510,
	0, 0, 0, 0, 0, 0, 0, 0, 1044, 0,
	2626, 973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 56, 0, 124, 0, 0, 0, 0, 0, 108,
	121, 0, 0, 0, 0, 1684, 0, 0, 0, 0,
	0, 0, 0, 113, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2080, 0, 0, 0, 0, 0, 0,
	2044, 2045, 0, 0, 0, 3582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2075, 0, 3595, 0, 3598, 1684,
	0, 0, 2047, 0, 0, 0, 109, 0, 0, 0,
	2080, 2080, 212, 0, 116, 2080, 2080, 120, 0, 2080,
	2080, 0, 0, 931, 2080, 0, 0, 0, 2080, 1684,
	0, 2100, 0, 2080, 0, 1468, 0, 0, 0, 0,
	2046, 0, 0, 0, 0, 0, 0, 0, 3076, 275,
	0, 2066, 0, 0, 3632, 3619, 0, 1045, 0, 0,
	0, 2063, 0, 170, 0, 0, 0, 0, 0, 0,
	3643, 1707, 3645, 1707, 1684, 0, 0, 0, 0, 931,
	3652, 0, 1428, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1468, 0, 0, 1468, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 1491, 3246, 0, 0, 0,
	1491, 0, 1491, 0, 0, 0, 0, 0, 0, 931,
	931, 0, 0, 0, 3681, 0, 1684, 0, 0, 0,
	0, 175, 0, 0, 0, 3076, 2101, 2102, 0, 0,
	0, 0, 0, 0, 2069, 2070, 2071, 2072, 218, 0,
	0, 1252, 0, 0, 2052, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	113, 0, 0, 0, 1267, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 213, 0,
	0, 0, 0, 217, 3685, 3686, 0, 0, 2080, 0,
	3692, 0, 0, 0, 0, 1684, 0, 0, 2074, 2076,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 3706,
	3707, 0, 0, 0, 0, 2954, 1693, 0, 0, 212,
	0, 116, 0, 0, 120, 0, 0, 0, 2080, 2080,
	2061, 2062, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 86, 0,
	53, 52, 0, 0, 0, 0, 275, 0, 0, 0,
	3716, 0, 0, 0, 1045, 2067, 0, 87, 0, 0,
	170, 80, 0, 0, 0, 1684, 3730, 0, 0, 1709,
	0, 0, 0, 0, 0, 92, 0, 0, 0, 1245,
	0, 1245, 0, 3742, 0, 0, 74, 0, 0, 0,
	0, 0, 0, 55, 0, 177, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2080, 2080, 2080, 0, 0, 54, 0, 0, 101, 0,
	0, 2080, 2080, 3800, 3076, 0, 0, 0, 175, 0,
	2080, 0, 0, 2080, 0, 0, 0, 2097, 0, 0,
	0, 0, 0, 0, 0, 218, 57, 75, 0, 0,
	0, 0, 0, 276, 0, 0, 58, 0, 0, 0,
	0, 64, 0, 0, 0, 0, 81, 0, 0, 0,
	0, 0, 269, 0, 56, 0, 124, 126, 0, 3800,
	3076, 270, 108, 121, 0, 213, 0, 3086, 3086, 3086,
	217, 0, 76, 0, 0, 0, 2080, 2073, 0, 0,
	0, 0, 0, 0, 2080, 3076, 2198, 0, 0, 0,
	0, 1851, 2080, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2068, 2080, 0, 2080, 0, 59, 0,
	0, 0, 0, 0, 0, 3840, 2080, 0, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 931, 0, 0, 0, 0,
	0, 0, 1223, 0, 3891, 1223, 1223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2099, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1709, 0, 1709,
	0, 0, 0, 2892, 0, 0, 3800, 0, 0, 0,
	0, 0, 1707, 1707, 77, 0, 0, 0, 0, 0,
	0, 0, 0, 1245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2120, 0, 0, 0, 2120, 0, 0,
	2080, 3800, 1491, 0, 2080, 0, 0, 0, 3954, 1252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1252, 0, 3800, 0, 0, 0, 0, 1267, 2064,
	2060, 0, 2057, 2055, 2056, 2048, 2049, 2050, 2051, 2053,
	2054, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4010, 4012, 0, 113, 2626, 0, 0, 0, 0, 0,
	0, 0, 3991, 312, 0, 0, 0, 0, 0, 0,
	0, 60, 0, 0, 0, 1415, 0, 0, 0, 0,
	0, 312, 0, 312, 312, 0, 0, 312, 63, 0,
	0, 2221, 0, 66, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 78, 0, 0, 0, 0, 0, 0,
	0, 65, 212, 0, 116, 0, 0, 120, 0, 0,
	0, 0, 0, 61, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 0, 62, 0, 0, 0, 0,
	0, 126, 4060, 4061, 0, 0, 0, 0, 0, 275,
	0, 0, 2044, 2045, 0, 0, 0, 69, 0, 0,
	0, 0, 0, 170, 0, 312, 0, 312, 312, 312,
	0, 0, 312, 312, 0, 0, 2075, 0, 0, 0,
	176, 0, 0, 0, 2047, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 973, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 2080, 0, 0, 0, 0, 0,
	0, 0, 0, 2100, 0, 0, 0, 0, 0, 0,
	0, 0, 2046, 0, 0, 0, 4161, 0, 0, 0,
	2080, 175, 0, 2066, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 2063, 0, 312, 312, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 312, 0, 269, 0, 0, 0, 1340,
	0, 0, 0, 0, 270, 0, 0, 0, 213, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 3691, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 3, 2080, 0,
	0, 0, 0, 0, 0, 0, 2069, 2070, 2071, 2072,
	0, 0, 0, 0, 0, 0, 2052, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4265, 0, 0, 0, 0, 0, 0,
	4270, 0, 1707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2080, 0, 0, 312, 0, 0, 0, 0,
	2074, 2076, 0, 0, 0, 0, 0, 0, 0, 0,
	4284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2822, 2061, 2062, 0, 0, 0, 0, 4286, 4287,
	0, 0, 4290, 0, 1491, 0, 4293, 0, 1709, 1709,
	0, 0, 0, 0, 0, 4297, 0, 126, 0, 0,
	126, 0, 126, 0, 4304, 0, 0, 2067, 0, 3840,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4317, 0, 3105, 0, 0, 0,
	0, 0, 0, 2044, 2045, 0, 2077, 2078, 2079, 2088,
	2089, 2090, 0, 0, 4340, 4341, 0, 4342, 4343, 4344,
	0, 0, 855, 0, 0, 126, 2081, 2075, 126, 0,
	0, 3103, 0, 0, 126, 2047, 3107, 1709, 4351, 0,
	0, 0, 4353, 839, 0, 0, 2094, 0, 840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3108, 2097,
	0, 2619, 0, 0, 2100, 0, 0, 0, 0, 0,
	0, 0, 0, 2046, 0, 4382, 4383, 1432, 0, 0,
	0, 0, 0, 0, 2066, 0, 0, 0, 0, 0,
	0, 841, 0, 0, 2063, 4395, 0, 0, 0, 0,
	3109, 0, 842, 0, 0, 0, 0, 0, 0, 0,
	4404, 0, 0, 126, 0, 0, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 843, 0, 0, 0, 3110,
	0, 0, 0, 0, 0, 0, 3111, 0, 0, 0,
	0, 0, 0, 0, 0, 2068, 0, 0, 861, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2220, 0, 1428, 0, 0, 0, 312, 0, 3112,
	0, 844, 0, 0, 0, 0, 0, 2069, 2070, 2071,
	2072, 0, 0, 312, 2220, 312, 0, 2052, 0, 0,
	0, 0, 0, 973, 0, 0, 845, 837, 0, 0,
	0, 0, 973, 0, 0, 0, 0, 0, 0, 0,
	4475, 0, 0, 2099, 0, 0, 0, 0, 0, 0,
	0, 846, 0, 0, 0, 0, 838, 0, 0, 0,
	2085, 0, 3113, 0, 2095, 0, 931, 312, 4493, 0,
	0, 2074, 2076, 870, 0, 0, 312, 0, 0, 0,
	0, 0, 0, 3114, 0, 0, 0, 0, 0, 0,
	0, 2892, 0, 3115, 2091, 0, 2092, 0, 0, 0,
	0, 860, 4524, 2061, 2062, 0, 0, 0, 0, 0,
	0, 0, 2120, 0, 0, 0, 0, 0, 0, 3116,
	0, 0, 0, 2083, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2067, 0,
	0, 2064, 2060, 0, 2057, 2055, 2056, 2048, 2049, 2050,
	2051, 2053, 2054, 4556, 4557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 2626, 0, 0, 0, 2093, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2082,
	0, 0, 0, 0, 0, 0, 0, 0, 4625, 0,
	2097, 3117, 0, 0, 0, 0, 0, 0, 0, 4637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2626, 0, 2626, 848, 0,
	0, 0, 4663, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 868,
	2073, 849, 0, 0, 0, 0, 0, 0, 0, 2198,
	0, 0, 0, 3118, 3119, 0, 0, 0, 4681, 0,
	0, 0, 0, 0, 0, 0, 2068, 0, 0, 0,
	0, 0, 0, 312, 0, 0, 0, 973, 4708, 0,
	1415, 0, 3120, 0, 0, 0, 0, 869, 0, 0,
	0, 0, 3125, 0, 0, 850, 0, 0, 2086, 0,
	865, 866, 0, 863, 0, 0, 0, 0, 0, 0,
	0, 0, 858, 3121, 0, 851, 312, 1415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3122, 0,
	0, 0, 0, 0, 2099, 312, 0, 0, 0, 0,
	0, 0, 0, 4728, 4729, 0, 312, 0, 0, 4733,
	4734, 0, 0, 312, 4737, 4738, 0, 0, 0, 0,
	3123, 0, 4742, 852, 0, 859, 0, 0, 0, 312,
	0, 312, 0, 4746, 853, 0, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4751,
	854, 0, 0, 0, 0, 862, 0, 0, 0, 0,
	0, 0, 0, 0, 3124, 0, 0, 0, 0, 0,
	0, 871, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 0, 0, 856, 0, 0, 312, 0, 2058, 2059,
	2065, 2087, 2064, 2060, 0, 2057, 2055, 2056, 2048, 2049,
	2050, 2051, 2053, 2054, 0, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 973, 0, 312, 0, 312, 0, 312, 0,
	312, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2044, 2045, 0, 2077, 2078, 2079,
	2088, 2089, 2090, 0, 0, 0, 0, 0, 0, 0,
	126, 126, 0, 126, 0, 0, 0, 2081, 2075, 0,
	0, 0, 0, 0, 0, 0, 2047, 0, 0, 312,
	312, 312, 312, 0, 0, 312, 0, 2094, 0, 0,
	0, 1432, 0, 0, 0, 0, 0, 0, 1252, 1432,
	0, 0, 0, 0, 0, 2100, 0, 0, 4887, 0,
	0, 0, 0, 0, 2046, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2626, 2066, 0, 0, 0, 931,
	0, 0, 0, 0, 0, 2063, 0, 0, 126, 126,
	0, 126, 0, 1432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4916, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1432,
	0, 0, 0, 0, 0, 0, 1432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1432, 0, 0, 0, 0, 0, 2069, 2070,
	2071, 2072, 0, 0, 0, 0, 0, 2619, 2052, 0,
	0, 4956, 4957, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5003, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2085, 0, 0, 1432, 2095, 0, 0, 1415, 0,
	0, 1245, 2074, 2076, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 126, 0, 0, 0,
	0, 0, 1428, 0, 0, 2091, 0, 2092, 0, 0,
	0, 0, 0, 0, 2061, 2062, 0, 0, 1428, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 2083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5048, 5049, 5050, 0, 2067,
	0, 0, 312, 0, 0, 0, 0, 0, 0, 973,
	0, 973, 0, 0, 312, 0, 0, 0, 2822, 0,
	0, 5059, 5060, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5068,
	5071, 0, 0, 0, 0, 0, 0, 0, 0, 2093,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 973, 0, 0, 0, 0, 0, 0, 0, 0,
	2082, 312, 0, 0, 312, 0, 0, 0, 0, 0,
	0, 2097, 0, 0, 312, 312, 0, 0, 0, 312,
	0, 312, 0, 0, 0, 5119, 0, 0, 312, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5134, 0, 0, 0, 0, 0, 0, 0, 0,
	5142, 2073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5150, 0, 0, 1252, 0,
	0, 0, 0, 0, 0, 0, 0, 2068, 0, 931,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 5162,
	0, 2626, 5164, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 5174, 0, 0, 2086,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 1432, 0, 1432, 0,
	0, 0, 0, 0, 0, 0, 0, 2638, 0, 1415,
	1415, 0, 0, 1432, 0, 2099, 0, 0, 0, 0,
	0, 0, 0, 2619, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2288, 0, 0, 0,
	0, 0, 0, 1432, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 931, 0,
	0, 0, 0, 5254, 1707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2084, 0, 0,
	973, 0, 0, 0, 0, 0, 0, 0, 0, 2058,
	2059, 2065, 2087, 2064, 2060, 0, 2057, 2055, 2056, 2048,
	2049, 2050, 2051, 2053, 2054, 0, 0, 0, 0, 0,
	5417, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 1432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5298, 0, 0, 0, 5302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2044, 2045, 0,
	2077, 2078, 2079, 2088, 2089, 2090, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2081, 2075, 0, 0, 0, 0, 0, 0, 0, 2047,
	0, 312, 0, 312, 0, 0, 0, 0, 0, 0,
	2094, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2100, 5376,
	0, 0, 0, 0, 0, 0, 0, 2046, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2066, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2063, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 312, 312, 312, 0,
	0, 0, 0, 0, 0, 312, 2822, 0, 0, 0,
	312, 0, 0, 0, 0, 5071, 0, 0, 0, 0,
	1432, 1432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1432, 0, 0, 0, 0, 0, 0, 0, 0,
	5434, 312, 0, 0, 126, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 1432, 0, 0,
	0, 2069, 2070, 2071, 2072, 0, 0, 0, 0, 0,
	1415, 2052, 1252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 2085, 0, 0, 0, 2095, 0,
	0, 0, 0, 0, 0, 2074, 2076, 0, 0, 0,
	0, 1432, 0, 1432, 0, 1432, 0, 0, 0, 0,
	0, 5502, 5502, 5502, 0, 0, 0, 0, 2091, 0,
	2092, 0, 0, 1432, 1432, 0, 0, 2061, 2062, 0,
	0, 0, 0, 0, 0, 0, 0, 1432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2083, 0, 1432,
	0, 5528, 1432, 1432, 1432, 1432, 0, 0, 0, 0,
	0, 0, 2067, 0, 2044, 2045, 0, 2077, 2078, 2079,
	2088, 2089, 2090, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2081, 2075, 0,
	0, 0, 0, 0, 0, 0, 2047, 0, 0, 0,
	1709, 0, 0, 0, 0, 0, 0, 2094, 0, 0,
	0, 0, 2093, 0, 5502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2100, 0, 0, 126, 0,
	0, 0, 0, 2082, 2046, 1415, 0, 0, 0, 0,
	0, 0, 0, 1415, 2097, 2066, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 0, 0, 0, 0,
	0, 0, 0, 0, 5616, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2288, 2288, 1432, 1428, 0, 0,
	0, 0, 0, 0, 2073, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 931, 0,
	2068, 0, 0, 0, 1428, 0, 0, 0, 2069, 2070,
	2071, 2072, 0, 0, 0, 0, 0, 1307, 2052, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5502, 5680, 2086, 0, 0, 0, 0, 2220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1432,
	973, 2085, 0, 0, 0, 2095, 126, 0, 2099, 0,
	0, 0, 2074, 2076, 0, 0, 0, 2044, 2045, 0,
	2077, 2078, 2079, 2088, 2089, 2090, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2091, 0, 2092, 0, 0,
	2081, 2075, 0, 0, 2061, 2062, 0, 0, 0, 2047,
	0, 0, 0, 312, 0, 0, 0, 312, 312, 0,
	2094, 0, 0, 0, 2083, 0, 0, 1432, 0, 0,
	0, 0, 0, 0, 1432, 0, 0, 0, 2100, 2067,
	0, 126, 0, 1432, 0, 0, 0, 2046, 0, 0,
	2084, 0, 0, 312, 0, 0, 0, 0, 2066, 0,
	1432, 126, 2058, 2059, 2065, 2087, 2064, 2060, 2063, 2057,
	2055, 2056, 2048, 2049, 2050, 2051, 2053, 2054, 0, 0,
	0, 0, 0, 4758, 0, 126, 0, 4757, 0, 2093,
	0, 0, 0, 0, 0, 312, 312, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 2220, 0, 0, 0,
	2082, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 2097, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2069, 2070, 2071, 2072, 0, 0, 0, 0, 0,
	0, 2052, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2085, 0, 0, 2068, 2095, 0,
	0, 0, 0, 0, 0, 2074, 2076, 0, 0, 0,
	1432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 2091, 2086,
	2092, 0, 0, 312, 0, 0, 0, 2061, 2062, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 973, 0, 0, 0, 0, 0, 2083, 0, 2288,
	0, 312, 0, 0, 0, 2099, 0, 0, 0, 0,
	0, 0, 2067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1428, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2093, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1432, 0, 0, 0, 0, 0,
	0, 0, 0, 2082, 0, 0, 1432, 2084, 0, 0,
	0, 0, 0, 0, 2097, 0, 0, 0, 0, 2058,
	2059, 2065, 2087, 2064, 2060, 0, 2057, 2055, 2056, 2048,
	2049, 2050, 2051, 2053, 2054, 0, 0, 0, 0, 0,
	3751, 0, 0, 0, 3752, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 0, 312, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2073, 2892, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	2068, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2044, 2045, 1432, 2077, 2078,
	2079, 2088, 2089, 2090, 0, 0, 0, 0, 0, 1432,
	0, 1432, 2086, 0, 0, 0, 0, 1432, 2081, 2075,
	0, 0, 0, 0, 0, 0, 0, 2047, 1432, 1432,
	0, 0, 0, 0, 0, 0, 0, 0, 2094, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2099, 0,
	0, 0, 0, 0, 0, 0, 2100, 0, 0, 0,
	0, 0, 0, 0, 0, 2046, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2066, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 0, 0, 0, 0, 1428, 1428, 0, 0,
	0, 0, 2058, 2059, 2065, 2087, 2064, 2060, 0, 2057,
	2055, 2056, 2048, 2049, 2050, 2051, 2053, 2054, 0, 126,
	0, 0, 126, 2950, 0, 0, 0, 2951, 0, 2069,
	2070, 2071, 2072, 0, 0, 0, 0, 0, 0, 2052,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2085, 0, 0, 0, 2095, 0, 0, 0,
	0, 0, 0, 2074, 2076, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2091, 0, 2092, 0,
	0, 0, 0, 0, 0, 2061, 2062, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 0, 126, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2093, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 2082, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2097, 0, 0, 0, 0, 0, 0, 1602,
	0, 0, 0, 0, 0, 0, 0, 1722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2044, 2045, 0, 0, 0, 0, 0, 0,
	0, 1722, 2073, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 1432, 1432, 312, 0, 2075, 0, 0, 0,
	0, 0, 0, 0, 2047, 0, 312, 0, 2068, 0,
	312, 0, 312, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1722, 0, 1432,
	0, 0, 0, 2100, 1722, 0, 0, 1428, 0, 0,
	2086, 0, 2046, 0, 0, 0, 0, 1432, 0, 0,
	1722, 0, 0, 2066, 0, 0, 0, 0, 0, 0,
	0, 0, 1432, 2063, 0, 1432, 0, 0, 0, 0,
	0, 0, 0, 0, 1317, 0, 2099, 0, 0, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2288, 0, 0, 0, 1432,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3684, 2288, 0, 0, 0, 314, 314, 314,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2069, 2070, 2071, 2072,
	0, 0, 0, 0, 314, 0, 2052, 0, 2084, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	2058, 2059, 2065, 2087, 2064, 2060, 0, 2057, 2055, 2056,
	2048, 2049, 2050, 2051, 2053, 2054, 0, 0, 0, 0,
	2288, 314, 0, 0, 0, 4302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 2076, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1428, 0, 0, 0, 0, 0, 0, 0,
	1428, 0, 2061, 2062, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2067, 0, 2044,
	2045, 0, 2077, 2078, 2079, 2088, 2089, 2090, 0, 0,
	0, 0, 0, 0, 0, 1432, 0, 0, 312, 0,
	0, 0, 2081, 2075, 0, 0, 0, 0, 0, 0,
	0, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 2220,
	0, 2220, 318, 0, 0, 0, 0, 0, 0, 0,
	2100, 0, 0, 0, 0, 0, 0, 0, 0, 2046,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 2097,
	2066, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	2063, 0, 312, 1432, 0, 1432, 0, 0, 0, 1432,
	0, 0, 0, 0, 0, 0, 0, 1432, 1432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2073,
	965, 1602, 0, 0, 0, 0, 0, 0, 0, 0,
	1432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2068, 0, 0, 0, 965,
	1432, 1722, 0, 2069, 2070, 2071, 2072, 0, 0, 0,
	0, 2220, 1432, 2052, 1432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 2085, 0, 0, 0,
	2095, 0, 0, 2099, 0, 0, 0, 2074, 2076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1432, 0,
	0, 1432, 0, 0, 0, 0, 0, 0, 0, 0,
	2091, 0, 2092, 0, 0, 0, 0, 0, 0, 2061,
	2062, 0, 0, 0, 0, 1602, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2067, 0, 0, 0, 0, 0,
	0, 2288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1432, 2064, 2060, 0, 2057, 2055, 2056, 2048, 2049, 2050,
	2051, 2053, 2054, 0, 0, 0, 0, 1432, 0, 0,
	0, 0, 0, 0, 2093, 0, 0, 2288, 2288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2082, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2097, 0, 0, 2288,
	2288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2073, 0, 1722, 1722,
	0, 1432, 1432, 0, 0, 0, 0, 0, 0, 1602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2068, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1722, 0, 0, 0, 0,
	1432, 0, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 0, 0, 2086, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2220, 0, 2220,
	0, 0, 0, 2288, 0, 2288, 0, 0, 0, 0,
	2099, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1722,
	0, 1722, 0, 1722, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1722, 1722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1722, 0, 0, 312, 312,
	0, 0, 0, 0, 0, 0, 0, 1722, 0, 0,
	1722, 1722, 1722, 1722, 0, 0, 0, 0, 0, 0,
	0, 0, 2084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 2058, 2059, 2065, 2087, 2064, 2060,
	0, 2057, 2055, 2056, 2048, 2049, 2050, 2051, 2053, 2054,
	0, 314, 0, 314, 314, 0, 0, 314, 0, 3754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1432, 1432, 0,
	2220, 0, 0, 0, 0, 1432, 0, 0, 1432, 1432,
	0, 0, 0, 0, 0, 0, 0, 0, 1432, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 314, 1604, 314, 314, 314,
	0, 0, 314, 314, 1604, 0, 0, 0, 0, 0,
	0, 0, 2288, 0, 1602, 0, 0, 0, 0, 0,
	0, 0, 0, 2220, 314, 2220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2220, 0, 312, 2220, 0, 0, 1604, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1432, 0, 0, 314, 314, 0, 0, 0,
	0, 1432, 0, 0, 0, 0, 1432, 1432, 1432, 0,
	0, 0, 0, 0, 1604, 0, 0, 0, 0, 0,
	0, 1604, 314, 314, 0, 0, 0, 1602, 0, 0,
	0, 1432, 0, 1432, 0, 0, 0, 1604, 0, 1432,
	0, 1432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	2044, 2045, 0, 0, 0, 0, 2088, 2089, 2090, 0,
	0, 0, 0, 0, 0, 1432, 0, 0, 0, 0,
	0, 0, 0, 0, 2075, 0, 2288, 0, 0, 0,
	0, 0, 2047, 0, 0, 0, 0, 0, 0, 1604,
	0, 0, 1602, 2094, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 0,
	0, 2100, 0, 0, 0, 0, 0, 0, 1602, 0,
	2046, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1601, 0, 0, 0, 0, 0,
	0, 0, 1721, 0, 0, 0, 0, 1432, 0, 0,
	0, 0, 0, 0, 0, 1432, 0, 0, 0, 1432,
	1432, 0, 1432, 0, 0, 0, 0, 2288, 0, 0,
	0, 0, 0, 1432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1432, 1432, 0, 1721, 0, 0, 0,
	0, 0, 0, 0, 2069, 2070, 2071, 2072, 0, 0,
	0, 0, 0, 0, 2052, 1432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1721, 0, 0, 0, 0, 0, 0, 1721,
	0, 0, 0, 0, 1432, 0, 1432, 2085, 1602, 0,
	0, 2095, 0, 0, 0, 1721, 0, 0, 2074, 2076,
	0, 0, 0, 0, 2220, 0, 2220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1432, 0, 0, 0, 0, 0, 0, 0, 0,
	2061, 2062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2083, 0, 1432, 0, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 0, 2067, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 1432, 1432, 0, 0, 0, 0, 0, 1604, 0,
	0, 0, 1602, 314, 314, 314, 1432, 0, 0, 0,
	0, 0, 0, 314, 1722, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 1604, 0,
	0, 0, 0, 0, 0, 0, 0, 2097, 0, 0,
	0, 0, 0, 0, 1432, 0, 0, 0, 0, 1432,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 1432, 1432, 1432, 1432, 1432, 1432,
	1432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2073, 1432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2068, 0, 1722, 0, 0, 1432, 0,
	0, 0, 1604, 0, 0, 0, 0, 1722, 0, 1722,
	0, 0, 0, 0, 0, 1722, 0, 0, 0, 2288,
	0, 0, 0, 0, 0, 2086, 1722, 1722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1432, 0, 1432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2099, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1601, 0, 0, 0,
	2288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2261, 0, 2084, 0, 0, 0, 0, 0, 0,
	2261, 0, 0, 0, 0, 0, 1721, 0, 2087, 2064,
	2060, 0, 2057, 2055, 2056, 2048, 2049, 2050, 2051, 2053,
	2054, 0, 0, 314, 1432, 1604, 1604, 314, 0, 0,
	1432, 0, 0, 1432, 1432, 0, 1604, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1604, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 1432, 0, 1432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 1604, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 314, 1432, 0, 0, 1432, 0, 0,
	1601, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 314, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 1604, 0, 1604, 0,
	1604, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1604, 1604,
	0, 0, 0, 2288, 0, 0, 0, 0, 0, 0,
	0, 0, 1604, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 1604, 0, 0, 1604, 1604, 1604,
	1604, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 314, 0, 314, 0, 314, 0,
	314, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	1432, 0, 0, 0, 995, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1432, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 998, 0, 0, 0, 0,
	999, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	314, 314, 314, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 1721, 1721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1601, 2288, 0, 0, 0, 0,
	0, 1602, 0, 1000, 0, 1014, 0, 0, 1432, 0,
	1432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1721, 0, 0, 0, 0, 0, 0, 1432, 0, 0,
	1432, 1604, 1001, 0, 1432, 0, 0, 1002, 0, 0,
	0, 0, 0, 0, 1432, 0, 0, 0, 0, 1721,
	0, 0, 0, 0, 0, 1602, 0, 0, 0, 0,
	1023, 0, 0, 0, 0, 0, 0, 1003, 0, 0,
	0, 0, 0, 1602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1021, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1721, 0, 1721, 0, 1721, 0,
	0, 0, 0, 0, 0, 0, 0, 1602, 996, 994,
	0, 0, 0, 0, 0, 0, 1721, 1721, 0, 0,
	0, 0, 0, 0, 1604, 0, 0, 0, 0, 0,
	1721, 0, 0, 1004, 1432, 0, 0, 0, 0, 0,
	0, 0, 1721, 0, 0, 1721, 1721, 1721, 1721, 0,
	1025, 0, 0, 0, 0, 870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2261, 0, 0, 0, 0, 0, 0, 2044, 2045, 0,
	2077, 2078, 2079, 2088, 2089, 2090, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1604,
	2081, 2075, 0, 0, 0, 0, 0, 0, 0, 2047,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2094, 0, 314, 0, 0, 1604, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2100, 0,
	1024, 0, 314, 0, 0, 0, 0, 2046, 0, 314,
	1019, 314, 0, 0, 314, 0, 0, 0, 2066, 0,
	1432, 0, 0, 0, 0, 0, 0, 0, 2063, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1601,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 314, 0, 1602, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 314, 0, 1604, 0, 0, 1018,
	0, 0, 0, 0, 314, 314, 0, 0, 0, 314,
	1005, 314, 0, 0, 0, 0, 0, 0, 314, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 2069, 2070, 2071, 2072, 0, 0, 0, 0, 0,
	0, 2052, 0, 1006, 0, 0, 0, 0, 0, 1432,
	0, 1432, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1722, 1601, 1722, 0, 1604, 0, 1602, 0, 0,
	0, 0, 0, 0, 0, 1722, 1722, 0, 0, 0,
	0, 0, 0, 0, 2085, 0, 0, 0, 2095, 869,
	0, 0, 0, 0, 0, 2074, 2076, 314, 0, 0,
	0, 0, 993, 0, 0, 1015, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 1007, 2091, 0,
	2092, 0, 0, 0, 0, 314, 0, 2061, 2062, 0,
	0, 0, 0, 0, 0, 0, 0, 1601, 1722, 0,
	0, 0, 0, 0, 0, 0, 1013, 2083, 0, 0,
	1722, 0, 1722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2067, 1601, 0, 1008, 0, 0, 0, 1009,
	1028, 0, 1027, 0, 0, 0, 1010, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 1604,
	0, 0, 1011, 0, 0, 0, 0, 1020, 0, 0,
	0, 1604, 0, 1029, 0, 0, 1026, 0, 0, 0,
	0, 0, 2093, 871, 0, 0, 1602, 0, 0, 1602,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2082, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 2097, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1602, 0,
	0, 0, 0, 0, 2073, 0, 0, 0, 0, 0,
	0, 0, 1604, 0, 0, 1602, 0, 0, 0, 0,
	0, 0, 0, 1601, 1604, 0, 1604, 0, 0, 0,
	2068, 0, 1604, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 1604, 1604, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 2086, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2099, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1604,
	0, 0, 0, 0, 0, 314, 314, 314, 314, 0,
	0, 0, 0, 0, 0, 314, 0, 1601, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 1602, 1721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 314, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 2058, 2059, 2065, 2087, 2064, 2060, 0, 2057,
	2055, 2056, 2048, 2049, 2050, 2051, 2053, 2054, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3753, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1721, 2044, 2045, 0, 2077, 2078, 2079, 2088, 2089, 2090,
	0, 0, 1721, 0, 1721, 0, 0, 0, 0, 0,
	1721, 0, 0, 0, 2081, 2075, 0, 0, 0, 0,
	0, 1721, 1721, 2047, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2100, 0, 0, 0, 0, 0, 0, 0,
	0, 2046, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2066, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2063, 0, 0, 1722, 1722, 0, 0, 0,
	0, 0, 0, 1722, 0, 0, 1722, 1722, 0, 0,
	0, 0, 0, 0, 0, 0, 1722, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2069, 2070, 2071, 2072, 0,
	0, 0, 0, 0, 0, 2052, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1722, 0, 1604, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1722,
	0, 0, 0, 0, 1722, 1722, 1722, 0, 2085, 0,
	0, 0, 2095, 0, 0, 0, 0, 0, 0, 2074,
	2076, 0, 0, 0, 0, 0, 0, 0, 0, 1722,
	0, 1722, 1604, 0, 0, 0, 0, 1722, 0, 1602,
	0, 0, 2091, 0, 2092, 0, 0, 0, 0, 0,
	1604, 2061, 2062, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 2083, 0, 1602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1604, 0, 2067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1604, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 314, 314, 0,
	0, 0, 0, 0, 0, 0, 2093, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2082, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 2097, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1602, 1602, 0,
	1602, 0, 0, 0, 0, 314, 314, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 1722, 1722, 0, 0, 0, 0, 0, 2073, 0,
	314, 0, 0, 0, 0, 0, 1601, 0, 0, 0,
	0, 0, 0, 1602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2068, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1604, 0, 0, 0, 0, 0, 2086, 0, 0, 0,
	1601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1602,
	0, 0, 2099, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1601, 0, 0, 0, 0, 0, 0, 0,
	1602, 0, 0, 314, 0, 0, 0, 0, 1604, 0,
	1604, 0, 0, 0, 1604, 0, 0, 0, 0, 0,
	0, 314, 1604, 1604, 0, 0, 1604, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1722,
	1722, 0, 0, 0, 2084, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2058, 2059, 2065, 2087,
	2064, 2060, 0, 2057, 2055, 2056, 2048, 2049, 2050, 2051,
	2053, 2054, 0, 0, 0, 1604, 0, 0, 0, 0,
	0, 3750, 0, 0, 0, 0, 0, 1604, 0, 1604,
	0, 0, 1602, 0, 0, 0, 0, 1722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1722, 1722, 1722, 1722, 1722, 1722, 1722, 0,
	0, 0, 0, 0, 0, 0, 2044, 2045, 0, 2077,
	2078, 2079, 2088, 2089, 2090, 0, 1602, 0, 314, 0,
	0, 0, 0, 1604, 0, 314, 1604, 314, 0, 2081,
	2075, 0, 0, 0, 0, 0, 0, 0, 2047, 0,
	0, 0, 0, 0, 0, 0, 1602, 0, 1601, 2094,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 2100, 0, 0,
	0, 0, 0, 0, 0, 0, 2046, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2066, 0, 0,
	0, 1602, 0, 1722, 0, 0, 0, 2063, 0, 0,
	0, 0, 0, 0, 0, 1604, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1604, 0, 0, 0, 1721, 0, 1721, 0,
	0, 0, 1601, 0, 0, 0, 0, 0, 0, 965,
	1721, 1721, 0, 1602, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2069, 2070, 2071, 2072, 0, 0, 0, 0, 0, 0,
	2052, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1721, 0, 1721, 0, 0,
	0, 0, 1602, 0, 0, 0, 0, 0, 1722, 0,
	0, 1722, 1722, 2085, 0, 0, 0, 2095, 0, 0,
	0, 0, 0, 0, 2074, 2076, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1604, 0, 2091, 0, 2092,
	0, 0, 0, 0, 0, 0, 2061, 2062, 0, 0,
	0, 1601, 0, 0, 1601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2083, 0, 0, 0,
	0, 314, 1602, 0, 0, 1722, 0, 1604, 0, 0,
	0, 2067, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 2093, 0, 1601, 0, 0, 0, 0, 86, 0,
	53, 52, 0, 0, 0, 0, 0, 0, 0, 0,
	1601, 0, 2082, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 2097, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 74, 0, 0, 0,
	0, 0, 0, 55, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 54, 0, 0, 101, 0,
	0, 0, 0, 2073, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1604, 1604, 0, 0, 57, 75, 0, 2068,
	1604, 0, 0, 1604, 1604, 0, 58, 0, 0, 0,
	0, 64, 0, 1604, 0, 0, 5691, 0, 0, 314,
	0, 0, 0, 0, 56, 0, 124, 0, 0, 0,
	0, 2086, 108, 121, 0, 0, 0, 0, 0, 0,
	0, 0, 76, 1601, 0, 0, 0, 0, 0, 0,
	0, 0, 1722, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 1722, 0, 314, 0, 0, 2099, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 59, 2261,
	314, 0, 314, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 1604, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1604, 0, 0, 0,
	0, 1604, 1604, 1604, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1604, 0, 1604, 2084,
	0, 0, 1722, 314, 1604, 0, 1604, 0, 0, 0,
	0, 2058, 2059, 2065, 2087, 2064, 2060, 0, 2057, 2055,
	2056, 2048, 2049, 2050, 2051, 2053, 2054, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 3749, 0, 0, 0,
	1604, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1721, 1721, 0, 0, 0, 0, 0, 0, 1721, 0,
	0, 1721, 1721, 113, 0, 0, 0, 0, 0, 0,
	0, 1721, 0, 0, 0, 0, 0, 0, 1722, 0,
	0, 60, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 63, 0,
	0, 0, 0, 66, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 78, 1604, 1604, 0, 1604, 0, 0,
	0, 65, 212, 0, 116, 0, 0, 120, 0, 5549,
	0, 0, 0, 61, 0, 0, 0, 178, 1604, 1604,
	0, 0, 0, 0, 0, 62, 0, 0, 0, 0,
	0, 1721, 0, 0, 0, 0, 0, 0, 0, 275,
	1604, 0, 0, 0, 0, 0, 0, 69, 314, 0,
	0, 0, 0, 170, 1721, 0, 0, 0, 0, 1721,
	1721, 1721, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1721, 0, 1721, 0, 0, 0,
	0, 0, 1721, 277, 1601, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1604, 0, 0, 314,
	0, 175, 314, 0, 0, 0, 0, 0, 1601, 0,
	0, 79, 0, 0, 0, 0, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 276, 1604, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 213, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1604, 1604, 0, 0,
	1604, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1604,
	314, 0, 1601, 1601, 1604, 1601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1721, 1721, 0, 1604,
	1604, 1604, 1604, 1604, 1604, 1604, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1601, 0,
	0, 0, 0, 1604, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1604, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2044, 2045, 0,
	2077, 2078, 2079, 2088, 2089, 2090, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2081, 2075, 0, 0, 1601, 0, 0, 0, 1604, 2047,
	1604, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2094, 0, 2044, 2045, 0, 2077, 2078, 2079, 2088, 2089,
	2090, 0, 0, 0, 0, 1601, 0, 0, 2100, 0,
	0, 0, 0, 0, 0, 2081, 2075, 2046, 0, 0,
	0, 0, 0, 0, 2047, 0, 0, 0, 2066, 0,
	1604, 0, 0, 0, 0, 2094, 0, 0, 2063, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2100, 1721, 1721, 0, 0, 0, 0,
	0, 0, 2046, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2066, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2063, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1601, 0, 1604,
	0, 0, 1721, 0, 0, 1604, 0, 0, 1604, 1604,
	0, 2069, 2070, 2071, 2072, 0, 314, 0, 0, 0,
	0, 2052, 0, 0, 0, 0, 0, 1721, 1721, 1721,
	1721, 1721, 1721, 1721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1601, 0, 0, 0, 0, 2069, 2070, 2071, 2072,
	0, 0, 314, 0, 2085, 0, 2052, 0, 2095, 0,
	0, 0, 0, 0, 0, 2074, 2076, 0, 0, 1604,
	0, 1601, 1604, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2091, 0,
	2092, 0, 0, 0, 0, 0, 0, 2061, 2062, 2085,
	0, 0, 0, 2095, 0, 0, 0, 0, 314, 314,
	2074, 2076, 0, 0, 0, 0, 1601, 2083, 1721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2067, 2091, 0, 2092, 0, 0, 0, 0,
	0, 0, 2061, 2062, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2083, 0, 0, 0, 0, 0, 1601, 0,
	0, 0, 0, 0, 0, 0, 0, 2067, 0, 0,
	0, 0, 2093, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2097, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1601, 2082, 0,
	0, 0, 0, 1721, 0, 0, 1721, 1721, 0, 2097,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2073, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 1604,
	2068, 0, 0, 0, 0, 0, 0, 0, 0, 1604,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 1601, 0, 0,
	1721, 0, 2086, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2068, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2099, 0,
	0, 0, 0, 0, 0, 0, 0, 2086, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1604,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2099, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	2084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2058, 2059, 2065, 2087, 2064, 2060, 0, 2057,
	2055, 2056, 2048, 2049, 2050, 2051, 2053, 2054, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3748, 0, 0,
	0, 0, 0, 0, 0, 2084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2058, 2059, 2065,
	2087, 2064, 2060, 0, 2057, 2055, 2056, 2048, 2049, 2050,
	2051, 2053, 2054, 0, 0, 1604, 0, 0, 0, 0,
	0, 0, 2951, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1599, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	1605, 332, 333, 1606, 1607, 1608, 0, 1609, 745, 1610,
	1611, 1612, 334, 1613, 335, 336, 337, 1371, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 1614, 750, 347, 348, 349, 350, 351, 352,
	353, 1615, 1616, 0, 354, 751, 752, 753, 1617, 355,
	356, 754, 1618, 1685, 1619, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 1620, 366, 367, 368, 365, 369,
	370, 1621, 371, 1721, 372, 373, 374, 375, 376, 377,
	378, 1622, 379, 380, 381, 1372, 382, 383, 384, 1623,
	1624, 1626, 1625, 1627, 1628, 1629, 385, 386, 387, 388,
	389, 0, 390, 392, 755, 756, 1630, 395, 397, 391,
	393, 1631, 396, 394, 398, 399, 1632, 400, 401, 402,
	1633, 1634, 403, 404, 405, 1635, 406, 407, 408, 1636,
	409, 410, 411, 1637, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 1638, 319, 1639, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 1640, 432,
	433, 434, 1641, 435, 436, 1642, 1373, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 1643, 449, 763, 1644, 764, 450, 1645, 451, 452,
	453, 454, 455, 456, 457, 765, 766, 767, 553, 1375,
	458, 459, 460, 1646, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 1647, 321, 320, 322,
	1374, 768, 470, 554, 471, 769, 770, 1648, 771, 1649,
	472, 473, 475, 1376, 772, 1377, 474, 476, 477, 1378,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 1650, 486, 488, 487, 1651, 490, 773, 489, 1379,
	491, 492, 1380, 1652, 493, 494, 495, 496, 497, 498,
	501, 1653, 1654, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 1381, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 1382, 546, 533, 1655, 534, 323, 1383, 548, 549,
	550, 551, 1656, 774, 552, 775, 555, 556, 1657, 0,
	557, 0, 558, 1658, 1659, 560, 561, 562, 1660, 1661,
	563, 564, 776, 1384, 565, 1385, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	1662, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 1663, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 1664, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 1665, 624, 625, 623, 626, 627, 1386, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 1666, 654, 655, 653, 656, 657, 658, 1667,
	659, 784, 660, 640, 641, 661, 662, 1387, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 1668, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	1669, 691, 692, 0, 686, 677, 1670, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 1671, 701, 788, 789,
	790, 791, 1672, 713, 1673, 702, 704, 705, 706, 707,
	792, 708, 793, 1674, 709, 710, 711, 712, 703, 714,
	715, 1675, 1676, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 1677, 725, 1678, 0, 726, 727, 728, 794,
	795, 796, 1679, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 1680, 1681, 1682, 1683, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1599, 0,
	0, 0, 0, 0, 0, 3146, 0, 0, 0, 0,
	0, 0, 0, 0, 3147, 324, 325, 327, 326, 328,
	329, 330, 331, 1605, 332, 333, 1606, 1607, 1608, 0,
	1609, 745, 1610, 1611, 1612, 334, 1613, 335, 336, 337,
	1371, 338, 339, 340, 341, 342, 343, 344, 746, 747,
	0, 345, 748, 346, 749, 1614, 750, 347, 348, 349,
	350, 351, 352, 353, 1615, 1616, 0, 354, 751, 752,
	753, 1617, 355, 356, 754, 1618, 1685, 1619, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 1620, 366, 367,
	368, 365, 369, 370, 1621, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 1622, 379, 380, 381, 1372, 382,
	383, 384, 1623, 1624, 1626, 1625, 1627, 1628, 1629, 385,
	386, 387, 388, 389, 0, 390, 392, 755, 756, 1630,
	395, 397, 391, 393, 1631, 396, 394, 398, 399, 1632,
	400, 401, 402, 1633, 1634, 403, 404, 405, 1635, 406,
	407, 408, 1636, 409, 410, 411, 1637, 412, 413, 757,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 758, 759, 426, 427, 1638, 319, 1639, 0,
	0, 0, 0, 428, 429, 430, 760, 0, 0, 0,
	431, 1640, 432, 433, 434, 1641, 435, 436, 1642, 1373,
	437, 438, 439, 761, 762, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 1643, 449, 763, 1644, 764, 450,
	1645, 451, 452, 453, 454, 455, 456, 457, 765, 766,
	767, 553, 1375, 458, 459, 460, 1646, 461, 462, 463,
	464, 465, 0, 0, 0, 466, 467, 468, 469, 1647,
	321, 320, 322, 1374, 768, 470, 554, 471, 769, 770,
	1648, 771, 1649, 472, 473, 475, 1376, 772, 1377, 474,
	476, 477, 1378, 478, 0, 0, 0, 479, 480, 481,
	482, 483, 484, 485, 1650, 486, 488, 487, 1651, 490,
	773, 489, 1379, 491, 492, 1380, 1652, 493, 494, 495,
	496, 497, 498, 501, 1653, 1654, 499, 500, 502, 503,
	0, 504, 505, 507, 510, 506, 508, 509, 511, 524,
	525, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 527, 0, 526, 1381, 528, 529, 530,
	531, 532, 540, 542, 543, 538, 539, 541, 544, 545,
	547, 535, 536, 537, 1382, 546, 533, 1655, 534, 323,
	1383, 548, 549, 550, 551, 1656, 774, 552, 775, 555,
	556, 1657, 0, 557, 0, 558, 1658, 1659, 560, 561,
	562, 1660, 1661, 563, 564, 776, 1384, 565, 1385, 777,
	566, 567, 559, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 1662, 578, 579, 778, 580, 581, 582,
	779, 583, 584, 585, 780, 586, 781, 587, 588, 1663,
	589, 590, 591, 0, 592, 593, 594, 595, 596, 597,
	598, 599, 782, 600, 601, 603, 602, 604, 1664, 605,
	0, 606, 607, 608, 0, 0, 0, 0, 0, 609,
	610, 612, 0, 613, 614, 615, 616, 611, 617, 618,
	619, 620, 621, 622, 1665, 624, 625, 623, 626, 627,
	1386, 628, 629, 630, 631, 632, 783, 633, 0, 634,
	635, 643, 644, 645, 636, 637, 639, 646, 638, 647,
	648, 649, 650, 652, 651, 1666, 654, 655, 653, 656,
	657, 658, 1667, 659, 784, 660, 640, 641, 661, 662,
	1387, 663, 664, 665, 666, 667, 668, 669, 785, 0,
	670, 1668, 671, 672, 673, 674, 675, 676, 678, 642,
	679, 684, 685, 786, 680, 681, 682, 683, 787, 687,
	688, 689, 690, 1669, 691, 692, 0, 686, 677, 1670,
	693, 694, 695, 696, 697, 698, 0, 699, 700, 1671,
	701, 788, 789, 790, 791, 1672, 713, 1673, 702, 704,
	705, 706, 707, 792, 708, 793, 1674, 709, 710, 711,
	712, 703, 714, 715, 1675, 1676, 716, 717, 718, 720,
	722, 723, 719, 721, 724, 1677, 725, 1678, 0, 726,
	727, 728, 794, 795, 796, 1679, 730, 731, 729, 732,
	733, 736, 734, 735, 797, 737, 738, 739, 1680, 1681,
	1682, 1683, 740, 741, 798, 742, 743, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1599, 0,
	0, 0, 4311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4313, 324, 325, 327, 326, 328,
	329, 330, 331, 1605, 332, 333, 1606, 1607, 1608, 0,
	1609, 745, 1610, 1611, 1612, 334, 1613, 335, 336, 337,
	1371, 338, 339, 340, 341, 342, 343, 344, 746, 747,
	0, 345, 748, 346, 749, 1614, 750, 347, 348, 349,
	350, 351, 352, 353, 1615, 1616, 0, 354, 751, 752,
	753, 1617, 355, 356, 754, 1618, 1685, 1619, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 1620, 366, 367,
	368, 365, 369, 370, 1621, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 1622, 379, 380, 381, 1372, 382,
	383, 384, 1623, 1624, 1626, 1625, 1627, 1628, 1629, 385,
	386, 387, 388, 389, 0, 390, 392, 755, 756, 1630,
	395, 397, 391, 393, 1631, 396, 394, 398, 399, 1632,
	400, 401, 402, 1633, 1634, 403, 404, 405, 1635, 406,
	407, 408, 1636, 409, 410, 411, 1637, 412, 413, 757,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 758, 759, 426, 427, 1638, 319, 1639, 0,
	0, 0, 0, 428, 429, 430, 760, 0, 0, 0,
	431, 1640, 432, 433, 434, 1641, 435, 436, 1642, 1373,
	437, 438, 439, 761, 762, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 1643, 449, 763, 1644, 764, 450,
	1645, 451, 452, 453, 454, 455, 456, 457, 765, 766,
	767, 553, 1375, 458, 459, 460, 1646, 461, 462, 463,
	464, 465, 0, 0, 0, 466, 467, 468, 469, 1647,
	321, 320, 322, 1374, 768, 470, 554, 471, 769, 770,
	1648, 771, 1649, 472, 473, 475, 1376, 772, 1377, 474,
	476, 477, 1378, 478, 0, 0, 0, 479, 480, 481,
	482, 483, 484, 485, 1650, 486, 488, 487, 1651, 490,
	773, 489, 1379, 491, 492, 1380, 1652, 493, 494, 495,
	496, 497, 498, 501, 1653, 1654, 499, 500, 502, 503,
	0, 504, 505, 507, 510, 506, 508, 509, 511, 524,
	525, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 527, 0, 526, 1381, 528, 529, 530,
	531, 532, 540, 542, 543, 538, 539, 541, 544, 545,
	547, 535, 536, 537, 1382, 546, 533, 1655, 534, 323,
	1383, 548, 549, 550, 551, 1656, 774, 552, 775, 555,
	556, 1657, 0, 557, 0, 558, 1658, 1659, 560, 561,
	562, 1660, 1661, 563, 564, 776, 1384, 565, 1385, 777,
	566, 567, 559, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 1662, 578, 579, 778, 580, 581, 582,
	779, 583, 584, 585, 780, 586, 781, 587, 588, 1663,
	589, 590, 591, 0, 592, 593, 594, 595, 596, 597,
	598, 599, 782, 600, 601, 603, 602, 604, 1664, 605,
	0, 606, 607, 608, 0, 0, 0, 0, 0, 609,
	610, 612, 0, 613, 614, 615, 616, 611, 617, 618,
	619, 620, 621, 622, 1665, 624, 625, 623, 626, 627,
	1386, 628, 629, 630, 631, 632, 783, 633, 0, 634,
	635, 643, 644, 645, 636, 637, 639, 646, 638, 647,
	648, 649, 650, 652, 651, 1666, 654, 655, 653, 656,
	657, 658, 1667, 659, 784, 660, 640, 641, 661, 662,
	1387, 663, 664, 665, 666, 667, 668, 669, 785, 0,
	670, 1668, 671, 672, 673, 674, 675, 676, 678, 642,
	679, 684, 685, 786, 680, 681, 682, 683, 787, 687,
	688, 689, 690, 1669, 691, 692, 0, 686, 677, 1670,
	693, 694, 695, 696, 697, 698, 0, 699, 700, 1671,
	701, 788, 789, 790, 791, 1672, 713, 1673, 702, 704,
	705, 706, 707, 792, 708, 793, 1674, 709, 710, 711,
	712, 703, 714, 715, 1675, 1676, 716, 717, 718, 720,
	722, 723, 719, 721, 724, 1677, 725, 1678, 0, 726,
	727, 728, 794, 795, 796, 1679, 730, 731, 729, 732,
	733, 736, 734, 735, 797, 737, 738, 739, 1680, 1681,
	1682, 1683, 740, 741, 798, 742, 743, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1599, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4786, 324,
	325, 327, 326, 328, 329, 330, 331, 1605, 332, 333,
	1606, 1607, 1608, 0, 1609, 745, 1610, 1611, 1612, 334,
	1613, 335, 336, 337, 1371, 338, 339, 340, 341, 342,
	343, 344, 746, 747, 0, 345, 748, 346, 749, 1614,
	750, 347, 348, 349, 350, 351, 352, 353, 1615, 1616,
	0, 354, 751, 752, 753, 1617, 355, 356, 754, 1618,
	1685, 1619, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 1620, 366, 367, 368, 365, 369, 370, 1621, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 1622, 379,
	380, 381, 1372, 382, 383, 384, 1623, 1624, 1626, 1625,
	1627, 1628, 1629, 385, 386, 387, 388, 389, 0, 390,
	392, 755, 756, 1630, 395, 397, 391, 393, 1631, 396,
	394, 398, 399, 1632, 400, 401, 402, 1633, 1634, 403,
	404, 405, 1635, 406, 407, 408, 1636, 409, 410, 411,
	1637, 412, 413, 757, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 758, 759, 426, 427,
	1638, 319, 1639, 0, 0, 0, 0, 428, 429, 430,
	760, 0, 0, 0, 431, 1640, 432, 433, 434, 1641,
	435, 436, 1642, 1373, 437, 438, 439, 761, 762, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 1643, 449,
	763, 1644, 764, 450, 1645, 451, 452, 453, 454, 455,
	456, 457, 765, 766, 767, 553, 1375, 458, 459, 460,
	1646, 461, 462, 463, 464, 465, 0, 0, 0, 466,
	467, 468, 469, 1647, 321, 320, 322, 1374, 768, 470,
	554, 471, 769, 770, 1648, 771, 1649, 472, 473, 475,
	1376, 772, 1377, 474, 476, 477, 1378, 478, 0, 0,
	0, 479, 480, 481, 482, 483, 484, 485, 1650, 486,
	488, 487, 1651, 490, 773, 489, 1379, 491, 492, 1380,
	1652, 493, 494, 495, 496, 497, 498, 501, 1653, 1654,
	499, 500, 502, 503, 0, 504, 505, 507, 510, 506,
	508, 509, 511, 524, 525, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 527, 0, 526,
	1381, 528, 529, 530, 531, 532, 540, 542, 543, 538,
	539, 541, 544, 545, 547, 535, 536, 537, 1382, 546,
	533, 1655, 534, 323, 1383, 548, 549, 550, 551, 1656,
	774, 552, 775, 555, 556, 1657, 0, 557, 0, 558,
	1658, 1659, 560, 561, 562, 1660, 1661, 563, 564, 776,
	1384, 565, 1385, 777, 566, 567, 559, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 1662, 578, 579,
	778, 580, 581, 582, 779, 583, 584, 585, 780, 586,
	781, 587, 588, 1663, 589, 590, 591, 0, 592, 593,
	594, 595, 596, 597, 598, 599, 782, 600, 601, 603,
	602, 604, 1664, 605, 0, 606, 607, 608, 0, 0,
	0, 0, 0, 609, 610, 612, 0, 613, 614, 615,
	616, 611, 617, 618, 619, 620, 621, 622, 1665, 624,
	625, 623, 626, 627, 1386, 628, 629, 630, 631, 632,
	783, 633, 0, 634, 635, 643, 644, 645, 636, 637,
	639, 646, 638, 647, 648, 649, 650, 652, 651, 1666,
	654, 655, 653, 656, 657, 658, 1667, 659, 784, 660,
	640, 641, 661, 662, 1387, 663, 664, 665, 666, 667,
	668, 669, 785, 0, 670, 1668, 671, 672, 673, 674,
	675, 676, 678, 642, 679, 684, 685, 786, 680, 681,
	682, 683, 787, 687, 688, 689, 690, 1669, 691, 692,
	0, 686, 677, 1670, 693, 694, 695, 696, 697, 698,
	0, 699, 700, 1671, 701, 788, 789, 790, 791, 1672,
	713, 1673, 702, 704, 705, 706, 707, 792, 708, 793,
	1674, 709, 710, 711, 712, 703, 714, 715, 1675, 1676,
	716, 717, 718, 720, 722, 723, 719, 721, 724, 1677,
	725, 1678, 0, 726, 727, 728, 794, 795, 796, 1679,
	730, 731, 729, 732, 733, 736, 734, 735, 797, 737,
	738, 739, 1680, 1681, 1682, 1683, 740, 741, 798, 742,
	743, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1599, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4784, 324, 325, 327, 326, 328, 329, 330,
	331, 1605, 332, 333, 1606, 1607, 1608, 0, 1609, 745,
	1610, 1611, 1612, 334, 1613, 335, 336, 337, 1371, 338,
	339, 340, 341, 342, 343, 344, 746, 747, 0, 345,
	748, 346, 749, 1614, 750, 347, 348, 349, 350, 351,
	352, 353, 1615, 1616, 0, 354, 751, 752, 753, 1617,
	355, 356, 754, 1618, 1685, 1619, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 1620, 366, 367, 368, 365,
	369, 370, 1621, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 1622, 379, 380, 381, 1372, 382, 383, 384,
	1623, 1624, 1626, 1625, 1627, 1628, 1629, 385, 386, 387,
	388, 389, 0, 390, 392, 755, 756, 1630, 395, 397,
	391, 393, 1631, 396, 394, 398, 399, 1632, 400, 401,
	402, 1633, 1634, 403, 404, 405, 1635, 406, 407, 408,
	1636, 409, 410, 411, 1637, 412, 413, 757, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	758, 759, 426, 427, 1638, 319, 1639, 0, 0, 0,
	0, 428, 429, 430, 760, 0, 0, 0, 431, 1640,
	432, 433, 434, 1641, 435, 436, 1642, 1373, 437, 438,
	439, 761, 762, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 1643, 449, 763, 1644, 764, 450, 1645, 451,
	452, 453, 454, 455, 456, 457, 765, 766, 767, 553,
	1375, 458, 459, 460, 1646, 461, 462, 463, 464, 465,
	0, 0, 0, 466, 467, 468, 469, 1647, 321, 320,
	322, 1374, 768, 470, 554, 471, 769, 770, 1648, 771,
	1649, 472, 473, 475, 1376, 772, 1377, 474, 476, 477,
	1378, 478, 0, 0, 0, 479, 480, 481, 482, 483,
	484, 485, 1650, 486, 488, 487, 1651, 490, 773, 489,
	1379, 491, 492, 1380, 1652, 493, 494, 495, 496, 497,
	498, 501, 1653, 1654, 499, 500, 502, 503, 0, 504,
	505, 507, 510, 506, 508, 509, 511, 524, 525, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 527, 0, 526, 1381, 528, 529, 530, 531, 532,
	540, 542, 543, 538, 539, 541, 544, 545, 547, 535,
	536, 537, 1382, 546, 533, 1655, 534, 323, 1383, 548,
	549, 550, 551, 1656, 774, 552, 775, 555, 556, 1657,
	0, 557, 0, 558, 1658, 1659, 560, 561, 562, 1660,
	1661, 563, 564, 776, 1384, 565, 1385, 777, 566, 567,
	559, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 1662, 578, 579, 778, 580, 581, 582, 779, 583,
	584, 585, 780, 586, 781, 587, 588, 1663, 589, 590,
	591, 0, 592, 593, 594, 595, 596, 597, 598, 599,
	782, 600, 601, 603, 602, 604, 1664, 605, 0, 606,
	607, 608, 0, 0, 0, 0, 0, 609, 610, 612,
	0, 613, 614, 615, 616, 611, 617, 618, 619, 620,
	621, 622, 1665, 624, 625, 623, 626, 627, 1386, 628,
	629, 630, 631, 632, 783, 633, 0, 634, 635, 643,
	644, 645, 636, 637, 639, 646, 638, 647, 648, 649,
	650, 652, 651, 1666, 654, 655, 653, 656, 657, 658,
	1667, 659, 784, 660, 640, 641, 661, 662, 1387, 663,
	664, 665, 666, 667, 668, 669, 785, 0, 670, 1668,
	671, 672, 673, 674, 675, 676, 678, 642, 679, 684,
	685, 786, 680, 681, 682, 683, 787, 687, 688, 689,
	690, 1669, 691, 692, 0, 686, 677, 1670, 693, 694,
	695, 696, 697, 698, 0, 699, 700, 1671, 701, 788,
	789, 790, 791, 1672, 713, 1673, 702, 704, 705, 706,
	707, 792, 708, 793, 1674, 709, 710, 711, 712, 703,
	714, 715, 1675, 1676, 716, 717, 718, 720, 722, 723,
	719, 721, 724, 1677, 725, 1678, 0, 726, 727, 728,
	794, 795, 796, 1679, 730, 731, 729, 732, 733, 736,
	734, 735, 797, 737, 738, 739, 1680, 1681, 1682, 1683,
	740, 741, 798, 742, 743, 744, 0, 0, 0, 0,
	0, 0, 0, 0, 1599, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5054, 324, 325, 327, 326, 328, 329, 330, 331, 1605,
	332, 333, 1606, 1607, 1608, 0, 1609, 745, 1610, 1611,
	1612, 334, 1613, 335, 336, 337, 1371, 338, 339, 340,
	341, 342, 343, 344, 746, 747, 0, 345, 748, 346,
	749, 1614, 750, 347, 348, 349, 350, 351, 352, 353,
	1615, 1616, 0, 354, 751, 752, 753, 1617, 355, 356,
	754, 1618, 1685, 1619, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 1620, 366, 367, 368, 365, 369, 370,
	1621, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	1622, 379, 380, 381, 1372, 382, 383, 384, 1623, 1624,
	1626, 1625, 1627, 1628, 1629, 385, 386, 387, 388, 389,
	0, 390, 392, 755, 756, 1630, 395, 397, 391, 393,
	1631, 396, 394, 398, 399, 1632, 400, 401, 402, 1633,
	1634, 403, 404, 405, 1635, 406, 407, 408, 1636, 409,
	410, 411, 1637, 412, 413, 757, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 758, 759,
	426, 427, 1638, 319, 1639, 0, 0, 0, 0, 428,
	429, 430, 760, 0, 0, 0, 431, 1640, 432, 433,
	434, 1641, 435, 436, 1642, 1373, 437, 438, 439, 761,
	762, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	1643, 449, 763, 1644, 764, 450, 1645, 451, 452, 453,
	454, 455, 456, 457, 765, 766, 767, 553, 1375, 458,
	459, 460, 1646, 461, 462, 463, 464, 465, 0, 0,
	0, 466, 467, 468, 469, 1647, 321, 320, 322, 1374,
	768, 470, 554, 471, 769, 770, 1648, 771, 1649, 472,
	473, 475, 1376, 772, 1377, 474, 476, 477, 1378, 478,
	0, 0, 0, 479, 480, 481, 482, 483, 484, 485,
	1650, 486, 488, 487, 1651, 490, 773, 489, 1379, 491,
	492, 1380, 1652, 493, 494, 495, 496, 497, 498, 501,
	1653, 1654, 499, 500, 502, 503, 0, 504, 505, 507,
	510, 506, 508, 509, 511, 524, 525, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 527,
	0, 526, 1381, 528, 529, 530, 531, 532, 540, 542,
	543, 538, 539, 541, 544, 545, 547, 535, 536, 537,
	1382, 546, 533, 1655, 534, 323, 1383, 548, 549, 550,
	551, 1656, 774, 552, 775, 555, 556, 1657, 0, 557,
	0, 558, 1658, 1659, 560, 561, 562, 1660, 1661, 563,
	564, 776, 1384, 565, 1385, 777, 566, 567, 559, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 1662,
	578, 579, 778, 580, 581, 582, 779, 583, 584, 585,
	780, 586, 781, 587, 588, 1663, 589, 590, 591, 0,
	592, 593, 594, 595, 596, 597, 598, 599, 782, 600,
	601, 603, 602, 604, 1664, 605, 0, 606, 607, 608,
	0, 0, 0, 0, 0, 609, 610, 612, 0, 613,
	614, 615, 616, 611, 617, 618, 619, 620, 621, 622,
	1665, 624, 625, 623, 626, 627, 1386, 628, 629, 630,
	631, 632, 783, 633, 0, 634, 635, 643, 644, 645,
	636, 637, 639, 646, 638, 647, 648, 649, 650, 652,
	651, 1666, 654, 655, 653, 656, 657, 658, 1667, 659,
	784, 660, 640, 641, 661, 662, 1387, 663, 664, 665,
	666, 667, 668, 669, 785, 0, 670, 1668, 671, 672,
	673, 674, 675, 676, 678, 642, 679, 684, 685, 786,
	680, 681, 682, 683, 787, 687, 688, 689, 690, 1669,
	691, 692, 0, 686, 677, 1670, 693, 694, 695, 696,
	697, 698, 0, 699, 700, 1671, 701, 788, 789, 790,
	791, 1672, 713, 1673, 702, 704, 705, 706, 707, 792,
	708, 793, 1674, 709, 710, 711, 712, 703, 714, 715,
	1675, 1676, 716, 717, 718, 720, 722, 723, 719, 721,
	724, 1677, 725, 1678, 0, 726, 727, 728, 794, 795,
	796, 1679, 730, 731, 729, 732, 733, 736, 734, 735,
	797, 737, 738, 739, 1680, 1681, 1682, 1683, 740, 741,
	798, 742, 743, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 1599, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4896, 324,
	325, 327, 326, 328, 329, 330, 331, 1605, 332, 333,
	1606, 1607, 1608, 0, 1609, 745, 1610, 1611, 1612, 334,
	1613, 335, 336, 337, 1371, 338, 339, 340, 341, 342,
	343, 344, 746, 747, 0, 345, 748, 346, 749, 1614,
	750, 347, 348, 349, 350, 351, 352, 353, 1615, 1616,
	0, 354, 751, 752, 753, 1617, 355, 356, 754, 1618,
	1685, 1619, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 1620, 366, 367, 368, 365, 369, 370, 1621, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 1622, 379,
	380, 381, 1372, 382, 383, 384, 1623, 1624, 1626, 1625,
	1627, 1628, 1629, 385, 386, 387, 388, 389, 0, 390,
	392, 755, 756, 1630, 395, 397, 391, 393, 1631, 396,
	394, 398, 399, 1632, 400, 401, 402, 1633, 1634, 403,
	404, 405, 1635, 406, 407, 408, 1636, 409, 410, 411,
	1637, 412, 413, 757, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 758, 759, 426, 427,
	1638, 319, 1639, 0, 0, 0, 0, 428, 429, 430,
	760, 0, 0, 0, 431, 1640, 432, 433, 434, 1641,
	435, 436, 1642, 1373, 437, 438, 439, 761, 762, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 1643, 449,
	763, 1644, 764, 450, 1645, 451, 452, 453, 454, 455,
	456, 457, 765, 766, 767, 553, 1375, 458, 459, 460,
	1646, 461, 462, 463, 464, 465, 0, 0, 0, 466,
	467, 468, 469, 1647, 321, 320, 322, 1374, 768, 470,
	554, 471, 769, 770, 1648, 771, 1649, 472, 473, 475,
	1376, 772, 1377, 474, 476, 477, 1378, 478, 0, 0,
	0, 479, 480, 481, 482, 483, 484, 485, 1650, 486,
	488, 487, 1651, 490, 773, 489, 1379, 491, 492, 1380,
	1652, 493, 494, 495, 496, 497, 498, 501, 1653, 1654,
	499, 500, 502, 503, 0, 504, 505, 507, 510, 506,
	508, 509, 511, 524, 525, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 527, 0, 526,
	1381, 528, 529, 530, 531, 532, 540, 542, 543, 538,
	539, 541, 544, 545, 547, 535, 536, 537, 1382, 546,
	533, 1655, 534, 323, 1383, 548, 549, 550, 551, 1656,
	774, 552, 775, 555, 556, 1657, 0, 557, 0, 558,
	1658, 1659, 560, 561, 562, 1660, 1661, 563, 564, 776,
	1384, 565, 1385, 777, 566, 567, 559, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 1662, 578, 579,
	778, 580, 581, 582, 779, 583, 584, 585, 780, 586,
	781, 587, 588, 1663, 589, 590, 591, 0, 592, 593,
	594, 595, 596, 597, 598, 599, 782, 600, 601, 603,
	602, 604, 1664, 605, 0, 606, 607, 608, 0, 0,
	0, 0, 0, 609, 610, 612, 0, 613, 614, 615,
	616, 611, 617, 618, 619, 620, 621, 622, 1665, 624,
	625, 623, 626, 627, 1386, 628, 629, 630, 631, 632,
	783, 633, 0, 634, 635, 643, 644, 645, 636, 637,
	639, 646, 638, 647, 648, 649, 650, 652, 651, 1666,
	654, 655, 653, 656, 657, 658, 1667, 659, 784, 660,
	640, 641, 661, 662, 1387, 663, 664, 665, 666, 667,
	668, 669, 785, 0, 670, 1668, 671, 672, 673, 674,
	675, 676, 678, 642, 679, 684, 685, 786, 680, 681,
	682, 683, 787, 687, 688, 689, 690, 1669, 691, 692,
	0, 686, 677, 1670, 693, 694, 695, 696, 697, 698,
	0, 699, 700, 1671, 701, 788, 789, 790, 791, 1672,
	713, 1673, 702, 704, 705, 706, 707, 792, 708, 793,
	1674, 709, 710, 711, 712, 703, 714, 715, 1675, 1676,
	716, 717, 718, 720, 722, 723, 719, 721, 724, 1677,
	725, 1678, 0, 726, 727, 728, 794, 795, 796, 1679,
	730, 731, 729, 732, 733, 736, 734, 735, 797, 737,
	738, 739, 1680, 1681, 1682, 1683, 740, 741, 798, 742,
	743, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	1599, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4710, 324, 325, 327,
	326, 328, 329, 330, 331, 1605, 332, 333, 1606, 1607,
	1608, 0, 1609, 745, 1610, 1611, 1612, 334, 1613, 335,
	336, 337, 1371, 338, 339, 340, 341, 342, 343, 344,
	746, 747, 0, 345, 748, 346, 749, 1614, 750, 347,
	348, 349, 350, 351, 352, 353, 1615, 1616, 0, 354,
	751, 752, 753, 1617, 355, 356, 754, 1618, 1685, 1619,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 1620,
	366, 367, 368, 365, 369, 370, 1621, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 1622, 379, 380, 381,
	1372, 382, 383, 384, 1623, 1624, 1626, 1625, 1627, 1628,
	1629, 385, 386, 387, 388, 389, 0, 390, 392, 755,
	756, 1630, 395, 397, 391, 393, 1631, 396, 394, 398,
	399, 1632, 400, 401, 402, 1633, 1634, 403, 404, 405,
	1635, 406, 407, 408, 1636, 409, 410, 411, 1637, 412,
	413, 757, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 758, 759, 426, 427, 1638, 319,
	1639, 0, 0, 0, 0, 428, 429, 430, 760, 0,
	0, 0, 431, 1640, 432, 433, 434, 1641, 435, 436,
	1642, 1373, 437, 438, 439, 761, 762, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 1643, 449, 763, 1644,
	764, 450, 1645, 451, 452, 453, 454, 455, 456, 457,
	765, 766, 767, 553, 1375, 458, 459, 460, 1646, 461,
	462, 463, 464, 465, 0, 0, 0, 466, 467, 468,
	469, 1647, 321, 320, 322, 1374, 768, 470, 554, 471,
	769, 770, 1648, 771, 1649, 472, 473, 475, 1376, 772,
	1377, 474, 476, 477, 1378, 478, 0, 0, 0, 479,
	480, 481, 482, 483, 484, 485, 1650, 486, 488, 487,
	1651, 490, 773, 489, 1379, 491, 492, 1380, 1652, 493,
	494, 495, 496, 497, 498, 501, 1653, 1654, 499, 500,
	502, 503, 0, 504, 505, 507, 510, 506, 508, 509,
	511, 524, 525, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 527, 0, 526, 1381, 528,
	529, 530, 531, 532, 540, 542, 543, 538, 539, 541,
	544, 545, 547, 535, 536, 537, 1382, 546, 533, 1655,
	534, 323, 1383, 548, 549, 550, 551, 1656, 774, 552,
	775, 555, 556, 1657, 0, 557, 0, 558, 1658, 1659,
	560, 561, 562, 1660, 1661, 563, 564, 776, 1384, 565,
	1385, 777, 566, 567, 559, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 1662, 578, 579, 778, 580,
	581, 582, 779, 583, 584, 585, 780, 586, 781, 587,
	588, 1663, 589, 590, 591, 0, 592, 593, 594, 595,
	596, 597, 598, 599, 782, 600, 601, 603, 602, 604,
	1664, 605, 0, 606, 607, 608, 0, 0, 0, 0,
	0, 609, 610, 612, 0, 613, 614, 615, 616, 611,
	617, 618, 619, 620, 621, 622, 1665, 624, 625, 623,
	626, 627, 1386, 628, 629, 630, 631, 632, 783, 633,
	0, 634, 635, 643, 644, 645, 636, 637, 639, 646,
	638, 647, 648, 649, 650, 652, 651, 1666, 654, 655,
	653, 656, 657, 658, 1667, 659, 784, 660, 640, 641,
	661, 662, 1387, 663, 664, 665, 666, 667, 668, 669,
	785, 0, 670, 1668, 671, 672, 673, 674, 675, 676,
	678, 642, 679, 684, 685, 786, 680, 681, 682, 683,
	787, 687, 688, 689, 690, 1669, 691, 692, 0, 686,
	677, 1670, 693, 694, 695, 696, 697, 698, 0, 699,
	700, 1671, 701, 788, 789, 790, 791, 1672, 713, 1673,
	702, 704, 705, 706, 707, 792, 708, 793, 1674, 709,
	710, 711, 712, 703, 714, 715, 1675, 1676, 716, 717,
	718, 720, 722, 723, 719, 721, 724, 1677, 725, 1678,
	0, 726, 727, 728, 794, 795, 796, 1679, 730, 731,
	729, 732, 733, 736, 734, 735, 797, 737, 738, 739,
	1680, 1681, 1682, 1683, 740, 741, 798, 742, 743, 744,
	0, 0, 0, 0, 0, 0, 0, 0, 1599, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4329, 324, 325, 327, 326, 328,
	329, 330, 331, 1605, 332, 333, 1606, 1607, 1608, 0,
	1609, 745, 1610, 1611, 1612, 334, 1613, 335, 336, 337,
	1371, 338, 339, 340, 341, 342, 343, 344, 746, 747,
	0, 345, 748, 346, 749, 1614, 750, 347, 348, 349,
	350, 351, 352, 353, 1615, 1616, 0, 354, 751, 752,
	753, 1617, 355, 356, 754, 1618, 1685, 1619, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 1620, 366, 367,
	368, 365, 369, 370, 1621, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 1622, 379, 380, 381, 1372, 382,
	383, 384, 1623, 1624, 1626, 1625, 1627, 1628, 1629, 385,
	386, 387, 388, 389, 0, 390, 392, 755, 756, 1630,
	395, 397, 391, 393, 1631, 396, 394, 398, 399, 1632,
	400, 401, 402, 1633, 1634, 403, 404, 405, 1635, 406,
	407, 408, 1636, 409, 410, 411, 1637, 412, 413, 757,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 758, 759, 426, 427, 1638, 319, 1639, 0,
	0, 0, 0, 428, 429, 430, 760, 0, 0, 0,
	431, 1640, 432, 433, 434, 1641, 435, 436, 1642, 1373,
	437, 438, 439, 761, 762, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 1643, 449, 763, 1644, 764, 450,
	1645, 451, 452, 453, 454, 455, 456, 457, 765, 766,
	767, 553, 1375, 458, 459, 460, 1646, 461, 462, 463,
	464, 465, 0, 0, 0, 466, 467, 468, 469, 1647,
	321, 320, 322, 1374, 768, 470, 554, 471, 769, 770,
	1648, 771, 1649, 472, 473, 475, 1376, 772, 1377, 474,
	476, 477, 1378, 478, 0, 0, 0, 479, 480, 481,
	482, 483, 484, 485, 1650, 486, 488, 487, 1651, 490,
	773, 489, 1379, 491, 492, 1380, 1652, 493, 494, 495,
	496, 497, 498, 501, 1653, 1654, 499, 500, 502, 503,
	0, 504, 505, 507, 510, 506, 508, 509, 511, 524,
	525, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 527, 0, 526, 1381, 528, 529, 530,
	531, 532, 540, 542, 543, 538, 539, 541, 544, 545,
	547, 535, 536, 537, 1382, 546, 533, 1655, 534, 323,
	1383, 548, 549, 550, 551, 1656, 774, 552, 775, 555,
	556, 1657, 0, 557, 0, 558, 1658, 1659, 560, 561,
	562, 1660, 1661, 563, 564, 776, 1384, 565, 1385, 777,
	566, 567, 559, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 1662, 578, 579, 778, 580, 581, 582,
	779, 583, 584, 585, 780, 586, 781, 587, 588, 1663,
	589, 590, 591, 0, 592, 593, 594, 595, 596, 597,
	598, 599, 782, 600, 601, 603, 602, 604, 1664, 605,
	0, 606, 607, 608, 0, 0, 0, 0, 0, 609,
	610, 612, 0, 613, 614, 615, 616, 611, 617, 618,
	619, 620, 621, 622, 1665, 624, 625, 623, 626, 627,
	1386, 628, 629, 630, 631, 632, 783, 633, 0, 634,
	635, 643, 644, 645, 636, 637, 639, 646, 638, 647,
	648, 649, 650, 652, 651, 1666, 654, 655, 653, 656,
	657, 658, 1667, 659, 784, 660, 640, 641, 661, 662,
	1387, 663, 664, 665, 666, 667, 668, 669, 785, 0,
	670, 1668, 671, 672, 673, 674, 675, 676, 678, 642,
	679, 684, 685, 786, 680, 681, 682, 683, 787, 687,
	688, 689, 690, 1669, 691, 692, 0, 686, 677, 1670,
	693, 694, 695, 696, 697, 698, 0, 699, 700, 1671,
	701, 788, 789, 790, 791, 1672, 713, 1673, 702, 704,
	705, 706, 707, 792, 708, 793, 1674, 709, 710, 711,
	712, 703, 714, 715, 1675, 1676, 716, 717, 718, 720,
	722, 723, 719, 721, 724, 1677, 725, 1678, 0, 726,
	727, 728, 794, 795, 796, 1679, 730, 731, 729, 732,
	733, 736, 734, 735, 797, 737, 738, 739, 1680, 1681,
	1682, 1683, 740, 741, 798, 742, 743, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 1599, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4129, 324, 325, 327, 326, 328, 329, 330,
	331, 1605, 332, 333, 1606, 1607, 1608, 0, 1609, 745,
	1610, 1611, 1612, 334, 1613, 335, 336, 337, 1371, 338,
	339, 340, 341, 342, 343, 344, 746, 747, 0, 345,
	748, 346, 749, 1614, 750, 347, 348, 349, 350, 351,
	352, 353, 1615, 1616, 0, 354, 751, 752, 753, 1617,
	355, 356, 754, 1618, 1685, 1619, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 1620, 366, 367, 368, 365,
	369, 370, 1621, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 1622, 379, 380, 381, 1372, 382, 383, 384,
	1623, 1624, 1626, 1625, 1627, 1628, 1629, 385, 386, 387,
	388, 389, 0, 390, 392, 755, 756, 1630, 395, 397,
	391, 393, 1631, 396, 394, 398, 399, 1632, 400, 401,
	402, 1633, 1634, 403, 404, 405, 1635, 406, 407, 408,
	1636, 409, 410, 411, 1637, 412, 413, 757, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	758, 759, 426, 427, 1638, 319, 1639, 0, 0, 0,
	0, 428, 429, 430, 760, 0, 0, 0, 431, 1640,
	432, 433, 434, 1641, 435, 436, 1642, 1373, 437, 438,
	439, 761, 762, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 1643, 449, 763, 1644, 764, 450, 1645, 451,
	452, 453, 454, 455, 456, 457, 765, 766, 767, 553,
	1375, 458, 459, 460, 1646, 461, 462, 463, 464, 465,
	0, 0, 0, 466, 467, 468, 469, 1647, 321, 320,
	322, 1374, 768, 470, 554, 471, 769, 770, 1648, 771,
	1649, 472, 473, 475, 1376, 772, 1377, 474, 476, 477,
	1378, 478, 0, 0, 0, 479, 480, 481, 482, 483,
	484, 485, 1650, 486, 488, 487, 1651, 490, 773, 489,
	1379, 491, 492, 1380, 1652, 493, 494, 495, 496, 497,
	498, 501, 1653, 1654, 499, 500, 502, 503, 0, 504,
	505, 507, 510, 506, 508, 509, 511, 524, 525, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 527, 0, 526, 1381, 528, 529, 530, 531, 532,
	540, 542, 543, 538, 539, 541, 544, 545, 547, 535,
	536, 537, 1382, 546, 533, 1655, 534, 323, 1383, 548,
	549, 550, 551, 1656, 774, 552, 775, 555, 556, 1657,
	0, 557, 0, 558, 1658, 1659, 560, 561, 562, 1660,
	1661, 563, 564, 776, 1384, 565, 1385, 777, 566, 567,
	559, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 1662, 578, 579, 778, 580, 581, 582, 779, 583,
	584, 585, 780, 586, 781, 587, 588, 1663, 589, 590,
	591, 0, 592, 593, 594, 595, 596, 597, 598, 599,
	782, 600, 601, 603, 602, 604, 1664, 605, 0, 606,
	607, 608, 0, 0, 0, 0, 0, 609, 610, 612,
	0, 613, 614, 615, 616, 611, 617, 618, 619, 620,
	621, 622, 1665, 624, 625, 623, 626, 627, 1386, 628,
	629, 630, 631, 632, 783, 633, 0, 634, 635, 643,
	644, 645, 636, 637, 639, 646, 638, 647, 648, 649,
	650, 652, 651, 1666, 654, 655, 653, 656, 657, 658,
	1667, 659, 784, 660, 640, 641, 661, 662, 1387, 663,
	664, 665, 666, 667, 668, 669, 785, 0, 670, 1668,
	671, 672, 673, 674, 675, 676, 678, 642, 679, 684,
	685, 786, 680, 681, 682, 683, 787, 687, 688, 689,
	690, 1669, 691, 692, 0, 686, 677, 1670, 693, 694,
	695, 696, 697, 698, 0, 699, 700, 1671, 701, 788,
	789, 790, 791, 1672, 713, 1673, 702, 704, 705, 706,
	707, 792, 708, 793, 1674, 709, 710, 711, 712, 703,
	714, 715, 1675, 1676, 716, 717, 718, 720, 722, 723,
	719, 721, 724, 1677, 725, 1678, 0, 726, 727, 728,
	794, 795, 796, 1679, 730, 731, 729, 732, 733, 736,
	734, 735, 797, 737, 738, 739, 1680, 1681, 1682, 1683,
	740, 741, 798, 742, 743, 744, 0, 0, 0, 0,
	0, 0, 0, 0, 1599, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2974, 324, 325, 327, 326, 328, 329, 330, 331, 1605,
	332, 333, 1606, 1607, 1608, 0, 1609, 745, 1610, 1611,
	1612, 334, 1613, 335, 336, 337, 1371, 338, 339, 340,
	341, 342, 343, 344, 746, 747, 0, 345, 748, 346,
	749, 1614, 750, 347, 348, 349, 350, 351, 352, 353,
	1615, 1616, 0, 354, 751, 752, 753, 1617, 355, 356,
	754, 1618, 1685, 1619, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 1620, 366, 367, 368, 365, 369, 370,
	1621, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	1622, 379, 380, 381, 1372, 382, 383, 384, 1623, 1624,
	1626, 1625, 1627, 1628, 1629, 385, 386, 387, 388, 389,
	0, 390, 392, 755, 756, 1630, 395, 397, 391, 393,
	1631, 396, 394, 398, 399, 1632, 400, 401, 402, 1633,
	1634, 403, 404, 405, 1635, 406, 407, 408, 1636, 409,
	410, 411, 1637, 412, 413, 757, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 758, 759,
	426, 427, 1638, 319, 1639, 0, 0, 0, 0, 428,
	429, 430, 760, 0, 0, 0, 431, 1640, 432, 433,
	434, 1641, 435, 436, 1642, 1373, 437, 438, 439, 761,
	762, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	1643, 449, 763, 1644, 764, 450, 1645, 451, 452, 453,
	454, 455, 456, 457, 765, 766, 767, 553, 1375, 458,
	459, 460, 1646, 461, 462, 463, 464, 465, 0, 0,
	0, 466, 467, 468, 469, 1647, 321, 320, 322, 1374,
	768, 470, 554, 471, 769, 770, 1648, 771, 1649, 472,
	473, 475, 1376, 772, 1377, 474, 476, 477, 1378, 478,
	0, 0, 0, 479, 480, 481, 482, 483, 484, 485,
	1650, 486, 488, 487, 1651, 490, 773, 489, 1379, 491,
	492, 1380, 1652, 493, 494, 495, 496, 497, 498, 501,
	1653, 1654, 499, 500, 502, 503, 0, 504, 505, 507,
	510, 506, 508, 509, 511, 524, 525, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 527,
	0, 526, 1381, 528, 529, 530, 531, 532, 540, 542,
	543, 538, 539, 541, 544, 545, 547, 535, 536, 537,
	1382, 546, 533, 1655, 534, 323, 1383, 548, 549, 550,
	551, 1656, 774, 552, 775, 555, 556, 1657, 0, 557,
	0, 558, 1658, 1659, 560, 561, 562, 1660, 1661, 563,
	564, 776, 1384, 565, 1385, 777, 566, 567, 559, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 1662,
	578, 579, 778, 580, 581, 582, 779, 583, 584, 585,
	780, 586, 781, 587, 588, 1663, 589, 590, 591, 0,
	592, 593, 594, 595, 596, 597, 598, 599, 782, 600,
	601, 603, 602, 604, 1664, 605, 0, 606, 607, 608,
	0, 0, 0, 0, 0, 609, 610, 612, 0, 613,
	614, 615, 616, 611, 617, 618, 619, 620, 621, 622,
	1665, 624, 625, 623, 626, 627, 1386, 628, 629, 630,
	631, 632, 783, 633, 0, 634, 635, 643, 644, 645,
	636, 637, 639, 646, 638, 647, 648, 649, 650, 652,
	651, 1666, 654, 655, 653, 656, 657, 658, 1667, 659,
	784, 660, 640, 641, 661, 662, 1387, 663, 664, 665,
	666, 667, 668, 669, 785, 0, 670, 1668, 671, 672,
	673, 674, 675, 676, 678, 642, 679, 684, 685, 786,
	680, 681, 682, 683, 787, 687, 688, 689, 690, 1669,
	691, 692, 0, 686, 677, 1670, 693, 694, 695, 696,
	697, 698, 0, 699, 700, 1671, 701, 788, 789, 790,
	791, 1672, 713, 1673, 702, 704, 705, 706, 707, 792,
	708, 793, 1674, 709, 710, 711, 712, 703, 714, 715,
	1675, 1676, 716, 717, 718, 720, 722, 723, 719, 721,
	724, 1677, 725, 1678, 0, 726, 727, 728, 794, 795,
	796, 1679, 730, 731, 729, 732, 733, 736, 734, 735,
	797, 737, 738, 739, 1680, 1681, 1682, 1683, 740, 741,
	798, 742, 743, 744, 0, 0, 0, 0, 0, 0,
	1596, 0, 1599, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2578, 324,
	325, 327, 326, 328, 329, 330, 331, 1605, 332, 333,
	1606, 1607, 1608, 0, 1609, 745, 1610, 1611, 1612, 334,
	1613, 335, 336, 337, 1371, 338, 339, 340, 341, 342,
	343, 344, 746, 747, 0, 345, 748, 346, 749, 1614,
	750, 347, 348, 349, 350, 351, 352, 353, 1615, 1616,
	0, 354, 751, 752, 753, 1617, 355, 356, 754, 1618,
	1685, 1619, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 1620, 366, 367, 368, 365, 369, 370, 1621, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 1622, 379,
	380, 381, 1372, 382, 383, 384, 1623, 1624, 1626, 1625,
	1627, 1628, 1629, 385, 386, 387, 388, 389, 0, 390,
	392, 755, 756, 1630, 395, 397, 391, 393, 1631, 396,
	394, 398, 399, 1632, 400, 401, 402, 1633, 1634, 403,
	404, 405, 1635, 406, 407, 408, 1636, 409, 410, 411,
	1637, 412, 413, 757, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 758, 759, 426, 427,
	1638, 319, 1639, 0, 0, 0, 0, 428, 429, 430,
	760, 0, 0, 0, 431, 1640, 432, 433, 434, 1641,
	435, 436, 1642, 1373, 437, 438, 439, 761, 762, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 1643, 449,
	763, 1644, 764, 450, 1645, 451, 452, 453, 454, 455,
	456, 457, 765, 766, 767, 553, 1375, 458, 459, 460,
	1646, 461, 462, 463, 464, 465, 0, 0, 0, 466,
	467, 468, 469, 1647, 321, 320, 322, 1374, 768, 470,
	554, 471, 769, 770, 1648, 771, 1649, 472, 473, 475,
	1376, 772, 1377, 474, 476, 477, 1378, 478, 0, 0,
	0, 479, 480, 481, 482, 483, 484, 485, 1650, 486,
	488, 487, 1651, 490, 773, 489, 1379, 491, 492, 1380,
	1652, 493, 494, 495, 496, 497, 498, 501, 1653, 1654,
	499, 500, 502, 503, 0, 504, 505, 507, 510, 506,
	508, 509, 511, 524, 525, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 527, 0, 526,
	1381, 528, 529, 530, 531, 532, 540, 542, 543, 538,
	539, 541, 544, 545, 547, 535, 536, 537, 1382, 546,
	533, 1655, 534, 323, 1383, 548, 549, 550, 551, 1656,
	774, 552, 775, 555, 556, 1657, 0, 557, 0, 558,
	1658, 1659, 560, 561, 562, 1660, 1661, 563, 564, 776,
	1384, 565, 1385, 777, 566, 567, 559, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 1662, 578, 579,
	778, 580, 581, 582, 779, 583, 584, 585, 780, 586,
	781, 587, 588, 1663, 589, 590, 591, 0, 592, 593,
	594, 595, 596, 597, 598, 599, 782, 600, 601, 603,
	602, 604, 1664, 605, 0, 606, 607, 608, 0, 0,
	0, 0, 0, 609, 610, 612, 0, 613, 614, 615,
	616, 611, 617, 618, 619, 620, 621, 622, 1665, 624,
	625, 623, 626, 627, 1386, 628, 629, 630, 631, 632,
	783, 633, 0, 634, 635, 643, 644, 645, 636, 637,
	639, 646, 638, 647, 648, 649, 650, 652, 651, 1666,
	654, 655, 653, 656, 657, 658, 1667, 659, 784, 660,
	640, 641, 661, 662, 1387, 663, 664, 665, 666, 667,
	668, 669, 785, 0, 670, 1668, 671, 672, 673, 674,
	675, 676, 678, 642, 679, 684, 685, 786, 680, 681,
	682, 683, 787, 687, 688, 689, 690, 1669, 691, 692,
	0, 686, 677, 1670, 693, 694, 695, 696, 697, 698,
	0, 699, 700, 1671, 701, 788, 789, 790, 791, 1672,
	713, 1673, 702, 704, 705, 706, 707, 792, 708, 793,
	1674, 709, 710, 711, 712, 703, 714, 715, 1675, 1676,
	716, 717, 718, 720, 722, 723, 719, 721, 724, 1677,
	725, 1678, 0, 726, 727, 728, 794, 795, 796, 1679,
	730, 731, 729, 732, 733, 736, 734, 735, 797, 737,
	738, 739, 1680, 1681, 1682, 1683, 740, 741, 798, 742,
	743, 744, 1599, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 1605, 332, 333,
	1606, 1607, 1608, 0, 1609, 745, 1610, 1611, 1612, 334,
	1613, 335, 336, 337, 1371, 338, 339, 340, 341, 342,
	343, 344, 746, 747, 0, 345, 748, 346, 749, 1614,
	750, 347, 348, 349, 350, 351, 352, 353, 1615, 1616,
	0, 354, 751, 752, 753, 1617, 355, 356, 754, 1618,
	1685, 1619, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 1620, 366, 367, 368, 365, 369, 370, 1621, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 1622, 379,
	380, 381, 1372, 382, 383, 384, 1623, 1624, 1626, 1625,
	1627, 1628, 1629, 385, 386, 387, 388, 389, 0, 390,
	392, 755, 756, 1630, 395, 397, 391, 393, 1631, 396,
	394, 398, 399, 1632, 400, 401, 402, 1633, 1634, 403,
	404, 405, 1635, 406, 407, 408, 1636, 409, 410, 411,
	1637, 412, 413, 757, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 758, 759, 426, 427,
	1638, 319, 1639, 0, 0, 0, 0, 428, 429, 430,
	760, 0, 0, 0, 431, 1640, 432, 433, 434, 1641,
	435, 436, 1642, 1373, 437, 438, 439, 761, 762, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 1643, 449,
	763, 1644, 764, 450, 1645, 451, 452, 453, 454, 455,
	456, 457, 765, 766, 767, 553, 1375, 458, 459, 460,
	1646, 461, 462, 463, 464, 465, 0, 0, 0, 466,
	467, 468, 469, 1647, 321, 320, 322, 1374, 768, 470,
	554, 471, 769, 770, 1648, 771, 1649, 472, 473, 475,
	1376, 772, 1377, 474, 476, 477, 1378, 478, 0, 0,
	0, 479, 480, 481, 482, 483, 484, 485, 1650, 486,
	488, 487, 1651, 490, 773, 489, 1379, 491, 492, 1380,
	1652, 493, 494, 495, 496, 497, 498, 501, 1653, 1654,
	499, 500, 502, 503, 0, 504, 505, 507, 510, 506,
	508, 509, 511, 524, 525, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 527, 0, 526,
	1381, 528, 529, 530, 531, 532, 540, 542, 543, 538,
	539, 541, 544, 545, 547, 535, 536, 537, 1382, 546,
	533, 1655, 534, 323, 1383, 548, 549, 550, 551, 1656,
	774, 552, 775, 555, 556, 1657, 0, 557, 0, 558,
	1658, 1659, 560, 561, 562, 1660, 1661, 563, 564, 776,
	1384, 565, 1385, 777, 566, 567, 559, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 1662, 578, 579,
	778, 580, 581, 582, 779, 583, 584, 585, 780, 586,
	781, 587, 588, 1663, 589, 590, 591, 0, 592, 593,
	594, 595, 596, 597, 598, 599, 782, 600, 601, 603,
	602, 604, 1664, 605, 0, 606, 607, 608, 0, 0,
	0, 0, 0, 609, 610, 612, 0, 613, 614, 615,
	616, 611, 617, 618, 619, 620, 621, 622, 1665, 624,
	625, 623, 626, 627, 1386, 628, 629, 630, 631, 632,
	783, 633, 0, 634, 635, 643, 644, 645, 636, 637,
	639, 646, 638, 647, 648, 649, 650, 652, 651, 1666,
	654, 655, 653, 656, 657, 658, 1667, 659, 784, 660,
	640, 641, 661, 662, 1387, 663, 664, 665, 666, 667,
	668, 669, 785, 0, 670, 1668, 671, 672, 673, 674,
	675, 676, 678, 642, 679, 684, 685, 786, 680, 681,
	682, 683, 787, 687, 688, 689, 690, 1669, 691, 692,
	0, 686, 677, 1670, 693, 694, 695, 696, 697, 698,
	0, 699, 700, 1671, 701, 788, 789, 790, 791, 1672,
	713, 1673, 702, 704, 705, 706, 707, 792, 708, 793,
	1674, 709, 710, 711, 712, 703, 714, 715, 1675, 1676,
	716, 717, 718, 720, 722, 723, 719, 721, 724, 1677,
	725, 1678, 0, 726, 727, 728, 794, 795, 796, 1679,
	730, 731, 729, 732, 733, 736, 734, 735, 797, 737,
	738, 739, 1680, 1681, 1682, 1683, 740, 741, 798, 742,
	743, 744, 2949, 0, 1305, 1277, 1278, 1279, 1275, 1276,
	1288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 327, 326, 328, 329, 330, 331, 2946,
	332, 333, 0, 0, 0, 0, 0, 1331, 1293, 0,
	0, 334, 0, 335, 336, 337, 1371, 338, 339, 340,
	341, 342, 343, 344, 746, 1344, 0, 345, 1351, 346,
	1350, 0, 1361, 347, 348, 349, 350, 351, 352, 353,
	1295, 1330, 1259, 354, 1391, 1392, 753, 0, 355, 356,
	1337, 0, 1318, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 1372, 382, 383, 384, 1321, 1319,
	1320, 1327, 1323, 1322, 1326, 385, 386, 387, 388, 389,
	1354, 390, 392, 1348, 1347, 1264, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 2947,
	0, 403, 1339, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 1270, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 1362, 1363,
	426, 427, 1284, 319, 0, 0, 0, 0, 0, 428,
	429, 430, 1346, 0, 0, 0, 431, 0, 432, 433,
	434, 0, 435, 436, 0, 1373, 437, 438, 439, 1359,
	1360, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	0, 449, 1369, 0, 1294, 450, 0, 451, 452, 453,
	454, 455, 456, 457, 1332, 1333, 1336, 553, 1375, 458,
	459, 460, 0, 461, 462, 463, 464, 465, 0, 0,
	0, 466, 467, 468, 469, 0, 1274, 320, 322, 1374,
	768, 470, 554, 471, 1341, 1342, 0, 1300, 0, 472,
	473, 475, 1376, 1334, 1377, 474, 476, 477, 1378, 478,
	0, 0, 0, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 488, 487, 0, 490, 1370, 489, 1379, 491,
	492, 1380, 0, 493, 494, 495, 496, 497, 498, 501,
	1325, 1324, 499, 500, 502, 503, 0, 504, 505, 507,
	510, 506, 508, 509, 511, 524, 525, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 527,
	0, 526, 1381, 528, 529, 530, 531, 532, 540, 542,
	543, 538, 539, 541, 544, 545, 547, 535, 536, 537,
	1382, 546, 533, 1261, 534, 323, 1383, 548, 549, 550,
	551, 1285, 1335, 552, 1349, 555, 556, 0, 0, 557,
	0, 558, 0, 0, 560, 561, 562, 0, 0, 563,
	564, 776, 1384, 565, 1385, 1364, 566, 567, 1271, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	578, 579, 778, 580, 581, 582, 779, 583, 584, 585,
	1365, 586, 781, 587, 588, 0, 589, 590, 591, 0,
	592, 593, 594, 595, 596, 597, 598, 599, 1345, 600,
	601, 603, 602, 604, 0, 605, 0, 606, 607, 608,
	0, 0, 0, 0, 0, 609, 610, 612, 0, 613,
	614, 615, 616, 611, 617, 618, 619, 620, 621, 622,
	0, 624, 625, 623, 626, 627, 1386, 628, 629, 630,
	631, 632, 1272, 633, 0, 634, 635, 643, 644, 645,
	636, 637, 639, 646, 638, 647, 648, 649, 650, 652,
	651, 0, 654, 655, 653, 656, 657, 658, 1328, 659,
	784, 660, 640, 641, 661, 662, 1387, 663, 664, 665,
	666, 667, 668, 669, 1343, 0, 670, 0, 671, 672,
	673, 674, 675, 676, 678, 642, 679, 684, 685, 1390,
	680, 681, 682, 683, 1366, 687, 688, 689, 690, 0,
	691, 692, 1258, 686, 677, 0, 693, 694, 695, 696,
	697, 698, 0, 699, 700, 0, 701, 1355, 1356, 1357,
	1358, 0, 713, 0, 702, 704, 705, 706, 707, 1367,
	708, 1368, 1283, 709, 710, 711, 712, 703, 714, 715,
	0, 1265, 716, 717, 718, 720, 722, 723, 719, 721,
	724, 1329, 725, 0, 0, 726, 727, 728, 794, 1352,
	1389, 2945, 730, 731, 729, 732, 733, 736, 734, 735,
	797, 737, 738, 739, 0, 0, 0, 0, 740, 741,
	798, 742, 743, 744, 1262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1257,
	0, 0, 0, 0, 0, 0, 1255, 1256, 2948, 0,
	0, 0, 0, 0, 0, 0, 1289, 2944, 0, 1246,
	1287, 1305, 1277, 1278, 1279, 1275, 1276, 1288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 1331, 1293, 0, 0, 334, 0,
	335, 336, 337, 1371, 338, 339, 340, 341, 342, 343,
	344, 746, 1344, 0, 345, 1351, 346, 1350, 0, 1361,
	347, 348, 349, 350, 351, 352, 353, 1295, 1330, 1259,
	354, 1391, 1392, 753, 0, 355, 356, 1337, 0, 1318,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 1372, 382, 383, 384, 1321, 1319, 1320, 1327, 1323,
	1322, 1326, 385, 386, 387, 388, 389, 1354, 390, 392,
	1348, 1347, 1264, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 1339,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 1270, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 1362, 1363, 426, 427, 1284,
	319, 0, 0, 0, 0, 0, 428, 429, 430, 1346,
	0, 0, 0, 431, 0, 432, 433, 434, 0, 435,
	436, 0, 1373, 437, 438, 439, 1359, 1360, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 0, 449, 1369,
	0, 1294, 450, 0, 451, 452, 453, 454, 455, 456,
	457, 1332, 1333, 1336, 553, 1375, 458, 459, 460, 0,
	461, 462, 463, 464, 465, 0, 0, 0, 466, 467,
	468, 469, 0, 1274, 320, 322, 1374, 768, 470, 554,
	471, 1341, 1342, 0, 1300, 0, 472, 473, 475, 1376,
	1334, 1377, 474, 476, 477, 1378, 478, 0, 0, 0,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 488,
	487, 0, 490, 1370, 489, 1379, 491, 492, 1380, 0,
	493, 494, 495, 496, 497, 498, 501, 1325, 1324, 499,
	500, 502, 503, 0, 504, 505, 507, 510, 506, 508,
	509, 511, 524, 525, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 527, 0, 526, 1381,
	528, 529, 530, 531, 532, 540, 542, 543, 538, 539,
	541, 544, 545, 547, 535, 536, 537, 1382, 546, 533,
	1261, 534, 323, 1383, 548, 549, 550, 551, 1285, 1335,
	552, 1349, 555, 556, 0, 0, 557, 0, 558, 0,
	0, 560, 561, 562, 0, 0, 563, 564, 776, 1384,
	565, 1385, 1364, 566, 567, 1271, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 578, 579, 778,
	580, 581, 582, 779, 583, 584, 585, 1365, 586, 781,
	587, 588, 0, 589, 590, 591, 0, 592, 593, 594,
	595, 596, 597, 598, 599, 1345, 600, 601, 603, 602,
	604, 0, 605, 0, 606, 607, 608, 0, 0, 0,
	0, 0, 609, 610, 612, 0, 613, 614, 615, 616,
	611, 617, 618, 619, 620, 621, 622, 0, 624, 625,
	623, 626, 627, 1386, 628, 629, 630, 631, 632, 1272,
	633, 0, 634, 635, 643, 644, 645, 636, 637, 639,
	646, 638, 647, 648, 649, 650, 652, 651, 275, 654,
	655, 653, 656, 657, 658, 1328, 659, 784, 660, 640,
	641, 661, 662, 1387, 663, 664, 665, 666, 667, 668,
	669, 1343, 0, 670, 0, 671, 672, 673, 674, 675,
	676, 678, 642, 679, 684, 685, 1390, 680, 681, 682,
	683, 1366, 687, 688, 689, 690, 0, 691, 692, 1258,
	686, 677, 277, 693, 694, 695, 696, 697, 698, 0,
	699, 700, 0, 701, 1355, 1356, 1357, 1358, 0, 713,
	0, 702, 704, 705, 706, 707, 1367, 708, 1368, 1283,
	709, 710, 711, 712, 703, 714, 715, 0, 1265, 716,
	717, 718, 720, 722, 723, 719, 721, 724, 1329, 725,
	0, 0, 726, 727, 728, 1849, 1352, 1389, 0, 730,
	731, 729, 732, 733, 736, 734, 735, 797, 737, 738,
	739, 0, 0, 0, 269, 740, 741, 798, 742, 743,
	744, 1262, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1257, 0, 0, 0,
	0, 0, 0, 1255, 1256, 1305, 1277, 1278, 1279, 1275,
	1276, 1288, 0, 2125, 2123, 0, 0, 1287, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 1331, 1293,
	0, 0, 334, 0, 335, 336, 337, 1371, 338, 339,
	340, 341, 342, 343, 344, 746, 1344, 0, 345, 1351,
	346, 1350, 0, 1361, 347, 348, 349, 350, 351, 352,
	353, 1295, 1330, 1259, 354, 1391, 1392, 753, 0, 355,
	356, 1337, 0, 1318, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 1372, 382, 383, 384, 1321,
	1319, 1320, 1327, 1323, 1322, 1326, 385, 386, 387, 388,
	389, 1354, 390, 392, 1348, 1347, 1264, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 1339, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 1270, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 1362,
	1363, 426, 427, 1284, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 1346, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 1373, 437, 438, 439,
	1359, 1360, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 1369, 0, 1294, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 1332, 1333, 1336, 553, 1375,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 1274, 320, 322,
	1374, 768, 470, 554, 471, 1341, 1342, 0, 1300, 0,
	472, 473, 475, 1376, 1334, 1377, 474, 476, 477, 1378,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 1370, 489, 1379,
	491, 492, 1380, 0, 493, 494, 495, 496, 497, 498,
	501, 1325, 1324, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 1381, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 1382, 546, 533, 1261, 534, 323, 1383, 548, 549,
	550, 551, 1285, 1335, 552, 1349, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 1384, 565, 1385, 1364, 566, 567, 1271,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 1365, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 1345,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 1386, 628, 629,
	630, 631, 632, 1272, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 275, 654, 655, 653, 656, 657, 658, 1328,
	659, 784, 660, 640, 641, 661, 662, 1387, 663, 664,
	665, 666, 667, 668, 669, 1343, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	1390, 680, 681, 682, 683, 1366, 687, 688, 689, 690,
	0, 691, 692, 1258, 686, 677, 277, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 1355, 1356,
	1357, 1358, 0, 713, 0, 702, 704, 705, 706, 707,
	1367, 708, 1368, 1283, 709, 710, 711, 712, 703, 714,
	715, 0, 1265, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 1329, 725, 0, 0, 726, 727, 728, 1849,
	1352, 1389, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 0, 0, 0, 269, 740,
	741, 798, 742, 743, 744, 1262, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1257, 0, 0, 0, 0, 0, 0, 1255, 1256, 1305,
	1277, 1278, 1279, 1275, 1276, 1288, 0, 2125, 3704, 0,
	0, 1287, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 1331, 1293, 0, 0, 334, 0, 335, 336,
	337, 1371, 338, 339, 340, 341, 342, 343, 344, 746,
	1344, 0, 345, 1351, 346, 1350, 0, 1361, 347, 348,
	349, 350, 351, 352, 353, 1295, 1330, 1259, 354, 1391,
	1392, 753, 0, 355, 356, 1337, 0, 1318, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 1372,
	382, 383, 384, 1321, 1319, 1320, 1327, 1323, 1322, 1326,
	385, 386, 387, 388, 389, 1354, 390, 392, 1348, 1347,
	1264, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 1339, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	1270, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 1362, 1363, 426, 427, 1284, 319, 0,
	0, 0, 0, 0, 428, 429, 430, 1346, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	1373, 437, 438, 439, 1359, 1360, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 0, 449, 1369, 0, 1294,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 1332,
	1333, 1336, 553, 1375, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 1274, 320, 322, 1374, 768, 470, 554, 471, 1341,
	1342, 0, 1300, 0, 472, 473, 475, 1376, 1334, 1377,
	474, 476, 477, 1378, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 1370, 489, 1379, 491, 492, 1380, 0, 493, 494,
	495, 496, 497, 498, 501, 1325, 1324, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 1381, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 1382, 546, 533, 1261, 534,
	323, 1383, 548, 549, 550, 551, 1285, 1335, 552, 1349,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 776, 1384, 565, 1385,
	1364, 566, 567, 1271, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 778, 580, 581,
	582, 779, 583, 584, 585, 1365, 586, 781, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 1345, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 1386, 628, 629, 630, 631, 632, 1272, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 650, 652, 651, 275, 654, 655, 653,
	656, 657, 658, 1328, 659, 784, 660, 640, 641, 661,
	662, 1387, 663, 664, 665, 666, 667, 668, 669, 1343,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 1390, 680, 681, 682, 683, 1366,
	687, 688, 689, 690, 0, 691, 692, 1258, 686, 677,
	277, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 1355, 1356, 1357, 1358, 0, 713, 0, 702,
	704, 705, 706, 707, 1367, 708, 1368, 1283, 709, 710,
	711, 712, 703, 714, 715, 0, 1265, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 1329, 725, 0, 0,
	726, 727, 728, 1849, 1352, 1389, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 797, 737, 738, 739, 0,
	0, 0, 269, 740, 741, 798, 742, 743, 744, 1262,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1257, 0, 0, 0, 0, 0,
	0, 1255, 1256, 1305, 1277, 1278, 1279, 1275, 1276, 1288,
	0, 2125, 2123, 0, 0, 1287, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 1331, 1293, 0, 0,
	334, 0, 335, 336, 337, 1371, 338, 339, 340, 341,
	342, 343, 344, 746, 1344, 0, 345, 1351, 346, 1350,
	3082, 1361, 347, 348, 349, 350, 351, 352, 353, 1295,
	1330, 1259, 354, 1391, 1392, 753, 0, 355, 356, 1337,
	0, 1318, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 1372, 382, 383, 384, 1321, 1319, 1320,
	1327, 1323, 1322, 1326, 385, 386, 387, 388, 389, 1354,
	390, 392, 1348, 1347, 1264, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 1339, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 1270, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 1362, 1363, 426,
	427, 1284, 319, 0, 0, 0, 0, 0, 428, 429,
	430, 1346, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 3087, 1373, 437, 438, 439, 1359, 1360,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 1369, 0, 1294, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 1332, 1333, 1336, 553, 1375, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 1274, 320, 322, 1374, 768,
	470, 554, 471, 1341, 1342, 0, 1300, 0, 472, 473,
	475, 1376, 1334, 1377, 474, 476, 477, 1378, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 3083, 490, 1370, 489, 1379, 491, 492,
	1380, 0, 493, 494, 495, 496, 497, 498, 501, 1325,
	1324, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 1381, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 1382,
	546, 533, 1261, 534, 323, 1383, 548, 549, 550, 551,
	1285, 1335, 552, 1349, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 1384, 565, 1385, 1364, 566, 567, 1271, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 1365,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 1345, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 1386, 628, 629, 630, 631,
	632, 1272, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 1328, 659, 784,
	660, 640, 641, 661, 662, 1387, 663, 664, 665, 666,
	667, 668, 669, 1343, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 1390, 680,
	681, 682, 683, 1366, 687, 688, 689, 690, 0, 691,
	692, 1258, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 1355, 1356, 1357, 1358,
	0, 713, 3084, 702, 704, 705, 706, 707, 1367, 708,
	1368, 1283, 709, 710, 711, 712, 703, 714, 715, 0,
	1265, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	1329, 725, 0, 0, 726, 727, 728, 794, 1352, 1389,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 0, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 1262, 0, 0, 0, 0, 2994, 0,
	1305, 1277, 1278, 1279, 1275, 1276, 1288, 0, 1257, 0,
	0, 0, 0, 0, 0, 1255, 1256, 324, 325, 327,
	326, 328, 329, 330, 331, 1289, 332, 333, 0, 1287,
	0, 0, 0, 1331, 1293, 0, 0, 334, 0, 335,
	336, 337, 1371, 338, 339, 340, 341, 342, 343, 344,
	746, 1344, 0, 345, 1351, 346, 1350, 0, 1361, 347,
	348, 349, 350, 351, 352, 353, 1295, 1330, 1259, 354,
	1391, 1392, 753, 0, 355, 356, 1337, 0, 1318, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	1372, 382, 383, 384, 1321, 1319, 1320, 1327, 1323, 1322,
	1326, 385, 386, 387, 388, 389, 1354, 390, 392, 1348,
	1347, 1264, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 1339, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 1270, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 1362, 1363, 426, 427, 1284, 319,
	0, 0, 0, 0, 0, 428, 429, 430, 1346, 0,
	0, 0, 431, 0, 432, 433, 434, 0, 435, 436,
	0, 1373, 437, 438, 439, 1359, 1360, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 0, 449, 1369, 0,
	1294, 450, 0, 451, 452, 453, 454, 455, 456, 457,
	1332, 1333, 1336, 553, 1375, 458, 459, 460, 0, 461,
	462, 463, 464, 465, 0, 0, 0, 466, 467, 468,
	469, 0, 1274, 320, 322, 1374, 768, 470, 554, 471,
	1341, 1342, 0, 1300, 0, 472, 473, 475, 1376, 1334,
	1377, 474, 476, 477, 1378, 478, 0, 0, 0, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 488, 487,
	0, 490, 1370, 489, 1379, 491, 492, 1380, 0, 493,
	494, 495, 496, 497, 498, 501, 1325, 1324, 499, 500,
	502, 503, 0, 504, 505, 507, 510, 506, 508, 509,
	511, 524, 525, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 527, 0, 526, 1381, 528,
	529, 530, 531, 532, 540, 542, 543, 538, 539, 541,
	544, 545, 547, 535, 536, 537, 1382, 546, 533, 1261,
	534, 323, 1383, 548, 549, 550, 551, 1285, 1335, 552,
	1349, 555, 556, 0, 0, 557, 0, 558, 0, 0,
	560, 561, 562, 0, 0, 563, 564, 776, 1384, 565,
	1385, 1364, 566, 567, 1271, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 0, 578, 579, 778, 580,
	581, 582, 779, 583, 584, 585, 1365, 586, 781, 587,
	588, 0, 589, 590, 591, 0, 592, 593, 594, 595,
	596, 597, 598, 599, 1345, 600, 601, 603, 602, 604,
	0, 605, 0, 606, 607, 608, 0, 0, 0, 0,
	0, 609, 610, 612, 0, 613, 614, 615, 616, 611,
	617, 618, 619, 620, 621, 622, 0, 624, 625, 623,
	626, 627, 1386, 628, 629, 630, 631, 632, 1272, 633,
	0, 634, 635, 643, 644, 645, 636, 637, 639, 646,
	638, 647, 648, 649, 650, 652, 651, 0, 654, 655,
	653, 656, 657, 658, 1328, 659, 784, 660, 640, 641,
	661, 662, 1387, 663, 664, 665, 666, 667, 668, 669,
	1343, 0, 670, 0, 671, 672, 673, 674, 675, 676,
	678, 642, 679, 684, 685, 1390, 680, 681, 682, 683,
	1366, 687, 688, 689, 690, 0, 691, 692, 1258, 686,
	677, 0, 693, 694, 695, 696, 697, 698, 0, 699,
	700, 0, 701, 1355, 1356, 1357, 1358, 0, 713, 0,
	702, 704, 705, 706, 707, 1367, 708, 1368, 1283, 709,
	710, 711, 712, 703, 714, 715, 0, 1265, 716, 717,
	718, 720, 722, 723, 719, 721, 724, 1329, 725, 0,
	0, 726, 727, 728, 794, 1352, 1389, 0, 730, 731,
	729, 732, 733, 736, 734, 735, 797, 737, 738, 739,
	0, 0, 0, 0, 740, 741, 798, 742, 743, 744,
	1262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1257, 0, 0, 0, 0,
	0, 0, 1255, 1256, 0, 0, 0, 0, 0, 0,
	0, 0, 1289, 2992, 0, 2991, 1287, 1305, 1277, 1278,
	1279, 1275, 1276, 1288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 0,
	1331, 1293, 0, 0, 334, 0, 335, 336, 337, 1371,
	338, 339, 340, 341, 342, 343, 344, 746, 1344, 0,
	345, 1351, 346, 1350, 0, 1361, 347, 348, 349, 350,
	351, 352, 353, 1295, 1330, 1259, 354, 1391, 1392, 753,
	0, 355, 356, 1337, 0, 1318, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 1372, 382, 383,
	384, 1321, 1319, 1320, 1327, 1323, 1322, 1326, 385, 386,
	387, 388, 389, 1354, 390, 392, 1348, 1347, 1264, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 1339, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 1270, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 1362, 1363, 426, 427, 1284, 319, 0, 0, 0,
	0, 0, 428, 429, 430, 1346, 0, 0, 0, 431,
	0, 432, 433, 434, 0, 435, 436, 0, 1373, 437,
	438, 439, 1359, 1360, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 0, 449, 1369, 0, 1294, 450, 0,
	451, 452, 453, 454, 455, 456, 457, 1332, 1333, 1336,
	553, 1375, 458, 459, 460, 0, 461, 462, 463, 464,
	465, 0, 0, 0, 466, 467, 468, 469, 0, 1274,
	320, 322, 1374, 768, 470, 554, 471, 1341, 1342, 0,
	1300, 0, 472, 473, 475, 1376, 1334, 1377, 474, 476,
	477, 1378, 478, 0, 0, 0, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 488, 487, 0, 490, 1370,
	489, 1379, 491, 492, 1380, 0, 493, 494, 495, 496,
	497, 498, 501, 1325, 1324, 499, 500, 502, 503, 0,
	504, 505, 507, 510, 506, 508, 509, 511, 524, 525,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 527, 0, 526, 1381, 528, 529, 530, 531,
	532, 540, 542, 543, 538, 539, 541, 544, 545, 547,
	535, 536, 537, 1382, 546, 533, 1261, 534, 323, 1383,
	548, 549, 550, 551, 1285, 1335, 552, 1349, 555, 556,
	0, 0, 557, 0, 558, 0, 0, 560, 561, 562,
	0, 0, 563, 564, 776, 1384, 565, 1385, 1364, 566,
	567, 1271, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 578, 579, 778, 580, 581, 582, 779,
	583, 584, 585, 1365, 586, 781, 587, 588, 0, 589,
	590, 591, 0, 592, 593, 594, 595, 596, 597, 598,
	599, 1345, 600, 601, 603, 602, 604, 0, 605, 0,
	606, 607, 608, 0, 0, 0, 0, 0, 609, 610,
	612, 0, 613, 614, 615, 616, 611, 617, 618, 619,
	620, 621, 622, 0, 624, 625, 623, 626, 627, 1386,
	628, 629, 630, 631, 632, 1272, 633, 0, 634, 635,
	643, 644, 645, 636, 637, 639, 646, 638, 647, 648,
	649, 650, 652, 651, 0, 654, 655, 653, 656, 657,
	658, 1328, 659, 784, 660, 640, 641, 661, 662, 1387,
	663, 664, 665, 666, 667, 668, 669, 1343, 0, 670,
	0, 671, 672, 673, 674, 675, 676, 678, 642, 679,
	684, 685, 1390, 680, 681, 682, 683, 1366, 687, 688,
	689, 690, 0, 691, 692, 1258, 686, 677, 0, 693,
	694, 695, 696, 697, 698, 0, 699, 700, 0, 701,
	1355, 1356, 1357, 1358, 0, 713, 0, 702, 704, 705,
	706, 707, 1367, 708, 1368, 1283, 709, 710, 711, 712,
	703, 714, 715, 0, 1265, 716, 717, 718, 720, 722,
	723, 719, 721, 724, 1329, 725, 0, 0, 726, 727,
	728, 794, 1352, 1389, 0, 730, 731, 729, 732, 733,
	736, 734, 735, 797, 737, 738, 739, 0, 0, 0,
	0, 740, 741, 798, 742, 743, 744, 1262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1257, 0, 0, 0, 0, 0, 0, 1255,
	1256, 0, 0, 0, 0, 0, 0, 0, 0, 1289,
	2989, 0, 2988, 1287, 1305, 1277, 1278, 1279, 1275, 1276,
	1288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 327, 326, 328, 329, 330, 331, 0,
	332, 333, 0, 0, 0, 0, 0, 1331, 1293, 0,
	0, 334, 0, 335, 336, 337, 1371, 338, 339, 340,
	341, 342, 343, 344, 746, 1344, 0, 345, 1351, 346,
	1350, 0, 1361, 347, 348, 349, 350, 351, 352, 353,
	1295, 1330, 1259, 354, 1391, 1392, 753, 0, 355, 356,
	1337, 0, 1318, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 1372, 382, 383, 384, 1321, 1319,
	1320, 1327, 1323, 1322, 1326, 385, 386, 387, 388, 389,
	1354, 390, 392, 1348, 1347, 1264, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 1339, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 1270, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 1362, 1363,
	426, 427, 1284, 319, 0, 0, 0, 0, 0, 428,
	429, 430, 1346, 0, 0, 0, 431, 0, 432, 433,
	434, 0, 435, 436, 0, 1373, 437, 438, 439, 1359,
	1360, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	0, 449, 1369, 0, 1294, 450, 0, 451, 452, 453,
	454, 455, 456, 457, 1332, 1333, 1336, 553, 1375, 458,
	459, 460, 0, 461, 462, 463, 464, 465, 0, 0,
	0, 466, 467, 468, 469, 0, 1274, 320, 322, 1374,
	768, 470, 554, 471, 1341, 1342, 0, 1300, 0, 472,
	473, 475, 1376, 1334, 1377, 474, 476, 477, 1378, 478,
	0, 0, 0, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 488, 487, 0, 490, 1370, 489, 1379, 491,
	492, 1380, 0, 493, 494, 495, 496, 497, 498, 501,
	1325, 1324, 499, 500, 502, 503, 0, 504, 505, 507,
	510, 506, 508, 509, 511, 524, 525, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 527,
	0, 526, 1381, 528, 529, 530, 531, 532, 540, 542,
	543, 538, 539, 541, 544, 545, 547, 535, 536, 537,
	1382, 546, 533, 1261, 534, 323, 1383, 548, 549, 550,
	551, 1285, 1335, 552, 1349, 555, 556, 0, 0, 557,
	0, 558, 0, 0, 560, 561, 562, 0, 0, 563,
	564, 776, 1384, 565, 1385, 1364, 566, 567, 1271, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	578, 579, 778, 580, 581, 582, 779, 583, 584, 585,
	1365, 586, 781, 587, 588, 0, 589, 590, 591, 0,
	592, 593, 594, 595, 596, 597, 598, 599, 1345, 600,
	601, 603, 602, 604, 0, 605, 0, 606, 607, 608,
	0, 0, 0, 0, 0, 609, 610, 612, 0, 613,
	614, 615, 616, 611, 617, 618, 619, 620, 621, 622,
	0, 624, 625, 623, 626, 627, 1386, 628, 629, 630,
	631, 632, 1272, 633, 0, 634, 635, 643, 644, 645,
	636, 637, 639, 646, 638, 647, 648, 649, 650, 652,
	651, 0, 654, 655, 653, 656, 657, 658, 1328, 659,
	784, 660, 640, 641, 661, 662, 1387, 663, 664, 665,
	666, 667, 668, 669, 1343, 0, 670, 0, 671, 672,
	673, 674, 675, 676, 678, 642, 679, 684, 685, 1390,
	680, 681, 682, 683, 1366, 687, 688, 689, 690, 0,
	691, 692, 1258, 686, 677, 0, 693, 694, 695, 696,
	697, 698, 0, 699, 700, 0, 701, 1355, 1356, 1357,
	1358, 0, 713, 0, 702, 704, 705, 706, 707, 1367,
	708, 1368, 1283, 709, 710, 711, 712, 703, 714, 715,
	0, 1265, 716, 717, 718, 720, 722, 723, 719, 721,
	724, 1329, 725, 0, 0, 726, 727, 728, 794, 1352,
	1389, 0, 730, 731, 729, 732, 733, 736, 734, 735,
	797, 737, 738, 739, 0, 0, 0, 0, 740, 741,
	798, 742, 743, 744, 1262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1257,
	0, 0, 0, 0, 0, 0, 1255, 1256, 0, 0,
	0, 0, 0, 0, 0, 0, 1289, 2986, 0, 2985,
	1287, 1305, 1277, 1278, 1279, 1275, 1276, 1288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 1331, 1293, 0, 0, 334, 0,
	335, 336, 337, 1371, 338, 339, 340, 341, 342, 343,
	344, 746, 1344, 0, 345, 1351, 346, 1350, 0, 1361,
	347, 348, 349, 350, 351, 352, 353, 1295, 1330, 1259,
	354, 1391, 1392, 753, 0, 355, 356, 1337, 0, 1318,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 1372, 382, 383, 384, 1321, 1319, 1320, 1327, 1323,
	1322, 1326, 385, 386, 387, 388, 389, 1354, 390, 392,
	1348, 1347, 1264, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 1339,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 1270, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 1362, 1363, 426, 427, 1284,
	319, 0, 0, 0, 0, 0, 428, 429, 430, 1346,
	0, 0, 0, 431, 0, 432, 433, 434, 0, 435,
	436, 0, 1373, 437, 438, 439, 1359, 1360, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 0, 449, 1369,
	0, 1294, 450, 0, 451, 452, 453, 454, 455, 456,
	457, 1332, 1333, 1336, 553, 1375, 458, 459, 460, 0,
	461, 462, 463, 464, 465, 0, 0, 0, 466, 467,
	468, 469, 0, 1274, 320, 322, 1374, 768, 470, 554,
	471, 1341, 1342, 0, 1300, 0, 472, 473, 475, 1376,
	1334, 1377, 474, 476, 477, 1378, 478, 0, 0, 0,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 488,
	487, 0, 490, 1370, 489, 1379, 491, 492, 1380, 0,
	493, 494, 495, 496, 497, 498, 501, 1325, 1324, 499,
	500, 502, 503, 0, 504, 505, 507, 510, 506, 508,
	509, 511, 524, 525, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 527, 0, 526, 1381,
	528, 529, 530, 531, 532, 540, 542, 543, 538, 539,
	541, 544, 545, 547, 535, 536, 537, 1382, 546, 533,
	1261, 534, 323, 1383, 548, 549, 550, 551, 1285, 1335,
	552, 1349, 555, 556, 0, 0, 557, 0, 558, 0,
	0, 560, 561, 562, 0, 0, 563, 564, 776, 1384,
	565, 1385, 1364, 566, 567, 1271, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 578, 579, 778,
	580, 581, 582, 779, 583, 584, 585, 1365, 586, 781,
	587, 588, 0, 589, 590, 591, 0, 592, 593, 594,
	595, 596, 597, 598, 599, 1345, 600, 601, 603, 602,
	604, 0, 605, 0, 606, 607, 608, 0, 0, 0,
	0, 0, 609, 610, 612, 0, 613, 614, 615, 616,
	611, 617, 618, 619, 620, 621, 622, 0, 624, 625,
	623, 626, 627, 1386, 628, 629, 630, 631, 632, 1272,
	633, 0, 634, 635, 643, 644, 645, 636, 637, 639,
	646, 638, 647, 648, 649, 650, 652, 651, 0, 654,
	655, 653, 656, 657, 658, 1328, 659, 784, 660, 640,
	641, 661, 662, 1387, 663, 664, 665, 666, 667, 668,
	669, 1343, 0, 670, 0, 671, 672, 673, 674, 675,
	676, 678, 642, 679, 684, 685, 1390, 680, 681, 682,
	683, 1366, 687, 688, 689, 690, 0, 691, 692, 1258,
	686, 677, 0, 693, 694, 695, 696, 697, 698, 0,
	699, 700, 0, 701, 1355, 1356, 1357, 1358, 0, 713,
	0, 702, 704, 705, 706, 707, 1367, 708, 1368, 1283,
	709, 710, 711, 712, 703, 714, 715, 0, 1265, 716,
	717, 718, 720, 722, 723, 719, 721, 724, 1329, 725,
	0, 0, 726, 727, 728, 794, 1352, 1389, 0, 730,
	731, 729, 732, 733, 736, 734, 735, 797, 737, 738,
	739, 0, 0, 0, 0, 740, 741, 798, 742, 743,
	744, 1262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1257, 0, 0, 0,
	0, 0, 0, 1255, 1256, 0, 0, 0, 0, 0,
	0, 0, 0, 1289, 2983, 0, 1953, 1287, 1305, 1277,
	1278, 1279, 1275, 1276, 1288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 327, 326, 328,
	329, 330, 331, 0, 332, 333, 0, 0, 0, 0,
	0, 1331, 1293, 0, 0, 334, 0, 335, 336, 337,
	1371, 338, 339, 340, 341, 342, 343, 344, 746, 1344,
	0, 345, 1351, 346, 1350, 0, 1361, 347, 348, 349,
	350, 351, 352, 353, 1295, 1330, 1259, 354, 1391, 1392,
	753, 0, 355, 356, 1337, 0, 1318, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 1372, 382,
	383, 384, 1321, 1319, 1320, 1327, 1323, 1322, 1326, 385,
	386, 387, 388, 389, 1354, 390, 392, 1348, 1347, 1264,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 1339, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 1270,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 1362, 1363, 426, 427, 1284, 319, 0, 0,
	0, 0, 0, 428, 429, 430, 1346, 0, 0, 0,
	431, 0, 432, 433, 434, 0, 435, 436, 0, 1373,
	437, 438, 439, 1359, 1360, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 0, 449, 1369, 0, 1294, 450,
	0, 451, 452, 453, 454, 455, 456, 457, 1332, 1333,
	1336, 553, 1375, 458, 459, 460, 0, 461, 462, 463,
	464, 465, 0, 0, 0, 466, 467, 468, 469, 0,
	1274, 320, 322, 1374, 768, 470, 554, 471, 1341, 1342,
	0, 1300, 0, 472, 473, 475, 1376, 1334, 1377, 474,
	476, 477, 1378, 478, 0, 0, 0, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 488, 487, 0, 490,
	1370, 489, 1379, 491, 492, 1380, 0, 493, 494, 495,
	496, 497, 498, 501, 1325, 1324, 499, 500, 502, 503,
	0, 504, 505, 507, 510, 506, 508, 509, 511, 524,
	525, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 527, 0, 526, 1381, 528, 529, 530,
	531, 532, 540, 542, 543, 538, 539, 541, 544, 545,
	547, 535, 536, 537, 1382, 546, 533, 1261, 534, 323,
	1383, 548, 549, 550, 551, 1285, 1335, 552, 1349, 555,
	556, 0, 0, 557, 0, 558, 0, 0, 560, 561,
	562, 0, 0, 563, 564, 776, 1384, 565, 1385, 1364,
	566, 567, 1271, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 0, 578, 579, 778, 580, 581, 582,
	779, 583, 584, 585, 1365, 586, 781, 587, 588, 0,
	589, 590, 591, 0, 592, 593, 594, 595, 596, 597,
	598, 599, 1345, 600, 601, 603, 602, 604, 0, 605,
	0, 606, 607, 608, 0, 0, 0, 0, 0, 609,
	610, 612, 0, 613, 614, 615, 616, 611, 617, 618,
	619, 620, 621, 622, 0, 624, 625, 623, 626, 627,
	1386, 628, 629, 630, 631, 632, 1272, 633, 0, 634,
	635, 643, 644, 645, 636, 637, 639, 646, 638, 647,
	648, 649, 650, 652, 651, 0, 654, 655, 653, 656,
	657, 658, 1328, 659, 784, 660, 640, 641, 661, 662,
	1387, 663, 664, 665, 666, 667, 668, 669, 1343, 0,
	670, 0, 671, 672, 673, 674, 675, 676, 678, 642,
	679, 684, 685, 1390, 680, 681, 682, 683, 1366, 687,
	688, 689, 690, 0, 691, 692, 1258, 686, 677, 0,
	693, 694, 695, 696, 697, 698, 0, 699, 700, 0,
	701, 1355, 1356, 1357, 1358, 0, 713, 0, 702, 704,
	705, 706, 707, 1367, 708, 1368, 1283, 709, 710, 711,
	712, 703, 714, 715, 0, 1265, 716, 717, 718, 720,
	722, 723, 719, 721, 724, 1329, 725, 0, 0, 726,
	727, 728, 794, 1352, 1389, 0, 730, 731, 729, 732,
	733, 736, 734, 735, 797, 737, 738, 739, 1952, 0,
	0, 0, 740, 741, 798, 742, 743, 744, 1262, 0,
	0, 0, 0, 1251, 0, 1305, 1277, 1278, 1279, 1275,
	1276, 1288, 0, 1257, 0, 0, 0, 0, 0, 0,
	1255, 1256, 324, 325, 327, 326, 328, 329, 330, 331,
	1289, 332, 333, 0, 1287, 0, 0, 0, 1331, 1293,
	0, 0, 334, 0, 335, 336, 337, 1371, 338, 339,
	340, 341, 342, 343, 344, 746, 1344, 0, 345, 1351,
	346, 1350, 0, 1361, 347, 348, 349, 350, 351, 352,
	353, 1295, 1330, 1259, 354, 1391, 1392, 753, 0, 355,
	356, 1337, 0, 1318, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 1372, 382, 383, 384, 1321,
	1319, 1320, 1327, 1323, 1322, 1326, 385, 386, 387, 388,
	389, 1354, 390, 392, 1348, 1347, 1264, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 1339, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 1270, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 1362,
	1363, 426, 427, 1284, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 1346, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 1373, 437, 438, 439,
	1359, 1360, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 1369, 0, 1294, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 1332, 1333, 1336, 553, 1375,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 1274, 320, 322,
	1374, 768, 470, 554, 471, 1341, 1342, 0, 1300, 0,
	472, 473, 475, 1376, 1334, 1377, 474, 476, 477, 1378,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 1370, 489, 1379,
	491, 492, 1380, 0, 493, 494, 495, 496, 497, 498,
	501, 1325, 1324, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 1381, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 1382, 546, 533, 1261, 534, 323, 1383, 548, 549,
	550, 551, 1285, 1335, 552, 1349, 555, 556, 0, 0,
	557, 0, 558, 1266, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 1384, 565, 1385, 1364, 566, 567, 1271,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 1365, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 1345,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 1386, 628, 629,
	630, 631, 632, 1272, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 1328,
	659, 784, 660, 640, 641, 661, 662, 1387, 663, 664,
	665, 666, 667, 668, 669, 1343, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	1390, 680, 681, 682, 683, 1366, 687, 688, 689, 690,
	0, 691, 692, 1258, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 1355, 1356,
	1357, 1358, 0, 713, 0, 702, 704, 705, 706, 707,
	1367, 708, 1368, 1283, 709, 710, 711, 712, 703, 714,
	715, 0, 1265, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 1329, 725, 0, 0, 726, 727, 728, 794,
	1352, 1389, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 0, 0, 0, 0, 740,
	741, 798, 742, 743, 744, 1262, 0, 0, 0, 0,
	0, 0, 1305, 1277, 1278, 1279, 1275, 1276, 1288, 0,
	1257, 0, 0, 0, 0, 0, 0, 1255, 1256, 324,
	325, 327, 326, 328, 329, 330, 331, 1289, 332, 333,
	0, 1287, 0, 0, 0, 1331, 1293, 0, 0, 334,
	0, 335, 336, 337, 1371, 338, 339, 340, 341, 342,
	343, 344, 746, 1344, 0, 345, 1351, 346, 1350, 0,
	1361, 347, 348, 349, 350, 351, 352, 353, 1295, 1330,
	1259, 354, 1391, 1392, 753, 0, 355, 356, 1337, 0,
	1318, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 5446, 377, 378, 0, 379,
	380, 381, 1372, 382, 383, 384, 1321, 1319, 1320, 1327,
	1323, 1322, 1326, 385, 386, 387, 388, 389, 1354, 390,
	392, 1348, 1347, 1264, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	1339, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 1270, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 1362, 1363, 426, 427,
	1284, 319, 0, 0, 0, 0, 0, 428, 429, 430,
	1346, 0, 0, 0, 431, 0, 432, 433, 434, 0,
	435, 436, 0, 1373, 437, 438, 439, 1359, 1360, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 0, 449,
	1369, 0, 1294, 450, 0, 451, 452, 453, 454, 455,
	456, 457, 1332, 1333, 1336, 553, 1375, 458, 459, 460,
	0, 461, 462, 463, 464, 465, 0, 0, 0, 466,
	467, 468, 469, 0, 1274, 320, 322, 1374, 768, 470,
	554, 471, 1341, 1342, 0, 1300, 0, 472, 473, 475,
	1376, 1334, 1377, 474, 476, 477, 1378, 478, 0, 0,
	0, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	488, 487, 0, 490, 1370, 489, 1379, 491, 492, 1380,
	0, 493, 494, 495, 496, 497, 498, 501, 1325, 1324,
	499, 500, 502, 503, 0, 504, 505, 507, 510, 506,
	508, 509, 511, 524, 525, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 527, 0, 526,
	1381, 528, 529, 530, 531, 532, 540, 542, 543, 538,
	539, 541, 544, 545, 547, 535, 536, 537, 1382, 546,
	533, 1261, 534, 323, 1383, 548, 549, 550, 551, 1285,
	1335, 552, 1349, 555, 556, 0, 0, 557, 0, 558,
	1266, 0, 560, 561, 562, 0, 0, 563, 564, 776,
	1384, 565, 1385, 1364, 566, 567, 1271, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 0, 578, 579,
	778, 580, 581, 582, 779, 583, 584, 585, 1365, 586,
	781, 587, 588, 0, 589, 590, 591, 0, 592, 593,
	594, 595, 596, 597, 598, 599, 1345, 600, 601, 603,
	602, 604, 0, 605, 0, 606, 607, 608, 0, 0,
	0, 0, 0, 609, 610, 612, 0, 613, 614, 615,
	616, 611, 617, 618, 619, 620, 621, 622, 0, 624,
	625, 623, 626, 627, 1386, 628, 629, 630, 631, 632,
	1272, 633, 0, 634, 635, 643, 644, 645, 636, 637,
	639, 646, 638, 647, 648, 649, 650, 652, 651, 0,
	654, 655, 653, 656, 657, 658, 1328, 659, 784, 660,
	640, 641, 661, 662, 1387, 663, 664, 665, 666, 667,
	668, 669, 1343, 0, 670, 0, 671, 672, 673, 674,
	675, 676, 678, 642, 679, 684, 685, 1390, 680, 681,
	682, 683, 1366, 687, 688, 689, 690, 0, 691, 692,
	1258, 686, 677, 0, 693, 694, 695, 696, 697, 698,
	0, 699, 700, 0, 701, 1355, 1356, 1357, 1358, 0,
	713, 0, 702, 704, 705, 706, 707, 1367, 708, 1368,
	1283, 709, 710, 711, 712, 703, 714, 715, 0, 1265,
	716, 717, 718, 720, 722, 723, 719, 721, 724, 1329,
	725, 0, 0, 726, 727, 728, 794, 1352, 1389, 0,
	730, 731, 729, 732, 733, 736, 734, 735, 797, 737,
	738, 739, 0, 0, 0, 0, 740, 741, 798, 742,
	743, 744, 1262, 0, 0, 0, 0, 0, 0, 1305,
	1277, 1278, 1279, 1275, 1276, 1288, 0, 1257, 0, 0,
	0, 0, 0, 0, 1255, 1256, 324, 325, 327, 326,
	328, 329, 330, 331, 1289, 332, 333, 0, 1287, 0,
	0, 0, 1331, 1293, 0, 0, 334, 0, 335, 336,
	337, 1371, 338, 339, 340, 341, 342, 343, 344, 746,
	1344, 0, 345, 1351, 346, 1350, 0, 1361, 347, 348,
	349, 350, 351, 352, 353, 1295, 1330, 1259, 354, 1391,
	1392, 753, 0, 355, 356, 1337, 0, 1318, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 1372,
	382, 383, 384, 1321, 1319, 1320, 1327, 1323, 1322, 1326,
	385, 386, 387, 388, 389, 1354, 390, 392, 1348, 1347,
	1264, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 1339, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	1270, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 1362, 1363, 426, 427, 1284, 319, 0,
	0, 0, 0, 0, 428, 429, 430, 1346, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	1373, 437, 438, 439, 1359, 1360, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 0, 449, 1369, 0, 1294,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 1332,
	1333, 1336, 553, 1375, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 1274, 320, 2824, 1374, 768, 470, 554, 471, 1341,
	1342, 0, 1300, 0, 472, 473, 475, 1376, 1334, 1377,
	474, 476, 477, 1378, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 1370, 489, 1379, 491, 492, 1380, 0, 493, 494,
	495, 496, 497, 498, 501, 1325, 1324, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 1381, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 1382, 546, 533, 1261, 534,
	323, 1383, 548, 549, 550, 551, 1285, 1335, 552, 1349,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 776, 1384, 565, 1385,
	1364, 566, 567, 1271, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 778, 580, 581,
	582, 779, 583, 584, 585, 1365, 586, 781, 587, 588,
	2823, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 1345, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 1386, 628, 629, 630, 631, 632, 1272, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 650, 652, 651, 0, 654, 655, 653,
	656, 657, 658, 1328, 659, 784, 660, 640, 641, 661,
	662, 1387, 663, 664, 665, 666, 667, 668, 669, 1343,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 1390, 680, 681, 682, 683, 1366,
	687, 688, 689, 690, 0, 691, 692, 1258, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 1355, 1356, 1357, 1358, 0, 713, 0, 702,
	704, 705, 706, 707, 1367, 708, 1368, 1283, 709, 710,
	711, 712, 703, 714, 715, 0, 1265, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 1329, 725, 0, 0,
	726, 727, 728, 794, 1352, 1389, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 797, 737, 738, 739, 0,
	0, 0, 0, 740, 741, 798, 742, 743, 744, 1262,
	0, 0, 0, 0, 0, 0, 1305, 1277, 1278, 1279,
	1275, 1276, 1288, 0, 1257, 0, 0, 0, 0, 0,
	0, 1255, 1256, 324, 325, 327, 326, 328, 329, 330,
	331, 1289, 332, 333, 0, 1287, 0, 0, 0, 1331,
	1293, 0, 0, 334, 0, 335, 336, 337, 1371, 338,
	339, 340, 341, 342, 343, 344, 746, 1344, 0, 345,
	1351, 346, 1350, 0, 1361, 347, 348, 349, 350, 351,
	352, 353, 1295, 1330, 1259, 354, 1391, 1392, 753, 0,
	355, 356, 1337, 0, 1318, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 5153,
	377, 378, 0, 379, 380, 381, 1372, 382, 383, 384,
	1321, 1319, 1320, 1327, 1323, 1322, 1326, 385, 386, 387,
	388, 389, 1354, 390, 392, 1348, 1347, 1264, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 1339, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 1270, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	1362, 1363, 426, 427, 1284, 319, 0, 0, 0, 0,
	0, 428, 429, 430, 1346, 0, 0, 0, 431, 0,
	432, 433, 434, 0, 435, 436, 0, 1373, 437, 438,
	439, 1359, 1360, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 0, 449, 1369, 0, 1294, 450, 0, 451,
	452, 453, 454, 455, 456, 457, 1332, 1333, 1336, 553,
	1375, 458, 459, 460, 0, 461, 462, 463, 464, 465,
	0, 0, 0, 466, 467, 468, 469, 0, 1274, 320,
	322, 1374, 768, 470, 554, 471, 1341, 1342, 0, 1300,
	0, 472, 473, 475, 1376, 1334, 1377, 474, 476, 477,
	1378, 478, 0, 0, 0, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 488, 487, 0, 490, 1370, 489,
	1379, 491, 492, 1380, 0, 493, 494, 495, 496, 497,
	498, 501, 1325, 1324, 499, 500, 502, 503, 0, 504,
	505, 507, 510, 506, 508, 509, 511, 524, 525, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 527, 0, 526, 1381, 528, 529, 530, 531, 532,
	540, 542, 543, 538, 539, 541, 544, 545, 547, 535,
	536, 537, 1382, 546, 533, 1261, 534, 323, 1383, 548,
	549, 550, 551, 1285, 1335, 552, 1349, 555, 556, 0,
	0, 557, 0, 558, 1266, 0, 560, 561, 562, 0,
	0, 563, 564, 776, 1384, 565, 1385, 1364, 566, 567,
	1271, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 0, 578, 579, 778, 580, 581, 582, 779, 583,
	584, 585, 1365, 586, 781, 587, 588, 0, 589, 590,
	591, 0, 592, 593, 594, 595, 596, 597, 598, 599,
	1345, 600, 601, 603, 602, 604, 0, 605, 0, 606,
	607, 608, 0, 0, 0, 0, 0, 609, 610, 612,
	0, 613, 614, 615, 616, 611, 617, 618, 619, 620,
	621, 622, 0, 624, 625, 623, 626, 627, 1386, 628,
	629, 630, 631, 632, 1272, 633, 0, 634, 635, 643,
	644, 645, 636, 637, 639, 646, 638, 647, 648, 649,
	650, 652, 651, 0, 654, 655, 653, 656, 657, 658,
	1328, 659, 784, 660, 640, 641, 661, 662, 1387, 663,
	664, 665, 666, 667, 668, 669, 1343, 0, 670, 0,
	671, 672, 673, 674, 675, 676, 678, 642, 679, 684,
	685, 1390, 680, 681, 682, 683, 1366, 687, 688, 689,
	690, 0, 691, 692, 1258, 686, 677, 0, 693, 694,
	695, 696, 697, 698, 0, 699, 700, 0, 701, 1355,
	1356, 1357, 1358, 0, 713, 0, 702, 704, 705, 706,
	707, 1367, 708, 1368, 1283, 709, 710, 711, 712, 703,
	714, 715, 0, 1265, 716, 717, 718, 720, 722, 723,
	719, 721, 724, 1329, 725, 0, 0, 726, 727, 728,
	794, 1352, 1389, 0, 730, 731, 729, 732, 733, 736,
	734, 735, 797, 737, 738, 739, 0, 0, 0, 0,
	740, 741, 798, 742, 743, 744, 1262, 0, 0, 0,
	0, 0, 0, 1305, 1277, 1278, 1279, 1275, 1276, 1288,
	0, 1257, 0, 0, 0, 0, 0, 0, 1255, 1256,
	324, 325, 327, 326, 328, 329, 330, 331, 1289, 332,
	333, 0, 1287, 0, 0, 0, 1331, 1293, 0, 0,
	334, 0, 335, 336, 337, 1371, 338, 339, 340, 341,
	342, 343, 344, 746, 1344, 0, 345, 1351, 346, 1350,
	0, 1361, 347, 348, 349, 350, 351, 352, 353, 1295,
	1330, 1259, 354, 1391, 1392, 753, 0, 355, 356, 1337,
	0, 1318, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 1372, 382, 383, 384, 1321, 1319, 1320,
	1327, 1323, 1322, 1326, 385, 386, 387, 388, 389, 1354,
	390, 392, 1348, 1347, 1264, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 1339, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 1270, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 1362, 1363, 426,
	427, 1284, 319, 0, 0, 0, 0, 0, 428, 429,
	430, 1346, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 1373, 437, 438, 439, 1359, 1360,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 1369, 0, 1294, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 1332, 1333, 1336, 553, 1375, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 1274, 320, 322, 1374, 768,
	470, 554, 471, 1341, 1342, 0, 1300, 0, 472, 473,
	475, 1376, 1334, 1377, 474, 476, 477, 1378, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 1370, 489, 1379, 491, 492,
	1380, 0, 493, 494, 495, 496, 497, 498, 501, 1325,
	1324, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 1381, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 1382,
	546, 533, 1261, 534, 323, 1383, 548, 549, 550, 551,
	1285, 1335, 552, 1349, 555, 556, 0, 0, 557, 0,
	558, 1266, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 1384, 565, 1385, 1364, 566, 567, 1271, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 1365,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 1345, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 1386, 628, 629, 630, 631,
	632, 1272, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 1328, 659, 784,
	660, 640, 641, 661, 662, 1387, 663, 664, 665, 666,
	667, 668, 669, 1343, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 1390, 680,
	681, 682, 683, 1366, 687, 688, 689, 690, 0, 691,
	692, 1258, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 1355, 1356, 1357, 1358,
	0, 713, 0, 702, 704, 705, 706, 707, 1367, 708,
	1368, 1283, 709, 710, 711, 712, 703, 714, 715, 0,
	1265, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	1329, 725, 0, 0, 726, 727, 728, 794, 1352, 1389,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 0, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 1262, 0, 0, 0, 0, 0, 0,
	1305, 1277, 1278, 1279, 1275, 1276, 1288, 0, 1257, 0,
	0, 0, 0, 0, 0, 1255, 1256, 324, 325, 327,
	326, 328, 329, 330, 331, 1289, 332, 333, 0, 1287,
	0, 0, 0, 1331, 1293, 0, 0, 334, 0, 335,
	336, 337, 1371, 338, 339, 340, 341, 342, 343, 344,
	746, 1344, 0, 345, 1351, 346, 1350, 0, 1361, 347,
	348, 349, 350, 351, 352, 353, 1295, 1330, 1259, 354,
	1391, 1392, 753, 0, 355, 356, 1337, 0, 1318, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	1372, 382, 383, 384, 1321, 1319, 1320, 1327, 1323, 1322,
	1326, 385, 386, 387, 388, 389, 1354, 390, 392, 1348,
	1347, 1264, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 1339, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 1270, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 1362, 1363, 426, 427, 1284, 319,
	0, 0, 0, 0, 0, 428, 429, 430, 1346, 0,
	0, 0, 431, 0, 432, 433, 434, 0, 435, 436,
	0, 1373, 437, 438, 439, 1359, 1360, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 0, 449, 1369, 0,
	1294, 450, 0, 451, 452, 453, 454, 455, 456, 457,
	1332, 1333, 1336, 553, 1375, 458, 459, 460, 0, 461,
	462, 463, 464, 465, 0, 0, 0, 466, 467, 468,
	469, 0, 1274, 320, 322, 1374, 768, 470, 554, 471,
	1341, 1342, 0, 1300, 0, 472, 473, 475, 1376, 1334,
	1377, 474, 476, 477, 1378, 478, 0, 0, 0, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 488, 487,
	0, 490, 1370, 489, 1379, 491, 492, 1380, 0, 493,
	494, 495, 496, 497, 498, 501, 1325, 1324, 499, 500,
	502, 503, 0, 504, 505, 507, 510, 506, 508, 509,
	511, 524, 525, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 527, 0, 526, 1381, 528,
	529, 530, 531, 532, 540, 542, 543, 538, 539, 541,
	544, 545, 547, 535, 536, 537, 1382, 546, 533, 1261,
	534, 4675, 1383, 548, 549, 550, 551, 1285, 1335, 552,
	1349, 555, 556, 0, 0, 557, 0, 558, 0, 0,
	560, 561, 562, 0, 0, 563, 564, 776, 1384, 565,
	1385, 1364, 566, 567, 1271, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 0, 578, 579, 778, 580,
	581, 582, 779, 583, 584, 585, 1365, 586, 781, 587,
	588, 0, 589, 590, 591, 0, 592, 593, 594, 595,
	596, 597, 598, 599, 1345, 600, 601, 603, 602, 604,
	0, 605, 0, 606, 607, 608, 0, 0, 0, 0,
	0, 609, 610, 612, 0, 613, 614, 615, 616, 611,
	617, 618, 619, 620, 621, 622, 0, 624, 625, 623,
	626, 627, 1386, 628, 629, 630, 631, 632, 1272, 633,
	0, 634, 635, 643, 644, 645, 636, 637, 639, 646,
	638, 647, 648, 649, 650, 652, 651, 0, 654, 655,
	653, 656, 657, 658, 1328, 659, 784, 660, 640, 641,
	661, 662, 1387, 663, 664, 665, 666, 667, 668, 669,
	1343, 0, 670, 0, 671, 672, 673, 674, 675, 676,
	678, 642, 679, 684, 685, 1390, 680, 681, 682, 683,
	1366, 687, 688, 689, 690, 0, 691, 692, 1258, 686,
	677, 0, 693, 694, 695, 696, 697, 698, 0, 699,
	700, 0, 701, 1355, 1356, 1357, 1358, 0, 713, 0,
	702, 704, 705, 706, 707, 1367, 708, 1368, 1283, 709,
	710, 711, 712, 703, 714, 715, 0, 1265, 716, 717,
	718, 720, 722, 723, 719, 721, 724, 1329, 725, 0,
	0, 726, 727, 728, 794, 1352, 1389, 0, 730, 731,
	729, 732, 733, 736, 734, 735, 797, 737, 738, 739,
	0, 0, 0, 0, 740, 741, 798, 742, 743, 744,
	1262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1257, 0, 0, 0, 0,
	0, 0, 1255, 1256, 2199, 1305, 1277, 1278, 1279, 1275,
	1276, 1288, 1289, 0, 0, 0, 1287, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 1331, 1293,
	0, 0, 334, 0, 335, 336, 337, 1371, 338, 339,
	340, 341, 342, 343, 344, 746, 1344, 0, 345, 1351,
	346, 1350, 0, 1361, 347, 348, 349, 350, 351, 352,
	353, 1295, 1330, 1259, 354, 1391, 1392, 753, 0, 355,
	356, 1337, 0, 1318, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 1372, 382, 383, 384, 1321,
	1319, 1320, 1327, 1323, 1322, 1326, 385, 386, 387, 388,
	389, 1354, 390, 392, 1348, 1347, 1264, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 1339, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 1270, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 1362,
	1363, 426, 427, 1284, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 1346, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 1373, 437, 438, 439,
	1359, 1360, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 1369, 0, 1294, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 1332, 1333, 1336, 553, 1375,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 1274, 320, 322,
	1374, 768, 470, 554, 471, 1341, 1342, 0, 1300, 0,
	472, 473, 475, 1376, 1334, 1377, 474, 476, 477, 1378,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 1370, 489, 1379,
	491, 492, 1380, 0, 493, 494, 495, 496, 497, 498,
	501, 1325, 1324, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 1381, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 1382, 546, 533, 1261, 534, 323, 1383, 548, 549,
	550, 551, 1285, 1335, 552, 1349, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 1384, 565, 1385, 1364, 566, 567, 1271,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 1365, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 1345,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 1386, 628, 629,
	630, 631, 632, 1272, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 1328,
	659, 784, 660, 640, 641, 661, 662, 1387, 663, 664,
	665, 666, 667, 668, 669, 1343, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	1390, 680, 681, 682, 683, 1366, 687, 688, 689, 690,
	0, 691, 692, 1258, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 1355, 1356,
	1357, 1358, 0, 713, 0, 702, 704, 705, 706, 707,
	1367, 708, 1368, 1283, 709, 710, 711, 712, 703, 714,
	715, 0, 1265, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 1329, 725, 0, 0, 726, 727, 728, 794,
	1352, 1389, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 0, 0, 0, 0, 740,
	741, 798, 742, 743, 744, 1262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1257, 0, 0, 0, 0, 0, 0, 1255, 1256, 2199,
	1305, 1277, 1278, 1279, 1275, 1276, 1288, 1289, 0, 0,
	0, 1287, 0, 0, 0, 0, 0, 324, 325, 327,
	326, 328, 329, 330, 331, 0, 332, 333, 0, 0,
	0, 0, 0, 1331, 1293, 0, 0, 334, 0, 335,
	336, 337, 1371, 338, 339, 340, 341, 342, 343, 344,
	746, 1344, 0, 345, 1351, 346, 1350, 0, 1361, 347,
	348, 349, 350, 351, 352, 353, 1295, 1330, 1259, 354,
	1391, 1392, 753, 0, 355, 356, 1337, 0, 1318, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	1372, 382, 383, 384, 1321, 1319, 1320, 1327, 1323, 1322,
	1326, 385, 386, 387, 388, 389, 1354, 390, 392, 1348,
	1347, 1264, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 1339, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 1270, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 1362, 1363, 426, 427, 1284, 319,
	0, 0, 0, 0, 0, 428, 429, 430, 1346, 0,
	0, 0, 431, 0, 432, 433, 434, 0, 435, 436,
	0, 1373, 437, 438, 439, 1359, 1360, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 0, 449, 1369, 0,
	1294, 450, 0, 451, 452, 453, 454, 455, 456, 457,
	1332, 1333, 1336, 553, 1375, 458, 459, 460, 0, 461,
	462, 463, 464, 465, 0, 0, 0, 466, 467, 468,
	469, 0, 1274, 320, 322, 1374, 768, 470, 554, 471,
	1341, 1342, 0, 1300, 0, 472, 473, 475, 1376, 1334,
	1377, 474, 476, 477, 1378, 478, 0, 0, 0, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 488, 487,
	0, 490, 1370, 489, 1379, 491, 492, 1380, 0, 493,
	494, 495, 496, 497, 498, 501, 1325, 1324, 499, 500,
	502, 503, 0, 504, 505, 507, 510, 506, 508, 509,
	511, 524, 525, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 527, 0, 526, 1381, 528,
	529, 530, 531, 532, 540, 542, 543, 538, 539, 541,
	544, 545, 547, 535, 536, 537, 1382, 546, 533, 1261,
	534, 323, 1383, 548, 549, 550, 551, 1285, 1335, 552,
	1349, 555, 556, 0, 0, 557, 0, 558, 0, 0,
	560, 561, 562, 0, 0, 563, 564, 776, 1384, 565,
	1385, 1364, 566, 567, 1271, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 0, 578, 579, 778, 580,
	581, 582, 779, 583, 584, 585, 1365, 586, 781, 587,
	588, 0, 589, 590, 591, 0, 592, 593, 594, 595,
	596, 597, 598, 599, 1345, 600, 601, 603, 602, 604,
	0, 605, 0, 606, 607, 608, 0, 0, 0, 0,
	0, 609, 610, 612, 0, 613, 614, 615, 616, 611,
	617, 618, 619, 620, 621, 622, 0, 624, 625, 623,
	626, 627, 1386, 628, 629, 630, 631, 632, 1272, 633,
	0, 634, 635, 643, 644, 645, 636, 637, 639, 646,
	638, 647, 648, 649, 650, 652, 651, 0, 654, 655,
	653, 656, 657, 658, 1328, 659, 784, 660, 640, 641,
	661, 662, 1387, 663, 664, 665, 666, 667, 668, 669,
	1343, 0, 670, 0, 671, 672, 673, 674, 675, 676,
	678, 642, 679, 684, 685, 1390, 680, 681, 682, 683,
	1366, 687, 688, 689, 690, 0, 691, 692, 1258, 686,
	677, 0, 693, 694, 695, 696, 697, 698, 0, 699,
	700, 0, 701, 1355, 1356, 1357, 1358, 0, 713, 0,
	702, 704, 705, 706, 707, 1367, 708, 1368, 1283, 709,
	710, 711, 712, 703, 714, 715, 0, 1265, 716, 717,
	718, 720, 722, 723, 719, 721, 724, 1329, 725, 0,
	0, 726, 727, 728, 794, 1352, 1389, 4307, 730, 731,
	729, 732, 733, 736, 734, 735, 797, 737, 738, 739,
	0, 0, 0, 0, 740, 741, 798, 742, 743, 744,
	1262, 0, 0, 0, 0, 0, 0, 1305, 1277, 1278,
	1279, 1275, 1276, 1288, 0, 1257, 0, 0, 0, 0,
	0, 0, 1255, 1256, 324, 325, 327, 326, 328, 329,
	330, 331, 1289, 332, 333, 0, 1287, 0, 0, 0,
	1331, 1293, 0, 0, 334, 0, 335, 336, 337, 1371,
	338, 339, 340, 341, 342, 343, 344, 746, 1344, 0,
	345, 1351, 346, 1350, 0, 1361, 347, 348, 349, 350,
	351, 352, 353, 1295, 1330, 1259, 354, 1391, 1392, 753,
	0, 355, 356, 1337, 0, 1318, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 1372, 382, 383,
	384, 1321, 1319, 1320, 1327, 1323, 1322, 1326, 385, 386,
	387, 388, 389, 1354, 390, 392, 1348, 1347, 1264, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 1339, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 1270, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 1362, 1363, 426, 427, 1284, 319, 0, 0, 0,
	0, 0, 428, 429, 430, 1346, 0, 0, 0, 431,
	0, 432, 433, 434, 0, 435, 436, 3087, 1373, 437,
	438, 439, 1359, 1360, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 0, 449, 1369, 0, 1294, 450, 0,
	451, 452, 453, 454, 455, 456, 457, 1332, 1333, 1336,
	553, 1375, 458, 459, 460, 0, 461, 462, 463, 464,
	465, 0, 0, 0, 466, 467, 468, 469, 0, 1274,
	320, 322, 1374, 768, 470, 554, 471, 1341, 1342, 0,
	1300, 0, 472, 473, 475, 1376, 1334, 1377, 474, 476,
	477, 1378, 478, 0, 0, 0, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 488, 487, 0, 490, 1370,
	489, 1379, 491, 492, 1380, 0, 493, 494, 495, 496,
	497, 498, 501, 1325, 1324, 499, 500, 502, 503, 0,
	504, 505, 507, 510, 506, 508, 509, 511, 524, 525,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 527, 0, 526, 1381, 528, 529, 530, 531,
	532, 540, 542, 543, 538, 539, 541, 544, 545, 547,
	535, 536, 537, 1382, 546, 533, 1261, 534, 323, 1383,
	548, 549, 550, 551, 1285, 1335, 552, 1349, 555, 556,
	0, 0, 557, 0, 558, 0, 0, 560, 561, 562,
	0, 0, 563, 564, 776, 1384, 565, 1385, 1364, 566,
	567, 1271, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 578, 579, 778, 580, 581, 582, 779,
	583, 584, 585, 1365, 586, 781, 587, 588, 0, 589,
	590, 591, 0, 592, 593, 594, 595, 596, 597, 598,
	599, 1345, 600, 601, 603, 602, 604, 0, 605, 0,
	606, 607, 608, 0, 0, 0, 0, 0, 609, 610,
	612, 0, 613, 614, 615, 616, 611, 617, 618, 619,
	620, 621, 622, 0, 624, 625, 623, 626, 627, 1386,
	628, 629, 630, 631, 632, 1272, 633, 0, 634, 635,
	643, 644, 645, 636, 637, 639, 646, 638, 647, 648,
	649, 650, 652, 651, 0, 654, 655, 653, 656, 657,
	658, 1328, 659, 784, 660, 640, 641, 661, 662, 1387,
	663, 664, 665, 666, 667, 668, 669, 1343, 0, 670,
	0, 671, 672, 673, 674, 675, 676, 678, 642, 679,
	684, 685, 1390, 680, 681, 682, 683, 1366, 687, 688,
	689, 690, 0, 691, 692, 1258, 686, 677, 0, 693,
	694, 695, 696, 697, 698, 0, 699, 700, 0, 701,
	1355, 1356, 1357, 1358, 0, 713, 0, 702, 704, 705,
	706, 707, 1367, 708, 1368, 1283, 709, 710, 711, 712,
	703, 714, 715, 0, 1265, 716, 717, 718, 720, 722,
	723, 719, 721, 724, 1329, 725, 0, 0, 726, 727,
	728, 794, 1352, 1389, 0, 730, 731, 729, 732, 733,
	736, 734, 735, 797, 737, 738, 739, 0, 0, 0,
	0, 740, 741, 798, 742, 743, 744, 1262, 0, 0,
	0, 0, 0, 0, 1305, 1277, 1278, 1279, 1275, 1276,
	1288, 0, 1257, 0, 0, 0, 0, 0, 0, 1255,
	1256, 324, 325, 327, 326, 328, 329, 330, 331, 1289,
	332, 333, 0, 1287, 0, 0, 0, 1331, 1293, 0,
	0, 334, 0, 335, 336, 337, 1371, 338, 339, 340,
	341, 342, 343, 344, 746, 1344, 0, 345, 1351, 346,
	1350, 0, 1361, 347, 348, 349, 350, 351, 352, 353,
	1295, 1330, 1259, 354, 1391, 1392, 753, 0, 355, 356,
	1337, 0, 1318, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 1372, 382, 383, 384, 1321, 1319,
	1320, 1327, 1323, 1322, 1326, 385, 386, 387, 388, 389,
	1354, 390, 392, 1348, 1347, 1264, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 1339, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 1270, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 1362, 1363,
	426, 427, 1284, 319, 0, 0, 0, 0, 0, 428,
	429, 430, 1346, 0, 0, 0, 431, 0, 432, 433,
	434, 0, 435, 436, 0, 1373, 437, 438, 439, 1359,
	1360, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	0, 449, 1369, 0, 1294, 450, 0, 451, 452, 453,
	454, 455, 456, 457, 1332, 1333, 1336, 553, 1375, 458,
	459, 460, 0, 461, 462, 463, 464, 465, 0, 0,
	0, 466, 467, 468, 469, 0, 1274, 320, 322, 1374,
	768, 470, 554, 471, 1341, 1342, 0, 1300, 0, 472,
	473, 475, 1376, 1334, 1377, 474, 476, 477, 1378, 478,
	0, 0, 0, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 488, 487, 0, 490, 1370, 489, 1379, 491,
	492, 1380, 0, 493, 494, 495, 496, 497, 498, 501,
	1325, 1324, 499, 500, 502, 503, 0, 504, 505, 507,
	510, 506, 508, 509, 511, 524, 525, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 527,
	0, 526, 1381, 528, 529, 530, 531, 532, 540, 542,
	543, 538, 539, 541, 544, 545, 547, 535, 536, 537,
	1382, 546, 533, 1261, 534, 323, 1383, 548, 549, 550,
	551, 1285, 1335, 552, 1349, 555, 556, 0, 0, 557,
	0, 558, 0, 0, 560, 561, 562, 0, 0, 563,
	564, 776, 1384, 565, 1385, 1364, 566, 567, 1271, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	578, 579, 778, 580, 581, 582, 779, 583, 584, 585,
	1365, 586, 781, 587, 588, 0, 589, 590, 591, 0,
	592, 593, 594, 595, 596, 597, 598, 599, 1345, 600,
	601, 603, 602, 604, 0, 605, 0, 606, 607, 608,
	0, 0, 0, 0, 0, 609, 610, 612, 0, 613,
	614, 615, 616, 611, 617, 618, 619, 620, 621, 622,
	0, 624, 625, 623, 626, 627, 1386, 628, 629, 630,
	631, 632, 1272, 633, 0, 634, 635, 643, 644, 645,
	636, 637, 639, 646, 638, 647, 648, 649, 650, 652,
	651, 0, 654, 655, 653, 656, 657, 658, 1328, 659,
	784, 660, 640, 641, 661, 662, 1387, 663, 664, 665,
	666, 667, 668, 669, 1343, 0, 670, 0, 671, 672,
	673, 674, 675, 676, 678, 642, 679, 684, 685, 1390,
	680, 681, 682, 683, 1366, 687, 688, 689, 690, 0,
	691, 692, 1258, 686, 677, 0, 693, 694, 695, 696,
	697, 698, 0, 699, 700, 0, 701, 1355, 1356, 1357,
	1358, 0, 713, 0, 702, 704, 705, 706, 707, 1367,
	708, 1368, 1283, 709, 710, 711, 712, 703, 714, 715,
	0, 1265, 716, 717, 718, 720, 722, 723, 719, 721,
	724, 1329, 725, 0, 0, 726, 727, 728, 794, 1352,
	1389, 0, 730, 731, 729, 732, 733, 736, 734, 735,
	797, 737, 738, 739, 0, 0, 0, 0, 740, 741,
	798, 742, 743, 744, 1262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1257,
	0, 0, 0, 0, 0, 0, 1255, 1256, 0, 0,
	0, 0, 0, 0, 0, 0, 1289, 2123, 0, 3092,
	1287, 1305, 1277, 1278, 1279, 1275, 1276, 1288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 1331, 1293, 0, 0, 334, 0,
	335, 336, 337, 1371, 338, 339, 340, 341, 342, 343,
	344, 746, 1344, 0, 345, 1351, 346, 1350, 0, 1361,
	347, 348, 349, 350, 351, 352, 353, 1295, 1330, 1259,
	354, 1391, 1392, 753, 0, 355, 356, 1337, 0, 1318,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 1372, 382, 383, 384, 1321, 1319, 1320, 1327, 1323,
	1322, 1326, 385, 386, 387, 388, 389, 1354, 390, 392,
	1348, 1347, 1264, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 1339,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 1270, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 1362, 1363, 426, 427, 1284,
	319, 0, 0, 0, 0, 0, 428, 429, 430, 1346,
	0, 0, 0, 431, 0, 432, 433, 434, 0, 435,
	436, 0, 1373, 437, 438, 439, 1359, 1360, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 0, 449, 1369,
	0, 1294, 450, 0, 451, 452, 453, 454, 455, 456,
	457, 1332, 1333, 1336, 553, 1375, 458, 459, 460, 0,
	461, 462, 463, 464, 465, 0, 0, 0, 466, 467,
	468, 469, 0, 1274, 320, 322, 1374, 768, 470, 554,
	471, 1341, 1342, 0, 1300, 0, 472, 473, 475, 1376,
	1334, 1377, 474, 476, 477, 1378, 478, 0, 0, 0,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 488,
	487, 0, 490, 1370, 489, 1379, 491, 492, 1380, 0,
	493, 494, 495, 496, 497, 498, 501, 1325, 1324, 499,
	500, 502, 503, 0, 504, 505, 507, 510, 506, 508,
	509, 511, 524, 525, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 527, 0, 526, 1381,
	528, 529, 530, 531, 532, 540, 542, 543, 538, 539,
	541, 544, 545, 547, 535, 536, 537, 1382, 546, 533,
	1261, 534, 323, 1383, 548, 549, 550, 551, 1285, 1335,
	552, 1349, 555, 556, 0, 0, 557, 0, 558, 0,
	0, 560, 561, 562, 0, 0, 563, 564, 776, 1384,
	565, 1385, 1364, 566, 567, 1271, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 578, 579, 778,
	580, 581, 582, 779, 583, 584, 585, 1365, 586, 781,
	587, 588, 0, 589, 590, 591, 0, 592, 593, 594,
	595, 596, 597, 598, 599, 1345, 600, 601, 603, 602,
	604, 0, 605, 0, 606, 607, 608, 0, 0, 0,
	0, 0, 609, 610, 612, 0, 613, 614, 615, 616,
	611, 617, 618, 619, 620, 621, 622, 0, 624, 625,
	623, 626, 627, 1386, 628, 629, 630, 631, 632, 1272,
	633, 0, 634, 635, 643, 644, 645, 636, 637, 639,
	646, 638, 647, 648, 649, 650, 652, 651, 0, 654,
	655, 653, 656, 657, 658, 1328, 659, 784, 660, 640,
	641, 661, 662, 1387, 663, 664, 665, 666, 667, 668,
	669, 1343, 0, 670, 0, 671, 672, 673, 674, 675,
	676, 678, 642, 679, 684, 685, 1390, 680, 681, 682,
	683, 1366, 687, 688, 689, 690, 0, 691, 692, 1258,
	686, 677, 0, 693, 694, 695, 696, 697, 698, 0,
	699, 700, 0, 701, 1355, 1356, 1357, 1358, 0, 713,
	0, 702, 704, 705, 706, 707, 1367, 708, 1368, 1283,
	709, 710, 711, 712, 703, 714, 715, 0, 1265, 716,
	717, 718, 720, 722, 723, 719, 721, 724, 1329, 725,
	0, 0, 726, 727, 728, 794, 1352, 1389, 0, 730,
	731, 729, 732, 733, 736, 734, 735, 797, 737, 738,
	739, 0, 0, 0, 0, 740, 741, 798, 742, 743,
	744, 1262, 0, 0, 0, 0, 3090, 0, 1305, 1277,
	1278, 1279, 1275, 1276, 1288, 0, 1257, 0, 0, 0,
	0, 0, 0, 1255, 1256, 324, 325, 327, 326, 328,
	329, 330, 331, 1289, 332, 333, 0, 1287, 0, 0,
	0, 1331, 1293, 0, 0, 334, 0, 335, 336, 337,
	1371, 338, 339, 340, 341, 342, 343, 344, 746, 1344,
	0, 345, 1351, 346, 1350, 0, 1361, 347, 348, 349,
	350, 351, 352, 353, 1295, 1330, 1259, 354, 1391, 1392,
	753, 0, 355, 356, 1337, 0, 1318, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 1372, 382,
	383, 384, 1321, 1319, 1320, 1327, 1323, 1322, 1326, 385,
	386, 387, 388, 389, 1354, 390, 392, 1348, 1347, 1264,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 1339, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 1270,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 1362, 1363, 426, 427, 1284, 319, 0, 0,
	0, 0, 0, 428, 429, 430, 1346, 0, 0, 0,
	431, 0, 432, 433, 434, 0, 435, 436, 0, 1373,
	437, 438, 439, 1359, 1360, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 0, 449, 1369, 0, 1294, 450,
	0, 451, 452, 453, 454, 455, 456, 457, 1332, 1333,
	1336, 553, 1375, 458, 459, 460, 0, 461, 462, 463,
	464, 465, 0, 0, 0, 466, 467, 468, 469, 0,
	1274, 320, 322, 1374, 768, 470, 554, 471, 1341, 1342,
	0, 1300, 0, 472, 473, 475, 1376, 1334, 1377, 474,
	476, 477, 1378, 478, 0, 0, 0, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 488, 487, 0, 490,
	1370, 489, 1379, 491, 492, 1380, 0, 493, 494, 495,
	496, 497, 498, 501, 1325, 1324, 499, 500, 502, 503,
	0, 504, 505, 507, 510, 506, 508, 509, 511, 524,
	525, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 527, 0, 526, 1381, 528, 529, 530,
	531, 532, 540, 542, 543, 538, 539, 541, 544, 545,
	547, 535, 536, 537, 1382, 546, 533, 1261, 534, 323,
	1383, 548, 549, 550, 551, 1285, 1335, 552, 1349, 555,
	556, 0, 0, 557, 0, 558, 0, 0, 560, 561,
	562, 0, 0, 563, 564, 776, 1384, 565, 1385, 1364,
	566, 567, 1271, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 0, 578, 579, 778, 580, 581, 582,
	779, 583, 584, 585, 1365, 586, 781, 587, 588, 0,
	589, 590, 591, 0, 592, 593, 594, 595, 596, 597,
	598, 599, 1345, 600, 601, 603, 602, 604, 0, 605,
	0, 606, 607, 608, 0, 0, 0, 0, 0, 609,
	610, 612, 0, 613, 614, 615, 616, 611, 617, 618,
	619, 620, 621, 622, 0, 624, 625, 623, 626, 627,
	1386, 628, 629, 630, 631, 632, 1272, 633, 0, 634,
	635, 643, 644, 645, 636, 637, 639, 646, 638, 647,
	648, 649, 650, 652, 651, 0, 654, 655, 653, 656,
	657, 658, 1328, 659, 784, 660, 640, 641, 661, 662,
	1387, 663, 664, 665, 666, 667, 668, 669, 1343, 0,
	670, 0, 671, 672, 673, 674, 675, 676, 678, 642,
	679, 684, 685, 1390, 680, 681, 682, 683, 1366, 687,
	688, 689, 690, 0, 691, 692, 1258, 686, 677, 0,
	693, 694, 695, 696, 697, 698, 0, 699, 700, 0,
	701, 1355, 1356, 1357, 1358, 0, 713, 0, 702, 704,
	705, 706, 707, 1367, 708, 1368, 1283, 709, 710, 711,
	712, 703, 714, 715, 0, 1265, 716, 717, 718, 720,
	722, 723, 719, 721, 724, 1329, 725, 0, 0, 726,
	727, 728, 794, 1352, 1389, 0, 730, 731, 729, 732,
	733, 736, 734, 735, 797, 737, 738, 739, 0, 0,
	0, 0, 740, 741, 798, 742, 743, 744, 1262, 0,
	0, 0, 0, 3078, 0, 1305, 1277, 1278, 1279, 1275,
	1276, 1288, 0, 1257, 0, 0, 0, 0, 0, 0,
	1255, 1256, 324, 325, 327, 326, 328, 329, 330, 331,
	1289, 332, 333, 0, 1287, 0, 0, 0, 1331, 1293,
	0, 0, 334, 0, 335, 336, 337, 1371, 338, 339,
	340, 341, 342, 343, 344, 746, 1344, 0, 345, 1351,
	346, 1350, 0, 1361, 347, 348, 349, 350, 351, 352,
	353, 1295, 1330, 1259, 354, 1391, 1392, 753, 0, 355,
	356, 1337, 0, 1318, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 1372, 382, 383, 384, 1321,
	1319, 1320, 1327, 1323, 1322, 1326, 385, 386, 387, 388,
	389, 1354, 390, 392, 1348, 1347, 1264, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 1339, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 1270, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 1362,
	1363, 426, 427, 1284, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 1346, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 1373, 437, 438, 439,
	1359, 1360, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 1369, 0, 1294, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 1332, 1333, 1336, 553, 1375,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 1274, 320, 322,
	1374, 768, 470, 554, 471, 1341, 1342, 0, 1300, 0,
	472, 473, 475, 1376, 1334, 1377, 474, 476, 477, 1378,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 1370, 489, 1379,
	491, 492, 1380, 0, 493, 494, 495, 496, 497, 498,
	501, 1325, 1324, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 1381, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 1382, 546, 533, 1261, 534, 323, 1383, 548, 549,
	550, 551, 1285, 1335, 552, 1349, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 1384, 565, 1385, 1364, 566, 567, 1271,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 1365, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 1345,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 1386, 628, 629,
	630, 631, 632, 1272, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 1328,
	659, 784, 660, 640, 641, 661, 662, 1387, 663, 664,
	665, 666, 667, 668, 669, 1343, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	1390, 680, 681, 682, 683, 1366, 687, 688, 689, 690,
	0, 691, 692, 1258, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 1355, 1356,
	1357, 1358, 0, 713, 0, 702, 704, 705, 706, 707,
	1367, 708, 1368, 1283, 709, 710, 711, 712, 703, 714,
	715, 0, 1265, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 1329, 725, 0, 0, 726, 727, 728, 794,
	1352, 1389, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 0, 0, 0, 0, 740,
	741, 798, 742, 743, 744, 1262, 0, 0, 0, 0,
	3067, 0, 1305, 1277, 1278, 1279, 1275, 1276, 1288, 0,
	1257, 0, 0, 0, 0, 0, 0, 1255, 1256, 324,
	325, 327, 326, 328, 329, 330, 331, 1289, 332, 333,
	0, 1287, 0, 0, 0, 1331, 1293, 0, 0, 334,
	0, 335, 336, 337, 1371, 338, 339, 340, 341, 342,
	343, 344, 746, 1344, 0, 345, 1351, 346, 1350, 0,
	1361, 347, 348, 349, 350, 351, 352, 353, 1295, 1330,
	1259, 354, 1391, 1392, 753, 0, 355, 356, 1337, 0,
	1318, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 1372, 382, 383, 384, 1321, 1319, 1320, 1327,
	1323, 1322, 1326, 385, 386, 387, 388, 389, 1354, 390,
	392, 1348, 1347, 1264, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	1339, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 1270, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 1362, 1363, 426, 427,
	1284, 319, 0, 0, 0, 0, 0, 428, 429, 430,
	1346, 0, 0, 0, 431, 0, 432, 433, 434, 0,
	435, 436, 0, 1373, 437, 438, 439, 1359, 1360, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 0, 449,
	1369, 0, 1294, 450, 0, 451, 452, 453, 454, 455,
	456, 457, 1332, 1333, 1336, 553, 1375, 458, 459, 460,
	0, 461, 462, 463, 464, 465, 0, 0, 0, 466,
	467, 468, 469, 0, 1274, 320, 322, 1374, 768, 470,
	554, 471, 1341, 1342, 0, 1300, 0, 472, 473, 475,
	1376, 1334, 1377, 474, 476, 477, 1378, 478, 0, 0,
	0, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	488, 487, 0, 490, 1370, 489, 1379, 491, 492, 1380,
	0, 493, 494, 495, 496, 497, 498, 501, 1325, 1324,
	499, 500, 502, 503, 0, 504, 505, 507, 510, 506,
	508, 509, 511, 524, 525, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 527, 0, 526,
	1381, 528, 529, 530, 531, 532, 540, 542, 543, 538,
	539, 541, 544, 545, 547, 535, 536, 537, 1382, 546,
	533, 1261, 534, 323, 1383, 548, 549, 550, 551, 1285,
	1335, 552, 1349, 555, 556, 0, 0, 557, 0, 558,
	0, 0, 560, 561, 562, 0, 0, 563, 564, 776,
	1384, 565, 1385, 1364, 566, 567, 1271, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 0, 578, 579,
	778, 580, 581, 582, 779, 583, 584, 585, 1365, 586,
	781, 587, 588, 0, 589, 590, 591, 0, 592, 593,
	594, 595, 596, 597, 598, 599, 1345, 600, 601, 603,
	602, 604, 0, 605, 0, 606, 607, 608, 0, 0,
	0, 0, 0, 609, 610, 612, 0, 613, 614, 615,
	616, 611, 617, 618, 619, 620, 621, 622, 0, 624,
	625, 623, 626, 627, 1386, 628, 629, 630, 631, 632,
	1272, 633, 0, 634, 635, 643, 644, 645, 636, 637,
	639, 646, 638, 647, 648, 649, 650, 652, 651, 0,
	654, 655, 653, 656, 657, 658, 1328, 659, 784, 660,
	640, 641, 661, 662, 1387, 663, 664, 665, 666, 667,
	668, 669, 1343, 0, 670, 0, 671, 672, 673, 674,
	675, 676, 678, 642, 679, 684, 685, 1390, 680, 681,
	682, 683, 1366, 687, 688, 689, 690, 0, 691, 692,
	1258, 686, 677, 0, 693, 694, 695, 696, 697, 698,
	0, 699, 700, 0, 701, 1355, 1356, 1357, 1358, 0,
	713, 0, 702, 704, 705, 706, 707, 1367, 708, 1368,
	1283, 709, 710, 711, 712, 703, 714, 715, 0, 1265,
	716, 717, 718, 720, 722, 723, 719, 721, 724, 1329,
	725, 0, 0, 726, 727, 728, 794, 1352, 1389, 0,
	730, 731, 729, 732, 733, 736, 734, 735, 797, 737,
	738, 739, 0, 0, 0, 0, 740, 741, 798, 742,
	743, 744, 1262, 0, 0, 0, 0, 3065, 0, 3056,
	3063, 1278, 1279, 1275, 1276, 1288, 0, 1257, 0, 0,
	0, 0, 0, 0, 1255, 1256, 324, 325, 327, 326,
	328, 329, 330, 331, 1289, 332, 333, 0, 1287, 0,
	0, 0, 1331, 1293, 0, 0, 334, 0, 335, 336,
	337, 1371, 338, 339, 340, 341, 342, 343, 344, 746,
	1344, 0, 345, 1351, 346, 1350, 0, 1361, 347, 348,
	349, 350, 351, 352, 353, 1295, 1330, 1259, 354, 1391,
	1392, 753, 0, 355, 356, 1337, 0, 1318, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 1372,
	382, 383, 384, 1321, 1319, 1320, 1327, 1323, 1322, 1326,
	385, 386, 387, 388, 389, 1354, 3059, 392, 1348, 1347,
	1264, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 1339, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	1270, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 1362, 1363, 426, 427, 1284, 319, 0,
	0, 0, 0, 0, 428, 429, 430, 1346, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	1373, 437, 438, 439, 1359, 1360, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 0, 449, 1369, 0, 1294,
	450, 0, 451, 452, 453, 454, 455, 3060, 457, 1332,
	1333, 1336, 553, 1375, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 1274, 320, 322, 1374, 768, 470, 554, 471, 1341,
	1342, 0, 1300, 0, 472, 473, 475, 1376, 1334, 1377,
	474, 476, 477, 1378, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 1370, 489, 1379, 491, 492, 1380, 0, 493, 494,
	495, 496, 497, 498, 501, 1325, 1324, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 3061, 511,
	3058, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 1381, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 1382, 546, 533, 1261, 534,
	323, 1383, 548, 549, 550, 551, 1285, 1335, 552, 1349,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 776, 1384, 565, 1385,
	1364, 566, 567, 1271, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 778, 580, 581,
	582, 779, 583, 584, 585, 1365, 586, 781, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 1345, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 1386, 628, 629, 630, 631, 632, 1272, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 3062, 652, 651, 0, 654, 655, 653,
	656, 657, 658, 1328, 659, 784, 660, 640, 641, 661,
	662, 1387, 663, 664, 665, 666, 667, 668, 669, 1343,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 1390, 680, 681, 682, 683, 1366,
	687, 688, 689, 690, 0, 691, 692, 1258, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 1355, 1356, 1357, 1358, 0, 713, 0, 702,
	704, 705, 706, 707, 1367, 708, 1368, 1283, 709, 710,
	711, 712, 703, 714, 715, 0, 1265, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 1329, 725, 0, 0,
	726, 727, 728, 794, 1352, 1389, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 797, 737, 738, 739, 0,
	0, 0, 0, 740, 741, 798, 742, 3057, 744, 1262,
	0, 0, 0, 0, 3053, 0, 3056, 3063, 1278, 1279,
	1275, 1276, 1288, 0, 1257, 0, 0, 0, 0, 0,
	0, 1255, 1256, 324, 325, 327, 326, 328, 329, 330,
	331, 1289, 332, 333, 0, 1287, 0, 0, 0, 1331,
	1293, 0, 0, 334, 0, 335, 336, 337, 1371, 338,
	339, 340, 341, 342, 343, 344, 746, 1344, 0, 345,
	1351, 346, 1350, 0, 1361, 347, 348, 349, 350, 351,
	352, 353, 1295, 1330, 1259, 354, 1391, 1392, 753, 0,
	355, 356, 1337, 0, 1318, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 1372, 382, 383, 384,
	1321, 1319, 1320, 1327, 1323, 1322, 1326, 385, 386, 387,
	388, 389, 1354, 3059, 392, 1348, 1347, 1264, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 1339, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 1270, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	1362, 1363, 426, 427, 1284, 319, 0, 0, 0, 0,
	0, 428, 429, 430, 1346, 0, 0, 0, 431, 0,
	432, 433, 434, 0, 435, 436, 0, 1373, 437, 438,
	439, 1359, 1360, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 0, 449, 1369, 0, 1294, 450, 0, 451,
	452, 453, 454, 455, 3060, 457, 1332, 1333, 1336, 553,
	1375, 458, 459, 460, 0, 461, 462, 463, 464, 465,
	0, 0, 0, 466, 467, 468, 469, 0, 1274, 320,
	322, 1374, 768, 470, 554, 471, 1341, 1342, 0, 1300,
	0, 472, 473, 475, 1376, 1334, 1377, 474, 476, 477,
	1378, 478, 0, 0, 0, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 488, 487, 0, 490, 1370, 489,
	1379, 491, 492, 1380, 0, 493, 494, 495, 496, 497,
	498, 501, 1325, 1324, 499, 500, 502, 503, 0, 504,
	505, 507, 510, 506, 508, 3061, 511, 3058, 525, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 527, 0, 526, 1381, 528, 529, 530, 531, 532,
	540, 542, 543, 538, 539, 541, 544, 545, 547, 535,
	536, 537, 1382, 546, 533, 1261, 534, 323, 1383, 548,
	549, 550, 551, 1285, 1335, 552, 1349, 555, 556, 0,
	0, 557, 0, 558, 0, 0, 560, 561, 562, 0,
	0, 563, 564, 776, 1384, 565, 1385, 1364, 566, 567,
	1271, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 0, 578, 579, 778, 580, 581, 582, 779, 583,
	584, 585, 1365, 586, 781, 587, 588, 0, 589, 590,
	591, 0, 592, 593, 594, 595, 596, 597, 598, 599,
	1345, 600, 601, 603, 602, 604, 0, 605, 0, 606,
	607, 608, 0, 0, 0, 0, 0, 609, 610, 612,
	0, 613, 614, 615, 616, 611, 617, 618, 619, 620,
	621, 622, 0, 624, 625, 623, 626, 627, 1386, 628,
	629, 630, 631, 632, 1272, 633, 0, 634, 635, 643,
	644, 645, 636, 637, 639, 646, 638, 647, 648, 649,
	3062, 652, 651, 0, 654, 655, 653, 656, 657, 658,
	1328, 659, 784, 660, 640, 641, 661, 662, 1387, 663,
	664, 665, 666, 667, 668, 669, 1343, 0, 670, 0,
	671, 672, 673, 674, 675, 676, 678, 642, 679, 684,
	685, 1390, 680, 681, 682, 683, 1366, 687, 688, 689,
	690, 0, 691, 692, 1258, 686, 677, 0, 693, 694,
	695, 696, 697, 698, 0, 699, 700, 0, 701, 1355,
	1356, 1357, 1358, 0, 713, 0, 702, 704, 705, 706,
	707, 1367, 708, 1368, 1283, 709, 710, 711, 712, 703,
	714, 715, 0, 1265, 716, 717, 718, 720, 722, 723,
	719, 721, 724, 1329, 725, 0, 0, 726, 727, 728,
	794, 1352, 1389, 0, 730, 731, 729, 732, 733, 736,
	734, 735, 797, 737, 738, 739, 0, 0, 0, 0,
	740, 741, 798, 742, 3057, 744, 1262, 0, 0, 0,
	0, 0, 0, 1305, 1277, 1278, 1279, 1275, 1276, 1288,
	0, 1257, 0, 0, 0, 0, 0, 0, 1255, 1256,
	324, 325, 327, 326, 328, 329, 330, 331, 1289, 332,
	333, 0, 1287, 0, 0, 0, 1331, 1293, 0, 0,
	334, 0, 335, 336, 337, 1371, 338, 339, 340, 341,
	342, 343, 344, 746, 1344, 0, 345, 1351, 346, 1350,
	0, 1361, 347, 348, 349, 350, 351, 352, 353, 1295,
	1330, 1259, 354, 1391, 1392, 753, 0, 355, 356, 1337,
	0, 1318, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 1372, 382, 383, 384, 1321, 1319, 1320,
	1327, 1323, 1322, 1326, 385, 386, 387, 388, 389, 1354,
	390, 392, 1348, 1347, 1264, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 1339, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 1270, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 1362, 1363, 426,
	427, 1284, 319, 0, 0, 0, 0, 0, 428, 429,
	430, 1346, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 1373, 437, 438, 439, 1359, 1360,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 1369, 0, 1294, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 1332, 1333, 1336, 553, 1375, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 1274, 320, 322, 1374, 768,
	470, 554, 471, 1341, 1342, 0, 1300, 0, 472, 473,
	475, 1376, 1334, 1377, 474, 476, 477, 1378, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 1370, 489, 1379, 491, 492,
	1380, 0, 493, 494, 495, 496, 497, 498, 501, 1325,
	1324, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 1381, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 1382,
	546, 533, 1261, 534, 323, 1383, 548, 549, 550, 551,
	1285, 1335, 552, 1349, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 1384, 565, 1385, 1364, 566, 567, 1271, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 1365,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 1345, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 1386, 628, 629, 630, 631,
	632, 1272, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 1328, 659, 784,
	660, 640, 641, 661, 662, 1387, 663, 664, 665, 666,
	667, 668, 669, 1343, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 1390, 680,
	681, 682, 683, 1366, 687, 688, 689, 690, 0, 691,
	692, 1258, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 1355, 1356, 1357, 1358,
	0, 713, 0, 702, 704, 705, 706, 707, 1367, 708,
	1368, 1283, 709, 710, 711, 712, 703, 714, 715, 0,
	1265, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	1329, 725, 0, 0, 726, 727, 728, 794, 1352, 1389,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 0, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 1262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1257, 0,
	0, 0, 0, 0, 0, 1255, 1256, 0, 0, 0,
	0, 0, 0, 2131, 0, 1289, 0, 0, 0, 1287,
	1305, 1277, 1278, 1279, 1275, 1276, 1288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 327,
	326, 328, 329, 330, 331, 2803, 332, 333, 0, 0,
	0, 0, 0, 1331, 1293, 0, 0, 334, 0, 335,
	336, 337, 1371, 338, 339, 340, 341, 342, 343, 344,
	746, 1344, 0, 345, 1351, 346, 1350, 0, 1361, 347,
	348, 349, 350, 351, 352, 353, 1295, 1330, 1259, 354,
	1391, 1392, 753, 0, 355, 356, 1337, 0, 1318, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	1372, 382, 383, 384, 1321, 1319, 1320, 1327, 1323, 1322,
	1326, 385, 386, 387, 388, 389, 1354, 390, 392, 1348,
	1347, 1264, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 1339, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 1270, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 1362, 1363, 426, 427, 1284, 319,
	0, 0, 0, 0, 0, 428, 429, 430, 1346, 0,
	0, 0, 431, 0, 432, 433, 434, 0, 435, 436,
	0, 1373, 437, 438, 439, 1359, 1360, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 0, 449, 1369, 0,
	1294, 450, 0, 451, 452, 453, 454, 455, 456, 457,
	1332, 1333, 1336, 553, 1375, 458, 459, 460, 0, 461,
	462, 463, 464, 465, 0, 0, 0, 466, 467, 468,
	469, 0, 1274, 320, 322, 1374, 768, 470, 554, 471,
	1341, 1342, 0, 1300, 0, 472, 473, 475, 1376, 1334,
	1377, 474, 476, 477, 1378, 478, 0, 0, 0, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 488, 487,
	0, 490, 1370, 489, 1379, 491, 492, 1380, 0, 493,
	494, 495, 496, 497, 498, 501, 1325, 1324, 499, 500,
	502, 503, 0, 504, 505, 507, 510, 506, 508, 509,
	511, 524, 525, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 527, 0, 526, 1381, 528,
	529, 530, 531, 532, 540, 542, 543, 538, 539, 541,
	544, 545, 547, 535, 536, 537, 1382, 546, 533, 1261,
	534, 323, 1383, 548, 549, 550, 551, 1285, 1335, 552,
	1349, 555, 556, 0, 0, 557, 0, 558, 0, 0,
	560, 561, 562, 0, 0, 563, 564, 776, 1384, 565,
	1385, 1364, 566, 567, 1271, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 0, 578, 579, 778, 580,
	581, 582, 779, 583, 584, 585, 1365, 586, 781, 587,
	588, 0, 589, 590, 591, 0, 592, 593, 594, 595,
	596, 597, 598, 599, 1345, 600, 601, 603, 602, 604,
	0, 605, 0, 606, 607, 608, 0, 0, 0, 0,
	0, 609, 610, 612, 0, 613, 614, 615, 616, 611,
	617, 618, 619, 620, 621, 622, 0, 624, 625, 623,
	626, 627, 1386, 628, 629, 630, 631, 632, 1272, 633,
	0, 634, 635, 643, 644, 645, 636, 637, 639, 646,
	638, 647, 648, 649, 650, 652, 651, 0, 654, 655,
	653, 656, 657, 658, 1328, 659, 784, 660, 640, 641,
	661, 662, 1387, 663, 664, 665, 666, 667, 668, 669,
	1343, 0, 670, 0, 671, 672, 673, 674, 675, 676,
	678, 642, 679, 684, 685, 1390, 680, 681, 682, 683,
	1366, 687, 688, 689, 690, 0, 691, 692, 1258, 686,
	677, 0, 693, 694, 695, 696, 697, 698, 0, 699,
	700, 0, 701, 1355, 1356, 1357, 1358, 0, 713, 0,
	702, 704, 705, 706, 707, 1367, 708, 1368, 1283, 709,
	710, 711, 712, 703, 714, 715, 0, 1265, 716, 717,
	718, 720, 722, 723, 719, 721, 724, 1329, 725, 0,
	0, 726, 727, 728, 794, 1352, 1389, 0, 730, 731,
	729, 732, 733, 736, 734, 735, 797, 737, 738, 739,
	0, 0, 0, 0, 740, 741, 798, 742, 743, 744,
	1262, 0, 0, 0, 0, 2763, 0, 1305, 1277, 1278,
	1279, 1275, 1276, 1288, 0, 1257, 0, 0, 0, 0,
	0, 0, 1255, 1256, 324, 325, 327, 326, 328, 329,
	330, 331, 1289, 332, 333, 0, 1287, 0, 0, 0,
	1331, 1293, 0, 0, 334, 0, 335, 336, 337, 1371,
	338, 339, 340, 341, 342, 343, 344, 746, 1344, 0,
	345, 1351, 346, 1350, 0, 1361, 347, 348, 349, 350,
	351, 352, 353, 1295, 1330, 1259, 354, 1391, 1392, 753,
	0, 355, 356, 1337, 0, 1318, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 1372, 382, 383,
	384, 1321, 1319, 1320, 1327, 1323, 1322, 1326, 385, 386,
	387, 388, 389, 1354, 390, 392, 1348, 1347, 1264, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 1339, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 1270, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 1362, 1363, 426, 427, 1284, 319, 0, 0, 0,
	0, 0, 428, 429, 430, 1346, 0, 0, 0, 431,
	0, 432, 433, 434, 0, 435, 436, 0, 1373, 437,
	438, 439, 1359, 1360, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 0, 449, 1369, 0, 1294, 450, 0,
	451, 452, 453, 454, 455, 456, 457, 1332, 1333, 1336,
	553, 1375, 458, 459, 460, 0, 461, 462, 463, 464,
	465, 0, 0, 0, 466, 467, 468, 469, 0, 1274,
	320, 322, 1374, 768, 470, 554, 471, 1341, 1342, 0,
	1300, 0, 472, 473, 475, 1376, 1334, 1377, 474, 476,
	477, 1378, 478, 0, 0, 0, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 488, 487, 0, 490, 1370,
	489, 1379, 491, 492, 1380, 0, 493, 494, 495, 496,
	497, 498, 501, 1325, 1324, 499, 500, 502, 503, 0,
	504, 505, 507, 510, 506, 508, 509, 511, 524, 525,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 527, 0, 526, 1381, 528, 529, 530, 531,
	532, 540, 542, 543, 538, 539, 541, 544, 545, 547,
	535, 536, 537, 1382, 546, 533, 1261, 534, 323, 1383,
	548, 549, 550, 551, 1285, 1335, 552, 1349, 555, 556,
	0, 0, 557, 0, 558, 0, 0, 560, 561, 562,
	0, 0, 563, 564, 776, 1384, 565, 1385, 1364, 566,
	567, 1271, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 578, 579, 778, 580, 581, 582, 779,
	583, 584, 585, 1365, 586, 781, 587, 588, 0, 589,
	590, 591, 0, 592, 593, 594, 595, 596, 597, 598,
	599, 1345, 600, 601, 603, 602, 604, 0, 605, 0,
	606, 607, 608, 0, 0, 0, 0, 0, 609, 610,
	612, 0, 613, 614, 615, 616, 611, 617, 618, 619,
	620, 621, 622, 0, 624, 625, 623, 626, 627, 1386,
	628, 629, 630, 631, 632, 1272, 633, 0, 634, 635,
	643, 644, 645, 636, 637, 639, 646, 638, 647, 648,
	649, 650, 652, 651, 0, 654, 655, 653, 656, 657,
	658, 1328, 659, 784, 660, 640, 641, 661, 662, 1387,
	663, 664, 665, 666, 667, 668, 669, 1343, 0, 670,
	0, 671, 672, 673, 674, 675, 676, 678, 642, 679,
	684, 685, 1390, 680, 681, 682, 683, 1366, 687, 688,
	689, 690, 0, 691, 692, 1258, 686, 677, 0, 693,
	694, 695, 696, 697, 698, 0, 699, 700, 0, 701,
	1355, 1356, 1357, 1358, 0, 713, 0, 702, 704, 705,
	706, 707, 1367, 708, 1368, 1283, 709, 710, 711, 712,
	703, 714, 715, 0, 1265, 716, 717, 718, 720, 722,
	723, 719, 721, 724, 1329, 725, 0, 0, 726, 727,
	728, 794, 1352, 1389, 0, 730, 731, 729, 732, 733,
	736, 734, 735, 797, 737, 738, 739, 0, 0, 0,
	0, 740, 741, 798, 742, 743, 744, 1262, 0, 0,
	0, 0, 2729, 0, 1305, 1277, 1278, 1279, 1275, 1276,
	1288, 0, 1257, 0, 0, 0, 0, 0, 0, 1255,
	1256, 324, 325, 327, 326, 328, 329, 330, 331, 1289,
	332, 333, 0, 1287, 0, 0, 0, 1331, 1293, 0,
	0, 334, 0, 335, 336, 337, 1371, 338, 339, 340,
	341, 342, 343, 344, 746, 1344, 0, 345, 1351, 346,
	1350, 0, 1361, 347, 348, 349, 350, 351, 352, 353,
	1295, 1330, 1259, 354, 1391, 1392, 753, 0, 355, 356,
	1337, 0, 1318, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 1372, 382, 383, 384, 1321, 1319,
	1320, 1327, 1323, 1322, 1326, 385, 386, 387, 388, 389,
	1354, 390, 392, 1348, 1347, 1264, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 1339, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 1270, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 1362, 1363,
	426, 427, 1284, 319, 0, 0, 0, 0, 0, 428,
	429, 430, 1346, 0, 0, 0, 431, 0, 432, 433,
	434, 0, 435, 436, 0, 1373, 437, 438, 439, 1359,
	1360, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	0, 449, 1369, 0, 1294, 450, 0, 451, 452, 453,
	454, 455, 456, 457, 1332, 1333, 1336, 553, 1375, 458,
	459, 460, 0, 461, 462, 463, 464, 465, 0, 0,
	0, 466, 467, 468, 469, 0, 1274, 320, 322, 1374,
	768, 470, 554, 471, 1341, 1342, 0, 1300, 0, 472,
	473, 475, 1376, 1334, 1377, 474, 476, 477, 1378, 478,
	0, 0, 0, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 488, 487, 0, 490, 1370, 489, 1379, 491,
	492, 1380, 0, 493, 494, 495, 496, 497, 498, 501,
	1325, 1324, 499, 500, 502, 503, 0, 504, 505, 507,
	510, 506, 508, 509, 511, 524, 525, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 527,
	0, 526, 1381, 528, 529, 530, 531, 532, 540, 542,
	543, 538, 539, 541, 544, 545, 547, 535, 536, 537,
	1382, 546, 533, 1261, 534, 323, 1383, 548, 549, 550,
	551, 1285, 1335, 552, 1349, 555, 556, 0, 0, 557,
	0, 558, 0, 0, 560, 561, 562, 0, 0, 563,
	564, 776, 1384, 565, 1385, 1364, 566, 567, 1271, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	578, 579, 778, 580, 581, 582, 779, 583, 584, 585,
	1365, 586, 781, 587, 588, 0, 589, 590, 591, 0,
	592, 593, 594, 595, 596, 597, 598, 599, 1345, 600,
	601, 603, 602, 604, 0, 605, 0, 606, 607, 608,
	0, 0, 0, 0, 0, 609, 610, 612, 0, 613,
	614, 615, 616, 611, 617, 618, 619, 620, 621, 622,
	0, 624, 625, 623, 626, 627, 1386, 628, 629, 630,
	631, 632, 1272, 633, 0, 634, 635, 643, 644, 645,
	636, 637, 639, 646, 638, 647, 648, 649, 650, 652,
	651, 0, 654, 655, 653, 656, 657, 658, 1328, 659,
	784, 660, 640, 641, 661, 662, 1387, 663, 664, 665,
	666, 667, 668, 669, 1343, 0, 670, 0, 671, 672,
	673, 674, 675, 676, 678, 642, 679, 684, 685, 1390,
	680, 681, 682, 683, 1366, 687, 688, 689, 690, 0,
	691, 692, 1258, 686, 677, 0, 693, 694, 695, 696,
	697, 698, 0, 699, 700, 0, 701, 1355, 1356, 1357,
	1358, 0, 713, 0, 702, 704, 705, 706, 707, 1367,
	708, 1368, 1283, 709, 710, 711, 712, 703, 714, 715,
	0, 1265, 716, 717, 718, 720, 722, 723, 719, 721,
	724, 1329, 725, 0, 0, 726, 727, 728, 794, 1352,
	1389, 0, 730, 731, 729, 732, 733, 736, 734, 735,
	797, 737, 738, 739, 0, 0, 0, 0, 740, 741,
	798, 742, 743, 744, 1262, 0, 0, 0, 0, 1958,
	0, 1305, 1277, 1278, 1279, 1275, 1276, 1288, 0, 1257,
	0, 0, 0, 0, 0, 0, 1255, 1256, 324, 325,
	327, 326, 328, 329, 330, 331, 1289, 332, 333, 0,
	1287, 0, 0, 0, 1331, 1293, 0, 0, 334, 0,
	335, 336, 337, 1371, 338, 339, 340, 341, 342, 343,
	344, 746, 1344, 0, 345, 1351, 346, 1350, 0, 1361,
	347, 348, 349, 350, 351, 352, 353, 1295, 1330, 1259,
	354, 1391, 1392, 753, 0, 355, 356, 1337, 0, 1318,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 1372, 382, 383, 384, 1321, 1319, 1320, 1327, 1323,
	1322, 1326, 385, 386, 387, 388, 389, 1354, 390, 392,
	1348, 1347, 1264, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 1339,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 1270, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 1362, 1363, 426, 427, 1284,
	319, 0, 0, 0, 0, 0, 428, 429, 430, 1346,
	0, 0, 0, 431, 0, 432, 433, 434, 0, 435,
	436, 0, 1373, 437, 438, 439, 1359, 1360, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 0, 449, 1369,
	0, 1294, 450, 0, 451, 452, 453, 454, 455, 456,
	457, 1332, 1333, 1336, 553, 1375, 458, 459, 460, 0,
	461, 462, 463, 464, 465, 0, 0, 0, 466, 467,
	468, 469, 0, 1274, 320, 322, 1374, 768, 470, 554,
	471, 1341, 1342, 0, 1300, 0, 472, 473, 475, 1376,
	1334, 1377, 474, 476, 477, 1378, 478, 0, 0, 0,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 488,
	487, 0, 490, 1370, 489, 1379, 491, 492, 1380, 0,
	493, 494, 495, 496, 497, 498, 501, 1325, 1324, 499,
	500, 502, 503, 0, 504, 505, 507, 510, 506, 508,
	509, 511, 524, 525, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 527, 0, 526, 1381,
	528, 529, 530, 531, 532, 540, 542, 543, 538, 539,
	541, 544, 545, 547, 535, 536, 537, 1382, 546, 533,
	1261, 534, 323, 1383, 548, 549, 550, 551, 1285, 1335,
	552, 1349, 555, 556, 0, 0, 557, 0, 558, 0,
	0, 560, 561, 562, 0, 0, 563, 564, 776, 1384,
	565, 1385, 1364, 566, 567, 1271, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 578, 579, 778,
	580, 581, 582, 779, 583, 584, 585, 1365, 586, 781,
	587, 588, 0, 589, 590, 591, 0, 592, 593, 594,
	595, 596, 597, 598, 599, 1345, 600, 601, 603, 602,
	604, 0, 605, 0, 606, 607, 608, 0, 0, 0,
	0, 0, 609, 610, 612, 0, 613, 614, 615, 616,
	611, 617, 618, 619, 620, 621, 622, 0, 624, 625,
	623, 626, 627, 1386, 628, 629, 630, 631, 632, 1272,
	633, 0, 634, 635, 643, 644, 645, 636, 637, 639,
	646, 638, 647, 648, 649, 650, 652, 651, 0, 654,
	655, 653, 656, 657, 658, 1328, 659, 784, 660, 640,
	641, 661, 662, 1387, 663, 664, 665, 666, 667, 668,
	669, 1343, 0, 670, 0, 671, 672, 673, 674, 675,
	676, 678, 642, 679, 684, 685, 1390, 680, 681, 682,
	683, 1366, 687, 688, 689, 690, 0, 691, 692, 1258,
	686, 677, 0, 693, 694, 695, 696, 697, 698, 0,
	699, 700, 0, 701, 1355, 1356, 1357, 1358, 0, 713,
	0, 702, 704, 705, 706, 707, 1367, 708, 1368, 1283,
	709, 710, 711, 712, 703, 714, 715, 0, 1265, 716,
	717, 718, 720, 722, 723, 719, 721, 724, 1329, 725,
	0, 0, 726, 727, 728, 794, 1352, 1389, 0, 730,
	731, 729, 732, 733, 736, 734, 735, 797, 737, 738,
	739, 0, 0, 0, 0, 740, 741, 798, 742, 743,
	744, 1262, 0, 0, 0, 0, 1884, 0, 1305, 1277,
	1278, 1279, 1275, 1276, 1288, 0, 1257, 0, 0, 0,
	0, 0, 0, 1255, 1256, 324, 325, 327, 326, 328,
	329, 330, 331, 1289, 332, 333, 0, 1287, 0, 0,
	0, 1331, 1293, 0, 0, 334, 0, 335, 336, 337,
	1371, 338, 339, 340, 341, 342, 343, 344, 746, 1344,
	0, 345, 1351, 346, 1350, 0, 1361, 347, 348, 349,
	350, 351, 352, 353, 1295, 1330, 1259, 354, 1391, 1392,
	753, 0, 355, 356, 1337, 0, 1318, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 1372, 382,
	383, 384, 1321, 1319, 1320, 1327, 1323, 1322, 1326, 385,
	386, 387, 388, 389, 1354, 390, 392, 1348, 1347, 1264,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 1339, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 1270,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 1362, 1363, 426, 427, 1284, 319, 0, 0,
	0, 0, 0, 428, 429, 430, 1346, 0, 0, 0,
	431, 0, 432, 433, 434, 0, 435, 436, 0, 1373,
	437, 438, 439, 1359, 1360, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 0, 449, 1369, 0, 1294, 450,
	0, 451, 452, 453, 454, 455, 456, 457, 1332, 1333,
	1336, 553, 1375, 458, 459, 460, 0, 461, 462, 463,
	464, 465, 0, 0, 0, 466, 467, 468, 469, 0,
	1274, 320, 322, 1374, 768, 470, 554, 471, 1341, 1342,
	0, 1300, 0, 472, 473, 475, 1376, 1334, 1377, 474,
	476, 477, 1378, 478, 0, 0, 0, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 488, 487, 0, 490,
	1370, 489, 1379, 491, 492, 1380, 0, 493, 494, 495,
	496, 497, 498, 501, 1325, 1324, 499, 500, 502, 503,
	0, 504, 505, 507, 510, 506, 508, 509, 511, 524,
	525, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 527, 0, 526, 1381, 528, 529, 530,
	531, 532, 540, 542, 543, 538, 539, 541, 544, 545,
	547, 535, 536, 537, 1382, 546, 533, 1261, 534, 323,
	1383, 548, 549, 550, 551, 1285, 1335, 552, 1349, 555,
	556, 0, 0, 557, 0, 558, 0, 0, 560, 561,
	562, 0, 0, 563, 564, 776, 1384, 565, 1385, 1364,
	566, 567, 1271, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 0, 578, 579, 778, 580, 581, 582,
	779, 583, 584, 585, 1365, 586, 781, 587, 588, 0,
	589, 590, 591, 0, 592, 593, 594, 595, 596, 597,
	598, 599, 1345, 600, 601, 603, 602, 604, 0, 605,
	0, 606, 607, 608, 0, 0, 0, 0, 0, 609,
	610, 612, 0, 613, 614, 615, 616, 611, 617, 618,
	619, 620, 621, 622, 0, 624, 625, 623, 626, 627,
	1386, 628, 629, 630, 631, 632, 1272, 633, 0, 634,
	635, 643, 644, 645, 636, 637, 639, 646, 638, 647,
	648, 649, 650, 652, 651, 0, 654, 655, 653, 656,
	657, 658, 1328, 659, 784, 660, 640, 641, 661, 662,
	1387, 663, 664, 665, 666, 667, 668, 669, 1343, 0,
	670, 0, 671, 672, 673, 674, 675, 676, 678, 642,
	679, 684, 685, 1390, 680, 681, 682, 683, 1366, 687,
	688, 689, 690, 0, 691, 692, 1258, 686, 677, 0,
	693, 694, 695, 696, 697, 698, 0, 699, 700, 0,
	701, 1355, 1356, 1357, 1358, 0, 713, 0, 702, 704,
	705, 706, 707, 1367, 708, 1368, 1283, 709, 710, 711,
	712, 703, 714, 715, 0, 1265, 716, 717, 718, 720,
	722, 723, 719, 721, 724, 1329, 725, 0, 0, 726,
	727, 728, 794, 1352, 1389, 0, 730, 731, 729, 732,
	733, 736, 734, 735, 797, 737, 738, 739, 0, 0,
	0, 0, 740, 741, 798, 742, 743, 744, 1262, 0,
	0, 0, 0, 1879, 0, 1305, 1277, 1278, 1279, 1275,
	1276, 1288, 0, 1257, 0, 0, 0, 0, 0, 0,
	1255, 1256, 324, 325, 327, 326, 328, 329, 330, 331,
	1289, 332, 333, 0, 1287, 0, 0, 0, 1331, 1293,
	0, 0, 334, 0, 335, 336, 337, 1371, 338, 339,
	340, 341, 342, 343, 344, 746, 1344, 0, 345, 1351,
	346, 1350, 0, 1361, 347, 348, 349, 350, 351, 352,
	353, 1295, 1330, 1259, 354, 1391, 1392, 753, 0, 355,
	356, 1337, 0, 1318, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 1372, 382, 383, 384, 1321,
	1319, 1320, 1327, 1323, 1322, 1326, 385, 386, 387, 388,
	389, 1354, 390, 392, 1348, 1347, 1264, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 1339, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 1270, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 1362,
	1363, 426, 427, 1284, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 1346, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 1373, 437, 438, 439,
	1359, 1360, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 1369, 0, 1294, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 1332, 1333, 1336, 553, 1375,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 1274, 320, 322,
	1374, 768, 470, 554, 471, 1341, 1342, 0, 1300, 0,
	472, 473, 475, 1376, 1334, 1377, 474, 476, 477, 1378,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 1370, 489, 1379,
	491, 492, 1380, 0, 493, 494, 495, 496, 497, 498,
	501, 1325, 1324, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 1381, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 1382, 546, 533, 1261, 534, 323, 1383, 548, 549,
	550, 551, 1285, 1335, 552, 1349, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 1384, 565, 1385, 1364, 566, 567, 1271,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 1365, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 1345,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 1386, 628, 629,
	630, 631, 632, 1272, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 1328,
	659, 784, 660, 640, 641, 661, 662, 1387, 663, 664,
	665, 666, 667, 668, 669, 1343, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	1390, 680, 681, 682, 683, 1366, 687, 688, 689, 690,
	0, 691, 692, 1258, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 1355, 1356,
	1357, 1358, 0, 713, 0, 702, 704, 705, 706, 707,
	1367, 708, 1368, 1283, 709, 710, 711, 712, 703, 714,
	715, 0, 1265, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 1329, 725, 0, 0, 726, 727, 728, 794,
	1352, 1389, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 0, 0, 0, 0, 740,
	741, 798, 742, 743, 744, 1262, 0, 0, 0, 0,
	1865, 0, 1305, 1277, 1278, 1279, 1275, 1276, 1288, 0,
	1257, 0, 0, 0, 0, 0, 0, 1255, 1256, 324,
	325, 327, 326, 328, 329, 330, 331, 1289, 332, 333,
	0, 1287, 0, 0, 0, 1331, 1293, 0, 0, 334,
	0, 335, 336, 337, 1371, 338, 339, 340, 341, 342,
	343, 344, 746, 1344, 0, 345, 1351, 346, 1350, 0,
	1361, 347, 348, 349, 350, 351, 352, 353, 1295, 1330,
	1259, 354, 1391, 1392, 753, 0, 355, 356, 1337, 0,
	1318, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 1372, 382, 383, 384, 1321, 1319, 1320, 1327,
	1323, 1322, 1326, 385, 386, 387, 388, 389, 1354, 390,
	392, 1348, 1347, 1264, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	1339, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 1270, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 1362, 1363, 426, 427,
	1284, 319, 0, 0, 0, 0, 0, 428, 429, 430,
	1346, 0, 0, 0, 431, 0, 432, 433, 434, 0,
	435, 436, 0, 1373, 437, 438, 439, 1359, 1360, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 0, 449,
	1369, 0, 1294, 450, 0, 451, 452, 453, 454, 455,
	456, 457, 1332, 1333, 1336, 553, 1375, 458, 459, 460,
	0, 461, 462, 463, 464, 465, 0, 0, 0, 466,
	467, 468, 469, 0, 1274, 320, 322, 1374, 768, 470,
	554, 471, 1341, 1342, 0, 1300, 0, 472, 473, 475,
	1376, 1334, 1377, 474, 476, 477, 1378, 478, 0, 0,
	0, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	488, 487, 0, 490, 1370, 489, 1379, 491, 492, 1380,
	0, 493, 494, 495, 496, 497, 498, 501, 1325, 1324,
	499, 500, 502, 503, 0, 504, 505, 507, 510, 506,
	508, 509, 511, 524, 525, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 527, 0, 526,
	1381, 528, 529, 530, 531, 532, 540, 542, 543, 538,
	539, 541, 544, 545, 547, 535, 536, 537, 1382, 546,
	533, 1261, 534, 323, 1383, 548, 549, 550, 551, 1285,
	1335, 552, 1349, 555, 556, 0, 0, 557, 0, 558,
	0, 0, 560, 561, 562, 0, 0, 563, 564, 776,
	1384, 565, 1385, 1364, 566, 567, 1271, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 0, 578, 579,
	778, 580, 581, 582, 779, 583, 584, 585, 1365, 586,
	781, 587, 588, 0, 589, 590, 591, 0, 592, 593,
	594, 595, 596, 597, 598, 599, 1345, 600, 601, 603,
	602, 604, 0, 605, 0, 606, 607, 608, 0, 0,
	0, 0, 0, 609, 610, 612, 0, 613, 614, 615,
	616, 611, 617, 618, 619, 620, 621, 622, 0, 624,
	625, 623, 626, 627, 1386, 628, 629, 630, 631, 632,
	1272, 633, 0, 634, 635, 643, 644, 645, 636, 637,
	639, 646, 638, 647, 648, 649, 650, 652, 651, 0,
	654, 655, 653, 656, 657, 658, 1328, 659, 784, 660,
	640, 641, 661, 662, 1387, 663, 664, 665, 666, 667,
	668, 669, 1343, 0, 670, 0, 671, 672, 673, 674,
	675, 676, 678, 642, 679, 684, 685, 1390, 680, 681,
	682, 683, 1366, 687, 688, 689, 690, 0, 691, 692,
	1258, 686, 677, 0, 693, 694, 695, 696, 697, 698,
	0, 699, 700, 0, 701, 1355, 1356, 1357, 1358, 0,
	713, 0, 702, 704, 705, 706, 707, 1367, 708, 1368,
	1283, 709, 710, 711, 712, 703, 714, 715, 0, 1265,
	716, 717, 718, 720, 722, 723, 719, 721, 724, 1329,
	725, 0, 0, 726, 727, 728, 794, 1352, 1389, 0,
	730, 731, 729, 732, 733, 736, 734, 735, 797, 737,
	738, 739, 0, 0, 0, 0, 740, 741, 798, 742,
	743, 744, 1262, 0, 0, 0, 0, 1860, 0, 1305,
	1277, 1278, 1279, 1275, 1276, 1288, 0, 1257, 0, 0,
	0, 0, 0, 0, 1255, 1256, 324, 325, 327, 326,
	328, 329, 330, 331, 1289, 332, 333, 0, 1287, 0,
	0, 0, 1331, 1293, 0, 0, 334, 0, 335, 336,
	337, 1371, 338, 339, 340, 341, 342, 343, 344, 746,
	1344, 0, 345, 1351, 346, 1350, 0, 1361, 347, 348,
	349, 350, 351, 352, 353, 1295, 1330, 1259, 354, 1391,
	1392, 753, 0, 355, 356, 1337, 0, 1318, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 1372,
	382, 383, 384, 1321, 1319, 1320, 1327, 1323, 1322, 1326,
	385, 386, 387, 388, 389, 1354, 390, 392, 1348, 1347,
	1264, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 1339, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	1270, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 1362, 1363, 426, 427, 1284, 319, 0,
	0, 0, 0, 0, 428, 429, 430, 1346, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	1373, 437, 438, 439, 1359, 1360, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 0, 449, 1369, 0, 1294,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 1332,
	1333, 1336, 553, 1375, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 1274, 320, 322, 1374, 768, 470, 554, 471, 1341,
	1342, 0, 1300, 0, 472, 473, 475, 1376, 1334, 1377,
	474, 476, 477, 1378, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 1370, 489, 1379, 491, 492, 1380, 0, 493, 494,
	495, 496, 497, 498, 501, 1325, 1324, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 1381, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 1382, 546, 533, 1261, 534,
	323, 1383, 548, 549, 550, 551, 1285, 1335, 552, 1349,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 776, 1384, 565, 1385,
	1364, 566, 567, 1271, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 778, 580, 581,
	582, 779, 583, 584, 585, 1365, 586, 781, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 1345, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 1386, 628, 629, 630, 631, 632, 1272, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 650, 652, 651, 0, 654, 655, 653,
	656, 657, 658, 1328, 659, 784, 660, 640, 641, 661,
	662, 1387, 663, 664, 665, 666, 667, 668, 669, 1343,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 1390, 680, 681, 682, 683, 1366,
	687, 688, 689, 690, 0, 691, 692, 1258, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 1355, 1356, 1357, 1358, 0, 713, 0, 702,
	704, 705, 706, 707, 1367, 708, 1368, 1283, 709, 710,
	711, 712, 703, 714, 715, 0, 1265, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 1329, 725, 0, 0,
	726, 727, 728, 794, 1352, 1389, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 797, 737, 738, 739, 0,
	0, 0, 0, 740, 741, 798, 742, 743, 744, 1262,
	0, 0, 0, 0, 1766, 0, 1305, 1277, 1278, 1279,
	1275, 1276, 1288, 0, 1257, 0, 0, 0, 0, 0,
	0, 1255, 1256, 324, 325, 327, 326, 328, 329, 330,
	331, 1289, 332, 333, 0, 1287, 0, 0, 0, 1331,
	1293, 0, 0, 334, 0, 335, 336, 337, 1371, 338,
	339, 340, 341, 342, 343, 344, 746, 1344, 0, 345,
	1351, 346, 1350, 0, 1361, 347, 348, 349, 350, 351,
	352, 353, 1295, 1330, 1259, 354, 1391, 1392, 753, 0,
	355, 356, 1337, 0, 1318, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 1372, 382, 383, 384,
	1321, 1319, 1320, 1327, 1323, 1322, 1326, 385, 386, 387,
	388, 389, 1354, 390, 392, 1348, 1347, 1264, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 1339, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 1270, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	1362, 1363, 426, 427, 1284, 319, 0, 0, 0, 0,
	0, 428, 429, 430, 1346, 0, 0, 0, 431, 0,
	432, 433, 434, 0, 435, 436, 0, 1373, 437, 438,
	439, 1359, 1360, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 0, 449, 1369, 0, 1294, 450, 0, 451,
	452, 453, 454, 455, 456, 457, 1765, 1333, 1336, 553,
	1375, 458, 459, 460, 0, 461, 462, 463, 464, 465,
	0, 0, 0, 466, 467, 468, 469, 0, 1274, 320,
	322, 1374, 768, 470, 554, 471, 1341, 1342, 0, 1300,
	0, 472, 473, 475, 1376, 1334, 1377, 474, 476, 477,
	1378, 478, 0, 0, 0, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 488, 487, 0, 490, 1370, 489,
	1379, 491, 492, 1380, 0, 493, 494, 495, 496, 497,
	498, 501, 1325, 1324, 499, 500, 502, 503, 0, 504,
	505, 507, 510, 506, 508, 509, 511, 524, 525, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 527, 0, 526, 1381, 528, 529, 530, 531, 532,
	540, 542, 543, 538, 539, 541, 544, 545, 547, 535,
	536, 537, 1382, 546, 533, 1261, 534, 323, 1383, 548,
	549, 550, 551, 1285, 1335, 552, 1349, 555, 556, 0,
	0, 557, 0, 558, 0, 0, 560, 561, 562, 0,
	0, 563, 564, 776, 1384, 565, 1385, 1364, 566, 567,
	1271, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 0, 578, 579, 778, 580, 581, 582, 779, 583,
	584, 585, 1365, 586, 781, 587, 588, 0, 589, 590,
	591, 0, 592, 593, 594, 595, 596, 597, 598, 599,
	1345, 600, 601, 603, 602, 604, 0, 605, 0, 606,
	607, 608, 0, 0, 0, 0, 0, 609, 610, 612,
	0, 613, 614, 615, 616, 611, 617, 618, 619, 620,
	621, 622, 0, 624, 625, 623, 626, 627, 1386, 628,
	629, 630, 631, 632, 1272, 633, 0, 634, 635, 643,
	644, 645, 636, 637, 639, 646, 638, 647, 648, 649,
	650, 652, 651, 0, 654, 655, 653, 656, 657, 658,
	1328, 659, 784, 660, 640, 641, 661, 662, 1387, 663,
	664, 665, 666, 667, 668, 669, 1343, 0, 670, 0,
	671, 672, 673, 674, 675, 676, 678, 642, 679, 684,
	685, 1390, 680, 681, 682, 683, 1366, 687, 688, 689,
	690, 0, 691, 692, 1258, 686, 677, 0, 693, 694,
	695, 696, 697, 698, 0, 699, 700, 0, 701, 1355,
	1356, 1357, 1358, 0, 713, 0, 702, 704, 705, 706,
	707, 1367, 708, 1368, 1283, 709, 710, 711, 712, 703,
	714, 715, 0, 1265, 716, 717, 718, 720, 722, 723,
	719, 721, 724, 1329, 725, 0, 0, 726, 727, 728,
	794, 1352, 1389, 0, 730, 731, 729, 732, 733, 736,
	734, 735, 797, 737, 738, 739, 0, 0, 0, 0,
	740, 741, 798, 742, 743, 744, 1262, 0, 0, 0,
	0, 1760, 0, 1305, 1277, 1278, 1279, 1275, 1276, 1288,
	0, 1257, 0, 0, 0, 0, 0, 0, 1255, 1256,
	324, 325, 327, 326, 328, 329, 330, 331, 1289, 332,
	333, 0, 1287, 0, 0, 0, 1331, 1293, 0, 0,
	334, 0, 335, 336, 337, 1371, 338, 339, 340, 341,
	342, 343, 344, 746, 1344, 0, 345, 1351, 346, 1350,
	0, 1361, 347, 348, 349, 350, 351, 352, 353, 1295,
	1330, 1259, 354, 1391, 1392, 753, 0, 355, 356, 1337,
	0, 1318, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 1372, 382, 383, 384, 1321, 1319, 1320,
	1327, 1323, 1322, 1326, 385, 386, 387, 388, 389, 1354,
	390, 392, 1348, 1347, 1264, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 1339, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 1270, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 1362, 1363, 426,
	427, 1284, 319, 0, 0, 0, 0, 0, 428, 429,
	430, 1346, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 1373, 437, 438, 439, 1359, 1360,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 1369, 0, 1294, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 1759, 1333, 1336, 553, 1375, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 1274, 320, 322, 1374, 768,
	470, 554, 471, 1341, 1342, 0, 1300, 0, 472, 473,
	475, 1376, 1334, 1377, 474, 476, 477, 1378, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 1370, 489, 1379, 491, 492,
	1380, 0, 493, 494, 495, 496, 497, 498, 501, 1325,
	1324, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 1381, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 1382,
	546, 533, 1261, 534, 323, 1383, 548, 549, 550, 551,
	1285, 1335, 552, 1349, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 1384, 565, 1385, 1364, 566, 567, 1271, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 1365,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 1345, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 1386, 628, 629, 630, 631,
	632, 1272, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 1328, 659, 784,
	660, 640, 641, 661, 662, 1387, 663, 664, 665, 666,
	667, 668, 669, 1343, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 1390, 680,
	681, 682, 683, 1366, 687, 688, 689, 690, 0, 691,
	692, 1258, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 1355, 1356, 1357, 1358,
	0, 713, 0, 702, 704, 705, 706, 707, 1367, 708,
	1368, 1283, 709, 710, 711, 712, 703, 714, 715, 0,
	1265, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	1329, 725, 0, 0, 726, 727, 728, 794, 1352, 1389,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 0, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 1262, 0, 0, 0, 0, 1753, 0,
	1305, 1277, 1278, 1279, 1275, 1276, 1288, 0, 1257, 0,
	0, 0, 0, 0, 0, 1255, 1256, 324, 325, 327,
	326, 328, 329, 330, 331, 1289, 332, 333, 0, 1287,
	0, 0, 0, 1331, 1293, 0, 0, 334, 0, 335,
	336, 337, 1371, 338, 339, 340, 341, 342, 343, 344,
	746, 1344, 0, 345, 1351, 346, 1350, 0, 1361, 347,
	348, 349, 350, 351, 352, 353, 1295, 1330, 1259, 354,
	1391, 1392, 753, 0, 355, 356, 1337, 0, 1318, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	1372, 382, 383, 384, 1321, 1319, 1320, 1327, 1323, 1322,
	1326, 385, 386, 387, 388, 389, 1354, 390, 392, 1348,
	1347, 1264, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 1339, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 1270, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 1362, 1363, 426, 427, 1284, 319,
	0, 0, 0, 0, 0, 428, 429, 430, 1346, 0,
	0, 0, 431, 0, 432, 433, 434, 0, 435, 436,
	0, 1373, 437, 438, 439, 1359, 1360, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 0, 449, 1369, 0,
	1294, 450, 0, 451, 452, 453, 454, 455, 456, 457,
	1332, 1333, 1336, 553, 1375, 458, 459, 460, 0, 461,
	462, 463, 464, 465, 0, 0, 0, 466, 467, 468,
	469, 0, 1274, 320, 322, 1374, 768, 470, 554, 471,
	1341, 1342, 0, 1300, 0, 472, 473, 475, 1376, 1334,
	1377, 474, 476, 477, 1378, 478, 0, 0, 0, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 488, 487,
	0, 490, 1370, 489, 1379, 491, 492, 1380, 0, 493,
	494, 495, 496, 497, 498, 501, 1325, 1324, 499, 500,
	502, 503, 0, 504, 505, 507, 510, 506, 508, 509,
	511, 524, 525, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 527, 0, 526, 1381, 528,
	529, 530, 531, 532, 540, 542, 543, 538, 539, 541,
	544, 545, 547, 535, 536, 537, 1382, 546, 533, 1261,
	534, 323, 1383, 548, 549, 550, 551, 1285, 1335, 552,
	1349, 555, 556, 0, 0, 557, 0, 558, 0, 0,
	560, 561, 562, 0, 0, 563, 564, 776, 1384, 565,
	1385, 1364, 566, 567, 1271, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 0, 578, 579, 778, 580,
	581, 582, 779, 583, 584, 585, 1365, 586, 781, 587,
	588, 0, 589, 590, 591, 0, 592, 593, 594, 595,
	596, 597, 598, 599, 1345, 600, 601, 603, 602, 604,
	0, 605, 0, 606, 607, 608, 0, 0, 0, 0,
	0, 609, 610, 612, 0, 613, 614, 615, 616, 611,
	617, 618, 619, 620, 621, 622, 0, 624, 625, 623,
	626, 627, 1386, 628, 629, 630, 631, 632, 1272, 633,
	0, 634, 635, 643, 644, 645, 636, 637, 639, 646,
	638, 647, 648, 649, 650, 652, 651, 0, 654, 655,
	653, 656, 657, 658, 1328, 659, 784, 660, 640, 641,
	661, 662, 1387, 663, 664, 665, 666, 667, 668, 669,
	1343, 0, 670, 0, 671, 672, 673, 674, 675, 676,
	678, 642, 679, 684, 685, 1390, 680, 681, 682, 683,
	1366, 687, 688, 689, 690, 0, 691, 692, 1258, 686,
	677, 0, 693, 694, 695, 696, 697, 698, 0, 699,
	700, 0, 701, 1355, 1356, 1357, 1358, 0, 713, 0,
	702, 704, 705, 706, 707, 1367, 708, 1368, 1283, 709,
	710, 711, 712, 703, 714, 715, 0, 1265, 716, 717,
	718, 720, 722, 723, 719, 721, 724, 1329, 725, 0,
	0, 726, 727, 728, 794, 1352, 1389, 0, 730, 731,
	729, 732, 733, 736, 734, 735, 797, 737, 738, 739,
	0, 0, 0, 0, 740, 741, 798, 742, 743, 744,
	1262, 0, 0, 0, 0, 1726, 0, 1305, 1277, 1278,
	1279, 1275, 1276, 1288, 0, 1257, 0, 0, 0, 0,
	0, 0, 1255, 1256, 324, 325, 327, 326, 328, 329,
	330, 331, 1289, 332, 333, 0, 1287, 0, 0, 0,
	1331, 1293, 0, 0, 334, 0, 335, 336, 337, 1371,
	338, 339, 340, 341, 342, 343, 344, 746, 1344, 0,
	345, 1351, 346, 1350, 0, 1361, 347, 348, 349, 350,
	351, 352, 353, 1295, 1330, 1259, 354, 1391, 1392, 753,
	0, 355, 356, 1337, 0, 1318, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 1372, 382, 383,
	384, 1321, 1319, 1320, 1327, 1323, 1322, 1326, 385, 386,
	387, 388, 389, 1354, 390, 392, 1348, 1347, 1264, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 1339, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 1270, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 1362, 1363, 426, 427, 1284, 319, 0, 0, 0,
	0, 0, 428, 429, 430, 1346, 0, 0, 0, 431,
	0, 432, 433, 434, 0, 435, 436, 0, 1373, 437,
	438, 439, 1359, 1360, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 0, 449, 1369, 0, 1294, 450, 0,
	451, 452, 453, 454, 455, 456, 457, 1332, 1333, 1336,
	553, 1375, 458, 459, 460, 0, 461, 462, 463, 464,
	465, 0, 0, 0, 466, 467, 468, 469, 0, 1274,
	320, 322, 1374, 768, 470, 554, 471, 1341, 1342, 0,
	1300, 0, 472, 473, 475, 1376, 1334, 1377, 474, 476,
	477, 1378, 478, 0, 0, 0, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 488, 487, 0, 490, 1370,
	489, 1379, 491, 492, 1380, 0, 493, 494, 495, 496,
	497, 498, 501, 1325, 1324, 499, 500, 502, 503, 0,
	504, 505, 507, 510, 506, 508, 509, 511, 524, 525,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 527, 0, 526, 1381, 528, 529, 530, 531,
	532, 540, 542, 543, 538, 539, 541, 544, 545, 547,
	535, 536, 537, 1382, 546, 533, 1261, 534, 323, 1383,
	548, 549, 550, 551, 1285, 1335, 552, 1349, 555, 556,
	0, 0, 557, 0, 558, 0, 0, 560, 561, 562,
	0, 0, 563, 564, 776, 1384, 565, 1385, 1364, 566,
	567, 1271, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 578, 579, 778, 580, 581, 582, 779,
	583, 584, 585, 1365, 586, 781, 587, 588, 0, 589,
	590, 591, 0, 592, 593, 594, 595, 596, 597, 598,
	599, 1345, 600, 601, 603, 602, 604, 0, 605, 0,
	606, 607, 608, 0, 0, 0, 0, 0, 609, 610,
	612, 0, 613, 614, 615, 616, 611, 617, 618, 619,
	620, 621, 622, 0, 624, 625, 623, 626, 627, 1386,
	628, 629, 630, 631, 632, 1272, 633, 0, 634, 635,
	643, 644, 645, 636, 637, 639, 646, 638, 647, 648,
	649, 650, 652, 651, 0, 654, 655, 653, 656, 657,
	658, 1328, 659, 784, 660, 640, 641, 661, 662, 1387,
	663, 664, 665, 666, 667, 668, 669, 1343, 0, 670,
	0, 671, 672, 673, 674, 675, 676, 678, 642, 679,
	684, 685, 1390, 680, 681, 682, 683, 1366, 687, 688,
	689, 690, 0, 691, 692, 1258, 686, 677, 0, 693,
	694, 695, 696, 697, 698, 0, 699, 700, 0, 701,
	1355, 1356, 1357, 1358, 0, 713, 0, 702, 704, 705,
	706, 707, 1367, 708, 1368, 1283, 709, 710, 711, 712,
	703, 714, 715, 0, 1265, 716, 717, 718, 720, 722,
	723, 719, 721, 724, 1329, 725, 0, 0, 726, 727,
	728, 794, 1352, 1389, 0, 730, 731, 729, 732, 733,
	736, 734, 735, 797, 737, 738, 739, 0, 0, 0,
	0, 740, 741, 798, 742, 743, 744, 1262, 0, 0,
	0, 0, 1698, 0, 1305, 1277, 1278, 1279, 1275, 1276,
	1288, 0, 1257, 0, 0, 0, 0, 0, 0, 1255,
	1256, 324, 325, 327, 326, 328, 329, 330, 331, 1289,
	332, 333, 0, 1287, 0, 0, 0, 1331, 1293, 0,
	0, 334, 0, 335, 336, 337, 1371, 338, 339, 340,
	341, 342, 343, 344, 746, 1344, 0, 345, 1351, 346,
	1350, 0, 1361, 347, 348, 349, 350, 351, 352, 353,
	1295, 1330, 1259, 354, 1391, 1392, 753, 0, 355, 356,
	1337, 0, 1318, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 1372, 382, 383, 384, 1321, 1319,
	1320, 1327, 1323, 1322, 1326, 385, 386, 387, 388, 389,
	1354, 390, 392, 1348, 1347, 1264, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 1339, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 1270, 414, 415, 416, 418,
	420, 417, 1702, 421, 422, 423, 424, 425, 1362, 1363,
	426, 427, 1284, 319, 0, 0, 0, 0, 0, 428,
	429, 430, 1346, 0, 0, 0, 431, 0, 432, 433,
	434, 0, 435, 436, 0, 1373, 437, 438, 439, 1359,
	1360, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	0, 449, 1369, 0, 1294, 450, 0, 451, 452, 453,
	454, 455, 456, 457, 1332, 1333, 1336, 553, 1375, 458,
	459, 460, 0, 461, 462, 463, 464, 465, 0, 0,
	0, 466, 467, 468, 469, 0, 1274, 320, 322, 1374,
	768, 470, 554, 471, 1341, 1342, 0, 1300, 0, 472,
	473, 475, 1376, 1334, 1377, 474, 476, 477, 1378, 478,
	0, 0, 0, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 488, 487, 0, 490, 1370, 489, 1379, 491,
	492, 1380, 0, 493, 494, 495, 496, 497, 498, 501,
	1325, 1324, 499, 500, 502, 503, 0, 504, 505, 507,
	510, 506, 508, 509, 511, 524, 525, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 527,
	0, 526, 1381, 528, 529, 530, 531, 532, 540, 542,
	543, 538, 539, 541, 544, 545, 547, 535, 536, 537,
	1382, 546, 533, 1261, 534, 323, 1383, 548, 549, 550,
	551, 1285, 1335, 552, 1349, 555, 556, 0, 0, 557,
	0, 558, 0, 0, 560, 561, 562, 0, 0, 563,
	564, 776, 1384, 565, 1385, 1364, 566, 567, 1271, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	578, 579, 778, 580, 581, 582, 779, 583, 584, 585,
	1365, 586, 781, 587, 588, 0, 589, 590, 591, 0,
	592, 593, 594, 595, 596, 597, 598, 599, 1345, 600,
	601, 603, 602, 604, 0, 605, 0, 606, 607, 608,
	0, 0, 0, 0, 0, 609, 610, 1703, 0, 613,
	614, 615, 616, 611, 617, 618, 619, 620, 621, 622,
	0, 624, 625, 623, 626, 627, 1386, 628, 629, 630,
	631, 632, 1272, 633, 0, 634, 635, 643, 644, 645,
	636, 637, 639, 646, 638, 647, 648, 649, 650, 652,
	651, 0, 654, 655, 653, 656, 657, 658, 1328, 659,
	784, 660, 640, 641, 661, 662, 1387, 663, 664, 665,
	666, 667, 668, 669, 1343, 0, 670, 0, 671, 672,
	673, 674, 675, 676, 678, 642, 679, 684, 685, 1390,
	680, 681, 682, 683, 1366, 687, 688, 689, 690, 0,
	691, 692, 1258, 686, 677, 0, 693, 694, 695, 696,
	697, 698, 0, 1701, 700, 0, 701, 1355, 1356, 1357,
	1358, 0, 713, 0, 702, 704, 705, 706, 707, 1367,
	708, 1368, 1283, 709, 710, 711, 712, 703, 714, 715,
	0, 1265, 716, 717, 718, 720, 722, 723, 719, 721,
	724, 1329, 725, 0, 0, 726, 727, 728, 794, 1352,
	1389, 0, 730, 731, 729, 732, 733, 736, 734, 735,
	797, 737, 738, 739, 0, 0, 0, 0, 740, 741,
	798, 742, 743, 744, 1262, 0, 0, 0, 0, 1526,
	0, 1305, 1277, 1278, 1279, 1275, 1276, 1288, 0, 1257,
	0, 0, 0, 0, 0, 0, 1255, 1256, 324, 325,
	327, 326, 328, 329, 330, 331, 1289, 332, 333, 0,
	1287, 0, 0, 0, 1331, 1293, 0, 0, 334, 0,
	335, 336, 337, 1371, 338, 339, 340, 341, 342, 343,
	344, 746, 1344, 0, 345, 1351, 346, 1350, 0, 1361,
	347, 348, 349, 350, 351, 352, 353, 1295, 1330, 1259,
	354, 1391, 1392, 753, 0, 355, 356, 1337, 0, 1318,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 1372, 382, 383, 384, 1321, 1319, 1320, 1327, 1323,
	1322, 1326, 385, 386, 387, 388, 389, 1354, 390, 392,
	1348, 1347, 1264, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 1339,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 1270, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 1362, 1363, 426, 427, 1284,
	319, 0, 0, 0, 0, 0, 428, 429, 430, 1346,
	0, 0, 0, 431, 0, 432, 433, 434, 0, 435,
	436, 0, 1373, 437, 438, 439, 1359, 1360, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 0, 449, 1369,
	0, 1294, 450, 0, 451, 452, 453, 454, 455, 456,
	457, 1332, 1333, 1336, 553, 1375, 458, 459, 460, 0,
	461, 462, 463, 464, 465, 0, 0, 0, 466, 467,
	468, 469, 0, 1274, 320, 322, 1374, 768, 470, 554,
	471, 1341, 1342, 0, 1300, 0, 472, 473, 475, 1376,
	1334, 1377, 474, 476, 477, 1378, 478, 0, 0, 0,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 488,
	487, 0, 490, 1370, 489, 1379, 491, 492, 1380, 0,
	493, 494, 495, 496, 497, 498, 501, 1325, 1324, 499,
	500, 502, 503, 0, 504, 505, 507, 510, 506, 508,
	509, 511, 524, 525, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 527, 0, 526, 1381,
	528, 529, 530, 531, 532, 540, 542, 543, 538, 539,
	541, 544, 545, 547, 535, 536, 537, 1382, 546, 533,
	1261, 534, 323, 1383, 548, 549, 550, 551, 1285, 1335,
	552, 1349, 555, 556, 0, 0, 557, 0, 558, 0,
	0, 560, 561, 562, 0, 0, 563, 564, 776, 1384,
	565, 1385, 1364, 566, 567, 1271, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 578, 579, 778,
	580, 581, 582, 779, 583, 584, 585, 1365, 586, 781,
	587, 588, 0, 589, 590, 591, 0, 592, 593, 594,
	595, 596, 597, 598, 599, 1345, 600, 601, 603, 602,
	604, 0, 605, 0, 606, 607, 608, 0, 0, 0,
	0, 0, 609, 610, 612, 0, 613, 614, 615, 616,
	611, 617, 618, 619, 620, 621, 622, 0, 624, 625,
	623, 626, 627, 1386, 628, 629, 630, 631, 632, 1272,
	633, 0, 634, 635, 643, 644, 645, 636, 637, 639,
	646, 638, 647, 648, 649, 650, 652, 651, 0, 654,
	655, 653, 656, 657, 658, 1328, 659, 784, 660, 640,
	641, 661, 662, 1387, 663, 664, 665, 666, 667, 668,
	669, 1343, 0, 670, 0, 671, 672, 673, 674, 675,
	676, 678, 642, 679, 684, 685, 1390, 680, 681, 682,
	683, 1366, 687, 688, 689, 690, 0, 691, 692, 1258,
	686, 677, 0, 693, 694, 695, 696, 697, 698, 0,
	699, 700, 0, 701, 1355, 1356, 1357, 1358, 0, 713,
	0, 702, 704, 705, 706, 707, 1367, 708, 1368, 1283,
	709, 710, 711, 712, 703, 714, 715, 0, 1265, 716,
	717, 718, 720, 722, 723, 719, 721, 724, 1329, 725,
	0, 0, 726, 727, 728, 794, 1352, 1389, 0, 730,
	731, 729, 732, 733, 736, 734, 735, 797, 737, 738,
	739, 0, 0, 0, 0, 740, 741, 798, 742, 743,
	744, 1262, 0, 0, 0, 0, 0, 0, 1305, 1277,
	1278, 1279, 1275, 1276, 1288, 0, 1257, 0, 0, 0,
	0, 0, 0, 1255, 1256, 324, 325, 327, 326, 328,
	329, 330, 331, 1289, 332, 333, 0, 1287, 0, 0,
	0, 1331, 1293, 0, 0, 334, 0, 335, 336, 337,
	1371, 338, 339, 340, 341, 342, 343, 344, 746, 1344,
	0, 345, 1351, 346, 1350, 0, 1361, 347, 348, 349,
	350, 351, 352, 353, 1295, 1330, 1259, 354, 1391, 1392,
	753, 0, 355, 356, 1337, 0, 1318, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 1372, 382,
	383, 384, 1321, 1319, 1320, 1327, 1323, 1322, 1326, 385,
	386, 387, 388, 389, 1354, 390, 392, 1348, 1347, 1264,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 1339, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 1270,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 1362, 1363, 426, 427, 1284, 319, 0, 0,
	0, 0, 0, 428, 429, 430, 1346, 0, 0, 0,
	431, 0, 432, 433, 434, 0, 435, 436, 0, 1373,
	437, 438, 439, 1359, 1360, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 0, 449, 1369, 0, 1294, 450,
	0, 451, 452, 453, 454, 455, 456, 457, 1332, 1333,
	1336, 553, 1375, 458, 459, 460, 0, 461, 462, 463,
	464, 465, 0, 0, 0, 466, 467, 468, 469, 0,
	1274, 320, 322, 1374, 768, 470, 554, 471, 1341, 1342,
	0, 1300, 0, 472, 473, 475, 1376, 1334, 1377, 474,
	476, 477, 1378, 478, 0, 0, 0, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 488, 487, 0, 490,
	1370, 489, 1379, 491, 492, 1380, 0, 493, 494, 495,
	496, 497, 498, 501, 1325, 1324, 499, 500, 502, 503,
	0, 504, 505, 507, 510, 506, 508, 509, 511, 524,
	525, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 527, 0, 526, 1381, 528, 529, 530,
	531, 532, 540, 542, 543, 538, 539, 541, 544, 545,
	547, 535, 536, 537, 1382, 546, 533, 1261, 534, 323,
	1383, 548, 549, 550, 551, 1285, 1335, 552, 1349, 555,
	556, 0, 0, 557, 0, 558, 0, 0, 560, 561,
	562, 0, 0, 563, 564, 776, 1384, 565, 1385, 1364,
	566, 567, 1271, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 0, 578, 579, 778, 580, 581, 582,
	779, 583, 584, 585, 1365, 586, 781, 587, 588, 0,
	589, 590, 591, 0, 592, 593, 594, 595, 596, 597,
	598, 599, 1345, 600, 601, 603, 602, 604, 0, 605,
	0, 606, 607, 608, 0, 0, 0, 0, 0, 609,
	610, 612, 0, 613, 614, 615, 616, 611, 617, 618,
	619, 620, 621, 622, 0, 624, 625, 623, 626, 627,
	1386, 628, 629, 630, 631, 632, 1272, 633, 0, 634,
	635, 643, 644, 645, 636, 637, 639, 646, 638, 647,
	648, 649, 650, 652, 651, 0, 654, 655, 653, 656,
	657, 658, 1328, 659, 784, 660, 640, 641, 661, 662,
	1387, 663, 664, 665, 666, 667, 668, 669, 1343, 0,
	670, 0, 671, 672, 673, 674, 675, 676, 678, 642,
	679, 684, 685, 1390, 680, 681, 682, 683, 1366, 687,
	688, 689, 690, 0, 691, 692, 1258, 686, 677, 0,
	693, 694, 695, 696, 697, 698, 0, 699, 700, 0,
	701, 1355, 1356, 1357, 1358, 0, 713, 0, 702, 704,
	705, 706, 707, 1367, 708, 1368, 1283, 709, 710, 711,
	712, 703, 714, 715, 0, 1265, 716, 717, 718, 720,
	722, 723, 719, 721, 724, 1329, 725, 0, 0, 726,
	727, 728, 794, 1352, 1389, 0, 730, 731, 729, 732,
	733, 736, 734, 735, 797, 737, 738, 739, 0, 0,
	0, 0, 740, 741, 798, 742, 743, 744, 1262, 0,
	0, 0, 0, 0, 0, 1305, 1277, 1278, 1279, 1275,
	1276, 1288, 0, 1257, 0, 0, 0, 0, 0, 0,
	1255, 1256, 324, 325, 327, 326, 328, 329, 330, 331,
	1289, 332, 333, 0, 1287, 0, 0, 0, 1331, 1293,
	0, 0, 334, 0, 335, 336, 337, 1371, 338, 339,
	340, 341, 342, 343, 344, 746, 1344, 0, 345, 1351,
	346, 1350, 0, 1361, 347, 348, 349, 350, 351, 352,
	353, 1295, 1330, 1259, 354, 1391, 1392, 753, 0, 355,
	356, 1337, 0, 1318, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 1372, 382, 383, 5501, 1321,
	1319, 1320, 1327, 1323, 1322, 1326, 385, 386, 387, 388,
	389, 1354, 390, 392, 1348, 1347, 1264, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 1339, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 1270, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 1362,
	1363, 426, 427, 1284, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 1346, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 1373, 437, 438, 439,
	1359, 1360, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 1369, 0, 1294, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 1332, 1333, 1336, 553, 1375,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 1274, 320, 322,
	1374, 768, 470, 554, 471, 1341, 1342, 0, 1300, 0,
	472, 473, 475, 1376, 1334, 1377, 474, 476, 477, 1378,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 1370, 489, 1379,
	491, 492, 1380, 0, 493, 494, 495, 496, 497, 498,
	501, 1325, 1324, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 1381, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 1382, 546, 533, 1261, 534, 323, 1383, 548, 549,
	550, 551, 1285, 1335, 552, 1349, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 1384, 565, 1385, 1364, 566, 567, 1271,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 1365, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 1345,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 1386, 628, 629,
	630, 631, 632, 1272, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 1328,
	659, 784, 660, 640, 641, 661, 662, 1387, 663, 664,
	665, 666, 667, 668, 669, 1343, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	1390, 680, 681, 682, 683, 1366, 687, 688, 689, 690,
	0, 691, 692, 1258, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 1355, 1356,
	1357, 1358, 0, 713, 0, 702, 704, 705, 706, 707,
	1367, 708, 1368, 1283, 709, 710, 711, 712, 703, 5500,
	715, 0, 1265, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 1329, 725, 0, 0, 726, 727, 728, 794,
	1352, 1389, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 0, 0, 0, 0, 740,
	741, 798, 742, 743, 744, 1262, 0, 0, 0, 0,
	0, 0, 1305, 1277, 1278, 1279, 1275, 1276, 1288, 0,
	1257, 0, 0, 0, 0, 0, 0, 1255, 1256, 324,
	325, 327, 326, 328, 329, 330, 331, 1289, 332, 333,
	0, 1287, 0, 0, 0, 1331, 1293, 0, 0, 334,
	0, 335, 336, 337, 1371, 338, 339, 340, 341, 342,
	343, 344, 5499, 1344, 0, 345, 1351, 346, 1350, 0,
	1361, 347, 348, 349, 350, 351, 352, 353, 1295, 1330,
	1259, 354, 1391, 1392, 753, 0, 355, 356, 1337, 0,
	1318, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 1372, 382, 383, 5501, 1321, 1319, 1320, 1327,
	1323, 1322, 1326, 385, 386, 387, 388, 389, 1354, 390,
	392, 1348, 1347, 1264, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	1339, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 1270, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 1362, 1363, 426, 427,
	1284, 319, 0, 0, 0, 0, 0, 428, 429, 430,
	1346, 0, 0, 0, 431, 0, 432, 433, 434, 0,
	435, 436, 0, 1373, 437, 438, 439, 1359, 1360, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 0, 449,
	1369, 0, 1294, 450, 0, 451, 452, 453, 454, 455,
	456, 457, 1332, 1333, 1336, 553, 1375, 458, 459, 460,
	0, 461, 462, 463, 464, 465, 0, 0, 0, 466,
	467, 468, 469, 0, 1274, 320, 322, 1374, 768, 470,
	554, 471, 1341, 1342, 0, 1300, 0, 472, 473, 475,
	1376, 1334, 1377, 474, 476, 477, 1378, 478, 0, 0,
	0, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	488, 487, 0, 490, 1370, 489, 1379, 491, 492, 1380,
	0, 493, 494, 495, 496, 497, 498, 501, 1325, 1324,
	499, 500, 502, 503, 0, 504, 505, 507, 510, 506,
	508, 509, 511, 524, 525, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 527, 0, 526,
	1381, 528, 529, 530, 531, 532, 540, 542, 543, 538,
	539, 541, 544, 545, 547, 535, 536, 537, 1382, 546,
	533, 1261, 534, 323, 1383, 548, 549, 550, 551, 1285,
	1335, 552, 1349, 555, 556, 0, 0, 557, 0, 558,
	0, 0, 560, 561, 562, 0, 0, 563, 564, 776,
	1384, 565, 1385, 1364, 566, 567, 1271, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 0, 578, 579,
	778, 580, 581, 582, 779, 583, 584, 585, 1365, 586,
	781, 587, 588, 0, 589, 590, 591, 0, 592, 593,
	594, 595, 596, 597, 598, 599, 1345, 600, 601, 603,
	602, 604, 0, 605, 0, 606, 607, 608, 0, 0,
	0, 0, 0, 609, 610, 612, 0, 613, 614, 615,
	616, 611, 617, 618, 619, 620, 621, 622, 0, 624,
	625, 623, 626, 627, 1386, 628, 629, 630, 631, 632,
	1272, 633, 0, 634, 635, 643, 644, 645, 636, 637,
	639, 646, 638, 647, 648, 649, 650, 652, 651, 0,
	654, 655, 653, 656, 657, 658, 1328, 659, 784, 660,
	640, 641, 661, 662, 1387, 663, 664, 665, 666, 667,
	668, 669, 1343, 0, 670, 0, 671, 672, 673, 674,
	675, 676, 678, 642, 679, 684, 685, 1390, 680, 681,
	682, 683, 1366, 687, 688, 689, 690, 0, 691, 692,
	1258, 686, 677, 0, 693, 694, 695, 696, 697, 698,
	0, 699, 700, 0, 701, 1355, 1356, 1357, 1358, 0,
	713, 0, 702, 704, 705, 706, 707, 1367, 708, 1368,
	1283, 709, 710, 711, 712, 703, 5500, 715, 0, 1265,
	716, 717, 718, 720, 722, 723, 719, 721, 724, 1329,
	725, 0, 0, 726, 727, 728, 794, 1352, 1389, 0,
	730, 731, 729, 732, 733, 736, 734, 735, 797, 737,
	738, 739, 0, 0, 0, 0, 740, 741, 798, 742,
	743, 744, 1262, 0, 0, 0, 0, 0, 0, 1305,
	1277, 1278, 1279, 1275, 1276, 1288, 0, 1257, 0, 0,
	0, 0, 0, 0, 1255, 1256, 324, 325, 327, 326,
	328, 329, 330, 331, 1289, 332, 333, 0, 1287, 0,
	0, 0, 1331, 1293, 0, 0, 334, 0, 335, 336,
	337, 1371, 338, 339, 340, 341, 342, 343, 344, 746,
	1344, 0, 345, 1351, 346, 1350, 0, 1361, 347, 348,
	349, 350, 351, 352, 353, 1295, 1330, 1259, 354, 1391,
	1392, 753, 0, 355, 356, 1337, 0, 1318, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 1372,
	382, 5073, 384, 1321, 1319, 1320, 1327, 1323, 1322, 1326,
	385, 386, 387, 388, 389, 1354, 390, 392, 1348, 1347,
	1264, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 1339, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	1270, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 1362, 1363, 426, 427, 1284, 319, 0,
	0, 0, 0, 0, 428, 429, 430, 1346, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	1373, 437, 438, 439, 1359, 1360, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 0, 449, 1369, 0, 5074,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 1332,
	1333, 1336, 553, 1375, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 1274, 320, 322, 1374, 768, 470, 554, 471, 1341,
	1342, 0, 1300, 0, 472, 473, 475, 1376, 1334, 1377,
	474, 476, 477, 1378, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 1370, 489, 1379, 491, 492, 1380, 0, 493, 494,
	495, 496, 497, 498, 501, 1325, 1324, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 1381, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 1382, 546, 533, 1261, 534,
	323, 1383, 548, 549, 550, 551, 1285, 1335, 552, 1349,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 776, 1384, 565, 1385,
	1364, 566, 567, 1271, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 778, 580, 581,
	582, 779, 583, 584, 585, 1365, 586, 781, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 1345, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 1386, 628, 629, 630, 5072, 632, 1272, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 650, 652, 651, 0, 654, 655, 653,
	656, 657, 658, 1328, 659, 784, 660, 640, 641, 661,
	662, 1387, 663, 664, 665, 666, 667, 668, 669, 1343,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 1390, 680, 681, 682, 683, 1366,
	687, 688, 689, 690, 0, 691, 692, 1258, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 1355, 1356, 1357, 1358, 0, 713, 0, 702,
	704, 705, 706, 707, 1367, 708, 1368, 1283, 709, 710,
	711, 712, 703, 714, 715, 0, 1265, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 1329, 725, 0, 0,
	726, 727, 728, 794, 1352, 1389, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 797, 737, 738, 739, 0,
	0, 0, 0, 740, 741, 798, 742, 743, 744, 1262,
	0, 0, 0, 0, 0, 0, 1305, 1277, 1278, 1279,
	3670, 3671, 1288, 0, 1257, 0, 0, 0, 0, 0,
	0, 1255, 1256, 324, 325, 327, 326, 328, 329, 330,
	331, 1289, 332, 333, 0, 1287, 0, 0, 0, 1331,
	1293, 0, 0, 334, 0, 335, 336, 337, 1371, 338,
	339, 340, 341, 342, 343, 344, 746, 1344, 0, 345,
	1351, 346, 1350, 0, 1361, 347, 348, 349, 350, 351,
	352, 353, 1295, 1330, 1259, 354, 1391, 1392, 753, 0,
	355, 356, 1337, 0, 1318, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 1372, 382, 383, 384,
	1321, 1319, 1320, 1327, 1323, 1322, 1326, 385, 386, 387,
	388, 389, 1354, 390, 392, 1348, 1347, 1264, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 1339, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 1270, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	1362, 1363, 426, 427, 1284, 319, 0, 0, 0, 0,
	0, 428, 429, 430, 1346, 0, 0, 0, 431, 0,
	432, 433, 434, 0, 435, 436, 0, 1373, 437, 438,
	439, 1359, 1360, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 0, 449, 1369, 0, 1294, 450, 0, 451,
	452, 453, 454, 455, 456, 457, 1332, 1333, 1336, 553,
	1375, 458, 459, 460, 0, 461, 462, 463, 464, 465,
	0, 0, 0, 466, 467, 468, 469, 0, 1274, 320,
	322, 1374, 768, 470, 554, 471, 1341, 1342, 0, 1300,
	0, 472, 473, 475, 1376, 1334, 1377, 474, 476, 477,
	1378, 478, 0, 0, 0, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 488, 487, 0, 490, 1370, 489,
	1379, 491, 492, 1380, 0, 493, 494, 495, 496, 497,
	498, 501, 1325, 1324, 499, 500, 502, 503, 0, 504,
	505, 507, 510, 506, 508, 509, 511, 524, 525, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 527, 0, 526, 1381, 528, 529, 530, 531, 532,
	540, 542, 543, 538, 539, 541, 544, 545, 547, 535,
	536, 537, 1382, 546, 533, 1261, 534, 323, 1383, 548,
	549, 550, 551, 1285, 1335, 552, 1349, 555, 556, 0,
	0, 557, 0, 558, 0, 0, 560, 561, 562, 0,
	0, 563, 564, 776, 1384, 565, 1385, 1364, 566, 567,
	1271, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 0, 578, 579, 778, 580, 581, 582, 779, 583,
	584, 585, 1365, 586, 781, 587, 588, 0, 589, 590,
	591, 0, 592, 593, 594, 595, 596, 597, 598, 599,
	1345, 600, 601, 603, 602, 604, 0, 605, 0, 606,
	607, 608, 0, 0, 0, 0, 0, 609, 610, 612,
	0, 613, 614, 615, 616, 611, 617, 618, 619, 620,
	621, 622, 0, 624, 625, 623, 626, 627, 1386, 628,
	629, 630, 631, 632, 1272, 633, 0, 634, 635, 643,
	644, 645, 636, 637, 639, 646, 638, 647, 648, 649,
	650, 652, 651, 0, 654, 655, 653, 656, 657, 658,
	1328, 659, 784, 660, 640, 641, 661, 662, 1387, 663,
	664, 665, 666, 667, 668, 669, 1343, 0, 670, 0,
	671, 672, 673, 674, 675, 676, 678, 642, 679, 684,
	685, 1390, 680, 681, 682, 683, 1366, 687, 688, 689,
	690, 0, 691, 692, 1258, 686, 677, 0, 693, 694,
	695, 696, 697, 698, 0, 699, 700, 0, 701, 1355,
	1356, 1357, 1358, 0, 713, 0, 702, 704, 705, 706,
	707, 1367, 708, 1368, 1283, 709, 710, 711, 712, 703,
	714, 715, 0, 1265, 716, 717, 718, 720, 722, 723,
	719, 721, 724, 1329, 725, 0, 0, 726, 727, 728,
	794, 1352, 1389, 0, 730, 731, 729, 732, 733, 736,
	734, 735, 797, 737, 738, 739, 0, 0, 0, 0,
	740, 741, 798, 742, 743, 744, 1262, 0, 0, 0,
	0, 0, 0, 1305, 1277, 1278, 1279, 3668, 3669, 1288,
	0, 1257, 0, 0, 0, 0, 0, 0, 1255, 1256,
	324, 325, 327, 326, 328, 329, 330, 331, 1289, 332,
	333, 0, 1287, 0, 0, 0, 1331, 1293, 0, 0,
	334, 0, 335, 336, 337, 1371, 338, 339, 340, 341,
	342, 343, 344, 746, 1344, 0, 345, 1351, 346, 1350,
	0, 1361, 347, 348, 349, 350, 351, 352, 353, 1295,
	1330, 1259, 354, 1391, 1392, 753, 0, 355, 356, 1337,
	0, 1318, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 1372, 382, 383, 384, 1321, 1319, 1320,
	1327, 1323, 1322, 1326, 385, 386, 387, 388, 389, 1354,
	390, 392, 1348, 1347, 1264, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 1339, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 1270, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 1362, 1363, 426,
	427, 1284, 319, 0, 0, 0, 0, 0, 428, 429,
	430, 1346, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 1373, 437, 438, 439, 1359, 1360,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 1369, 0, 1294, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 1332, 1333, 1336, 553, 1375, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 1274, 320, 322, 1374, 768,
	470, 554, 471, 1341, 1342, 0, 1300, 0, 472, 473,
	475, 1376, 1334, 1377, 474, 476, 477, 1378, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 1370, 489, 1379, 491, 492,
	1380, 0, 493, 494, 495, 496, 497, 498, 501, 1325,
	1324, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 1381, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 1382,
	546, 533, 1261, 534, 323, 1383, 548, 549, 550, 551,
	1285, 1335, 552, 1349, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 1384, 565, 1385, 1364, 566, 567, 1271, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 1365,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 1345, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 1386, 628, 629, 630, 631,
	632, 1272, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 1328, 659, 784,
	660, 640, 641, 661, 662, 1387, 663, 664, 665, 666,
	667, 668, 669, 1343, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 1390, 680,
	681, 682, 683, 1366, 687, 688, 689, 690, 0, 691,
	692, 1258, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 1355, 1356, 1357, 1358,
	0, 713, 0, 702, 704, 705, 706, 707, 1367, 708,
	1368, 1283, 709, 710, 711, 712, 703, 714, 715, 0,
	1265, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	1329, 725, 0, 0, 726, 727, 728, 794, 1352, 1389,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 0, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 1262, 0, 0, 0, 0, 0, 0,
	1305, 1277, 1278, 1279, 1275, 1276, 1288, 0, 1257, 0,
	0, 0, 0, 0, 0, 1255, 1256, 324, 325, 327,
	326, 328, 329, 330, 331, 1289, 332, 333, 0, 1287,
	0, 0, 0, 1331, 1293, 0, 0, 334, 0, 335,
	336, 337, 1371, 338, 339, 340, 341, 342, 343, 344,
	746, 1344, 0, 345, 1351, 346, 1350, 0, 1361, 347,
	348, 349, 350, 351, 352, 353, 1295, 1330, 1259, 354,
	1391, 1392, 753, 0, 355, 356, 1337, 0, 1318, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	1372, 382, 383, 384, 1321, 1319, 1320, 1327, 1323, 1322,
	1326, 385, 386, 387, 388, 389, 1354, 390, 392, 1348,
	1347, 1264, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 1339, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 1270, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 1362, 1363, 426, 427, 1284, 319,
	0, 0, 0, 0, 0, 428, 429, 430, 1346, 0,
	0, 0, 431, 0, 432, 433, 434, 0, 435, 436,
	0, 1373, 437, 438, 439, 1359, 1360, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 0, 449, 1369, 0,
	1294, 450, 0, 451, 452, 453, 454, 455, 456, 457,
	1332, 1333, 1336, 553, 1375, 458, 459, 460, 0, 461,
	462, 463, 464, 465, 0, 0, 0, 466, 467, 468,
	469, 0, 1274, 320, 322, 1374, 768, 470, 554, 471,
	1341, 1342, 0, 1300, 0, 472, 473, 475, 1376, 1334,
	1377, 474, 476, 477, 1378, 478, 0, 0, 0, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 488, 487,
	0, 490, 1370, 489, 1379, 491, 492, 1380, 0, 493,
	494, 495, 496, 497, 498, 501, 1325, 1324, 499, 500,
	502, 503, 0, 504, 505, 507, 510, 506, 508, 509,
	511, 524, 525, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 527, 0, 526, 1381, 528,
	529, 530, 531, 532, 540, 542, 543, 538, 539, 541,
	544, 545, 547, 535, 536, 537, 1382, 546, 533, 1261,
	534, 323, 1383, 548, 549, 550, 551, 1285, 1335, 552,
	1349, 555, 556, 0, 0, 557, 0, 558, 0, 0,
	560, 561, 562, 0, 0, 563, 564, 776, 1384, 565,
	1385, 1364, 566, 567, 1271, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 0, 578, 579, 778, 580,
	581, 582, 779, 583, 584, 585, 1365, 586, 781, 587,
	588, 0, 589, 590, 591, 0, 592, 593, 594, 595,
	596, 597, 598, 599, 1345, 600, 601, 603, 602, 604,
	0, 605, 0, 606, 607, 608, 0, 0, 0, 0,
	0, 609, 610, 612, 0, 613, 614, 615, 616, 611,
	617, 618, 619, 620, 621, 622, 0, 624, 625, 623,
	626, 627, 1386, 628, 629, 630, 631, 632, 1272, 633,
	0, 634, 635, 643, 644, 645, 636, 637, 639, 646,
	638, 647, 648, 649, 650, 652, 651, 0, 654, 655,
	653, 656, 657, 658, 1328, 659, 784, 660, 640, 641,
	661, 662, 1387, 663, 664, 665, 666, 667, 668, 669,
	1343, 0, 670, 0, 671, 672, 673, 674, 675, 676,
	678, 642, 679, 684, 685, 1390, 680, 681, 682, 683,
	1366, 687, 688, 689, 690, 0, 691, 692, 1258, 686,
	677, 0, 693, 694, 695, 696, 697, 698, 0, 699,
	700, 0, 701, 1355, 1356, 1357, 1358, 0, 713, 0,
	702, 704, 705, 706, 707, 1367, 708, 1368, 1283, 709,
	710, 711, 712, 703, 714, 715, 0, 1265, 716, 717,
	718, 720, 722, 723, 719, 721, 724, 1329, 725, 0,
	0, 726, 727, 728, 794, 1352, 1389, 0, 730, 731,
	729, 732, 733, 736, 734, 735, 797, 737, 738, 739,
	0, 0, 0, 0, 740, 741, 798, 742, 743, 744,
	1262, 0, 0, 0, 0, 0, 0, 1305, 1277, 1278,
	1279, 1275, 1276, 1288, 0, 1257, 0, 0, 0, 0,
	0, 0, 2811, 2812, 324, 325, 327, 326, 328, 329,
	330, 331, 1289, 332, 333, 0, 1287, 0, 0, 0,
	1331, 1293, 0, 0, 334, 0, 335, 336, 337, 1371,
	338, 339, 340, 341, 342, 343, 344, 746, 1344, 0,
	345, 1351, 346, 1350, 0, 1361, 347, 348, 349, 350,
	351, 352, 353, 1295, 1330, 0, 354, 1391, 1392, 753,
	0, 355, 356, 1337, 0, 1318, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 1372, 382, 383,
	384, 1321, 1319, 1320, 1327, 1323, 1322, 1326, 385, 386,
	387, 388, 389, 1354, 390, 392, 1348, 1347, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 1339, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 1270, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 1362, 1363, 426, 427, 1284, 319, 0, 0, 0,
	0, 0, 428, 429, 430, 1346, 0, 0, 0, 431,
	0, 432, 433, 434, 0, 435, 436, 0, 1373, 437,
	438, 439, 1359, 1360, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 0, 449, 1369, 0, 1294, 450, 0,
	451, 452, 453, 454, 455, 456, 457, 1332, 1333, 1336,
	553, 1375, 458, 459, 460, 0, 461, 462, 463, 464,
	465, 0, 0, 0, 466, 467, 468, 469, 0, 1274,
	320, 322, 1374, 768, 470, 554, 471, 1341, 1342, 0,
	1300, 0, 472, 473, 475, 1376, 1334, 1377, 474, 476,
	477, 1378, 478, 0, 0, 0, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 488, 487, 0, 490, 1370,
	489, 1379, 491, 492, 1380, 0, 493, 494, 495, 496,
	497, 498, 501, 1325, 1324, 499, 500, 502, 503, 0,
	504, 505, 507, 510, 506, 508, 509, 511, 524, 525,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 527, 0, 526, 1381, 528, 529, 530, 531,
	532, 540, 542, 543, 538, 539, 541, 544, 545, 547,
	535, 536, 537, 1382, 546, 533, 0, 534, 323, 1383,
	548, 549, 550, 551, 1285, 1335, 552, 1349, 555, 556,
	0, 0, 557, 0, 558, 0, 0, 560, 561, 562,
	0, 0, 563, 564, 776, 1384, 565, 1385, 1364, 566,
	567, 1271, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 578, 579, 778, 580, 581, 582, 779,
	583, 584, 585, 1365, 586, 781, 587, 588, 0, 589,
	590, 591, 0, 592, 593, 594, 595, 596, 597, 598,
	599, 1345, 600, 601, 603, 602, 604, 0, 605, 0,
	606, 607, 608, 0, 0, 0, 0, 0, 609, 610,
	612, 0, 613, 614, 615, 616, 611, 617, 618, 619,
	620, 621, 622, 0, 624, 625, 623, 626, 627, 1386,
	628, 629, 630, 631, 632, 1272, 633, 0, 634, 635,
	643, 644, 645, 636, 637, 639, 646, 638, 647, 648,
	649, 650, 652, 651, 0, 654, 655, 653, 656, 657,
	658, 1328, 659, 784, 660, 640, 641, 661, 662, 1387,
	663, 664, 665, 666, 667, 668, 669, 1343, 0, 670,
	0, 671, 672, 673, 674, 675, 676, 678, 642, 679,
	684, 685, 1390, 680, 681, 682, 683, 1366, 687, 688,
	689, 690, 0, 691, 692, 0, 686, 677, 0, 693,
	694, 695, 696, 697, 698, 0, 699, 700, 0, 701,
	1355, 1356, 1357, 1358, 0, 713, 0, 702, 704, 705,
	706, 707, 1367, 708, 1368, 1283, 709, 710, 711, 712,
	703, 714, 715, 0, 0, 716, 717, 718, 720, 722,
	723, 719, 721, 724, 1329, 725, 0, 0, 726, 727,
	728, 794, 1352, 1389, 0, 730, 731, 729, 732, 733,
	736, 734, 735, 797, 737, 738, 739, 0, 0, 0,
	0, 740, 741, 798, 742, 743, 744, 0, 0, 0,
	0, 0, 0, 0, 1305, 1277, 1278, 1279, 1275, 1276,
	1288, 0, 3075, 0, 0, 0, 0, 0, 0, 3073,
	3074, 324, 325, 327, 326, 328, 329, 330, 331, 1289,
	332, 333, 0, 1287, 0, 0, 0, 1331, 1293, 0,
	0, 334, 0, 335, 336, 337, 1371, 338, 339, 340,
	341, 342, 343, 344, 746, 1344, 0, 345, 1351, 346,
	1350, 0, 1361, 347, 348, 349, 350, 351, 352, 353,
	1295, 1330, 0, 354, 1391, 1392, 753, 0, 355, 356,
	1337, 0, 1318, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 1372, 382, 383, 384, 1321, 1319,
	1320, 1327, 1323, 1322, 1326, 385, 386, 387, 388, 389,
	1354, 390, 392, 1348, 1347, 0, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 1339, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 1270, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 1362, 1363,
	426, 427, 1284, 319, 0, 0, 0, 0, 0, 428,
	429, 430, 1346, 0, 0, 0, 431, 0, 432, 433,
	434, 0, 435, 436, 0, 1373, 437, 438, 439, 1359,
	1360, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	0, 449, 1369, 0, 1294, 450, 0, 451, 452, 453,
	454, 455, 456, 457, 1332, 1333, 1336, 553, 1375, 458,
	459, 460, 0, 461, 462, 463, 464, 465, 0, 0,
	0, 466, 467, 468, 469, 0, 1274, 320, 322, 1374,
	768, 470, 554, 471, 1341, 1342, 0, 1300, 0, 472,
	473, 475, 1376, 1334, 1377, 474, 476, 477, 1378, 478,
	0, 0, 0, 479, 480, 481, 482, 483, 484, 485,
	0, 486, 488, 487, 0, 490, 1370, 489, 1379, 491,
	492, 1380, 0, 493, 494, 495, 496, 497, 498, 501,
	1325, 1324, 499, 500, 502, 503, 0, 504, 505, 507,
	510, 506, 508, 509, 511, 524, 525, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 527,
	0, 526, 1381, 528, 529, 530, 531, 532, 540, 542,
	543, 538, 539, 541, 544, 545, 547, 535, 536, 537,
	1382, 546, 533, 0, 534, 323, 1383, 548, 549, 550,
	551, 1285, 1335, 552, 1349, 555, 556, 0, 0, 557,
	0, 558, 0, 0, 560, 561, 562, 0, 0, 563,
	564, 776, 1384, 565, 1385, 1364, 566, 567, 559, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	578, 579, 778, 580, 581, 582, 779, 583, 584, 585,
	1365, 586, 781, 587, 588, 0, 589, 590, 591, 0,
	592, 593, 594, 595, 596, 597, 598, 599, 1345, 600,
	601, 603, 602, 604, 0, 605, 0, 606, 607, 608,
	0, 0, 0, 0, 0, 609, 610, 612, 0, 613,
	614, 615, 616, 611, 617, 618, 619, 620, 621, 622,
	0, 624, 625, 623, 626, 627, 1386, 628, 629, 630,
	631, 632, 3663, 3664, 0, 634, 635, 643, 644, 645,
	636, 637, 639, 646, 638, 647, 648, 649, 650, 652,
	651, 0, 654, 655, 653, 656, 657, 658, 1328, 659,
	784, 660, 640, 641, 661, 662, 1387, 663, 664, 665,
	666, 667, 668, 669, 1343, 0, 670, 0, 671, 672,
	673, 674, 675, 676, 678, 642, 679, 684, 685, 1390,
	680, 681, 682, 683, 1366, 687, 688, 689, 690, 0,
	691, 692, 0, 686, 677, 0, 693, 694, 695, 696,
	697, 698, 0, 699, 700, 0, 701, 1355, 1356, 1357,
	1358, 0, 713, 0, 702, 704, 705, 706, 707, 1367,
	708, 1368, 1283, 709, 710, 711, 712, 703, 714, 715,
	0, 0, 716, 717, 718, 720, 722, 723, 719, 721,
	724, 1329, 725, 0, 0, 726, 727, 728, 794, 1352,
	1389, 0, 730, 731, 729, 732, 733, 736, 734, 735,
	797, 737, 738, 739, 0, 0, 0, 0, 740, 741,
	798, 742, 743, 744, 0, 0, 0, 0, 0, 0,
	0, 1305, 1277, 1278, 1279, 1275, 1276, 1288, 0, 0,
	0, 0, 0, 0, 0, 0, 2395, 2396, 324, 325,
	327, 326, 328, 329, 330, 331, 1289, 332, 333, 0,
	1287, 0, 0, 0, 1331, 1293, 0, 0, 334, 0,
	335, 336, 337, 1371, 338, 339, 340, 341, 342, 343,
	344, 0, 1344, 0, 345, 1351, 346, 1350, 0, 1361,
	347, 348, 349, 350, 351, 352, 353, 1295, 1330, 1259,
	354, 1391, 1392, 753, 0, 355, 356, 1337, 0, 1318,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 1372, 382, 383, 5501, 1321, 1319, 1320, 1327, 1323,
	1322, 1326, 385, 386, 387, 388, 389, 1354, 390, 392,
	1348, 1347, 1264, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 1339,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 1270, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 1362, 1363, 426, 427, 1284,
	319, 0, 0, 0, 0, 0, 428, 429, 430, 1346,
	0, 0, 0, 431, 0, 432, 433, 434, 0, 435,
	436, 0, 1373, 437, 438, 439, 1359, 1360, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 0, 449, 1369,
	0, 1294, 450, 0, 451, 452, 453, 454, 455, 456,
	457, 1332, 1333, 1336, 553, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 465, 0, 0, 0, 466, 467,
	468, 469, 0, 1274, 320, 322, 1374, 768, 470, 554,
	471, 1341, 1342, 0, 1300, 0, 472, 473, 475, 0,
	1334, 0, 474, 476, 477, 1378, 478, 0, 0, 0,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 488,
	487, 0, 490, 1370, 489, 1379, 491, 492, 0, 0,
	493, 494, 495, 496, 497, 498, 501, 1325, 1324, 499,
	500, 502, 503, 0, 504, 505, 507, 510, 506, 508,
	509, 511, 524, 525, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 527, 0, 526, 1381,
	528, 529, 530, 531, 532, 540, 542, 543, 538, 539,
	541, 544, 545, 547, 535, 536, 537, 1382, 546, 533,
	1261, 534, 323, 0, 548, 549, 550, 551, 1285, 1335,
	552, 1349, 555, 556, 0, 0, 557, 0, 558, 0,
	0, 560, 561, 562, 0, 0, 563, 564, 776, 1384,
	565, 1385, 1364, 566, 567, 1271, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 578, 579, 778,
	580, 581, 582, 779, 583, 584, 585, 1365, 586, 781,
	587, 588, 0, 589, 590, 591, 0, 592, 593, 594,
	595, 596, 597, 598, 599, 1345, 600, 601, 603, 602,
	604, 0, 605, 0, 606, 607, 608, 0, 0, 0,
	0, 0, 609, 610, 612, 0, 613, 614, 615, 616,
	611, 617, 618, 619, 620, 621, 622, 0, 624, 625,
	623, 626, 627, 1386, 628, 629, 630, 631, 632, 1272,
	633, 0, 634, 635, 643, 644, 645, 636, 637, 639,
	646, 638, 647, 648, 649, 650, 652, 651, 0, 654,
	655, 653, 656, 657, 658, 1328, 659, 784, 660, 640,
	641, 661, 662, 0, 663, 664, 665, 666, 667, 668,
	669, 1343, 0, 670, 0, 671, 672, 673, 674, 675,
	676, 678, 642, 679, 684, 685, 1390, 680, 681, 682,
	683, 1366, 687, 688, 689, 690, 0, 691, 692, 1258,
	686, 677, 0, 693, 694, 695, 696, 697, 698, 0,
	699, 700, 0, 701, 1355, 1356, 1357, 1358, 0, 713,
	0, 702, 704, 705, 706, 707, 1367, 708, 1368, 1283,
	709, 710, 711, 712, 703, 5500, 715, 0, 1265, 716,
	717, 718, 720, 722, 723, 719, 721, 724, 1329, 725,
	0, 0, 726, 727, 728, 794, 1352, 1389, 0, 730,
	731, 729, 732, 733, 736, 734, 735, 797, 737, 738,
	739, 0, 0, 0, 0, 740, 741, 798, 742, 743,
	744, 0, 0, 0, 0, 0, 3094, 0, 1305, 1277,
	1278, 1279, 1275, 1276, 1288, 0, 0, 0, 0, 0,
	0, 0, 0, 1255, 1256, 324, 325, 327, 326, 328,
	329, 330, 331, 1289, 332, 333, 0, 1287, 0, 0,
	0, 1331, 1293, 0, 0, 334, 0, 335, 336, 337,
	1371, 338, 339, 340, 341, 342, 343, 344, 746, 1344,
	0, 345, 1351, 346, 1350, 0, 1361, 347, 348, 349,
	350, 351, 352, 353, 0, 1330, 0, 354, 1391, 1392,
	753, 0, 355, 356, 1337, 0, 1318, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 1372, 382,
	383, 384, 1321, 1319, 1320, 1327, 1323, 1322, 1326, 385,
	386, 387, 388, 389, 1354, 390, 392, 1348, 1347, 0,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 1339, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 757,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 1362, 1363, 426, 427, 1284, 319, 0, 0,
	0, 0, 0, 428, 429, 430, 1346, 0, 0, 0,
	431, 0, 432, 433, 434, 0, 435, 436, 0, 1373,
	437, 438, 439, 1359, 1360, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 0, 449, 1369, 0, 1294, 450,
	0, 451, 452, 453, 454, 455, 456, 457, 1332, 1333,
	1336, 553, 1375, 458, 459, 460, 0, 461, 462, 463,
	464, 465, 0, 0, 0, 466, 467, 468, 469, 0,
	1274, 320, 322, 1374, 768, 470, 554, 471, 1341, 1342,
	0, 1300, 0, 472, 473, 475, 1376, 1334, 1377, 474,
	476, 477, 1378, 478, 0, 0, 0, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 488, 487, 0, 490,
	1370, 489, 1379, 491, 492, 1380, 0, 493, 494, 495,
	496, 497, 498, 501, 1325, 1324, 499, 500, 502, 503,
	0, 504, 505, 507, 510, 506, 508, 509, 511, 524,
	525, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 527, 0, 526, 1381, 528, 529, 530,
	531, 532, 540, 542, 543, 538, 539, 541, 544, 545,
	547, 535, 536, 537, 1382, 546, 533, 0, 534, 323,
	1383, 548, 549, 550, 551, 1285, 1335, 552, 1349, 555,
	556, 0, 0, 557, 0, 558, 0, 0, 560, 561,
	562, 0, 0, 563, 564, 776, 1384, 565, 1385, 1364,
	566, 567, 559, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 0, 578, 579, 778, 580, 581, 582,
	779, 583, 584, 585, 1365, 586, 781, 587, 588, 0,
	589, 590, 591, 0, 592, 593, 594, 595, 596, 597,
	598, 599, 1345, 600, 601, 603, 602, 604, 0, 605,
	0, 606, 607, 608, 0, 0, 0, 0, 0, 609,
	610, 612, 0, 613, 614, 615, 616, 611, 617, 618,
	619, 620, 621, 622, 0, 624, 625, 623, 626, 627,
	1386, 628, 629, 630, 631, 632, 1272, 633, 0, 634,
	635, 643, 644, 645, 636, 637, 639, 646, 638, 647,
	648, 649, 650, 652, 651, 0, 654, 655, 653, 656,
	657, 658, 1328, 659, 784, 660, 640, 641, 661, 662,
	1387, 663, 664, 665, 666, 667, 668, 669, 1343, 0,
	670, 0, 671, 672, 673, 674, 675, 676, 678, 642,
	679, 684, 685, 1390, 680, 681, 682, 683, 1366, 687,
	688, 689, 690, 0, 691, 692, 0, 686, 677, 0,
	693, 694, 695, 696, 697, 698, 0, 699, 700, 0,
	701, 1355, 1356, 1357, 1358, 0, 713, 0, 702, 704,
	705, 706, 707, 1367, 708, 1368, 1283, 709, 710, 711,
	712, 703, 714, 715, 0, 0, 716, 717, 718, 720,
	722, 723, 719, 721, 724, 1329, 725, 0, 0, 726,
	727, 728, 794, 1352, 1389, 0, 730, 731, 729, 732,
	733, 736, 734, 735, 797, 737, 738, 739, 0, 0,
	0, 0, 740, 741, 798, 742, 743, 744, 0, 0,
	1728, 0, 1305, 1277, 1278, 1279, 1275, 1276, 1288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	1289, 0, 0, 0, 1287, 1331, 1293, 0, 0, 334,
	0, 335, 336, 337, 1371, 338, 339, 340, 341, 342,
	343, 344, 746, 1344, 0, 345, 1351, 346, 1350, 0,
	1361, 347, 348, 349, 350, 351, 352, 353, 0, 1330,
	0, 354, 1391, 1392, 753, 0, 355, 356, 1337, 0,
	1318, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 1372, 382, 383, 384, 1321, 1319, 1320, 1327,
	1323, 1322, 1326, 385, 386, 387, 388, 389, 1354, 390,
	392, 1348, 1347, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	1339, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 757, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 1362, 1363, 426, 427,
	1284, 319, 0, 0, 0, 0, 0, 428, 429, 430,
	1346, 0, 0, 0, 431, 0, 432, 433, 434, 0,
	435, 436, 0, 1373, 437, 438, 439, 1359, 1360, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 0, 449,
	1369, 0, 1294, 450, 0, 451, 452, 453, 454, 455,
	456, 457, 1332, 1333, 1336, 553, 1375, 458, 459, 460,
	0, 461, 462, 463, 464, 465, 0, 0, 0, 466,
	467, 468, 469, 0, 1274, 320, 322, 1374, 768, 470,
	554, 471, 1341, 1342, 0, 1300, 0, 472, 473, 475,
	1376, 1334, 1377, 474, 476, 477, 1378, 478, 0, 0,
	0, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	488, 487, 0, 490, 1370, 489, 1379, 491, 492, 1380,
	0, 493, 494, 495, 496, 497, 498, 501, 1325, 1324,
	499, 500, 502, 503, 0, 504, 505, 507, 510, 506,
	508, 509, 511, 524, 525, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 527, 0, 526,
	1381, 528, 529, 530, 531, 532, 540, 542, 543, 538,
	539, 541, 544, 545, 547, 535, 536, 537, 1382, 546,
	533, 0, 534, 323, 1383, 548, 549, 550, 551, 1285,
	1335, 552, 1349, 555, 556, 0, 0, 557, 0, 558,
	0, 0, 560, 561, 562, 0, 0, 563, 564, 776,
	1384, 565, 1385, 1364, 566, 567, 559, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 0, 578, 579,
	778, 580, 581, 582, 779, 583, 584, 585, 1365, 586,
	781, 587, 588, 0, 589, 590, 591, 0, 592, 593,
	594, 595, 596, 597, 598, 599, 1345, 600, 601, 603,
	602, 604, 0, 605, 0, 606, 607, 608, 0, 0,
	0, 0, 0, 609, 610, 612, 0, 613, 614, 615,
	616, 611, 617, 618, 619, 620, 621, 622, 0, 624,
	625, 623, 626, 627, 1386, 628, 629, 630, 631, 632,
	1272, 633, 0, 634, 635, 643, 644, 645, 636, 637,
	639, 646, 638, 647, 648, 649, 650, 652, 651, 0,
	654, 655, 653, 656, 657, 658, 1328, 659, 784, 660,
	640, 641, 661, 662, 1387, 663, 664, 665, 666, 667,
	668, 669, 1343, 0, 670, 0, 671, 672, 673, 674,
	675, 676, 678, 642, 679, 684, 685, 1390, 680, 681,
	682, 683, 1366, 687, 688, 689, 690, 0, 691, 692,
	0, 686, 677, 0, 693, 694, 695, 696, 697, 698,
	0, 699, 700, 0, 701, 1355, 1356, 1357, 1358, 0,
	713, 0, 702, 704, 705, 706, 707, 1367, 708, 1368,
	1283, 709, 710, 711, 712, 703, 714, 715, 0, 0,
	716, 717, 718, 720, 722, 723, 719, 721, 724, 1329,
	725, 0, 0, 726, 727, 728, 794, 1352, 1389, 0,
	730, 731, 729, 732, 733, 736, 734, 735, 797, 737,
	738, 739, 0, 0, 0, 0, 740, 741, 798, 742,
	743, 744, 1246, 0, 1430, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 327, 326, 328, 329, 330, 331, 0,
	332, 333, 0, 0, 1289, 0, 0, 1331, 1287, 0,
	0, 334, 0, 335, 336, 337, 1371, 338, 339, 340,
	341, 342, 343, 344, 746, 747, 0, 345, 748, 346,
	749, 0, 750, 347, 348, 349, 350, 351, 352, 353,
	0, 1330, 0, 354, 751, 752, 753, 0, 355, 356,
	1337, 0, 1318, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 1372, 382, 383, 384, 1321, 1319,
	1320, 1327, 1323, 1322, 1326, 385, 386, 387, 388, 389,
	0, 390, 392, 755, 756, 0, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 757, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 1362, 1363,
	426, 427, 0, 319, 0, 0, 0, 0, 0, 428,
	429, 430, 760, 0, 0, 0, 431, 0, 432, 433,
	434, 0, 435, 436, 0, 1373, 437, 438, 439, 761,
	762, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	0, 449, 1369, 0, 764, 450, 0, 451, 452, 453,
	454, 455, 456, 457, 1332, 1333, 1336, 553, 1375, 458,
	459, 460, 0, 461, 462, 463, 464, 465, 0, 0,
	0, 466, 467, 468, 469, 0, 1274, 320, 322, 1374,
	768, 470, 554, 471, 769, 770, 0, 771, 0, 472,
	473, 475, 1376, 1334, 1377, 474, 476, 477, 1378, 478,
	0, 0, 0, 479, 480, 481, 482, 483, 484, 485,
	1416, 486, 488, 487, 0, 490, 1370, 489, 1379, 491,
	492, 1380, 0, 493, 494, 495, 496, 497, 498, 501,
	1325, 1324, 499, 500, 502, 503, 0, 504, 505, 507,
	510, 506, 508, 509, 511, 524, 525, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 527,
	0, 526, 1381, 528, 529, 530, 531, 532, 540, 542,
	543, 538, 539, 541, 544, 545, 547, 535, 536, 537,
	1382, 546, 533, 0, 534, 323, 1383, 548, 549, 550,
	551, 0, 1335, 552, 775, 555, 556, 0, 0, 557,
	0, 558, 0, 1422, 560, 561, 562, 0, 0, 563,
	564, 776, 1384, 565, 1385, 1364, 566, 567, 559, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	578, 579, 778, 580, 581, 582, 779, 583, 584, 585,
	1365, 586, 781, 587, 588, 0, 589, 590, 591, 0,
	592, 593, 594, 595, 596, 597, 598, 599, 782, 600,
	601, 603, 602, 604, 0, 605, 0, 606, 607, 608,
	0, 0, 0, 0, 0, 609, 610, 612, 0, 613,
	614, 615, 616, 611, 617, 618, 619, 620, 621, 622,
	0, 624, 625, 623, 626, 627, 1386, 628, 629, 630,
	631, 632, 783, 1424, 0, 634, 635, 643, 644, 645,
	636, 637, 639, 646, 638, 647, 648, 649, 650, 652,
	651, 275, 654, 655, 653, 656, 657, 658, 1328, 659,
	784, 660, 640, 641, 661, 662, 1387, 663, 664, 665,
	666, 667, 668, 669, 785, 0, 670, 0, 671, 672,
	673, 674, 675, 676, 678, 642, 679, 684, 685, 786,
	680, 681, 682, 683, 1366, 687, 688, 689, 690, 0,
	691, 692, 0, 686, 677, 277, 693, 694, 695, 696,
	697, 698, 0, 699, 700, 0, 701, 788, 789, 790,
	791, 0, 713, 0, 702, 704, 705, 706, 707, 1367,
	708, 1368, 0, 709, 710, 711, 712, 703, 714, 715,
	0, 0, 716, 717, 718, 720, 722, 723, 719, 721,
	724, 1329, 725, 0, 0, 726, 727, 728, 1849, 795,
	796, 0, 730, 731, 729, 732, 733, 736, 734, 735,
	797, 737, 738, 739, 0, 0, 0, 269, 740, 741,
	798, 742, 743, 744, 1430, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 327, 326, 328, 329, 330, 331, 0,
	332, 333, 0, 0, 1420, 0, 2223, 1331, 0, 0,
	0, 334, 0, 335, 336, 337, 1371, 338, 339, 340,
	341, 342, 343, 344, 746, 747, 0, 345, 748, 346,
	749, 0, 750, 347, 348, 349, 350, 351, 352, 353,
	0, 1330, 0, 354, 751, 752, 753, 0, 355, 356,
	1337, 0, 1318, 0, 357, 358, 359, 360, 361, 362,
	363, 364, 0, 0, 366, 367, 368, 365, 369, 370,
	0, 371, 0, 372, 373, 374, 375, 376, 377, 378,
	0, 379, 380, 381, 1372, 382, 383, 384, 1321, 1319,
	1320, 1327, 1323, 1322, 1326, 385, 386, 387, 388, 389,
	0, 390, 392, 755, 756, 0, 395, 397, 391, 393,
	0, 396, 394, 398, 399, 0, 400, 401, 402, 0,
	0, 403, 404, 405, 0, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 757, 414, 415, 416, 418,
	420, 417, 419, 421, 422, 423, 424, 425, 1362, 1363,
	426, 427, 0, 319, 0, 0, 0, 0, 0, 428,
	429, 430, 760, 0, 0, 0, 431, 0, 432, 433,
	434, 0, 435, 436, 0, 1373, 437, 438, 439, 761,
	762, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	0, 449, 1369, 0, 764, 450, 0, 451, 452, 453,
	454, 455, 456, 457, 1332, 1333, 1336, 553, 1375, 458,
	459, 460, 0, 461, 462, 463, 464, 465, 0, 0,
	0, 466, 467, 468, 469, 0, 1274, 320, 322, 1374,
	768, 470, 554, 471, 769, 770, 0, 771, 0, 472,
	473, 475, 1376, 1334, 1377, 474, 476, 477, 1378, 478,
	0, 0, 0, 479, 480, 481, 482, 483, 484, 485,
	1416, 486, 488, 487, 0, 490, 1370, 489, 1379, 491,
	492, 1380, 0, 493, 494, 495, 496, 497, 498, 501,
	1325, 1324, 499, 500, 502, 503, 0, 504, 505, 507,
	510, 506, 508, 509, 511, 524, 525, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 527,
	0, 526, 1381, 528, 529, 530, 531, 532, 540, 542,
	543, 538, 539, 541, 544, 545, 547, 535, 536, 537,
	1382, 546, 533, 0, 534, 323, 1383, 548, 549, 550,
	551, 0, 1335, 552, 775, 555, 556, 0, 0, 557,
	0, 558, 0, 1422, 560, 561, 562, 0, 0, 563,
	564, 776, 1384, 565, 1385, 1364, 566, 567, 559, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	578, 579, 778, 580, 581, 582, 779, 583, 584, 585,
	1365, 586, 781, 587, 588, 0, 589, 590, 591, 0,
	592, 593, 594, 595, 596, 597, 598, 599, 782, 600,
	601, 603, 602, 604, 0, 605, 0, 606, 607, 608,
	0, 0, 0, 0, 0, 609, 610, 612, 0, 613,
	614, 615, 616, 611, 617, 618, 619, 620, 621, 622,
	0, 624, 625, 623, 626, 627, 1386, 628, 629, 630,
	631, 632, 783, 1424, 0, 634, 635, 643, 644, 645,
	636, 637, 639, 646, 638, 647, 648, 649, 650, 652,
	651, 275, 654, 655, 653, 656, 657, 658, 1328, 659,
	784, 660, 640, 641, 661, 662, 1387, 663, 664, 665,
	666, 667, 668, 669, 785, 0, 670, 0, 671, 672,
	673, 674, 675, 676, 678, 642, 679, 684, 685, 786,
	680, 681, 682, 683, 1366, 687, 688, 689, 690, 0,
	691, 692, 0, 686, 677, 277, 693, 694, 695, 696,
	697, 698, 0, 699, 700, 0, 701, 788, 789, 790,
	791, 0, 713, 0, 702, 704, 705, 706, 707, 1367,
	708, 1368, 0, 709, 710, 711, 712, 703, 714, 715,
	0, 0, 716, 717, 718, 720, 722, 723, 719, 721,
	724, 1329, 725, 0, 0, 726, 727, 728, 1849, 795,
	796, 0, 730, 731, 729, 732, 733, 736, 734, 735,
	797, 737, 738, 739, 0, 0, 0, 269, 740, 741,
	798, 742, 743, 744, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3833, 0,
	1430, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1420, 0, 2223, 324, 325, 327,
	326, 328, 329, 330, 331, 0, 332, 333, 0, 0,
	0, 0, 0, 1331, 0, 0, 0, 334, 0, 335,
	336, 337, 1371, 338, 339, 340, 341, 342, 343, 344,
	746, 747, 0, 345, 748, 346, 749, 0, 750, 347,
	348, 349, 350, 351, 352, 353, 0, 1330, 0, 354,
	751, 752, 753, 0, 355, 356, 1337, 0, 1318, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	1372, 382, 383, 384, 1321, 1319, 1320, 1327, 1323, 1322,
	1326, 385, 386, 387, 388, 389, 0, 390, 392, 755,
	756, 0, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 757, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 1362, 1363, 426, 427, 0, 319,
	0, 0, 0, 0, 0, 428, 429, 430, 760, 0,
	0, 0, 431, 0, 432, 433, 434, 0, 435, 436,
	0, 1373, 437, 438, 439, 761, 762, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 0, 449, 1369, 0,
	764, 450, 0, 451, 452, 453, 454, 455, 456, 457,
	1332, 1333, 1336, 553, 1375, 458, 459, 460, 0, 461,
	462, 463, 464, 465, 0, 0, 0, 466, 467, 468,
	469, 0, 1274, 320, 322, 1374, 768, 470, 554, 471,
	769, 770, 0, 771, 0, 472, 473, 475, 1376, 1334,
	1377, 474, 476, 477, 1378, 478, 0, 0, 0, 479,
	480, 481, 482, 483, 484, 485, 1416, 486, 488, 487,
	0, 490, 1370, 489, 1379, 491, 492, 1380, 0, 493,
	494, 495, 496, 497, 498, 501, 1325, 1324, 499, 500,
	502, 503, 0, 504, 505, 507, 510, 506, 508, 509,
	511, 524, 525, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 527, 0, 526, 1381, 528,
	529, 530, 531, 532, 540, 542, 543, 538, 539, 541,
	544, 545, 547, 535, 536, 537, 1382, 546, 533, 0,
	534, 323, 1383, 548, 549, 550, 551, 0, 1335, 552,
	775, 555, 556, 0, 0, 557, 0, 558, 0, 1422,
	560, 561, 562, 0, 0, 563, 564, 776, 1384, 565,
	1385, 1364, 566, 567, 559, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 0, 578, 579, 778, 580,
	581, 582, 779, 583, 584, 585, 1365, 586, 781, 587,
	588, 0, 589, 590, 591, 0, 592, 593, 594, 595,
	596, 597, 598, 599, 782, 600, 601, 603, 602, 604,
	0, 605, 0, 606, 607, 608, 0, 0, 0, 0,
	0, 609, 610, 612, 0, 613, 614, 615, 616, 611,
	617, 618, 619, 620, 621, 622, 0, 624, 625, 623,
	626, 627, 1386, 628, 629, 630, 631, 632, 783, 1424,
	0, 634, 635, 643, 644, 645, 636, 637, 639, 646,
	638, 647, 648, 649, 650, 652, 651, 0, 654, 655,
	653, 656, 657, 658, 1328, 659, 784, 660, 640, 641,
	661, 662, 1387, 663, 664, 665, 666, 667, 668, 669,
	785, 0, 670, 0, 671, 672, 673, 674, 675, 676,
	678, 642, 679, 684, 685, 786, 680, 681, 682, 683,
	1366, 687, 688, 689, 690, 0, 691, 692, 0, 686,
	677, 0, 693, 694, 695, 696, 697, 698, 0, 699,
	700, 0, 701, 788, 789, 790, 791, 0, 713, 0,
	702, 704, 705, 706, 707, 1367, 708, 1368, 0, 709,
	710, 711, 712, 703, 714, 715, 0, 0, 716, 717,
	718, 720, 722, 723, 719, 721, 724, 1329, 725, 0,
	0, 726, 727, 728, 794, 795, 796, 0, 730, 731,
	729, 732, 733, 736, 734, 735, 797, 737, 738, 739,
	0, 0, 0, 0, 740, 741, 798, 742, 743, 744,
	1412, 0, 1430, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	1420, 0, 1418, 0, 0, 1331, 0, 0, 0, 334,
	0, 335, 336, 337, 1371, 338, 339, 340, 341, 342,
	343, 344, 746, 747, 0, 345, 748, 346, 749, 0,
	750, 347, 348, 349, 350, 351, 352, 353, 0, 1330,
	0, 354, 751, 752, 753, 0, 355, 356, 1337, 0,
	1318, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 1372, 382, 383, 384, 1321, 1319, 1320, 1327,
	1323, 1322, 1326, 385, 386, 387, 388, 389, 0, 390,
	392, 755, 756, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 757, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 1362, 1363, 426, 427,
	0, 319, 0, 0, 0, 0, 0, 428, 429, 430,
	760, 0, 0, 0, 431, 0, 432, 433, 434, 0,
	435, 436, 0, 1373, 437, 438, 439, 761, 762, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 0, 449,
	1369, 0, 764, 450, 0, 451, 452, 453, 454, 455,
	456, 457, 1332, 1333, 1336, 553, 1375, 458, 459, 460,
	0, 461, 462, 463, 464, 465, 0, 0, 0, 466,
	467, 468, 469, 0, 1274, 320, 322, 1374, 768, 470,
	554, 471, 769, 770, 0, 771, 0, 472, 473, 475,
	1376, 1334, 1377, 474, 476, 477, 1378, 478, 0, 0,
	0, 479, 480, 481, 482, 483, 484, 485, 1416, 486,
	488, 487, 0, 490, 1370, 489, 1379, 491, 492, 1380,
	0, 493, 494, 495, 496, 497, 498, 501, 1325, 1324,
	499, 500, 502, 503, 0, 504, 505, 507, 510, 506,
	508, 509, 511, 524, 525, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 527, 0, 526,
	1381, 528, 529, 530, 531, 532, 540, 542, 543, 538,
	539, 541, 544, 545, 547, 535, 536, 537, 1382, 546,
	533, 0, 534, 323, 1383, 548, 549, 550, 551, 0,
	1335, 552, 775, 555, 556, 0, 0, 557, 0, 558,
	0, 1422, 560, 561, 562, 0, 0, 563, 564, 776,
	1384, 565, 1385, 1364, 566, 567, 559, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 0, 578, 579,
	778, 580, 581, 582, 779, 583, 584, 585, 1365, 586,
	781, 587, 588, 0, 589, 590, 591, 0, 592, 593,
	594, 595, 596, 597, 598, 599, 782, 600, 601, 603,
	602, 604, 0, 605, 0, 606, 607, 608, 0, 0,
	0, 0, 0, 609, 610, 612, 0, 613, 614, 615,
	616, 611, 617, 618, 619, 620, 621, 622, 0, 624,
	625, 623, 626, 627, 1386, 628, 629, 630, 631, 632,
	783, 1424, 0, 634, 635, 643, 644, 645, 636, 637,
	639, 646, 638, 647, 648, 649, 650, 652, 651, 0,
	654, 655, 653, 656, 657, 658, 1328, 659, 784, 660,
	640, 641, 661, 662, 1387, 663, 664, 665, 666, 667,
	668, 669, 785, 0, 670, 0, 671, 672, 673, 674,
	675, 676, 678, 642, 679, 684, 685, 786, 680, 681,
	682, 683, 1366, 687, 688, 689, 690, 0, 691, 692,
	0, 686, 677, 0, 693, 694, 695, 696, 697, 698,
	0, 699, 700, 0, 701, 788, 789, 790, 791, 0,
	713, 0, 702, 704, 705, 706, 707, 1367, 708, 1368,
	0, 709, 710, 711, 712, 703, 714, 715, 0, 0,
	716, 717, 718, 720, 722, 723, 719, 721, 724, 1329,
	725, 0, 0, 726, 727, 728, 794, 795, 796, 0,
	730, 731, 729, 732, 733, 736, 734, 735, 797, 737,
	738, 739, 0, 0, 0, 0, 740, 741, 798, 742,
	743, 744, 1430, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 1420, 0, 1418, 1331, 0, 0, 0, 334,
	0, 335, 336, 337, 1371, 338, 339, 340, 341, 342,
	343, 344, 746, 747, 0, 345, 748, 346, 749, 0,
	750, 347, 348, 349, 350, 351, 352, 353, 0, 1330,
	0, 354, 751, 752, 753, 0, 355, 356, 1337, 0,
	1318, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 1372, 382, 383, 384, 1321, 1319, 1320, 1327,
	1323, 1322, 1326, 385, 386, 387, 388, 389, 0, 390,
	392, 755, 756, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 757, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 1362, 1363, 426, 427,
	0, 319, 0, 0, 0, 0, 0, 428, 429, 430,
	760, 0, 0, 0, 431, 0, 432, 433, 434, 0,
	435, 436, 0, 1373, 437, 438, 439, 761, 762, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 0, 449,
	1369, 0, 764, 450, 0, 451, 452, 453, 454, 455,
	456, 457, 1332, 1333, 1336, 553, 1375, 458, 459, 460,
	0, 461, 462, 463, 464, 465, 0, 0, 0, 466,
	467, 468, 469, 0, 1274, 320, 322, 1374, 768, 470,
	554, 471, 769, 770, 0, 771, 0, 472, 473, 475,
	1376, 1334, 1377, 474, 476, 477, 1378, 478, 0, 0,
	0, 479, 480, 481, 482, 483, 484, 485, 1416, 486,
	488, 487, 0, 490, 1370, 489, 1379, 491, 492, 1380,
	0, 493, 494, 495, 496, 497, 498, 501, 1325, 1324,
	499, 500, 502, 503, 0, 504, 505, 507, 510, 506,
	508, 509, 511, 524, 525, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 527, 0, 526,
	1381, 528, 529, 530, 531, 532, 540, 542, 543, 538,
	539, 541, 544, 545, 547, 535, 536, 537, 1382, 546,
	533, 0, 534, 323, 1383, 548, 549, 550, 551, 0,
	1335, 552, 775, 555, 556, 0, 0, 557, 0, 558,
	0, 1422, 560, 561, 562, 0, 0, 563, 564, 776,
	1384, 565, 1385, 1364, 566, 567, 559, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 0, 578, 579,
	778, 580, 581, 582, 779, 583, 584, 585, 1365, 586,
	781, 587, 588, 0, 589, 590, 591, 0, 592, 593,
	594, 595, 596, 597, 598, 599, 782, 600, 601, 603,
	602, 604, 0, 605, 0, 606, 607, 608, 0, 0,
	0, 0, 0, 609, 610, 612, 0, 613, 614, 615,
	616, 611, 617, 618, 619, 620, 621, 622, 0, 624,
	625, 623, 626, 627, 1386, 628, 629, 630, 631, 632,
	783, 1424, 0, 634, 635, 643, 644, 645, 636, 637,
	639, 646, 638, 647, 648, 649, 650, 652, 651, 0,
	654, 655, 653, 656, 657, 658, 1328, 659, 784, 660,
	640, 641, 661, 662, 1387, 663, 664, 665, 666, 667,
	668, 669, 785, 0, 670, 0, 671, 672, 673, 674,
	675, 676, 678, 642, 679, 684, 685, 786, 680, 681,
	682, 683, 1366, 687, 688, 689, 690, 0, 691, 692,
	0, 686, 677, 0, 693, 694, 695, 696, 697, 698,
	0, 699, 700, 0, 701, 788, 789, 790, 791, 0,
	713, 0, 702, 704, 705, 706, 707, 1367, 708, 1368,
	0, 709, 710, 711, 712, 703, 714, 715, 0, 0,
	716, 717, 718, 720, 722, 723, 719, 721, 724, 1329,
	725, 0, 0, 726, 727, 728, 794, 795, 796, 0,
	730, 731, 729, 732, 733, 736, 734, 735, 797, 737,
	738, 739, 0, 0, 0, 0, 740, 741, 798, 742,
	743, 744, 1430, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 1420, 0, 1418, 1331, 0, 0, 0, 334,
	0, 335, 336, 337, 1371, 338, 339, 340, 341, 342,
	343, 344, 746, 747, 0, 345, 748, 346, 749, 0,
	750, 347, 348, 349, 350, 351, 352, 353, 0, 1330,
	0, 354, 751, 752, 753, 0, 355, 356, 1337, 0,
	1318, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 1372, 382, 383, 384, 1321, 1319, 1320, 1327,
	1323, 1322, 1326, 385, 386, 387, 388, 389, 0, 390,
	392, 755, 756, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 757, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 1362, 1363, 426, 427,
	0, 319, 0, 0, 0, 0, 0, 428, 429, 430,
	760, 0, 0, 0, 431, 0, 432, 433, 434, 0,
	435, 436, 0, 1373, 437, 438, 439, 761, 762, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 0, 449,
	1369, 0, 764, 450, 0, 451, 452, 453, 454, 455,
	456, 457, 1332, 1333, 1336, 553, 1375, 458, 459, 460,
	0, 461, 462, 463, 464, 465, 0, 0, 0, 466,
	467, 468, 469, 0, 1274, 320, 322, 1374, 768, 470,
	554, 471, 769, 770, 0, 771, 0, 472, 473, 475,
	1376, 1334, 1377, 474, 476, 477, 1378, 478, 0, 0,
	0, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	488, 487, 0, 490, 1370, 489, 1379, 491, 492, 1380,
	0, 493, 494, 495, 496, 497, 498, 501, 1325, 1324,
	499, 500, 502, 503, 0, 504, 505, 507, 510, 506,
	508, 509, 511, 524, 525, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 527, 0, 526,
	1381, 528, 529, 530, 531, 532, 540, 542, 543, 538,
	539, 541, 544, 545, 547, 535, 536, 537, 1382, 546,
	533, 0, 534, 323, 1383, 548, 549, 550, 551, 0,
	1335, 552, 775, 555, 556, 0, 0, 557, 0, 558,
	0, 0, 560, 561, 562, 0, 0, 563, 564, 776,
	1384, 565, 1385, 1364, 566, 567, 559, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 0, 578, 579,
	778, 580, 581, 582, 779, 583, 584, 585, 1365, 586,
	781, 587, 588, 0, 589, 590, 591, 0, 592, 593,
	594, 595, 596, 597, 598, 599, 782, 600, 601, 603,
	602, 604, 0, 605, 0, 606, 607, 608, 0, 0,
	0, 0, 0, 609, 610, 612, 0, 613, 614, 615,
	616, 611, 617, 618, 619, 620, 621, 622, 0, 624,
	625, 623, 626, 627, 1386, 628, 629, 630, 631, 632,
	783, 633, 0, 634, 635, 643, 644, 645, 636, 637,
	639, 646, 638, 647, 648, 649, 650, 652, 651, 0,
	654, 655, 653, 656, 657, 658, 1328, 659, 784, 660,
	640, 641, 661, 662, 1387, 663, 664, 665, 666, 667,
	668, 669, 785, 0, 670, 0, 671, 672, 673, 674,
	675, 676, 678, 642, 679, 684, 685, 786, 680, 681,
	682, 683, 1366, 687, 688, 689, 690, 0, 691, 692,
	0, 686, 677, 0, 693, 694, 695, 696, 697, 698,
	0, 699, 700, 0, 701, 788, 789, 790, 791, 0,
	713, 0, 702, 704, 705, 706, 707, 1367, 708, 1368,
	0, 709, 710, 711, 712, 703, 714, 715, 0, 0,
	716, 717, 718, 720, 722, 723, 719, 721, 724, 1329,
	725, 0, 0, 726, 727, 728, 794, 795, 796, 0,
	730, 731, 729, 732, 733, 736, 734, 735, 797, 737,
	738, 739, 0, 0, 0, 0, 740, 741, 798, 742,
	743, 744, 1430, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 0, 0, 4866, 1331, 0, 0, 0, 334,
	0, 335, 336, 337, 1371, 338, 339, 340, 341, 342,
	343, 344, 746, 747, 0, 345, 748, 346, 749, 0,
	750, 347, 348, 349, 350, 351, 352, 353, 0, 1330,
	0, 354, 751, 752, 753, 0, 355, 356, 1337, 0,
	1318, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 1372, 382, 383, 384, 1321, 1319, 1320, 1327,
	1323, 1322, 1326, 385, 386, 387, 388, 389, 0, 390,
	392, 755, 756, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 757, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 1362, 1363, 426, 427,
	0, 319, 0, 0, 0, 0, 0, 428, 429, 430,
	760, 0, 0, 0, 431, 0, 432, 433, 434, 0,
	435, 436, 0, 1373, 437, 438, 439, 761, 762, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 0, 449,
	1369, 0, 764, 450, 0, 451, 452, 453, 454, 455,
	456, 457, 1332, 1333, 1336, 553, 1375, 458, 459, 460,
	0, 461, 462, 463, 464, 465, 0, 0, 0, 466,
	467, 468, 469, 0, 1274, 320, 322, 1374, 768, 470,
	554, 471, 769, 770, 0, 771, 0, 472, 473, 475,
	1376, 1334, 1377, 474, 476, 477, 1378, 478, 0, 0,
	0, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	488, 487, 0, 490, 1370, 489, 1379, 491, 492, 1380,
	0, 493, 494, 495, 496, 497, 498, 501, 1325, 1324,
	499, 500, 502, 503, 0, 504, 505, 507, 510, 506,
	508, 509, 511, 524, 525, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 527, 0, 526,
	1381, 528, 529, 530, 531, 532, 540, 542, 543, 538,
	539, 541, 544, 545, 547, 535, 536, 537, 1382, 546,
	533, 0, 534, 323, 1383, 548, 549, 550, 551, 0,
	1335, 552, 775, 555, 556, 0, 0, 557, 0, 558,
	0, 0, 560, 561, 562, 0, 0, 563, 564, 776,
	1384, 565, 1385, 1364, 566, 567, 559, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 0, 578, 579,
	778, 580, 581, 582, 779, 583, 584, 585, 1365, 586,
	781, 587, 588, 0, 589, 590, 591, 0, 592, 593,
	594, 595, 596, 597, 598, 599, 782, 600, 601, 603,
	602, 604, 0, 605, 0, 606, 607, 608, 0, 0,
	0, 0, 0, 609, 610, 612, 0, 613, 614, 615,
	616, 611, 617, 618, 619, 620, 621, 622, 0, 624,
	625, 623, 626, 627, 1386, 628, 629, 630, 631, 632,
	783, 1424, 0, 634, 635, 643, 644, 645, 636, 637,
	639, 646, 638, 647, 648, 649, 650, 652, 651, 0,
	654, 655, 653, 656, 657, 658, 1328, 659, 784, 660,
	640, 641, 661, 662, 1387, 663, 664, 665, 666, 667,
	668, 669, 785, 0, 670, 0, 671, 672, 673, 674,
	675, 676, 678, 642, 679, 684, 685, 786, 680, 681,
	682, 683, 1366, 687, 688, 689, 690, 0, 691, 692,
	0, 686, 677, 0, 693, 694, 695, 696, 697, 698,
	0, 699, 700, 0, 701, 788, 789, 790, 791, 0,
	713, 0, 702, 704, 705, 706, 707, 1367, 708, 1368,
	0, 709, 710, 711, 712, 703, 714, 715, 0, 0,
	716, 717, 718, 720, 722, 723, 719, 721, 724, 1329,
	725, 0, 0, 726, 727, 728, 794, 795, 796, 0,
	730, 731, 729, 732, 733, 736, 734, 735, 797, 737,
	738, 739, 316, 0, 0, 0, 740, 741, 798, 742,
	743, 744, 2917, 2918, 2919, 2936, 2937, 2938, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 0, 2939, 0, 745, 0, 0, 0, 334,
	0, 335, 336, 337, 2115, 338, 339, 340, 341, 342,
	343, 344, 746, 747, 0, 345, 748, 346, 749, 0,
	750, 347, 348, 349, 350, 351, 352, 353, 0, 0,
	2100, 354, 751, 752, 753, 0, 355, 356, 754, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	2929, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	2925, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 0, 382, 383, 384, 0, 0, 0, 0,
	0, 0, 0, 385, 386, 387, 388, 389, 0, 390,
	392, 755, 756, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 757, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 758, 759, 426, 427,
	0, 0, 0, 2930, 2931, 2932, 2933, 428, 429, 430,
	760, 0, 0, 2924, 431, 0, 432, 433, 434, 0,
	435, 436, 0, 0, 437, 438, 439, 761, 762, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 0, 449,
	763, 0, 764, 450, 0, 451, 452, 453, 454, 455,
	456, 457, 765, 766, 767, 553, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 465, 0, 0, 0, 466,
	467, 468, 469, 0, 0, 0, 0, 0, 768, 470,
	554, 471, 769, 770, 0, 771, 0, 472, 473, 475,
	0, 772, 0, 474, 476, 477, 0, 478, 0, 2934,
	2935, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	488, 487, 0, 490, 773, 489, 0, 491, 492, 0,
	0, 493, 494, 495, 496, 497, 498, 501, 0, 0,
	499, 500, 502, 503, 2927, 504, 505, 507, 510, 506,
	508, 509, 511, 524, 525, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 527, 0, 526,
	0, 528, 529, 530, 531, 532, 540, 542, 543, 538,
	539, 541, 544, 545, 547, 535, 536, 537, 0, 546,
	533, 0, 534, 0, 0, 548, 549, 550, 551, 0,
	774, 552, 775, 555, 556, 0, 0, 557, 0, 558,
	0, 0, 560, 561, 562, 0, 0, 563, 564, 776,
	0, 565, 0, 777, 566, 567, 559, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 0, 578, 579,
	778, 580, 581, 582, 779, 583, 584, 585, 780, 586,
	781, 587, 588, 0, 589, 590, 591, 0, 592, 593,
	594, 595, 596, 597, 598, 599, 782, 600, 601, 603,
	602, 604, 0, 605, 0, 606, 607, 608, 0, 0,
	0, 0, 0, 609, 610, 612, 0, 613, 614, 615,
	616, 611, 617, 618, 619, 620, 621, 622, 0, 624,
	625, 623, 626, 627, 0, 628, 629, 630, 631, 632,
	783, 633, 2928, 634, 635, 643, 644, 645, 636, 637,
	639, 646, 638, 647, 648, 649, 650, 652, 651, 0,
	654, 655, 653, 656, 657, 658, 0, 659, 784, 660,
	640, 641, 661, 662, 0, 663, 664, 665, 666, 667,
	668, 669, 785, 0, 670, 0, 671, 672, 673, 674,
	675, 676, 678, 642, 679, 684, 685, 786, 680, 681,
	682, 683, 787, 687, 688, 689, 690, 0, 691, 692,
	2099, 686, 677, 0, 693, 694, 695, 696, 697, 698,
	0, 699, 700, 0, 701, 788, 789, 790, 791, 0,
	713, 0, 702, 704, 705, 706, 707, 792, 708, 793,
	0, 709, 710, 711, 712, 703, 714, 715, 0, 0,
	716, 717, 718, 720, 722, 723, 719, 721, 724, 0,
	725, 0, 0, 726, 727, 728, 794, 795, 796, 0,
	730, 731, 729, 732, 733, 736, 734, 735, 797, 737,
	738, 739, 0, 0, 0, 0, 740, 741, 798, 742,
	743, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1246, 0, 1719, 2914, 2915, 2916, 2940, 2926, 2920,
	0, 2922, 2923, 2921, 2908, 2909, 2910, 2911, 2912, 2913,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 1371, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 1685, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 1372, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 319, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 1373, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 1375, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 1374, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 1376, 772, 1377, 474, 476, 477, 1378, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 1379, 491, 492,
	1380, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 1381, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 1382,
	546, 533, 0, 534, 0, 1383, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 1384, 565, 1385, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 1386, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	275, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 1387, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 277, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 1849, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 0, 0, 0, 269, 740, 741, 798,
	742, 743, 744, 0, 1846, 270, 1719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 327, 326, 328, 329, 330,
	331, 0, 332, 333, 0, 216, 0, 0, 0, 745,
	0, 0, 0, 334, 0, 335, 336, 337, 1371, 338,
	339, 340, 341, 342, 343, 344, 746, 747, 0, 345,
	748, 346, 749, 0, 750, 347, 348, 349, 350, 351,
	352, 353, 0, 0, 0, 354, 751, 752, 753, 0,
	355, 356, 754, 0, 1685, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 1372, 382, 383, 384,
	0, 0, 0, 0, 0, 0, 0, 385, 386, 387,
	388, 389, 0, 390, 392, 755, 756, 0, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 757, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	758, 759, 426, 427, 0, 319, 0, 0, 0, 0,
	0, 428, 429, 430, 760, 0, 0, 0, 431, 0,
	432, 433, 434, 0, 435, 436, 0, 1373, 437, 438,
	439, 761, 762, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 0, 449, 763, 0, 764, 450, 0, 451,
	452, 453, 454, 455, 456, 457, 765, 766, 767, 553,
	1375, 458, 459, 460, 0, 461, 462, 463, 464, 465,
	0, 0, 0, 466, 467, 468, 469, 0, 0, 0,
	0, 1374, 768, 470, 554, 471, 769, 770, 0, 771,
	0, 472, 473, 475, 1376, 772, 1377, 474, 476, 477,
	1378, 478, 0, 0, 0, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 488, 487, 0, 490, 773, 489,
	1379, 491, 492, 1380, 0, 493, 494, 495, 496, 497,
	498, 501, 0, 0, 499, 500, 502, 503, 0, 504,
	505, 507, 510, 506, 508, 509, 511, 524, 525, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 527, 0, 526, 1381, 528, 529, 530, 531, 532,
	540, 542, 543, 538, 539, 541, 544, 545, 547, 535,
	536, 537, 1382, 546, 533, 0, 534, 0, 1383, 548,
	549, 550, 551, 0, 774, 552, 775, 555, 556, 0,
	0, 557, 0, 558, 0, 0, 560, 561, 562, 0,
	0, 563, 564, 776, 1384, 565, 1385, 777, 566, 567,
	559, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 0, 578, 579, 778, 580, 581, 582, 779, 583,
	584, 585, 780, 586, 781, 587, 588, 0, 589, 590,
	591, 0, 592, 593, 594, 595, 596, 597, 598, 599,
	782, 600, 601, 603, 602, 604, 0, 605, 0, 606,
	607, 608, 0, 0, 0, 0, 0, 609, 610, 612,
	0, 613, 614, 615, 616, 611, 617, 618, 619, 620,
	621, 622, 0, 624, 625, 623, 626, 627, 1386, 628,
	629, 630, 631, 632, 783, 633, 0, 634, 635, 643,
	644, 645, 636, 637, 639, 646, 638, 647, 648, 649,
	650, 652, 651, 275, 654, 655, 653, 656, 657, 658,
	0, 659, 784, 660, 640, 641, 661, 662, 1387, 663,
	664, 665, 666, 667, 668, 669, 785, 0, 670, 0,
	671, 672, 673, 674, 675, 676, 678, 642, 679, 684,
	685, 786, 680, 681, 682, 683, 787, 687, 688, 689,
	690, 0, 691, 692, 0, 686, 677, 277, 693, 694,
	695, 696, 697, 698, 0, 699, 700, 0, 701, 788,
	789, 790, 791, 0, 713, 0, 702, 704, 705, 706,
	707, 792, 708, 793, 0, 709, 710, 711, 712, 703,
	714, 715, 0, 0, 716, 717, 718, 720, 722, 723,
	719, 721, 724, 0, 725, 0, 0, 726, 727, 728,
	1849, 795, 796, 0, 730, 731, 729, 732, 733, 736,
	734, 735, 797, 737, 738, 739, 0, 0, 0, 269,
	740, 741, 798, 742, 743, 744, 1719, 1718, 270, 0,
	0, 0, 1716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 327, 326, 328, 329, 330,
	331, 0, 332, 333, 0, 0, 0, 0, 216, 745,
	0, 0, 0, 334, 0, 335, 336, 337, 1371, 338,
	339, 340, 341, 342, 343, 344, 746, 747, 0, 345,
	748, 346, 749, 0, 750, 347, 348, 349, 350, 351,
	352, 353, 0, 0, 0, 354, 751, 752, 753, 0,
	355, 356, 754, 0, 1685, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 1372, 382, 383, 384,
	0, 0, 0, 0, 0, 0, 0, 385, 386, 387,
	388, 389, 0, 390, 392, 755, 756, 0, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 757, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	758, 759, 426, 427, 0, 319, 0, 0, 0, 0,
	0, 428, 429, 430, 760, 0, 0, 0, 431, 0,
	432, 433, 434, 0, 435, 436, 0, 1373, 437, 438,
	439, 761, 762, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 0, 449, 763, 0, 764, 450, 0, 451,
	452, 453, 454, 455, 456, 457, 765, 766, 767, 553,
	1375, 458, 459, 460, 0, 461, 462, 463, 464, 465,
	0, 0, 0, 466, 467, 468, 469, 0, 0, 0,
	0, 1374, 768, 470, 554, 471, 769, 770, 0, 771,
	0, 472, 473, 475, 1376, 772, 1377, 474, 476, 477,
	1378, 478, 0, 0, 0, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 488, 487, 0, 490, 773, 489,
	1379, 491, 492, 1380, 0, 493, 494, 495, 496, 497,
	498, 501, 0, 0, 499, 500, 502, 503, 0, 504,
	505, 507, 510, 506, 508, 509, 511, 524, 525, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 527, 0, 526, 1381, 528, 529, 530, 531, 532,
	540, 542, 543, 538, 539, 541, 544, 545, 547, 535,
	536, 537, 1382, 546, 533, 0, 534, 0, 1383, 548,
	549, 550, 551, 0, 774, 552, 775, 555, 556, 0,
	0, 557, 0, 558, 0, 0, 560, 561, 562, 0,
	0, 563, 564, 776, 1384, 565, 1385, 777, 566, 567,
	559, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 0, 578, 579, 778, 580, 581, 582, 779, 583,
	584, 585, 780, 586, 781, 587, 588, 0, 589, 590,
	591, 0, 592, 593, 594, 595, 596, 597, 598, 599,
	782, 600, 601, 603, 602, 604, 0, 605, 0, 606,
	607, 608, 0, 0, 0, 0, 0, 609, 610, 612,
	0, 613, 614, 615, 616, 611, 617, 618, 619, 620,
	621, 622, 0, 624, 625, 623, 626, 627, 1386, 628,
	629, 630, 631, 632, 783, 633, 0, 634, 635, 643,
	644, 645, 636, 637, 639, 646, 638, 647, 648, 649,
	650, 652, 651, 0, 654, 655, 653, 656, 657, 658,
	0, 659, 784, 660, 640, 641, 661, 662, 1387, 663,
	664, 665, 666, 667, 668, 669, 785, 0, 670, 0,
	671, 672, 673, 674, 675, 676, 678, 642, 679, 684,
	685, 786, 680, 681, 682, 683, 787, 687, 688, 689,
	690, 0, 691, 692, 0, 686, 677, 0, 693, 694,
	695, 696, 697, 698, 0, 699, 700, 0, 701, 788,
	789, 790, 791, 0, 713, 0, 702, 704, 705, 706,
	707, 792, 708, 793, 0, 709, 710, 711, 712, 703,
	714, 715, 0, 0, 716, 717, 718, 720, 722, 723,
	719, 721, 724, 0, 725, 0, 0, 726, 727, 728,
	794, 795, 796, 0, 730, 731, 729, 732, 733, 736,
	734, 735, 797, 737, 738, 739, 0, 0, 0, 0,
	740, 741, 798, 742, 743, 744, 1719, 1718, 0, 0,
	0, 0, 1716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 327, 326, 328, 329, 330,
	331, 0, 332, 333, 0, 0, 0, 0, 1873, 745,
	0, 0, 0, 334, 0, 335, 336, 337, 1371, 338,
	339, 340, 341, 342, 343, 344, 746, 747, 0, 345,
	748, 346, 749, 0, 750, 347, 348, 349, 350, 351,
	352, 353, 0, 0, 0, 354, 751, 752, 753, 0,
	355, 356, 754, 0, 1685, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 1372, 382, 383, 384,
	0, 0, 0, 0, 0, 0, 0, 385, 386, 387,
	388, 389, 0, 390, 392, 755, 756, 0, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 757, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	758, 759, 426, 427, 0, 319, 0, 0, 0, 0,
	0, 428, 429, 430, 760, 0, 0, 0, 431, 0,
	432, 433, 434, 0, 435, 436, 0, 1373, 437, 438,
	439, 761, 762, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 0, 449, 763, 0, 764, 450, 0, 451,
	452, 453, 454, 455, 456, 457, 765, 766, 767, 553,
	1375, 458, 459, 460, 0, 461, 462, 463, 464, 465,
	0, 0, 0, 466, 467, 468, 469, 0, 0, 0,
	0, 1374, 768, 470, 554, 471, 769, 770, 0, 771,
	0, 472, 473, 475, 1376, 772, 1377, 474, 476, 477,
	1378, 478, 0, 0, 0, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 488, 487, 0, 490, 773, 489,
	1379, 491, 492, 1380, 0, 493, 494, 495, 496, 497,
	498, 501, 0, 0, 499, 500, 502, 503, 0, 504,
	505, 507, 510, 506, 508, 509, 511, 524, 525, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 527, 0, 526, 1381, 528, 529, 530, 531, 532,
	540, 542, 543, 538, 539, 541, 544, 545, 547, 535,
	536, 537, 1382, 546, 533, 0, 534, 0, 1383, 548,
	549, 550, 551, 0, 774, 552, 775, 555, 556, 0,
	0, 557, 0, 558, 0, 0, 560, 561, 562, 0,
	0, 563, 564, 776, 1384, 565, 1385, 777, 566, 567,
	559, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 0, 578, 579, 778, 580, 581, 582, 779, 583,
	584, 585, 780, 586, 781, 587, 588, 0, 589, 590,
	591, 0, 592, 593, 594, 595, 596, 597, 598, 599,
	782, 600, 601, 603, 602, 604, 0, 605, 0, 606,
	607, 608, 0, 0, 0, 0, 0, 609, 610, 612,
	0, 613, 614, 615, 616, 611, 617, 618, 619, 620,
	621, 622, 0, 624, 625, 623, 626, 627, 1386, 628,
	629, 630, 631, 632, 783, 633, 0, 634, 635, 643,
	644, 645, 636, 637, 639, 646, 638, 647, 648, 649,
	650, 652, 651, 0, 654, 655, 653, 656, 657, 658,
	0, 659, 784, 660, 640, 641, 661, 662, 1387, 663,
	664, 665, 666, 667, 668, 669, 785, 0, 670, 0,
	671, 672, 673, 674, 675, 676, 678, 642, 679, 684,
	685, 786, 680, 681, 682, 683, 787, 687, 688, 689,
	690, 0, 691, 692, 0, 686, 677, 0, 693, 694,
	695, 696, 697, 698, 0, 699, 700, 0, 701, 788,
	789, 790, 791, 0, 713, 0, 702, 704, 705, 706,
	707, 792, 708, 793, 0, 709, 710, 711, 712, 703,
	714, 715, 0, 0, 716, 717, 718, 720, 722, 723,
	719, 721, 724, 0, 725, 0, 0, 726, 727, 728,
	794, 795, 796, 0, 730, 731, 729, 732, 733, 736,
	734, 735, 797, 737, 738, 739, 0, 0, 0, 0,
	740, 741, 798, 742, 743, 744, 1719, 1718, 0, 0,
	0, 0, 1716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 327, 326, 328, 329, 330,
	331, 0, 332, 333, 0, 0, 0, 0, 4211, 745,
	0, 0, 0, 334, 0, 335, 336, 337, 1371, 338,
	339, 340, 341, 342, 343, 344, 746, 747, 0, 345,
	748, 346, 749, 0, 750, 347, 348, 349, 350, 351,
	352, 353, 0, 0, 0, 354, 751, 752, 753, 0,
	355, 356, 754, 0, 1685, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 1372, 382, 383, 384,
	0, 0, 0, 0, 0, 0, 0, 385, 386, 387,
	388, 389, 0, 390, 392, 755, 756, 0, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 757, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	758, 759, 426, 427, 0, 319, 0, 0, 0, 0,
	0, 428, 429, 430, 760, 0, 0, 0, 431, 0,
	432, 433, 434, 0, 435, 436, 0, 1373, 437, 438,
	439, 761, 762, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 0, 449, 763, 0, 764, 450, 0, 451,
	452, 453, 454, 455, 456, 457, 765, 766, 767, 553,
	1375, 458, 459, 460, 0, 461, 462, 463, 464, 465,
	0, 0, 0, 466, 467, 468, 469, 0, 0, 0,
	0, 1374, 768, 470, 554, 471, 769, 770, 0, 771,
	0, 472, 473, 475, 1376, 772, 1377, 474, 476, 477,
	1378, 478, 0, 0, 0, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 488, 487, 0, 490, 773, 489,
	1379, 491, 492, 1380, 0, 493, 494, 495, 496, 497,
	498, 501, 0, 0, 499, 500, 502, 503, 0, 504,
	505, 507, 510, 506, 508, 509, 511, 524, 525, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 527, 0, 526, 1381, 528, 529, 530, 531, 532,
	540, 542, 543, 538, 539, 541, 544, 545, 547, 535,
	536, 537, 1382, 546, 533, 0, 534, 0, 1383, 548,
	549, 550, 551, 0, 774, 552, 775, 555, 556, 0,
	0, 557, 0, 558, 0, 0, 560, 561, 562, 0,
	0, 563, 564, 776, 1384, 565, 1385, 777, 566, 567,
	559, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 0, 578, 579, 778, 580, 581, 582, 779, 583,
	584, 585, 780, 586, 781, 587, 588, 0, 589, 590,
	591, 0, 592, 593, 594, 595, 596, 597, 598, 599,
	782, 600, 601, 603, 602, 604, 0, 605, 0, 606,
	607, 608, 0, 0, 0, 0, 0, 609, 610, 612,
	0, 613, 614, 615, 2666, 611, 617, 618, 619, 620,
	621, 622, 0, 624, 625, 623, 626, 627, 1386, 628,
	629, 630, 631, 632, 783, 633, 0, 634, 635, 643,
	644, 645, 636, 637, 639, 646, 638, 647, 648, 649,
	650, 652, 651, 0, 654, 655, 653, 656, 657, 658,
	0, 659, 784, 660, 640, 641, 661, 662, 1387, 663,
	664, 665, 666, 667, 668, 669, 785, 0, 670, 0,
	671, 672, 673, 674, 675, 676, 678, 642, 679, 684,
	685, 786, 680, 681, 682, 683, 787, 687, 688, 689,
	690, 0, 691, 692, 0, 686, 677, 0, 693, 694,
	695, 696, 697, 698, 0, 699, 700, 0, 701, 788,
	789, 790, 791, 0, 713, 0, 702, 704, 705, 706,
	707, 792, 708, 793, 0, 709, 710, 711, 712, 703,
	714, 715, 0, 0, 716, 717, 718, 720, 722, 723,
	719, 721, 724, 0, 725, 0, 0, 726, 727, 728,
	794, 795, 796, 0, 730, 731, 729, 732, 733, 736,
	734, 735, 797, 737, 738, 739, 0, 0, 0, 0,
	740, 741, 798, 742, 743, 744, 1719, 2570, 0, 0,
	0, 0, 2571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 327, 326, 328, 329, 330,
	331, 0, 332, 333, 0, 0, 0, 0, 1873, 745,
	0, 0, 0, 334, 0, 335, 336, 337, 1371, 338,
	339, 340, 341, 342, 343, 344, 746, 747, 0, 345,
	748, 346, 749, 0, 750, 347, 348, 349, 350, 351,
	352, 353, 0, 0, 0, 354, 751, 752, 753, 0,
	355, 356, 754, 0, 1685, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 1372, 382, 383, 384,
	0, 0, 0, 0, 0, 0, 0, 385, 386, 387,
	388, 389, 0, 390, 392, 755, 756, 0, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 757, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	758, 759, 426, 427, 0, 319, 0, 0, 0, 0,
	0, 428, 429, 430, 760, 0, 0, 0, 431, 0,
	432, 433, 434, 0, 435, 436, 0, 1373, 437, 438,
	439, 761, 762, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 0, 449, 763, 0, 764, 450, 0, 451,
	452, 453, 454, 455, 456, 457, 765, 766, 767, 553,
	1375, 458, 459, 460, 0, 461, 462, 463, 464, 465,
	0, 0, 0, 466, 467, 468, 469, 0, 0, 0,
	0, 1374, 768, 470, 554, 471, 769, 770, 0, 771,
	0, 472, 473, 475, 1376, 772, 1377, 474, 476, 477,
	1378, 478, 0, 0, 0, 479, 480, 481, 482, 483,
	484, 485, 0, 2569, 488, 487, 0, 490, 773, 489,
	1379, 491, 492, 1380, 0, 493, 494, 495, 496, 497,
	498, 501, 0, 0, 499, 500, 502, 503, 0, 504,
	505, 507, 510, 506, 508, 509, 511, 524, 525, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 527, 0, 526, 1381, 528, 529, 530, 531, 532,
	540, 542, 543, 538, 539, 541, 544, 545, 547, 535,
	536, 537, 1382, 546, 533, 0, 534, 0, 1383, 548,
	549, 550, 551, 0, 774, 552, 775, 555, 556, 0,
	0, 557, 0, 558, 0, 0, 560, 561, 562, 0,
	0, 563, 564, 776, 1384, 565, 1385, 777, 566, 567,
	559, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 0, 578, 579, 778, 580, 581, 582, 779, 583,
	584, 585, 780, 586, 781, 587, 588, 0, 589, 590,
	591, 0, 592, 593, 594, 595, 596, 597, 598, 599,
	782, 600, 601, 603, 602, 604, 0, 605, 0, 606,
	607, 608, 0, 0, 0, 0, 0, 609, 610, 612,
	0, 613, 614, 615, 616, 611, 617, 618, 619, 620,
	621, 622, 0, 624, 625, 623, 626, 627, 1386, 628,
	629, 630, 631, 632, 783, 633, 0, 634, 635, 643,
	644, 645, 636, 637, 639, 646, 638, 647, 648, 649,
	650, 652, 651, 0, 654, 655, 653, 656, 657, 658,
	0, 659, 784, 660, 640, 641, 661, 662, 1387, 663,
	664, 665, 666, 667, 668, 669, 785, 0, 670, 0,
	671, 672, 673, 674, 675, 676, 678, 642, 679, 684,
	685, 786, 680, 681, 682, 683, 787, 687, 688, 689,
	690, 0, 691, 692, 0, 686, 677, 0, 693, 694,
	695, 696, 697, 698, 0, 699, 700, 0, 701, 788,
	789, 790, 791, 0, 713, 0, 702, 704, 705, 706,
	707, 792, 708, 793, 0, 709, 710, 711, 712, 703,
	714, 715, 0, 0, 716, 717, 718, 720, 722, 723,
	719, 721, 724, 0, 725, 0, 0, 726, 727, 728,
	794, 795, 796, 0, 730, 731, 729, 732, 733, 736,
	734, 735, 797, 737, 738, 739, 0, 0, 0, 0,
	740, 741, 798, 742, 743, 744, 1719, 1718, 0, 0,
	0, 0, 1716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 327, 326, 328, 329, 330,
	331, 0, 332, 333, 0, 0, 0, 0, 1873, 745,
	0, 0, 0, 334, 0, 335, 336, 337, 1371, 338,
	339, 340, 341, 342, 343, 344, 746, 747, 0, 345,
	748, 346, 749, 0, 750, 347, 348, 349, 350, 351,
	352, 353, 0, 0, 0, 354, 751, 752, 753, 0,
	355, 356, 754, 0, 1685, 0, 357, 358, 359, 360,
	361, 362, 363, 364, 0, 0, 366, 367, 368, 365,
	369, 370, 0, 371, 0, 372, 373, 374, 375, 376,
	377, 378, 0, 379, 380, 381, 1372, 382, 383, 384,
	0, 0, 0, 0, 0, 0, 0, 385, 386, 387,
	388, 389, 0, 390, 392, 755, 756, 0, 395, 397,
	391, 393, 0, 396, 394, 398, 399, 0, 400, 401,
	402, 0, 0, 403, 404, 405, 0, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 757, 414, 415,
	416, 418, 420, 417, 419, 421, 422, 423, 424, 425,
	758, 759, 426, 427, 0, 319, 0, 0, 0, 0,
	0, 428, 429, 430, 760, 0, 0, 0, 431, 0,
	432, 433, 434, 0, 435, 436, 0, 1373, 437, 438,
	439, 761, 762, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 0, 449, 763, 0, 764, 450, 0, 451,
	452, 453, 454, 455, 456, 457, 765, 766, 767, 553,
	1375, 458, 459, 460, 0, 461, 462, 463, 464, 465,
	0, 0, 0, 466, 467, 468, 469, 0, 0, 0,
	0, 1374, 768, 470, 554, 471, 769, 770, 0, 771,
	0, 472, 473, 475, 1376, 772, 1377, 474, 476, 477,
	1378, 478, 0, 0, 0, 479, 480, 481, 482, 483,
	484, 485, 0, 486, 488, 487, 0, 490, 773, 489,
	1379, 491, 492, 1380, 0, 493, 494, 495, 496, 497,
	498, 501, 0, 0, 499, 500, 502, 503, 0, 504,
	505, 507, 510, 506, 508, 509, 511, 524, 525, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 527, 0, 526, 1381, 528, 529, 530, 531, 532,
	540, 542, 543, 538, 539, 541, 544, 545, 547, 535,
	536, 537, 1382, 546, 533, 0, 534, 0, 1383, 548,
	549, 550, 551, 0, 774, 552, 775, 555, 556, 0,
	0, 557, 0, 558, 0, 0, 560, 561, 562, 0,
	0, 563, 564, 776, 1384, 565, 1385, 777, 566, 567,
	559, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 0, 578, 579, 778, 580, 581, 582, 779, 583,
	584, 585, 780, 586, 781, 587, 588, 0, 589, 590,
	591, 0, 592, 593, 594, 595, 596, 597, 598, 599,
	782, 600, 601, 603, 602, 604, 0, 605, 0, 606,
	607, 608, 0, 0, 0, 0, 0, 609, 610, 612,
	0, 613, 614, 615, 616, 611, 617, 618, 619, 620,
	621, 622, 0, 624, 625, 623, 626, 627, 1386, 628,
	629, 630, 631, 632, 783, 633, 0, 634, 635, 643,
	644, 645, 636, 637, 639, 646, 638, 647, 648, 649,
	650, 652, 651, 0, 654, 655, 653, 656, 657, 658,
	0, 659, 784, 660, 640, 641, 661, 662, 1387, 663,
	664, 665, 666, 667, 668, 669, 785, 0, 670, 0,
	671, 672, 673, 674, 675, 676, 678, 642, 679, 684,
	685, 786, 680, 681, 682, 683, 787, 687, 688, 689,
	690, 0, 691, 692, 0, 686, 677, 0, 693, 694,
	695, 696, 697, 698, 0, 699, 700, 0, 701, 788,
	789, 790, 791, 0, 713, 0, 702, 704, 705, 706,
	707, 792, 708, 793, 0, 709, 710, 711, 712, 703,
	714, 715, 0, 0, 716, 717, 718, 720, 722, 723,
	719, 721, 724, 0, 725, 0, 0, 726, 727, 728,
	794, 795, 796, 0, 730, 731, 729, 732, 733, 736,
	734, 735, 797, 737, 738, 739, 0, 0, 0, 0,
	740, 741, 798, 742, 743, 744, 1246, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 327, 326, 328,
	329, 330, 331, 0, 332, 333, 0, 0, 1855, 0,
	0, 745, 0, 0, 0, 334, 0, 335, 336, 337,
	0, 338, 339, 340, 341, 342, 343, 344, 746, 747,
	0, 345, 748, 346, 749, 0, 750, 347, 348, 349,
	350, 351, 352, 353, 0, 0, 0, 354, 751, 752,
	753, 0, 355, 356, 754, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 0, 382,
	383, 384, 0, 0, 0, 0, 0, 0, 0, 385,
	386, 387, 388, 389, 0, 390, 392, 755, 756, 0,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 757,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 758, 759, 426, 427, 0, 0, 0, 0,
	0, 0, 0, 428, 429, 430, 760, 0, 0, 0,
	431, 0, 432, 433, 434, 0, 435, 436, 0, 0,
	437, 438, 439, 761, 762, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 0, 449, 763, 0, 764, 450,
	0, 451, 452, 453, 454, 455, 456, 457, 765, 766,
	767, 553, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 465, 0, 0, 0, 466, 467, 468, 469, 0,
	0, 0, 0, 0, 768, 470, 554, 471, 769, 770,
	0, 771, 0, 472, 473, 475, 0, 772, 0, 474,
	476, 477, 0, 478, 0, 0, 0, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 488, 487, 0, 490,
	773, 489, 0, 491, 492, 0, 0, 493, 494, 495,
	496, 497, 498, 501, 0, 0, 499, 500, 502, 503,
	0, 504, 505, 507, 510, 506, 508, 509, 511, 524,
	525, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 527, 0, 526, 0, 528, 529, 530,
	531, 532, 540, 542, 543, 538, 539, 541, 544, 545,
	547, 535, 536, 537, 0, 546, 533, 0, 534, 0,
	0, 548, 549, 550, 551, 0, 774, 552, 775, 555,
	556, 0, 0, 557, 0, 558, 0, 0, 560, 561,
	562, 0, 0, 563, 564, 776, 0, 565, 0, 777,
	566, 567, 559, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 0, 578, 579, 778, 580, 581, 582,
	779, 583, 584, 585, 780, 586, 781, 587, 588, 0,
	589, 590, 591, 0, 592, 593, 594, 595, 596, 597,
	598, 599, 782, 600, 601, 603, 602, 604, 0, 605,
	0, 606, 607, 608, 0, 0, 0, 0, 0, 609,
	610, 612, 0, 613, 614, 615, 616, 611, 617, 618,
	619, 620, 621, 622, 0, 624, 625, 623, 626, 627,
	0, 628, 629, 630, 631, 632, 783, 633, 0, 634,
	635, 643, 644, 645, 636, 637, 639, 646, 638, 647,
	648, 649, 650, 652, 651, 275, 654, 655, 653, 656,
	657, 658, 0, 659, 784, 660, 640, 641, 661, 662,
	0, 663, 664, 665, 666, 667, 668, 669, 785, 0,
	670, 0, 671, 672, 673, 674, 675, 676, 678, 642,
	679, 684, 685, 786, 680, 681, 682, 683, 787, 687,
	688, 689, 690, 0, 691, 692, 0, 686, 677, 277,
	693, 694, 695, 696, 697, 698, 0, 699, 700, 0,
	701, 788, 789, 790, 791, 0, 713, 0, 702, 704,
	705, 706, 707, 792, 708, 793, 0, 709, 710, 711,
	712, 703, 714, 715, 0, 0, 716, 717, 718, 720,
	722, 723, 719, 721, 724, 0, 725, 0, 0, 726,
	727, 728, 1849, 795, 796, 0, 730, 731, 729, 732,
	733, 736, 734, 735, 797, 737, 738, 739, 316, 0,
	0, 269, 740, 741, 798, 742, 743, 744, 0, 0,
	270, 0, 0, 0, 0, 324, 325, 327, 326, 328,
	329, 330, 331, 0, 332, 333, 0, 0, 0, 0,
	0, 745, 0, 0, 0, 334, 0, 335, 336, 337,
	216, 338, 339, 340, 341, 342, 343, 344, 746, 747,
	0, 345, 748, 346, 749, 0, 750, 347, 348, 349,
	350, 351, 352, 353, 0, 0, 0, 354, 751, 752,
	753, 0, 355, 356, 754, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 0, 382,
	383, 384, 0, 0, 0, 0, 0, 0, 0, 385,
	386, 387, 388, 389, 0, 390, 392, 755, 756, 0,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 757,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 758, 759, 426, 427, 0, 319, 0, 0,
	0, 0, 0, 428, 429, 430, 760, 0, 0, 0,
	431, 0, 432, 433, 434, 0, 435, 436, 0, 0,
	437, 438, 439, 761, 762, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 0, 449, 763, 0, 764, 450,
	0, 451, 452, 453, 454, 455, 456, 457, 765, 766,
	767, 553, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 465, 0, 0, 0, 466, 467, 468, 469, 0,
	321, 320, 322, 0, 768, 470, 554, 471, 769, 770,
	0, 771, 0, 472, 473, 475, 0, 772, 0, 474,
	476, 477, 0, 478, 0, 0, 0, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 488, 487, 0, 490,
	773, 489, 0, 491, 492, 0, 0, 493, 494, 495,
	496, 497, 498, 501, 0, 0, 499, 500, 502, 503,
	0, 504, 505, 507, 510, 506, 508, 509, 511, 524,
	525, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 527, 0, 526, 0, 528, 529, 530,
	531, 532, 540, 542, 543, 538, 539, 541, 544, 545,
	547, 535, 536, 537, 0, 546, 533, 0, 534, 323,
	0, 548, 549, 550, 551, 0, 774, 552, 775, 555,
	556, 0, 0, 557, 0, 558, 0, 0, 560, 561,
	562, 0, 0, 563, 564, 776, 0, 565, 0, 777,
	566, 567, 559, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 0, 578, 579, 778, 580, 581, 582,
	779, 583, 584, 585, 780, 586, 781, 587, 588, 0,
	589, 590, 591, 0, 592, 593, 594, 595, 596, 597,
	598, 599, 782, 600, 601, 603, 602, 604, 0, 605,
	0, 606, 607, 608, 0, 0, 0, 0, 0, 609,
	610, 612, 0, 613, 614, 615, 616, 611, 617, 618,
	619, 620, 621, 622, 0, 624, 625, 623, 626, 627,
	0, 628, 629, 630, 631, 632, 783, 633, 0, 634,
	635, 643, 644, 645, 636, 637, 639, 646, 638, 647,
	648, 649, 650, 652, 651, 0, 654, 655, 653, 656,
	657, 658, 0, 659, 784, 660, 640, 641, 661, 662,
	0, 663, 664, 665, 666, 667, 668, 669, 785, 0,
	670, 0, 671, 672, 673, 674, 675, 676, 678, 642,
	679, 684, 685, 786, 680, 681, 682, 683, 787, 687,
	688, 689, 690, 0, 691, 692, 0, 686, 677, 0,
	693, 694, 695, 696, 697, 698, 0, 699, 700, 0,
	701, 788, 789, 790, 791, 0, 713, 0, 702, 704,
	705, 706, 707, 792, 708, 793, 0, 709, 710, 711,
	712, 703, 714, 715, 0, 0, 716, 717, 718, 720,
	722, 723, 719, 721, 724, 0, 725, 0, 0, 726,
	727, 728, 794, 795, 796, 0, 730, 731, 729, 732,
	733, 736, 734, 735, 797, 737, 738, 739, 316, 0,
	0, 0, 740, 741, 798, 742, 743, 744, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 327, 326, 328,
	329, 330, 331, 0, 332, 333, 0, 0, 0, 0,
	0, 745, 0, 0, 0, 334, 0, 335, 336, 337,
	2237, 338, 339, 340, 341, 342, 343, 344, 746, 747,
	0, 345, 748, 346, 749, 0, 750, 347, 348, 349,
	350, 351, 352, 353, 0, 0, 0, 354, 751, 752,
	753, 0, 355, 356, 754, 0, 0, 0, 357, 358,
	359, 360, 361, 362, 363, 364, 0, 0, 366, 367,
	368, 365, 369, 370, 0, 371, 0, 372, 373, 374,
	375, 376, 377, 378, 0, 379, 380, 381, 0, 382,
	383, 384, 0, 0, 0, 0, 0, 0, 0, 385,
	386, 387, 388, 389, 0, 390, 392, 755, 756, 0,
	395, 397, 391, 393, 0, 396, 394, 398, 399, 0,
	400, 401, 402, 0, 0, 403, 404, 405, 0, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 757,
	414, 415, 416, 418, 420, 417, 419, 421, 422, 423,
	424, 425, 758, 759, 426, 427, 0, 319, 0, 0,
	0, 0, 0, 428, 429, 430, 760, 0, 0, 0,
	431, 0, 432, 433, 434, 0, 435, 436, 0, 0,
	437, 438, 439, 761, 762, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 0, 449, 763, 0, 764, 450,
	0, 451, 452, 453, 454, 455, 456, 457, 765, 766,
	767, 553, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 465, 0, 0, 0, 466, 467, 468, 469, 0,
	321, 320, 322, 0, 768, 470, 554, 471, 769, 770,
	0, 771, 0, 472, 473, 475, 0, 772, 0, 474,
	476, 477, 0, 478, 0, 0, 0, 479, 480, 481,
	482, 483, 484, 485, 0, 486, 488, 487, 0, 490,
	773, 489, 0, 491, 492, 0, 0, 493, 494, 495,
	496, 497, 498, 501, 0, 0, 499, 500, 502, 503,
	0, 504, 505, 507, 510, 506, 508, 509, 511, 524,
	525, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 527, 0, 526, 0, 528, 529, 530,
	531, 532, 540, 542, 543, 538, 539, 541, 544, 545,
	547, 535, 536, 537, 0, 546, 533, 0, 534, 323,
	0, 548, 549, 550, 551, 0, 774, 552, 775, 555,
	556, 0, 0, 557, 0, 558, 0, 0, 560, 561,
	562, 0, 0, 563, 564, 776, 0, 565, 0, 777,
	566, 567, 559, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 0, 578, 579, 778, 580, 581, 582,
	779, 583, 584, 585, 780, 586, 781, 587, 588, 0,
	589, 590, 591, 0, 592, 593, 594, 595, 596, 597,
	598, 599, 782, 600, 601, 603, 602, 604, 0, 605,
	0, 606, 607, 608, 0, 0, 0, 0, 0, 609,
	610, 612, 0, 613, 614, 615, 616, 611, 617, 618,
	619, 620, 621, 622, 0, 624, 625, 623, 626, 627,
	0, 628, 629, 630, 631, 632, 783, 633, 0, 634,
	635, 643, 644, 645, 636, 637, 639, 646, 638, 647,
	648, 649, 650, 652, 651, 0, 654, 655, 653, 656,
	657, 658, 0, 659, 784, 660, 640, 641, 661, 662,
	0, 663, 664, 665, 666, 667, 668, 669, 785, 0,
	670, 0, 671, 672, 673, 674, 675, 676, 678, 642,
	679, 684, 685, 786, 680, 681, 682, 683, 787, 687,
	688, 689, 690, 0, 691, 692, 0, 686, 677, 0,
	693, 694, 695, 696, 697, 698, 0, 699, 700, 0,
	701, 788, 789, 790, 791, 0, 713, 0, 702, 704,
	705, 706, 707, 792, 708, 793, 0, 709, 710, 711,
	712, 703, 714, 715, 0, 0, 716, 717, 718, 720,
	722, 723, 719, 721, 724, 0, 725, 0, 0, 726,
	727, 728, 794, 795, 796, 0, 730, 731, 729, 732,
	733, 736, 734, 735, 797, 737, 738, 739, 0, 0,
	316, 0, 740, 741, 798, 742, 743, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 327,
	326, 328, 329, 330, 331, 0, 332, 333, 0, 0,
	0, 0, 0, 745, 0, 0, 0, 334, 1843, 335,
	336, 337, 0, 338, 339, 340, 341, 342, 343, 344,
	746, 747, 0, 345, 748, 346, 749, 0, 750, 347,
	348, 349, 350, 351, 352, 353, 0, 0, 0, 354,
	751, 752, 753, 0, 355, 356, 754, 0, 0, 0,
	357, 358, 359, 360, 361, 362, 363, 364, 0, 0,
	366, 367, 368, 365, 369, 370, 0, 371, 0, 372,
	373, 374, 375, 376, 377, 378, 0, 379, 380, 381,
	0, 382, 383, 384, 0, 0, 0, 0, 0, 0,
	0, 385, 386, 387, 388, 389, 0, 390, 392, 755,
	756, 0, 395, 397, 391, 393, 0, 396, 394, 398,
	399, 0, 400, 401, 402, 0, 0, 403, 404, 405,
	0, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 757, 414, 415, 416, 418, 420, 417, 419, 421,
	422, 423, 424, 425, 758, 759, 426, 427, 0, 319,
	0, 0, 0, 0, 0, 428, 429, 430, 760, 0,
	0, 0, 431, 0, 432, 433, 434, 0, 435, 436,
	0, 0, 437, 438, 439, 761, 762, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 0, 449, 763, 0,
	764, 450, 0, 451, 452, 453, 454, 455, 456, 457,
	765, 766, 767, 553, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 465, 0, 0, 0, 466, 467, 468,
	469, 0, 321, 320, 322, 0, 768, 470, 554, 471,
	769, 770, 0, 771, 0, 472, 473, 475, 0, 772,
	0, 474, 476, 477, 0, 478, 0, 0, 0, 479,
	480, 481, 482, 483, 484, 485, 0, 486, 488, 487,
	0, 490, 773, 489, 0, 491, 492, 0, 0, 493,
	494, 495, 496, 497, 498, 501, 0, 0, 499, 500,
	502, 503, 0, 504, 505, 507, 510, 506, 508, 509,
	511, 524, 525, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 527, 0, 526, 0, 528,
	529, 530, 531, 532, 540, 542, 543, 538, 539, 541,
	544, 545, 547, 535, 536, 537, 0, 546, 533, 0,
	534, 323, 0, 548, 549, 550, 551, 0, 774, 552,
	775, 555, 556, 0, 0, 557, 0, 558, 0, 0,
	560, 561, 562, 0, 0, 563, 564, 776, 0, 565,
	0, 777, 566, 567, 559, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 0, 578, 579, 778, 580,
	581, 582, 779, 583, 584, 585, 780, 586, 781, 587,
	588, 0, 589, 590, 591, 0, 592, 593, 594, 595,
	596, 597, 598, 599, 782, 600, 601, 603, 602, 604,
	0, 605, 0, 606, 607, 608, 0, 0, 0, 0,
	0, 609, 610, 612, 0, 613, 614, 615, 616, 611,
	617, 618, 619, 620, 621, 622, 0, 624, 625, 623,
	626, 627, 0, 628, 629, 630, 631, 632, 783, 633,
	0, 634, 635, 643, 644, 645, 636, 637, 639, 646,
	638, 647, 648, 649, 650, 652, 651, 0, 654, 655,
	653, 656, 657, 658, 0, 659, 784, 660, 640, 641,
	661, 662, 0, 663, 664, 665, 666, 667, 668, 669,
	785, 0, 670, 0, 671, 672, 673, 674, 675, 676,
	678, 642, 679, 684, 685, 786, 680, 681, 682, 683,
	787, 687, 688, 689, 690, 0, 691, 692, 0, 686,
	677, 0, 693, 694, 695, 696, 697, 698, 0, 699,
	700, 0, 701, 788, 789, 790, 791, 0, 713, 0,
	702, 704, 705, 706, 707, 792, 708, 793, 0, 709,
	710, 711, 712, 703, 714, 715, 0, 0, 716, 717,
	718, 720, 722, 723, 719, 721, 724, 0, 725, 0,
	0, 726, 727, 728, 794, 795, 796, 0, 730, 731,
	729, 732, 733, 736, 734, 735, 797, 737, 738, 739,
	0, 0, 316, 3433, 740, 741, 798, 742, 743, 744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 0, 0, 0, 745, 0, 0, 0, 334,
	4162, 335, 336, 337, 0, 338, 339, 340, 341, 342,
	343, 344, 746, 747, 0, 345, 748, 346, 749, 0,
	750, 347, 348, 349, 350, 351, 352, 353, 0, 0,
	0, 354, 751, 752, 753, 0, 355, 356, 754, 0,
	0, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 0, 382, 383, 384, 0, 0, 0, 0,
	0, 0, 0, 385, 386, 387, 388, 389, 0, 390,
	392, 755, 756, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 757, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 758, 759, 426, 427,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 430,
	760, 0, 0, 0, 431, 0, 432, 433, 434, 0,
	435, 436, 0, 0, 437, 438, 439, 761, 762, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 0, 449,
	763, 0, 764, 450, 0, 451, 452, 453, 454, 455,
	456, 457, 765, 766, 767, 553, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 465, 0, 0, 0, 466,
	467, 468, 469, 0, 0, 0, 0, 0, 768, 470,
	554, 471, 769, 770, 0, 771, 0, 472, 473, 475,
	0, 772, 0, 474, 476, 477, 0, 478, 0, 0,
	0, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	488, 487, 0, 490, 773, 489, 0, 491, 492, 0,
	0, 493, 494, 495, 496, 497, 498, 501, 0, 0,
	499, 500, 502, 503, 0, 504, 505, 507, 510, 506,
	508, 509, 511, 524, 525, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 527, 0, 526,
	0, 528, 529, 530, 531, 532, 540, 542, 543, 538,
	539, 541, 544, 545, 547, 535, 536, 537, 0, 546,
	533, 0, 534, 0, 0, 548, 549, 550, 551, 0,
	774, 552, 775, 555, 556, 0, 0, 557, 0, 558,
	0, 0, 560, 561, 562, 0, 0, 563, 564, 776,
	0, 565, 0, 777, 566, 567, 559, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 0, 578, 579,
	778, 580, 581, 582, 779, 583, 584, 585, 780, 586,
	781, 587, 588, 0, 589, 590, 591, 0, 592, 593,
	594, 595, 596, 597, 598, 599, 782, 600, 601, 603,
	602, 604, 0, 605, 0, 606, 607, 608, 0, 0,
	0, 0, 0, 609, 610, 612, 0, 613, 614, 615,
	616, 611, 617, 618, 619, 620, 621, 622, 0, 624,
	625, 623, 626, 627, 0, 628, 629, 630, 631, 632,
	783, 633, 0, 634, 635, 643, 644, 645, 636, 637,
	639, 646, 638, 647, 648, 649, 650, 652, 651, 0,
	654, 655, 653, 656, 657, 658, 0, 659, 784, 660,
	640, 641, 661, 662, 0, 663, 664, 665, 666, 667,
	668, 669, 785, 0, 670, 0, 671, 672, 673, 674,
	675, 676, 678, 642, 679, 684, 685, 786, 680, 681,
	682, 683, 787, 687, 688, 689, 690, 0, 691, 692,
	0, 686, 677, 0, 693, 694, 695, 696, 697, 698,
	0, 699, 700, 0, 701, 788, 789, 790, 791, 0,
	713, 0, 702, 704, 705, 706, 707, 792, 708, 793,
	0, 709, 710, 711, 712, 703, 714, 715, 0, 0,
	716, 717, 718, 720, 722, 723, 719, 721, 724, 0,
	725, 0, 0, 726, 727, 728, 794, 795, 796, 0,
	730, 731, 729, 732, 733, 736, 734, 735, 797, 737,
	738, 739, 0, 0, 0, 0, 740, 741, 798, 742,
	743, 744, 1430, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 0, 0, 5689, 1331, 0, 0, 0, 334,
	0, 335, 336, 337, 1371, 338, 339, 340, 341, 342,
	343, 344, 746, 747, 0, 345, 748, 346, 749, 0,
	750, 347, 348, 349, 350, 351, 352, 353, 0, 1330,
	0, 354, 751, 752, 753, 0, 355, 356, 1337, 0,
	1318, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 1372, 382, 383, 384, 1321, 1319, 1320, 1327,
	1323, 1322, 1326, 385, 386, 387, 388, 389, 0, 390,
	392, 755, 756, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	404, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 757, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 1362, 1363, 426, 427,
	0, 319, 0, 0, 0, 0, 0, 428, 429, 430,
	760, 0, 0, 0, 431, 0, 432, 433, 434, 0,
	435, 436, 0, 1373, 437, 438, 439, 761, 762, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 0, 449,
	1369, 0, 764, 450, 0, 451, 452, 453, 454, 455,
	456, 457, 1332, 1333, 1336, 553, 1375, 458, 459, 460,
	0, 461, 462, 463, 464, 465, 0, 0, 0, 466,
	467, 468, 469, 0, 1274, 320, 322, 1374, 768, 470,
	554, 471, 769, 770, 0, 771, 0, 472, 473, 475,
	1376, 1334, 1377, 474, 476, 477, 1378, 478, 0, 0,
	0, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	488, 487, 0, 490, 1370, 489, 1379, 491, 492, 1380,
	0, 493, 494, 495, 496, 497, 498, 501, 1325, 1324,
	499, 500, 502, 503, 0, 504, 505, 507, 510, 506,
	508, 509, 511, 524, 525, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 527, 0, 526,
	1381, 528, 529, 530, 531, 532, 540, 542, 543, 538,
	539, 541, 544, 545, 547, 535, 536, 537, 1382, 546,
	533, 0, 534, 323, 1383, 548, 549, 550, 551, 0,
	1335, 552, 775, 555, 556, 0, 0, 557, 0, 558,
	0, 0, 560, 561, 562, 0, 0, 563, 564, 776,
	1384, 565, 1385, 1364, 566, 567, 559, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 0, 578, 579,
	778, 580, 581, 582, 779, 583, 584, 585, 1365, 586,
	781, 587, 588, 0, 589, 590, 591, 0, 592, 593,
	594, 595, 596, 597, 598, 599, 782, 600, 601, 603,
	602, 604, 0, 605, 0, 606, 607, 608, 0, 0,
	0, 0, 0, 609, 610, 612, 0, 613, 614, 615,
	616, 611, 617, 618, 619, 620, 621, 622, 0, 624,
	625, 623, 626, 627, 1386, 628, 629, 630, 631, 632,
	783, 633, 0, 634, 635, 643, 644, 645, 636, 637,
	639, 646, 638, 647, 648, 649, 650, 652, 651, 0,
	654, 655, 653, 656, 657, 658, 1328, 659, 784, 660,
	640, 641, 661, 662, 1387, 663, 664, 665, 666, 667,
	668, 669, 785, 0, 670, 0, 671, 672, 673, 674,
	675, 676, 678, 642, 679, 684, 685, 786, 680, 681,
	682, 683, 1366, 687, 688, 689, 690, 0, 691, 692,
	0, 686, 677, 0, 693, 694, 695, 696, 697, 698,
	0, 699, 700, 0, 701, 788, 789, 790, 791, 0,
	713, 0, 702, 704, 705, 706, 707, 1367, 708, 1368,
	0, 709, 710, 711, 712, 703, 714, 715, 0, 0,
	716, 717, 718, 720, 722, 723, 719, 721, 724, 1329,
	725, 0, 0, 726, 727, 728, 794, 795, 796, 0,
	730, 731, 729, 732, 733, 736, 734, 735, 797, 737,
	738, 739, 3241, 0, 0, 0, 740, 741, 798, 742,
	743, 744, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 327, 326, 328, 329, 330, 331, 0, 332, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 334,
	0, 335, 336, 337, 1371, 338, 339, 340, 341, 342,
	343, 344, 0, 2292, 0, 345, 2299, 346, 2298, 0,
	2307, 347, 348, 349, 350, 351, 352, 353, 0, 0,
	0, 354, 2310, 2311, 0, 0, 355, 356, 0, 0,
	1685, 0, 357, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 366, 367, 368, 365, 369, 370, 0, 371,
	0, 372, 373, 374, 375, 376, 377, 378, 0, 379,
	380, 381, 1372, 382, 383, 384, 0, 0, 0, 0,
	0, 0, 0, 385, 386, 387, 388, 389, 1354, 390,
	392, 2296, 2295, 0, 395, 397, 391, 393, 0, 396,
	394, 398, 399, 0, 400, 401, 402, 0, 0, 403,
	1339, 405, 0, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 414, 415, 416, 418, 420, 417,
	419, 421, 422, 423, 424, 425, 0, 0, 426, 427,
	0, 319, 0, 0, 0, 0, 0, 428, 429, 430,
	2294, 0, 0, 0, 431, 0, 432, 433, 434, 0,
	435, 436, 0, 1373, 437, 438, 439, 2305, 2306, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 0, 449,
	0, 0, 0, 450, 0, 451, 452, 453, 454, 455,
	456, 457, 0, 0, 0, 553, 1375, 458, 459, 460,
	3235, 461, 462, 463, 464, 465, 0, 0, 0, 466,
	467, 468, 469, 0, 0, 0, 0, 1374, 3237, 470,
	554, 471, 2289, 2290, 0, 2285, 0, 472, 473, 475,
	1376, 0, 1377, 474, 476, 477, 1378, 478, 0, 0,
	0, 479, 480, 481, 482, 483, 484, 485, 0, 486,
	488, 487, 0, 490, 0, 489, 1379, 491, 492, 1380,
	0, 493, 494, 495, 496, 497, 498, 501, 0, 0,
	499, 500, 502, 503, 0, 504, 505, 507, 510, 506,
	508, 509, 511, 524, 525, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 527, 0, 526,
	1381, 528, 529, 530, 531, 532, 540, 542, 543, 538,
	539, 541, 544, 545, 547, 535, 536, 537, 1382, 546,
	533, 0, 534, 0, 1383, 548, 549, 550, 551, 0,
	0, 552, 2297, 555, 556, 0, 0, 557, 0, 558,
	0, 0, 560, 561, 562, 0, 0, 563, 564, 3236,
	1384, 565, 1385, 0, 566, 567, 559, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 0, 578, 579,
	2282, 580, 581, 582, 2283, 583, 584, 585, 0, 586,
	0, 587, 588, 0, 589, 590, 591, 0, 592, 593,
	594, 595, 596, 597, 598, 599, 2293, 600, 601, 603,
	602, 604, 0, 605, 0, 606, 607, 608, 0, 0,
	0, 0, 0, 609, 610, 612, 0, 613, 614, 615,
	616, 611, 617, 618, 619, 620, 621, 622, 0, 624,
	625, 623, 626, 627, 1386, 628, 629, 630, 631, 632,
	0, 633, 0, 634, 635, 643, 644, 645, 636, 637,
	639, 646, 638, 647, 648, 649, 650, 652, 651, 0,
	654, 655, 653, 656, 657, 658, 0, 659, 0, 660,
	640, 641, 661, 662, 1387, 663, 664, 665, 666, 667,
	668, 669, 2291, 0, 670, 0, 671, 672, 673, 674,
	675, 676, 678, 642, 679, 684, 685, 2309, 680, 681,
	682, 683, 0, 687, 688, 689, 690, 0, 691, 692,
	0, 686, 677, 0, 693, 694, 695, 696, 697, 698,
	0, 699, 700, 0, 701, 2301, 2302, 2303, 2304, 0,
	713, 0, 702, 704, 705, 706, 707, 0, 708, 0,
	0, 709, 710, 711, 712, 703, 714, 715, 0, 0,
	716, 717, 718, 720, 722, 723, 719, 721, 724, 0,
	725, 0, 0, 726, 727, 728, 0, 2300, 2308, 3238,
	730, 731, 729, 732, 733, 736, 734, 735, 0, 737,
	738, 739, 0, 0, 0, 0, 740, 741, 0, 742,
	743, 744, 0, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 3230, 745, 0, 2278, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 0, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 3241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 3552, 0, 0, 0, 0,
	334, 0, 335, 336, 337, 1371, 338, 339, 340, 341,
	342, 343, 344, 0, 2292, 0, 345, 2299, 346, 2298,
	0, 2307, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 2310, 2311, 0, 0, 355, 356, 0,
	0, 1685, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 1372, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 1354,
	390, 392, 2296, 2295, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 1339, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 0, 0, 426,
	427, 0, 319, 0, 0, 0, 0, 0, 428, 429,
	430, 2294, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 1373, 437, 438, 439, 2305, 2306,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 0, 0, 0, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 0, 0, 0, 553, 1375, 458, 459,
	460, 3235, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 1374, 3237,
	470, 554, 471, 2289, 2290, 0, 2285, 0, 472, 473,
	475, 1376, 0, 1377, 474, 476, 477, 1378, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 0, 489, 1379, 491, 492,
	1380, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 1381, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 1382,
	546, 533, 0, 534, 0, 1383, 548, 549, 550, 551,
	0, 0, 552, 2297, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	3236, 1384, 565, 1385, 0, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 2282, 580, 581, 582, 2283, 583, 584, 585, 0,
	586, 0, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 2293, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 1386, 628, 629, 630, 631,
	632, 0, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 0,
	660, 640, 641, 661, 662, 1387, 663, 664, 665, 666,
	667, 668, 669, 2291, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 2309, 680,
	681, 682, 683, 0, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 2301, 2302, 2303, 2304,
	0, 713, 0, 702, 704, 705, 706, 707, 0, 708,
	0, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 0, 2300, 2308,
	3238, 730, 731, 729, 732, 733, 736, 734, 735, 0,
	737, 738, 739, 0, 0, 0, 0, 740, 741, 0,
	742, 743, 744, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 2278,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 4332, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 0, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 1065, 0, 964, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 2653, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 971,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 1062, 0, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 765, 766, 767, 553, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 321, 320, 322,
	0, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 0, 772, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 0,
	491, 492, 0, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 0, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 323, 0, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 0, 565, 0, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 1064, 0, 686, 677, 969, 693, 694, 695,
	696, 697, 970, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 2260, 0, 0, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	4465, 332, 333, 0, 0, 0, 0, 0, 745, 974,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 2267,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 2268, 758,
	759, 426, 427, 0, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 0, 2269, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 765, 766, 767, 553, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 321, 320, 322,
	0, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 0, 772, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 0,
	491, 492, 0, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 0, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 323, 0, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 0, 565, 0, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 4464, 638, 647, 648, 649, 650,
	652, 651, 0, 2264, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 2266, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 4463, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 2286, 0, 0, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 0, 974,
	0, 0, 334, 0, 335, 336, 337, 1371, 338, 339,
	340, 341, 342, 343, 344, 0, 2292, 0, 345, 2299,
	346, 2298, 0, 2307, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 2310, 2311, 0, 0, 355,
	356, 0, 0, 1685, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 1372, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 1354, 390, 392, 2296, 2295, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 1339, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 0,
	0, 426, 427, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 430, 2294, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 1373, 437, 438, 439,
	2305, 2306, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 0, 0, 0, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 0, 0, 0, 553, 1375,
	458, 459, 460, 3235, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 0, 0, 0,
	1374, 3237, 470, 554, 471, 2289, 2290, 0, 2285, 0,
	472, 473, 475, 1376, 0, 1377, 474, 476, 477, 1378,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 0, 489, 1379,
	491, 492, 1380, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 1381, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 1382, 546, 533, 0, 534, 0, 1383, 548, 549,
	550, 551, 0, 0, 552, 2297, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 3236, 1384, 565, 1385, 0, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 2282, 580, 581, 582, 2283, 583, 584,
	585, 0, 586, 0, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 2293,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 1386, 628, 629,
	630, 631, 632, 0, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 0, 660, 640, 641, 661, 662, 1387, 663, 664,
	665, 666, 667, 668, 669, 2291, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	2309, 680, 681, 682, 683, 0, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 2301, 2302,
	2303, 2304, 0, 713, 0, 702, 704, 705, 706, 707,
	0, 708, 0, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 0,
	2300, 2308, 3238, 730, 731, 729, 732, 733, 736, 734,
	735, 0, 737, 738, 739, 0, 0, 0, 0, 740,
	741, 0, 742, 743, 744, 2260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	2315, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 2278, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 2267,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 2268, 758,
	759, 426, 427, 0, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 0, 2269, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 765, 766, 767, 553, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 321, 320, 322,
	0, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 0, 772, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 0,
	491, 492, 0, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 0, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 323, 0, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 0, 565, 0, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 2314, 638, 647, 648, 649, 650,
	652, 651, 0, 2316, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 2266, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 2313, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 2260, 0, 0, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	2259, 332, 333, 0, 0, 0, 0, 0, 745, 974,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 2267,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 2268, 758,
	759, 426, 427, 0, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 0, 2269, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 765, 766, 767, 553, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 321, 320, 322,
	0, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 0, 772, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 0,
	491, 492, 0, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 0, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 323, 0, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 0, 565, 0, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 2258, 638, 647, 648, 649, 650,
	652, 651, 0, 2264, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 2266, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 2257, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 962, 0, 964, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 974,
	745, 0, 0, 0, 334, 0, 335, 336, 337, 0,
	338, 339, 340, 341, 342, 343, 344, 746, 747, 0,
	345, 748, 346, 749, 0, 750, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 751, 752, 753,
	0, 355, 356, 754, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 971, 389, 0, 390, 392, 755, 756, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 757, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 758, 759, 426, 427, 0, 319, 0, 0, 0,
	0, 0, 428, 429, 430, 760, 0, 0, 0, 431,
	0, 432, 433, 434, 0, 435, 436, 0, 0, 437,
	438, 439, 761, 762, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 0, 449, 763, 0, 764, 450, 0,
	451, 452, 453, 454, 455, 456, 457, 765, 766, 767,
	553, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	465, 0, 0, 0, 466, 467, 468, 469, 0, 321,
	320, 322, 0, 768, 470, 554, 471, 769, 770, 0,
	771, 0, 472, 473, 475, 0, 772, 0, 474, 476,
	477, 0, 478, 0, 0, 0, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 488, 487, 0, 490, 773,
	489, 0, 491, 492, 0, 0, 493, 494, 495, 496,
	497, 498, 501, 0, 0, 499, 500, 502, 503, 0,
	504, 505, 507, 510, 506, 508, 509, 511, 524, 525,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 527, 0, 526, 0, 528, 529, 530, 531,
	532, 540, 542, 543, 538, 539, 541, 544, 545, 547,
	535, 536, 537, 0, 546, 533, 0, 534, 323, 0,
	548, 549, 550, 551, 0, 774, 552, 775, 555, 556,
	0, 0, 557, 0, 558, 0, 0, 560, 561, 562,
	0, 0, 563, 564, 776, 0, 565, 0, 777, 566,
	567, 559, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 578, 579, 778, 580, 581, 582, 779,
	583, 584, 585, 780, 586, 781, 587, 588, 0, 589,
	590, 591, 0, 592, 593, 594, 595, 596, 597, 598,
	599, 782, 600, 601, 603, 602, 604, 0, 605, 0,
	606, 607, 608, 0, 0, 0, 0, 0, 609, 610,
	612, 0, 613, 614, 615, 616, 611, 617, 618, 619,
	620, 621, 622, 0, 624, 625, 623, 626, 627, 0,
	628, 629, 630, 631, 632, 783, 633, 0, 634, 635,
	643, 644, 645, 636, 637, 639, 646, 638, 647, 648,
	649, 650, 652, 651, 0, 654, 655, 653, 656, 657,
	658, 0, 659, 784, 660, 640, 641, 661, 662, 0,
	663, 664, 665, 666, 667, 668, 669, 785, 0, 670,
	0, 671, 672, 673, 674, 675, 676, 678, 642, 679,
	684, 685, 786, 680, 681, 682, 683, 787, 687, 688,
	689, 690, 0, 691, 692, 0, 686, 677, 969, 693,
	694, 695, 696, 697, 970, 0, 699, 700, 0, 701,
	788, 789, 790, 791, 0, 713, 0, 702, 704, 705,
	706, 707, 792, 708, 793, 0, 709, 710, 711, 712,
	703, 714, 715, 0, 0, 716, 717, 718, 720, 722,
	723, 719, 721, 724, 0, 725, 0, 0, 726, 727,
	728, 794, 795, 796, 0, 730, 731, 729, 732, 733,
	736, 734, 735, 797, 737, 738, 739, 964, 0, 0,
	0, 740, 741, 798, 742, 743, 744, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 0,
	745, 974, 0, 0, 334, 0, 335, 336, 337, 0,
	338, 339, 340, 341, 342, 343, 344, 746, 747, 0,
	345, 748, 346, 749, 0, 750, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 751, 752, 753,
	0, 355, 356, 754, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 971, 389, 0, 390, 392, 755, 756, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 757, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 758, 759, 426, 427, 0, 319, 0, 0, 0,
	0, 0, 428, 429, 430, 760, 0, 0, 0, 431,
	0, 432, 433, 434, 0, 435, 436, 0, 0, 437,
	438, 439, 761, 762, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 0, 449, 763, 0, 764, 450, 0,
	451, 452, 453, 454, 455, 456, 457, 765, 766, 767,
	553, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	465, 0, 0, 0, 466, 467, 468, 469, 0, 321,
	320, 322, 0, 768, 470, 554, 471, 769, 770, 0,
	771, 0, 472, 473, 475, 0, 772, 0, 474, 476,
	477, 0, 478, 0, 0, 0, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 488, 487, 0, 490, 773,
	489, 0, 491, 492, 0, 0, 493, 494, 495, 496,
	497, 498, 501, 0, 0, 499, 500, 502, 503, 0,
	504, 505, 507, 510, 506, 508, 509, 511, 524, 525,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 527, 0, 526, 0, 528, 529, 530, 531,
	532, 540, 542, 543, 538, 539, 541, 544, 545, 547,
	535, 536, 537, 0, 546, 533, 0, 534, 323, 0,
	548, 549, 550, 551, 0, 774, 552, 775, 555, 556,
	0, 0, 557, 0, 558, 0, 0, 560, 561, 562,
	0, 0, 563, 564, 776, 0, 565, 0, 777, 566,
	567, 559, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 578, 579, 778, 580, 581, 582, 779,
	583, 584, 585, 780, 586, 781, 587, 588, 0, 589,
	590, 591, 0, 592, 593, 594, 595, 596, 597, 598,
	599, 782, 600, 601, 603, 602, 604, 0, 605, 0,
	606, 607, 608, 0, 0, 0, 0, 0, 609, 610,
	612, 0, 613, 614, 615, 616, 611, 617, 618, 619,
	620, 621, 622, 0, 624, 625, 623, 626, 627, 0,
	628, 629, 630, 631, 632, 783, 633, 0, 634, 635,
	643, 644, 645, 636, 637, 639, 646, 638, 647, 648,
	649, 650, 652, 651, 0, 654, 655, 653, 656, 657,
	658, 0, 659, 784, 660, 640, 641, 661, 662, 0,
	663, 664, 665, 666, 667, 668, 669, 785, 0, 670,
	0, 671, 672, 673, 674, 675, 676, 678, 642, 679,
	684, 685, 786, 680, 681, 682, 683, 787, 687, 688,
	689, 690, 0, 691, 692, 0, 686, 677, 969, 693,
	694, 695, 696, 697, 970, 0, 699, 700, 0, 701,
	788, 789, 790, 791, 0, 713, 0, 702, 704, 705,
	706, 707, 792, 708, 793, 0, 709, 710, 711, 712,
	703, 714, 715, 0, 0, 716, 717, 718, 720, 722,
	723, 719, 721, 724, 0, 725, 0, 0, 726, 727,
	728, 794, 795, 796, 0, 730, 731, 729, 732, 733,
	736, 734, 735, 797, 737, 738, 739, 3221, 0, 316,
	0, 740, 741, 798, 742, 743, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 974, 745, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 746,
	747, 0, 345, 748, 346, 749, 0, 750, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 751,
	752, 753, 0, 355, 356, 754, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 755, 756,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	757, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 758, 759, 426, 427, 0, 319, 0,
	0, 0, 0, 0, 428, 429, 430, 760, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	0, 437, 438, 439, 761, 762, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 0, 449, 763, 0, 764,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 765,
	766, 767, 553, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 321, 320, 322, 0, 768, 470, 554, 471, 769,
	770, 0, 771, 0, 472, 473, 475, 0, 772, 0,
	474, 476, 477, 0, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 773, 489, 0, 491, 492, 0, 0, 493, 494,
	495, 496, 497, 498, 501, 0, 0, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 0, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 0, 546, 533, 0, 534,
	323, 0, 548, 549, 550, 551, 0, 774, 552, 775,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 776, 0, 565, 0,
	777, 566, 567, 559, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 778, 580, 581,
	582, 779, 583, 584, 585, 780, 586, 781, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 782, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 0, 628, 629, 630, 631, 632, 783, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 650, 652, 651, 0, 654, 655, 653,
	656, 657, 658, 0, 659, 784, 660, 640, 641, 661,
	662, 0, 663, 664, 665, 666, 667, 668, 669, 785,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 786, 680, 681, 682, 683, 787,
	687, 688, 689, 690, 0, 691, 692, 0, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 788, 789, 790, 791, 0, 713, 0, 702,
	704, 705, 706, 707, 792, 708, 793, 0, 709, 710,
	711, 712, 703, 714, 715, 0, 0, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 0, 725, 0, 0,
	726, 727, 728, 794, 795, 796, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 797, 737, 738, 739, 2260,
	0, 0, 0, 740, 741, 798, 742, 743, 744, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 745, 974, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 746,
	747, 0, 345, 748, 346, 749, 0, 750, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 751,
	752, 753, 0, 355, 356, 754, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 2267, 389, 0, 390, 392, 755, 756,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	757, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 2268, 758, 759, 426, 427, 0, 319, 0,
	0, 0, 0, 0, 428, 429, 430, 760, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	0, 2269, 438, 439, 761, 762, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 0, 449, 763, 0, 764,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 765,
	766, 767, 553, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 321, 320, 322, 0, 768, 470, 554, 471, 769,
	770, 0, 771, 0, 472, 473, 475, 0, 772, 0,
	474, 476, 477, 0, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 773, 489, 0, 491, 492, 0, 0, 493, 494,
	495, 496, 497, 498, 501, 0, 0, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 0, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 0, 546, 533, 0, 534,
	323, 0, 548, 549, 550, 551, 0, 774, 552, 775,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 776, 0, 565, 0,
	777, 566, 567, 559, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 778, 580, 581,
	582, 779, 583, 584, 585, 780, 586, 781, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 782, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 0, 2707, 629, 630, 631, 632, 783, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 2708, 638,
	647, 648, 649, 650, 652, 651, 0, 2264, 655, 653,
	656, 657, 658, 0, 659, 784, 660, 640, 641, 661,
	662, 0, 663, 664, 665, 666, 667, 668, 669, 785,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 786, 680, 681, 682, 683, 787,
	687, 688, 689, 690, 0, 691, 692, 0, 686, 677,
	2266, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 788, 789, 790, 791, 0, 713, 0, 702,
	704, 705, 706, 707, 792, 708, 793, 0, 709, 710,
	2709, 712, 703, 714, 715, 0, 0, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 0, 725, 0, 0,
	726, 727, 728, 794, 795, 796, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 797, 737, 738, 739, 316,
	0, 0, 0, 740, 741, 798, 742, 743, 744, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 745, 974, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 746,
	747, 0, 345, 748, 346, 749, 0, 750, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 751,
	752, 753, 0, 355, 356, 754, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 755, 756,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	757, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 758, 759, 426, 427, 0, 319, 0,
	0, 0, 0, 0, 428, 429, 430, 760, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	0, 437, 438, 439, 761, 762, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 0, 449, 763, 0, 764,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 765,
	766, 767, 553, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 321, 320, 322, 0, 768, 470, 554, 471, 769,
	770, 0, 771, 0, 472, 473, 475, 0, 772, 0,
	474, 476, 477, 0, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 773, 489, 0, 491, 492, 0, 0, 493, 494,
	495, 496, 497, 498, 501, 0, 0, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 0, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 0, 546, 533, 0, 534,
	323, 0, 548, 549, 550, 551, 0, 774, 552, 775,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 776, 0, 565, 0,
	777, 566, 567, 559, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 778, 580, 581,
	582, 779, 583, 584, 585, 780, 586, 781, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 782, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 0, 628, 629, 630, 631, 632, 783, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 650, 652, 651, 0, 654, 655, 653,
	656, 657, 658, 0, 659, 784, 660, 640, 641, 661,
	662, 0, 663, 664, 665, 666, 667, 668, 669, 785,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 786, 680, 681, 682, 683, 787,
	687, 688, 689, 690, 0, 691, 692, 0, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 788, 789, 790, 791, 0, 713, 0, 702,
	704, 705, 706, 707, 792, 708, 793, 0, 709, 710,
	711, 712, 703, 714, 715, 0, 0, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 0, 725, 0, 0,
	726, 727, 728, 794, 795, 796, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 797, 737, 738, 739, 316,
	0, 0, 0, 740, 741, 798, 742, 743, 744, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 745, 974, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 746,
	747, 0, 345, 748, 346, 749, 0, 750, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 751,
	752, 753, 0, 355, 356, 754, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 755, 756,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	757, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 758, 759, 426, 427, 0, 319, 0,
	0, 0, 0, 0, 428, 429, 430, 760, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	0, 437, 438, 439, 761, 762, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 0, 449, 763, 0, 764,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 765,
	766, 767, 553, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 321, 320, 322, 0, 768, 470, 554, 471, 769,
	770, 0, 771, 0, 472, 473, 475, 0, 772, 0,
	474, 476, 477, 0, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 773, 489, 0, 491, 492, 0, 0, 493, 494,
	495, 496, 497, 498, 501, 0, 0, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 0, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 0, 546, 533, 0, 534,
	323, 0, 548, 549, 550, 551, 0, 774, 552, 775,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 776, 0, 565, 0,
	777, 566, 567, 559, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 778, 580, 581,
	582, 779, 583, 584, 585, 780, 586, 781, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 782, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 0, 628, 629, 630, 631, 632, 783, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 650, 652, 651, 0, 654, 655, 653,
	656, 657, 658, 0, 659, 784, 660, 640, 641, 661,
	662, 0, 663, 664, 665, 666, 667, 668, 669, 785,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 786, 680, 681, 682, 683, 787,
	687, 688, 689, 690, 0, 691, 692, 0, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 788, 789, 790, 791, 0, 713, 0, 702,
	704, 705, 706, 707, 792, 708, 793, 0, 709, 710,
	711, 712, 703, 714, 715, 0, 0, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 0, 725, 0, 0,
	726, 727, 728, 794, 795, 796, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 797, 737, 738, 739, 3241,
	0, 0, 0, 740, 741, 798, 742, 743, 744, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 0, 930, 0, 0, 334, 0, 335, 336,
	337, 1371, 338, 339, 340, 341, 342, 343, 344, 0,
	2292, 0, 345, 2299, 346, 2298, 0, 2307, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 2310,
	2311, 0, 0, 355, 356, 0, 0, 1685, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 1372,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 1354, 390, 392, 2296, 2295,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 1339, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 0, 0, 426, 427, 0, 319, 0,
	0, 0, 0, 0, 428, 429, 430, 2294, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	1373, 437, 438, 439, 2305, 2306, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 0, 449, 0, 0, 0,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 0,
	0, 0, 553, 1375, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 0, 0, 0, 1374, 0, 470, 554, 471, 2289,
	2290, 0, 2285, 0, 472, 473, 475, 1376, 0, 1377,
	474, 476, 477, 1378, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 0, 489, 1379, 491, 492, 1380, 0, 493, 494,
	495, 496, 497, 498, 501, 0, 0, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 1381, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 1382, 546, 533, 0, 534,
	0, 1383, 548, 549, 550, 551, 0, 0, 552, 2297,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 0, 1384, 565, 1385,
	0, 566, 567, 559, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 2282, 580, 581,
	582, 2283, 583, 584, 585, 0, 586, 0, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 2293, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 1386, 628, 629, 630, 631, 632, 0, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 650, 652, 651, 0, 654, 655, 653,
	656, 657, 658, 0, 659, 0, 660, 640, 641, 661,
	662, 1387, 663, 664, 665, 666, 667, 668, 669, 2291,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 2309, 680, 681, 682, 683, 0,
	687, 688, 689, 690, 0, 691, 692, 0, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 2301, 2302, 2303, 2304, 0, 713, 0, 702,
	704, 705, 706, 707, 0, 708, 0, 0, 709, 710,
	711, 712, 703, 714, 715, 0, 0, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 0, 725, 0, 0,
	726, 727, 728, 0, 2300, 2308, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 2286, 737, 738, 739, 0,
	0, 0, 0, 740, 741, 0, 742, 743, 744, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 334, 0, 335, 336, 337, 1371, 338, 339,
	340, 341, 342, 343, 344, 2278, 2292, 0, 345, 2299,
	346, 2298, 0, 2307, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 2310, 2311, 0, 0, 355,
	356, 0, 0, 1685, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 1372, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 1354, 390, 392, 2296, 2295, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 1339, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 0,
	0, 426, 427, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 430, 2294, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 1373, 437, 438, 439,
	2305, 2306, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 0, 0, 0, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 0, 0, 0, 553, 1375,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 0, 0, 0,
	1374, 0, 470, 554, 471, 2289, 2290, 0, 2285, 0,
	472, 473, 475, 1376, 0, 1377, 474, 476, 477, 1378,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 0, 489, 1379,
	491, 492, 1380, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 1381, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 1382, 546, 533, 0, 534, 0, 1383, 548, 549,
	550, 551, 0, 0, 552, 2297, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 0, 1384, 565, 1385, 0, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 2282, 580, 581, 582, 2283, 583, 584,
	585, 0, 586, 0, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 2293,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 1386, 628, 629,
	630, 631, 632, 0, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 0, 660, 640, 641, 661, 662, 1387, 663, 664,
	665, 666, 667, 668, 669, 2291, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	2309, 680, 681, 682, 683, 0, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 2301, 2302,
	2303, 2304, 0, 713, 0, 702, 704, 705, 706, 707,
	0, 708, 0, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 0,
	2300, 2308, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 0, 737, 738, 739, 0, 0, 0, 0, 740,
	741, 0, 742, 743, 744, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 2278, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 0, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 765, 766, 767, 553, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 0, 0, 0,
	0, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 0, 772, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 0,
	491, 492, 0, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 0, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 0, 0, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 0, 565, 0, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 0, 0, 0, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 1719, 1718, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4713,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 1371, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 1685, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 1372, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 319, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 1373, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 1375, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 1374, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 1376, 772, 1377, 474, 476, 477, 1378, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 1379, 491, 492,
	1380, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 1381, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 1382,
	546, 533, 0, 534, 0, 1383, 548, 549, 550, 551,
	4592, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 1384, 565, 1385, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 1386, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 1387, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 0, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 3637, 0, 1719, 1718, 0, 0, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 1371, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 1685, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 1372, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 1373, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 765, 766, 767, 553, 1375,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 0, 0, 0,
	1374, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 1376, 772, 1377, 474, 476, 477, 1378,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 1379,
	491, 492, 1380, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 1381, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 1382, 546, 533, 0, 534, 0, 1383, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 1384, 565, 1385, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 1386, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 1387, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 0, 0, 0, 0, 740,
	741, 798, 742, 743, 744, 2589, 0, 1719, 1718, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 334, 0, 335, 336, 337, 1371,
	338, 339, 340, 341, 342, 343, 344, 746, 747, 0,
	345, 748, 346, 749, 0, 750, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 751, 752, 753,
	0, 355, 356, 754, 0, 1685, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 1372, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 388, 389, 0, 390, 392, 755, 756, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 757, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 758, 759, 426, 427, 0, 319, 0, 0, 0,
	0, 0, 428, 429, 430, 760, 0, 0, 0, 431,
	0, 432, 433, 434, 0, 435, 436, 0, 1373, 437,
	438, 439, 761, 762, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 0, 449, 763, 0, 764, 450, 0,
	451, 452, 453, 454, 455, 456, 457, 1776, 766, 767,
	553, 1375, 458, 459, 460, 0, 461, 462, 463, 464,
	465, 0, 0, 0, 466, 467, 468, 469, 0, 0,
	0, 0, 1374, 768, 470, 554, 471, 769, 770, 0,
	771, 0, 472, 473, 475, 1376, 772, 1377, 474, 476,
	477, 1378, 478, 0, 0, 0, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 488, 487, 0, 490, 773,
	489, 1379, 491, 492, 1380, 0, 493, 494, 495, 496,
	497, 498, 501, 0, 0, 499, 500, 502, 503, 0,
	504, 505, 507, 510, 506, 508, 509, 511, 524, 525,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 527, 0, 526, 1381, 528, 529, 530, 531,
	532, 540, 542, 543, 538, 539, 541, 544, 545, 547,
	535, 536, 537, 1382, 546, 533, 0, 534, 0, 1383,
	548, 549, 550, 551, 0, 774, 552, 775, 555, 556,
	0, 0, 557, 0, 558, 0, 0, 560, 561, 562,
	0, 0, 563, 564, 776, 1384, 565, 1385, 777, 566,
	567, 559, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 578, 579, 778, 580, 581, 582, 779,
	583, 584, 585, 780, 586, 781, 587, 588, 0, 589,
	590, 591, 0, 592, 593, 594, 595, 596, 597, 598,
	599, 782, 600, 601, 603, 602, 604, 0, 605, 0,
	606, 607, 608, 0, 0, 0, 0, 0, 609, 610,
	612, 0, 613, 614, 615, 616, 611, 617, 618, 619,
	620, 621, 622, 0, 624, 625, 623, 626, 627, 1386,
	628, 629, 630, 631, 632, 783, 633, 0, 634, 635,
	643, 644, 645, 636, 637, 639, 646, 638, 647, 648,
	649, 650, 652, 651, 0, 654, 655, 653, 656, 657,
	658, 0, 659, 784, 660, 640, 641, 661, 662, 1387,
	663, 664, 665, 666, 667, 668, 669, 785, 0, 670,
	0, 671, 672, 673, 674, 675, 676, 678, 642, 679,
	684, 685, 786, 680, 681, 682, 683, 787, 687, 688,
	689, 690, 0, 691, 692, 0, 686, 677, 0, 693,
	694, 695, 696, 697, 698, 0, 699, 700, 0, 701,
	788, 789, 790, 791, 0, 713, 0, 702, 704, 705,
	706, 707, 792, 708, 793, 0, 709, 710, 711, 712,
	703, 714, 715, 0, 0, 716, 717, 718, 720, 722,
	723, 719, 721, 724, 0, 725, 0, 0, 726, 727,
	728, 794, 795, 796, 0, 730, 731, 729, 732, 733,
	736, 734, 735, 797, 737, 738, 739, 0, 0, 0,
	0, 740, 741, 798, 742, 743, 744, 2324, 0, 1719,
	1718, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 334, 0, 335, 336,
	337, 1371, 338, 339, 340, 341, 342, 343, 344, 746,
	747, 0, 345, 748, 346, 749, 0, 750, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 751,
	752, 753, 0, 355, 356, 754, 0, 1685, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 1372,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 755, 756,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	757, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 758, 759, 426, 427, 0, 319, 0,
	0, 0, 0, 0, 428, 429, 430, 760, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	1373, 437, 438, 439, 761, 762, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 0, 449, 763, 0, 764,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 765,
	766, 767, 553, 1375, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 0, 0, 0, 1374, 768, 470, 554, 471, 769,
	770, 0, 771, 0, 472, 473, 475, 1376, 772, 1377,
	474, 476, 477, 1378, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 773, 489, 1379, 491, 492, 1380, 0, 493, 494,
	495, 496, 497, 498, 501, 0, 0, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 1381, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 1382, 546, 533, 0, 534,
	0, 1383, 548, 549, 550, 551, 0, 774, 552, 775,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 776, 1384, 565, 1385,
	777, 566, 567, 559, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 778, 580, 581,
	582, 779, 583, 584, 585, 780, 586, 781, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 782, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 1386, 628, 629, 630, 631, 632, 783, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 650, 652, 651, 0, 654, 655, 653,
	656, 657, 658, 0, 659, 784, 660, 640, 641, 661,
	662, 1387, 663, 664, 665, 666, 667, 668, 669, 785,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 786, 680, 681, 682, 683, 787,
	687, 688, 689, 690, 0, 691, 692, 0, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 788, 789, 790, 791, 0, 713, 0, 702,
	704, 705, 706, 707, 792, 708, 793, 0, 709, 710,
	711, 712, 703, 714, 715, 0, 0, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 0, 725, 0, 0,
	726, 727, 728, 794, 795, 796, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 797, 737, 738, 739, 0,
	0, 0, 0, 740, 741, 798, 742, 743, 744, 1906,
	0, 1719, 1718, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 334, 0,
	335, 336, 337, 1371, 338, 339, 340, 341, 342, 343,
	344, 746, 747, 0, 345, 748, 346, 749, 0, 750,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 751, 752, 753, 0, 355, 356, 754, 0, 1685,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 1372, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	755, 756, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 757, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 758, 759, 426, 427, 0,
	319, 0, 0, 0, 0, 0, 1903, 429, 430, 760,
	0, 0, 0, 431, 0, 432, 433, 434, 0, 435,
	436, 0, 1373, 437, 438, 439, 761, 762, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 0, 449, 763,
	0, 764, 450, 0, 451, 452, 453, 454, 455, 456,
	457, 765, 766, 767, 553, 1375, 458, 459, 460, 0,
	461, 462, 463, 464, 465, 0, 0, 0, 466, 467,
	468, 469, 0, 0, 0, 0, 1374, 768, 470, 554,
	471, 769, 770, 0, 771, 0, 472, 473, 475, 1376,
	772, 1377, 474, 476, 477, 1378, 478, 0, 0, 0,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 488,
	487, 0, 490, 773, 489, 1379, 491, 492, 1380, 0,
	493, 494, 495, 496, 497, 498, 501, 0, 0, 499,
	500, 502, 503, 0, 504, 505, 507, 510, 506, 508,
	509, 511, 524, 525, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 527, 0, 526, 1381,
	528, 529, 530, 531, 532, 540, 542, 543, 538, 539,
	541, 544, 545, 547, 535, 536, 537, 1382, 546, 533,
	0, 534, 0, 1383, 548, 549, 550, 551, 0, 774,
	552, 775, 555, 556, 0, 0, 557, 0, 558, 0,
	0, 560, 561, 562, 0, 0, 563, 564, 776, 1384,
	565, 1385, 777, 566, 567, 559, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 578, 579, 778,
	580, 581, 582, 779, 583, 584, 585, 780, 586, 781,
	587, 588, 0, 589, 590, 591, 0, 592, 593, 594,
	595, 596, 597, 1904, 599, 782, 600, 601, 603, 602,
	604, 0, 605, 0, 606, 607, 608, 0, 0, 0,
	0, 0, 609, 610, 612, 0, 613, 614, 615, 616,
	611, 617, 618, 619, 620, 621, 622, 0, 624, 625,
	623, 626, 627, 1386, 628, 629, 630, 631, 632, 783,
	633, 0, 634, 635, 643, 644, 645, 636, 637, 639,
	646, 638, 1902, 648, 649, 650, 652, 651, 0, 654,
	655, 653, 656, 657, 658, 0, 659, 784, 660, 640,
	641, 661, 662, 1387, 663, 664, 665, 666, 667, 668,
	669, 785, 0, 670, 0, 671, 672, 673, 674, 675,
	676, 678, 642, 679, 684, 685, 786, 680, 681, 682,
	683, 787, 687, 688, 689, 690, 0, 691, 692, 0,
	686, 677, 0, 693, 694, 695, 696, 697, 698, 0,
	699, 700, 0, 701, 788, 789, 790, 791, 0, 713,
	0, 702, 704, 705, 706, 707, 792, 708, 793, 0,
	709, 710, 711, 712, 703, 714, 715, 0, 0, 716,
	717, 718, 720, 722, 723, 719, 721, 724, 0, 725,
	0, 0, 726, 1905, 728, 794, 795, 796, 0, 730,
	731, 729, 732, 733, 736, 734, 735, 797, 737, 738,
	739, 0, 0, 0, 0, 740, 741, 798, 742, 743,
	744, 1773, 0, 1719, 1718, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 1371, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 1685, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 1372, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 319, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 1373, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 1776, 766, 767, 553, 1375, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 1374, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 1376, 772, 1377, 474, 476, 477, 1378, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 1379, 491, 492,
	1380, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 1381, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 1382,
	546, 533, 0, 534, 0, 1383, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 1384, 565, 1385, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 1386, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 1387, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 0, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 1714, 0, 1719, 1718, 0, 0, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 1371, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 1685, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 1372, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 1373, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 765, 766, 767, 553, 1375,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 0, 0, 0,
	1374, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 1376, 772, 1377, 474, 476, 477, 1378,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 1379,
	491, 492, 1380, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 1381, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 1382, 546, 533, 0, 534, 0, 1383, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 1384, 565, 1385, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 1386, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 1712, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 1387, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 0, 0, 0, 0, 740,
	741, 798, 742, 743, 744, 1719, 1718, 0, 0, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 1371, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 1685, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 1372, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 1373, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 765, 766, 767, 553, 1375,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 0, 0, 0,
	1374, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 1376, 772, 1377, 474, 476, 477, 1378,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 1379,
	491, 492, 1380, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 1381, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 1382, 546, 533, 0, 534, 0, 1383, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 1384, 565, 1385, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 1386, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 1387, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 1719, 1718, 0, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 1371, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 1685, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 1372, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 1373, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 765, 766, 767, 553, 1375,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 0, 0, 0,
	1374, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 1376, 772, 1377, 474, 476, 477, 1378,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 1379,
	491, 492, 1380, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 1381, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 1382, 546, 533, 0, 534, 0, 1383, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 1384, 565, 1385, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 1386, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 1387, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 1719, 0, 0, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 1371, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 1685, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 1372, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 1373, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 765, 766, 767, 553, 1375,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 0, 0, 0,
	1374, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 1376, 772, 1377, 474, 476, 477, 1378,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 1379,
	491, 492, 1380, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 1381, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 1382, 546, 533, 0, 534, 0, 1383, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 1384, 565, 1385, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 1386, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 1387, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 316, 0, 0, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 3303, 355,
	356, 754, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 4154, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 3307, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 4153, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 3306, 435, 436, 0, 0, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 765, 766, 767, 553, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 4149, 4150, 0,
	0, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 4152, 475, 0, 772, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 0,
	491, 492, 4148, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 0, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 0, 0, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 0, 565, 0, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 3305, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 4151, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 1992, 0, 316, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 1991, 332, 333, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 334, 0, 335, 336, 337, 0,
	338, 339, 340, 341, 342, 343, 344, 746, 747, 0,
	345, 748, 346, 749, 0, 750, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 751, 752, 753,
	0, 355, 356, 754, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 1987, 389, 0, 390, 392, 755, 756, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 757, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	1994, 758, 759, 426, 427, 0, 319, 0, 0, 0,
	0, 0, 428, 429, 430, 760, 0, 0, 0, 431,
	0, 432, 433, 434, 0, 435, 436, 0, 0, 1990,
	438, 439, 761, 762, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 0, 449, 763, 0, 764, 450, 0,
	451, 452, 453, 454, 455, 456, 457, 765, 766, 767,
	553, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	465, 0, 0, 0, 466, 1988, 468, 469, 0, 321,
	320, 322, 0, 768, 470, 554, 471, 769, 770, 0,
	771, 0, 472, 473, 475, 0, 772, 0, 474, 476,
	477, 0, 478, 0, 0, 0, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 488, 487, 0, 490, 773,
	489, 0, 491, 492, 0, 0, 493, 494, 495, 496,
	497, 498, 501, 0, 0, 499, 500, 502, 503, 0,
	504, 505, 507, 510, 506, 508, 509, 511, 524, 525,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 527, 0, 526, 0, 528, 529, 530, 531,
	532, 540, 542, 543, 538, 539, 541, 544, 545, 547,
	535, 536, 537, 0, 546, 533, 0, 534, 323, 0,
	548, 549, 550, 551, 0, 774, 552, 775, 555, 556,
	0, 0, 557, 0, 558, 0, 0, 560, 561, 562,
	0, 0, 563, 564, 776, 0, 565, 0, 777, 566,
	567, 559, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 578, 579, 778, 580, 581, 582, 779,
	583, 584, 585, 780, 586, 781, 587, 588, 0, 589,
	590, 591, 0, 592, 593, 594, 595, 596, 597, 598,
	599, 782, 600, 601, 603, 602, 604, 0, 605, 0,
	606, 607, 608, 0, 0, 0, 0, 0, 609, 610,
	612, 0, 613, 614, 615, 616, 611, 617, 618, 619,
	620, 621, 622, 0, 624, 625, 623, 626, 627, 0,
	628, 629, 630, 631, 632, 783, 633, 0, 634, 635,
	643, 644, 645, 1993, 637, 639, 646, 638, 647, 648,
	649, 650, 1989, 651, 0, 1986, 655, 653, 656, 657,
	658, 0, 659, 784, 660, 640, 641, 661, 662, 0,
	663, 664, 665, 666, 667, 668, 669, 785, 0, 670,
	0, 671, 672, 673, 674, 675, 676, 678, 642, 679,
	684, 685, 786, 680, 681, 682, 683, 787, 687, 688,
	689, 690, 0, 691, 692, 0, 686, 677, 1984, 693,
	694, 695, 696, 697, 698, 0, 699, 700, 0, 701,
	788, 789, 790, 791, 0, 713, 0, 702, 704, 705,
	706, 707, 792, 708, 793, 0, 709, 710, 711, 712,
	703, 714, 715, 0, 0, 716, 717, 718, 720, 722,
	723, 719, 721, 724, 0, 725, 0, 0, 726, 727,
	728, 794, 795, 796, 0, 730, 1985, 729, 732, 733,
	736, 734, 735, 797, 737, 738, 739, 1689, 0, 316,
	0, 740, 741, 798, 742, 743, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 746,
	747, 0, 345, 748, 346, 749, 0, 750, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 751,
	752, 753, 0, 355, 356, 754, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 755, 756,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	757, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 758, 759, 426, 427, 0, 319, 0,
	0, 0, 0, 0, 428, 429, 430, 760, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	0, 437, 438, 439, 761, 762, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 0, 449, 763, 0, 764,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 1691,
	766, 767, 553, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 321, 320, 322, 0, 768, 470, 554, 471, 769,
	770, 0, 771, 0, 472, 473, 475, 0, 772, 0,
	474, 476, 477, 0, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 773, 489, 0, 491, 492, 0, 0, 493, 494,
	495, 496, 497, 498, 501, 0, 0, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 0, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 0, 546, 533, 0, 534,
	323, 0, 548, 549, 550, 551, 0, 774, 552, 775,
	555, 556, 0, 0, 557, 0, 558, 0, 1422, 560,
	561, 562, 0, 0, 563, 564, 776, 0, 565, 0,
	777, 566, 567, 559, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 778, 580, 581,
	582, 779, 583, 584, 585, 780, 586, 781, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 782, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 0, 628, 629, 630, 631, 632, 783, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 650, 652, 651, 0, 654, 655, 653,
	656, 657, 658, 0, 659, 784, 660, 640, 641, 661,
	662, 0, 663, 664, 665, 666, 667, 668, 669, 785,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 786, 680, 681, 682, 683, 787,
	687, 688, 689, 690, 0, 691, 692, 0, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 788, 789, 790, 791, 0, 713, 0, 702,
	704, 705, 706, 707, 792, 708, 793, 0, 709, 710,
	711, 712, 703, 714, 715, 0, 0, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 0, 725, 0, 0,
	726, 727, 728, 794, 795, 796, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 797, 737, 738, 739, 1686,
	0, 316, 0, 740, 741, 798, 742, 743, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 746, 747, 0, 345, 748, 346, 749, 0, 750,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 751, 752, 753, 0, 355, 356, 754, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	755, 756, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 757, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 758, 759, 426, 427, 0,
	319, 0, 0, 0, 0, 0, 428, 429, 430, 760,
	0, 0, 0, 431, 0, 432, 433, 434, 0, 435,
	436, 0, 0, 437, 438, 439, 761, 762, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 0, 449, 763,
	0, 764, 450, 0, 451, 452, 453, 454, 455, 456,
	457, 1688, 766, 767, 553, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 465, 0, 0, 0, 466, 467,
	468, 469, 0, 321, 320, 322, 0, 768, 470, 554,
	471, 769, 770, 0, 771, 0, 472, 473, 475, 0,
	772, 0, 474, 476, 477, 0, 478, 0, 0, 0,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 488,
	487, 0, 490, 773, 489, 0, 491, 492, 0, 0,
	493, 494, 495, 496, 497, 498, 501, 0, 0, 499,
	500, 502, 503, 0, 504, 505, 507, 510, 506, 508,
	509, 511, 524, 525, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 527, 0, 526, 0,
	528, 529, 530, 531, 532, 540, 542, 543, 538, 539,
	541, 544, 545, 547, 535, 536, 537, 0, 546, 533,
	0, 534, 323, 0, 548, 549, 550, 551, 0, 774,
	552, 775, 555, 556, 0, 0, 557, 0, 558, 0,
	1422, 560, 561, 562, 0, 0, 563, 564, 776, 0,
	565, 0, 777, 566, 567, 559, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 578, 579, 778,
	580, 581, 582, 779, 583, 584, 585, 780, 586, 781,
	587, 588, 0, 589, 590, 591, 0, 592, 593, 594,
	595, 596, 597, 598, 599, 782, 600, 601, 603, 602,
	604, 0, 605, 0, 606, 607, 608, 0, 0, 0,
	0, 0, 609, 610, 612, 0, 613, 614, 615, 616,
	611, 617, 618, 619, 620, 621, 622, 0, 624, 625,
	623, 626, 627, 0, 628, 629, 630, 631, 632, 783,
	633, 0, 634, 635, 643, 644, 645, 636, 637, 639,
	646, 638, 647, 648, 649, 650, 652, 651, 0, 654,
	655, 653, 656, 657, 658, 0, 659, 784, 660, 640,
	641, 661, 662, 0, 663, 664, 665, 666, 667, 668,
	669, 785, 0, 670, 0, 671, 672, 673, 674, 675,
	676, 678, 642, 679, 684, 685, 786, 680, 681, 682,
	683, 787, 687, 688, 689, 690, 0, 691, 692, 0,
	686, 677, 0, 693, 694, 695, 696, 697, 698, 0,
	699, 700, 0, 701, 788, 789, 790, 791, 0, 713,
	0, 702, 704, 705, 706, 707, 792, 708, 793, 0,
	709, 710, 711, 712, 703, 714, 715, 0, 0, 716,
	717, 718, 720, 722, 723, 719, 721, 724, 0, 725,
	0, 0, 726, 727, 728, 794, 795, 796, 0, 730,
	731, 729, 732, 733, 736, 734, 735, 797, 737, 738,
	739, 1592, 0, 316, 0, 740, 741, 798, 742, 743,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 319, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 1594, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 321, 320, 322, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 323, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 1422, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 319, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 321, 320, 322, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 323, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 1422, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 319, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 321, 320, 322, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 4019,
	546, 533, 0, 534, 323, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 3521, 0, 316, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 0, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 3520, 766, 767, 553, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 321, 320, 322,
	0, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 0, 772, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 0,
	491, 492, 0, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 0, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 323, 0, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 0, 565, 0, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 316, 0, 0, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 3303, 355,
	356, 754, 0, 0, 3297, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 3299, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 3307, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 3306, 435, 436, 0, 0, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 3296, 766, 767, 553, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 0, 0, 0,
	0, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 0, 772, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 0,
	491, 492, 0, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 0, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 0, 0, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 0, 565, 0, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 3305, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 3304, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 2674, 0, 316, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 334, 0, 335, 336, 337, 0,
	338, 339, 340, 341, 342, 343, 344, 746, 747, 0,
	345, 748, 346, 749, 0, 750, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 751, 752, 753,
	0, 355, 356, 754, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 388, 389, 0, 390, 392, 755, 756, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 757, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 758, 759, 426, 427, 0, 319, 0, 0, 0,
	0, 0, 428, 429, 430, 760, 0, 0, 0, 431,
	0, 432, 433, 434, 0, 435, 436, 0, 0, 437,
	438, 439, 761, 762, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 0, 449, 763, 0, 764, 450, 0,
	451, 452, 453, 454, 455, 456, 457, 765, 766, 767,
	553, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	465, 0, 0, 0, 466, 467, 468, 469, 0, 321,
	320, 322, 0, 768, 470, 554, 471, 769, 770, 0,
	771, 0, 472, 473, 475, 0, 772, 0, 474, 476,
	477, 0, 478, 0, 0, 0, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 488, 487, 0, 490, 773,
	489, 0, 491, 492, 0, 0, 493, 494, 495, 496,
	497, 498, 501, 0, 0, 499, 500, 502, 503, 0,
	504, 505, 507, 510, 506, 508, 509, 511, 524, 525,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 527, 0, 526, 0, 528, 529, 530, 531,
	532, 540, 542, 543, 538, 539, 541, 544, 545, 547,
	535, 536, 537, 0, 546, 533, 0, 534, 323, 0,
	548, 549, 550, 551, 0, 774, 552, 775, 555, 556,
	0, 0, 557, 0, 558, 0, 0, 560, 561, 562,
	0, 0, 563, 564, 776, 0, 565, 0, 777, 566,
	567, 559, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 578, 579, 778, 580, 581, 582, 779,
	583, 584, 585, 780, 586, 781, 587, 588, 0, 589,
	590, 591, 0, 592, 593, 594, 595, 596, 597, 598,
	599, 782, 600, 601, 603, 602, 604, 0, 605, 0,
	606, 607, 608, 0, 0, 0, 0, 0, 609, 610,
	612, 0, 613, 614, 615, 616, 611, 617, 618, 619,
	620, 621, 622, 0, 624, 625, 623, 626, 627, 0,
	628, 629, 630, 631, 632, 783, 633, 0, 634, 635,
	643, 644, 645, 636, 637, 639, 646, 638, 647, 648,
	649, 650, 652, 651, 0, 654, 655, 653, 656, 657,
	658, 0, 659, 784, 660, 640, 641, 661, 662, 0,
	663, 664, 665, 666, 667, 668, 669, 785, 0, 670,
	0, 671, 672, 673, 674, 675, 676, 678, 642, 679,
	684, 685, 786, 680, 681, 682, 683, 787, 687, 688,
	689, 690, 0, 691, 692, 0, 686, 677, 0, 693,
	694, 695, 696, 697, 698, 0, 699, 700, 0, 701,
	788, 789, 790, 791, 0, 713, 0, 702, 704, 705,
	706, 707, 792, 708, 793, 0, 709, 710, 711, 712,
	703, 714, 715, 0, 0, 716, 717, 718, 720, 722,
	723, 719, 721, 724, 0, 725, 0, 0, 726, 727,
	728, 794, 795, 796, 0, 730, 731, 729, 732, 733,
	736, 734, 735, 797, 737, 738, 739, 2618, 0, 316,
	0, 740, 741, 798, 742, 743, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 746,
	747, 0, 345, 748, 346, 749, 0, 750, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 751,
	752, 753, 0, 355, 356, 754, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 755, 756,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	757, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 758, 759, 426, 427, 0, 319, 0,
	0, 0, 0, 0, 428, 429, 430, 760, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	0, 437, 438, 439, 761, 762, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 0, 449, 763, 0, 764,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 2617,
	766, 767, 553, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 321, 320, 322, 0, 768, 470, 554, 471, 769,
	770, 0, 771, 0, 472, 473, 475, 0, 772, 0,
	474, 476, 477, 0, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 773, 489, 0, 491, 492, 0, 0, 493, 494,
	495, 496, 497, 498, 501, 0, 0, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 0, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 0, 546, 533, 0, 534,
	323, 0, 548, 549, 550, 551, 0, 774, 552, 775,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 776, 0, 565, 0,
	777, 566, 567, 559, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 778, 580, 581,
	582, 779, 583, 584, 585, 780, 586, 781, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 782, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 0, 628, 629, 630, 631, 632, 783, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 650, 652, 651, 0, 654, 655, 653,
	656, 657, 658, 0, 659, 784, 660, 640, 641, 661,
	662, 0, 663, 664, 665, 666, 667, 668, 669, 785,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 786, 680, 681, 682, 683, 787,
	687, 688, 689, 690, 0, 691, 692, 0, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 788, 789, 790, 791, 0, 713, 0, 702,
	704, 705, 706, 707, 792, 708, 793, 0, 709, 710,
	711, 712, 703, 714, 715, 0, 0, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 0, 725, 0, 0,
	726, 727, 728, 794, 795, 796, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 797, 737, 738, 739, 2602,
	0, 316, 0, 740, 741, 798, 742, 743, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 746, 747, 0, 345, 748, 346, 749, 0, 750,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 751, 752, 753, 0, 355, 356, 754, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	755, 756, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 757, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 758, 759, 426, 427, 0,
	319, 0, 0, 0, 0, 0, 428, 429, 430, 760,
	0, 0, 0, 431, 0, 432, 433, 434, 0, 435,
	436, 0, 0, 437, 438, 439, 761, 762, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 0, 449, 763,
	0, 764, 450, 0, 451, 452, 453, 454, 455, 456,
	457, 2604, 766, 767, 553, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 465, 0, 0, 0, 466, 467,
	468, 469, 0, 321, 320, 322, 0, 768, 470, 554,
	471, 769, 770, 0, 771, 0, 472, 473, 475, 0,
	772, 0, 474, 476, 477, 0, 478, 0, 0, 0,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 488,
	487, 0, 490, 773, 489, 0, 491, 492, 0, 0,
	493, 494, 495, 496, 497, 498, 501, 0, 0, 499,
	500, 502, 503, 0, 504, 505, 507, 510, 506, 508,
	509, 511, 524, 525, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 527, 0, 526, 0,
	528, 529, 530, 531, 532, 540, 542, 543, 538, 539,
	541, 544, 545, 547, 535, 536, 537, 0, 546, 533,
	0, 534, 323, 0, 548, 549, 550, 551, 0, 774,
	552, 775, 555, 556, 0, 0, 557, 0, 558, 0,
	0, 560, 561, 562, 0, 0, 563, 564, 776, 0,
	565, 0, 777, 566, 567, 559, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 578, 579, 778,
	580, 581, 582, 779, 583, 584, 585, 780, 586, 781,
	587, 588, 0, 589, 590, 591, 0, 592, 593, 594,
	595, 596, 597, 598, 599, 782, 600, 601, 603, 602,
	604, 0, 605, 0, 606, 607, 608, 0, 0, 0,
	0, 0, 609, 610, 612, 0, 613, 614, 615, 616,
	611, 617, 618, 619, 620, 621, 622, 0, 624, 625,
	623, 626, 627, 0, 628, 629, 630, 631, 632, 783,
	633, 0, 634, 635, 643, 644, 645, 636, 637, 639,
	646, 638, 647, 648, 649, 650, 652, 651, 0, 654,
	655, 653, 656, 657, 658, 0, 659, 784, 660, 640,
	641, 661, 662, 0, 663, 664, 665, 666, 667, 668,
	669, 785, 0, 670, 0, 671, 672, 673, 674, 675,
	676, 678, 642, 679, 684, 685, 786, 680, 681, 682,
	683, 787, 687, 688, 689, 690, 0, 691, 692, 0,
	686, 677, 0, 693, 694, 695, 696, 697, 698, 0,
	699, 700, 0, 701, 788, 789, 790, 791, 0, 713,
	0, 702, 704, 705, 706, 707, 792, 708, 793, 0,
	709, 710, 711, 712, 703, 714, 715, 0, 0, 716,
	717, 718, 720, 722, 723, 719, 721, 724, 0, 725,
	0, 0, 726, 727, 728, 794, 795, 796, 0, 730,
	731, 729, 732, 733, 736, 734, 735, 797, 737, 738,
	739, 2593, 0, 316, 0, 740, 741, 798, 742, 743,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 319, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 321, 320, 322, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 323, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 319, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 2563, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 321, 320, 322, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 323, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 1422, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 1821, 0, 316, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 0, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 1820, 766, 767, 553, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 321, 320, 322,
	0, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 0, 772, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 0,
	491, 492, 0, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 0, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 323, 0, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 0, 565, 0, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 1711, 0, 316, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 334, 0, 335, 336, 337, 0,
	338, 339, 340, 341, 342, 343, 344, 746, 747, 0,
	345, 748, 346, 749, 0, 750, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 751, 752, 753,
	0, 355, 356, 754, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 388, 389, 0, 390, 392, 755, 756, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 757, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 758, 759, 426, 427, 0, 319, 0, 0, 0,
	0, 0, 428, 429, 430, 760, 0, 0, 0, 431,
	0, 432, 433, 434, 0, 435, 436, 0, 0, 437,
	438, 439, 761, 762, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 0, 449, 763, 0, 764, 450, 0,
	451, 452, 453, 454, 455, 456, 457, 765, 766, 767,
	553, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	465, 0, 0, 0, 466, 467, 468, 469, 0, 321,
	320, 322, 0, 768, 470, 554, 471, 769, 770, 0,
	771, 0, 472, 473, 475, 0, 772, 0, 474, 476,
	477, 0, 478, 0, 0, 0, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 488, 487, 0, 490, 773,
	489, 0, 491, 492, 0, 0, 493, 494, 495, 496,
	497, 498, 501, 0, 0, 499, 500, 502, 503, 0,
	504, 505, 507, 510, 506, 508, 509, 511, 524, 525,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 527, 0, 526, 0, 528, 529, 530, 531,
	532, 540, 542, 543, 538, 539, 541, 544, 545, 547,
	535, 536, 537, 0, 546, 533, 0, 534, 323, 0,
	548, 549, 550, 551, 0, 774, 552, 775, 555, 556,
	0, 0, 557, 0, 558, 0, 0, 560, 561, 562,
	0, 0, 563, 564, 776, 0, 565, 0, 777, 566,
	567, 559, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 578, 579, 778, 580, 581, 582, 779,
	583, 584, 585, 780, 586, 781, 587, 588, 0, 589,
	590, 591, 0, 592, 593, 594, 595, 596, 597, 598,
	599, 782, 600, 601, 603, 602, 604, 0, 605, 0,
	606, 607, 608, 0, 0, 0, 0, 0, 609, 610,
	612, 0, 613, 614, 615, 616, 611, 617, 618, 619,
	620, 621, 622, 0, 624, 625, 623, 626, 627, 0,
	628, 629, 630, 631, 632, 783, 633, 0, 634, 635,
	643, 644, 645, 636, 637, 639, 646, 638, 647, 648,
	649, 650, 652, 651, 0, 654, 655, 653, 656, 657,
	658, 0, 659, 784, 660, 640, 641, 661, 662, 0,
	663, 664, 665, 666, 667, 668, 669, 785, 0, 670,
	0, 671, 672, 673, 674, 675, 676, 678, 642, 679,
	684, 685, 786, 680, 681, 682, 683, 787, 687, 688,
	689, 690, 0, 691, 692, 0, 686, 677, 0, 693,
	694, 695, 696, 697, 698, 0, 699, 700, 0, 701,
	788, 789, 790, 791, 0, 713, 0, 702, 704, 705,
	706, 707, 792, 708, 793, 0, 709, 710, 711, 712,
	703, 714, 715, 0, 0, 716, 717, 718, 720, 722,
	723, 719, 721, 724, 0, 725, 0, 0, 726, 727,
	728, 794, 795, 796, 0, 730, 731, 729, 732, 733,
	736, 734, 735, 797, 737, 738, 739, 1704, 0, 316,
	0, 740, 741, 798, 742, 743, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 746,
	747, 0, 345, 748, 346, 749, 0, 750, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 751,
	752, 753, 0, 355, 356, 754, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 755, 756,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	757, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 758, 759, 426, 427, 0, 319, 0,
	0, 0, 0, 0, 428, 429, 430, 760, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	0, 437, 438, 439, 761, 762, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 0, 449, 763, 0, 764,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 1706,
	766, 767, 553, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 321, 320, 322, 0, 768, 470, 554, 471, 769,
	770, 0, 771, 0, 472, 473, 475, 0, 772, 0,
	474, 476, 477, 0, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 773, 489, 0, 491, 492, 0, 0, 493, 494,
	495, 496, 497, 498, 501, 0, 0, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 0, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 0, 546, 533, 0, 534,
	323, 0, 548, 549, 550, 551, 0, 774, 552, 775,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 776, 0, 565, 0,
	777, 566, 567, 559, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 778, 580, 581,
	582, 779, 583, 584, 585, 780, 586, 781, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 782, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 0, 628, 629, 630, 631, 632, 783, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 650, 652, 651, 0, 654, 655, 653,
	656, 657, 658, 0, 659, 784, 660, 640, 641, 661,
	662, 0, 663, 664, 665, 666, 667, 668, 669, 785,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 786, 680, 681, 682, 683, 787,
	687, 688, 689, 690, 0, 691, 692, 0, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 788, 789, 790, 791, 0, 713, 0, 702,
	704, 705, 706, 707, 792, 708, 793, 0, 709, 710,
	711, 712, 703, 714, 715, 0, 0, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 0, 725, 0, 0,
	726, 727, 728, 794, 795, 796, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 797, 737, 738, 739, 1694,
	0, 316, 0, 740, 741, 798, 742, 743, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 746, 747, 0, 345, 748, 346, 749, 0, 750,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 751, 752, 753, 0, 355, 356, 754, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	755, 756, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 757, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 758, 759, 426, 427, 0,
	319, 0, 0, 0, 0, 0, 428, 429, 430, 760,
	0, 0, 0, 431, 0, 432, 433, 434, 0, 435,
	436, 0, 0, 437, 438, 439, 761, 762, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 0, 449, 763,
	0, 764, 450, 0, 451, 452, 453, 454, 455, 456,
	457, 765, 766, 767, 553, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 465, 0, 0, 0, 466, 467,
	468, 469, 0, 321, 320, 322, 0, 768, 470, 554,
	471, 769, 770, 0, 771, 0, 472, 473, 475, 0,
	772, 0, 474, 476, 477, 0, 478, 0, 0, 0,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 488,
	487, 0, 490, 773, 489, 0, 491, 492, 0, 0,
	493, 494, 495, 496, 497, 498, 501, 0, 0, 499,
	500, 502, 503, 0, 504, 505, 507, 510, 506, 508,
	509, 511, 524, 525, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 527, 0, 526, 0,
	528, 529, 530, 531, 532, 540, 542, 543, 538, 539,
	541, 544, 545, 547, 535, 536, 537, 0, 546, 533,
	0, 534, 323, 0, 548, 549, 550, 551, 0, 774,
	552, 775, 555, 556, 0, 0, 557, 0, 558, 0,
	0, 560, 561, 562, 0, 0, 563, 564, 776, 0,
	565, 0, 777, 566, 567, 559, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 578, 579, 778,
	580, 581, 582, 779, 583, 584, 585, 780, 586, 781,
	587, 588, 0, 589, 590, 591, 0, 592, 593, 594,
	595, 596, 597, 598, 599, 782, 600, 601, 603, 602,
	604, 0, 605, 0, 606, 607, 608, 0, 0, 0,
	0, 0, 609, 610, 612, 0, 613, 614, 615, 616,
	611, 617, 618, 619, 620, 621, 622, 0, 624, 625,
	623, 626, 627, 0, 628, 629, 630, 631, 632, 783,
	633, 0, 634, 635, 643, 644, 645, 636, 637, 639,
	646, 638, 647, 648, 649, 650, 652, 651, 0, 654,
	655, 653, 656, 657, 658, 0, 659, 784, 660, 640,
	641, 661, 662, 0, 663, 664, 665, 666, 667, 668,
	669, 785, 0, 670, 0, 671, 672, 673, 674, 675,
	676, 678, 642, 679, 684, 685, 786, 680, 681, 682,
	683, 787, 687, 688, 689, 690, 0, 691, 692, 0,
	686, 677, 0, 693, 694, 695, 696, 697, 698, 0,
	699, 700, 0, 701, 788, 789, 790, 791, 0, 713,
	0, 702, 704, 705, 706, 707, 792, 708, 793, 0,
	709, 710, 711, 712, 703, 714, 715, 0, 0, 716,
	717, 718, 720, 722, 723, 719, 721, 724, 0, 725,
	0, 0, 726, 727, 728, 794, 795, 796, 0, 730,
	731, 729, 732, 733, 736, 734, 735, 797, 737, 738,
	739, 1510, 0, 316, 0, 740, 741, 798, 742, 743,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 319, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 1509, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 321, 320, 322, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 323, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 1499, 0, 316, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 0, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 1498, 766, 767, 553, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 321, 320, 322,
	0, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 0, 772, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 0,
	491, 492, 0, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 0, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 323, 0, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 0, 565, 0, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 1495, 0, 316, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 334, 0, 335, 336, 337, 0,
	338, 339, 340, 341, 342, 343, 344, 746, 747, 0,
	345, 748, 346, 749, 0, 750, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 751, 752, 753,
	0, 355, 356, 754, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 388, 389, 0, 390, 392, 755, 756, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 757, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 758, 759, 426, 427, 0, 319, 0, 0, 0,
	0, 0, 428, 429, 430, 760, 0, 0, 0, 431,
	0, 432, 433, 434, 0, 435, 436, 0, 0, 437,
	438, 439, 761, 762, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 0, 449, 763, 0, 764, 450, 0,
	451, 452, 453, 454, 455, 456, 457, 1494, 766, 767,
	553, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	465, 0, 0, 0, 466, 467, 468, 469, 0, 321,
	320, 322, 0, 768, 470, 554, 471, 769, 770, 0,
	771, 0, 472, 473, 475, 0, 772, 0, 474, 476,
	477, 0, 478, 0, 0, 0, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 488, 487, 0, 490, 773,
	489, 0, 491, 492, 0, 0, 493, 494, 495, 496,
	497, 498, 501, 0, 0, 499, 500, 502, 503, 0,
	504, 505, 507, 510, 506, 508, 509, 511, 524, 525,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 527, 0, 526, 0, 528, 529, 530, 531,
	532, 540, 542, 543, 538, 539, 541, 544, 545, 547,
	535, 536, 537, 0, 546, 533, 0, 534, 323, 0,
	548, 549, 550, 551, 0, 774, 552, 775, 555, 556,
	0, 0, 557, 0, 558, 0, 0, 560, 561, 562,
	0, 0, 563, 564, 776, 0, 565, 0, 777, 566,
	567, 559, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 578, 579, 778, 580, 581, 582, 779,
	583, 584, 585, 780, 586, 781, 587, 588, 0, 589,
	590, 591, 0, 592, 593, 594, 595, 596, 597, 598,
	599, 782, 600, 601, 603, 602, 604, 0, 605, 0,
	606, 607, 608, 0, 0, 0, 0, 0, 609, 610,
	612, 0, 613, 614, 615, 616, 611, 617, 618, 619,
	620, 621, 622, 0, 624, 625, 623, 626, 627, 0,
	628, 629, 630, 631, 632, 783, 633, 0, 634, 635,
	643, 644, 645, 636, 637, 639, 646, 638, 647, 648,
	649, 650, 652, 651, 0, 654, 655, 653, 656, 657,
	658, 0, 659, 784, 660, 640, 641, 661, 662, 0,
	663, 664, 665, 666, 667, 668, 669, 785, 0, 670,
	0, 671, 672, 673, 674, 675, 676, 678, 642, 679,
	684, 685, 786, 680, 681, 682, 683, 787, 687, 688,
	689, 690, 0, 691, 692, 0, 686, 677, 0, 693,
	694, 695, 696, 697, 698, 0, 699, 700, 0, 701,
	788, 789, 790, 791, 0, 713, 0, 702, 704, 705,
	706, 707, 792, 708, 793, 0, 709, 710, 711, 712,
	703, 714, 715, 0, 0, 716, 717, 718, 720, 722,
	723, 719, 721, 724, 0, 725, 0, 0, 726, 727,
	728, 794, 795, 796, 0, 730, 731, 729, 732, 733,
	736, 734, 735, 797, 737, 738, 739, 1489, 0, 316,
	0, 740, 741, 798, 742, 743, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 746,
	747, 0, 345, 748, 346, 749, 0, 750, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 751,
	752, 753, 0, 355, 356, 754, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 755, 756,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	757, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 758, 759, 426, 427, 0, 319, 0,
	0, 0, 0, 0, 428, 429, 430, 760, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	0, 437, 438, 439, 761, 762, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 0, 449, 763, 0, 764,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 1488,
	766, 767, 553, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 321, 320, 322, 0, 768, 470, 554, 471, 769,
	770, 0, 771, 0, 472, 473, 475, 0, 772, 0,
	474, 476, 477, 0, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 773, 489, 0, 491, 492, 0, 0, 493, 494,
	495, 496, 497, 498, 501, 0, 0, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 0, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 0, 546, 533, 0, 534,
	323, 0, 548, 549, 550, 551, 0, 774, 552, 775,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 776, 0, 565, 0,
	777, 566, 567, 559, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 778, 580, 581,
	582, 779, 583, 584, 585, 780, 586, 781, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 782, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 0, 628, 629, 630, 631, 632, 783, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 650, 652, 651, 0, 654, 655, 653,
	656, 657, 658, 0, 659, 784, 660, 640, 641, 661,
	662, 0, 663, 664, 665, 666, 667, 668, 669, 785,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 786, 680, 681, 682, 683, 787,
	687, 688, 689, 690, 0, 691, 692, 0, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 788, 789, 790, 791, 0, 713, 0, 702,
	704, 705, 706, 707, 792, 708, 793, 0, 709, 710,
	711, 712, 703, 714, 715, 0, 0, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 0, 725, 0, 0,
	726, 727, 728, 794, 795, 796, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 797, 737, 738, 739, 1466,
	0, 316, 0, 740, 741, 798, 742, 743, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 746, 747, 0, 345, 748, 346, 749, 0, 750,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 751, 752, 753, 0, 355, 356, 754, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	755, 756, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 757, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 758, 759, 426, 427, 0,
	319, 0, 0, 0, 0, 0, 428, 429, 430, 760,
	0, 0, 0, 431, 0, 432, 433, 434, 0, 435,
	436, 0, 0, 437, 438, 439, 761, 762, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 0, 449, 763,
	0, 764, 450, 0, 451, 452, 453, 454, 455, 456,
	457, 1465, 766, 767, 553, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 465, 0, 0, 0, 466, 467,
	468, 469, 0, 321, 320, 322, 0, 768, 470, 554,
	471, 769, 770, 0, 771, 0, 472, 473, 475, 0,
	772, 0, 474, 476, 477, 0, 478, 0, 0, 0,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 488,
	487, 0, 490, 773, 489, 0, 491, 492, 0, 0,
	493, 494, 495, 496, 497, 498, 501, 0, 0, 499,
	500, 502, 503, 0, 504, 505, 507, 510, 506, 508,
	509, 511, 524, 525, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 527, 0, 526, 0,
	528, 529, 530, 531, 532, 540, 542, 543, 538, 539,
	541, 544, 545, 547, 535, 536, 537, 0, 546, 533,
	0, 534, 323, 0, 548, 549, 550, 551, 0, 774,
	552, 775, 555, 556, 0, 0, 557, 0, 558, 0,
	0, 560, 561, 562, 0, 0, 563, 564, 776, 0,
	565, 0, 777, 566, 567, 559, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 578, 579, 778,
	580, 581, 582, 779, 583, 584, 585, 780, 586, 781,
	587, 588, 0, 589, 590, 591, 0, 592, 593, 594,
	595, 596, 597, 598, 599, 782, 600, 601, 603, 602,
	604, 0, 605, 0, 606, 607, 608, 0, 0, 0,
	0, 0, 609, 610, 612, 0, 613, 614, 615, 616,
	611, 617, 618, 619, 620, 621, 622, 0, 624, 625,
	623, 626, 627, 0, 628, 629, 630, 631, 632, 783,
	633, 0, 634, 635, 643, 644, 645, 636, 637, 639,
	646, 638, 647, 648, 649, 650, 652, 651, 0, 654,
	655, 653, 656, 657, 658, 0, 659, 784, 660, 640,
	641, 661, 662, 0, 663, 664, 665, 666, 667, 668,
	669, 785, 0, 670, 0, 671, 672, 673, 674, 675,
	676, 678, 642, 679, 684, 685, 786, 680, 681, 682,
	683, 787, 687, 688, 689, 690, 0, 691, 692, 0,
	686, 677, 0, 693, 694, 695, 696, 697, 698, 0,
	699, 700, 0, 701, 788, 789, 790, 791, 0, 713,
	0, 702, 704, 705, 706, 707, 792, 708, 793, 0,
	709, 710, 711, 712, 703, 714, 715, 0, 0, 716,
	717, 718, 720, 722, 723, 719, 721, 724, 0, 725,
	0, 0, 726, 727, 728, 794, 795, 796, 0, 730,
	731, 729, 732, 733, 736, 734, 735, 797, 737, 738,
	739, 800, 0, 316, 0, 740, 741, 798, 742, 743,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 319, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 321, 320, 322, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 323, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 307, 0, 316, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 0, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 765, 766, 767, 553, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 321, 320, 322,
	0, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 0, 772, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 0,
	491, 492, 0, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 0, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 323, 0, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 0, 565, 0, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 316, 0, 0, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 0, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 765, 766, 767, 553, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 321, 320, 322,
	0, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 0, 772, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 0,
	491, 492, 0, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 0, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 323, 0, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 0, 565, 0, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 316, 0, 0, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 2717,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 0, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 765, 766, 767, 553, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 321, 320, 322,
	0, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 0, 772, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 0,
	491, 492, 0, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 0, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 323, 0, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 0, 565, 0, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 316, 0, 0, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 2715,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 0, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 765, 766, 767, 553, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 321, 320, 322,
	0, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 0, 772, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 0,
	491, 492, 0, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 0, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 323, 0, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 0, 565, 0, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 316, 0, 0, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 2713,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 0, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 765, 766, 767, 553, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 321, 320, 322,
	0, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 0, 772, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 0,
	491, 492, 0, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 0, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 323, 0, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 0, 565, 0, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 316, 0, 0, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 0, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 2625, 766, 767, 553, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 321, 320, 322,
	0, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 0, 772, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 0,
	491, 492, 0, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 0, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 323, 0, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 0, 565, 0, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 316, 0, 0, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 0, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 2348, 766, 767, 553, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 321, 320, 322,
	0, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 0, 772, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 0,
	491, 492, 0, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 0, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 323, 0, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 0, 565, 0, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 316, 0, 0, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 319, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 0, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 2342, 766, 767, 553, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 321, 320, 322,
	0, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 0, 772, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 0,
	491, 492, 0, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 0, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 323, 0, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 0, 565, 0, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 833, 0, 316, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 831,
	330, 331, 820, 332, 333, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 334, 0, 335, 336, 337, 0,
	338, 339, 340, 341, 342, 343, 344, 746, 747, 0,
	345, 748, 346, 749, 0, 750, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 751, 752, 753,
	0, 355, 356, 754, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 823, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 388, 389, 0, 390, 392, 755, 756, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 757, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 758, 759, 426, 427, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 430, 760, 0, 0, 0, 431,
	0, 432, 433, 434, 0, 435, 436, 0, 0, 437,
	438, 439, 761, 762, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 829, 449, 763, 0, 764, 450, 0,
	451, 452, 453, 454, 455, 456, 457, 765, 766, 767,
	553, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	465, 0, 0, 0, 466, 467, 468, 469, 0, 0,
	0, 0, 0, 768, 470, 554, 471, 769, 770, 0,
	771, 0, 472, 473, 475, 0, 772, 0, 474, 476,
	477, 0, 478, 0, 0, 0, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 488, 487, 0, 490, 773,
	489, 0, 491, 492, 0, 0, 493, 494, 495, 496,
	497, 498, 501, 0, 0, 499, 500, 502, 503, 0,
	504, 505, 507, 510, 506, 508, 509, 511, 524, 525,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 527, 0, 526, 0, 528, 529, 530, 531,
	532, 540, 542, 543, 538, 539, 541, 544, 545, 547,
	535, 536, 537, 0, 546, 533, 0, 534, 0, 0,
	548, 549, 550, 551, 0, 774, 552, 775, 555, 556,
	0, 0, 557, 0, 558, 0, 0, 560, 561, 562,
	0, 0, 563, 564, 776, 0, 565, 0, 777, 566,
	567, 559, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 578, 579, 778, 580, 581, 582, 779,
	583, 584, 585, 780, 586, 781, 587, 588, 0, 589,
	590, 591, 0, 592, 593, 594, 595, 596, 597, 598,
	599, 782, 600, 601, 603, 602, 604, 0, 605, 0,
	606, 607, 608, 0, 0, 0, 0, 0, 609, 610,
	612, 0, 613, 614, 615, 616, 611, 617, 618, 619,
	620, 621, 622, 0, 624, 625, 623, 626, 627, 0,
	628, 629, 630, 631, 632, 783, 633, 0, 634, 635,
	643, 644, 645, 636, 637, 639, 646, 638, 647, 648,
	649, 650, 652, 651, 825, 654, 655, 653, 656, 657,
	658, 0, 659, 784, 660, 640, 641, 661, 662, 0,
	663, 664, 665, 666, 667, 668, 669, 785, 0, 670,
	0, 671, 672, 673, 674, 675, 676, 678, 642, 679,
	684, 685, 786, 680, 681, 682, 683, 787, 687, 688,
	689, 690, 0, 691, 832, 0, 686, 677, 0, 693,
	694, 695, 696, 697, 698, 0, 699, 700, 0, 701,
	788, 789, 790, 791, 0, 713, 0, 702, 704, 705,
	706, 707, 792, 708, 793, 0, 709, 710, 711, 712,
	703, 714, 715, 0, 0, 716, 717, 718, 720, 722,
	723, 719, 721, 724, 0, 725, 0, 0, 726, 727,
	728, 794, 795, 796, 0, 730, 731, 729, 732, 733,
	736, 734, 735, 797, 737, 738, 739, 819, 0, 316,
	0, 740, 741, 798, 742, 743, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 820, 332, 333, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 746,
	747, 0, 345, 748, 346, 749, 0, 750, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 751,
	752, 753, 0, 355, 356, 754, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 823, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 755, 756,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	757, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 758, 759, 426, 427, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 430, 760, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	0, 437, 438, 439, 761, 762, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 824, 449, 763, 0, 764,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 765,
	766, 767, 553, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 0, 0, 0, 0, 768, 470, 554, 471, 769,
	770, 0, 771, 0, 472, 473, 475, 0, 772, 0,
	474, 476, 477, 0, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 773, 489, 0, 491, 492, 0, 0, 493, 494,
	495, 496, 497, 498, 501, 0, 0, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 0, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 0, 546, 533, 0, 534,
	0, 0, 548, 549, 550, 551, 0, 774, 552, 775,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 776, 0, 565, 0,
	777, 566, 567, 559, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 778, 580, 581,
	582, 779, 583, 584, 585, 780, 586, 781, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 782, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 0, 628, 629, 630, 631, 632, 783, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 650, 652, 651, 825, 654, 655, 653,
	656, 657, 658, 0, 659, 784, 660, 640, 641, 661,
	662, 0, 663, 664, 665, 666, 667, 668, 669, 785,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 786, 680, 681, 682, 683, 787,
	687, 688, 689, 690, 0, 691, 818, 0, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 788, 789, 790, 791, 0, 713, 0, 702,
	704, 705, 706, 707, 792, 708, 793, 0, 709, 710,
	711, 712, 703, 714, 715, 0, 0, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 0, 725, 0, 0,
	726, 727, 728, 794, 795, 796, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 797, 737, 738, 739, 316,
	0, 0, 0, 740, 741, 798, 742, 743, 744, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 820, 332, 333, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 746,
	747, 0, 345, 748, 346, 749, 0, 750, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 751,
	752, 753, 0, 355, 356, 754, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 823, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 755, 756,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	757, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 758, 759, 426, 427, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 430, 760, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	0, 437, 438, 439, 761, 762, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 824, 449, 763, 0, 764,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 765,
	766, 767, 553, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 0, 0, 0, 0, 768, 470, 554, 471, 769,
	770, 0, 771, 0, 472, 473, 475, 0, 772, 0,
	474, 476, 477, 0, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 773, 489, 0, 491, 492, 0, 0, 493, 494,
	495, 496, 497, 498, 501, 0, 0, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 0, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 0, 546, 533, 0, 534,
	0, 0, 548, 549, 550, 551, 0, 774, 552, 775,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 776, 0, 565, 0,
	777, 566, 567, 559, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 778, 580, 581,
	582, 779, 583, 584, 585, 780, 586, 781, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 782, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 0, 628, 629, 630, 631, 632, 783, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 650, 652, 651, 825, 654, 655, 653,
	656, 657, 658, 0, 659, 784, 660, 640, 641, 661,
	662, 0, 663, 664, 665, 666, 667, 668, 669, 785,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 786, 680, 681, 682, 683, 787,
	687, 688, 689, 690, 0, 691, 692, 0, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 788, 789, 790, 791, 0, 713, 0, 702,
	704, 705, 706, 707, 792, 708, 793, 0, 709, 710,
	711, 712, 703, 714, 715, 0, 0, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 0, 725, 0, 0,
	726, 727, 728, 794, 795, 796, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 797, 737, 738, 739, 316,
	0, 0, 0, 740, 741, 798, 742, 743, 744, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 820, 332, 333, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 746,
	747, 0, 345, 748, 346, 749, 0, 750, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 751,
	752, 753, 0, 355, 356, 754, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 823, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 755, 756,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	757, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 758, 759, 426, 427, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 430, 760, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	0, 437, 438, 439, 761, 762, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 4602, 449, 763, 0, 764,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 765,
	766, 767, 553, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 0, 0, 0, 0, 768, 470, 554, 471, 769,
	770, 0, 771, 0, 472, 473, 475, 0, 772, 0,
	474, 476, 477, 0, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 773, 489, 0, 491, 492, 0, 0, 493, 494,
	495, 496, 497, 498, 501, 0, 0, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 0, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 0, 546, 533, 0, 534,
	0, 0, 548, 549, 550, 551, 0, 774, 552, 775,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 776, 0, 565, 0,
	777, 566, 567, 559, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 778, 580, 581,
	582, 779, 583, 584, 585, 780, 586, 781, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 782, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 0, 628, 629, 630, 631, 632, 783, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 650, 652, 651, 825, 654, 655, 653,
	656, 657, 658, 0, 659, 784, 660, 640, 641, 661,
	662, 0, 663, 664, 665, 666, 667, 668, 669, 785,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 786, 680, 681, 682, 683, 787,
	687, 688, 689, 690, 0, 691, 692, 0, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 788, 789, 790, 791, 0, 713, 0, 702,
	704, 705, 706, 707, 792, 708, 793, 0, 709, 710,
	711, 712, 703, 714, 715, 0, 0, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 0, 725, 0, 0,
	726, 727, 728, 794, 795, 796, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 797, 737, 738, 739, 316,
	0, 0, 0, 740, 741, 798, 742, 743, 744, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 820, 332, 333, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 746,
	747, 0, 345, 748, 346, 749, 0, 750, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 751,
	752, 753, 0, 355, 356, 754, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 823, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 755, 756,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	757, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 758, 759, 426, 427, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 430, 760, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	0, 437, 438, 439, 761, 762, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 824, 449, 763, 0, 764,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 765,
	766, 767, 553, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 0, 0, 0, 0, 768, 470, 554, 471, 769,
	770, 0, 771, 0, 472, 473, 475, 0, 772, 0,
	474, 476, 477, 0, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 773, 489, 0, 491, 492, 0, 0, 493, 494,
	495, 496, 497, 498, 501, 0, 0, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 0, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 0, 546, 533, 0, 534,
	0, 0, 548, 549, 550, 551, 0, 774, 552, 775,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 776, 0, 565, 0,
	777, 566, 567, 559, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 778, 580, 581,
	582, 779, 583, 584, 585, 780, 586, 781, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 782, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 0, 628, 629, 630, 631, 632, 783, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 650, 652, 651, 825, 654, 655, 653,
	656, 657, 658, 0, 659, 784, 660, 640, 641, 661,
	662, 0, 663, 664, 665, 666, 667, 668, 669, 785,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 786, 680, 681, 682, 683, 787,
	687, 688, 689, 690, 0, 691, 3223, 0, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 788, 789, 790, 791, 0, 713, 0, 702,
	704, 705, 706, 707, 792, 708, 793, 0, 709, 710,
	711, 712, 703, 714, 715, 0, 0, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 0, 725, 0, 0,
	726, 727, 728, 794, 795, 796, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 797, 737, 738, 739, 316,
	0, 0, 0, 740, 741, 798, 742, 743, 744, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 746,
	747, 0, 345, 748, 346, 749, 0, 750, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 751,
	752, 753, 0, 355, 356, 754, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 823, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 755, 756,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	757, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 758, 759, 426, 427, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 430, 760, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	0, 437, 438, 439, 761, 762, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 824, 449, 763, 0, 764,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 765,
	766, 767, 553, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 0, 0, 0, 0, 768, 470, 554, 471, 769,
	770, 0, 771, 0, 472, 473, 475, 0, 772, 0,
	474, 476, 477, 0, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 773, 489, 0, 491, 492, 0, 0, 493, 494,
	495, 496, 497, 498, 501, 0, 0, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 0, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 0, 546, 533, 0, 534,
	0, 0, 548, 549, 550, 551, 0, 774, 552, 775,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 776, 0, 565, 0,
	777, 566, 567, 559, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 778, 580, 581,
	582, 779, 583, 584, 585, 780, 586, 781, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 782, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 0, 628, 629, 630, 631, 632, 783, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 650, 652, 651, 825, 654, 655, 653,
	656, 657, 658, 0, 659, 784, 660, 640, 641, 661,
	662, 0, 663, 664, 665, 666, 667, 668, 669, 785,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 786, 680, 681, 682, 683, 787,
	687, 688, 689, 690, 0, 691, 692, 0, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 788, 789, 790, 791, 0, 713, 0, 702,
	704, 705, 706, 707, 792, 708, 793, 0, 709, 710,
	711, 712, 703, 714, 715, 0, 0, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 0, 725, 0, 0,
	726, 727, 728, 794, 795, 796, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 797, 737, 738, 739, 1049,
	0, 316, 0, 740, 741, 798, 742, 743, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 746, 747, 0, 345, 748, 346, 749, 0, 750,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 751, 752, 753, 0, 355, 356, 754, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	755, 756, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 757, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 758, 759, 426, 427, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 430, 760,
	0, 0, 0, 431, 0, 432, 433, 434, 0, 435,
	436, 0, 0, 437, 438, 439, 761, 762, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 0, 449, 763,
	0, 764, 450, 0, 451, 452, 453, 454, 455, 456,
	457, 765, 766, 767, 553, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 465, 0, 0, 0, 466, 467,
	468, 469, 0, 0, 0, 0, 0, 768, 470, 554,
	471, 769, 770, 0, 771, 1048, 472, 473, 475, 0,
	772, 0, 474, 476, 477, 0, 478, 0, 0, 0,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 488,
	487, 0, 490, 773, 489, 0, 491, 492, 0, 0,
	493, 494, 495, 496, 497, 498, 501, 0, 0, 499,
	500, 502, 503, 0, 504, 505, 507, 510, 506, 508,
	509, 511, 524, 525, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 527, 0, 526, 0,
	528, 529, 530, 531, 532, 540, 542, 543, 538, 539,
	541, 544, 545, 547, 535, 536, 537, 0, 546, 533,
	0, 534, 0, 0, 548, 549, 550, 551, 0, 774,
	552, 775, 555, 556, 0, 0, 557, 0, 558, 0,
	0, 560, 561, 562, 0, 0, 563, 564, 776, 0,
	565, 0, 777, 566, 567, 559, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 578, 579, 778,
	580, 581, 582, 779, 583, 584, 585, 780, 586, 781,
	587, 588, 0, 589, 590, 591, 0, 592, 593, 594,
	595, 596, 597, 598, 599, 782, 600, 601, 603, 602,
	604, 0, 605, 0, 606, 607, 608, 0, 0, 0,
	0, 0, 609, 610, 612, 0, 613, 614, 615, 616,
	611, 617, 618, 619, 620, 621, 622, 0, 624, 625,
	623, 626, 627, 0, 628, 629, 630, 631, 632, 783,
	633, 0, 634, 635, 643, 644, 645, 636, 637, 639,
	646, 638, 647, 648, 649, 650, 652, 651, 0, 654,
	655, 653, 656, 657, 658, 0, 659, 784, 660, 640,
	641, 661, 662, 0, 663, 664, 665, 666, 667, 668,
	669, 785, 0, 670, 0, 671, 672, 673, 674, 675,
	676, 678, 642, 679, 684, 685, 786, 680, 681, 682,
	683, 787, 687, 688, 689, 690, 0, 691, 692, 0,
	686, 677, 1047, 693, 694, 695, 696, 697, 698, 0,
	699, 700, 0, 701, 788, 789, 790, 791, 0, 713,
	0, 702, 704, 705, 706, 707, 792, 708, 793, 0,
	709, 710, 711, 712, 703, 714, 715, 0, 0, 716,
	717, 718, 720, 722, 723, 719, 721, 724, 0, 725,
	0, 0, 726, 727, 728, 794, 795, 796, 0, 730,
	731, 729, 732, 733, 736, 734, 735, 797, 737, 738,
	739, 923, 0, 316, 0, 740, 741, 798, 742, 743,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 912, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	921, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	914, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 920, 436, 916, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 917, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 915, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 918, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 919, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 913, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 906, 0, 316, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 912, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 921, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 914, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 920, 436, 916, 0, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 765, 766, 767, 553, 0,
	458, 459, 460, 917, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 0, 0, 0,
	0, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 0, 772, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	915, 0, 486, 488, 487, 0, 490, 773, 489, 0,
	491, 492, 0, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 0, 528, 529, 530, 918, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 0, 0, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 0, 565, 0, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 919, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 913, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 316, 0, 0, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 4153, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 0, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 765, 766, 767, 553, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 0, 0, 0,
	0, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 0, 772, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 0,
	491, 492, 0, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 0, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 0, 0, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 0, 565, 0, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 4964, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 1537, 0, 316, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 334, 0, 335, 336, 337, 1540,
	338, 339, 340, 341, 342, 343, 344, 746, 747, 0,
	345, 748, 346, 749, 0, 750, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 751, 752, 1538,
	0, 355, 356, 754, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 388, 389, 0, 390, 392, 755, 756, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 757, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 758, 759, 426, 427, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 430, 760, 0, 0, 0, 431,
	0, 432, 433, 434, 0, 435, 436, 0, 0, 437,
	438, 439, 761, 762, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 0, 449, 763, 0, 764, 450, 0,
	451, 452, 453, 454, 455, 456, 457, 765, 766, 767,
	553, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	465, 0, 0, 0, 466, 467, 468, 469, 0, 0,
	0, 0, 0, 768, 470, 554, 471, 769, 770, 0,
	771, 0, 472, 473, 475, 0, 772, 0, 474, 476,
	477, 0, 478, 0, 0, 0, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 488, 487, 0, 490, 773,
	489, 0, 491, 492, 0, 0, 493, 494, 495, 496,
	497, 498, 501, 0, 0, 499, 500, 502, 503, 0,
	504, 505, 507, 510, 506, 508, 509, 511, 524, 525,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 527, 0, 894, 0, 528, 529, 530, 531,
	532, 540, 542, 543, 538, 539, 541, 544, 545, 547,
	535, 536, 537, 0, 546, 533, 0, 534, 0, 0,
	548, 549, 550, 551, 0, 774, 552, 775, 555, 556,
	0, 0, 557, 0, 558, 0, 0, 560, 561, 562,
	0, 0, 563, 564, 776, 0, 565, 0, 777, 566,
	567, 559, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 578, 579, 778, 580, 581, 582, 779,
	583, 584, 585, 780, 586, 781, 587, 588, 0, 589,
	590, 591, 0, 592, 593, 594, 595, 596, 597, 598,
	599, 782, 600, 601, 603, 602, 604, 0, 605, 0,
	606, 607, 608, 0, 0, 0, 0, 0, 609, 610,
	612, 0, 613, 614, 615, 616, 611, 617, 618, 619,
	620, 621, 622, 0, 624, 625, 623, 626, 627, 0,
	893, 629, 630, 631, 632, 783, 633, 0, 634, 635,
	643, 644, 645, 636, 637, 639, 892, 638, 647, 648,
	649, 650, 652, 651, 0, 654, 655, 653, 656, 1541,
	658, 0, 659, 784, 660, 640, 641, 661, 662, 0,
	663, 664, 665, 666, 667, 668, 669, 785, 0, 670,
	0, 671, 672, 673, 674, 675, 676, 678, 642, 679,
	684, 685, 786, 680, 681, 682, 683, 787, 687, 688,
	689, 690, 0, 691, 692, 0, 686, 677, 0, 693,
	694, 695, 696, 697, 698, 0, 699, 700, 0, 701,
	890, 789, 790, 791, 0, 713, 0, 702, 704, 705,
	706, 707, 792, 708, 793, 0, 709, 710, 711, 712,
	703, 714, 715, 0, 0, 716, 717, 718, 720, 722,
	723, 719, 721, 724, 0, 725, 0, 0, 726, 727,
	728, 794, 795, 796, 0, 730, 731, 729, 732, 733,
	736, 734, 735, 797, 737, 738, 739, 1537, 0, 316,
	0, 740, 741, 798, 742, 743, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 334, 0, 335, 336,
	337, 1540, 338, 339, 340, 341, 342, 343, 344, 746,
	747, 0, 345, 748, 346, 749, 0, 750, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 751,
	752, 1538, 0, 355, 356, 754, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 755, 756,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	757, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 758, 759, 426, 427, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 430, 760, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	0, 437, 438, 439, 761, 762, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 0, 449, 763, 0, 764,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 765,
	766, 767, 553, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 0, 0, 0, 0, 768, 470, 554, 471, 769,
	770, 0, 771, 0, 472, 473, 475, 0, 772, 0,
	474, 476, 477, 0, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 773, 489, 0, 491, 492, 0, 0, 493, 494,
	495, 496, 497, 498, 501, 0, 0, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 894, 0, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 0, 546, 533, 0, 534,
	0, 0, 548, 549, 550, 551, 0, 774, 552, 775,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 776, 0, 565, 0,
	777, 566, 567, 559, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 778, 580, 581,
	582, 779, 583, 584, 585, 780, 586, 781, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 782, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 0, 893, 629, 630, 631, 632, 783, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 892, 638,
	647, 648, 649, 650, 652, 651, 0, 654, 655, 653,
	656, 1541, 658, 0, 659, 784, 660, 640, 641, 661,
	662, 0, 663, 664, 665, 666, 667, 668, 669, 785,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 786, 680, 681, 682, 683, 787,
	687, 688, 689, 690, 0, 691, 692, 0, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 890, 789, 790, 791, 0, 713, 0, 702,
	1539, 705, 706, 707, 792, 708, 793, 0, 709, 710,
	711, 712, 703, 714, 715, 0, 0, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 0, 725, 0, 0,
	726, 727, 728, 794, 795, 796, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 797, 737, 738, 739, 901,
	0, 316, 0, 740, 741, 798, 742, 743, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 899, 332, 333, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 746, 747, 0, 345, 748, 346, 749, 0, 750,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 751, 752, 753, 0, 355, 356, 754, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	755, 756, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 757, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 758, 759, 426, 427, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 430, 760,
	0, 0, 0, 431, 0, 432, 433, 434, 0, 435,
	436, 0, 0, 437, 438, 439, 761, 762, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 0, 449, 763,
	0, 764, 450, 0, 451, 452, 453, 454, 455, 456,
	457, 765, 766, 767, 553, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 465, 0, 0, 0, 466, 467,
	468, 469, 0, 0, 0, 0, 0, 768, 470, 554,
	471, 769, 770, 0, 771, 0, 472, 473, 475, 0,
	772, 0, 474, 476, 477, 0, 478, 0, 0, 0,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 488,
	487, 0, 490, 773, 489, 0, 491, 492, 0, 0,
	493, 494, 495, 496, 497, 498, 501, 0, 0, 499,
	500, 502, 503, 0, 504, 505, 507, 510, 506, 508,
	509, 511, 524, 525, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 527, 0, 526, 0,
	528, 529, 530, 531, 532, 540, 542, 543, 538, 539,
	541, 544, 545, 547, 535, 536, 537, 0, 546, 533,
	0, 534, 0, 0, 548, 549, 550, 551, 0, 774,
	552, 775, 555, 556, 0, 0, 557, 0, 558, 0,
	0, 560, 561, 562, 0, 0, 563, 564, 776, 0,
	565, 0, 777, 566, 567, 559, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 578, 579, 778,
	580, 581, 582, 779, 583, 584, 585, 780, 586, 781,
	587, 588, 0, 589, 590, 591, 0, 592, 593, 594,
	595, 596, 597, 598, 599, 782, 600, 601, 603, 602,
	604, 0, 605, 0, 606, 607, 608, 0, 0, 0,
	0, 0, 609, 610, 612, 0, 613, 614, 615, 616,
	611, 617, 618, 619, 620, 621, 622, 0, 624, 625,
	623, 626, 627, 0, 628, 629, 630, 631, 632, 783,
	633, 0, 634, 635, 643, 644, 645, 636, 637, 639,
	646, 638, 647, 648, 649, 650, 652, 651, 0, 654,
	655, 653, 656, 657, 658, 0, 659, 784, 660, 640,
	641, 661, 662, 0, 663, 664, 665, 666, 667, 668,
	669, 785, 0, 670, 0, 671, 672, 673, 674, 675,
	676, 678, 642, 679, 684, 685, 786, 680, 681, 682,
	683, 787, 687, 688, 689, 690, 0, 691, 692, 0,
	686, 677, 0, 693, 694, 695, 696, 697, 698, 0,
	699, 700, 0, 701, 788, 789, 790, 791, 0, 713,
	0, 702, 704, 705, 706, 707, 792, 708, 793, 0,
	709, 710, 711, 712, 703, 714, 715, 0, 0, 716,
	717, 718, 720, 722, 723, 719, 721, 724, 0, 725,
	0, 0, 726, 727, 728, 794, 795, 796, 0, 730,
	731, 729, 732, 733, 736, 734, 735, 797, 737, 738,
	739, 809, 0, 316, 0, 740, 741, 798, 742, 743,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 808, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 807, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 3433, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 5289, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 3959, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 4838, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 4526, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 3161, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 3152, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 3433, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 3513, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 2502, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 893, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 892, 638, 647, 648, 649, 650, 3382, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 890, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 2686, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 2672, 0, 316, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 0, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 765, 766, 767, 553, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 0, 0, 0,
	0, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 0, 772, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 0,
	491, 492, 0, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 0, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 0, 0, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 0, 565, 0, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 1877, 0, 316, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 334, 0, 335, 336, 337, 0,
	338, 339, 340, 341, 342, 343, 344, 746, 747, 0,
	345, 748, 346, 749, 0, 750, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 751, 752, 753,
	0, 355, 356, 754, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 388, 389, 0, 390, 392, 755, 756, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 757, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 758, 759, 426, 427, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 430, 760, 0, 0, 0, 431,
	0, 432, 433, 434, 0, 435, 436, 0, 0, 437,
	438, 439, 761, 762, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 0, 449, 763, 0, 764, 450, 0,
	451, 452, 453, 454, 455, 456, 457, 765, 766, 767,
	553, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	465, 0, 0, 0, 466, 467, 468, 469, 0, 0,
	0, 0, 0, 768, 470, 554, 471, 769, 770, 0,
	771, 0, 472, 473, 475, 0, 772, 0, 474, 476,
	477, 0, 478, 0, 0, 0, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 488, 487, 0, 490, 773,
	489, 0, 491, 492, 0, 0, 493, 494, 495, 496,
	497, 498, 501, 0, 0, 499, 500, 502, 503, 0,
	504, 505, 507, 510, 506, 508, 509, 511, 524, 525,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 527, 0, 526, 0, 528, 529, 530, 531,
	532, 540, 542, 543, 538, 539, 541, 544, 545, 547,
	535, 536, 537, 0, 546, 533, 0, 534, 0, 0,
	548, 549, 550, 551, 0, 774, 552, 775, 555, 556,
	0, 0, 557, 0, 558, 0, 0, 560, 561, 562,
	0, 0, 563, 564, 776, 0, 565, 0, 777, 566,
	567, 559, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 578, 579, 778, 580, 581, 582, 779,
	583, 584, 585, 780, 586, 781, 587, 588, 0, 589,
	590, 591, 0, 592, 593, 594, 595, 596, 597, 598,
	599, 782, 600, 601, 603, 602, 604, 0, 605, 0,
	606, 607, 608, 0, 0, 0, 0, 0, 609, 610,
	612, 0, 613, 614, 615, 616, 611, 617, 618, 619,
	620, 621, 622, 0, 624, 625, 623, 626, 627, 0,
	628, 629, 630, 631, 632, 783, 633, 0, 634, 635,
	643, 644, 645, 636, 637, 639, 646, 638, 647, 648,
	649, 650, 652, 651, 0, 654, 655, 653, 656, 657,
	658, 0, 659, 784, 660, 640, 641, 661, 662, 0,
	663, 664, 665, 666, 667, 668, 669, 785, 0, 670,
	0, 671, 672, 673, 674, 675, 676, 678, 642, 679,
	684, 685, 786, 680, 681, 682, 683, 787, 687, 688,
	689, 690, 0, 691, 692, 0, 686, 677, 0, 693,
	694, 695, 696, 697, 698, 0, 699, 700, 0, 701,
	788, 789, 790, 791, 0, 713, 0, 702, 704, 705,
	706, 707, 792, 708, 793, 0, 709, 710, 711, 712,
	703, 714, 715, 0, 0, 716, 717, 718, 720, 722,
	723, 719, 721, 724, 0, 725, 0, 0, 726, 727,
	728, 794, 795, 796, 0, 730, 731, 729, 732, 733,
	736, 734, 735, 797, 737, 738, 739, 1869, 0, 316,
	0, 740, 741, 798, 742, 743, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 746,
	747, 0, 345, 748, 346, 749, 0, 750, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 751,
	752, 753, 0, 355, 356, 754, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 755, 756,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	757, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 758, 759, 426, 427, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 430, 760, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	0, 437, 438, 439, 761, 762, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 0, 449, 763, 0, 764,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 765,
	766, 767, 553, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 0, 0, 0, 0, 768, 470, 554, 471, 769,
	770, 0, 771, 0, 472, 473, 475, 0, 772, 0,
	474, 476, 477, 0, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 773, 489, 0, 491, 492, 0, 0, 493, 494,
	495, 496, 497, 498, 501, 0, 0, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 0, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 0, 546, 533, 0, 534,
	0, 0, 548, 549, 550, 551, 0, 774, 552, 775,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 776, 0, 565, 0,
	777, 566, 567, 559, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 778, 580, 581,
	582, 779, 583, 584, 585, 780, 586, 781, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 782, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 0, 628, 629, 630, 631, 632, 783, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 650, 652, 651, 0, 654, 655, 653,
	656, 657, 658, 0, 659, 784, 660, 640, 641, 661,
	662, 0, 663, 664, 665, 666, 667, 668, 669, 785,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 786, 680, 681, 682, 683, 787,
	687, 688, 689, 690, 0, 691, 692, 0, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 788, 789, 790, 791, 0, 713, 0, 702,
	704, 705, 706, 707, 792, 708, 793, 0, 709, 710,
	711, 712, 703, 714, 715, 0, 0, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 0, 725, 0, 0,
	726, 727, 728, 794, 795, 796, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 797, 737, 738, 739, 884,
	0, 316, 0, 740, 741, 798, 742, 743, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 746, 747, 0, 345, 748, 346, 749, 0, 750,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 751, 752, 753, 0, 355, 880, 754, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	755, 756, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 757, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 758, 759, 426, 427, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 430, 760,
	0, 0, 0, 431, 0, 432, 433, 434, 0, 435,
	436, 0, 0, 437, 438, 439, 761, 762, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 0, 449, 763,
	0, 764, 450, 0, 451, 452, 453, 454, 455, 456,
	457, 765, 766, 767, 553, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 465, 0, 0, 0, 466, 467,
	468, 469, 0, 0, 0, 0, 0, 768, 470, 554,
	471, 769, 770, 0, 771, 0, 472, 473, 475, 0,
	772, 0, 474, 476, 477, 0, 478, 0, 0, 0,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 488,
	487, 0, 490, 773, 489, 0, 491, 492, 0, 0,
	493, 494, 495, 496, 497, 885, 501, 0, 0, 499,
	500, 502, 503, 0, 504, 505, 507, 510, 506, 508,
	509, 511, 524, 525, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 527, 0, 894, 0,
	528, 529, 530, 531, 532, 540, 542, 543, 538, 539,
	541, 544, 545, 547, 535, 536, 537, 0, 546, 533,
	0, 534, 0, 0, 548, 549, 550, 551, 0, 774,
	552, 775, 555, 556, 0, 0, 557, 0, 558, 0,
	0, 560, 561, 562, 0, 0, 563, 564, 776, 0,
	565, 0, 777, 566, 567, 559, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 578, 579, 778,
	580, 581, 582, 779, 583, 584, 585, 780, 586, 781,
	587, 588, 0, 589, 590, 591, 0, 592, 593, 594,
	595, 596, 597, 598, 599, 782, 600, 601, 603, 602,
	604, 0, 605, 0, 606, 607, 608, 0, 0, 0,
	0, 0, 609, 610, 612, 0, 613, 614, 615, 616,
	611, 617, 618, 619, 620, 621, 622, 0, 624, 625,
	623, 626, 627, 0, 893, 629, 630, 631, 632, 783,
	633, 0, 634, 635, 643, 644, 645, 636, 637, 639,
	892, 638, 647, 648, 649, 650, 652, 651, 0, 654,
	655, 653, 656, 1854, 658, 0, 659, 784, 660, 640,
	641, 661, 662, 0, 663, 664, 665, 666, 667, 668,
	669, 785, 0, 670, 0, 671, 672, 673, 674, 675,
	676, 678, 642, 679, 684, 685, 786, 680, 681, 682,
	683, 787, 687, 688, 689, 690, 0, 691, 692, 0,
	686, 677, 0, 693, 694, 695, 696, 697, 698, 0,
	699, 700, 0, 701, 890, 789, 790, 791, 0, 713,
	0, 702, 704, 705, 706, 707, 792, 708, 793, 0,
	709, 710, 711, 712, 703, 714, 715, 0, 0, 716,
	717, 718, 720, 722, 723, 719, 721, 724, 0, 725,
	0, 0, 726, 727, 728, 794, 795, 796, 0, 730,
	731, 729, 732, 733, 736, 734, 735, 797, 737, 738,
	739, 1827, 0, 316, 0, 740, 741, 798, 742, 743,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 1826, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 1810, 0, 316, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 0, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 1808, 766, 767, 553, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 0, 0, 0,
	0, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 0, 772, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 0,
	491, 492, 0, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 0, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 0, 0, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 0, 565, 0, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 1802, 0, 316, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 334, 0, 335, 336, 337, 0,
	338, 339, 340, 341, 342, 343, 344, 746, 747, 0,
	345, 748, 346, 749, 0, 750, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 751, 752, 753,
	0, 355, 356, 754, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 388, 389, 0, 390, 392, 755, 756, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 757, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 758, 759, 426, 427, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 430, 760, 0, 0, 0, 431,
	0, 432, 433, 434, 0, 435, 436, 0, 0, 437,
	438, 439, 761, 762, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 0, 449, 763, 0, 764, 450, 0,
	451, 452, 453, 454, 455, 456, 457, 765, 766, 767,
	553, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	465, 0, 0, 0, 466, 467, 468, 469, 0, 0,
	0, 0, 0, 768, 470, 554, 471, 769, 770, 0,
	771, 0, 472, 473, 475, 0, 772, 0, 474, 476,
	477, 0, 478, 0, 0, 0, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 488, 487, 0, 490, 773,
	489, 0, 491, 492, 0, 0, 493, 494, 495, 496,
	497, 498, 501, 0, 0, 499, 500, 502, 503, 0,
	504, 505, 507, 510, 506, 508, 509, 511, 524, 525,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 527, 0, 526, 0, 528, 529, 530, 531,
	532, 540, 542, 543, 538, 539, 541, 544, 545, 547,
	535, 536, 537, 0, 546, 533, 0, 534, 0, 0,
	548, 549, 550, 551, 0, 774, 552, 775, 555, 556,
	0, 0, 557, 0, 558, 0, 0, 560, 561, 562,
	0, 0, 563, 564, 776, 0, 565, 0, 777, 566,
	567, 559, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 578, 579, 778, 580, 581, 582, 779,
	583, 584, 585, 780, 586, 781, 587, 588, 0, 589,
	590, 591, 0, 592, 593, 594, 595, 596, 597, 598,
	599, 782, 600, 601, 603, 602, 604, 0, 605, 0,
	606, 607, 608, 0, 0, 0, 0, 0, 609, 610,
	612, 0, 613, 614, 615, 616, 611, 617, 618, 619,
	620, 621, 622, 0, 624, 625, 623, 626, 627, 0,
	628, 629, 630, 631, 632, 783, 633, 0, 634, 635,
	643, 644, 645, 636, 637, 639, 646, 638, 647, 648,
	649, 650, 652, 651, 0, 654, 655, 653, 656, 657,
	658, 0, 659, 784, 660, 640, 641, 661, 662, 0,
	663, 664, 665, 666, 667, 668, 669, 785, 0, 670,
	0, 671, 672, 673, 674, 675, 676, 678, 642, 679,
	684, 685, 786, 680, 681, 682, 683, 787, 687, 688,
	689, 690, 0, 691, 692, 0, 686, 677, 0, 693,
	694, 695, 696, 697, 698, 0, 699, 700, 0, 701,
	788, 789, 790, 791, 0, 713, 0, 702, 704, 705,
	706, 707, 792, 708, 793, 0, 709, 710, 711, 712,
	703, 714, 715, 0, 0, 716, 717, 718, 720, 722,
	723, 719, 721, 724, 0, 725, 0, 0, 726, 727,
	728, 794, 795, 796, 0, 730, 731, 729, 732, 733,
	736, 734, 735, 797, 737, 738, 739, 1780, 0, 316,
	0, 740, 741, 798, 742, 743, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 746,
	747, 0, 345, 748, 346, 749, 0, 750, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 751,
	752, 753, 0, 355, 356, 754, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 755, 756,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	757, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 758, 759, 426, 427, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 430, 760, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	0, 437, 438, 439, 761, 762, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 0, 449, 763, 0, 764,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 1778,
	766, 767, 553, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 0, 0, 0, 0, 768, 470, 554, 471, 769,
	770, 0, 771, 0, 472, 473, 475, 0, 772, 0,
	474, 476, 477, 0, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 773, 489, 0, 491, 492, 0, 0, 493, 494,
	495, 496, 497, 498, 501, 0, 0, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 0, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 0, 546, 533, 0, 534,
	0, 0, 548, 549, 550, 551, 0, 774, 552, 775,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 776, 0, 565, 0,
	777, 566, 567, 559, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 778, 580, 581,
	582, 779, 583, 584, 585, 780, 586, 781, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 782, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 0, 628, 629, 630, 631, 632, 783, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 650, 652, 651, 0, 654, 655, 653,
	656, 657, 658, 0, 659, 784, 660, 640, 641, 661,
	662, 0, 663, 664, 665, 666, 667, 668, 669, 785,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 786, 680, 681, 682, 683, 787,
	687, 688, 689, 690, 0, 691, 692, 0, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 788, 789, 790, 791, 0, 713, 0, 702,
	704, 705, 706, 707, 792, 708, 793, 0, 709, 710,
	711, 712, 703, 714, 715, 0, 0, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 0, 725, 0, 0,
	726, 727, 728, 794, 795, 796, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 797, 737, 738, 739, 1771,
	0, 316, 0, 740, 741, 798, 742, 743, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 746, 747, 0, 345, 748, 346, 749, 0, 750,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 751, 752, 753, 0, 355, 356, 754, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	755, 756, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 757, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 758, 759, 426, 427, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 430, 760,
	0, 0, 0, 431, 0, 432, 433, 434, 0, 435,
	436, 0, 0, 437, 438, 439, 761, 762, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 0, 449, 763,
	0, 764, 450, 0, 451, 452, 453, 454, 455, 456,
	457, 765, 766, 767, 553, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 465, 0, 0, 0, 466, 467,
	468, 469, 0, 0, 0, 0, 0, 768, 470, 554,
	471, 769, 770, 0, 771, 0, 472, 473, 475, 0,
	772, 0, 474, 476, 477, 0, 478, 0, 0, 0,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 488,
	487, 0, 490, 773, 489, 0, 491, 492, 0, 0,
	493, 494, 495, 496, 497, 498, 501, 0, 0, 499,
	500, 502, 503, 0, 504, 505, 507, 510, 506, 508,
	509, 511, 524, 525, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 527, 0, 526, 0,
	528, 529, 530, 531, 532, 540, 542, 543, 538, 539,
	541, 544, 545, 547, 535, 536, 537, 0, 546, 533,
	0, 534, 0, 0, 548, 549, 550, 551, 0, 774,
	552, 775, 555, 556, 0, 0, 557, 0, 558, 0,
	0, 560, 561, 562, 0, 0, 563, 564, 776, 0,
	565, 0, 777, 566, 567, 559, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 578, 579, 778,
	580, 581, 582, 779, 583, 584, 585, 780, 586, 781,
	587, 588, 0, 589, 590, 591, 0, 592, 593, 594,
	595, 596, 597, 598, 599, 782, 600, 601, 603, 602,
	604, 0, 605, 0, 606, 607, 608, 0, 0, 0,
	0, 0, 609, 610, 612, 0, 613, 614, 615, 616,
	611, 617, 618, 619, 620, 621, 622, 0, 624, 625,
	623, 626, 627, 0, 628, 629, 630, 631, 632, 783,
	633, 0, 634, 635, 643, 644, 645, 636, 637, 639,
	646, 638, 647, 648, 649, 650, 652, 651, 0, 654,
	655, 653, 656, 657, 658, 0, 659, 784, 660, 640,
	641, 661, 662, 0, 663, 664, 665, 666, 667, 668,
	669, 785, 0, 670, 0, 671, 672, 673, 674, 675,
	676, 678, 642, 679, 684, 685, 786, 680, 681, 682,
	683, 787, 687, 688, 689, 690, 0, 691, 692, 0,
	686, 677, 0, 693, 694, 695, 696, 697, 698, 0,
	699, 700, 0, 701, 788, 789, 790, 791, 0, 713,
	0, 702, 704, 705, 706, 707, 792, 708, 793, 0,
	709, 710, 711, 712, 703, 714, 715, 0, 0, 716,
	717, 718, 720, 722, 723, 719, 721, 724, 0, 725,
	0, 0, 726, 727, 728, 794, 795, 796, 0, 730,
	731, 729, 732, 733, 736, 734, 735, 797, 737, 738,
	739, 1732, 0, 316, 0, 740, 741, 798, 742, 743,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 1696, 0, 316, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	356, 754, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 0, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 765, 766, 767, 553, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 0, 0, 0,
	0, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 0, 772, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 0,
	491, 492, 0, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 0, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 0, 0, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 0, 565, 0, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 628, 629,
	630, 631, 632, 783, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 788, 789,
	790, 791, 0, 713, 0, 702, 704, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 1543, 0, 316, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 334, 0, 335, 336, 337, 0,
	338, 339, 340, 341, 342, 343, 344, 746, 747, 0,
	345, 748, 346, 749, 0, 750, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 751, 752, 753,
	0, 355, 356, 754, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 388, 389, 0, 390, 392, 755, 756, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 757, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 758, 759, 426, 427, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 430, 760, 0, 0, 0, 431,
	0, 432, 433, 434, 0, 435, 436, 0, 0, 437,
	438, 439, 761, 762, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 0, 449, 763, 0, 764, 450, 0,
	451, 452, 453, 454, 455, 456, 457, 765, 766, 767,
	553, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	465, 0, 0, 0, 466, 467, 468, 469, 0, 0,
	0, 0, 0, 768, 470, 554, 471, 769, 770, 0,
	771, 0, 472, 473, 475, 0, 772, 0, 474, 476,
	477, 0, 478, 0, 0, 0, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 488, 487, 0, 490, 773,
	489, 0, 491, 492, 0, 0, 493, 494, 495, 496,
	497, 498, 501, 0, 0, 499, 500, 502, 503, 0,
	504, 505, 507, 510, 506, 508, 509, 511, 524, 525,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 527, 0, 526, 0, 528, 529, 530, 531,
	532, 540, 542, 543, 538, 539, 541, 544, 545, 547,
	535, 536, 537, 0, 546, 533, 0, 534, 0, 0,
	548, 549, 550, 551, 0, 774, 552, 775, 555, 556,
	0, 0, 557, 0, 558, 0, 0, 560, 561, 562,
	0, 0, 563, 564, 776, 0, 565, 0, 777, 566,
	567, 559, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 578, 579, 778, 580, 581, 582, 779,
	583, 584, 585, 780, 586, 781, 587, 588, 0, 589,
	590, 591, 0, 592, 593, 594, 595, 596, 597, 598,
	599, 782, 600, 601, 603, 602, 604, 0, 605, 0,
	606, 607, 608, 0, 0, 0, 0, 0, 609, 610,
	612, 0, 613, 614, 615, 616, 611, 617, 618, 619,
	620, 621, 622, 0, 624, 625, 623, 626, 627, 0,
	893, 629, 630, 631, 632, 783, 633, 0, 634, 635,
	643, 644, 645, 636, 637, 639, 892, 638, 647, 648,
	649, 650, 652, 651, 0, 654, 655, 653, 656, 657,
	658, 0, 659, 784, 660, 640, 641, 661, 662, 0,
	663, 664, 665, 666, 667, 668, 669, 785, 0, 670,
	0, 671, 672, 673, 674, 675, 676, 678, 642, 679,
	684, 685, 786, 680, 681, 682, 683, 787, 687, 688,
	689, 690, 0, 691, 692, 0, 686, 677, 0, 693,
	694, 695, 696, 697, 698, 0, 699, 700, 0, 701,
	890, 789, 790, 791, 0, 713, 0, 702, 704, 705,
	706, 707, 792, 708, 793, 0, 709, 710, 711, 712,
	703, 714, 715, 0, 0, 716, 717, 718, 720, 722,
	723, 719, 721, 724, 0, 725, 0, 0, 726, 727,
	728, 794, 795, 796, 0, 730, 731, 729, 732, 733,
	736, 734, 735, 797, 737, 738, 739, 1514, 0, 316,
	0, 740, 741, 798, 742, 743, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 746,
	747, 0, 345, 748, 346, 749, 0, 750, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 751,
	752, 753, 0, 355, 356, 754, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 755, 756,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	757, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 758, 759, 426, 427, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 430, 760, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	0, 437, 438, 439, 761, 762, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 0, 449, 763, 0, 764,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 1513,
	766, 767, 553, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 0, 0, 0, 0, 768, 470, 554, 471, 769,
	770, 0, 771, 0, 472, 473, 475, 0, 772, 0,
	474, 476, 477, 0, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 773, 489, 0, 491, 492, 0, 0, 493, 494,
	495, 496, 497, 498, 501, 0, 0, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 0, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 0, 546, 533, 0, 534,
	0, 0, 548, 549, 550, 551, 0, 774, 552, 775,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 776, 0, 565, 0,
	777, 566, 567, 559, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 778, 580, 581,
	582, 779, 583, 584, 585, 780, 586, 781, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 782, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 0, 628, 629, 630, 631, 632, 783, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 650, 652, 651, 0, 654, 655, 653,
	656, 657, 658, 0, 659, 784, 660, 640, 641, 661,
	662, 0, 663, 664, 665, 666, 667, 668, 669, 785,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 786, 680, 681, 682, 683, 787,
	687, 688, 689, 690, 0, 691, 692, 0, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 788, 789, 790, 791, 0, 713, 0, 702,
	704, 705, 706, 707, 792, 708, 793, 0, 709, 710,
	711, 712, 703, 714, 715, 0, 0, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 0, 725, 0, 0,
	726, 727, 728, 794, 795, 796, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 797, 737, 738, 739, 1506,
	0, 316, 0, 740, 741, 798, 742, 743, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 746, 747, 0, 345, 748, 346, 749, 0, 750,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 751, 752, 753, 0, 355, 356, 754, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	755, 756, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 757, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 758, 759, 426, 427, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 430, 760,
	0, 0, 0, 431, 0, 432, 433, 434, 0, 435,
	436, 0, 0, 437, 438, 439, 761, 762, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 0, 449, 763,
	0, 764, 450, 0, 451, 452, 453, 454, 455, 456,
	457, 1505, 766, 767, 553, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 465, 0, 0, 0, 466, 467,
	468, 469, 0, 0, 0, 0, 0, 768, 470, 554,
	471, 769, 770, 0, 771, 0, 472, 473, 475, 0,
	772, 0, 474, 476, 477, 0, 478, 0, 0, 0,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 488,
	487, 0, 490, 773, 489, 0, 491, 492, 0, 0,
	493, 494, 495, 496, 497, 498, 501, 0, 0, 499,
	500, 502, 503, 0, 504, 505, 507, 510, 506, 508,
	509, 511, 524, 525, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 527, 0, 526, 0,
	528, 529, 530, 531, 532, 540, 542, 543, 538, 539,
	541, 544, 545, 547, 535, 536, 537, 0, 546, 533,
	0, 534, 0, 0, 548, 549, 550, 551, 0, 774,
	552, 775, 555, 556, 0, 0, 557, 0, 558, 0,
	0, 560, 561, 562, 0, 0, 563, 564, 776, 0,
	565, 0, 777, 566, 567, 559, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 578, 579, 778,
	580, 581, 582, 779, 583, 584, 585, 780, 586, 781,
	587, 588, 0, 589, 590, 591, 0, 592, 593, 594,
	595, 596, 597, 598, 599, 782, 600, 601, 603, 602,
	604, 0, 605, 0, 606, 607, 608, 0, 0, 0,
	0, 0, 609, 610, 612, 0, 613, 614, 615, 616,
	611, 617, 618, 619, 620, 621, 622, 0, 624, 625,
	623, 626, 627, 0, 628, 629, 630, 631, 632, 783,
	633, 0, 634, 635, 643, 644, 645, 636, 637, 639,
	646, 638, 647, 648, 649, 650, 652, 651, 0, 654,
	655, 653, 656, 657, 658, 0, 659, 784, 660, 640,
	641, 661, 662, 0, 663, 664, 665, 666, 667, 668,
	669, 785, 0, 670, 0, 671, 672, 673, 674, 675,
	676, 678, 642, 679, 684, 685, 786, 680, 681, 682,
	683, 787, 687, 688, 689, 690, 0, 691, 692, 0,
	686, 677, 0, 693, 694, 695, 696, 697, 698, 0,
	699, 700, 0, 701, 788, 789, 790, 791, 0, 713,
	0, 702, 704, 705, 706, 707, 792, 708, 793, 0,
	709, 710, 711, 712, 703, 714, 715, 0, 0, 716,
	717, 718, 720, 722, 723, 719, 721, 724, 0, 725,
	0, 0, 726, 727, 728, 794, 795, 796, 0, 730,
	731, 729, 732, 733, 736, 734, 735, 797, 737, 738,
	739, 316, 0, 0, 0, 740, 741, 798, 742, 743,
	744, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 1447, 332, 333, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 746, 747, 0, 345, 748, 346, 749, 0, 750,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 751, 752, 753, 0, 355, 356, 754, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	755, 756, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 757, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 758, 759, 426, 427, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 430, 760,
	0, 0, 0, 431, 0, 432, 433, 434, 0, 435,
	436, 0, 0, 437, 438, 439, 761, 762, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 0, 449, 763,
	0, 764, 450, 0, 451, 452, 453, 454, 455, 456,
	457, 765, 766, 767, 553, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 465, 0, 0, 0, 466, 467,
	468, 469, 0, 0, 0, 0, 0, 768, 470, 554,
	471, 769, 770, 0, 771, 0, 472, 473, 475, 0,
	772, 0, 474, 476, 477, 0, 478, 0, 0, 0,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 488,
	487, 0, 490, 773, 489, 0, 491, 492, 0, 0,
	493, 494, 495, 496, 497, 498, 501, 0, 0, 499,
	500, 502, 503, 0, 504, 505, 507, 510, 506, 508,
	509, 511, 524, 525, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 527, 0, 526, 0,
	528, 529, 530, 531, 532, 540, 542, 543, 538, 539,
	541, 544, 545, 547, 535, 536, 537, 0, 546, 533,
	0, 534, 0, 0, 548, 549, 550, 551, 0, 774,
	552, 775, 555, 556, 0, 0, 557, 0, 558, 0,
	0, 560, 561, 562, 0, 0, 563, 564, 776, 0,
	565, 0, 777, 566, 567, 559, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 578, 579, 778,
	580, 581, 582, 779, 583, 584, 585, 780, 586, 781,
	587, 588, 0, 589, 590, 591, 0, 592, 593, 594,
	595, 596, 597, 598, 599, 782, 600, 601, 603, 602,
	604, 0, 605, 0, 606, 607, 608, 0, 0, 0,
	0, 0, 609, 610, 612, 0, 613, 614, 615, 616,
	611, 617, 618, 619, 620, 621, 622, 0, 624, 625,
	623, 626, 627, 0, 628, 629, 630, 631, 632, 783,
	633, 0, 634, 635, 643, 644, 645, 636, 637, 639,
	646, 638, 647, 648, 649, 650, 652, 651, 0, 654,
	655, 653, 656, 657, 658, 0, 659, 784, 660, 640,
	641, 661, 662, 0, 663, 664, 665, 666, 667, 668,
	669, 785, 0, 670, 0, 671, 672, 673, 674, 675,
	676, 678, 642, 679, 684, 685, 786, 680, 681, 682,
	683, 787, 687, 688, 689, 690, 0, 691, 692, 0,
	686, 677, 0, 693, 694, 695, 696, 697, 698, 0,
	699, 700, 0, 701, 788, 789, 790, 791, 0, 713,
	0, 702, 704, 705, 706, 707, 792, 708, 793, 0,
	709, 710, 711, 712, 703, 714, 715, 0, 0, 716,
	717, 718, 720, 722, 723, 719, 721, 724, 0, 725,
	0, 0, 726, 727, 728, 794, 795, 796, 0, 730,
	731, 729, 732, 733, 736, 734, 735, 797, 737, 738,
	739, 904, 0, 316, 0, 740, 741, 798, 742, 743,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 884, 0, 316, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 746, 747, 0, 345, 748,
	346, 749, 0, 750, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 751, 752, 753, 0, 355,
	880, 754, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 879, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 387, 388,
	389, 0, 390, 392, 755, 756, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 757, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 758,
	759, 426, 427, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 430, 760, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 0, 437, 438, 439,
	761, 762, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 763, 0, 764, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 765, 766, 767, 553, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 0, 0, 0,
	0, 768, 470, 554, 471, 769, 770, 0, 771, 0,
	472, 473, 475, 0, 772, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 773, 489, 0,
	491, 492, 0, 0, 493, 494, 495, 496, 497, 885,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 894, 0, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 0, 0, 548, 549,
	550, 551, 0, 774, 552, 775, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 776, 0, 565, 0, 777, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 778, 580, 581, 582, 779, 583, 584,
	585, 780, 586, 781, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 782,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 893, 629,
	630, 631, 632, 881, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 892, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 882, 658, 0,
	659, 784, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 785, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	786, 680, 681, 682, 683, 787, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 890, 789,
	790, 791, 0, 713, 0, 702, 886, 705, 706, 707,
	792, 708, 793, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 794,
	795, 796, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 797, 737, 738, 739, 873, 0, 316, 0, 740,
	741, 798, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 334, 0, 335, 336, 337, 0,
	338, 339, 340, 341, 342, 343, 344, 746, 747, 0,
	345, 748, 346, 749, 0, 750, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 751, 752, 753,
	0, 355, 356, 754, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 388, 389, 0, 390, 392, 755, 756, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 757, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 758, 759, 426, 427, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 430, 760, 0, 0, 0, 431,
	0, 432, 433, 434, 0, 435, 436, 0, 0, 437,
	438, 439, 761, 762, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 0, 449, 763, 0, 764, 450, 0,
	451, 452, 453, 454, 455, 456, 457, 765, 766, 767,
	553, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	465, 0, 0, 0, 466, 467, 468, 469, 0, 0,
	0, 0, 0, 768, 470, 554, 471, 769, 770, 0,
	771, 0, 472, 473, 475, 0, 772, 0, 474, 476,
	477, 0, 478, 0, 0, 0, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 488, 487, 0, 490, 773,
	489, 0, 491, 492, 0, 0, 493, 494, 495, 496,
	497, 498, 501, 0, 0, 499, 500, 502, 503, 0,
	504, 505, 507, 510, 506, 508, 509, 511, 524, 525,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 527, 0, 526, 0, 528, 529, 530, 531,
	532, 540, 542, 543, 538, 539, 541, 544, 545, 547,
	535, 536, 537, 0, 546, 533, 0, 534, 0, 0,
	548, 549, 550, 551, 0, 774, 552, 775, 555, 556,
	0, 0, 557, 0, 558, 0, 0, 560, 561, 562,
	0, 0, 563, 564, 776, 0, 565, 0, 777, 566,
	567, 559, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 578, 579, 778, 580, 581, 582, 779,
	583, 584, 585, 780, 586, 781, 587, 588, 0, 589,
	590, 591, 0, 592, 593, 594, 595, 596, 597, 598,
	599, 782, 600, 601, 603, 602, 604, 0, 605, 0,
	606, 607, 608, 0, 0, 0, 0, 0, 609, 610,
	612, 0, 613, 614, 615, 616, 611, 617, 618, 619,
	620, 621, 622, 0, 624, 625, 623, 626, 627, 0,
	628, 629, 630, 631, 632, 783, 633, 0, 634, 635,
	874, 644, 645, 636, 637, 639, 646, 638, 647, 648,
	649, 650, 652, 651, 0, 654, 655, 653, 656, 657,
	658, 0, 659, 784, 660, 640, 641, 661, 662, 0,
	663, 664, 665, 666, 667, 668, 669, 785, 0, 670,
	0, 671, 672, 673, 674, 675, 676, 678, 642, 679,
	684, 685, 786, 680, 681, 682, 683, 787, 687, 688,
	689, 690, 0, 691, 692, 0, 686, 677, 0, 693,
	694, 695, 696, 697, 698, 0, 699, 700, 0, 701,
	788, 789, 790, 791, 0, 713, 0, 702, 704, 705,
	706, 707, 792, 708, 793, 0, 709, 710, 711, 712,
	703, 714, 715, 0, 0, 716, 717, 718, 720, 722,
	723, 719, 721, 724, 0, 725, 0, 0, 726, 727,
	728, 794, 795, 796, 0, 730, 731, 729, 732, 733,
	736, 734, 735, 797, 737, 738, 739, 835, 0, 316,
	0, 740, 741, 798, 742, 743, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 746,
	747, 0, 345, 748, 346, 749, 0, 750, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 751,
	752, 753, 0, 355, 356, 754, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 0, 390, 392, 755, 756,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	757, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 758, 759, 426, 427, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 430, 760, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	0, 437, 438, 439, 761, 762, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 0, 449, 763, 0, 764,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 765,
	766, 767, 553, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 0, 0, 0, 0, 768, 470, 554, 471, 769,
	770, 0, 771, 0, 472, 473, 475, 0, 772, 0,
	474, 476, 477, 0, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 773, 489, 0, 491, 492, 0, 0, 493, 494,
	495, 496, 497, 498, 501, 0, 0, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 0, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 0, 546, 533, 0, 534,
	0, 0, 548, 549, 550, 551, 0, 774, 552, 775,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 776, 0, 565, 0,
	777, 566, 567, 559, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 778, 580, 581,
	582, 779, 583, 584, 585, 780, 586, 781, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 782, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 0, 628, 629, 630, 631, 632, 783, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 650, 652, 651, 0, 654, 655, 653,
	656, 657, 658, 0, 659, 784, 660, 640, 641, 661,
	662, 0, 663, 664, 665, 666, 667, 668, 669, 785,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 786, 680, 681, 682, 683, 787,
	687, 688, 689, 690, 0, 691, 692, 0, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 788, 789, 790, 791, 0, 713, 0, 702,
	704, 705, 706, 707, 792, 708, 793, 0, 709, 710,
	711, 712, 703, 714, 715, 0, 0, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 0, 725, 0, 0,
	726, 727, 728, 794, 795, 796, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 797, 737, 738, 739, 827,
	0, 316, 0, 740, 741, 798, 742, 743, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 746, 747, 0, 345, 748, 346, 749, 0, 750,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 751, 752, 753, 0, 355, 356, 754, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 0, 385, 386, 387, 388, 389, 0, 390, 392,
	755, 756, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 757, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 758, 759, 426, 427, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 430, 760,
	0, 0, 0, 431, 0, 432, 433, 434, 0, 435,
	436, 0, 0, 437, 438, 439, 761, 762, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 0, 449, 763,
	0, 764, 450, 0, 451, 452, 453, 454, 455, 456,
	457, 765, 766, 767, 553, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 465, 0, 0, 0, 466, 467,
	468, 469, 0, 0, 0, 0, 0, 768, 470, 554,
	471, 769, 770, 0, 771, 0, 472, 473, 475, 0,
	772, 0, 474, 476, 477, 0, 478, 0, 0, 0,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 488,
	487, 0, 490, 773, 489, 0, 491, 492, 0, 0,
	493, 494, 495, 496, 497, 498, 501, 0, 0, 499,
	500, 502, 503, 0, 504, 505, 507, 510, 506, 508,
	509, 511, 524, 525, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 527, 0, 526, 0,
	528, 529, 530, 531, 532, 540, 542, 543, 538, 539,
	541, 544, 545, 547, 535, 536, 537, 0, 546, 533,
	0, 534, 0, 0, 548, 549, 550, 551, 0, 774,
	552, 775, 555, 556, 0, 0, 557, 0, 558, 0,
	0, 560, 561, 562, 0, 0, 563, 564, 776, 0,
	565, 0, 777, 566, 567, 559, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 578, 579, 778,
	580, 581, 582, 779, 583, 584, 585, 780, 586, 781,
	587, 588, 0, 589, 590, 591, 0, 592, 593, 594,
	595, 596, 597, 598, 599, 782, 600, 601, 603, 602,
	604, 0, 605, 0, 606, 607, 608, 0, 0, 0,
	0, 0, 609, 610, 612, 0, 613, 614, 615, 616,
	611, 617, 618, 619, 620, 621, 622, 0, 624, 625,
	623, 626, 627, 0, 628, 629, 630, 631, 632, 783,
	633, 0, 634, 635, 643, 644, 645, 636, 637, 639,
	646, 638, 647, 648, 649, 650, 652, 651, 0, 654,
	655, 653, 656, 657, 658, 0, 659, 784, 660, 640,
	641, 661, 662, 0, 663, 664, 665, 666, 667, 668,
	669, 785, 0, 670, 0, 671, 672, 673, 674, 675,
	676, 678, 642, 679, 684, 685, 786, 680, 681, 682,
	683, 787, 687, 688, 689, 690, 0, 691, 692, 0,
	686, 677, 0, 693, 694, 695, 696, 697, 698, 0,
	699, 700, 0, 701, 788, 789, 790, 791, 0, 713,
	0, 702, 704, 705, 706, 707, 792, 708, 793, 0,
	709, 710, 711, 712, 703, 714, 715, 0, 0, 716,
	717, 718, 720, 722, 723, 719, 721, 724, 0, 725,
	0, 0, 726, 727, 728, 794, 795, 796, 0, 730,
	731, 729, 732, 733, 736, 734, 735, 797, 737, 738,
	739, 804, 0, 316, 0, 740, 741, 798, 742, 743,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 4185, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 893, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 892, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 890, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 4076, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 4045, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 4041, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 3984, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 3982, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 3970, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 3967, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 3532, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 874, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 2643, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 0, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 1475, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 782, 600, 601,
	1395, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 316, 0, 0, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 746, 747, 0, 345, 748, 346, 749,
	0, 750, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 751, 752, 753, 0, 355, 356, 754,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 0, 385, 386, 387, 388, 389, 0,
	390, 392, 755, 756, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 757, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 758, 759, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 760, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 761, 762,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 763, 0, 764, 0, 0, 451, 452, 453, 454,
	455, 456, 457, 765, 766, 767, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 768,
	470, 554, 471, 769, 770, 0, 771, 0, 472, 473,
	475, 0, 772, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 773, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 774, 552, 775, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	776, 0, 565, 0, 777, 566, 567, 559, 568, 569,
	570, 0, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 778, 580, 581, 582, 779, 583, 584, 585, 780,
	586, 781, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 0, 598, 599, 782, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 783, 0, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 0, 659, 784,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 785, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 786, 680,
	681, 682, 683, 787, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 788, 789, 790, 791,
	0, 713, 0, 702, 704, 705, 706, 707, 792, 708,
	793, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 794, 795, 796,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 797,
	737, 738, 739, 1816, 0, 1521, 0, 740, 741, 798,
	742, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 327, 326, 328, 329, 330, 331,
	0, 332, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 334, 0, 335, 336, 337, 0, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 0, 345, 0,
	346, 0, 0, 0, 347, 348, 349, 350, 351, 352,
	353, 0, 0, 0, 354, 0, 0, 0, 0, 355,
	356, 0, 0, 0, 0, 357, 358, 359, 360, 361,
	362, 363, 364, 0, 0, 366, 367, 368, 365, 369,
	370, 0, 371, 0, 372, 373, 374, 375, 376, 377,
	378, 0, 379, 380, 381, 0, 382, 383, 384, 0,
	0, 0, 0, 0, 0, 1523, 385, 386, 387, 388,
	389, 0, 390, 392, 0, 0, 0, 395, 397, 391,
	393, 0, 396, 394, 398, 399, 0, 400, 401, 402,
	0, 0, 403, 404, 405, 0, 406, 407, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 414, 415, 416,
	418, 420, 417, 419, 421, 422, 423, 424, 425, 0,
	0, 426, 427, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 430, 0, 0, 0, 0, 431, 0, 432,
	433, 434, 0, 435, 436, 0, 0, 437, 438, 439,
	0, 0, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 0, 449, 0, 0, 0, 450, 0, 451, 452,
	453, 454, 455, 456, 457, 1815, 0, 0, 553, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 465, 0,
	0, 0, 466, 467, 468, 469, 0, 0, 0, 0,
	0, 0, 470, 554, 471, 0, 0, 0, 0, 0,
	472, 473, 475, 0, 0, 0, 474, 476, 477, 0,
	478, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 0, 486, 488, 487, 0, 490, 0, 489, 0,
	491, 492, 0, 0, 493, 494, 495, 496, 497, 498,
	501, 0, 0, 499, 500, 502, 503, 0, 504, 505,
	507, 510, 506, 508, 509, 511, 524, 525, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	527, 0, 526, 0, 528, 529, 530, 531, 532, 540,
	542, 543, 538, 539, 541, 544, 545, 547, 535, 536,
	537, 0, 546, 533, 0, 534, 0, 0, 548, 549,
	550, 551, 0, 0, 552, 0, 555, 556, 0, 0,
	557, 0, 558, 0, 0, 560, 561, 562, 0, 0,
	563, 564, 0, 0, 565, 0, 0, 566, 567, 559,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 0, 586, 0, 587, 588, 0, 589, 590, 591,
	0, 592, 593, 594, 595, 596, 597, 598, 599, 0,
	600, 601, 603, 602, 604, 0, 605, 0, 606, 607,
	608, 0, 0, 0, 0, 0, 609, 610, 612, 0,
	613, 614, 615, 616, 611, 617, 618, 619, 620, 621,
	622, 0, 624, 625, 623, 626, 627, 0, 628, 629,
	630, 631, 632, 0, 633, 0, 634, 635, 643, 644,
	645, 636, 637, 639, 646, 638, 647, 648, 649, 650,
	652, 651, 0, 654, 655, 653, 656, 657, 658, 1524,
	659, 0, 660, 640, 641, 661, 662, 0, 663, 664,
	665, 666, 667, 668, 669, 0, 0, 670, 0, 671,
	672, 673, 674, 675, 676, 678, 642, 679, 684, 685,
	0, 680, 681, 682, 683, 0, 687, 688, 689, 690,
	0, 691, 692, 0, 686, 677, 0, 693, 694, 695,
	696, 697, 698, 0, 699, 700, 0, 701, 0, 0,
	0, 0, 0, 713, 0, 702, 704, 705, 706, 707,
	0, 708, 0, 0, 709, 710, 711, 712, 703, 714,
	715, 0, 0, 716, 717, 718, 720, 722, 723, 719,
	721, 724, 0, 725, 0, 0, 726, 727, 728, 0,
	0, 0, 0, 730, 731, 729, 732, 733, 736, 734,
	735, 0, 737, 738, 739, 1735, 0, 1521, 0, 740,
	741, 0, 742, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 327, 326, 328, 329,
	330, 331, 0, 332, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 334, 0, 335, 336, 337, 0,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 0,
	345, 0, 346, 0, 0, 0, 347, 348, 349, 350,
	351, 352, 353, 0, 0, 0, 354, 0, 0, 0,
	0, 355, 356, 0, 0, 0, 0, 357, 358, 359,
	360, 361, 362, 363, 364, 0, 0, 366, 367, 368,
	365, 369, 370, 0, 371, 0, 372, 373, 374, 375,
	376, 377, 378, 0, 379, 380, 381, 0, 382, 383,
	384, 0, 0, 0, 0, 0, 0, 1523, 385, 386,
	387, 388, 389, 0, 390, 392, 0, 0, 0, 395,
	397, 391, 393, 0, 396, 394, 398, 399, 0, 400,
	401, 402, 0, 0, 403, 404, 405, 0, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 414,
	415, 416, 418, 420, 417, 419, 421, 422, 423, 424,
	425, 0, 0, 426, 427, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 430, 0, 0, 0, 0, 431,
	0, 432, 433, 434, 0, 435, 436, 0, 0, 437,
	438, 439, 0, 0, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 0, 449, 0, 0, 0, 450, 0,
	451, 452, 453, 454, 455, 456, 457, 1734, 0, 0,
	553, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	465, 0, 0, 0, 466, 467, 468, 469, 0, 0,
	0, 0, 0, 0, 470, 554, 471, 0, 0, 0,
	0, 0, 472, 473, 475, 0, 0, 0, 474, 476,
	477, 0, 478, 0, 0, 0, 479, 480, 481, 482,
	483, 484, 485, 0, 486, 488, 487, 0, 490, 0,
	489, 0, 491, 492, 0, 0, 493, 494, 495, 496,
	497, 498, 501, 0, 0, 499, 500, 502, 503, 0,
	504, 505, 507, 510, 506, 508, 509, 511, 524, 525,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 527, 0, 526, 0, 528, 529, 530, 531,
	532, 540, 542, 543, 538, 539, 541, 544, 545, 547,
	535, 536, 537, 0, 546, 533, 0, 534, 0, 0,
	548, 549, 550, 551, 0, 0, 552, 0, 555, 556,
	0, 0, 557, 0, 558, 0, 0, 560, 561, 562,
	0, 0, 563, 564, 0, 0, 565, 0, 0, 566,
	567, 559, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 0, 586, 0, 587, 588, 0, 589,
	590, 591, 0, 592, 593, 594, 595, 596, 597, 598,
	599, 0, 600, 601, 603, 602, 604, 0, 605, 0,
	606, 607, 608, 0, 0, 0, 0, 0, 609, 610,
	612, 0, 613, 614, 615, 616, 611, 617, 618, 619,
	620, 621, 622, 0, 624, 625, 623, 626, 627, 0,
	628, 629, 630, 631, 632, 0, 633, 0, 634, 635,
	643, 644, 645, 636, 637, 639, 646, 638, 647, 648,
	649, 650, 652, 651, 0, 654, 655, 653, 656, 657,
	658, 1524, 659, 0, 660, 640, 641, 661, 662, 0,
	663, 664, 665, 666, 667, 668, 669, 0, 0, 670,
	0, 671, 672, 673, 674, 675, 676, 678, 642, 679,
	684, 685, 0, 680, 681, 682, 683, 0, 687, 688,
	689, 690, 0, 691, 692, 0, 686, 677, 0, 693,
	694, 695, 696, 697, 698, 0, 699, 700, 0, 701,
	0, 0, 0, 0, 0, 713, 0, 702, 704, 705,
	706, 707, 0, 708, 0, 0, 709, 710, 711, 712,
	703, 714, 715, 0, 0, 716, 717, 718, 720, 722,
	723, 719, 721, 724, 0, 725, 0, 0, 726, 727,
	728, 0, 0, 0, 0, 730, 731, 729, 732, 733,
	736, 734, 735, 0, 737, 738, 739, 1519, 0, 1521,
	0, 740, 741, 0, 742, 743, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 0, 345, 0, 346, 0, 0, 0, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 0,
	0, 0, 0, 355, 356, 0, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 1523,
	385, 386, 387, 388, 389, 0, 390, 392, 0, 0,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 0, 0, 426, 427, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 430, 0, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	0, 437, 438, 439, 0, 0, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 0, 449, 0, 0, 0,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 1518,
	0, 0, 553, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 0, 0, 0, 0, 0, 470, 554, 471, 0,
	0, 0, 0, 0, 472, 473, 475, 0, 0, 0,
	474, 476, 477, 0, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 0, 489, 0, 491, 492, 0, 0, 493, 494,
	495, 496, 497, 498, 501, 0, 0, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 0, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 0, 546, 533, 0, 534,
	0, 0, 548, 549, 550, 551, 0, 0, 552, 0,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 0, 0, 565, 0,
	0, 566, 567, 559, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 0, 586, 0, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 0, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 0, 628, 629, 630, 631, 632, 0, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 650, 652, 651, 0, 654, 655, 653,
	656, 657, 658, 1524, 659, 0, 660, 640, 641, 661,
	662, 0, 663, 664, 665, 666, 667, 668, 669, 0,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 0, 680, 681, 682, 683, 0,
	687, 688, 689, 690, 0, 691, 692, 0, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 0, 0, 0, 0, 0, 713, 0, 702,
	704, 705, 706, 707, 0, 708, 0, 0, 709, 710,
	711, 712, 703, 714, 715, 0, 0, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 0, 725, 0, 0,
	726, 727, 728, 0, 0, 0, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 0, 737, 738, 739, 2362,
	0, 1521, 0, 740, 741, 0, 742, 743, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	327, 326, 328, 329, 330, 331, 0, 332, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 0,
	335, 336, 337, 0, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 0, 345, 0, 346, 0, 0, 0,
	347, 348, 349, 350, 351, 352, 353, 0, 0, 0,
	354, 0, 0, 0, 0, 355, 356, 0, 0, 0,
	0, 357, 358, 359, 360, 361, 362, 363, 364, 0,
	0, 366, 367, 368, 365, 369, 370, 0, 371, 0,
	372, 373, 374, 375, 376, 377, 378, 0, 379, 380,
	381, 0, 382, 383, 384, 0, 0, 0, 0, 0,
	0, 1523, 385, 386, 387, 388, 389, 0, 390, 392,
	0, 0, 0, 395, 397, 391, 393, 0, 396, 394,
	398, 399, 0, 400, 401, 402, 0, 0, 403, 404,
	405, 0, 406, 407, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 414, 415, 416, 418, 420, 417, 419,
	421, 422, 423, 424, 425, 0, 0, 426, 427, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 430, 0,
	0, 0, 0, 431, 0, 432, 433, 434, 0, 435,
	436, 0, 0, 437, 438, 439, 0, 0, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 0, 449, 0,
	0, 0, 450, 0, 451, 452, 453, 454, 455, 456,
	457, 0, 0, 0, 553, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 465, 0, 0, 0, 466, 467,
	468, 469, 0, 0, 0, 0, 0, 0, 470, 554,
	471, 0, 0, 0, 0, 0, 472, 473, 475, 0,
	0, 0, 474, 476, 477, 0, 478, 0, 0, 0,
	479, 480, 481, 482, 483, 484, 485, 0, 486, 488,
	487, 0, 490, 0, 489, 0, 491, 492, 0, 0,
	493, 494, 495, 496, 497, 498, 501, 0, 0, 499,
	500, 502, 503, 0, 504, 505, 507, 510, 506, 508,
	509, 511, 524, 525, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 527, 0, 526, 0,
	528, 529, 530, 531, 532, 540, 542, 543, 538, 539,
	541, 544, 545, 547, 535, 536, 537, 0, 546, 533,
	0, 534, 0, 0, 548, 549, 550, 551, 0, 0,
	552, 0, 555, 556, 0, 0, 557, 0, 558, 0,
	0, 560, 561, 562, 0, 0, 563, 564, 0, 0,
	565, 0, 0, 566, 567, 559, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 0, 586, 0,
	587, 588, 0, 589, 590, 591, 0, 592, 593, 594,
	595, 596, 597, 598, 599, 0, 600, 601, 603, 602,
	604, 0, 605, 0, 606, 607, 608, 0, 0, 0,
	0, 0, 609, 610, 612, 0, 613, 614, 615, 616,
	611, 617, 618, 619, 620, 621, 622, 0, 624, 625,
	623, 626, 627, 0, 628, 629, 630, 631, 632, 0,
	633, 0, 634, 635, 643, 644, 645, 636, 637, 639,
	646, 638, 647, 648, 649, 650, 652, 651, 0, 654,
	655, 653, 656, 657, 658, 1524, 659, 0, 660, 640,
	641, 661, 662, 0, 663, 664, 665, 666, 667, 668,
	669, 0, 0, 670, 0, 671, 672, 673, 674, 675,
	676, 678, 642, 679, 684, 685, 0, 680, 681, 682,
	683, 0, 687, 688, 689, 690, 0, 691, 692, 0,
	686, 677, 0, 693, 694, 695, 696, 697, 698, 0,
	699, 700, 0, 701, 0, 0, 0, 0, 0, 713,
	0, 702, 704, 705, 706, 707, 0, 708, 0, 0,
	709, 710, 711, 712, 703, 714, 715, 0, 0, 716,
	717, 718, 720, 722, 723, 719, 721, 724, 0, 725,
	0, 0, 726, 727, 728, 0, 0, 0, 0, 730,
	731, 729, 732, 733, 736, 734, 735, 0, 737, 738,
	739, 2322, 0, 1521, 0, 740, 741, 0, 742, 743,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 327, 326, 328, 329, 330, 331, 0, 332,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	334, 0, 335, 336, 337, 0, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 0, 345, 0, 346, 0,
	0, 0, 347, 348, 349, 350, 351, 352, 353, 0,
	0, 0, 354, 0, 0, 0, 0, 355, 356, 0,
	0, 0, 0, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 0, 366, 367, 368, 365, 369, 370, 0,
	371, 0, 372, 373, 374, 375, 376, 377, 378, 0,
	379, 380, 381, 0, 382, 383, 384, 0, 0, 0,
	0, 0, 0, 1523, 385, 386, 387, 388, 389, 0,
	390, 392, 0, 0, 0, 395, 397, 391, 393, 0,
	396, 394, 398, 399, 0, 400, 401, 402, 0, 0,
	403, 404, 405, 0, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 414, 415, 416, 418, 420,
	417, 419, 421, 422, 423, 424, 425, 0, 0, 426,
	427, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	430, 0, 0, 0, 0, 431, 0, 432, 433, 434,
	0, 435, 436, 0, 0, 437, 438, 439, 0, 0,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 0,
	449, 0, 0, 0, 450, 0, 451, 452, 453, 454,
	455, 456, 457, 0, 0, 0, 553, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 465, 0, 0, 0,
	466, 467, 468, 469, 0, 0, 0, 0, 0, 0,
	470, 554, 471, 0, 0, 0, 0, 0, 472, 473,
	475, 0, 0, 0, 474, 476, 477, 0, 478, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 0,
	486, 488, 487, 0, 490, 0, 489, 0, 491, 492,
	0, 0, 493, 494, 495, 496, 497, 498, 501, 0,
	0, 499, 500, 502, 503, 0, 504, 505, 507, 510,
	506, 508, 509, 511, 524, 525, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 527, 0,
	526, 0, 528, 529, 530, 531, 532, 540, 542, 543,
	538, 539, 541, 544, 545, 547, 535, 536, 537, 0,
	546, 533, 0, 534, 0, 0, 548, 549, 550, 551,
	0, 0, 552, 0, 555, 556, 0, 0, 557, 0,
	558, 0, 0, 560, 561, 562, 0, 0, 563, 564,
	0, 0, 565, 0, 0, 566, 567, 559, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 0,
	586, 0, 587, 588, 0, 589, 590, 591, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 0, 600, 601,
	603, 602, 604, 0, 605, 0, 606, 607, 608, 0,
	0, 0, 0, 0, 609, 610, 612, 0, 613, 614,
	615, 616, 611, 617, 618, 619, 620, 621, 622, 0,
	624, 625, 623, 626, 627, 0, 628, 629, 630, 631,
	632, 0, 633, 0, 634, 635, 643, 644, 645, 636,
	637, 639, 646, 638, 647, 648, 649, 650, 652, 651,
	0, 654, 655, 653, 656, 657, 658, 1524, 659, 0,
	660, 640, 641, 661, 662, 0, 663, 664, 665, 666,
	667, 668, 669, 0, 0, 670, 0, 671, 672, 673,
	674, 675, 676, 678, 642, 679, 684, 685, 0, 680,
	681, 682, 683, 0, 687, 688, 689, 690, 0, 691,
	692, 0, 686, 677, 0, 693, 694, 695, 696, 697,
	698, 0, 699, 700, 0, 701, 0, 0, 0, 0,
	0, 713, 0, 702, 704, 705, 706, 707, 0, 708,
	0, 0, 709, 710, 711, 712, 703, 714, 715, 0,
	0, 716, 717, 718, 720, 722, 723, 719, 721, 724,
	0, 725, 0, 0, 726, 727, 728, 0, 0, 0,
	0, 730, 731, 729, 732, 733, 736, 734, 735, 1521,
	737, 738, 739, 0, 0, 0, 0, 740, 741, 0,
	742, 743, 744, 0, 0, 0, 324, 325, 327, 326,
	328, 329, 330, 331, 0, 332, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 335, 336,
	337, 0, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 0, 345, 0, 346, 0, 0, 0, 347, 348,
	349, 350, 351, 352, 353, 0, 0, 0, 354, 0,
	0, 0, 0, 355, 356, 0, 0, 0, 0, 357,
	358, 359, 360, 361, 362, 363, 364, 0, 0, 366,
	367, 368, 365, 369, 370, 0, 371, 0, 372, 373,
	374, 375, 376, 377, 378, 0, 379, 380, 381, 0,
	382, 383, 384, 0, 0, 0, 0, 0, 0, 1523,
	385, 386, 387, 388, 389, 0, 390, 392, 0, 0,
	0, 395, 397, 391, 393, 0, 396, 394, 398, 399,
	0, 400, 401, 402, 0, 0, 403, 404, 405, 0,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 414, 415, 416, 418, 420, 417, 419, 421, 422,
	423, 424, 425, 0, 0, 426, 427, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 430, 0, 0, 0,
	0, 431, 0, 432, 433, 434, 0, 435, 436, 0,
	0, 437, 438, 439, 0, 0, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 0, 449, 0, 0, 0,
	450, 0, 451, 452, 453, 454, 455, 456, 457, 0,
	0, 0, 553, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 465, 0, 0, 0, 466, 467, 468, 469,
	0, 0, 0, 0, 0, 0, 470, 554, 471, 0,
	0, 0, 0, 0, 472, 473, 475, 0, 0, 0,
	474, 476, 477, 0, 478, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 0, 486, 488, 487, 0,
	490, 0, 489, 0, 491, 492, 0, 0, 493, 494,
	495, 496, 497, 498, 501, 0, 0, 499, 500, 502,
	503, 0, 504, 505, 507, 510, 506, 508, 509, 511,
	524, 525, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 527, 0, 526, 0, 528, 529,
	530, 531, 532, 540, 542, 543, 538, 539, 541, 544,
	545, 547, 535, 536, 537, 0, 546, 533, 0, 534,
	0, 0, 548, 549, 550, 551, 0, 0, 552, 0,
	555, 556, 0, 0, 557, 0, 558, 0, 0, 560,
	561, 562, 0, 0, 563, 564, 0, 0, 565, 0,
	0, 566, 567, 559, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 0, 586, 0, 587, 588,
	0, 589, 590, 591, 0, 592, 593, 594, 595, 596,
	597, 598, 599, 0, 600, 601, 603, 602, 604, 0,
	605, 0, 606, 607, 608, 0, 0, 0, 0, 0,
	609, 610, 612, 0, 613, 614, 615, 616, 611, 617,
	618, 619, 620, 621, 622, 0, 624, 625, 623, 626,
	627, 0, 628, 629, 630, 631, 632, 0, 633, 0,
	634, 635, 643, 644, 645, 636, 637, 639, 646, 638,
	647, 648, 649, 650, 652, 651, 0, 654, 655, 653,
	656, 657, 658, 1524, 659, 0, 660, 640, 641, 661,
	662, 0, 663, 664, 665, 666, 667, 668, 669, 0,
	0, 670, 0, 671, 672, 673, 674, 675, 676, 678,
	642, 679, 684, 685, 0, 680, 681, 682, 683, 0,
	687, 688, 689, 690, 0, 691, 692, 0, 686, 677,
	0, 693, 694, 695, 696, 697, 698, 0, 699, 700,
	0, 701, 0, 0, 0, 0, 0, 713, 0, 702,
	704, 705, 706, 707, 0, 708, 0, 0, 709, 710,
	711, 712, 703, 714, 715, 0, 0, 716, 717, 718,
	720, 722, 723, 719, 721, 724, 0, 725, 0, 0,
	726, 727, 728, 0, 0, 0, 0, 730, 731, 729,
	732, 733, 736, 734, 735, 0, 737, 738, 739, 0,
	0, 0, 0, 740, 741, 0, 742, 743, 744, 2044,
	2045, 0, 2077, 2078, 2079, 2088, 2089, 2090, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2081, 2075, 0, 0, 0, 0, 0, 0,
	0, 2047, 0, 0, 0, 0, 0, 0, 0, 0,
	2044, 2045, 2094, 2077, 2078, 2079, 2088, 2089, 2090, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2100, 0, 0, 2081, 2075, 0, 0, 0, 0, 2046,
	0, 0, 2047, 0, 0, 0, 0, 0, 0, 0,
	2066, 0, 0, 2094, 0, 0, 0, 0, 0, 0,
	2063, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2100, 0, 0, 0, 0, 0, 0, 0, 0,
	2046, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2069, 2070, 2071, 2072, 0, 0, 0,
	0, 0, 0, 2052, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2069, 2070, 2071, 2072, 0, 0,
	0, 0, 0, 0, 2052, 0, 2085, 0, 0, 0,
	2095, 0, 0, 0, 0, 0, 0, 2074, 2076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2091, 0, 2092, 0, 0, 0, 0, 2085, 0, 2061,
	2062, 2095, 0, 0, 0, 0, 0, 0, 2074, 2076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2091, 0, 2092, 2067, 0, 0, 0, 0, 0,
	2061, 2062, 0, 0, 0, 2044, 2045, 0, 2077, 2078,
	2079, 2088, 2089, 2090, 0, 0, 0, 0, 0, 0,
	2083, 0, 0, 0, 0, 0, 0, 0, 2081, 2075,
	0, 0, 0, 0, 0, 2067, 0, 2047, 0, 0,
	0, 0, 0, 0, 2093, 0, 0, 0, 2094, 0,
	2044, 2045, 0, 2077, 2078, 2079, 2088, 2089, 2090, 0,
	0, 0, 0, 0, 0, 2082, 2100, 0, 0, 0,
	0, 0, 0, 2081, 2075, 2046, 2097, 0, 0, 0,
	0, 0, 2047, 0, 0, 2093, 2066, 0, 0, 0,
	0, 0, 0, 2094, 0, 0, 2063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2082, 0, 0, 0,
	0, 2100, 0, 0, 0, 0, 0, 2097, 0, 0,
	2046, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2066, 0, 0, 0, 0, 2073, 0, 0, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2068, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2073, 0, 2069,
	2070, 2071, 2072, 0, 0, 0, 0, 0, 0, 2052,
	0, 0, 0, 0, 2086, 0, 0, 0, 0, 0,
	0, 0, 0, 2068, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2069, 2070, 2071, 2072, 0, 0,
	2099, 0, 2085, 0, 2052, 2086, 2095, 0, 0, 0,
	0, 0, 0, 2074, 2076, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2091, 0, 2092, 0,
	0, 2099, 0, 0, 0, 2061, 2062, 2085, 0, 0,
	0, 2095, 0, 0, 0, 0, 0, 0, 2074, 2076,
	0, 0, 0, 0, 0, 2083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 2091, 2084, 2092, 0, 0, 0, 0, 0, 0,
	2061, 2062, 0, 0, 2058, 2059, 2065, 2087, 2064, 2060,
	0, 2057, 2055, 2056, 2048, 2049, 2050, 2051, 2053, 2054,
	2083, 0, 0, 0, 0, 5317, 0, 0, 0, 0,
	0, 0, 0, 2084, 0, 2067, 0, 0, 0, 0,
	2093, 0, 0, 0, 0, 2058, 2059, 2065, 2087, 2064,
	2060, 0, 2057, 2055, 2056, 2048, 2049, 2050, 2051, 2053,
	2054, 2082, 0, 0, 0, 0, 5263, 0, 0, 0,
	0, 0, 2097, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2093, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2082, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2097, 0, 0,
	0, 2044, 2045, 0, 2077, 2078, 2079, 2088, 2089, 2090,
	0, 0, 2073, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2081, 2075, 0, 0, 0, 0,
	0, 0, 0, 2047, 0, 0, 0, 0, 2068, 0,
	0, 0, 2044, 2045, 2094, 2077, 2078, 2079, 2088, 2089,
	2090, 0, 0, 0, 0, 0, 0, 2073, 0, 0,
	0, 0, 2100, 0, 0, 2081, 2075, 0, 0, 0,
	2086, 2046, 0, 0, 2047, 0, 0, 0, 0, 0,
	0, 0, 2066, 2068, 0, 2094, 0, 0, 0, 0,
	0, 0, 2063, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2100, 0, 0, 2099, 0, 0, 0,
	0, 0, 2046, 0, 0, 2086, 0, 0, 0, 0,
	0, 0, 0, 2066, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2063, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2099, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2069, 2070, 2071, 2072, 0,
	0, 0, 0, 0, 0, 2052, 0, 0, 2084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2058, 2059, 2065, 2087, 2064, 2060, 0, 2057, 2055, 2056,
	2048, 2049, 2050, 2051, 2053, 2054, 2069, 2070, 2071, 2072,
	0, 5262, 0, 0, 0, 0, 2052, 0, 2085, 0,
	0, 0, 2095, 2084, 0, 0, 0, 0, 0, 2074,
	2076, 0, 0, 0, 0, 2058, 2059, 2065, 2087, 2064,
	2060, 0, 2057, 2055, 2056, 2048, 2049, 2050, 2051, 2053,
	2054, 0, 2091, 0, 2092, 0, 5057, 0, 0, 2085,
	0, 2061, 2062, 2095, 0, 0, 0, 0, 0, 0,
	2074, 2076, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2091, 0, 2092, 2067, 0, 0, 0,
	0, 0, 2061, 2062, 0, 0, 0, 2044, 2045, 0,
	2077, 2078, 2079, 2088, 2089, 2090, 0, 0, 0, 0,
	0, 0, 2083, 0, 0, 0, 0, 0, 0, 0,
	2081, 2075, 0, 0, 0, 0, 0, 2067, 0, 2047,
	0, 0, 0, 0, 0, 0, 2093, 0, 0, 0,
	2094, 0, 2044, 2045, 0, 2077, 2078, 2079, 2088, 2089,
	2090, 0, 0, 0, 0, 0, 0, 2082, 2100, 0,
	0, 0, 0, 0, 0, 2081, 2075, 2046, 2097, 0,
	0, 0, 0, 0, 2047, 0, 0, 2093, 2066, 0,
	0, 0, 0, 0, 0, 2094, 0, 0, 2063, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2082, 0,
	0, 0, 0, 2100, 0, 0, 0, 0, 0, 2097,
	0, 0, 2046, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2066, 0, 0, 0, 0, 2073, 0,
	0, 0, 0, 2063, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2068, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2073,
	0, 2069, 2070, 2071, 2072, 0, 0, 0, 0, 0,
	0, 2052, 0, 0, 0, 0, 2086, 0, 0, 0,
	0, 0, 0, 0, 0, 2068, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2069, 2070, 2071, 2072,
	0, 0, 2099, 0, 2085, 0, 2052, 2086, 2095, 0,
	0, 0, 0, 0, 0, 2074, 2076, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2091, 0,
	2092, 0, 0, 2099, 0, 0, 0, 2061, 2062, 2085,
	0, 0, 0, 2095, 0, 0, 0, 0, 0, 0,
	2074, 2076, 0, 0, 0, 0, 0, 2083, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2067, 2091, 2084, 2092, 0, 0, 0, 0,
	0, 0, 2061, 2062, 0, 0, 2058, 2059, 2065, 2087,
	2064, 2060, 0, 2057, 2055, 2056, 2048, 2049, 2050, 2051,
	2053, 2054, 2083, 0, 0, 0, 0, 4862, 0, 0,
	0, 0, 0, 0, 0, 2084, 0, 2067, 0, 0,
	0, 0, 2093, 0, 0, 0, 0, 2058, 2059, 2065,
	2087, 2064, 2060, 0, 2057, 2055, 2056, 2048, 2049, 2050,
	2051, 2053, 2054, 2082, 0, 0, 0, 0, 4761, 0,
	0, 0, 0, 0, 2097, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2082, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2097,
	0, 0, 0, 2044, 2045, 0, 2077, 2078, 2079, 2088,
	2089, 2090, 0, 0, 2073, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2081, 2075, 0, 0,
	0, 0, 0, 0, 0, 2047, 0, 0, 0, 0,
	2068, 0, 0, 0, 2044, 2045, 2094, 2077, 2078, 2079,
	2088, 2089, 2090, 0, 0, 0, 0, 0, 0, 2073,
	0, 0, 0, 0, 2100, 0, 0, 2081, 2075, 0,
	0, 0, 2086, 2046, 0, 0, 2047, 0, 0, 0,
	0, 0, 0, 0, 2066, 2068, 0, 2094, 0, 0,
	0, 0, 0, 0, 2063, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2100, 0, 0, 2099, 0,
	0, 0, 0, 0, 2046, 0, 0, 2086, 0, 0,
	0, 0, 0, 0, 0, 2066, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2099, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2069, 2070, 2071,
	2072, 0, 0, 0, 0, 0, 0, 2052, 0, 0,
	2084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2058, 2059, 2065, 2087, 2064, 2060, 0, 2057,
	2055, 2056, 2048, 2049, 2050, 2051, 2053, 2054, 2069, 2070,
	2071, 2072, 0, 4760, 0, 0, 0, 0, 2052, 0,
	2085, 0, 0, 0, 2095, 2084, 0, 0, 0, 0,
	0, 2074, 2076, 0, 0, 0, 0, 2058, 2059, 2065,
	2087, 2064, 2060, 0, 2057, 2055, 2056, 2048, 2049, 2050,
	2051, 2053, 2054, 0, 2091, 0, 2092, 0, 4759, 0,
	0, 2085, 0, 2061, 2062, 2095, 0, 0, 0, 0,
	0, 0, 2074, 2076, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2083, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2091, 0, 2092, 2067, 0,
	0, 0, 0, 0, 2061, 2062, 0, 0, 0, 2044,
	2045, 0, 2077, 2078, 2079, 2088, 2089, 2090, 0, 0,
	0, 0, 0, 0, 2083, 0, 0, 0, 0, 0,
	0, 0, 2081, 2075, 0, 0, 0, 0, 0, 2067,
	0, 2047, 0, 0, 0, 0, 0, 0, 2093, 0,
	0, 0, 2094, 0, 2044, 2045, 0, 2077, 2078, 2079,
	2088, 2089, 2090, 0, 0, 0, 0, 0, 0, 2082,
	2100, 0, 0, 0, 0, 0, 0, 2081, 2075, 2046,
	2097, 0, 0, 0, 0, 0, 2047, 0, 0, 2093,
	2066, 0, 0, 0, 0, 0, 0, 2094, 0, 0,
	2063, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2082, 0, 0, 0, 0, 2100, 0, 0, 0, 0,
	0, 2097, 0, 0, 2046, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2066, 0, 0, 0, 0,
	2073, 0, 0, 0, 0, 2063, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2068, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2073, 0, 2069, 2070, 2071, 2072, 0, 0, 0,
	0, 0, 0, 2052, 0, 0, 0, 0, 2086, 0,
	0, 0, 0, 0, 0, 0, 0, 2068, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2069, 2070,
	2071, 2072, 0, 0, 2099, 0, 2085, 0, 2052, 2086,
	2095, 0, 0, 0, 0, 0, 0, 2074, 2076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2091, 0, 2092, 0, 0, 2099, 0, 0, 0, 2061,
	2062, 2085, 0, 0, 0, 2095, 0, 0, 0, 0,
	0, 0, 2074, 2076, 0, 0, 0, 0, 0, 2083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2067, 2091, 2084, 2092, 0, 0,
	0, 0, 0, 0, 2061, 2062, 0, 0, 2058, 2059,
	2065, 2087, 2064, 2060, 0, 2057, 2055, 2056, 2048, 2049,
	2050, 2051, 2053, 2054, 2083, 0, 0, 0, 0, 4337,
	0, 0, 0, 0, 0, 0, 0, 2084, 0, 2067,
	0, 0, 0, 0, 2093, 0, 0, 0, 0, 2058,
	2059, 2065, 2087, 2064, 2060, 0, 2057, 2055, 2056, 2048,
	2049, 2050, 2051, 2053, 2054, 2082, 0, 0, 0, 0,
	3746, 0, 0, 0, 0, 0, 2097, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2093,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2082, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2097, 0, 0, 0, 2044, 2045, 0, 2077, 2078,
	2079, 2088, 2089, 2090, 0, 0, 2073, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2081, 2075,
	0, 0, 0, 0, 0, 0, 0, 2047, 0, 0,
	0, 0, 2068, 0, 0, 0, 2044, 2045, 2094, 2077,
	2078, 2079, 2088, 2089, 2090, 0, 0, 0, 0, 0,
	0, 2073, 0, 0, 0, 0, 2100, 0, 0, 2081,
	2075, 0, 0, 0, 2086, 2046, 0, 0, 2047, 0,
	0, 0, 0, 0, 0, 0, 2066, 2068, 0, 2094,
	0, 0, 0, 0, 0, 0, 2063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2100, 0, 0,
	2099, 0, 0, 0, 0, 0, 2046, 0, 0, 2086,
	0, 0, 0, 0, 0, 0, 0, 2066, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2063, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2099, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2069,
	2070, 2071, 2072, 0, 0, 0, 0, 0, 0, 2052,
	0, 0, 2084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2058, 2059, 2065, 2087, 2064, 2060,
	0, 2057, 2055, 2056, 2048, 2049, 2050, 2051, 2053, 2054,
	2069, 2070, 2071, 2072, 0, 3745, 0, 0, 0, 0,
	2052, 0, 2085, 0, 0, 0, 2095, 2084, 0, 0,
	0, 0, 0, 2074, 2076, 0, 0, 0, 0, 2058,
	2059, 2065, 2087, 2064, 2060, 0, 2057, 2055, 2056, 2048,
	2049, 2050, 2051, 2053, 2054, 0, 2091, 0, 2092, 0,
	3744, 0, 0, 2085, 0, 2061, 2062, 2095, 0, 0,
	0, 0, 0, 0, 2074, 2076, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2091, 0, 2092,
	2067, 0, 0, 0, 0, 0, 2061, 2062, 0, 0,
	0, 2044, 2045, 0, 2077, 2078, 2079, 2088, 2089, 2090,
	0, 0, 0, 0, 0, 2541, 2083, 0, 0, 0,
	0, 0, 0, 0, 2081, 2075, 0, 0, 0, 0,
	0, 2067, 0, 2047, 0, 0, 0, 0, 0, 0,
	2093, 0, 0, 0, 2094, 0, 2044, 2045, 0, 2077,
	2078, 2079, 2088, 2089, 2090, 0, 0, 0, 0, 0,
	0, 2082, 2100, 0, 0, 0, 0, 0, 0, 2081,
	2075, 2046, 2097, 0, 0, 0, 0, 0, 2047, 0,
	0, 2093, 2066, 0, 0, 0, 0, 0, 0, 2094,
	0, 0, 2063, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2082, 0, 0, 0, 0, 2100, 0, 0,
	0, 0, 0, 2097, 0, 0, 2046, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2066, 0, 0,
	0, 2441, 2073, 0, 0, 0, 0, 2063, 0, 0,
	0, 0, 0, 2542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2068, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2073, 0, 2069, 2070, 2071, 2072, 0,
	0, 0, 0, 0, 0, 2052, 0, 0, 0, 0,
	2086, 0, 0, 0, 0, 0, 0, 0, 0, 2068,
	0, 0, 0, 0, 0, 0, 0, 2439, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2069, 2070, 2071, 2072, 0, 0, 2099, 0, 2085, 0,
	2052, 2086, 2095, 0, 0, 0, 0, 0, 0, 2074,
	2076, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2091, 0, 2092, 0, 0, 2099, 0, 0,
	0, 2061, 2062, 2085, 0, 0, 0, 2095, 0, 0,
	0, 0, 0, 0, 2074, 2076, 0, 0, 0, 0,
	0, 2083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2067, 2091, 2084, 2092,
	0, 0, 0, 0, 0, 0, 2061, 2062, 0, 0,
	2058, 2059, 2065, 2087, 2064, 2060, 0, 2057, 2055, 2056,
	2048, 2049, 2050, 2051, 2053, 2054, 2083, 0, 0, 0,
	0, 3743, 0, 0, 0, 0, 0, 0, 0, 2084,
	0, 2067, 0, 0, 0, 0, 2093, 0, 0, 0,
	0, 2058, 2059, 2065, 2087, 2064, 2060, 0, 2057, 2055,
	2056, 2048, 2049, 2050, 2051, 2053, 2054, 2082, 0, 0,
	3708, 0, 0, 0, 0, 0, 0, 0, 2097, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2093, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2097, 0, 0, 0, 2044, 2045, 0,
	2077, 2078, 2079, 2088, 2089, 2090, 0, 0, 2073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2081, 2075, 0, 0, 0, 0, 0, 0, 0, 2047,
	0, 0, 0, 0, 2068, 0, 0, 0, 0, 0,
	2094, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2440, 2073, 0, 0, 0, 0, 2100, 2543,
	0, 0, 0, 0, 0, 0, 2086, 2046, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2066, 2068,
	0, 0, 0, 0, 0, 0, 0, 0, 2063, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2099, 0, 0, 0, 0, 0, 0, 0,
	0, 2086, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2099, 2544, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2438, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2069, 2070, 2071, 2072, 0, 0, 0, 0, 0,
	0, 2052, 5588, 0, 2084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2058, 2059, 2065, 2087,
	2064, 2060, 0, 2057, 2055, 2056, 2048, 2049, 2050, 2051,
	2053, 2054, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2085, 0, 0, 0, 2095, 2084,
	0, 0, 0, 0, 0, 2074, 2076, 0, 0, 0,
	0, 2058, 2059, 2065, 2087, 2064, 2060, 0, 2057, 2055,
	2056, 2048, 2049, 2050, 2051, 2053, 2054, 0, 2091, 0,
	2092, 0, 0, 0, 0, 0, 0, 2061, 2062, 0,
	0, 0, 2044, 2045, 0, 2077, 2078, 2079, 2088, 2089,
	2090, 0, 0, 0, 0, 0, 0, 2083, 0, 0,
	0, 0, 0, 0, 0, 2081, 2075, 0, 0, 0,
	0, 0, 2067, 0, 2047, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2094, 0, 2044, 2045, 0,
	2077, 2078, 2079, 2088, 2089, 2090, 0, 0, 0, 0,
	0, 0, 0, 2100, 0, 0, 0, 0, 0, 0,
	2081, 2075, 2046, 0, 0, 0, 3678, 0, 0, 2047,
	0, 0, 2093, 2066, 0, 0, 0, 0, 0, 0,
	2094, 0, 0, 2063, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2082, 0, 0, 0, 0, 2100, 0,
	0, 0, 0, 0, 2097, 0, 0, 2046, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2066, 0,
	0, 0, 0, 0, 0, 0, 0, 5587, 2063, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2073, 0, 2069, 2070, 2071, 2072,
	0, 3679, 0, 0, 0, 0, 2052, 0, 3811, 0,
	0, 0, 0, 0, 0, 3810, 0, 0, 0, 0,
	2068, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2069, 2070, 2071, 2072, 0, 0, 0, 0, 2085,
	0, 2052, 2086, 2095, 0, 0, 0, 0, 0, 0,
	2074, 2076, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2091, 0, 2092, 0, 0, 2099, 0,
	0, 0, 2061, 2062, 2085, 0, 0, 0, 2095, 0,
	0, 0, 0, 0, 0, 2074, 2076, 0, 0, 0,
	0, 0, 2083, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2067, 2091, 0,
	2092, 0, 0, 0, 0, 0, 0, 2061, 2062, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2083, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 2067, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 2058, 2059, 2065, 2087, 2064, 2060, 0, 2057,
	2055, 2056, 2048, 2049, 2050, 2051, 2053, 2054, 2082, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2097,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2093, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2097, 0, 0, 0, 2044, 2045,
	0, 2077, 2078, 2079, 2088, 2089, 2090, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2081, 2075, 0, 0, 0, 0, 0, 0, 0,
	2047, 0, 0, 0, 0, 2068, 0, 0, 0, 2044,
	2045, 2094, 2077, 2078, 2079, 2088, 2089, 2090, 0, 0,
	0, 0, 0, 0, 2073, 0, 0, 0, 0, 2100,
	0, 0, 2081, 2075, 0, 0, 0, 2086, 2046, 0,
	0, 2047, 0, 0, 0, 0, 0, 0, 0, 2066,
	2068, 0, 2094, 0, 0, 0, 0, 0, 0, 2063,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2100, 0, 0, 2099, 0, 0, 0, 0, 0, 2046,
	0, 0, 2086, 0, 0, 0, 0, 0, 0, 0,
	2066, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2063, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2099, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2069, 2070, 2071, 2072, 0, 0, 0, 0,
	0, 0, 2052, 0, 5163, 2084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2058, 2059, 2065,
	2087, 2064, 2060, 0, 2057, 2055, 2056, 2048, 2049, 2050,
	2051, 2053, 2054, 2069, 2070, 2071, 2072, 0, 0, 0,
	0, 0, 0, 2052, 0, 2085, 0, 0, 0, 2095,
	2084, 0, 0, 0, 0, 0, 2074, 2076, 0, 0,
	0, 0, 2058, 2059, 2065, 2087, 2064, 2060, 0, 2057,
	2055, 2056, 2048, 2049, 2050, 2051, 2053, 2054, 0, 2091,
	0, 2092, 0, 0, 0, 0, 2085, 0, 2061, 2062,
	2095, 0, 0, 0, 0, 0, 0, 2074, 2076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2091, 0, 2092, 2067, 0, 0, 0, 0, 0, 2061,
	2062, 0, 0, 0, 2044, 2045, 0, 2077, 2078, 2079,
	2088, 2089, 2090, 0, 0, 0, 0, 0, 0, 2083,
	0, 0, 0, 0, 0, 0, 0, 2081, 2075, 0,
	0, 0, 0, 0, 2067, 0, 2047, 0, 0, 0,
	0, 0, 0, 2093, 0, 0, 0, 2094, 0, 2044,
	2045, 0, 2077, 2078, 2079, 2088, 2089, 2090, 0, 0,
	0, 0, 0, 0, 2082, 2100, 0, 0, 0, 0,
	0, 0, 2081, 2075, 2046, 2097, 0, 0, 0, 0,
	0, 2047, 0, 0, 2093, 2066, 0, 0, 0, 0,
	0, 0, 2094, 0, 0, 2063, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2082, 1243, 0, 0, 0,
	2100, 0, 0, 0, 0, 0, 2097, 0, 0, 2046,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2066, 0, 0, 0, 0, 2073, 0, 0, 0, 0,
	2063, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2068, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2073, 0, 2069, 2070,
	2071, 2072, 0, 0, 0, 0, 0, 0, 2052, 0,
	0, 0, 0, 2086, 0, 0, 0, 0, 0, 0,
	0, 0, 2068, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2069, 2070, 2071, 2072, 0, 0, 2099,
	0, 2085, 0, 2052, 2086, 2095, 0, 0, 0, 0,
	0, 0, 2074, 2076, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2091, 0, 2092, 0, 0,
	2099, 0, 0, 0, 2061, 2062, 2085, 0, 0, 0,
	2095, 0, 0, 0, 0, 0, 0, 2074, 2076, 0,
	0, 0, 0, 0, 2083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2067,
	2091, 2084, 2092, 0, 0, 0, 0, 0, 0, 2061,
	2062, 0, 0, 2058, 2059, 2065, 2087, 2064, 2060, 0,
	2057, 2055, 2056, 2048, 2049, 2050, 2051, 2053, 2054, 2083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2084, 0, 2067, 0, 0, 0, 0, 2093,
	0, 0, 0, 0, 2058, 2059, 2065, 2087, 2064, 2060,
	0, 2057, 2055, 2056, 2048, 2049, 2050, 2051, 2053, 2054,
	2082, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2097, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2093, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2082, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2097, 0, 0, 0,
	2044, 2045, 0, 2077, 2078, 2079, 2088, 2089, 2090, 0,
	0, 2073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2081, 2075, 0, 0, 0, 0, 0,
	0, 0, 2047, 0, 0, 0, 0, 2068, 0, 0,
	0, 2044, 2045, 2094, 2077, 2078, 2079, 2088, 2089, 2090,
	0, 0, 0, 0, 0, 0, 2073, 0, 0, 0,
	0, 2100, 0, 0, 2081, 2075, 0, 0, 0, 2086,
	2046, 0, 0, 2047, 0, 0, 0, 0, 0, 0,
	0, 2066, 2068, 0, 2094, 0, 0, 0, 0, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2100, 0, 0, 2099, 0, 0, 0, 0,
	0, 2046, 0, 0, 2086, 0, 0, 0, 0, 0,
	0, 0, 2066, 0, 4914, 0, 0, 0, 0, 0,
	0, 0, 2063, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2099, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4559,
	0, 0, 0, 0, 2069, 2070, 2071, 2072, 0, 0,
	0, 0, 0, 0, 2052, 0, 4558, 2084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2058,
	2059, 2065, 2087, 2064, 2060, 0, 2057, 2055, 2056, 2048,
	2049, 2050, 2051, 2053, 2054, 2069, 2070, 2071, 2072, 0,
	0, 0, 0, 0, 0, 2052, 0, 2085, 0, 0,
	0, 2095, 2084, 0, 0, 0, 0, 0, 2074, 2076,
	0, 0, 0, 0, 2058, 2059, 2065, 2087, 2064, 2060,
	0, 2057, 2055, 2056, 2048, 2049, 2050, 2051, 2053, 2054,
	0, 2091, 0, 2092, 0, 0, 0, 0, 2085, 0,
	2061, 2062, 2095, 0, 0, 0, 0, 0, 0, 2074,
	2076, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2091, 0, 2092, 2067, 0, 0, 0, 0,
	0, 2061, 2062, 0, 0, 0, 2044, 2045, 0, 2077,
	2078, 2079, 2088, 2089, 2090, 0, 0, 0, 0, 0,
	0, 2083, 0, 0, 0, 0, 0, 0, 0, 2081,
	2075, 0, 0, 0, 0, 0, 2067, 0, 2047, 0,
	0, 0, 0, 0, 0, 2093, 0, 0, 0, 2094,
	0, 2044, 2045, 0, 2077, 2078, 2079, 2088, 2089, 2090,
	0, 0, 0, 0, 0, 0, 2082, 2100, 0, 0,
	0, 0, 0, 0, 2081, 2075, 2046, 2097, 0, 3812,
	0, 0, 0, 2047, 0, 0, 2093, 2066, 0, 0,
	0, 0, 0, 0, 2094, 0, 0, 2063, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2082, 0, 0,
	0, 0, 2100, 0, 0, 0, 0, 0, 2097, 0,
	0, 2046, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2066, 0, 0, 0, 0, 2073, 0, 0,
	0, 0, 2063, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2068, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2073, 0,
	2069, 2070, 2071, 2072, 0, 0, 0, 0, 0, 0,
	2052, 0, 0, 0, 0, 2086, 0, 0, 0, 3817,
	0, 0, 0, 0, 2068, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2069, 2070, 2071, 2072, 0,
	0, 2099, 0, 2085, 0, 2052, 2086, 2095, 0, 0,
	0, 0, 0, 0, 2074, 2076, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2091, 0, 2092,
	0, 0, 2099, 0, 0, 0, 2061, 2062, 2085, 0,
	0, 0, 2095, 0, 0, 4318, 0, 0, 0, 2074,
	2076, 0, 0, 0, 0, 0, 2083, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2067, 2091, 2084, 2092, 0, 0, 0, 0, 0,
	0, 2061, 2062, 0, 0, 2058, 2059, 2065, 2087, 2064,
	2060, 0, 2057, 2055, 2056, 2048, 2049, 2050, 2051, 2053,
	2054, 2083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2084, 0, 2067, 0, 0, 0,
	0, 2093, 0, 0, 0, 0, 2058, 2059, 2065, 2087,
	2064, 2060, 0, 2057, 2055, 2056, 2048, 2049, 2050, 2051,
	2053, 2054, 2082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2097, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2093, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2082, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2097, 0,
	0, 0, 2044, 2045, 0, 2077, 2078, 2079, 2088, 2089,
	2090, 0, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2081, 2075, 0, 0, 0,
	0, 0, 0, 0, 2047, 0, 0, 0, 0, 2068,
	0, 0, 0, 0, 0, 2094, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2073, 0,
	0, 0, 0, 2100, 0, 0, 0, 0, 0, 0,
	0, 2086, 2046, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2066, 2068, 0, 0, 0, 0, 0,
	0, 0, 0, 2063, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2099, 0, 0,
	0, 0, 0, 0, 0, 0, 2086, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2099, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2069, 2070, 2071, 2072,
	0, 0, 0, 0, 0, 0, 2052, 0, 0, 2084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2058, 2059, 2065, 2087, 2064, 2060, 0, 2057, 2055,
	2056, 2048, 2049, 2050, 2051, 2053, 2054, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2085,
	0, 0, 0, 2095, 2084, 0, 0, 0, 0, 0,
	2074, 2076, 0, 0, 0, 0, 2058, 2059, 2065, 2087,
	2064, 2060, 0, 2057, 2055, 2056, 2048, 2049, 2050, 2051,
	2053, 2054, 0, 2091, 0, 2092, 0, 0, 0, 0,
	0, 0, 2061, 2062, 0, 0, 0, 2044, 2045, 0,
	2077, 2078, 2079, 2088, 2089, 2090, 0, 0, 0, 0,
	0, 0, 2083, 0, 0, 0, 0, 0, 0, 0,
	2081, 2075, 0, 0, 0, 3747, 0, 2067, 0, 2047,
	0, 0, 0, 0, 0, 0, 0, 0, 2044, 2045,
	2094, 2077, 2078, 2079, 2088, 2089, 2090, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2100, 0,
	0, 2081, 2075, 0, 0, 0, 0, 2046, 0, 0,
	2047, 0, 0, 0, 0, 0, 0, 2093, 2066, 0,
	0, 2094, 0, 0, 0, 0, 0, 0, 2063, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2082, 2100,
	0, 0, 0, 0, 0, 0, 0, 0, 2046, 2097,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2066,
	3777, 0, 0, 0, 0, 0, 0, 0, 0, 2063,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2073,
	0, 2069, 2070, 2071, 2072, 0, 0, 0, 0, 0,
	0, 2052, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2068, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2069, 2070, 2071, 2072, 0, 0, 0, 0,
	0, 0, 2052, 0, 2085, 0, 0, 2086, 2095, 0,
	0, 0, 0, 0, 0, 2074, 2076, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2091, 0,
	2092, 0, 0, 2099, 0, 2085, 0, 2061, 2062, 2095,
	0, 0, 0, 0, 0, 0, 2074, 2076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2083, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2091,
	0, 2092, 2067, 0, 0, 0, 0, 0, 2061, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 0, 2084, 0, 0, 0, 0,
	0, 0, 2093, 0, 0, 0, 0, 2058, 2059, 2065,
	2087, 2064, 2060, 0, 2057, 2055, 2056, 2048, 2049, 2050,
	2051, 2053, 2054, 2082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2097, 0, 0, 0, 0, 0,
	0, 0, 0, 2093, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2082, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2097, 0, 0, 2044, 2045,
	0, 2077, 2078, 2079, 2088, 2089, 2090, 0, 0, 0,
	0, 0, 0, 0, 2073, 0, 0, 0, 0, 0,
	0, 2081, 2075, 0, 0, 0, 0, 0, 0, 0,
	2047, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2068, 2094, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2073, 0, 0, 0, 2100,
	0, 0, 0, 0, 0, 0, 0, 0, 2046, 0,
	0, 0, 2086, 0, 0, 0, 0, 0, 0, 2066,
	0, 2068, 0, 0, 0, 0, 0, 0, 0, 2063,
	0, 0, 0, 0, 0, 0, 0, 0, 2044, 2045,
	0, 2077, 2078, 2079, 2088, 2089, 2090, 0, 2099, 0,
	0, 0, 0, 2086, 0, 0, 0, 0, 0, 0,
	0, 2081, 2075, 0, 0, 0, 0, 0, 0, 0,
	2047, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2094, 0, 0, 0, 0, 0, 0, 0, 2099,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2100,
	0, 0, 0, 0, 0, 0, 0, 0, 2046, 0,
	0, 0, 2069, 2070, 2071, 2072, 0, 0, 0, 2066,
	0, 0, 2052, 0, 0, 0, 0, 0, 0, 2063,
	2084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2058, 2059, 2065, 2087, 2064, 2060, 0, 2057,
	2055, 2056, 2048, 2049, 2050, 2051, 2053, 2054, 0, 0,
	0, 0, 0, 0, 2655, 2085, 0, 0, 0, 2095,
	0, 2084, 0, 0, 0, 0, 2074, 2076, 0, 0,
	0, 0, 0, 2058, 2059, 2065, 2087, 2064, 2060, 0,
	2057, 2055, 2056, 2048, 2049, 2050, 2051, 2053, 2054, 2091,
	0, 2092, 0, 0, 0, 0, 0, 0, 2061, 2062,
	0, 0, 2069, 2070, 2071, 2072, 0, 0, 0, 0,
	0, 0, 2052, 0, 0, 0, 0, 0, 2083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2085, 0, 0, 0, 2095,
	0, 0, 0, 0, 0, 0, 2074, 2076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2093, 0, 0, 0, 0, 0, 2091,
	0, 2092, 0, 0, 0, 0, 0, 0, 2061, 2062,
	0, 0, 0, 0, 2082, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2097, 0, 0, 2083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2044, 2045, 0, 2077, 2078, 2079, 2088,
	2089, 2090, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2073, 0, 2075, 0, 0,
	0, 0, 0, 2093, 0, 2047, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2094, 0, 0, 0,
	0, 2068, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2100, 2097, 0, 0, 0, 0,
	0, 0, 0, 2046, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2086, 2066, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2063, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2099,
	0, 0, 0, 0, 0, 2073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2068, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2069, 2070, 2071,
	2072, 0, 0, 2086, 0, 0, 0, 2052, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2058, 2059, 2065, 2087, 2064, 2060, 2099,
	2057, 2055, 2056, 2048, 2049, 2050, 2051, 2053, 2054, 0,
	2085, 0, 0, 0, 2095, 0, 0, 0, 0, 0,
	0, 2074, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2091, 0, 2092, 0, 0, 0,
	0, 0, 0, 2061, 2062, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1118, 0, 1172, 0, 0, 0,
	0, 0, 0, 2083, 0, 0, 0, 0, 0, 0,
	0, 2084, 0, 0, 0, 0, 0, 0, 2067, 0,
	0, 1126, 0, 2058, 2059, 2065, 2087, 2064, 2060, 0,
	2057, 2055, 2056, 2048, 2049, 2050, 2051, 2053, 2054, 1142,
	0, 1124, 1123, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1144, 0, 0, 2093, 0,
	0, 1125, 0, 0, 0, 0, 1128, 0, 0, 0,
	0, 1184, 0, 1155, 0, 0, 0, 0, 0, 0,
	0, 0, 1139, 1140, 0, 0, 0, 0, 0, 0,
	2097, 0, 1160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1173, 1130, 0, 0, 0, 0, 0, 1131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1132, 0, 0, 0, 0, 0, 0, 0,
	2073, 1170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2068, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1171, 0, 1151,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1134, 0, 0, 0, 0, 2086, 0,
	0, 0, 1122, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1136, 1137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2099, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1145, 1143,
	0, 0, 0, 0, 0, 0, 1138, 0, 0, 0,
	0, 1156, 0, 0, 1178, 1177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1181, 1169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1174, 0, 0, 2084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2058, 2059,
	2065, 2087, 2064, 2060, 0, 2057, 2055, 2056, 2048, 2049,
	2050, 2051, 2053, 2054, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1129, 0, 0, 1183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1127, 0, 0, 0, 0, 1164, 1165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1175,
	1162, 0, 0, 0, 0, 0, 0, 0, 1182, 1157,
	0, 0, 1148, 1146, 0, 0, 0, 1152, 0, 0,
	0, 0, 0, 0, 0, 1153, 0, 0, 1120, 0,
	1176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1121, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1168, 0, 0,
	1166, 0, 1154, 1135, 0, 0, 0, 0, 1150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1180,
	0, 0, 0, 0, 0, 0, 0, 1158, 0, 1159,
	0, 0, 0, 0, 0, 0, 0, 0, 1133, 1179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1163,
}

var sqlPact = [...]int32{
	11438, -1000, -1000, -1000, -1000, -1000, -1000, 244, -1000, -1000,
	242, 241, 240, 238, 237, 236, 235, 233, 231, 229,
	227, -1000, -1000, 222, 221, 220, 218, -1000, -1000, 216,
	215, -1000, 214, -1000, -1000, 212, -1000, 211, 210, 209,
	-1000, -1000, 208, -1000, 207, -1000, -1000, -1000, -1000, 205,
	204, 203, 109511, 108889, 110131, 2687, 141809, 122549, 2422, 115095,
	141187, 114473, 140565, 2579, 9533, 139943, 3183, 201, -1000, 139321,
	200, 199, 198, -1000, 121927, 138699, 119441, 118819, 2229, 85805,
	1921, 1909, -1000, 195, 194, -1000, 5806, 82703, 192, 191,
	189, 188, 2590, 184, -1000, 180, 178, -1000, 175, 169,
	-1000, 17202, 1751, -1000, 168, 167, 165, -1000, 585, 118197,
	164, 161, 156, 2647, 155, 154, 79591, 150, 149, 145,
	2509, 3281, -1000, -1000, 2432, -1000, -1000, 144, 143, 141,
	136, 135, 134, 133, 132, 130, 129, 127, 125, 124,
	123, -1000, 122, 121, 116, 114, 113, 112, -1000, 111,
	107, 106, -1000, 105, -1000, 104, 102, 98, 97, 96,
	94, 93, 89, 88, 79, 77, 76, 73, 68, 66,
	162722, -1000, -1000, 64, -1000, 2220, 1900, 1893, 1871, 1103,
	63, 60, 59, 57, 56, 55, 54, 53, 52, 51,
	50, 48, 47, 46, 45, 44, 43, 42, 41, 40,
	37, 36, 34, 176, 33, 32, 27, 20, 19, 18,
	15, 14, 2692, 4032, -1000, 2130, 1231, 1337, 35761, 3449,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 151109,
	142429, 12, -101, 9, -1000, 3820, 1204, 65148, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 340, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 565, 2446, 837, -1000, -1000, -1000, 138077, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2684, -18, 115715, -1000,
	2430, -1000, -1000, -1000, -1000, -1000, 833, -1000, 2681, 2645,
	410, 2635, 115715, -1000, -1000, -1000, 3893, 3780, 108267, 2853,
	4328, 4327, 4324, 4323, 4322, 150489, 2144, 2925, 4320, 4319,
	4318, 4315, 4314, 4311, 4307, -1000, 107645, 1185, 107023, 106401,
	3890, 137457, 105779, 136835, 153595, 54967, 1221, 3891, -1000, -1000,
	-1000, -1000, -1000, -1000, 142429, -1000, 1181, -1000, -1000, 4304,
	2365, 829, 121305, -1000, -1000, 136213, 1976, -1000, -1000, -1000,
	1037, 1344, 38309, 38309, 38309, 337, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3902, -1000, -1000, -1000, -1000, 142429, 3162,
	3162, 1561, 1571, 1571, 3162, 3162, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 4302, 4300, 4297, 4292, 4290, -1000,
	-1000, -1000, 1971, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	97079, 27928, 96457, 95835, 105157, 135591, 54330, 104535, 103913, 92101,
	4289, 4286, 53693, 62608, 4029, 134969, 152973, 4027, 4026, 1178,
	2429, 1622, -1000, -1000, -1000, -1000, -1000, -1000, -14, 85185,
	4097, 142429, -1000, 328, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 53056, 947, 52419, 873, 51782, 582, 134347, -1000, -1000,
	-1000, -1000, -1000, 91469, 3778, -1000, 133725, 1757, 2850, 4283,
	4282, 1292, 4280, 3759, 2077, 4279, 4278, 4277, 4276, 4274,
	4273, 4272, 1724, 133103, 3092, 132481, 2020, 152351, 2228, 1176,
	103291, 110131, 3022, 131859, 1690, 1687, -1000, -1000, -1000, -1000,
	3566, 3279, 3276, 1499, -1000, -1000, -1000, -1000, -1000, 68932,
	10975, 10758, -1000, -1000, 12290, 131237, 72082, 110131, 110131, -1000,
	-1000, -1000, -1000, -1000, -1000, 51145, 818, 50508, 997, 130615,
	-1000, -1000, 69562, 3395, 1226, -1000, -1000, -1000, -1000, -1000,
	129993, 49871, 433, 49234, 996, 142429, -1000, 3447, 2262, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2959, 1813, 4090, 3191, 90837, 2370, 1593, 3836, 3564, 3563,
	1711, 2420, 3562, 4271, 3034, 3242, 3536, 3533, 3532, 3527,
	3523, 1856, 2985, 725, 2971, 35124, 3434, 2121, 48597, 1709,
	1715, 3522, 3520, 3519, 4115, 3959, 2412, 2316, 2349, 2348,
	95213, 4270, 4269, 3795, 3494, 3490, 3247, 3479, 2242, -1000,
	3394, 1723, 327, -1000, -1000, -1000, -1000, -1000, -1000, 327,
	1653, -1000, -1000, -1000, -1000, -1000, 97699, -1000, -1000, 1971,
	-1000, -1000, -1000, 1600, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2130, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2888, -1000, 2386, -1000, -1000, -1000, 2909,
	3800, 3800, 3800, 3881, 552, 543, -1000, 176, 970, 1257,
	-1000, -1000, 162007, -1000, -1000, 55604, 55604, 55604, 55604, 55604,
	55604, 55604, 55604, 2575, -1000, 828, -1000, -1000, 868, -1000,
	827, 757, 692, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	825, -1000, -1000, -1000, -1000, -1000, -1000, 4095, -1000, 31165,
	-1000, -1000, -1000, 580, 823, 55604, -1000, -1000, 4149, 4148,
	1109, -1000, 324, 1059, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3446, 821,
	820, -1000, 819, 814, 812, 800, 796, -1000, 790, -1000,
	787, 786, 785, 778, 777, 776, 775, 774, -1000, 2491,
	-1000, -1000, -1000, -1000, -1000, -1000, 746, 741, 741, 741,
	-1000, 1165, 737, 773, -1000, 380, 736, 364, 735, 733,
	732, -1000, 772, 771, 770, 769, 767, 766, 765, 764,
	763, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1166, -1000,
	-1000, -1000, -1000, 1616, -17, 142429, -1000, 685, -17, -1000,
	-1000, 761, -1000, 39601, 39601, 39601, -1000, -1000, 2680, 55604,
	-1000, 2821, -1000, -7, -7, 1009, 67038, -1000, 63870, 1009,
	451, 875, 73334, -1000, 3391, -1000, -1000, 759, 319, -1000,
	-1000, -1000, -1000, 28558, 3390, 142429, 142429, 142429, 110131, 110131,
	110131, 142429, 4268, 4267, 3678, 55604, -1000, -1000, 82081, 155455,
	117575, 1599, -15, -1000, -1000, 4003, 87041, 81461, 3444, 155455,
	3440, 3386, 154839, 90205, 294, 3655, -1000, -1000, 758, 4264,
	-1000, -1000, -1000, -1000, -1000, 3652, 4263, 4262, 4261, 142429,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2615, 3650, -1000,
	-16, -1000, 113851, 2615, 3642, -1000, -16, 2615, 3614, -1000,
	-16, 113231, -1000, -1000, 2615, 3607, -1000, -1000, 289, 3606,
	-1000, -1000, 285, 3604, -1000, -1000, 301, -80, 3600, -1000,
	-1000, -1000, -1000, -1000, -1000, 162007, -1000, -1000, -1000, 154217,
	-1000, 3794, -1000, 142429, -1000, 55604, -1000, -1000, 4002, 1853,
	3843, 3940, -1000, -1000, -31, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2895, 2910, 1281, 2733, -1000, 3696, 1689, 38309,
	3746, -1000, -1000, -1000, -1000, -1000, 291, 28558, 3253, -1000,
	-1000, 142429, -1000, 142429, 3162, 3162, -1000, -1000, -1000, 4107,
	4105, 3162, 3162, 142429, 142429, -1000, -1000, -1000, -1000, -1000,
	-1000, -31, -1000, 3103, 3598, 1749, -1000, 2730, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2457, 3596, -1000,
	2489, 3595, 2250, -1000, -1000, 6659, -1000, 1772, -1000, 158695,
	1501, -1000, -1000, -1000, -1000, 2558, 3592, -6, -1000, -1000,
	2614, -1000, 4083, 3301, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 158650, -1000, 1945, -1000, -1000,
	2385, 2322, -1000, 1483, 3591, -1000, 3189, 3189, 102669, 3619,
	71452, 69562, 85185, -29, -1000, -1000, -1000, -1000, -1000, -102,
	-1000, 27290, 162007, -1000, -1000, -1000, -1000, 2145, 162007, 1055,
	-1000, -1000, 3581, -1000, 162007, 1046, -1000, -1000, 3580, -1000,
	2983, -1000, 3439, -1000, -1000, -1000, 2799, 89573, 2798, 1118,
	-1000, 102049, 2421, 4260, -1000, 4258, -1000, -1000, 4256, -1000,
	4255, 4247, 4245, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	101427, 2679, -1000, -1000, 1694, 1063, 92731, -1000, 2797, 3939,
	-1000, 100805, 1170, -1000, 1079, 2796, -1000, 1615, 112611, 1164,
	2794, -1000, 4243, 3883, 3070, 1079, 2791, -1000, -1000, -1000,
	-1000, -1000, 1012, -1000, 73954, -1000, 73954, -1000, 1918, -1000,
	149869, -7, 110131, 4095, -1000, -61, -1000, -1000, -1000, 1204,
	-1000, 68299, -1000, 68299, 120683, 92731, 1063, 3385, 78959, 161617,
	-1000, 1107, -1000, -1000, 162007, -1000, -1000, -1000, 2981, -1000,
	-206, 3188, -1000, 92731, 70822, 3384, 2972, -1000, 162007, -1000,
	-1000, -1000, -1000, 162007, -1000, -1000, -1000, 92731, 1694, -1000,
	129371, 100183, -1000, -1000, 1705, 2951, -1000, -1000, -1000, 69562,
	3382, 1485, 92731, 92731, 92731, 92731, -1000, 128749, -1000, -1000,
	2366, 1852, 3785, 2356, 110131, -1000, 2082, -1000, -1000, -1000,
	3815, 3617, 142429, -1000, -1000, 3435, -1000, 84565, 3435, 111991,
	-1000, 111371, -1000, 110751, -1000, 110131, -1000, 110131, -1000, 4241,
	4239, 4238, -1000, -1000, 4236, -1000, 4234, 3803, -1000, 910,
	47960, 162007, 3801, -1000, 4233, 2305, 3434, 162007, -1000, 3612,
	1924, 1892, 142429, -1000, -1000, 142429, -1000, 142429, -1000, 142429,
	-1000, -1000, -1000, 2715, 1815, -1000, -1000, 2894, -1000, -1000,
	-1000, 1104, -1000, -1000, 110131, 110131, 110131, 110131, 3381, 3064,
	110131, 2044, -1000, 47323, 3777, -1000, -1000, 3515, 4231, 2006,
	-1000, 2051, -1000, 3380, 3830, -1000, 3378, 1704, 2052, 287,
	4152, 287, -1000, -1000, 297, -1000, -1000, 149249, -1000, 2909,
	-1000, 142429, -1000, 2887, 3421, 3431, 1860, 2704, 3006, -1000,
	46686, 2973, 59426, 2725, 176, -1000, -1000, 176, 176, 37035,
	-1000, -1000, 38309, 970, 87041, 87041, 28558, 1575, 55604, 55604,
	55604, 55604, 55604, 55604, 55604, 55604, 55604, 55604, 55604, 55604,
	55604, 55604, 55604, 55604, 55604, 55604, 55604, 55604, 55604, 55604,
	55604, 55604, 55604, 55604, 55604, 55604, 55604, 55604, 55604, 55604,
	55604, 55604, 55604, 55604, 2522, 55604, 1597, 55604, 55604, 55604,
	55604, 2236, -1000, -1000, 2294, 621, 2337, 757, -1000, -1000,
	-1000, 4062, 4062, 4062, 1313, 1313, 1313, 162432, 162432, 636,
	4230, 868, -1000, 55604, -1000, 142, 67658, 55604, 29190, -1000,
	543, 14216, 2947, -1000, 538, 29857, -1000, -1000, -1000, 31165,
	692, 46019, 55604, 1126, 162007, -1000, -1000, 1806, 4099, 26652,
	3448, 3237, 756, 989, 981, 34457, 33790, 33123, 32456, 973,
	846, 55604, 55604, 55604, 55604, 55604, 55604, 55604, 55604, -1000,
	-1000, 4104, -1000, 4099, -1000, -1000, 755, -1000, 4099, 4099,
	-1000, 4099, 1395, 1394, 4099, -1000, 4099, 4099, 8757, 8757,
	45382, 44745, 44108, 60063, 43471, 55604, 31819, 42834, 42197, -1000,
	61974, 142429, -17, 4001, 142429, 55604, 379, -1000, 12262, -1000,
	379, 379, 752, -62, 162007, 3001, 3001, 65778, 2792, 2586,
	2586, 2586, -1000, 1009, 20871, 1009, 126889, 2598, 1009, 1009,
	283, 345, 537, 63240, 2821, 126269, 852, 750, 7, 6,
	5, -1000, -1000, 1, -2, -1000, -1000, 110131, 749, 29190,
	28558, 278, 2299, -63, 3008, 3004, 3003, 2998, -1000, 2997,
	2676, -1000, -1000, -1000, 2167, -69, 1579, 110131, 142429, 2047,
	-1000, -1000, -1000, -1000, 85185, -20, 85185, 142429, 3776, 110131,
	-72, -1000, 155455, 9561, -71, -1000, 1315, 273, 4099, -1000,
	-1000, -1000, 4229, 4228, -1000, 447, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 746, 741, 741, 741, -1000, 1165,
	737, 380, 736, 364, 735, 733, 732, -1000, -1000, -1000,
	-1000, -1000, 3377, 110131, 142429, 2016, 83945, 116955, -80, 117575,
	155455, -27, -1000, -1000, -1000, -1000, 110131, -1000, -1000, 110131,
	-1000, 76448, -1000, 142429, -1000, -1000, -1000, 4227, -1000, 110131,
	110131, 2615, 3579, -1000, 110131, -1000, 110131, 277, 3574, -1000,
	-1000, 142429, -1000, 110131, 110131, -1000, 142429, 142429, 142429, 155455,
	155455, 272, -1000, 110131, 970, -77, 1301, -31, -1000, -1000,
	-1000, -1000, 1971, -1000, 2333, -1000, -1000, -1000, -1000, -1000,
	-1000, 1740, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1109, -1000, -1000, -1000, -1000, 4075, 4073, -26, -1000, -1000,
	28558, -1000, 2280, -1000, -1000, -1000, -1000, 142429, 142429, -1000,
	-1000, 142429, 142429, -1000, -1000, -32, 1936, 635, 1567, -1000,
	99561, 2836, 3784, 4226, 3060, 3771, 1912, -1000, 1809, 731,
	-1000, 3908, 97699, 3958, 3971, 1490, -1000, 3376, -1000, -1000,
	-1000, 1036, 2002, 2117, 1566, 1554, 97699, 2489, -1000, 87041,
	-1000, 3056, 3880, 1571, 1587, 1571, 1571, 1578, 1576, -1000,
	97699, 2111, 1544, 1536, 6679, 1471, 2104, 1470, 3683, -1000,
	-1000, 2675, 2749, -1000, -1000, -1000, -1000, 1973, 3130, -1000,
	2905, 1545, 1545, 142429, -1000, 1468, -1000, -1000, 1888, 1870,
	-1000, -1000, 128129, 1996, -1000, 1463, 1449, 143669, 4017, 2888,
	2569, 894, 2357, -1000, 1498, 1447, 3375, -1000, -1000, -33,
	3951, 3970, 1490, -1000, -1000, 3374, 1445, -1000, 1153, -1000,
	-1000, -1000, 3879, 110131, 28558, 1775, 1773, 1769, 2094, 1437,
	-21, -1000, 3945, 1911, -1000, 4038, 92731, -1000, 2820, 1807,
	-1000, 1694, 1694, 123169, 142429, -1000, -1000, -1000, 3828, 3827,
	-1000, -1000, 1436, 1434, -1000, 1150, 8012, 3724, -1000, 155455,
	1150, 1150, 2198, 3570, 3140, 1878, -1000, 3186, 1001, 3185,
	-1000, -1000, -1000, 1001, -29, 85185, 142429, 270, -1000, 142,
	55604, 55604, 142, 55604, 142, -1000, 3930, 3569, 4000, -1000,
	3568, 4223, 730, -1000, -1000, 2920, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 727, 2789, 3373, 142429, 293, -1000, 110131,
	-1000, 3998, 127509, -1000, 3560, 155455, 2489, 2788, -1000, -1000,
	98941, -1000, 3557, 2375, 565, 2787, -1000, 781, 4222, 3555,
	-1000, 148629, -1000, 3794, 1619, 3553, 1228, 700, 3997, -1000,
	700, 77079, -1000, 142429, -1000, -7, 331, 93971, -78, -79,
	525, -1000, 142429, 142429, 3734, 2391, 2387, -1000, 1073, 69562,
	-1000, 69562, -86, -1000, -206, 3184, 1762, 69562, -1000, 1063,
	-140, 1001, -1000, 1001, -1000, 110131, 3428, -1000, 92731, 69562,
	-1000, 1063, 1063, 1063, 1063, -1000, -1000, -1000, -1000, 4221,
	4220, 4219, 4214, -1000, -1000, 1078, 110131, 142429, 110131, -1000,
	3139, 1821, -1000, 267, -1000, 155455, -1000, 155455, 142429, 110131,
	-1000, -1000, 1078, 142429, 1078, 142429, 1078, 142429, 1078, 1078,
	-1000, -1000, -1000, -1000, -1000, 142, -1000, -1000, 162007, -1000,
	55604, -1000, -1000, 1792, 4212, 1946, -1000, 3426, -1000, 3425,
	-1000, 39, 264, -1000, -1000, 4102, 2202, -1000, 4146, -1000,
	-1000, -1000, -1000, -1000, 110131, 3372, -1000, -1000, -1000, -1000,
	4211, 3773, 162007, -1000, 88941, 2086, -1000, -1000, -1000, -1000,
	110131, 110131, 110131, 110131, 142429, 3723, -1000, 142429, 3712, 3722,
	110131, -1000, 4151, -1000, -1000, 97699, -1000, 2887, 3421, -1000,
	-1000, -1000, -1000, -1000, -1000, 1580, 2651, -1000, 2953, -1000,
	1793, -1000, -1000, -1000, 162007, 60700, -1000, -1000, 162007, 2163,
	-1000, 58789, 58152, -1000, -1000, 1983, 110131, 3021, -1000, 3021,
	-68, -1000, 159406, 2952, 110131, -26, 38309, -1000, -1000, -1000,
	-1000, -1000, 1035, 687, 687, 1513, 1513, 1513, 1513, 3910,
	6167, 539, 6037, 16329, 16329, 816, 816, 816, 816, 816,
	16329, 1328, 1313, 1313, 1328, 1328, 1328, 1328, 1328, 1313,
	1313, 1313, 16329, 16329, 16329, 1313, 162432, 162107, 15141, 55604,
	55604, 1432, 2258, 621, 11931, 55604, 11169, 11169, 11169, 11169,
	-1000, 2174, -1000, -1000, -1000, -1000, 3370, 716, 60063, 60063,
	-1000, -1000, -1000, -1000, 30511, 55604, -1000, -1000, -1000, -1000,
	41530, -1000, -1000, 158375, -344, 524, -1000, 258, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 522, -59, 140, -1000, 55604, 55604, 55604, 520, -1000,
	257, 55604, 142429, -1000, 20051, 850, -119, -1000, -91, 1595,
	-1000, 55604, -1000, -1000, 1431, -1000, 1430, 1427, 1420, -1000,
	712, 508, -1000, 255, -1000, 2584, 711, 710, 55604, -1000,
	-1000, -1000, -1000, -1000, 158334, -1000, -1000, 157943, -1000, -1000,
	157898, -1000, -1000, 157623, -1000, -1000, -1000, -1000, -1000, 161576,
	20006, 18865, 18150, 13973, 17436, 15448, -92, 507, -100, 4099,
	483, 478, 475, 1025, 1021, 471, 469, 468, -113, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -122, 467, -1000, 3368, -59, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 466, -1000, 464, -1000, 161301, -59,
	463, 657, -1000, 60063, 60063, 60063, 60063, 462, -1000, 159361,
	-1000, 160910, 40893, 40893, 40893, 459, 160865, 55604, -59, -124,
	-1000, -129, -1000, -1000, -1000, -1000, 609, -134, -1000, -135,
	1105, 39601, 64516, 28558, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1105, 1105, 55604, -1000,
	55604, 2968, -1000, -1000, -1000, -1000, 2961, 2311, 3001, 65778,
	-1000, -1000, -1000, -1000, 126889, -1000, 4095, 3295, -1000, 126889,
	-1000, -1000, 142429, 685, -1000, 126889, 126889, 28558, 1009, -1000,
	-1000, 142429, 678, 1009, 126889, 801, -1000, -1000, -1000, -1000,
	-1000, 455, 75828, 140, 252, 28558, 1079, -1000, -1000, 3107,
	3107, 3107, 3107, 3107, 110131, -1000, -1000, 155455, 1409, -25,
	-70, 3181, 3179, 3177, -29, 85185, -29, -102, 142429, -22,
	4036, -268, -1000, 2517, -1000, 87041, -1000, 864, 1270, 28558,
	-1000, -1000, -1000, -1000, 4099, 155455, 3367, 314, 3175, 3172,
	3169, -1000, 2674, 115715, 309, -80, 155455, -1000, 294, -141,
	-1000, -1000, 86425, 80831, -1000, 2592, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 4209, -1000, 2615, -1000, -1000, 110131, 2615,
	2615, -1000, 110131, 110131, 2615, -1000, 289, -1000, 285, -1000,
	-1000, -80, -1000, 1101, 38309, -1000, 1971, -1000, -1000, 1776,
	-1000, 2404, -1000, 1332, -1000, -1000, 38309, -1000, 3737, -1000,
	2007, -1000, -1000, -1000, -1000, 3717, 142429, 142429, 110131, -1000,
	124409, 142429, -1000, 2511, 155455, -1000, 2786, 148009, 2762, 147389,
	87041, -1000, -1000, 704, 1051, 2949, 2943, 1223, 142429, 142429,
	2939, 146769, 146149, -1000, 4208, 142429, 2419, 55604, 124409, 3877,
	2539, 2608, 142, 142, -1000, 142, -1000, -1000, 703, 1387,
	110131, 110131, 142429, 155455, 110131, 2181, -1000, -1000, -1000, -1000,
	-1000, 98319, -1000, -1000, 1571, -1000, -1000, -1000, 1571, -1000,
	1571, 2489, 2120, 142429, 155455, 110131, -1000, -1000, -1000, -1000,
	142429, 142429, 155455, 2672, 2747, 2671, 3126, -1000, -1000, -1000,
	-1000, -1000, -1000, 155455, 145529, 2343, 144909, 2331, 2327, -1000,
	-1000, -1000, 2289, 2326, 2492, 2080, 142429, -1000, -1000, -1000,
	-1000, -1000, 1662, -1000, 894, 1404, 3366, 55604, 55604, 2541,
	142, 142, -1000, 142, 701, 28558, -1000, 1390, -1000, 3441,
	142429, 4143, 144289, 4141, 142429, 142429, 142429, 155455, 3814, 142429,
	-23, -1000, 1987, -1000, 4038, -1000, 983, -1000, -140, -24,
	-111, -1000, 982, 980, -102, 2365, 142429, 155455, -1000, 143669,
	8012, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2529, 3122,
	1234, 142429, 1483, -1000, -1000, 2078, 1393, 1386, 97699, 2445,
	2072, 2188, 155455, 69562, 1075, 69562, 3077, -1000, -1000, 26014,
	-1000, 162007, 162007, -1000, 162007, -1000, 83323, 92731, 92731, 142429,
	-1000, 77709, 142429, 94591, 1050, 3549, 74576, -102, 1063, 1694,
	3467, 1929, -111, 699, 142429, -1000, -1000, 2489, 3546, 565,
	2785, -1000, 155455, 1168, 3996, 3534, 696, 4207, 4205, -1000,
	110131, 2670, 2782, -1000, -1000, 143049, 3622, 894, 142429, 1105,
	65778, 2362, -1000, 72714, 1200, 142429, 2199, 299, -1000, -1000,
	-1000, 17, 142429, -1000, 853, -1000, -1000, 331, 331, 1063,
	70192, -142, -1000, 249, 694, 974, 971, -1000, 2721, -1000,
	-206, -1000, 92731, 1073, 69562, 3356, -206, 3167, 3353, -1000,
	-1000, 1096, 1063, 1654, 3161, 1063, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -8, -1000,
	2069, 2180, 142429, -80, -80, -39, -1000, -1000, 248, -25,
	-1000, 1078, -1000, 1078, -1000, 1078, -1000, -1000, -1000, 162007,
	-1000, -1000, -1000, 1933, 1925, 142429, -1000, 142429, 3420, -1000,
	142429, -1000, -1000, 110131, -1000, 4204, -1000, -1000, 28558, 142429,
	110131, 28558, 110131, 3418, 3412, -1000, -1000, -1000, 142429, -1000,
	-1000, 142429, -1000, -1000, -1000, -1000, -1000, -1000, 1246, -1000,
	2163, 2648, -1000, 692, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2872, -1000, -1000, 37035, 1011, -1000, -1000,
	110131, -9, -26, 55604, 55604, 9706, 7629, 55604, 60063, 60063,
	-1000, 55604, 6885, -1000, -1000, -1000, -1000, -1000, 3352, 691,
	55604, 87041, 8189, 6615, -1000, 452, 14704, 1328, -1000, 55604,
	-1000, 378, -1000, 449, 40256, -1000, 159838, 11, -156, -1000,
	21524, -59, -157, -1000, -1000, 863, -1000, 3571, -1000, 55604,
	160590, 2842, 2270, 2187, 1984, 4099, 4140, 25376, -1000, 78339,
	1123, 2604, 157582, -1000, -1000, -1000, -1000, 87041, 87041, 55604,
	55604, -1000, 55604, 55604, 55604, -1000, -1000, -1000, 4099, 448,
	-1000, -1000, 1031, -1000, -1000, -1000, 1031, -1000, -1000, 1571,
	-1000, 1571, -1000, 55604, -1000, -1000, 3344, 55604, -1000, 87041,
	87041, 60063, 60063, 60063, 60063, 60063, 60063, 60063, 60063, 60063,
	60063, 60063, 60063, 60063, 60063, 60063, 60063, 60063, 60063, 60063,
	60063, 2930, 60063, 4060, 4060, 4060, 1112, -1000, 3409, 3344,
	55604, 55604, 87041, 445, 444, 439, -1000, 55604, -59, -1000,
	-1000, 7550, 689, -1000, 2859, -1000, 142429, -1000, 3236, -1000,
	55604, -1000, -176, -1000, 2821, -1000, -1000, 3236, 3236, -159,
	162007, 65778, 65778, -1000, 688, 55604, 2960, -1000, -1000, 849,
	-335, -1000, 969, -1000, -1000, -1000, -1000, -1000, -1000, 967,
	-1000, 685, -1000, -1000, -1000, 186, 126889, 678, -1000, 142429,
	126889, 847, -1000, -167, -1000, -1000, -169, -1000, 126269, 438,
	28558, -1000, 1105, 3753, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2978, -268, 155455, 155455, 2063, 2062, 2059, -29, -102,
	2629, -1000, 3245, 4139, -1000, 4098, 858, 841, 177, 437,
	-80, 155455, 155455, 2058, 2054, 2050, 80211, 3332, 155455, -1000,
	-1000, -1000, 77709, 87041, -1000, 87041, -1000, -1000, -1000, -1000,
	2615, -1000, -1000, -1000, 277, -1000, -1000, -1000, -1000, 3047,
	-1000, -31, -1000, -1000, -1000, 55604, -1000, 1057, -1000, -1000,
	3783, 676, 1382, 1381, -1000, -178, -1000, 964, -1000, -1000,
	-1000, -1000, -1000, 3298, -1000, 3531, -1000, 2781, -1000, 1208,
	2779, 2095, -1000, 55604, 675, 3063, 671, 669, 4203, 2433,
	4197, 1224, 3530, 2615, 3521, 2615, -1000, -1000, -1000, 1040,
	-1000, 162007, -179, -1000, 2539, -1000, 668, 666, -1000, -32,
	1831, 610, 1377, 1092, -1000, -1000, 55604, 55604, 125649, -1000,
	545, 3786, -12, -1000, -1000, -1000, 2049, 1376, 1368, -1000,
	-1000, -1000, -1000, -1000, 2489, 2037, 1367, 1365, -1000, -1000,
	-1000, -1000, -1000, -1000, 3484, 3035, 2745, -1000, -1000, -1000,
	-1000, 2778, -1000, 142429, -1000, 3517, 142429, 3200, 894, 142429,
	3786, 3235, 1091, -1000, 3476, 3474, 1017, 142429, 55604, 55604,
	160549, 160158, -1000, 1088, -1000, -1000, 55604, -1000, -33, -1000,
	1363, 3936, 2771, 110131, -1000, 2615, 3516, 1362, -1000, 1361,
	-1000, -1000, -1000, 3944, 3942, 1360, 1911, 92731, 69562, 2718,
	-1000, 3928, 2628, 4070, 4038, 69562, -1000, 123169, 92731, 92731,
	-1000, -1000, -1000, 4070, -1000, -1000, -1000, -1000, 88309, -1000,
	-1000, 1150, 142429, 155455, 110131, 2000, -1000, -1000, 115715, 116335,
	142429, 3140, -80, 1001, -1000, 2682, 1001, 1075, 3315, -1000,
	3016, -1000, -1000, 1087, 434, -34, -1000, 1454, 4195, 428,
	-185, -35, 87041, -1000, -1000, -1000, -1000, 2762, 110131, 665,
	142429, 1458, 3046, 142429, 142429, 3995, -1000, 2699, 698, 110131,
	1174, -1000, 4095, -1000, -1000, -1000, 142429, 39601, 123169, -1000,
	3938, 110131, 3994, 3514, 1079, 110131, 142, 110131, 4116, -1000,
	-1000, 3991, 110131, 3507, 2667, 2767, 2914, 894, 93351, 1079,
	2603, -44, -1000, 2199, 38946, 3782, -186, -1000, -1000, -1000,
	1105, 77079, 65778, 55604, 4194, -188, -1000, -1000, -1000, -1000,
	-1000, 92731, 1063, 142429, 142429, 4192, 92731, 92731, 92731, -36,
	664, -1000, 963, 962, 961, -1000, -1000, -1000, -1000, -1000,
	-1000, 959, 949, 945, 944, -1000, -1000, 1073, -1000, -1000,
	-206, 69562, 1073, 69562, 142, -1000, 2610, -1000, 110131, 69562,
	-1000, 24738, 142429, 3139, -1000, 87671, -1000, -1000, -1000, -1000,
	-1000, 1078, -1000, 4136, -102, -1000, -1000, -1000, -1000, -1000,
	2548, 2723, 2548, 2182, 2179, -1000, -1000, -1000, 2611, -1000,
	-1000, -1000, -1000, 3062, 3790, 28558, 3899, 11169, 55604, 55604,
	6257, 6117, 5986, 11169, 55604, 55604, 87041, 7280, -193, 55604,
	55604, -1000, 55604, 840, 162007, -1000, 4135, 55604, 425, 423,
	-1000, -1000, -1000, 4096, -1000, -1000, -1000, 162007, 55604, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 422, -1000, 173, -1000,
	-1000, -1000, 151729, -1000, 55604, 421, 3874, -1000, 418, 417,
	505, 13666, 157191, 157146, 156871, 415, -1000, -1000, -1000, 406,
	404, 162007, 3409, 162007, -1000, -1000, 1225, 1225, 1533, 1533,
	1533, 1533, 4060, 729, 1098, 523, 612, 612, 612, 1369,
	1112, 1112, 612, 612, 612, 1112, 3310, 2942, 662, 8304,
	-1000, -1000, 162007, 162007, 401, -1000, -1000, -1000, -59, 400,
	7550, -1000, -1000, 3228, 3872, 162007, -1000, 65778, 3228, 3228,
	-1000, -1000, 2311, 142429, 162007, 65778, -1000, 3295, -1000, 22818,
	22174, -1000, 28558, -1000, -1000, -194, -1000, 87041, -1000, -1000,
	-1000, 4095, -1000, 75828, -1000, -1000, 147, -1000, 3753, -1000,
	937, -1000, -1000, 92731, 92731, 4191, 4190, -1000, 4134, 4133,
	2574, 4132, 3107, -1000, -268, -164, 142429, 142429, 142429, -1000,
	2617, -1000, 839, 4189, 856, 28558, -1000, -80, -80, 142429,
	142429, 142429, 3309, 110131, 142429, 1988, 155455, -80, -1000, -1000,
	-1000, -1000, -1000, -1000, 3733, 162007, 3408, 3218, 3141, 142429,
	142429, -1000, 124409, 38309, 1755, 125029, 142429, 3506, -1000, 3505,
	-1000, 1223, 2841, 156830, 66408, -1000, 66408, 142429, -1000, -1000,
	-1000, -1000, 2235, 1754, 4188, 1280, -1000, 3819, 142429, -1000,
	142429, -1000, -1000, -1000, 124409, -1000, 142429, 142429, 110131, 142429,
	-1000, 155455, 3489, -195, 162007, -38, -1000, 932, -1000, 1532,
	-1000, 24100, 142429, 155455, 110131, 142429, 155455, 110131, 142429, -1000,
	3030, 3503, 1197, 142429, -1000, 3502, 142429, 1196, -1000, -1000,
	142429, 2573, -1000, -1000, 3470, -1000, 162007, 160113, 142, 55604,
	3488, -196, 28558, -1000, 4131, 4129, 3501, 3823, -1000, 142429,
	4124, 142429, 110131, 3730, -1000, -1000, -1000, -1000, 927, 924,
	923, 922, 919, 4047, 123169, -1000, 1077, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2033, 1359, 1358,
	2666, 2664, 2613, -39, 2445, 1075, -40, 660, -1000, 1075,
	-1000, 92731, 69562, 4186, 2195, 77709, 55604, 55604, -1000, 3054,
	-1000, 120061, 94591, 2690, -1000, -1000, 66408, 656, 142429, 655,
	142429, 654, -1000, 142, -1000, 4184, 124409, 643, -1000, 1163,
	2609, -1000, 4067, -1000, 3478, -1000, 817, -1000, -1000, 265,
	-203, 155455, 2489, 142, 110131, -1000, 565, 1072, 565, 397,
	-42, -1000, 3538, 1219, 28558, 110131, 3500, 2911, 894, 93351,
	-1000, 1619, 3006, -1000, -43, -1000, 536, 142, 2603, -1000,
	-44, 162007, -1000, 911, 394, -1000, 3728, -1000, -1000, -205,
	-1000, -1000, 5757, 5757, 92731, 69562, 92731, 92731, 92731, 69562,
	92731, -1000, 1073, 3988, -1000, -206, -1000, 2838, 1063, 1063,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 28558, 1949,
	-1000, 640, 633, -1000, -1000, -1000, -1000, 3790, 11169, 11169,
	55604, 55604, 55604, 11169, 7280, -211, -1000, 11169, 11169, -59,
	-1000, -1000, 159838, -1000, -1000, -1000, 162007, -1000, 23462, 2555,
	-1000, 156439, -1000, 37035, -1000, -1000, 55604, 55604, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 60063, 3306, 632, 87041,
	-1000, -1000, 386, 1121, 55604, 57515, 2821, 1121, 1121, -1000,
	-213, -1000, -1000, -1000, 4095, -1000, 4095, 147, -1000, 142429,
	-1000, -1000, -1000, 28558, -1000, 92731, -1000, -1000, -1000, -1000,
	-1000, 4183, 4182, 2743, 4181, 4180, -1000, -1000, -1000, 3460,
	-162, -180, -181, -1000, 855, -1000, 4178, -1000, 185, 179,
	172, 155455, 3304, 160, 3138, 3133, -80, -1000, 142, -1000,
	-1000, -1000, -1000, -1000, -1000, 3111, 3986, -1000, 2308, -1000,
	142429, 142429, -1000, 142429, -1000, 28558, 142429, 3217, 1392, -1000,
	1051, 2938, 631, 60063, 1245, 110131, 706, 3212, 3211, -1000,
	4012, 3863, 3158, -214, -1000, 142429, 55604, 142429, -216, -219,
	2739, -1000, -1000, 1244, 1391, 55604, 1242, -1000, -1000, -1000,
	87041, 629, 2615, 2615, -1000, -222, -225, -1000, -1000, -1000,
	55604, 1351, 142429, 37672, -1000, 4177, 3786, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 142429, 142429, -1000, -1000, -1000,
	142429, 3786, 142429, -1000, 55604, -1000, 159797, 55604, 1347, -1000,
	-1000, -1000, 4123, 2615, 28558, 2615, -1000, 2615, 3823, 1276,
	92731, 55604, 1684, 69562, 69562, -1000, -1000, -1000, 2683, 142429,
	155455, 110131, 2288, 2288, 3405, -1000, -1000, -1000, 2718, 2718,
	-1000, -45, 1075, -1000, 1884, -1000, 162007, 162007, 2554, 4176,
	-1000, -1000, -1000, -1000, 2936, -1000, -1000, -1000, 142429, 2934,
	3163, -227, 66408, 628, 66408, 626, 142429, 1068, -1000, -228,
	94591, 1050, -1000, 1163, -1000, -1000, -1000, 73954, -1000, -1000,
	-1000, -1000, 565, 3984, -1000, 3044, 3977, -1000, 4118, 625,
	623, 142429, 2663, 622, 28558, 3775, 894, 93351, -1000, 3622,
	2199, -1000, 2760, 142429, 3769, -1000, 3006, 621, 1063, 620,
	1063, -1000, -233, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1605, 1073, -49, -1000, 4016, 619, 1015, -1000,
	-1000, -1000, -1000, 110131, 110131, 55604, 55604, -1000, 11169, 11169,
	11169, -1000, 376, -1000, -1000, 2603, 3861, -1000, -50, 156394,
	156119, 8465, 60063, 87041, -234, -1000, -1000, 142429, 162007, -52,
	-1000, 162007, 618, 616, 541, -1000, -1000, -1000, 802, 658,
	-1000, -1000, -1000, -1000, 4175, -1000, -1000, -1000, 155455, 155455,
	155455, 4170, -1000, 155455, 155455, 155455, -80, 155455, 155455, 2031,
	2021, -1000, 123789, 142429, -1000, -1000, 2095, 2380, -1000, -1000,
	142429, 2763, -1000, -1000, -1000, 1080, 55604, 8304, 60063, 615,
	55604, -1000, 613, 598, 3976, 3705, -1000, 3049, 3300, 2194,
	66408, -1000, 3790, -1000, 156078, -1000, 1213, 2297, -1000, -1000,
	-1000, -1000, 162007, 60063, 3823, 66408, -1000, -1000, 588, 587,
	162007, 586, 909, 3302, -1000, -1000, -1000, -1000, -102, -102,
	-1000, -1000, 162007, 142, 162007, 581, 3936, -1000, -1000, -1000,
	-1000, 2615, 110131, -1000, 162007, -1000, -1000, -1000, -1000, 902,
	-1000, -1000, -1000, 1321, -1000, -1000, -1000, -1000, -1000, 4165,
	3299, 115715, -1000, -235, 2304, 87041, -1000, 1050, -1000, -1000,
	2690, 577, -1000, 1061, 2903, 2903, 1213, -241, 66408, -242,
	66408, -243, 2653, 3039, -1000, 352, 3967, 1163, 1105, -1000,
	3966, 142, 3726, -1000, 142, -1000, 4116, 66408, -1000, 110131,
	66408, 2662, 2435, 2891, 93351, -1000, 2914, -1000, -1000, -244,
	142429, 2199, -1000, -1000, 92731, -1000, -1000, 4082, -1000, 2838,
	-1000, 142429, -1000, 142429, -1000, -1000, -249, -250, -1000, 2417,
	55604, 37035, -1000, -1000, 8465, -251, -1000, -58, -1000, 3965,
	57515, 4164, 4161, 4159, -1000, -1000, -1000, -268, -268, -268,
	-1000, -80, -80, -80, -80, -80, 142429, 142429, -1000, 2300,
	-1000, 2762, -1000, -1000, 3499, -1000, 3226, 573, 12953, 8304,
	2861, 142429, 8220, 2489, 2489, -1000, 3964, 3294, -1000, -1000,
	2541, 572, -1000, -1000, -1000, -1000, 1011, 142429, 1061, 3225,
	110131, 8304, 1220, -252, 2548, 2548, 55604, 36398, 2570, -1000,
	55604, -1000, -1000, 3823, 69562, 155455, -1000, 155455, 2660, -1000,
	3268, 5689, -1000, 2653, 142429, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2194, 1213, -257,
	2541, -259, -1000, -1000, 3810, -1000, 3718, 3054, 142, -1000,
	142, -1000, 4158, 1072, 350, -260, 1219, -265, 110131, 2350,
	-1000, 894, -1000, 2911, 1105, 3674, -1000, -266, -1000, -1000,
	-1000, -267, -283, -1000, -1000, 347, 56878, 56878, 56878, -59,
	-68, -1000, 142429, 566, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 158, 146, -1000, -1000, 3465, 1006, -1000, 915, 2166,
	346, 1240, 266, 13, -1000, -1000, -1000, 3158, -1000, 142429,
	-1000, -1000, -1000, 1006, 565, -1000, 55604, 1213, -286, -1000,
	1195, -289, -1000, 1179, -292, -1000, 3285, -1000, -294, 2615,
	-1000, -268, 272, 2288, 1069, 3926, 2642, 5689, -1000, 4111,
	93351, -1000, -1000, -1000, 2878, -297, -1000, -1000, 2541, 2194,
	1213, 1061, 2541, 2773, -1000, 2554, 1068, -1000, -1000, -1000,
	-1000, 1213, 563, 2194, 562, 1747, 894, -1000, -1000, 1571,
	3775, 3673, 1549, 1063, -1000, -1000, -1000, 3565, -1000, 61337,
	2714, 2173, 159086, 3565, 3565, -1000, -1000, 155455, 155455, 142429,
	1061, 3895, -1000, 994, 986, 1693, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1105, -300, -1000, 2861, 162007, 1061,
	-1000, 2548, 3098, -1000, 2548, 3283, -1000, 2564, -1000, -1000,
	-1000, -1000, 3278, -1000, 2131, 4039, -1000, -1000, 3948, 55604,
	-1000, -1000, -1000, -1000, -1000, -1000, 1061, 142429, 1061, 2541,
	2194, 1105, 1061, 2160, 2143, 4157, 1050, 2653, 2194, 66408,
	2541, 66408, 2523, -1000, 142429, -1000, 2435, 1527, -1000, 1905,
	-1000, -1000, 2176, 3975, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -80, -80, -1000, -1000, 901, -1000, 3686, -1000, 1241,
	2354, 2354, -1000, -1000, 915, -1000, -1000, 561, -1000, 558,
	-1000, 155455, 2607, -1000, -1000, -1000, 162007, -1000, -1000, 1105,
	1061, 2541, 1388, 1105, -1000, 4156, -1000, 2653, -1000, 2541,
	-302, 1061, -311, 2561, -1000, -1000, -102, 2350, -1000, 1895,
	77079, 2169, -1000, -1000, 2591, 56241, 55604, -1000, 4044, -1000,
	-1000, 2987, -1000, 3158, 55604, 55604, 272, 75198, 19208, 1388,
	1105, 1061, -1000, 1143, -1000, 1388, -1000, 2878, 1061, 1213,
	1105, 2194, 1975, 894, 1747, 77079, -285, -1000, -1000, -1000,
	162007, -1000, -1000, -1000, -1000, -314, -316, -1000, -111, 123169,
	-330, -1000, -1000, -1000, -1000, 1388, 1105, -1000, -1000, -1000,
	1105, 2194, 1388, 2541, -1000, -1000, 2289, 155455, 2523, -285,
	-1000, 2541, 1306, -319, -1000, -1000, 1388, 1388, 2541, -1000,
	1061, -1000, 1975, -1000, -1000, -1000, 556, -1000, -1000, -1000,
	1061, 1105, -1000, 55604, 1105, 1388, -322, 1388, -1000, 2541,
	-1000, -1000,
}

var sqlPgo = [...]int16{
	0, 5013, 5012, 24, 5010, 5009, 5007, 5001, 5000, 4999,
	4997, 4996, 4995, 4994, 4993, 4992, 171, 4990, 4989, 4988,
	4987, 4985, 4984, 4983, 4982, 4981, 4980, 4979, 4974, 4972,
	4971, 4970, 4969, 4966, 4965, 4964, 4960, 4959, 4958, 4957,
	4955, 4953, 4952, 4951, 4949, 4948, 4947, 4944, 4943, 4942,
	4940, 4939, 4938, 4937, 4936, 4933, 4930, 4928, 4927, 4926,
	4922, 4919, 4917, 4916, 4914, 4913, 4912, 4910, 4909, 4908,
	4907, 4906, 4904, 4903, 4902, 4901, 4900, 4899, 4898, 4895,
	4892, 4890, 4889, 4888, 72, 4887, 4886, 4885, 4884, 4883,
	4880, 4879, 4878, 4877, 4875, 4874, 4873, 4872, 4871, 4869,
	4868, 4866, 4865, 4864, 4863, 4862, 102, 81, 4860, 323,
	4857, 4855, 4853, 4852, 4851, 4850, 4849, 4848, 4847, 4845,
	4844, 4842, 4841, 4840, 322, 4838, 13, 200, 4837, 4836,
	16, 4834, 4833, 319, 4832, 4831, 4830, 4829, 4826, 335,
	4825, 4824, 4823, 4821, 4820, 372, 4819, 4818, 4817, 4814,
	4813, 4810, 68, 157, 4808, 4806, 616, 4803, 4799, 4798,
	4792, 4790, 4789, 4788, 368, 317, 4787, 4786, 4785, 305,
	207, 4784, 318, 4783, 4782, 4780, 4777, 4774, 4773, 4771,
	4769, 4766, 4765, 4752, 4748, 4746, 4745, 4744, 4743, 4739,
	4730, 4729, 4728, 4726, 4715, 4714, 4713, 4712, 4711, 4707,
	4703, 4694, 4687, 4686, 4685, 4684, 4683, 4680, 4679, 4678,
	4677, 4676, 4675, 4673, 4669, 4667, 4664, 299, 254, 187,
	4663, 4662, 4661, 4660, 4659, 4658, 316, 315, 4655, 4654,
	4653, 4651, 4649, 3920, 4646, 4645, 4644, 4642, 4640, 4638,
	4637, 4635, 4633, 139, 5, 41, 4629, 4628, 149, 108,
	103, 104, 123, 121, 4626, 4625, 141, 4624, 158, 142,
	4623, 138, 126, 29, 38, 310, 292, 9657, 290, 4622,
	4620, 4604, 291, 236, 4603, 288, 4600, 4599, 4598, 4596,
	4595, 4587, 83, 65, 249, 4583, 172, 4582, 4581, 166,
	209, 218, 215, 211, 208, 93, 67, 125, 101, 74,
	52, 23, 92, 252, 28, 256, 3, 6, 306, 4580,
	301, 10, 173, 9, 39, 4579, 4572, 4571, 4566, 4531,
	161, 4565, 314, 297, 204, 4564, 4562, 4559, 1383, 4555,
	4553, 62, 262, 124, 147, 133, 96, 156, 4551, 188,
	203, 46, 4550, 286, 79, 4546, 4545, 120, 110, 11014,
	8509, 4543, 4540, 164, 99, 136, 8975, 216, 177, 239,
	114, 155, 201, 202, 4539, 244, 4536, 176, 194, 213,
	284, 4535, 112, 4533, 3968, 132, 220, 189, 6491, 4530,
	4529, 4528, 106, 4527, 122, 4525, 4524, 78, 25, 1,
	2, 167, 50, 45, 44, 4521, 30, 154, 60, 32,
	4520, 31, 4518, 4517, 4516, 4515, 59, 4514, 63, 199,
	4513, 4512, 325, 4511, 116, 75, 134, 4510, 56, 268,
	4509, 269, 163, 4508, 4507, 224, 238, 233, 223, 260,
	4506, 80, 279, 4504, 4502, 4501, 4498, 4496, 327, 160,
	8, 159, 4494, 4492, 193, 4491, 69, 289, 241, 4490,
	73, 4489, 4488, 217, 70, 175, 320, 192, 275, 146,
	276, 240, 280, 4485, 4483, 4480, 227, 4479, 4478, 267,
	196, 4477, 4476, 274, 332, 111, 58, 7, 205, 105,
	285, 91, 235, 197, 4475, 246, 182, 4474, 191, 4473,
	115, 4472, 326, 221, 258, 55, 12, 15, 127, 130,
	85, 19, 283, 195, 251, 153, 4470, 8534, 2886, 3707,
	281, 4469, 183, 152, 98, 148, 190, 312, 100, 4468,
	4466, 3656, 4465, 4464, 4463, 4462, 231, 4461, 4459, 257,
	181, 180, 4458, 168, 229, 4457, 128, 89, 61, 27,
	169, 109, 321, 145, 273, 226, 308, 4455, 4453, 4452,
	230, 4451, 87, 129, 247, 4450, 245, 313, 77, 4449,
	184, 4448, 186, 2782, 97, 185, 4447, 271, 4446, 4445,
	4444, 4443, 4442, 4441, 4440, 4439, 287, 4438, 4437, 4436,
	49, 237, 4432, 234, 214, 259, 71, 84, 232, 113,
	387, 131, 2692, 243, 66, 4, 4431, 822, 4430, 5189,
	76, 4429, 0, 14167, 12069, 15254, 4428, 4426, 15512, 4423,
	6490, 4422, 4421, 4420, 261, 94, 4419, 4417, 4416, 150,
	4415, 107, 4414, 4412, 90, 4408, 33, 21, 26, 40,
	36, 1379, 962, 4407, 4405, 47, 170, 34, 4403, 324,
	277, 4402, 4400, 4399, 4396, 118, 4395, 57, 4394, 51,
	4393, 4392, 64, 18, 37, 4391, 4390, 272, 198, 3865,
	206, 178, 4389, 151, 4388, 4387, 296, 82, 162, 4386,
	4385, 300, 250, 253, 119, 4384, 302, 4382, 242, 4381,
	86, 48, 4380, 4379, 295, 137, 135, 54, 298, 165,
	42, 4378, 4377, 4376, 4375, 225, 4374, 4373, 4369, 4364,
	4363, 140, 174, 4362, 95, 4359, 4358, 4357, 53, 270,
	222, 4356, 22, 4354, 4353, 4352, 263, 266, 307, 212,
	255, 4351, 4350, 210, 4349, 4348, 4346, 309, 4345, 4344,
	3918, 334, 4343, 43, 4341, 4340, 4339, 11, 4338, 4334,
	248, 3659, 4333, 4332, 20, 4331, 228,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 4, 4, 4, 4,
	4, 4, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 14, 14, 10, 10, 10, 10, 11, 11, 11,
	11, 11, 63, 63, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	20, 20, 20, 20, 20, 20, 20, 42, 44, 43,
	37, 37, 38, 38, 39, 40, 40, 45, 47, 46,
	48, 49, 49, 50, 50, 50, 13, 13, 13, 9,
	9, 9, 9, 9, 9, 9, 9, 9, 23, 23,
	51, 51, 24, 24, 53, 53, 25, 25, 54, 54,
	671, 671, 671, 672, 672, 673, 673, 673, 28, 56,
	58, 58, 478, 478, 21, 22, 22, 22, 22, 674,
	674, 674, 674, 41, 29, 57, 34, 34, 34, 34,
	34, 246, 246, 246, 246, 27, 27, 52, 52, 292,
	292, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 670, 670, 294, 294, 293, 279, 279, 280, 280,
	281, 281, 675, 675, 295, 295, 295, 296, 296, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 564,
	564, 564, 595, 595, 595, 595, 597, 597, 722, 722,
	723, 723, 723, 723, 723, 155, 155, 452, 452, 452,
	72, 72, 72, 72, 72, 660, 660, 248, 248, 248,
	250, 250, 249, 249, 249, 249, 249, 249, 249, 249,
	96, 96, 97, 97, 287, 287, 286, 286, 286, 286,
	286, 286, 286, 681, 681, 680, 718, 718, 679, 679,
	682, 682, 682, 247, 247, 247, 93, 93, 114, 114,
	151, 151, 151, 151, 151, 151, 151, 151, 152, 152,
	153, 153, 691, 691, 691, 251, 251, 251, 253, 253,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 258, 19, 19, 134, 134,
	134, 134, 134, 134, 134, 129, 129, 599, 599, 600,
	600, 242, 242, 243, 243, 243, 243, 244, 244, 245,
	245, 245, 87, 87, 255, 255, 257, 257, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 75, 75, 75, 75, 75, 76, 76, 76, 76,
	76, 76, 77, 77, 77, 77, 77, 77, 78, 78,
	85, 85, 85, 85, 85, 85, 85, 85, 219, 219,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 92, 92, 92, 92, 92, 103,
	103, 692, 692, 693, 693, 711, 697, 697, 698, 698,
	701, 701, 701, 702, 702, 702, 702, 702, 710, 710,
	710, 710, 710, 704, 703, 705, 705, 706, 706, 708,
	708, 708, 708, 708, 709, 709, 709, 709, 709, 709,
	709, 709, 709, 709, 709, 709, 709, 709, 709, 709,
	709, 696, 712, 713, 713, 714, 714, 715, 715, 715,
	122, 122, 122, 717, 717, 716, 716, 699, 699, 700,
	700, 67, 707, 707, 725, 725, 68, 69, 70, 71,
	694, 694, 724, 724, 724, 724, 724, 724, 724, 724,
	724, 724, 724, 724, 724, 724, 724, 724, 724, 726,
	726, 727, 727, 728, 728, 728, 728, 728, 728, 728,
	728, 728, 728, 728, 728, 728, 728, 728, 728, 728,
	728, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	104, 104, 410, 410, 373, 373, 105, 105, 105, 106,
	106, 107, 107, 107, 107, 89, 89, 89, 657, 657,
	658, 664, 729, 729, 555, 555, 554, 554, 109, 109,
	451, 451, 110, 110, 110, 110, 110, 110, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 120, 120, 120, 120, 120, 121, 121,
	121, 118, 118, 118, 115, 115, 115, 113, 113, 113,
	119, 119, 119, 663, 359, 359, 117, 117, 117, 116,
	116, 116, 426, 426, 427, 429, 428, 123, 123, 123,
	123, 374, 124, 124, 124, 124, 124, 124, 124, 124,
	127, 127, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 557, 557, 5, 5, 285,
	285, 284, 284, 284, 284, 6, 6, 6, 290, 290,
	289, 288, 125, 125, 125, 519, 519, 130, 130, 130,
	467, 467, 131, 131, 131, 131, 131, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 667, 667, 419, 419, 322,
	322, 322, 322, 143, 143, 143, 143, 144, 144, 144,
	144, 145, 145, 228, 228, 161, 161, 161, 161, 160,
	160, 160, 160, 160, 160, 160, 160, 79, 79, 79,
	80, 80, 81, 81, 82, 82, 83, 83, 84, 84,
	84, 84, 84, 164, 164, 33, 33, 33, 33, 165,
	165, 719, 719, 167, 163, 163, 163, 163, 163, 163,
	163, 162, 162, 166, 166, 166, 166, 168, 170, 170,
	170, 170, 170, 169, 169, 169, 169, 169, 171, 171,
	589, 589, 437, 437, 587, 587, 611, 611, 588, 588,
	380, 380, 380, 380, 380, 381, 381, 381, 598, 598,
	598, 598, 598, 598, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 229, 229, 229, 230, 230, 235,
	235, 236, 236, 236, 237, 237, 237, 234, 234, 234,
	231, 231, 232, 232, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 240, 240, 238, 238, 239, 239,
	731, 731, 730, 730, 241, 241, 241, 241, 241, 200,
	200, 200, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 438, 438, 203, 203, 203,
	187, 187, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 254, 254, 254, 254, 254, 179, 179, 179, 179,
	179, 179, 179, 179, 180, 180, 180, 174, 174, 189,
	189, 189, 189, 189, 181, 181, 182, 182, 182, 183,
	183, 183, 183, 211, 211, 186, 186, 186, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 175, 175, 175,
	175, 191, 191, 191, 191, 474, 474, 474, 217, 217,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 214, 214, 214, 214,
	214, 214, 683, 683, 684, 684, 684, 207, 207, 207,
	207, 207, 207, 535, 535, 201, 201, 201, 201, 206,
	206, 206, 206, 185, 185, 185, 185, 209, 209, 209,
	209, 457, 457, 198, 198, 198, 199, 199, 199, 204,
	204, 216, 205, 411, 411, 202, 202, 208, 208, 208,
	208, 210, 210, 210, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 177, 177, 177, 177,
	178, 178, 178, 178, 212, 212, 197, 197, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 732,
	732, 193, 193, 193, 192, 192, 192, 192, 195, 195,
	196, 196, 196, 196, 196, 196, 196, 194, 184, 215,
	665, 665, 661, 661, 661, 661, 661, 661, 661, 661,
	661, 661, 659, 659, 659, 659, 659, 659, 659, 659,
	659, 662, 662, 662, 662, 662, 666, 666, 135, 135,
	135, 135, 135, 135, 135, 146, 146, 146, 146, 146,
	146, 146, 149, 149, 136, 136, 136, 136, 136, 136,
	136, 139, 139, 137, 137, 137, 137, 138, 138, 98,
	98, 98, 98, 98, 18, 18, 18, 99, 99, 313,
	313, 263, 263, 263, 398, 398, 264, 264, 388, 388,
	388, 388, 259, 259, 260, 260, 261, 262, 262, 100,
	100, 733, 733, 733, 676, 676, 676, 677, 677, 677,
	677, 677, 677, 382, 382, 383, 383, 499, 499, 499,
	499, 499, 386, 386, 386, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 396, 397, 397, 389, 389, 395,
	394, 394, 393, 393, 392, 392, 390, 391, 391, 391,
	400, 400, 399, 402, 402, 401, 498, 620, 620, 622,
	622, 622, 622, 622, 622, 622, 624, 624, 624, 624,
	624, 624, 624, 624, 624, 624, 624, 624, 624, 624,
	624, 624, 624, 475, 475, 734, 734, 735, 736, 618,
	618, 618, 618, 618, 619, 614, 614, 615, 615, 615,
	615, 615, 384, 384, 385, 385, 385, 385, 616, 617,
	417, 417, 539, 621, 621, 623, 623, 625, 737, 737,
	737, 737, 737, 737, 738, 738, 738, 497, 497, 496,
	496, 495, 495, 408, 408, 626, 626, 626, 626, 627,
	627, 627, 627, 627, 630, 629, 628, 628, 628, 628,
	628, 102, 102, 102, 454, 454, 453, 453, 455, 455,
	455, 455, 455, 455, 455, 455, 455, 455, 455, 455,
	455, 455, 455, 455, 455, 455, 224, 224, 325, 325,
	325, 95, 95, 95, 15, 15, 15, 15, 15, 15,
	15, 340, 340, 16, 16, 16, 16, 678, 678, 678,
	101, 101, 101, 101, 101, 101, 406, 406, 406, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 669, 669, 668, 668, 326,
	326, 740, 740, 108, 108, 108, 108, 108, 108, 108,
	108, 558, 558, 559, 559, 94, 94, 94, 94, 94,
	476, 476, 473, 473, 472, 472, 416, 416, 537, 537,
	537, 538, 330, 330, 331, 331, 282, 282, 282, 477,
	477, 477, 36, 35, 26, 26, 30, 30, 31, 31,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 32,
	32, 60, 60, 60, 60, 61, 61, 61, 61, 64,
	64, 65, 65, 59, 59, 59, 59, 62, 62, 55,
	55, 66, 66, 66, 66, 66, 685, 687, 687, 686,
	686, 690, 690, 690, 690, 690, 690, 688, 688, 361,
	361, 689, 689, 720, 720, 721, 721, 142, 142, 147,
	147, 147, 147, 147, 148, 148, 148, 148, 150, 150,
	150, 150, 159, 159, 220, 220, 220, 220, 220, 220,
	220, 73, 73, 86, 86, 157, 742, 742, 742, 158,
	158, 158, 221, 221, 221, 221, 222, 222, 223, 223,
	741, 741, 323, 323, 492, 492, 493, 493, 743, 743,
	494, 494, 494, 494, 494, 316, 315, 317, 317, 318,
	318, 91, 91, 91, 304, 304, 303, 306, 306, 305,
	307, 307, 308, 308, 301, 301, 601, 601, 310, 310,
	310, 311, 311, 297, 297, 298, 298, 299, 299, 300,
	300, 314, 314, 596, 596, 744, 744, 133, 133, 133,
	227, 227, 372, 372, 372, 485, 485, 485, 409, 409,
	337, 337, 491, 491, 491, 491, 491, 450, 450, 450,
	226, 226, 424, 424, 440, 440, 441, 441, 551, 551,
	442, 140, 140, 141, 141, 156, 156, 267, 267, 265,
	265, 265, 265, 265, 265, 265, 265, 272, 272, 273,
	273, 274, 274, 275, 276, 276, 276, 276, 430, 430,
	277, 277, 277, 266, 266, 266, 268, 268, 268, 268,
	268, 268, 268, 271, 271, 271, 271, 278, 278, 278,
	270, 270, 637, 637, 637, 639, 639, 641, 641, 640,
	640, 636, 636, 638, 638, 739, 739, 456, 456, 456,
	405, 407, 403, 403, 404, 404, 414, 414, 412, 413,
	413, 415, 415, 536, 536, 536, 283, 283, 283, 447,
	447, 447, 447, 448, 448, 481, 481, 479, 479, 479,
	479, 480, 480, 482, 482, 482, 483, 483, 484, 484,
	444, 444, 445, 445, 446, 446, 446, 446, 515, 515,
	269, 269, 269, 421, 421, 421, 422, 422, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 506,
	506, 504, 504, 504, 504, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 541, 542, 542, 423, 423, 543,
	488, 488, 489, 489, 486, 486, 487, 487, 490, 490,
	655, 655, 655, 656, 656, 534, 534, 544, 544, 544,
	544, 544, 544, 530, 530, 531, 531, 532, 532, 533,
	533, 552, 553, 553, 460, 460, 460, 460, 458, 458,
	461, 461, 461, 461, 461, 459, 459, 545, 545, 545,
	545, 449, 449, 225, 225, 546, 546, 546, 546, 547,
	548, 548, 549, 549, 500, 501, 501, 560, 560, 560,
	560, 562, 420, 420, 420, 420, 420, 613, 612, 612,
	561, 561, 561, 561, 561, 561, 561, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 577,
	577, 577, 577, 577, 577, 577, 563, 563, 563, 563,
	563, 563, 563, 567, 567, 567, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 568, 568, 573,
	573, 574, 574, 574, 569, 570, 575, 575, 575, 575,
	745, 745, 579, 579, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 565, 565, 565, 572, 572, 572, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 468, 468, 470, 470, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 509, 509, 509,
	509, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 631, 631, 631, 631,
	631, 631, 631, 631, 511, 511, 634, 634, 635, 635,
	632, 632, 632, 632, 632, 632, 632, 632, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 632, 632, 632,
	632, 632, 632, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 642, 642, 643, 643, 645, 645, 646, 646, 647,
	648, 648, 648, 649, 650, 650, 644, 644, 651, 651,
	651, 651, 652, 652, 653, 653, 653, 653, 653, 654,
	654, 654, 654, 654, 521, 521, 522, 522, 528, 528,
	528, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 379, 379, 378, 327,
	327, 327, 327, 327, 327, 435, 435, 433, 433, 433,
	436, 436, 434, 434, 432, 432, 431, 431, 518, 518,
	516, 516, 520, 520, 462, 462, 578, 578, 578, 578,
	578, 578, 578, 578, 463, 463, 463, 471, 464, 464,
	465, 465, 465, 465, 465, 512, 513, 466, 466, 466,
	514, 514, 523, 527, 527, 526, 525, 525, 524, 524,
	502, 502, 503, 503, 443, 443, 746, 746, 439, 439,
	550, 550, 550, 550, 607, 607, 376, 376, 425, 425,
	375, 375, 367, 367, 368, 368, 368, 368, 418, 418,
	529, 529, 580, 580, 581, 581, 582, 582, 583, 583,
	584, 585, 586, 517, 517, 348, 347, 334, 335, 346,
	345, 344, 333, 336, 341, 342, 343, 338, 339, 355,
	354, 353, 302, 309, 360, 362, 362, 365, 365, 366,
	364, 363, 363, 350, 351, 352, 556, 332, 369, 369,
	370, 370, 370, 371, 371, 371, 371, 328, 328, 328,
	329, 329, 356, 356, 357, 358, 358, 349, 349, 349,
	319, 319, 319, 320, 320, 321, 321, 594, 594, 591,
	591, 591, 592, 592, 592, 695, 593, 593, 593, 593,
	590, 590, 590, 590, 590, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 603,
	603, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 605,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	609, 609, 609, 609, 609, 609, 609, 609, 609, 609,
	610, 610, 610, 610,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 9, 7, 9,
	5, 6, 8, 7, 7, 9, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 1, 1, 1, 0, 1, 6, 6,
	4, 6, 2, 1, 4, 8, 7, 10, 9, 4,
	4, 4, 3, 4, 4, 4, 7, 7, 9, 8,
	9, 5, 3, 5, 7, 4, 12, 4, 12, 1,
	3, 5, 5, 2, 5, 3, 6, 4, 4, 4,
	6, 5, 6, 5, 6, 4, 8, 3, 8, 4,
	2, 3, 10, 3, 6, 4, 3, 1, 3, 4,
	4, 2, 1, 1, 3, 1, 3, 2, 4, 3,
	2, 3, 2, 0, 1, 1, 0, 2, 0, 7,
	10, 6, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 1, 1, 1, 1, 3, 1, 3,
	6, 4, 6, 7, 9, 6, 2, 2, 3, 0,
	8, 6, 8, 7, 2, 0, 1, 2, 5, 0,
	1, 3, 3, 1, 3, 1, 3, 3, 3, 3,
	12, 3, 5, 4, 1, 3, 3, 3, 3, 2,
	4, 4, 4, 1, 1, 2, 1, 4, 1, 0,
	3, 3, 0, 4, 6, 0, 6, 4, 4, 4,
	5, 7, 6, 8, 7, 9, 8, 2, 1, 3,
	1, 3, 3, 3, 0, 2, 5, 0, 1, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 1, 1, 1, 3, 3, 6, 4,
	9, 7, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 7, 5, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 2, 2, 1, 2, 3, 3, 4,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 4, 3,
	6, 6, 6, 6, 6, 8, 4, 4, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 6, 3, 8, 5, 3, 12,
	4, 2, 0, 1, 0, 1, 1, 0, 1, 3,
	1, 3, 3, 3, 3, 2, 2, 1, 1, 1,
	1, 2, 1, 1, 1, 1, 0, 1, 2, 2,
	2, 1, 1, 1, 4, 5, 1, 1, 1, 1,
	3, 3, 2, 2, 1, 2, 2, 2, 2, 1,
	1, 1, 2, 1, 1, 3, 0, 1, 4, 0,
	4, 6, 3, 1, 3, 2, 1, 3, 2, 1,
	3, 5, 1, 2, 1, 0, 6, 6, 6, 8,
	1, 0, 4, 3, 3, 4, 3, 4, 4, 4,
	7, 3, 3, 4, 3, 3, 3, 3, 3, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 5, 3, 3, 3, 3, 3, 3,
	3, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 1, 2, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 1, 3, 0, 1,
	2, 2, 1, 2, 1, 6, 10, 5, 1, 3,
	3, 1, 1, 0, 2, 0, 2, 0, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 3,
	5, 3, 1, 3, 1, 1, 1, 2, 2, 2,
	2, 1, 2, 2, 5, 3, 3, 6, 6, 3,
	1, 1, 1, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 3, 4, 3, 1,
	2, 3, 2, 2, 2, 4, 6, 3, 1, 2,
	2, 7, 5, 7, 2, 3, 0, 3, 5, 2,
	3, 0, 2, 3, 2, 3, 2, 7, 4, 7,
	8, 8, 9, 11, 11, 11, 6, 2, 6, 9,
	4, 7, 7, 10, 7, 10, 10, 10, 13, 10,
	13, 5, 8, 5, 2, 2, 1, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 2,
	2, 4, 3, 2, 2, 1, 2, 1, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 3,
	5, 4, 6, 4, 3, 0, 1, 3, 2, 4,
	2, 4, 1, 6, 3, 4, 4, 3, 4, 1,
	1, 1, 1, 5, 4, 5, 3, 3, 2, 2,
	6, 3, 3, 3, 3, 4, 4, 3, 1, 3,
	3, 2, 2, 1, 3, 3, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 1,
	1, 1, 2, 1, 2, 2, 2, 9, 2, 1,
	0, 1, 1, 0, 1, 2, 0, 2, 2, 0,
	2, 2, 2, 2, 1, 2, 3, 3, 4, 4,
	4, 4, 3, 3, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 3, 3, 3, 2,
	3, 3, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 3, 6, 8, 3,
	3, 3, 4, 8, 6, 4, 5, 5, 5, 5,
	3, 0, 1, 1, 1, 1, 4, 4, 3, 4,
	4, 3, 4, 4, 1, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 5, 7, 4, 2,
	6, 4, 3, 2, 3, 4, 4, 3, 5, 3,
	6, 5, 6, 3, 5, 6, 3, 5, 3, 5,
	3, 3, 4, 4, 5, 0, 1, 1, 1, 1,
	3, 2, 3, 4, 3, 4, 3, 5, 3, 4,
	4, 3, 4, 5, 3, 4, 3, 4, 4, 5,
	3, 3, 1, 1, 0, 2, 3, 5, 4, 6,
	4, 6, 4, 1, 0, 3, 4, 4, 5, 7,
	5, 3, 3, 6, 4, 2, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 7, 5, 2, 0, 3, 3, 4, 3, 3,
	3, 5, 3, 3, 3, 4, 4, 4, 4, 5,
	6, 4, 4, 4, 4, 3, 4, 5, 4, 4,
	5, 6, 5, 5, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 4, 3, 4, 4, 5, 1,
	1, 10, 10, 3, 5, 5, 5, 3, 5, 6,
	4, 4, 5, 5, 2, 6, 3, 2, 5, 4,
	2, 0, 1, 1, 1, 1, 2, 3, 2, 2,
	3, 2, 1, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 7, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 3, 3,
	6, 5, 8, 3, 6, 6, 3, 12, 15, 1,
	0, 1, 2, 3, 0, 2, 0, 4, 0, 4,
	5, 4, 1, 1, 1, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 0, 1, 0, 1,
	1, 0, 1, 4, 1, 0, 3, 7, 7, 1,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 2, 2,
	3, 6, 4, 2, 3, 5, 5, 5, 2, 5,
	5, 2, 2, 2, 0, 1, 1, 3, 4, 10,
	11, 12, 9, 10, 5, 3, 1, 5, 9, 7,
	11, 3, 3, 0, 2, 4, 3, 3, 1, 6,
	1, 3, 1, 2, 0, 1, 2, 3, 0, 1,
	3, 3, 2, 2, 1, 1, 1, 4, 0, 3,
	0, 4, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 2, 3, 1, 4, 2, 3, 2,
	2, 4, 7, 3, 4, 6, 5, 7, 5, 5,
	3, 3, 0, 2, 2, 2, 2, 1, 1, 1,
	8, 10, 11, 8, 11, 5, 4, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	3, 0, 1, 8, 11, 3, 6, 6, 5, 3,
	4, 1, 0, 1, 3, 17, 20, 16, 19, 4,
	2, 0, 1, 0, 1, 0, 1, 3, 2, 4,
	2, 3, 1, 0, 2, 0, 1, 1, 0, 2,
	1, 0, 9, 6, 6, 8, 6, 8, 5, 7,
	2, 6, 7, 4, 4, 5, 2, 4, 6, 6,
	8, 6, 7, 8, 9, 6, 7, 8, 9, 6,
	8, 6, 8, 6, 7, 8, 9, 6, 8, 6,
	8, 6, 6, 8, 8, 4, 7, 3, 0, 7,
	10, 1, 1, 1, 1, 1, 2, 3, 0, 3,
	0, 3, 0, 1, 0, 2, 0, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 3, 2, 2, 2, 2, 1, 1, 0, 2,
	4, 2, 1, 2, 1, 2, 3, 2, 2, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 2, 3, 2, 2, 1,
	2, 15, 17, 3, 1, 0, 4, 1, 0, 4,
	1, 0, 2, 2, 3, 0, 1, 1, 4, 4,
	5, 1, 0, 3, 0, 3, 0, 3, 0, 3,
	0, 4, 0, 3, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 4, 8, 11, 7, 10, 2, 2, 0,
	10, 3, 2, 0, 1, 3, 1, 1, 3, 3,
	5, 6, 4, 5, 4, 1, 1, 3, 3, 1,
	2, 4, 4, 2, 3, 5, 5, 1, 3, 1,
	0, 1, 2, 3, 2, 4, 2, 3, 0, 2,
	0, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 8, 8, 8, 2, 4, 4, 4,
	2, 2, 2, 2, 3, 1, 3, 1, 2, 6,
	7, 1, 0, 1, 0, 1, 0, 1, 1, 0,
	1, 5, 1, 0, 1, 0, 1, 0, 3, 3,
	5, 1, 3, 3, 4, 5, 2, 2, 0, 2,
	2, 1, 1, 1, 0, 1, 0, 2, 2, 5,
	4, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 3, 1, 3, 3, 3, 2, 0,
	4, 2, 5, 3, 2, 0, 1, 3, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 1,
	3, 2, 4, 4, 0, 4, 4, 3, 4, 1,
	5, 3, 4, 5, 5, 1, 5, 1, 3, 2,
	3, 0, 1, 3, 0, 3, 1, 3, 1, 2,
	0, 2, 3, 1, 3, 2, 0, 3, 5, 6,
	4, 6, 4, 3, 2, 1, 0, 3, 2, 1,
	0, 5, 1, 0, 2, 2, 2, 1, 1, 0,
	1, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 2, 2, 1, 2, 3, 2, 4,
	1, 0, 1, 0, 2, 1, 0, 2, 5, 7,
	2, 1, 2, 4, 3, 5, 0, 1, 3, 5,
	1, 2, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 6, 6, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 5,
	4, 1, 2, 1, 4, 1, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 2, 5, 1, 4, 2,
	5, 1, 4, 3, 3, 0, 1, 2, 4, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 1, 0, 1, 4, 1, 3, 3, 3,
	5, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 3,
	3, 3, 2, 2, 3, 5, 4, 6, 3, 5,
	4, 6, 4, 6, 5, 7, 3, 3, 3, 3,
	3, 4, 3, 2, 4, 2, 3, 3, 4, 3,
	4, 3, 4, 5, 6, 6, 7, 6, 7, 6,
	7, 3, 4, 4, 1, 3, 1, 3, 3, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 5, 6, 6, 7, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 6, 1, 1, 1,
	1, 1, 1, 2, 1, 5, 5, 6, 3, 1,
	1, 1, 2, 2, 2, 4, 3, 5, 6, 8,
	6, 5, 4, 3, 2, 2, 4, 1, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 6, 8, 8, 6, 4, 6, 6,
	6, 4, 1, 3, 3, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 3, 3, 4, 3, 4, 3, 4, 3, 4,
	4, 3, 6, 5, 5, 5, 4, 4, 3, 4,
	3, 5, 0, 5, 0, 2, 0, 1, 3, 3,
	2, 2, 0, 6, 1, 0, 3, 0, 3, 3,
	3, 0, 1, 4, 2, 2, 2, 2, 2, 3,
	2, 2, 3, 0, 4, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 1,
	1, 1, 2, 1, 2, 2, 3, 1, 2, 3,
	2, 3, 2, 3, 1, 0, 1, 3, 1, 3,
	3, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 3, 1, 2, 3, 0,
	3, 3, 2, 2, 1, 2, 2, 3, 2, 1,
	1, 1, 5, 1, 2, 4, 2, 0, 1, 0,
	3, 5, 1, 0, 1, 2, 1, 0, 1, 3,
	3, 2, 1, 1, 1, 1, 1, 3, 1, 3,
	3, 1, 1, 1, 1, 5, 3, 1, 1, 3,
	1, 1, 1, 1, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 7, 1, 7, 5, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 669, -3, -221, -126, -123, -87, -85,
	-130, -131, -110, -132, -125, -154, -159, -140, -141, -142,
	-155, -161, -220, -229, -230, -231, -232, -241, -225, -222,
	-223, -4, -72, -74, -88, -109, -111, -124, -134, -133,
	-135, -143, -151, -146, -129, -79, -156, -160, -172, -224,
	-226, -227, 33, 32, 107, 85, 166, 138, 148, 220,
	423, 475, 487, 440, 153, 463, 445, -166, -167, 509,
	-73, -86, -158, -157, 78, 139, 184, 326, 455, 593,
	53, 158, -7, -15, -33, -19, 30, 49, -75, -76,
	-77, -78, 67, -95, -90, -104, -96, -89, -92, -93,
	-724, 110, -638, -112, -116, -150, -114, -728, 174, 241,
	-136, -137, -138, 405, -144, -145, 466, -147, -148, -149,
	469, 175, -81, -80, 168, -265, -267, -163, -162, -164,
	-228, -173, -174, -175, -176, -177, -178, -180, -181, -183,
	-211, -184, -185, -186, -187, -188, -189, -190, -194, -214,
	-191, -192, -193, -196, -195, -197, -202, -198, -199, -200,
	-201, -203, -204, -206, -207, -208, -209, -210, -212, -213,
	515, -205, -215, -182, -216, 583, 532, 87, 479, 21,
	-8, -9, -10, -11, -12, -13, -14, -18, -17, -66,
	-5, -6, -20, -97, -91, -94, -98, -99, -100, -108,
	-101, -102, -103, -637, -113, -115, -118, -120, -121, -117,
	-119, -122, 464, 640, -268, -266, 666, 645, 600, -179,
	-23, -28, -24, -25, -27, -29, -26, -30, -31, -32,
	-51, -56, -53, -54, -52, -55, -57, -58, -59, -60,
	-61, -62, -63, -64, -65, -35, -41, -42, -36, -37,
	-38, -39, -40, -43, -44, -45, -46, -47, -48, -49,
	-50, -21, -22, -34, -67, -68, -70, -69, -71, 627,
	636, -271, -269, -270, -278, 501, 608, 555, 669, 669,
	669, 669, 669, 669, 669, 669, 669, 669, 669, 669,
	669, 669, 669, 669, 669, 669, 669, 669, 669, 669,
	669, 669, 669, 669, 669, 669, -374, 2, -350, -356,
	-357, -358, -349, -319, -605, -610, 4, -602, -608, 183,
	257, 256, 258, 365, 21, 22, 24, 23, 25, 26,
	27, 28, 30, 31, 41, 43, 44, 45, 47, 48,
	49, 50, 51, 52, 53, 57, 59, 63, 64, 65,
	66, 67, 68, 69, 73, 78, 79, 84, 85, 86,
	87, 88, 89, 90, 91, 97, 94, 95, 96, 98,
	99, 101, 103, 104, 105, 106, 107, 108, 109, 111,
	112, 113, 115, 116, 117, 125, 126, 127, 128, 129,
	131, 138, 132, 139, 142, 136, 141, 137, 143, 144,
	146, 147, 148, 151, 152, 153, 155, 156, 157, 159,
	160, 161, 163, 164, 166, 167, 168, 171, 169, 172,
	170, 173, 174, 175, 176, 177, 180, 181, 189, 190,
	191, 196, 198, 199, 200, 202, 203, 206, 207, 208,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 221,
	225, 227, 228, 229, 230, 231, 232, 233, 239, 240,
	241, 243, 244, 245, 246, 247, 251, 252, 253, 254,
	261, 263, 269, 270, 275, 271, 276, 277, 279, 283,
	284, 285, 286, 287, 288, 289, 291, 293, 292, 297,
	295, 299, 300, 303, 304, 305, 306, 307, 308, 312,
	313, 309, 314, 315, 317, 318, 321, 319, 322, 323,
	320, 324, 327, 328, 329, 330, 331, 332, 333, 334,
	335, 336, 337, 338, 325, 326, 341, 339, 343, 344,
	345, 346, 347, 362, 364, 357, 358, 359, 351, 352,
	348, 353, 349, 350, 354, 355, 361, 356, 367, 368,
	369, 370, 373, 237, 262, 375, 376, 379, 381, 398,
	384, 385, 386, 389, 390, 393, 396, 397, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 410, 411,
	413, 414, 415, 417, 418, 419, 421, 423, 424, 426,
	427, 428, 430, 431, 432, 433, 434, 435, 436, 437,
	439, 440, 442, 441, 443, 445, 447, 448, 449, 455,
	456, 463, 457, 459, 460, 461, 462, 464, 465, 466,
	467, 468, 469, 473, 471, 472, 474, 475, 477, 478,
	479, 480, 481, 483, 485, 486, 490, 491, 494, 492,
	512, 513, 535, 487, 488, 489, 493, 495, 496, 497,
	498, 500, 499, 504, 502, 503, 505, 506, 507, 509,
	511, 514, 515, 517, 518, 519, 520, 521, 522, 523,
	526, 528, 529, 530, 531, 532, 533, 554, 534, 536,
	540, 541, 542, 543, 537, 538, 553, 545, 546, 547,
	548, 550, 551, 556, 557, 558, 559, 560, 561, 563,
	564, 566, 574, 587, 575, 576, 577, 578, 580, 583,
	584, 585, 586, 572, 588, 589, 592, 593, 594, 598,
	595, 599, 596, 597, 600, 602, 605, 606, 607, 614,
	612, 613, 615, 616, 618, 619, 617, 621, 622, 623,
	628, 629, 631, 632, 633, 37, 54, 55, 58, 60,
	62, 74, 75, 76, 80, 133, 134, 165, 178, 179,
	192, 209, 210, 222, 224, 234, 235, 236, 260, 264,
	265, 267, 273, 296, 372, 374, 391, 395, 412, 416,
	420, 422, 438, 482, 510, 524, 539, 544, 567, 568,
	569, 570, 579, 581, 608, 609, 610, 620, 630, -374,
	2, -350, 382, -343, 2, -319, -319, 423, 29, 2,
	29, 411, 503, 558, 560, 2, -667, -419, 551, 2,
	29, -322, -319, 110, 220, 501, -343, 2, -667, 220,
	-419, 26, 551, 2, -319, 2, 396, 177, 206, 23,
	28, 71, 82, 105, 151, 176, 201, -727, 398, 431,
	485, 505, 553, 564, 580, 2, 613, 318, 502, 555,
	251, 128, 585, 493, -678, 490, 491, 396, 429, 477,
	223, 601, -323, 2, 487, -319, 318, 2, 669, 101,
	79, 482, 506, -169, 2, 308, 575, -170, -171, -168,
	567, -589, 493, 477, 341, -319, 669, 669, 669, 29,
	-332, 2, -319, -332, 2, -233, 2, -332, -730, -240,
	-239, -238, 22, 456, 191, 289, 204, 242, 346, 426,
	202, 51, -233, 2, 555, 251, 493, 128, 551, -354,
	658, -356, -741, 2, 575, -741, 2, 669, 669, 2,
	555, 402, 613, 502, 206, 128, 435, 251, 585, 49,
	151, 28, 73, 561, 644, 493, -678, 641, 642, 318,
	135, -660, 2, -659, 4, -608, -602, -368, -367, 555,
	561, 128, -358, -349, 658, -357, 669, 669, 669, 669,
	2, 276, 277, 433, 432, 506, 507, 29, 669, 669,
	669, 669, 669, 490, 177, 2, 176, -692, 23, 28,
	71, 100, 105, 135, 201, 398, 431, 505, 553, 557,
	564, 580, -677, 534, 73, 493, -676, -678, 387, 318,
	585, 151, -472, 128, 308, 218, 594, 560, 558, 591,
	142, 263, 597, 596, 669, 669, 669, -127, 2, 666,
	33, 32, -126, -130, 153, 509, -258, 555, 268, 2,
	-319, 669, 669, 669, 2, 276, 277, 490, 491, 29,
	669, 669, 204, -659, 551, 2, 669, 669, 669, 2,
	29, 276, 277, 490, 491, 268, 2, 73, 496, 669,
	669, 669, 669, 669, 669, 669, 669, 669, 669, 669,
	669, 669, 669, 669, 669, 669, 669, 669, 669, 669,
	669, 669, 669, 669, 669, 669, 669, 669, 669, 669,
	669, 669, 669, 669, 669, 669, 669, 669, 2, -218,
	506, 534, 230, 50, 49, 79, 29, 430, 84, 403,
	129, 135, 160, 586, 221, 551, 251, 252, 284, 100,
	101, -474, 47, 277, 73, 276, 491, -683, 490, -535,
	556, 207, 495, 503, 550, 91, 289, 487, 575, 577,
	110, 602, 478, 633, 435, 436, 548, 449, 545, 309,
	169, 205, 4, 128, 341, 477, 508, 293, 292, 587,
	567, 308, 486, 406, 89, 669, -739, 2, 555, 575,
	2, -741, 2, -741, 2, -742, 575, 630, 669, 669,
	669, 669, 669, 669, 669, 669, 669, 669, 669, 669,
	669, 669, 669, 669, 669, 669, 669, 669, 669, 669,
	669, -266, -268, -267, 669, 669, 669, 669, 669, 669,
	669, 669, -218, 506, 2, 79, 29, 29, -412, -414,
	590, 266, 162, 388, -265, -267, 2, -637, 587, 506,
	-587, 2, -507, -611, -509, 656, 657, 649, 552, 72,
	-378, 363, 634, -521, 135, 591, 382, -610, -510, -523,
	165, 398, 482, -436, 256, 8, 9, 5, 6, 7,
	-328, -511, -517, 582, 182, 371, -371, 670, 10, 666,
	-634, -267, -522, 38, 224, 70, -591, -370, -329, -563,
	267, -369, -349, -631, -632, 4, -602, -603, -592, -566,
	-574, -573, -570, -569, -571, -577, -319, -605, 82, 119,
	120, 118, 123, 122, 311, 310, 124, 121, 508, 601,
	71, 37, 234, 235, 273, 372, 236, 80, -633, 152,
	-604, 264, 265, 524, 55, 438, 192, 134, 133, 374,
	60, 58, 609, -575, 130, 567, 568, 569, 570, 209,
	210, 62, 178, 179, 395, 420, 544, 579, 581, 222,
	296, 46, 114, 205, 259, 238, 272, 274, 278, 298,
	301, 342, 360, 366, 392, 394, 476, 516, -745, 610,
	539, 74, 75, 197, -639, 441, -640, -343, -639, 669,
	669, 671, 669, -403, -405, -407, 2, 29, 149, 666,
	2, -540, 2, -541, -545, -267, 290, -544, 666, -542,
	664, -350, 383, -635, 483, -631, -632, -328, -349, -370,
	4, -602, -604, 668, -408, 666, 128, 493, 555, 83,
	251, 100, 176, 206, -467, 666, -319, 29, 382, 571,
	671, -667, -419, -404, 428, -519, 666, 382, 385, 204,
	385, -667, 64, 98, -717, 234, 2, -716, -356, 322,
	2, 2, 2, 2, 2, 234, -319, 555, 127, 288,
	2, 2, 2, 2, 2, 2, 2, -428, 234, 2,
	-426, -356, 613, -429, 234, 2, -426, -427, 234, 2,
	-426, -473, 2, 93, -333, 234, 2, -319, -359, 234,
	2, -354, -365, 234, 2, -362, -319, -597, 234, 2,
	-595, 4, -602, 124, 508, -507, 2, -156, 2, 64,
	-319, 613, 2, 512, 2, 666, -169, 2, 76, 575,
	46, 506, -170, 2, -493, 2, -494, -315, -316, -317,
	-552, -318, 275, 427, 437, 637, 140, 363, 633, -719,
	204, 648, 571, -587, -587, -587, -437, 668, -235, 57,
	-332, -731, -730, -731, -585, 29, -580, 8, -581, 656,
	657, -585, -585, -731, -731, 2, 2, 2, 2, 2,
	-492, -493, 2, -545, 234, -350, 2, -347, -590, 4,
	-602, -608, -603, -609, -605, 29, 32, 33, 34, 36,
	38, 39, 40, 42, 61, 70, 71, 77, 81, 83,
	93, 100, 110, 118, 119, 121, 120, 122, 123, 124,
	135, 140, 145, 149, 150, 154, 158, 162, 182, 184,
	197, 201, 204, 220, 223, 226, 242, 255, 266, 268,
	290, 294, 302, 310, 311, 363, 371, 377, 382, 383,
	387, 388, 409, 425, 444, 470, 501, 508, 527, 549,
	555, 565, 571, 573, 582, 590, 591, 601, 603, 611,
	624, 625, 626, 627, -610, 82, 2, -545, 234, 2,
	-353, 234, -545, -356, 2, -716, 2, -333, 2, -507,
	-671, 563, 172, 457, 2, -375, 234, -350, -352, -356,
	-354, 2, 490, -599, 2, -594, 10, -593, 5, 4,
	-602, -608, -603, 2, 2, -507, 2, -510, 2, -521,
	29, -362, 2, -595, 234, 2, 29, 29, 613, 428,
	268, 571, 671, -425, -367, -368, -586, 4, 8, -418,
	-319, 668, -507, 2, -156, -139, 2, 197, -507, 234,
	2, -156, 234, 2, -507, 234, 2, -156, 234, 2,
	-319, 2, -679, 2, -718, -599, 234, 98, 234, -319,
	2, 206, -726, 485, 584, 322, 2, 2, 580, 2,
	105, 555, 127, 2, 2, 2, 2, 2, 2, 2,
	555, -338, 2, -319, 197, -554, 268, -362, 234, -363,
	2, 502, -740, 441, -595, 234, 2, 461, 613, -354,
	234, 2, -354, 251, 270, -333, 234, 2, 560, 558,
	560, 558, 204, 2, 268, 2, 268, 2, -546, 2,
	-547, -541, -548, 664, 383, -557, 2, -556, -593, 608,
	-127, 666, -127, 666, 506, 666, -599, -350, -350, -507,
	2, -156, -139, 2, -507, 2, -156, 2, -319, 2,
	-153, -599, -152, 666, 204, 602, -319, 2, -507, 2,
	-156, -139, 2, -507, 2, -156, 2, -258, 197, 2,
	128, 555, -218, 2, 197, 603, 2, 8, 2, 242,
	-254, -599, 495, 189, 436, 606, 2, 512, 2, 513,
	79, -474, 633, 79, 204, 2, 204, 2, -457, 2,
	627, 428, 204, 2, 2, -665, 2, 382, 221, 204,
	2, 204, 2, 204, 2, 204, 2, 204, 2, -217,
	507, 576, 554, 432, 277, 2, -156, 624, -139, 277,
	276, -507, 624, 2, -684, 197, 491, -507, 2, 574,
	286, 170, 204, -457, 2, 204, 2, 204, 2, 204,
	2, 5, 2, 43, 433, 535, 2, 275, 427, 535,
	2, 533, 2, -350, 555, 613, 502, 128, 252, 499,
	206, 29, 2, 490, 177, 2, 2, 94, 95, 204,
	2, 204, 2, 219, 204, 2, 449, 204, 555, -438,
	668, -438, 633, 2, -449, -545, -492, 571, -412, -414,
	-218, 512, 2, -272, -447, -274, 197, -479, -480, -275,
	302, 184, 377, -276, -456, 29, 149, -456, -456, 64,
	667, 667, -719, 587, 11, 12, 81, 43, 656, 657,
	658, 659, 195, 660, 661, 654, 655, 653, 646, 647,
	651, 281, 282, 102, 650, 648, 92, 316, 484, 185,
	186, 187, 188, 458, 249, 35, 250, 14, 15, 16,
	-378, 34, 387, 301, 634, 238, 516, 649, 17, 18,
	19, 272, 274, 366, 54, 242, -327, 398, -377, 552,
	72, -507, -507, -507, -507, -507, -507, -507, -507, 394,
	666, -443, -502, 664, -267, 666, 666, 666, 666, -586,
	-267, -507, -521, 667, -434, 666, -267, -521, -516, 666,
	482, 664, 666, -524, -507, 5, 5, 5, 666, 668,
	-642, 628, 197, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 422,
	-568, 666, -567, 666, -567, -567, -579, 614, 666, 666,
	-565, 666, 636, 629, 666, -565, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 614,
	561, 671, -639, -488, 666, 666, -439, -550, -507, 658,
	-439, -439, 382, -431, -507, 114, -460, 278, 342, 205,
	298, 476, 259, -504, 670, -504, -534, 636, -267, -542,
	-349, -267, -544, 666, -540, -534, -128, -586, -109, -124,
	-133, -156, -172, -226, -227, 658, -350, 666, 204, 666,
	668, -590, 204, -418, -333, -362, -350, -369, -370, -375,
	-344, -319, 2, 2, 148, -431, -661, 585, 493, 29,
	4, -608, -602, -368, 502, -367, 555, 128, 177, 206,
	-597, -322, 571, 39, -518, -560, -561, -613, 670, -612,
	-563, -572, 412, 416, -592, 267, 4, -602, -604, 264,
	265, 524, 55, 438, 192, 134, 133, 374, 60, 58,
	609, 567, 568, 569, 570, 209, 210, 62, 610, 539,
	74, 75, -661, 585, 493, 29, 502, 197, -597, 197,
	204, -597, 2, -599, 2, -295, 671, 69, 467, 165,
	-699, 666, 2, 165, 2, 2, 2, -319, -295, 165,
	671, -428, 234, -295, 165, -295, 165, -376, 234, -375,
	-295, 165, -295, 671, 165, -295, 671, 165, 668, 671,
	165, -597, 2, -473, -589, -431, 39, -493, 2, 135,
	4, 5, -743, 671, 300, -381, 315, 362, 229, 383,
	631, 375, 140, -598, 5, 4, -517, -529, 135, 308,
	267, -580, -582, 9, -583, 656, 657, -588, -587, 117,
	668, -590, -236, 262, 41, -332, -332, -731, -731, 8,
	8, -731, -731, -332, -332, -292, 459, 509, 397, -291,
	25, 30, 153, 253, 347, 606, 171, -393, 254, 464,
	-390, 402, 165, 528, 595, -671, -674, 489, 563, 172,
	457, 96, 375, 509, 397, 459, 165, -453, -455, 39,
	126, 347, 396, 65, 245, 320, 321, 532, 465, 620,
	165, 509, 397, 459, -707, 459, 509, 397, -694, -709,
	347, 66, 472, 538, 240, 531, 622, 177, 500, 297,
	363, 108, 483, 546, 399, 397, -16, -308, 25, 153,
	-310, -303, 509, 30, -674, 106, 459, 645, 640, 464,
	408, 547, 425, -674, -671, 295, -673, 623, 361, -294,
	528, 595, -671, -478, -674, 489, 459, -293, 363, 621,
	-395, -390, 402, 165, 670, 25, 153, 459, 509, 397,
	-722, -723, 30, -586, 2, -290, 242, -289, 25, -285,
	-284, 25, 153, 509, 598, -165, -145, -164, 464, 509,
	-165, 2, 459, 397, -668, -340, -636, 242, 627, 165,
	-340, -340, -545, 234, -688, 197, 2, -681, -152, 291,
	5, 10, -599, -152, -425, 671, 671, -590, 658, 491,
	490, 165, 165, 165, 165, 277, 197, 363, -718, 2,
	363, 627, -711, 2, -356, -727, 2, 2, 2, 2,
	2, 2, 2, -350, 234, -410, 382, -657, -658, -729,
	555, -245, 627, -599, 363, 46, -353, 234, 2, -356,
	613, -668, 363, -676, -355, 234, -350, 39, 666, 363,
	2, -473, 2, 251, -636, 363, -546, -372, -350, -541,
	-372, 509, -343, 39, -504, -350, 667, 671, -557, -557,
	-599, -245, 204, 666, -258, 627, 627, 277, -553, 671,
	-552, 242, -600, -599, -153, -599, 462, 204, 277, -599,
	-657, -333, 2, -350, 2, 555, 279, -152, 204, 242,
	-245, -599, -599, -599, -599, -589, 29, 513, 2, -217,
	507, 576, 95, 513, 2, -350, 555, 128, 251, 85,
	-688, 197, 2, -319, -666, 197, -662, 477, 493, 585,
	-661, -666, -350, 128, -350, 128, -350, 128, -350, -350,
	2, 2, 2, 2, 2, 90, 2, -156, -507, 2,
	90, 2, 49, 529, -684, 197, 2, 574, 2, 574,
	2, -319, -319, -319, -319, 377, 534, 300, 627, -350,
	-350, -353, -351, -356, 204, 252, -356, 495, 556, 586,
	491, 177, -507, 2, 98, -732, 2, 204, 197, 2,
	555, 251, 555, 251, 128, 204, 79, 128, 29, 204,
	555, 488, 668, 4, -295, 671, -323, -272, -447, -589,
	-448, -447, -273, -272, -275, 197, 437, 596, 347, 514,
	283, -480, -479, 29, -507, -484, 191, 346, -507, -482,
	-509, 656, 657, -581, -583, -430, 375, -266, -266, -266,
	-415, -536, -507, 425, 258, -588, -719, -562, -560, -560,
	-348, -590, 567, -507, -507, -507, -507, -507, -507, -507,
	-507, -507, -507, -507, -507, -507, -507, -507, -507, -507,
	-507, -507, -507, -507, -507, -507, -507, -507, -507, -507,
	-507, -507, -507, -507, -507, -507, -507, -507, -507, 301,
	238, 516, 54, 242, -507, 571, -507, -507, -507, -507,
	339, 363, 371, 582, 182, 592, 149, 375, -746, 549,
	42, -514, -267, -435, 666, -528, 36, 527, 29, -521,
	666, 2, -502, -507, -503, -379, -377, -319, 656, 657,
	658, 659, 660, 661, 646, 647, 648, 14, 15, 16,
	651, 655, 653, 654, 195, 102, 650, 316, 484, 92,
	185, 186, 187, 188, 281, 282, 17, 18, 19, 35,
	649, -432, -431, -431, 667, 611, 29, 149, 658, 2,
	667, 671, 39, 667, -507, -432, -520, -516, -431, -527,
	-526, 624, -468, -469, 632, 325, 131, 232, 323, -470,
	498, -584, 8, -590, 658, -643, 190, 223, 666, 667,
	2, 667, 2, 667, -507, 2, 667, -507, 2, 667,
	-507, 2, 667, -507, 2, 667, 2, 667, 2, -507,
	-507, -507, -507, -507, -507, -507, -431, 8, -584, 666,
	-584, -584, -584, 567, 567, -584, -584, -584, -576, 412,
	413, 414, 415, 303, 304, 305, 306, 416, 417, 418,
	419, 331, 332, 333, 334, 327, 328, 329, 330, 335,
	336, 337, 338, 214, 215, 216, 217, 210, 211, 212,
	213, -576, -462, 2, -578, -431, 4, 632, 325, 131,
	232, 323, 498, 5, -462, 2, -463, 2, -507, -431,
	-464, -508, -509, 656, 657, 649, -378, -465, 2, -507,
	-432, -507, 61, 294, 573, -466, -507, 204, -431, -431,
	2, -431, 2, -510, 2, -640, 39, -489, -319, -431,
	-421, 671, 204, 39, -607, 4, -606, 44, 66, 108,
	137, 144, 177, 240, 261, 271, 297, 399, 471, 472,
	500, 531, 546, 578, 622, 510, -421, -421, 666, 667,
	671, -461, 227, 319, 314, 270, -461, -540, -460, 278,
	-458, 392, -458, -458, -534, -334, 664, 673, -590, -534,
	-531, -530, 39, -343, 389, -534, -534, 668, 667, -533,
	-532, 39, -343, 665, -655, 666, 669, 669, 669, 669,
	669, -350, 666, -431, -590, 668, 536, 2, 667, 272,
	272, 272, 272, 272, 382, 483, 667, 571, -663, -359,
	-365, 503, 556, 207, -425, 671, -425, -418, 98, -717,
	627, -597, -126, 384, 667, 671, -420, 38, 664, 668,
	-584, 2, 2, -469, 666, 204, -663, -365, 556, 503,
	207, 2, -667, 551, -419, -597, 571, -716, -717, -700,
	667, -702, -710, -695, -704, 242, 391, 260, 611, -591,
	-560, 4, -602, -319, 2, -428, -356, -295, 165, -429,
	-427, -295, 671, 165, -333, -354, -359, -362, -365, -319,
	-595, -597, -295, -355, -719, 667, 575, -494, -380, 437,
	526, 460, 504, 551, 9, 9, 671, -590, -237, 492,
	347, -332, -332, -332, -332, 671, -720, 100, 571, 83,
	666, 493, -312, 309, 571, -498, 234, 83, -614, 100,
	-336, -615, -319, 77, 591, 425, 201, 163, -720, 100,
	425, -720, 100, 2, 253, 100, 509, 534, 666, 29,
	64, -545, 43, 43, 29, -672, -673, 295, 204, 633,
	555, 251, 493, 571, 571, -545, -455, -560, 126, 320,
	321, 64, -585, -585, 64, -585, -585, -585, 627, -585,
	627, -353, -545, 493, 571, 571, -725, -709, 467, 509,
	571, 493, 571, 144, 382, 371, 500, 137, 271, 297,
	-529, -529, -319, 571, 447, 545, 447, 545, 499, -303,
	-305, -170, 499, 545, 309, 571, 571, -170, 29, -218,
	468, 135, -744, 648, 447, 295, -673, 571, 204, 671,
	43, 43, 29, -672, 204, 571, 621, -375, -334, 607,
	45, 607, 45, 607, 571, 45, 493, 571, 671, 45,
	-287, -286, 509, -289, -599, -288, 345, -284, -657, -657,
	-244, -243, -319, 5, -418, 79, 571, 571, -16, 509,
	-669, -324, 113, 353, 313, 354, 104, 350, 103, 349,
	111, 351, 112, 352, 615, 367, 616, 368, 68, 348,
	324, 355, 530, 356, 619, 369, -325, -326, 156, 404,
	605, 128, -595, -16, -16, 509, 397, 459, 165, -689,
	242, 29, -678, 242, -553, 242, -553, -367, -319, 668,
	-156, -507, -507, -156, -507, -156, 49, 165, 39, 165,
	2, 666, 288, 666, -384, 363, 204, -418, -554, 671,
	-350, 39, -244, 386, 165, -595, -454, -453, 363, -355,
	234, 2, 165, -740, -408, 363, 159, 666, 435, 2,
	165, -335, 234, -320, -319, -473, -297, 559, 165, -451,
	603, -485, -156, 666, 135, 39, -485, -440, -441, -551,
	-442, -336, 666, -343, -504, -127, -556, 667, 667, 667,
	-258, -409, -337, -336, 127, 439, 439, -251, 627, -152,
	-153, 667, 671, -553, 242, 537, -153, -599, -245, -245,
	-553, -553, -350, 197, -599, -152, -245, -245, -245, -245,
	2, 2, 2, 2, -457, -350, -333, -375, -350, -361,
	242, 29, 668, -597, -597, -365, -366, -364, -319, -359,
	-457, -333, -457, -333, -457, -333, -457, -457, -156, -507,
	534, 2, 506, 197, 197, 668, -457, 668, 8, -411,
	470, 5, -350, 204, 2, 99, -599, 2, 435, 128,
	555, 402, 251, -350, -375, -350, -375, -333, 128, -333,
	129, 128, -350, 4, -545, -448, -273, 383, 283, 514,
	-482, -483, -509, 482, 483, -483, 482, 483, 8, 9,
	8, 9, -277, 518, 370, -427, 671, -282, 40, 145,
	283, -350, -588, 633, 161, -507, -507, 571, -746, 549,
	-514, 161, -507, 339, 371, 582, 182, 592, 149, 375,
	204, 666, -508, -508, 667, -433, -507, -507, 665, 675,
	667, 668, 667, -414, 671, -412, -507, -431, -431, 667,
	668, -431, -418, 665, 665, 671, 667, -525, -526, 154,
	-507, 571, 571, 571, 571, 666, 667, 668, -648, 393,
	666, 666, -507, 667, 667, 667, 667, 39, 671, 671,
	671, 667, 671, 671, 671, 667, 667, 667, 671, -584,
	667, 667, 667, 633, 633, 667, 667, 667, 667, 671,
	667, 671, 667, 204, 667, 667, -471, 409, 667, 11,
	12, 656, 657, 658, 659, 195, 660, 661, 654, 655,
	653, 646, 647, 648, 92, 316, 484, 14, 15, 16,
	-378, 272, 242, -508, -508, -508, -508, 667, -512, -513,
	204, 197, 39, -466, -466, -466, 667, 204, -431, 667,
	667, 666, -641, 318, 363, 667, 671, 667, -501, -500,
	625, -550, -422, 2, -540, -345, -590, -501, -501, -431,
	-507, 278, 278, -459, 603, 382, -461, -540, -531, -586,
	-506, -505, 199, 40, 145, 357, 358, 359, 237, 200,
	-531, -343, -488, -531, -531, -590, -534, -343, -486, 666,
	-534, -530, 667, -656, -586, 667, -423, -543, -635, -414,
	668, -590, -255, -636, -219, 5, 371, -219, -219, -219,
	-219, -350, -597, 571, 571, 242, 242, 242, -425, -418,
	26, -687, 627, 410, -560, 664, 665, 8, -590, -584,
	-597, 204, 204, 242, 242, 242, 382, -667, 204, -595,
	-295, 667, 671, -695, -704, -710, -704, 391, 2, -295,
	-428, -295, -295, -375, -376, -295, -295, -295, -452, 627,
	-587, -493, 589, 88, 437, 567, -587, 125, 492, -291,
	459, 509, -336, -336, -350, -262, -261, -259, -319, 5,
	-360, -319, 218, 448, -595, 363, -498, 234, -296, 363,
	234, -344, -560, 666, -475, 629, 283, 283, 603, -336,
	-344, 283, 234, -336, 234, -344, 2, -344, -670, 437,
	376, -507, -260, -259, 64, -391, 307, 435, 364, -292,
	459, 509, 397, -156, -156, -156, 666, -719, 603, 148,
	-350, -375, -350, -360, -595, -355, 509, 397, 459, 360,
	-369, -585, -585, -585, -453, 509, 397, 459, -360, -595,
	-353, -319, -360, -595, 382, 371, 382, 137, 271, -595,
	-302, 234, -319, 447, -302, 234, 447, 447, 447, 447,
	218, 448, 493, -333, 447, 633, 48, -744, 571, 204,
	-507, -507, -293, -156, -156, -156, 666, -334, -294, -478,
	459, 5, 234, -336, 5, -336, 234, 5, -319, -336,
	-360, -595, -723, 25, 153, -336, 671, 287, 268, 627,
	-680, 205, 490, 442, -290, 648, -245, 671, 648, 648,
	-360, -595, -324, 404, -681, 371, 5, 10, 599, -333,
	-668, -340, 493, 571, 571, -545, -685, -686, 220, 475,
	493, 478, -597, -152, -248, 627, -152, -242, 246, 658,
	-660, -599, -599, -319, -697, -698, -701, -702, -319, -382,
	-385, -383, -336, -499, -498, -618, -619, -614, 301, 256,
	257, 591, 270, 183, 100, -263, -264, 629, 627, 165,
	-373, -350, 664, -245, -658, -555, 183, 501, 666, -362,
	-363, 165, -408, 363, -595, 613, 39, 165, 666, 2,
	2, -354, 382, 363, -335, 234, -298, 155, -744, -333,
	-501, -422, -450, -491, 470, 382, -409, 608, -343, -450,
	-424, 671, 204, 648, 668, -409, -549, 658, -127, -127,
	-245, 666, -599, 667, 671, 668, 666, 648, 648, -253,
	386, -252, 157, 285, 269, 520, 521, 522, 523, 147,
	519, 132, 344, 247, 561, 494, 612, -553, -599, -251,
	-153, 204, -553, 242, 204, -82, 627, -245, 555, 242,
	-245, 670, 493, 478, -319, 668, -457, -457, -457, 506,
	506, -319, -319, 197, -418, -350, 2, -346, -590, -333,
	-350, -347, -375, 197, 197, -333, -333, 596, -483, 383,
	312, -536, -283, 635, -350, 670, -507, -507, 161, 161,
	-507, -508, -508, -507, 161, 204, 666, -507, -518, 34,
	34, 667, 671, -503, -507, -377, 667, 611, -414, -414,
	667, 658, -590, 670, 667, -516, 158, -507, 565, 325,
	232, 323, -470, 323, -470, -470, -584, 5, -590, 658,
	-649, -339, 666, -319, 625, -413, 388, 667, -562, -560,
	-507, -507, -507, -507, -507, -584, 667, -565, -565, -580,
	-580, -507, -512, -507, -562, -560, -508, -508, -508, -508,
	-508, -508, -508, -508, -508, -508, -508, -508, -508, -508,
	-508, -508, -508, -508, -508, -508, 149, 363, 375, -508,
	-513, -512, -507, -507, -560, 667, 667, 667, -431, -126,
	666, 318, -319, -444, 223, -507, -553, 671, -444, -444,
	667, -540, -540, 666, -507, 278, 665, 671, 674, 648,
	648, -488, 668, -530, -486, -487, -490, -319, -531, 665,
	667, 671, 667, 671, -533, 667, -590, -501, -257, -256,
	146, 57, 115, 143, 371, 379, 203, 228, 434, 161,
	198, 155, 272, -687, -597, -597, 493, 493, 493, 385,
	220, 5, 8, 664, 665, 668, 667, -597, -597, 493,
	493, 493, -661, 585, 493, 29, 204, -597, -702, -704,
	-704, -295, -295, 127, 347, -507, -234, 627, 629, 571,
	571, 667, 671, 648, 64, 242, 165, 363, 605, 363,
	-615, 163, -620, -507, 666, 251, 666, 666, 2, -279,
	-280, -281, 153, 509, 25, -721, 2, 603, 165, -295,
	165, -295, 631, 667, 671, -391, 666, 666, 571, 493,
	-312, 571, 627, -431, -507, -246, 135, -589, -674, 670,
	-674, 670, 493, 571, 571, 493, 571, 571, 176, 261,
	371, 363, -319, 165, -319, 234, -744, -319, -674, -674,
	242, 627, 181, 181, 633, -302, -507, -507, 197, 571,
	627, -431, 571, -564, 52, 27, 363, -354, -295, 165,
	571, 571, 585, 509, -286, -599, -152, -249, 157, 474,
	147, 285, 247, 49, 385, -681, -152, -243, -599, -599,
	-681, -599, 371, -16, -360, -595, -355, 509, 397, 459,
	-667, -667, 220, -365, -689, -553, -250, 386, -249, -553,
	-248, 204, 268, 627, 667, 671, 135, 648, 2, 667,
	667, 671, 671, -621, -296, -350, 666, -319, 251, 256,
	257, -342, -320, 39, 379, 379, 666, -350, -105, -106,
	627, -107, 572, -552, 603, -500, -586, -341, -319, -439,
	-244, 46, -353, 39, 165, -668, -355, -156, -355, -558,
	-559, 5, 39, -350, 165, 382, 363, -299, 293, -744,
	-594, -636, -414, -450, -439, 365, 97, 667, -501, -441,
	-422, -507, 2, 667, -599, -245, -258, -337, 2, -600,
	-599, -599, 671, 666, 648, 648, 648, 648, 648, 648,
	648, -251, -553, -152, -251, -153, -156, 386, -350, -152,
	658, -360, -361, 658, -457, 5, -397, -396, 402, 375,
	-397, 482, 482, 383, 191, 289, -282, -334, -507, -507,
	161, 34, 34, -507, -507, -518, 667, -507, -507, -431,
	665, 5, -507, 667, 667, 8, -507, 667, 668, -650,
	-319, -507, 667, 64, 667, 667, 671, 671, 667, 667,
	667, 667, 667, 667, 667, -513, 204, 149, 375, 666,
	667, 667, -126, -515, 226, 64, -540, -515, -515, -459,
	-418, -540, -505, -334, 664, -334, 664, -590, 667, 671,
	-560, -586, -543, 668, -256, 648, -599, -599, 2, 2,
	5, 5, 434, 363, 371, 5, -219, -687, -687, 627,
	-365, -365, -365, 385, 665, 2, 664, -590, -365, -365,
	-365, 204, -663, -365, 556, 207, -597, 127, 197, 231,
	231, -336, -336, -261, -587, 555, 482, -302, 425, -498,
	165, 165, -622, 100, -624, 81, 183, 110, 363, 371,
	591, 425, 77, 135, 382, 444, -734, -735, -736, 39,
	638, 639, 667, -416, -537, -635, 666, -319, -416, -418,
	363, 542, 135, 382, 363, 135, 382, 621, 127, 2,
	585, 84, -336, -344, -259, -418, -418, -350, -360, -595,
	173, 667, 671, 648, 2, 658, 658, -360, -595, -355,
	-360, -595, -353, -319, 261, 165, 608, -302, 165, -302,
	608, -302, 400, 181, 571, -156, -507, 173, 667, -334,
	5, 5, 165, -331, 81, -336, 5, -336, -354, 127,
	648, 648, 648, 648, 648, 31, -681, -243, 627, 493,
	571, 571, 382, 382, 385, -685, -686, -248, 671, 666,
	-248, -600, -152, 2, 472, -701, -507, -507, -398, 253,
	-336, -619, -616, -617, 425, -499, -623, -625, 183, 425,
	-386, -416, 666, -335, 666, -319, 666, -156, 2, -262,
	666, -384, -107, 386, 9, 180, 665, 204, 667, -595,
	-454, -156, -355, -408, -406, 627, -408, 667, 671, 159,
	-476, 603, -334, -350, 165, -300, 292, -744, -594, -297,
	-481, -479, 150, 666, 382, -156, -414, 648, 667, 127,
	667, -252, -253, -599, -152, -599, -599, -599, -152, -599,
	-251, -691, 39, -553, -83, -84, 251, 256, 100, 407,
	-245, -245, -347, 555, 251, 666, 666, -282, -507, -507,
	-507, 667, -414, -590, 658, -644, 402, 667, -536, -507,
	-507, -508, 204, 666, -518, 667, -645, 626, -507, -445,
	-446, -507, 480, 116, 224, -645, -645, 667, -586, -586,
	-490, -599, 2, 2, 371, 2, 2, 2, 571, 571,
	571, 664, 2, 204, 204, 204, -597, 204, 204, 242,
	242, -156, 242, 39, 447, -498, -344, -344, -348, -341,
	183, 234, 371, 621, -475, 283, 666, -508, 596, -350,
	666, 2, 233, 233, 31, 64, -737, 140, 255, 667,
	671, -538, -330, -319, -507, -538, 667, 667, 371, 596,
	371, 621, -507, 596, -560, 666, -295, -295, 667, 667,
	-507, 571, -589, 107, -587, 2, -674, -302, -418, -418,
	-674, -333, -507, 197, -507, 571, 5, -295, -348, -295,
	-295, -331, 585, -599, -507, 582, 182, -152, -152, 381,
	-360, -595, -355, -690, 556, 503, 586, 495, 207, 481,
	-690, 197, -249, -250, -248, -693, 510, -392, -393, 2,
	-621, 283, -341, 283, 244, 164, 667, -416, 666, -416,
	666, -418, -733, 627, 667, -382, -263, -106, -664, -372,
	-408, 39, 347, 127, 39, 5, 666, 666, -319, 382,
	666, -334, -314, 98, -744, -594, -298, -450, 364, -418,
	100, -481, -514, -245, 666, -245, 667, 561, -251, 671,
	29, 666, 29, 666, -350, -375, -431, -431, 667, -414,
	64, 671, 667, 667, -508, -518, 667, -646, -647, -339,
	671, 666, 666, 511, 665, 665, 2, -597, -597, -597,
	2, -597, -597, -597, -597, -597, 493, 493, -302, 425,
	-319, -615, -624, -341, 363, -264, 603, 627, -507, -508,
	-321, 666, -507, 666, 666, 39, 135, 255, 141, 239,
	-497, -738, 109, 543, 243, -537, -282, 667, -496, 603,
	444, -508, -331, -416, 666, 666, 666, 648, 204, -156,
	666, -564, -295, -354, 648, 571, 2, 204, -667, 667,
	-680, -703, -704, -263, 666, -264, -387, 86, 101, 136,
	233, 208, 252, 534, 540, 29, -387, -496, 667, -416,
	667, -416, 667, -388, 382, 127, 347, 667, 39, -501,
	39, -156, 127, -156, -558, -416, -350, -416, 382, -304,
	-303, 302, -594, -299, 667, -344, -450, -600, -586, 4,
	-84, -418, -418, 667, 667, -651, 435, 483, 225, -431,
	-415, 667, 671, 39, -446, 2, 2, 2, -687, -687,
	-687, -365, -365, 447, -296, 165, 227, 667, -626, 317,
	-319, 667, -454, -454, 39, 141, 239, -394, -390, 666,
	-283, -538, -264, 227, -350, -675, 603, 667, -400, -399,
	-396, -402, -401, -396, -431, -587, 107, 400, -431, -331,
	-152, -597, -597, 382, -682, 205, -705, -706, -708, 39,
	288, 578, 626, -709, -388, -417, -539, -336, -497, -496,
	667, -394, 667, 87, 127, -398, -156, -156, 2, -406,
	667, 667, -476, 667, -350, -301, -601, 447, 449, -744,
	-300, -501, 150, 667, 667, 667, 667, -652, -653, 54,
	588, 117, -507, -652, -652, -647, -649, 204, 204, 183,
	-495, 636, -627, -630, -629, 643, 517, 205, 401, 667,
	542, 620, 667, 667, -737, -418, -495, -408, -507, -496,
	667, 671, 608, 667, 671, 608, 667, 204, 667, -295,
	-687, -295, -690, -247, 627, 49, -715, -712, 53, 471,
	-708, -696, 5, -594, -313, -312, 667, 671, -394, -497,
	-496, -264, -394, 424, 142, 153, -392, -733, -496, 666,
	-497, 666, -311, -310, -744, -580, -314, 150, 364, 596,
	-245, -654, 163, -653, 421, 196, 482, 421, 196, -654,
	-654, -597, -597, -341, -264, 59, -629, 643, -630, 643,
	596, 142, -501, 667, -626, -264, -399, 242, -401, 204,
	400, 204, 490, -681, 31, 44, -507, -264, -539, -264,
	-394, -497, -501, -264, 483, 483, 2, -263, -388, -497,
	-416, -394, -416, -307, -308, -309, -418, -304, 364, 596,
	509, 117, 223, 566, 347, 34, 648, -628, 347, 467,
	69, 509, -628, -627, 666, 666, -597, 386, -714, -501,
	-264, -394, -477, 363, 621, -501, 2, -388, -394, 667,
	-264, 667, -596, 397, -301, 509, -440, 482, 390, -653,
	-507, 24, 371, 135, -737, -431, -431, -295, -244, 666,
	-713, 158, -3, -712, -477, -501, -264, 621, -477, -313,
	-264, -496, -501, -497, -306, -305, 499, -744, -311, -440,
	-501, 667, 667, -244, 672, -477, -501, -501, -497, -477,
	-394, -595, -307, -501, -389, -390, 571, 667, -477, -477,
	-394, -264, -306, 666, -264, -501, -431, -501, -477, 667,
	-477, -389,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 44, 1762,
	1764, 732, 733, 735, 736, 737, 739, 740, 742, 744,
	746, 747, 748, 750, 751, 753, 754, 755, 756, 757,
	759, 761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 855, 857, 0,
	1744, 1746, 1748, 1750, 0, 0, -2, -2, 0, 0,
	-2, -2, 45, 46, 48, 50, 0, -2, 422, 424,
	426, 428, 0, 460, 462, 463, 465, 467, 468, 470,
	472, -2, 0, 658, 659, 661, 663, 665, -2, 0,
	1318, 1320, 1322, 0, 843, 845, 0, 1325, 1327, 1329,
	0, 0, 867, 868, 0, 1865, -2, 859, 861, 863,
	865, 944, 946, 948, 950, 952, 954, 956, 958, 960,
	962, 964, 965, 967, 969, 971, 973, 975, 977, 978,
	980, 982, 984, 985, 987, 988, 990, 992, 994, 996,
	998, 1000, 1002, 1004, 1006, 1008, 1010, 1012, 1014, 1016,
	-2, 1019, 1020, 1021, 1023, -2, 0, -2, -2, 1758,
	52, 54, 56, 58, 60, 62, 64, 66, 68, 70,
	72, 74, 76, 78, 601, 603, 605, 607, 609, 612,
	614, 616, 618, 1923, 667, 669, 671, 673, 675, 677,
	679, 681, 0, 0, -2, 1937, 0, 0, 0, 1114,
	80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
	149, 150, 151, 152, 153, 154, 155, 156, 93, 94,
	95, 97, 98, 99, 100, 104, 105, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 146, 147, 91, 120, 121, 122, 123, 124, 0,
	0, 1896, 1898, 1900, 1902, -2, 0, 0, 8, 12,
	14, 16, 18, 20, 22, 24, 26, 28, 30, 32,
	36, 38, 40, 42, 1763, 1765, 734, 738, 741, 743,
	745, 749, 752, 758, 760, 762, 717, 718, 721, 2653,
	2672, 2673, 2674, 2677, 2678, 2679, 2680, 2681, 2682, 3219,
	3300, 3301, 3302, 3303, 2705, 2706, 2707, 2708, 2709, 2710,
	2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720,
	2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730,
	2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740,
	2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750,
	2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760,
	2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770,
	2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780,
	2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790,
	2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800,
	2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810,
	2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820,
	2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830,
	2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840,
	2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850,
	2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860,
	2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870,
	2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880,
	2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890,
	2891, 2892, 2893, 2894, 2895, 2896, 2897, 2898, 2899, 2900,
	2901, 2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910,
	2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918, 2919, 2920,
	2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929, 2930,
	2931, 2932, 2933, 2934, 2935, 2936, 2937, 2938, 2939, 2940,
	2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949, 2950,
	2951, 2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959, 2960,
	2961, 2962, 2963, 2964, 2965, 2966, 2967, 2968, 2969, 2970,
	2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979, 2980,
	2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990,
	2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999, 3000,
	3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 3010,
	3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020,
	3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029, 3030,
	3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038, 3039, 3040,
	3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048, 3049, 3050,
	3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058, 3059, 3060,
	3061, 3062, 3063, 3064, 3065, 3066, 3067, 3068, 3069, 3070,
	3071, 3072, 3073, 3074, 3075, 3076, 3077, 3078, 3079, 3080,
	3081, 3082, 3083, 3084, 3085, 3086, 3087, 3088, 3089, 3090,
	3091, 3092, 3093, 3094, 3095, 3096, 3097, 3098, 3099, 3100,
	3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108, 3109, 3110,
	3111, 3112, 3113, 3114, 3115, 3116, 3117, 3118, 3119, 3120,
	3121, 3122, 3123, 3124, 3125, 3145, 3146, 3147, 3148, 3149,
	3150, 3151, 3152, 3153, 3154, 3155, 3156, 3157, 3158, 3159,
	3160, 3161, 3162, 3163, 3164, 3165, 3166, 3167, 3168, 3169,
	3170, 3171, 3172, 3173, 3174, 3175, 3176, 3177, 3178, 3179,
	3180, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189,
	3190, 3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 719,
	720, 1514, 0, 801, 799, 2636, 802, 2968, 804, 806,
	652, 653, 654, 655, 656, 657, 0, 836, 3073, 817,
	1935, 837, 839, 840, 841, 842, 796, 794, 0, 841,
	836, 2710, 3073, 834, 1742, 1743, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 666, 0, 0, 0, 0,
	-2, 0, 0, 0, 0, 0, 0, 0, 581, 1577,
	1578, 1579, 1727, 1728, 3024, 1773, 0, 286, 856, -2,
	-2, 3183, -2, 898, 899, -2, -2, 913, 917, 908,
	3188, 0, 3027, 3009, -2, 920, 1745, 1747, 1749, 1024,
	1025, 1026, 2657, 1030, 1028, 1040, 1041, 1044, 0, 1061,
	-2, 0, 2706, 2991, -2, -2, 1062, 1063, -2, -2,
	-2, -2, 1042, 1043, 0, 0, 0, 0, 0, 2073,
	2074, 2640, 1775, 1767, 1770, 1768, 1769, 47, 49, 51,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 296, -2, -2, -2, -2, 0, 0,
	3079, 2769, 2604, 2674, 2607, 2602, 423, 425, 427, 429,
	430, 0, 0, 0, 0, 0, 0, 0, 461, 464,
	466, 469, 471, -2, 0, 473, 0, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 647, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1392, 1384, 1385, 1644,
	0, 0, 0, -2, 660, 662, 664, 722, 723, 0,
	1924, 1924, 730, 731, -2, 0, 0, 0, 0, 384,
	375, 1319, 1321, 1323, 1324, 0, 0, 0, 0, 0,
	844, 846, 0, 0, 3073, 347, 1326, 1328, 1330, 1331,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 860,
	862, 864, 866, 945, 947, 949, 951, 953, 955, 957,
	959, 961, 963, 966, 968, 970, 972, 974, 976, 979,
	981, 983, 986, 989, 991, 993, 995, 997, 999, 1001,
	1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1018, 1069,
	0, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	-2, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 1184, 0, 0, 0,
	-2, -2, -2, -2, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, -2, 0, 1287,
	0, 0, 1072, 1075, 1076, 1077, 1078, 1079, 1080, 1081,
	0, 1157, 1182, 1183, 1193, 1022, 0, 1557, 1925, 1775,
	1752, 1753, 1754, 1759, 1761, 1755, 1756, 1757, 53, 55,
	57, 59, 61, 63, 65, 67, 69, 71, 73, 75,
	77, 79, 602, 604, 606, 608, 610, 613, 615, 617,
	619, -2, 1894, 1895, 668, 670, 672, 674, 676, 678,
	680, 682, 847, 0, 850, 0, 1074, 849, -2, 0,
	1929, 1929, 1929, 0, 0, 1895, 1893, 0, 0, 0,
	853, 854, 924, 925, 2216, 0, 0, 0, 0, 0,
	0, 0, 0, 2476, 2304, 0, 926, -2, 2337, 2339,
	3157, 2940, 3183, 2475, -2, 2341, 2342, 2343, 2344, 2345,
	0, 2347, 2348, 2349, 2350, 2351, 2352, 0, 2354, 0,
	2359, 2360, 2361, 0, 3164, 2579, 2667, -2, 0, 0,
	3171, 2663, 0, 2442, 2377, -2, -2, 2691, 2670, 2146,
	2147, 2148, 2149, 2150, 2151, 2152, -2, -2, 3202, 2381,
	2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391,
	0, 3145, 3165, 3166, 3172, 3174, 3167, 3154, 2402, 2785,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 2175, 2184, -2, -2, -2, -2, -2,
	-2, -2, 3158, 3159, 3177, 3180, 3187, 3192, 3193, 3163,
	3173, 3201, 3203, 3204, 3205, 3206, 3207, 3208, 3209, 3210,
	3211, 3212, 3213, 3214, 3215, 3216, 3217, 3218, 2176, -2,
	-2, -2, -2, 0, 1912, 2984, 1915, 2021, 1913, 1897,
	1899, 0, 1901, 0, 0, 0, 1906, 1932, 1930, 0,
	1981, 1910, 1911, 2004, 2004, 2036, 0, 2009, 0, 2036,
	1924, 2067, 0, 2015, 3014, 2378, 2379, 0, 2674, 2668,
	-2, -2, 3199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 797, 0, 803, 805, 0, 0,
	0, 0, 836, 835, 1934, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 3165, 542, 543, 546, 0,
	584, 585, 586, 587, 588, 3165, 0, 0, 0, 0,
	594, 595, 596, 597, 598, 599, 600, 256, 3165, 687,
	716, 712, 0, 256, 3165, 690, 715, 256, 3165, 693,
	714, 0, 696, 1642, 256, 3165, 699, 2632, 256, 3165,
	702, 704, 256, 3165, 708, 2647, 2645, 709, 0, 711,
	276, 272, 273, 274, 275, 1738, 1739, 1740, 1741, 0,
	1772, 1643, 858, 0, 884, 0, 896, 897, 3153, -2,
	0, 3038, 901, 902, -2, 904, 1776, 1780, 1781, 1782,
	1783, 1784, 0, 0, 0, 0, 1789, 0, 0, 0,
	0, 891, 892, 911, 912, 918, 921, 0, 1033, 1029,
	1045, 0, 1060, 0, 1061, 1061, 2621, 2612, 2613, 0,
	0, 1061, 1061, 0, 0, 1064, 1065, 1066, 1067, 1068,
	1766, -2, 90, 0, 3165, 2067, 92, 0, 2626, 2700,
	2701, 2702, 2703, 2704, 3200, 3220, 3221, 3222, 3223, 3224,
	3225, 3226, 3227, 3228, 3229, 3230, 3231, 3232, 3233, 3234,
	3235, 3236, 3237, 3238, 3239, 3240, 3241, 3242, 3243, 3244,
	3245, 3246, 3247, 3248, 3249, 3250, 3251, 3252, 3253, 3254,
	3255, 3256, 3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264,
	3265, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3273, 3274,
	3275, 3276, 3277, 3278, 3279, 3280, 3281, 3282, 3283, 3284,
	3285, 3286, 3287, 3288, 3289, 3290, 3291, 3292, 3293, 3294,
	3295, 3296, 3297, 3298, 3299, 3202, 96, 0, 3165, 101,
	0, 3165, 0, -2, 125, 561, 126, 0, 148, 0,
	176, -2, -2, -2, 157, 0, 3165, 0, 2601, -2,
	0, 268, -2, 0, 787, 387, 388, 2687, 2688, 2696,
	2697, 2698, 2699, 376, 377, 0, 778, 0, 887, 2476,
	0, 0, 1356, -2, 0, 1570, 1572, 1572, 0, -2,
	0, 0, 0, 1307, 2598, 2603, 1308, 1309, 2622, 1310,
	2608, 0, 431, 432, 433, 434, 435, 0, 436, 3165,
	438, 439, 0, 441, 442, 3165, 444, 445, 0, 447,
	0, 449, 0, 311, 328, 326, 3165, 0, 3165, 475,
	478, 0, 582, 0, 579, 0, 563, 564, 0, 566,
	0, 0, 0, 571, 572, 574, 575, 576, 577, 578,
	0, 623, 621, 2637, 643, 401, 0, -2, 3165, 0,
	1353, 0, 0, 1622, -2, 0, 1563, -2, 0, 1629,
	3165, 1625, 0, -2, 0, 1922, 3165, 1793, 1388, 1389,
	1390, 1391, 2081, 649, 0, 1829, 0, 1831, 0, 1851,
	2075, 2004, 0, 0, 2080, 0, -2, 775, 2656, -2,
	725, 0, 726, 0, -2, 0, 401, 0, 0, 1334,
	1336, 1337, 1339, 1340, 1343, 1344, 1345, 1346, 0, 1348,
	2053, 348, 350, 0, 0, 0, 0, 1333, 1729, 1730,
	1731, 1732, 1733, 1734, 1735, 1736, 1737, 0, 643, 869,
	0, 0, 1070, 1071, 0, 0, 1089, 1090, 1091, 0,
	0, 401, -2, -2, -2, -2, 1100, 0, 1108, 1111,
	-2, 0, 0, 0, 0, 1118, 0, 1123, 1124, 1125,
	0, -2, 0, 1132, 1134, 1317, 1137, 0, 1317, 0,
	1139, 0, 1143, 0, 1146, 0, 1148, 0, 1150, -2,
	-2, -2, 1158, 1159, -2, 1164, -2, 0, 1168, -2,
	0, 1171, 0, 1174, -2, 0, 1184, 1180, 1181, 0,
	0, 0, 0, 1201, 1202, 0, 1206, 0, 1215, 0,
	1218, 1219, 1220, 0, 0, 1225, 1226, 0, 1228, 1229,
	1230, 1232, 1233, 1234, 0, 3112, 3035, 2769, 2848, 3033,
	2818, 0, 1245, -2, 2806, 1255, 1257, 0, -2, 0,
	1273, 0, 1277, 0, 0, 1286, 0, 0, 0, 1073,
	0, 1082, 1083, 1084, 256, 2071, 1751, 0, -2, 0,
	848, 0, 852, 1954, 1880, 1877, 0, 1951, 1952, 1881,
	0, 0, 0, 1888, 0, 1927, 1928, 0, 0, 0,
	1867, 1868, 0, 0, 0, 0, 0, 0, 2481, 2482,
	2483, 2484, 2497, 2485, 2486, 2496, 2494, 2495, 2487, 2488,
	2493, 2507, 2508, 2498, 2499, 2489, 2502, 2500, 2501, 2503,
	2504, 2505, 2506, 0, 0, 2512, 0, 2490, 2491, 2492,
	2520, 0, 0, 2521, 0, 2523, 0, 2513, 2509, 2510,
	2511, 0, 2283, 2285, 2587, 0, 0, 0, 2519, 2514,
	2515, 2221, 2222, 2223, 2224, 2225, 2258, 2262, 2263, 0,
	0, 2338, 2584, 2583, 2340, 0, 0, 2535, 0, 2353,
	-2, 0, 2476, 2530, 0, 0, 2362, 2363, 2364, 0,
	0, 2535, 0, 0, 2578, 2374, 2375, 2213, 0, 0,
	2444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2162,
	2161, 0, 2163, 0, 2164, 2165, 0, -2, 0, 0,
	2185, 0, 0, 0, 0, 2189, 0, 0, 0, 0,
	0, 0, 0, 2559, -2, 0, 0, 0, 0, 2177,
	0, 0, 1914, 0, 0, 0, 1985, 2588, 2592, 2593,
	1985, 1985, 0, 0, 2536, 2064, 2064, 0, 0, 2059,
	2059, 2059, 2057, 2036, 0, 2036, 2046, 0, 2036, 2036,
	0, -2, 2009, 0, 0, 2050, 0, 2030, 763, 765,
	767, 769, 770, 771, 773, 2068, 2069, 0, 0, 0,
	0, 2675, 0, 0, 0, 0, 0, 0, 2659, 0,
	0, 2631, 456, 457, 0, 0, 0, 3092, 3027, 0,
	-2, -2, -2, -2, 3035, 0, 0, 2769, 2806, 2818,
	808, 838, 0, 1924, 0, 2538, 2096, 2100, 0, 2102,
	2103, 2104, 0, 0, 2097, 2196, 2692, 2693, 2694, 2156,
	2157, 2158, 2159, 2160, 2168, 2155, 2155, 2155, 2166, -2,
	2173, 2195, 2187, 2195, 2191, 2139, 2140, 2141, 2178, 2179,
	2180, 2181, 0, 3092, 3027, 0, -2, 0, 820, 0,
	0, 0, 1862, 338, 339, 540, 0, 254, 255, 0,
	545, 0, 583, 0, 590, 591, 592, 0, 683, 0,
	0, 256, 3165, 688, 0, 691, 0, 256, 3165, 2596,
	697, 0, 700, 0, 0, 706, 0, 0, 0, 0,
	0, 256, 1864, 0, 0, 0, 0, -2, 906, 914,
	915, 916, 0, 1778, 0, 1785, 935, 936, 937, 1787,
	1788, 0, 1790, 909, 938, 939, 940, 941, 942, 943,
	0, 2610, 2611, 2616, 2617, 0, 0, 907, 928, 910,
	0, 922, 1036, 1031, 1032, 1046, 1047, 0, 0, 2614,
	2615, 0, 0, 1052, 1053, 158, 1724, 0, 0, 209,
	0, 1724, 1724, 0, 0, 0, 0, 237, 0, 0,
	1422, 0, 0, 0, 0, 176, 194, 205, 170, 171,
	172, 0, 0, 0, 0, 0, 0, 102, 1536, 0,
	1539, 0, 0, 0, 0, 0, 0, 0, 1552, 1555,
	0, 0, 0, 0, 555, 0, 529, 0, 0, 552,
	560, 0, 0, 516, 517, 518, 519, 0, 0, 524,
	0, 0, 0, 0, 530, 0, 128, 129, 0, 0,
	134, 135, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 1826, 0, 184, 176, 0, 0, 175, 177, 160,
	0, 0, 176, 180, 195, 207, 0, 243, 0, 183,
	245, 1419, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 278, 0, 0, 313, 785, 0, 788, 0, 777,
	779, 643, 643, 0, 0, 885, 889, 890, 0, 0,
	886, 888, 0, 0, 1564, 0, 0, 0, 1921, 0,
	0, 0, 0, 3165, 1722, 0, 1705, 0, 2053, 2867,
	-2, -2, 348, 2053, 1306, 0, 0, 2675, 2606, 0,
	0, 0, 0, 0, 0, 448, 0, 0, 0, 337,
	0, 0, 0, 480, 485, 0, 573, 562, 565, 567,
	568, 569, 611, 1483, 3165, 0, 0, 647, 638, 0,
	642, 0, 0, 646, 0, 0, 1535, 3165, 1533, 2641,
	0, 1561, 0, 1621, 1514, 3165, 2639, 0, 0, 0,
	1630, 2684, 1639, 1643, 1814, 0, 651, 0, 1832, 1834,
	0, 0, 2076, 0, 2078, 2004, 1924, 0, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 1347, 357, 0,
	2052, 0, 0, 389, 2053, 348, 2997, 0, 1332, 401,
	401, 2053, 871, 2053, 873, 0, 0, 1092, 0, 0,
	1095, 401, 401, 401, 401, 1106, 1107, 1109, 1110, -2,
	-2, -2, -2, 1112, 1113, 1212, 0, 0, 0, 1211,
	1720, 0, 1128, 1131, 1135, 0, 1290, 3009, 3027, 3092,
	1315, 1136, 1212, 2769, 1212, 2769, 1212, 2769, 1212, 1212,
	1152, 1196, 1208, 1163, 1170, 0, 1165, 1169, 1172, 1175,
	0, 1177, 1185, 0, -2, 0, 1188, 0, 1190, 0,
	1192, 1212, 1204, 1213, 1216, 0, 1224, 1227, 0, 1235,
	1236, 1237, 1238, 2654, 0, 0, 1241, 1242, 1243, 1244,
	-2, 0, 1248, 1249, 0, 0, 1264, 1269, 1270, 1266,
	0, 0, 0, 0, 0, 0, 1280, 1281, 0, 0,
	0, 1289, 0, 1085, 1556, 0, 1760, 1954, 1880, 851,
	1871, 1953, 1872, 1879, 1882, 0, 0, 1884, 0, 1886,
	0, 1949, 1950, 1957, 1958, 0, 1968, 1969, 1961, 0,
	-2, 0, 0, 1964, 1965, 1890, 0, 1907, 1908, 1909,
	1938, 1941, 1658, 0, 3302, 894, 0, 2217, 2091, 2218,
	2219, 2625, 0, 2226, 2227, 2228, 2229, 2230, 2231, 2232,
	2233, 2234, 2235, -2, -2, -2, -2, -2, -2, -2,
	-2, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252,
	2253, 2254, -2, -2, -2, 2259, 2260, 2261, -2, 2522,
	2524, 0, 2587, 0, -2, 0, -2, -2, -2, -2,
	2280, 0, 2282, 2287, 2289, 2291, 0, 0, 0, 0,
	2586, 2301, 2570, 2571, 0, 0, 2478, 2479, 2480, 2286,
	0, 2305, 2585, 2582, 0, 0, 2516, 0, 2481, 2482,
	2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492,
	2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502,
	2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512,
	2513, 0, 2534, 1937, 2366, 0, 0, 0, 0, 2373,
	2358, 2532, 0, 2531, 0, 0, 0, 2542, 0, 2577,
	2573, 0, 2623, 2212, 2199, 2200, 2201, 2202, 2203, 2204,
	2214, 0, 2620, 2660, 2666, 2452, 0, 0, 0, 2403,
	2404, 2405, 2406, 2407, 0, 2409, 2410, 0, 2412, 2413,
	0, 2415, 2416, 0, 2418, 2419, 2420, 2421, 2422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2107,
	2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117,
	2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127,
	2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137,
	2138, 0, 0, 2424, 0, 2545, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 2426, 0, 2428, 2536, 2556,
	0, 0, 2306, 0, 0, 0, 0, 0, 2431, 2536,
	2564, 0, 0, 0, 0, 0, 2536, 0, 2569, 0,
	2438, 0, 2440, 1115, 1116, 1916, 0, 0, 2022, 0,
	2086, 0, 0, 0, 2591, 2594, 2595, 3126, 3127, 3128,
	3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138,
	3139, 3140, 3141, 3142, 3143, 3144, 2086, 2086, 0, 1980,
	0, 0, 2060, 2061, 2062, 2063, 0, 0, 2064, 0,
	2054, 2058, 2055, 2056, 2046, 2001, 0, 0, 2627, 2046,
	2007, 2045, 0, 2021, 2035, 2046, 2046, 0, -2, 2011,
	2049, 0, 2024, 2036, 0, 0, 764, 766, 768, 772,
	774, 0, 0, 1937, -2, 0, -2, 403, 1513, 0,
	0, 0, 0, 0, 0, 798, 800, 0, 0, 703,
	0, 0, 0, 0, 1296, 0, 1298, 1299, 0, 1301,
	0, 1708, 792, 0, 795, 0, 2087, 2090, 0, 0,
	2101, 2105, 2106, 2197, 0, 0, 0, 0, 0, 0,
	0, 833, 0, 3073, 0, 831, 0, 544, 256, 0,
	548, 549, 0, 0, 497, 498, 499, 500, 502, 2695,
	503, -2, -2, 0, 593, 256, 713, 685, 0, 256,
	256, 694, 0, 0, 256, 705, 256, 2648, 256, 2646,
	277, 710, 1863, 289, 0, 893, 0, 1777, 1786, 0,
	932, 0, 934, 0, 2618, 2619, 0, 923, 0, 1034,
	0, 1048, 1049, 1050, 1051, 0, 0, 0, 0, 1723,
	0, 0, 1668, 0, 0, 213, 3165, 0, 258, 0,
	0, 1476, 2633, 0, 1464, 0, 0, 2793, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 173, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 1537, 1538, 1540, 1547,
	1549, 0, 1543, 1544, 0, 1546, 1548, 1550, 0, 1553,
	0, 0, 0, 0, 0, 0, 551, 553, 554, 529,
	0, 0, 0, 0, 0, 0, 0, 522, 523, 525,
	526, 527, 528, 0, 0, 0, 0, 0, 0, 136,
	140, 1573, 3033, 0, 0, 0, 0, 1574, 1575, 1576,
	1802, 1803, 0, 1825, 1826, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 182, 0, 2600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 314, 0, 789, 0, 790, 0, 780, 401, 782,
	783, 397, 394, 396, 784, 0, 0, 0, 1566, 0,
	1617, 1615, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 0, 0,
	0, 0, -2, 1568, 1569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 0, 392, 2599, 2609, 0,
	1341, 1342, 437, 440, 443, 446, 295, 0, 0, 0,
	477, 487, 0, 1394, 1366, 0, 0, 622, 401, 643,
	645, 0, 399, 2943, 2652, 1351, 1531, 1534, 0, 1514,
	3165, 1585, 0, 0, 0, 0, 0, 0, 0, 1628,
	0, 0, 3165, 2628, 2683, 2684, 1816, 1826, 0, 2086,
	0, 1849, 1835, 0, 0, 0, 1849, 1853, 1854, 1856,
	1857, 0, 0, 2077, 2083, 724, 776, 1924, 1924, 401,
	0, 0, 1838, 1840, 0, 0, 0, 340, 0, 351,
	2053, 349, 0, 357, 0, 0, 2053, 348, 0, 637,
	870, 875, 401, 0, 0, 401, 1096, 1097, 1098, 1099,
	1154, 1198, 1210, 1268, 1117, 1119, 1120, 1121, 0, 1126,
	0, 0, 0, 1316, 1311, 1312, 1313, 2649, 2645, 1314,
	1138, 1212, 1141, 1212, 1144, 1212, 1147, 1149, 1167, 1173,
	1186, 1179, 1187, 0, 0, 0, 1200, 0, 0, 1222,
	0, 1231, 1239, 0, 1247, -2, 1252, 1253, 0, 0,
	0, 0, 0, 0, 0, 1274, 1275, 1276, 1278, 1283,
	1282, 0, 1288, 1086, 2072, 1875, 1876, 1878, 0, 1887,
	0, 0, 1963, -2, -2, 1962, 1966, 1967, -2, -2,
	-2, -2, 1883, 0, 1892, 1889, 0, 1948, 1656, 1657,
	0, 0, 895, 0, 0, -2, -2, 0, 0, 0,
	2302, 0, -2, 2281, 2284, 2288, 2290, 2292, 0, 0,
	0, 0, 0, 0, 2525, 0, 2527, 2303, 2580, 2583,
	2518, 0, 2474, 0, 0, 1936, 1937, 1937, 0, 2372,
	0, 2533, 0, 2540, 2541, 0, 2365, 0, 2574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2376, 0,
	0, 0, 0, 2408, 2411, 2414, 2417, 0, 0, 0,
	0, 2397, 0, 0, 0, 2401, 2167, 2153, 0, 0,
	2170, 2174, 2195, 2193, 2194, 2188, 2195, 2192, 2143, 0,
	2142, 0, 2423, 0, 2425, 2427, 0, 0, 2429, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2309, 2310, 2311, 2331, 2430, 2562, 2563,
	0, 0, 0, 0, 0, 0, 2436, 0, 2568, 2437,
	2439, 1924, 0, 1917, 0, 2020, 0, 1982, 1971, 2085,
	0, 2589, 2053, 1984, 1986, 2590, 2630, 1971, 1971, 0,
	2537, 0, 0, 2040, 0, 0, 0, 2042, 2005, 0,
	0, 1999, 0, 1990, 1991, 1992, 1993, 1994, 1995, 1996,
	2006, 2021, 2044, 2008, 2012, 2660, 0, 2024, 2048, 0,
	2046, 0, 2031, 0, 2033, 2070, 0, 2017, 2050, 0,
	0, 2676, 2086, 0, 450, 458, 459, 451, 452, 453,
	454, 0, 1708, 0, 0, 0, 0, 0, 1297, 1300,
	0, 816, 0, 0, 2539, 0, 2092, 0, 2098, 0,
	818, 0, 0, 0, 0, 0, 0, 0, 0, 1861,
	541, 547, 0, 0, 496, 0, 495, 501, 589, 684,
	256, 689, 692, 2597, 256, 698, 701, 707, 285, 0,
	883, -2, 930, 931, 933, 0, 929, 1039, 1035, 210,
	1724, 0, 0, 0, 1664, 0, 1377, 0, 1372, 1373,
	1666, 2644, 1670, 1676, 1679, 0, 215, 3165, 227, 0,
	3165, 0, 1438, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 3165, 256, 3165, 256, 231, 233, 236, 0,
	242, 238, 0, 1374, 0, 1426, 0, 0, 1429, 159,
	1724, 0, 0, 162, 166, 178, 0, 0, 0, 192,
	0, 0, 0, 1681, 1685, 1693, 0, 0, 0, 1541,
	1542, 1545, 1551, 1554, 103, 0, 0, 0, 1689, 1691,
	1697, 556, 557, 558, 0, 0, 0, 520, 521, 127,
	130, 3165, 2642, 0, 132, 3165, 0, 141, 1826, 0,
	0, 0, 0, 1663, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 164, 168, 179, 0, 1699, 161, 181,
	0, 271, 0, 0, 261, 256, 3165, 0, 263, 0,
	264, 265, 279, 0, 0, 0, 0, 0, 0, 0,
	319, 0, 0, 0, 786, 0, 781, 0, 0, 0,
	1354, 1355, 1616, 0, 1559, 1560, 323, 324, 0, 1571,
	1565, 0, 0, 0, 0, 0, 1701, 1702, 0, 0,
	0, 1722, 1717, 2053, 291, 0, 2053, 299, 0, 2605,
	0, 327, 336, 474, 0, 486, 488, 490, 0, 0,
	0, 1393, 1494, 1395, 1397, 1398, 1399, 258, 0, 0,
	0, 1464, 2854, 2684, 0, 0, 1361, 0, 0, 0,
	628, 624, 0, 635, 639, 640, 0, 0, 0, -2,
	0, 0, 0, 0, -2, 0, 0, 0, 1632, 1626,
	1627, 0, 0, 0, 0, 3165, 1818, 1826, 0, 1922,
	1937, 650, 1827, 1849, 0, 0, 0, 1837, 1833, 1830,
	2086, 0, 0, 0, 0, 0, 2079, 2082, 727, 728,
	378, 0, 401, 0, 0, 0, 0, 0, 0, 355,
	0, 358, 0, 0, 0, 363, 364, 365, 366, 367,
	368, 0, 0, 0, 0, 373, 374, 357, 390, 342,
	2053, 0, 357, 0, 0, 872, 0, 1087, 0, 0,
	1094, 0, 0, 1720, 1130, 0, 1140, 1142, 1145, 1189,
	1191, 1212, 1203, 0, 1223, 1240, 1251, 1258, 2629, 1259,
	1416, 0, 1416, 0, 0, 1279, 1285, 1885, 0, 1960,
	1891, 1942, 1943, 0, 1658, 0, 2220, 2265, 0, 0,
	-2, 0, 0, 2269, 0, 0, 0, -2, 0, 0,
	0, 2526, 2528, 0, 2582, 2517, 2367, 0, 0, 0,
	2371, 2355, 2356, 0, 2477, 2543, 2572, 2576, 0, 2205,
	2206, 2207, 2208, 2209, 2210, 2211, 0, 2624, 2661, 2665,
	2450, 2451, 2455, 2638, 0, 0, 0, 2380, 0, 0,
	0, 0, 0, 0, 0, 0, 2169, 2186, 2190, 0,
	0, 2544, 2555, 2557, 2307, 2308, 2312, 2313, 2314, 2315,
	2316, 2317, 2318, 2319, 2320, 2321, -2, -2, -2, 2325,
	2326, 2327, -2, -2, -2, 2332, 0, 0, 0, 2558,
	2560, 2561, 2565, 2566, 0, 2433, 2434, 2435, 2567, 0,
	1924, 1918, 2023, 1979, 0, 2084, 1983, 0, 1979, 1979,
	1931, 2038, 0, 0, 2066, 0, 2002, 0, 2003, 0,
	0, 2043, 0, 2010, 2047, 0, 2026, 2028, 2013, 2014,
	2032, 0, 2016, 0, 2019, 2367, -2, 402, 404, 406,
	0, 409, 410, 0, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 807, 1708, 1708, 0, 0, 0, 809,
	0, 793, 0, 0, 2094, 0, 2198, 822, 824, 0,
	0, 0, 0, 3092, 3027, 0, 0, 821, 550, 493,
	494, 686, 695, 287, 0, 2051, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 257, 0,
	1475, 0, 1436, 0, 0, 1463, 0, 0, 1481, 217,
	218, 219, 0, 0, 0, 0, 229, 0, 0, 225,
	0, 235, 241, 240, 0, 1423, 0, 0, 0, 0,
	1669, 0, 0, 0, 189, 190, 191, 0, 196, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 514,
	0, 0, 0, 0, 138, 0, 0, 0, 143, 144,
	0, 0, 1808, 1809, 0, 1796, 186, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 1655, 281, 0,
	0, 0, 0, 0, 315, 316, 317, 318, 0, 303,
	305, 0, 0, 0, 0, 325, 0, 398, 393, 395,
	1558, 1619, 1620, 1567, 1682, 1686, 1694, 0, 0, 0,
	0, 0, 841, 1721, 0, 299, 297, 0, 300, 299,
	293, 0, 0, 0, 0, 0, 0, 0, 570, 1364,
	1482, 0, 0, 1484, 1400, 1404, 0, 0, 2684, 0,
	0, 0, 2635, 0, 1362, 0, 0, 1483, 620, 626,
	0, 629, 0, 632, 0, 634, 0, 644, 2634, 0,
	0, 0, 1535, 0, 0, 1562, 1514, 1588, 1514, 0,
	1631, 1633, 0, 1641, 0, 0, 0, 1820, 1826, 0,
	1813, 1814, 1956, 1828, 1847, -2, 0, 0, 1937, 1855,
	1852, 1858, 1859, 0, 0, 381, 0, 1839, 1841, 0,
	1335, 1338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 341, 357, 354, 344, 2053, 385, 0, 401, 401,
	1122, 1719, 1127, 2650, 1199, 1221, 1260, 1415, 0, 0,
	1262, 0, 0, 1959, 1946, 1947, 1944, 1658, 2267, 2271,
	0, 0, 0, 2273, -2, 0, 2295, -2, -2, 2529,
	2581, 2346, 1937, 2368, 2370, 2357, 2575, 2215, 0, 2457,
	2454, 0, 2441, 0, 2392, 2393, 0, 0, 2396, 2398,
	2399, 2400, 2154, 2145, 2144, 2554, 0, 0, 0, 0,
	2432, 1919, 0, 2446, 0, 0, 1987, 2446, 2446, 2039,
	0, 2041, 2000, 1988, 0, 1997, 0, 2661, 2025, 0,
	2029, 2034, 2018, 0, 407, 0, 411, 412, 413, 414,
	416, 0, 0, 0, 0, 0, 455, 810, 811, 0,
	0, 0, 0, 1707, 2088, 2093, 0, 2099, 0, 0,
	0, 0, 0, 0, 0, 0, 832, 288, 0, 1037,
	1038, 211, 212, 1378, 1376, 1673, 1677, 1674, 0, 214,
	0, 0, 1437, 0, 1440, 0, 0, 0, 0, 1447,
	1464, 0, 0, 0, 0, 0, 0, 1466, 0, 1465,
	0, 0, 1498, 0, 1646, 1653, 0, -2, 0, 0,
	0, 221, 247, 0, 0, 0, 0, 250, 1725, 223,
	0, 0, 256, 256, 1375, 0, 0, 1665, 1667, 1680,
	0, 0, 0, 0, 199, 0, 0, 1683, 1687, 1695,
	1690, 1692, 1698, 559, 515, 0, 0, 133, 142, 1799,
	0, 0, 0, 1810, 0, 185, 0, 0, 0, 1700,
	269, 270, 0, 256, 0, 256, 262, 256, 1655, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 0, 0,
	0, 0, 0, 0, 0, 1703, 1704, 290, 0, 0,
	292, 391, 299, 476, 484, 489, 491, 492, 1425, 0,
	1494, 1486, 1487, 1488, 0, 1396, 1493, 1495, 0, 0,
	1401, 0, 0, 0, 0, 0, 0, 1381, 1363, 0,
	1394, 1366, 630, 0, 631, 633, 625, 0, 400, 1352,
	1532, 1580, 1514, 0, 1583, 0, 0, 1623, 0, 0,
	0, 0, 0, 0, 0, 1822, 1826, 0, 1815, 1816,
	1849, 1955, 0, 0, 0, 1836, 1956, 0, 401, 0,
	401, 359, 0, 360, 361, 362, 369, 370, 371, 372,
	343, 346, 0, 357, 874, 876, 0, 0, 0, 882,
	1088, 1093, 1414, 0, 0, 0, 0, 1945, 2275, -2,
	-2, 2296, 0, 2662, 2664, 1937, 0, 2443, 1939, 0,
	0, -2, 0, 0, 0, 1920, 1903, 0, 1978, 1970,
	1972, 1974, 3012, 2764, 3164, 1904, 1905, 2065, 0, 0,
	2027, 408, 417, 418, 0, 420, 421, 812, 0, 0,
	0, 0, 2095, 0, 0, 0, 819, 0, 0, 0,
	0, 1027, 0, 0, 1675, 216, 0, 0, 1441, 1442,
	1444, 0, 1446, 1448, 1449, 1366, 0, 1453, 0, 2686,
	0, 1458, 1461, 1462, 0, 0, 1477, 1499, 0, 1508,
	0, 1648, 1658, 1652, 0, 1650, 1510, 0, 220, 249,
	222, 251, 246, 0, 1655, 0, 224, 234, 0, 0,
	163, 0, 0, 2757, 202, 200, 198, 131, 137, 139,
	145, 1662, 188, 0, 165, 0, 271, 280, 1654, 282,
	266, 256, 0, 302, 304, 306, 307, 308, 309, 0,
	1684, 1688, 1696, 0, 1711, 1712, 1713, 1714, 1715, 0,
	0, 0, 301, 0, 0, 0, 483, 1366, 1424, 1365,
	1485, 0, 1496, 1366, 0, 0, 1510, 0, 0, 0,
	0, 0, 1368, 0, 1367, 0, 0, 627, 2086, 641,
	0, 0, 0, 1587, 0, 1634, 1632, 0, 1640, 0,
	0, 0, 1795, 0, 0, 1817, 1818, 648, 1842, 0,
	0, 1849, 1860, 380, 0, 383, 356, 0, 345, 0,
	878, 0, 880, 0, 1261, 1263, 0, 0, 2369, 2461,
	0, 0, 2394, 2395, -2, 0, 2335, 2445, 2447, 0,
	0, 0, 0, 0, 1989, 1998, 419, 1708, 1708, 1708,
	2089, 826, 827, 829, 823, 825, 0, 0, 1671, 0,
	1678, 258, 1439, 1443, 0, 1450, 0, 0, 0, 1454,
	1518, 0, 0, 1535, 1535, 1467, 0, 0, 1502, 1503,
	1421, 0, 1504, 1505, 1506, 1647, 1948, 1653, 1366, 0,
	0, 248, 253, 0, 0, 0, 0, 0, 0, 187,
	0, 260, 283, 1655, 0, 0, 1716, 0, 0, 298,
	332, 506, 504, 1368, 0, 1497, 1402, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1403, 1508, 1510, 0,
	1421, 0, 1474, 1379, 0, 1382, 0, 1364, 0, 636,
	0, 1581, 0, 1588, 0, 0, 1641, 0, 0, 1805,
	1794, 1826, 1819, 1820, 2086, 0, 1850, 0, 352, 353,
	877, 0, 0, 1271, 1272, 0, 0, 0, 0, 2456,
	1940, 2336, 0, 0, 1973, 1975, 1976, 1977, 813, 814,
	815, 0, 0, 1672, 228, 0, 1512, 1452, 1523, 0,
	0, 0, 0, 0, 1468, 1500, 1501, 1498, 1420, 0,
	1651, 1649, 1479, 1512, 1514, 226, 0, 1510, 0, 1430,
	0, 0, 1433, 0, 0, 203, 2757, 201, 0, 256,
	791, 1708, 256, 0, 335, 0, 539, 505, 507, 0,
	0, 511, 512, 513, 1360, 0, 1490, 1492, 1421, 1508,
	1510, 1366, 1421, 0, 1383, 1425, 1381, 1582, 1586, 1584,
	1624, 1510, 0, 1508, 0, 1812, 1826, 1806, 1807, 0,
	1822, 0, 0, 401, 879, 881, 2453, 2473, 2462, -2,
	3095, 2765, 0, 2473, 2473, 2448, 2449, 0, 0, 0,
	1366, 0, 1455, 1519, 1520, 0, 1515, 1516, 1517, 2685,
	1456, 1457, 1459, 1460, 2086, 0, 1509, 1518, 252, 1366,
	1427, 0, 0, 1428, 0, 0, 206, 0, 208, 284,
	1706, 1709, 0, 310, 0, 0, 479, 537, 0, 0,
	508, 509, 531, 510, 1357, 1359, 1366, 0, 1366, 1421,
	1508, 2086, 1366, 0, 0, 0, 1366, 1368, 1508, 0,
	1421, 0, 1801, 1811, 0, 1821, 1795, 0, 1845, 0,
	382, 2458, 0, 0, 2464, 2465, 2466, 2467, 2468, 2459,
	2460, 828, 830, 1445, 1451, 0, 1521, 0, 1522, 0,
	0, 0, 1478, 1507, 1523, 232, 1431, 0, 1434, 0,
	204, 0, 0, 330, 331, 536, 532, 1489, 1491, 2086,
	1366, 1421, 1661, 2086, 1369, 0, 1371, 1368, 1380, 1421,
	0, 1366, 0, 1824, 1800, 1804, 2643, 1805, 1843, 0,
	0, 0, 2470, 2471, 0, 0, 0, 1524, 0, 1527,
	1528, 0, 1525, 1498, 0, 0, 256, 0, 1924, 1661,
	2086, 1366, 1472, 0, 1660, 1661, 1370, 1360, 1366, 1510,
	2086, 1508, 1798, 1826, 1812, 0, 2086, 2469, 2472, 2463,
	1511, 1526, 1529, 1530, 1480, 0, 0, 1710, 333, 0,
	0, 538, 533, 534, 1469, 1661, 2086, 1659, 1473, 1358,
	2086, 1508, 1661, 1421, 1791, 1797, 0, 0, 1801, 2086,
	1846, 1418, 0, 0, 535, 1470, 1661, 1661, 1421, 1637,
	1366, 1823, 1798, 1844, 1432, 1417, 0, 334, 1471, 1635,
	1366, 2086, 1792, 0, 2086, 1661, 0, 1661, 1638, 1418,
	1636, 1435,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 654, 3, 660, 655, 3,
	666, 667, 658, 656, 671, 657, 668, 659, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 675, 672,
	646, 648, 647, 651, 670, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 664, 3, 665, 661, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 673, 653, 674, 649,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 632,
	57975, 633, 57976, 634, 57977, 635, 57978, 636, 57979, 637,
	57980, 638, 57981, 639, 57982, 640, 57983, 641, 57984, 642,
	57985, 643, 57986, 644, 57987, 645, 57988, 650, 57989, 652,
	57990, 662, 57991, 663, 57992, 669, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1664
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1669
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1673
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1679
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1682
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1684
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1685
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1686
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1687
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1688
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1689
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1690
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1691
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1692
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1695
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1696
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1697
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1698
		{
			return helpWith(sqllex, "MOVE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1707
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1708
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1710
		{
			return helpWith(sqllex, "ALTER")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1713
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1714
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1715
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 59:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1716
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1717
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1718
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1719
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1720
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1721
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1722
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1723
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1724
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1725
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1726
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 90:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1787
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1813
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1827
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1847
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1855
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1918
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1922
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1926
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1933
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1945
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1955
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1962
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1972
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1979
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1989
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1998
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2005
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2014
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2024
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2033
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = &tree.AlterDatabaseSecondaryRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SecondaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2052
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     false,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2060
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     true,
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2069
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelGlobal,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2082
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2095
		{
			s := sqlDollar[9].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				RegionName:    tree.Name(sqlDollar[8].str),
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2131
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2165
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2169
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2173
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2183
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2189
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2198
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2213
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2219
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2227
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2237
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2241
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 176:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2263
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2268
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2274
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2286
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2297
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[3].union.tableIndexName(), NotVisible: sqlDollar[4].union.bool(), IfExists: false}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2301
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{Index: sqlDollar[5].union.tableIndexName(), NotVisible: sqlDollar[6].union.bool(), IfExists: true}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2307
		{
			sqlVAL.union.val = true
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2311
		{
			sqlVAL.union.val = false
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2327
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 185:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2347
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2356
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2367
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2376
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2389
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: sqlDollar[4].union.expr(),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2398
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					Options: sqlDollar[4].union.kvOptions(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2406
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: true,
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2415
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: tree.DNull,
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2425
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2433
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2444
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 196:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2454
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2464
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 198:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2473
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2484
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 200:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2490
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2498
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2502
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 204:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2510
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2516
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2521
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2558
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colTableDef()}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2568
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colTableDef()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colTableDef()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colTableDef()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2588
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2598
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2608
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2612
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2617
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2626
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2638
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2656
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2666
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2669
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2675
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2690
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2706
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2715
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2727
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2734
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2740
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2747
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2762
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2770
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2774
		{
			sqlVAL.union.val = nil
		}
	case 248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2780
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2784
		{
			sqlVAL.union.val = nil
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = true
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2794
		{
			sqlVAL.union.val = false
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2800
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2804
		{
			sqlVAL.union.val = nil
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2811
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2819
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 259:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2854
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2865
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2876
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2885
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2904
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2913
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2922
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2926
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2929
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2933
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2940
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2947
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2953
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2967
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2973
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2981
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3006
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3013
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3021
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3025
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3080
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3090
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3101
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3110
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3114
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3118
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3130
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3141
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3145
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3158
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: tree.MakeDBool(true)}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3162
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: sqlDollar[3].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3166
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(false)}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3182
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3275
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = &tree.AlterBackupSchedule{
				ScheduleID: uint64(sqlDollar[4].union.int64()),
				Cmds:       sqlDollar[5].union.alterBackupScheduleCmds(),
			}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3300
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3305
		{
			sqlVAL.union.val = tree.AlterBackupScheduleCmds{sqlDollar[1].union.alterBackupScheduleCmd()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3309
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupScheduleCmds(), sqlDollar[3].union.alterBackupScheduleCmd())
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetLabel{
				Label: sqlDollar[3].union.expr(),
			}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3322
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetInto{
				Into: sqlDollar[3].union.stringOrPlaceholderOptList(),
			}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3328
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetWith{
				With: sqlDollar[3].union.backupOptions(),
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetRecurring{
				Recurrence: sqlDollar[2].union.expr(),
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3340
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{AlwaysFull: true},
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3346
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{Recurrence: sqlDollar[4].union.expr()},
			}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetScheduleOption{
				Option: sqlDollar[4].union.kvOption(),
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3361
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3365
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3375
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3412
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = nil
		}
	case 336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3443
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3449
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3460
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3465
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3500
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3509
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3519
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3528
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3538
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3557
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.backupTargetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsTenant: sqlDollar[8].union.asTenantClause(),
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3564
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3572
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3589
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3597
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3611
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3615
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3619
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3626
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3630
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3643
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3647
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3651
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3655
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3659
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3663
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3683
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3687
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3691
		{
			sqlVAL.union.val = &tree.RestoreOptions{SchemaOnly: true}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3695
		{
			sqlVAL.union.val = &tree.RestoreOptions{VerifyData: true}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3706
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3710
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3737
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3742
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3746
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3752
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3757
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3762
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3766
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3783
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3786
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3790
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3794
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3802
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3806
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3812
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3816
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3822
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3826
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3834
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3840
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3844
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3850
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3854
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3858
		{
			sqlVAL.union.val = nil
		}
	case 402:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3870
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3884
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3890
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3894
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3900
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3904
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3916
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3932
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3936
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3940
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3944
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3948
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3952
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3956
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3960
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3964
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3972
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3973
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3974
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3975
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3976
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3986
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3994
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3996
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4000
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4003
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4013
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4022
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4030
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4032
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4036
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4039
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4049
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4058
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4066
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4072
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4075
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4083
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4086
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4090
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4094
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4098
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4102
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4115
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4120
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4123
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4124
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4128
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4133
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4145
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4147
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4151
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4152
		{
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4153
		{
			return helpWith(sqllex, "CREATE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4160
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4163
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4167
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4170
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4173
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4191
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Args:        sqlDollar[6].union.functionArgs(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4206
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4209
		{
			sqlVAL.union.val = true
		}
	case 482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4210
		{
			sqlVAL.union.val = false
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4213
		{
			sqlVAL.union.val = true
		}
	case 484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4214
		{
			sqlVAL.union.val = false
		}
	case 486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = sqlDollar[1].union.functionArgs()
		}
	case 487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4221
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4226
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4233
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4239
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4247
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4255
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionArgClass(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4278
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4286
		{
			sqlVAL.union.val = tree.FunctionArgIn
		}
	case 499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4287
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4288
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4289
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4290
		{
			return unimplementedWithIssueDetail(sqllex, 88947, "variadic user-defined functions")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4299
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4300
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4303
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4305
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4311
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4315
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4322
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4323
		{
			return unimplemented(sqllex, "create window function")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4325
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4331
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4335
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4339
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4343
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4347
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4351
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4355
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4359
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4363
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4367
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4371
		{
			sqlVAL.union.val = tree.FunctionLeakproof(true)
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4375
		{
			sqlVAL.union.val = tree.FunctionLeakproof(false)
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4379
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4383
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4387
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4394
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4395
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4402
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4418
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4424
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4430
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4436
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = &tree.DropFunction{
				Functions:    sqlDollar[3].union.functionObjs(),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4455
		{
			sqlVAL.union.val = &tree.DropFunction{
				IfExists:     true,
				Functions:    sqlDollar[5].union.functionObjs(),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4462
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4466
		{
			sqlVAL.union.val = tree.FuncObjs{sqlDollar[1].union.functionObj()}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4470
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionObjs(), sqlDollar[3].union.functionObj())
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4476
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
				Args:     sqlDollar[2].union.functionArgs(),
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4483
		{
			sqlVAL.union.val = tree.FuncObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToFunctionName(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4491
		{
			sqlVAL.union.val = sqlDollar[2].union.functionArgs()
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4501
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = &tree.AlterFunctionOptions{
				Function: sqlDollar[3].union.functionObj(),
				Options:  sqlDollar[4].union.functionOptions(),
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4529
		{
		}
	case 555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4530
		{
		}
	case 556:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4534
		{
			sqlVAL.union.val = &tree.AlterFunctionRename{
				Function: sqlDollar[3].union.functionObj(),
				NewName:  tree.Name(sqlDollar[6].str),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = &tree.AlterFunctionSetSchema{
				Function:      sqlDollar[3].union.functionObj(),
				NewSchemaName: tree.Name(sqlDollar[6].str),
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = &tree.AlterFunctionSetOwner{
				Function: sqlDollar[3].union.functionObj(),
				NewOwner: sqlDollar[6].union.roleSpec(),
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = &tree.AlterFunctionDepExtension{
				Function:  sqlDollar[3].union.functionObj(),
				Remove:    sqlDollar[4].union.bool(),
				Extension: tree.Name(sqlDollar[8].str),
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4571
		{
			sqlVAL.union.val = true
		}
	case 561:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = false
		}
	case 562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4580
		{
			return unimplemented(sqllex, "create access method")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4581
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4582
		{
			return unimplemented(sqllex, "create cast")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4583
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4584
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4585
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4586
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4587
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4588
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4589
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4590
		{
			return unimplemented(sqllex, "create publication")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4591
		{
			return unimplemented(sqllex, "create rule")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4592
		{
			return unimplemented(sqllex, "create server")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4593
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4594
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4595
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4596
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4599
		{
		}
	case 580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4600
		{
		}
	case 581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4603
		{
		}
	case 582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4604
		{
		}
	case 583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4607
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4610
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4611
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4612
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4613
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4614
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4615
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4616
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4617
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4618
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4619
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4620
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4621
		{
			return unimplemented(sqllex, "drop server")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4622
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4623
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4627
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4628
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4629
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4630
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4631
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4633
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4634
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4635
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4636
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4637
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4647
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4655
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 623:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4663
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4673
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4682
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4686
		{
			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4690
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4696
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4700
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4711
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4723
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4729
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				UsingExtremes: true,
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4735
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Where: tree.NewWhere(tree.AstWhere, sqlDollar[1].union.expr()),
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4750
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4759
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4777
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4787
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4808
		{
		}
	case 643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4810
		{
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4818
		{
			sqlVAL.str = ""
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 647:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4828
		{

			sqlVAL.union.val = nil
		}
	case 648:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4843
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Using:     sqlDollar[5].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4854
		{
			return helpWith(sqllex, "DELETE")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4858
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 651:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4862
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4872
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4875
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4877
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeSequences}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4900
		{
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4901
		{
			return helpWith(sqllex, "DROP")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4905
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4906
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4911
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4919
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4923
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4927
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4936
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4944
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4952
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4956
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4959
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4971
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4974
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4982
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4991
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4999
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5007
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5015
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5022
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5029
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5037
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5044
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5054
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5058
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5067
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5075
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5082
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5090
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5094
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5097
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5101
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5106
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5128
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5133
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5135
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5140
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5144
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5167
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5174
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5176
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5184
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5192
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5200
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5208
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5219
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5227
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5230
		{
			return helpWith(sqllex, "DELETE")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5232
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5233
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5234
		{
			return helpWith(sqllex, "INSERT")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5237
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5239
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5242
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5247
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5248
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5249
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5254
		{
			return helpWith(sqllex, "DELETE")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5255
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5256
		{
			return helpWith(sqllex, "INSERT")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5262
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5263
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5267
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5271
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 777:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5287
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5291
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5295
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5302
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5316
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5322
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5348
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5355
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5359
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5369
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5377
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5390
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5398
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5406
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5410
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 796:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5414
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5424
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5431
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5439
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 801:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5457
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5461
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5465
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5469
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5472
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5496
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5500
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5504
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5512
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5523
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5527
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5539
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5551
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5563
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5573
		{
			return helpWith(sqllex, "GRANT")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5601
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5621
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5632
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5643
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5655
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5691
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[11].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5703
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5713
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[6].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:       sqlDollar[8].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5724
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5727
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5737
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5765
		{
			return helpWith(sqllex, "RESET")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5766
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5774
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5778
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5782
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5785
		{
			return helpWith(sqllex, "RESET")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5793
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5796
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5810
		{
			return helpWith(sqllex, "USE")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5814
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5815
		{
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5816
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5820
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5821
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5822
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5823
		{
			return helpWith(sqllex, "USE")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5839
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5854
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5857
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5875
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5883
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 875:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5897
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5907
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5911
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5915
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5919
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5923
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5937
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5947
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5955
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5962
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5963
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5977
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5993
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5999
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6005
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6008
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6010
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6013
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6016
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6030
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6035
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6055
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6060
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6076
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6080
		{
			return unimplemented(sqllex, "set from current")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6084
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6089
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6098
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6103
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6107
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6119
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6124
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6135
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6141
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6152
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6173
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6177
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6183
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6195
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6199
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6205
		{
			sqlVAL.union.val = tree.Low
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = tree.Normal
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6213
		{
			sqlVAL.union.val = tree.High
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6224
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6237
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6241
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6258
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6259
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6260
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6261
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6262
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6263
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6264
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6265
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6266
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6267
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6269
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6270
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6271
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6272
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6273
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6274
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6276
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6277
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6278
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6280
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6282
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6283
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6284
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6285
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6286
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6287
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6288
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6289
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6290
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6291
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6292
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6293
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6294
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6295
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6296
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6297
		{
			return helpWith(sqllex, "SHOW")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6300
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6309
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6315
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6320
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6340
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = true
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = false
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6372
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6382
		{
			sqlVAL.union.val = true
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6386
		{
			sqlVAL.union.val = false
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6390
		{
			sqlVAL.union.val = false
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6400
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6405
		{
			return helpWith(sqllex, "FETCH")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6418
		{
			return helpWith(sqllex, "MOVE")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6429
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6436
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6443
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6450
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6457
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6469
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6477
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6485
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6492
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6500
		{
			sqlVAL.union.val = int64(1)
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6504
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6505
		{
			sqlVAL.union.val = int64(1)
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.union.val = int64(1)
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6512
		{
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6513
		{
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6516
		{
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6517
		{
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6521
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6526
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6531
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6536
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6541
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6551
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6552
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6553
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6558
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6568
		{
			sqlVAL.str = "client_encoding"
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6573
		{
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6575
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6580
		{
			sqlVAL.str = "timezone"
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6581
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6589
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.union.val = &tree.ShowTableStats{
				Table:   sqlDollar[5].union.unresolvedObjectName(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6616
		{

			sqlVAL.union.val = &tree.ShowTableStats{
				Table:     sqlDollar[7].union.unresolvedObjectName(),
				UsingJSON: true,
				Options:   sqlDollar[8].union.kvOptions(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6624
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6637
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6645
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6653
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6659
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6669
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6686
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6694
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6702
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6710
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupValidateDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6717
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6721
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6733
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6737
		{
			sqlVAL.union.val = tree.BackupValidateDetails
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6749
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6753
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6756
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6761
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6767
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6770
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6774
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6776
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6790
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6798
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6801
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6809
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6813
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6817
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6824
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6835
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6841
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6847
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6853
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6860
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6883
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6890
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6893
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6906
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = &tree.ShowGrants{
				Targets:  &tree.GrantTargetList{System: true},
				Grantees: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6921
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6929
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6932
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6934
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6942
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6945
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6954
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6962
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6965
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6967
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6970
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6978
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6981
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6983
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6986
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = true
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6992
		{
			sqlVAL.union.val = true
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = false
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7011
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7015
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7019
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7022
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7023
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7024
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7026
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7034
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7038
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7041
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7043
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7051
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7059
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7067
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7068
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7078
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7084
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7086
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7092
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7100
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7104
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7108
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7114
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7118
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7133
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7136
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7138
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7141
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7143
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7147
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7150
		{
			sqlVAL.union.val = true
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7151
		{
			sqlVAL.union.val = false
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7159
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7162
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7167
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7175
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7185
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7198
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7205
		{
			sqlVAL.union.val = &tree.ShowFunctions{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			}}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7214
		{
			sqlVAL.union.val = &tree.ShowFunctions{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			}}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = &tree.ShowFunctions{}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7226
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7236
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7238
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7241
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = true
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = false
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7252
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7256
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7259
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7270
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7273
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7280
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7284
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7288
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7298
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7305
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7309
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7320
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7323
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7331
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7336
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7341
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7345
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7352
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7356
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7359
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7372
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7376
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7381
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7386
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7391
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7396
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeIndexes, Name: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7401
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSecondaryIndexes, Name: sqlDollar[6].union.unresolvedObjectName()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7406
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7426
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7439
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7444
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7453
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7456
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7458
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{ConnectionLabel: sqlDollar[5].union.expr()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7461
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7469
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7472
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7483
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7493
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7501
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7509
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7517
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7530
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7532
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7535
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7540
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7544
		{
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7553
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7567
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7576
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7581
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7588
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7597
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7617
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7623
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7629
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7642
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7648
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7654
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7658
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7664
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7671
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7677
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7804
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7808
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7812
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7859
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = tree.GrantTargetList{ExternalConnections: sqlDollar[3].union.nameList()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = tree.GrantTargetList{Functions: sqlDollar[2].union.functionObjs()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7886
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7894
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7900
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7904
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7915
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7923
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7941
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7945
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7953
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7974
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7975
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7976
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7977
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7983
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7984
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7985
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7986
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7997
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8016
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8025
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8027
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8038
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8070
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8072
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8078
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8089
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8098
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8111
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8125
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8153
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8189
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8204
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8232
		{

			sqlVAL.union.val = nil
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8238
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8244
		{
			sqlVAL.str = ""
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8248
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8254
		{
			sqlVAL.union.val = nil
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8271
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8275
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8289
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8301
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8305
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8311
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8324
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8338
		{
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8339
		{
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8340
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8364
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8368
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8373
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8383
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.union.val = sqlDollar[1].union.colTableDef()
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8395
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8421
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8432
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8433
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8435
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8436
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8438
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8439
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8440
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8445
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8452
		{
			sqlVAL.str = ""
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8465
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8473
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8501
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8513
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8520
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8553
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8577
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8588
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8592
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8606
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8610
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8614
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8664
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8672
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8676
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8684
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8702
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8723
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8729
		{

			sqlVAL.union.val = true
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.union.val = false
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8739
		{
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8743
		{
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8746
		{
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8750
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             "",
				Columns:          sqlDollar[3].union.idxElems(),
				Sharded:          sqlDollar[5].union.shardedIndexDef(),
				Storing:          sqlDollar[6].union.nameList(),
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
				NotVisible:       sqlDollar[11].union.bool(),
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
					NotVisible:       sqlDollar[12].union.bool(),
				},
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8791
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             "",
				Columns:          sqlDollar[4].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[6].union.partitionByIndex(),
				StorageParams:    sqlDollar[7].union.storageParams(),
				Predicate:        sqlDollar[8].union.expr(),
				NotVisible:       sqlDollar[9].union.bool(),
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8817
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8829
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8834
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8840
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8871
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8882
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8899
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8909
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8920
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8924
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8937
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8965
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8985
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8992
		{
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8993
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8994
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8995
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8996
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8997
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9025
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9037
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9041
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9047
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9071
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9079
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9164
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9173
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9181
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9192
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9209
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9210
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9220
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9222
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9224
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9226
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9229
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9231
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9232
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9234
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9237
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9239
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9250
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9253
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9257
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9284
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9299
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9311
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9318
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9322
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.str = ""
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9338
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9345
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9349
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = true
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9361
		{

			sqlVAL.union.val = true
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = false
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9378
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9392
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9404
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9416
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9427
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9438
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = false
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = true
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.union.val = true
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9456
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9460
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9464
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9468
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9476
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9508
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9566
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9570
		{
			sqlVAL.union.val = nil
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9585
		{
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9586
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9603
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9611
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9613
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9615
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9617
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9619
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9621
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9635
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9639
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:9656
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[17].union.bool(),
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:9674
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[20].union.bool(),
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9693
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[16].union.bool(),
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:9710
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[19].union.bool(),
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9727
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9731
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = false
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = true
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = false
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = true
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = false
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9772
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9785
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9791
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9797
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9805
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.str = ""
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.str = ""
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9836
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = true
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = false
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = false
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9860
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9872
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9878
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9886
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9908
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9943
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9968
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9977
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10103
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10109
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10121
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10127
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10141
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10147
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10155
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10206
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = true
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10225
		{
			sqlVAL.union.val = false
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10231
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10250
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = privilege.Functions
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10270
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10276
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.str = ""
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10305
		{
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10306
		{
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10309
		{
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10310
		{
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10321
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10339
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10348
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10369
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10377
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10398
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10406
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10417
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10421
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10422
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10423
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10442
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10452
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10455
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10464
		{
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10465
		{
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10466
		{
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10480
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10483
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10489
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10490
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10497
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10501
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10504
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10508
		{
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10509
		{
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10537
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10550
		{
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10552
		{
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10556
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10585
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10601
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10605
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:10615
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
				SecondaryRegion: tree.Name(sqlDollar[15].str),
			}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
				SecondaryRegion: tree.Name(sqlDollar[17].str),
			}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10648
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10653
		{
			sqlVAL.str = ""
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.str = ""
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10677
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10683
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10688
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10695
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10705
		{

		}
	case 1808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10716
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10720
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10735
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10739
		{
			sqlVAL.str = ""
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10745
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.str = ""
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10755
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.str = ""
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10765
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.str = ""
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10775
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10789
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10800
		{
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10801
		{
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10816
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10830
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10841
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10848
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10852
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10861
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10866
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10886
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10890
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10910
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10938
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10955
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10960
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10981
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10993
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10996
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11005
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11009
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11025
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11029
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11046
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11061
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11160
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11164
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11194
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11205
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11240
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11241
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11242
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11303
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11325
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11347
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11363
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11384
		{
			sqlVAL.union.val = true
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11388
		{
			sqlVAL.union.val = false
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11394
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11404
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11416
		{
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11417
		{
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11421
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11425
		{
			sqlVAL.union.val = nil
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11430
		{
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11431
		{
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11435
		{
			sqlVAL.union.val = true
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11439
		{
			sqlVAL.union.val = false
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11443
		{
			sqlVAL.union.val = false
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = true
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11455
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11460
		{
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11461
		{
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11464
		{
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11465
		{
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11469
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11473
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11479
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11506
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11518
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11523
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11549
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11569
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11570
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11574
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11582
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11596
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11600
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11608
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11637
		{
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11638
		{
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11641
		{
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11642
		{
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11659
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11663
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11668
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11669
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11676
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11677
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11678
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11682
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11686
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11705
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11708
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11710
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11722
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11725
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11743
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11747
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11752
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11757
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11763
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11768
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11778
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11784
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11789
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11794
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11806
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11817
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11821
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11825
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11867
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11877
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11887
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11895
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11904
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11912
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11923
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11947
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11953
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11964
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11968
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11974
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11980
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11986
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11990
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = tree.ColumnDefList{tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12000
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), tree.ColumnDef{Name: tree.Name(sqlDollar[3].str)})
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12007
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12011
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12017
		{
			sqlVAL.union.val = tree.ColumnDefList{sqlDollar[1].union.colDef()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12021
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), sqlDollar[3].union.colDef())
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12027
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12031
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str), Type: sqlDollar[2].union.typeReference()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12036
		{
			sqlVAL.union.val = nil
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12037
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12046
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12052
		{
			sqlVAL.union.val = true
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12056
		{
			sqlVAL.union.val = false
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12076
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12080
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12084
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12088
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12092
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12106
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12113
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12119
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12123
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12130
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12136
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12143
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12149
		{
			sqlVAL.str = tree.AstFull
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12153
		{
			sqlVAL.str = tree.AstLeft
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.str = tree.AstRight
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.str = tree.AstInner
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12167
		{
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12168
		{
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12192
		{
			sqlVAL.str = tree.AstHash
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12196
		{
			sqlVAL.str = tree.AstMerge
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12200
		{
			sqlVAL.str = tree.AstLookup
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12204
		{
			sqlVAL.str = tree.AstInverted
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12208
		{
			sqlVAL.str = ""
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12225
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12230
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12232
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12233
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12237
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12242
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12250
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: sqlDollar[2].union.unresolvedObjectName(), Star: false}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12254
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: nil, Star: true}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12268
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12272
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12278
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12284
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12294
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12304
		{
			sqlVAL.union.val = true
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12308
		{
			sqlVAL.union.val = false
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12314
		{
			sqlVAL.union.val = true
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12318
		{
			sqlVAL.union.val = false
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12324
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12331
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12343
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12356
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12364
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12365
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12375
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12382
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12383
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12385
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12393
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12394
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12406
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12413
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12422
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12462
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12467
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12472
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12473
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12476
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12477
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12478
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12479
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12480
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12481
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12482
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12483
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12484
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12485
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12487
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12488
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12489
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12490
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12491
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12492
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12493
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12494
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12495
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12496
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12497
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12498
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12499
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12500
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12501
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12502
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12503
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12504
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12505
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12506
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12507
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12510
		{
			sqlVAL.union.val = types.Geography
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12511
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12512
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12514
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12518
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12522
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12530
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12558
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12566
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12574
		{
			sqlVAL.union.val = nil
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12581
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12585
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12589
		{
			sqlVAL.union.val = types.Int2
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12593
		{
			sqlVAL.union.val = types.Int
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12597
		{
			sqlVAL.union.val = types.Float4
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12601
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12605
		{
			sqlVAL.union.val = types.Float
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12609
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12617
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12625
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12633
		{
			sqlVAL.union.val = types.Bool
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12639
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12652
		{
			sqlVAL.union.val = types.Float
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12658
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12664
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12672
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12676
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12680
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12686
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12698
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12704
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12708
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12712
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12716
		{
			sqlVAL.union.val = types.String
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12725
		{
			sqlVAL.union.val = true
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12726
		{
			sqlVAL.union.val = false
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12731
		{
			sqlVAL.union.val = types.Date
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12735
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12743
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12755
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12757
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12766
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12774
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12787
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12791
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12801
		{
			sqlVAL.union.val = true
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12802
		{
			sqlVAL.union.val = false
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12803
		{
			sqlVAL.union.val = false
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12807
		{
			sqlVAL.union.val = types.Interval
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12811
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12815
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12826
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12834
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12842
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12850
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12858
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12866
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12872
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12881
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12890
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12899
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12905
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12914
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12920
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12930
		{
			sqlVAL.union.val = nil
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12936
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12944
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12981
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12985
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12989
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12993
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13004
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13009
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13013
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13017
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13021
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13025
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13029
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13033
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13037
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13041
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13045
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13049
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13053
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13057
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13061
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13065
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13069
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13073
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13077
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13081
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13085
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13089
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13093
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13097
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13101
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13105
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13109
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13113
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13117
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13121
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13125
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13129
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13133
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13137
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13141
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13145
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13149
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13153
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13161
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13171
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13175
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13179
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13183
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13187
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13191
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13195
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13199
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13203
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13207
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13211
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13215
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13219
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13223
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13227
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13231
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13235
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13239
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13243
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13247
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13251
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13259
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13267
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13271
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13275
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13279
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13283
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13296
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13300
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13304
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13308
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13312
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13316
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13320
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13324
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13328
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13332
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13336
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13340
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13344
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13348
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13352
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13356
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13360
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13377
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13382
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13394
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13398
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13402
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13406
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13410
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13414
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13418
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13422
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13426
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13430
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13434
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13438
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13442
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13446
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13450
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13454
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13458
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13462
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13466
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13470
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13474
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13478
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13482
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13486
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13490
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13498
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13508
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13512
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13516
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13520
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13534
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13542
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13578
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13582
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13586
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13590
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13594
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13599
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13601
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13605
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13609
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13613
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13617
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13621
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13625
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13634
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13641
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13645
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13649
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13659
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13664
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13668
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13672
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13676
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13680
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13683
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13687
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13691
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13694
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13695
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13697
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13703
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13707
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13710
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13719
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							un, err := name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
							typ = &un
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13772
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13785
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13797
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13806
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13807
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13812
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13816
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13820
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13826
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13830
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13834
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13838
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13842
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13846
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13852
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13856
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13860
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13864
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13868
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13872
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13876
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13880
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13884
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13888
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13892
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13896
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13900
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13907
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13910
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13912
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13915
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13917
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13921
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13924
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13926
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13930
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13933
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13935
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13939
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13942
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13944
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13948
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13951
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13953
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13956
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13958
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13961
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13963
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13966
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13968
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13971
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13973
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13976
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13978
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13982
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13985
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13986
		{
			return unimplemented(sqllex, "treat")
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13988
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13992
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13996
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14000
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14004
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14007
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14009
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14012
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14018
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14022
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14028
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14032
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14039
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14043
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14049
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14053
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14059
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14067
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14071
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14075
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14082
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14102
		{
			sqlVAL.str = ""
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14108
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14112
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14118
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14126
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14134
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14142
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14148
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14161
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14189
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14193
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14197
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14201
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14208
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14217
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14221
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14225
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14229
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14234
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14247
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14251
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14258
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14270
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14274
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14278
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14294
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14295
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14296
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14297
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14298
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14299
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14300
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14301
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14302
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14303
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14304
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14305
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14307
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14308
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14309
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14310
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14311
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14312
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14313
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14314
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14315
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14316
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14317
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14318
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14319
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14320
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14321
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14322
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14323
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14324
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14325
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14326
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14327
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14328
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14329
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14334
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14350
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14357
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14358
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14359
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14360
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14383
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14387
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14393
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14397
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14401
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14412
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14416
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14422
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14426
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2535:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14433
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14439
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14443
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14449
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14453
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14459
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14463
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14469
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14473
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14479
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14483
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14506
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14510
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14514
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14520
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14527
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2559:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14531
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14548
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14552
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14556
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14560
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14564
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14570
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14576
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14582
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14586
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14590
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14596
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2572:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14608
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14615
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14619
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14625
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14631
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14635
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14642
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14648
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2581:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14652
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14659
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14665
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14669
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14674
		{
		}
	case 2587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14675
		{
		}
	case 2588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14679
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14683
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14689
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14698
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14702
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14706
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14718
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14722
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14728
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14732
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14751
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14759
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14782
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14791
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14795
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14799
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14803
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14809
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14813
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14828
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14832
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14844
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14848
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14857
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14868
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14877
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14885
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14902
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14987
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14995
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14999
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15005
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15009
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15015
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15021
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2652:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15028
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15055
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15062
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2661:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15066
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2662:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15070
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2664:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15084
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2665:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15088
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15092
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15105
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15110
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15118
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15136
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15149
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15156
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2684:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15181
		{
			sqlVAL.str = ""
		}
	case 2685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15187
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2686:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15191
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
