// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:74

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}

//line sql-gen.y:690
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11937

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1348,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	231, 202,
	481, 202,
	-2, 0,
	-1, 79,
	220, 1148,
	233, 1148,
	249, 340,
	372, 340,
	381, 930,
	413, 340,
	425, 930,
	466, 930,
	492, 340,
	518, 930,
	-2, 0,
	-1, 85,
	249, 344,
	-2, 0,
	-1, 86,
	128, 1348,
	226, 1348,
	503, 1348,
	504, 1348,
	-2, 0,
	-1, 102,
	145, 1319,
	163, 1319,
	176, 1319,
	229, 1319,
	262, 1319,
	325, 1319,
	335, 1319,
	498, 1319,
	-2, 1290,
	-1, 138,
	153, 808,
	248, 808,
	375, 777,
	430, 777,
	484, 808,
	486, 777,
	-2, 0,
	-1, 140,
	4, 1350,
	21, 1350,
	22, 1350,
	23, 1350,
	24, 1350,
	25, 1350,
	26, 1350,
	28, 1350,
	29, 1350,
	35, 1350,
	40, 1350,
	41, 1350,
	43, 1350,
	44, 1350,
	45, 1350,
	46, 1350,
	47, 1350,
	48, 1350,
	49, 1350,
	51, 1350,
	52, 1350,
	53, 1350,
	54, 1350,
	56, 1350,
	57, 1350,
	58, 1350,
	59, 1350,
	60, 1350,
	61, 1350,
	62, 1350,
	66, 1350,
	67, 1350,
	68, 1350,
	69, 1350,
	71, 1350,
	72, 1350,
	73, 1350,
	77, 1350,
	78, 1350,
	79, 1350,
	80, 1350,
	81, 1350,
	82, 1350,
	83, 1350,
	86, 1350,
	87, 1350,
	88, 1350,
	89, 1350,
	90, 1350,
	92, 1350,
	94, 1350,
	95, 1350,
	96, 1350,
	97, 1350,
	98, 1350,
	99, 1350,
	101, 1350,
	102, 1350,
	103, 1350,
	105, 1350,
	106, 1350,
	114, 1350,
	115, 1350,
	116, 1350,
	117, 1350,
	119, 1350,
	120, 1350,
	121, 1350,
	123, 1350,
	124, 1350,
	125, 1350,
	127, 1350,
	128, 1350,
	130, 1350,
	131, 1350,
	132, 1350,
	135, 1350,
	136, 1350,
	137, 1350,
	139, 1350,
	140, 1350,
	142, 1350,
	143, 1350,
	144, 1350,
	146, 1350,
	147, 1350,
	148, 1350,
	149, 1350,
	150, 1350,
	151, 1350,
	152, 1350,
	153, 1350,
	154, 1350,
	155, 1350,
	156, 1350,
	157, 1350,
	158, 1350,
	159, 1350,
	160, 1350,
	162, 1350,
	168, 1350,
	169, 1350,
	170, 1350,
	171, 1350,
	175, 1350,
	177, 1350,
	181, 1350,
	182, 1350,
	183, 1350,
	184, 1350,
	185, 1350,
	186, 1350,
	187, 1350,
	188, 1350,
	189, 1350,
	190, 1350,
	191, 1350,
	192, 1350,
	194, 1350,
	195, 1350,
	197, 1350,
	198, 1350,
	200, 1350,
	201, 1350,
	202, 1350,
	203, 1350,
	204, 1350,
	205, 1350,
	206, 1350,
	207, 1350,
	208, 1350,
	210, 1350,
	211, 1350,
	213, 1350,
	214, 1350,
	215, 1350,
	216, 1350,
	220, 1350,
	221, 1350,
	222, 1350,
	223, 1350,
	226, 1350,
	227, 1350,
	228, 1350,
	230, 1350,
	232, 1350,
	233, 1350,
	235, 1350,
	237, 1350,
	238, 1350,
	239, 1350,
	241, 1350,
	245, 1350,
	246, 1350,
	247, 1350,
	248, 1350,
	249, 1350,
	250, 1350,
	252, 1350,
	253, 1350,
	254, 1350,
	256, 1350,
	257, 1350,
	259, 1350,
	260, 1350,
	263, 1350,
	267, 1350,
	268, 1350,
	271, 1350,
	272, 1350,
	273, 1350,
	274, 1350,
	276, 1350,
	277, 1350,
	278, 1350,
	279, 1350,
	280, 1350,
	281, 1350,
	282, 1350,
	283, 1350,
	284, 1350,
	285, 1350,
	286, 1350,
	287, 1350,
	288, 1350,
	289, 1350,
	290, 1350,
	291, 1350,
	292, 1350,
	293, 1350,
	294, 1350,
	295, 1350,
	296, 1350,
	298, 1350,
	300, 1350,
	301, 1350,
	302, 1350,
	303, 1350,
	304, 1350,
	305, 1350,
	306, 1350,
	307, 1350,
	308, 1350,
	309, 1350,
	310, 1350,
	311, 1350,
	313, 1350,
	315, 1350,
	317, 1350,
	318, 1350,
	320, 1350,
	321, 1350,
	322, 1350,
	323, 1350,
	324, 1350,
	327, 1350,
	330, 1350,
	331, 1350,
	332, 1350,
	333, 1350,
	336, 1350,
	337, 1350,
	338, 1350,
	340, 1350,
	342, 1350,
	343, 1350,
	344, 1350,
	345, 1350,
	346, 1350,
	347, 1350,
	348, 1350,
	349, 1350,
	350, 1350,
	351, 1350,
	352, 1350,
	353, 1350,
	355, 1350,
	356, 1350,
	357, 1350,
	358, 1350,
	359, 1350,
	360, 1350,
	361, 1350,
	362, 1350,
	363, 1350,
	364, 1350,
	365, 1350,
	366, 1350,
	367, 1350,
	368, 1350,
	369, 1350,
	371, 1350,
	373, 1350,
	374, 1350,
	375, 1350,
	376, 1350,
	377, 1350,
	378, 1350,
	379, 1350,
	380, 1350,
	381, 1350,
	382, 1350,
	383, 1350,
	385, 1350,
	391, 1350,
	393, 1350,
	394, 1350,
	395, 1350,
	396, 1350,
	397, 1350,
	398, 1350,
	399, 1350,
	400, 1350,
	402, 1350,
	403, 1350,
	404, 1350,
	406, 1350,
	407, 1350,
	408, 1350,
	409, 1350,
	410, 1350,
	411, 1350,
	413, 1350,
	414, 1350,
	415, 1350,
	416, 1350,
	417, 1350,
	418, 1350,
	419, 1350,
	420, 1350,
	421, 1350,
	422, 1350,
	423, 1350,
	425, 1350,
	426, 1350,
	427, 1350,
	428, 1350,
	429, 1350,
	430, 1350,
	432, 1350,
	433, 1350,
	434, 1350,
	435, 1350,
	436, 1350,
	438, 1350,
	439, 1350,
	440, 1350,
	441, 1350,
	442, 1350,
	443, 1350,
	444, 1350,
	446, 1350,
	448, 1350,
	449, 1350,
	450, 1350,
	451, 1350,
	452, 1350,
	453, 1350,
	454, 1350,
	455, 1350,
	456, 1350,
	457, 1350,
	458, 1350,
	459, 1350,
	460, 1350,
	462, 1350,
	463, 1350,
	465, 1350,
	467, 1350,
	468, 1350,
	469, 1350,
	470, 1350,
	471, 1350,
	472, 1350,
	473, 1350,
	474, 1350,
	476, 1350,
	477, 1350,
	478, 1350,
	479, 1350,
	480, 1350,
	482, 1350,
	484, 1350,
	485, 1350,
	486, 1350,
	487, 1350,
	488, 1350,
	489, 1350,
	491, 1350,
	492, 1350,
	493, 1350,
	494, 1350,
	496, 1350,
	497, 1350,
	500, 1350,
	501, 1350,
	502, 1350,
	503, 1350,
	504, 1350,
	505, 1350,
	506, 1350,
	508, 1350,
	511, 1350,
	512, 1350,
	513, 1350,
	514, 1350,
	515, 1350,
	516, 1350,
	518, 1350,
	519, 1350,
	520, 1350,
	521, 1350,
	526, 1350,
	527, 1350,
	528, 1350,
	529, 1350,
	530, 1350,
	531, 1350,
	-2, 0,
	-1, 141,
	1, 1221,
	126, 1221,
	237, 1221,
	314, 1221,
	371, 1221,
	379, 1221,
	534, 1221,
	558, 1221,
	-2, 0,
	-1, 143,
	1, 1221,
	558, 1221,
	-2, 0,
	-1, 144,
	1, 1221,
	558, 1221,
	-2, 0,
	-1, 145,
	1, 1221,
	481, 1221,
	558, 1221,
	-2, 0,
	-1, 174,
	145, 1318,
	163, 1318,
	176, 1318,
	229, 1318,
	262, 1318,
	325, 1318,
	335, 1318,
	498, 1318,
	-2, 1293,
	-1, 212,
	4, 1357,
	5, 1357,
	6, 1357,
	7, 1357,
	8, 1357,
	9, 1357,
	10, 1357,
	21, 1357,
	22, 1357,
	23, 1357,
	24, 1357,
	25, 1357,
	26, 1357,
	28, 1357,
	29, 1357,
	35, 1357,
	36, 1357,
	40, 1357,
	41, 1357,
	42, 1357,
	43, 1357,
	44, 1357,
	45, 1357,
	46, 1357,
	47, 1357,
	48, 1357,
	49, 1357,
	51, 1357,
	52, 1357,
	53, 1357,
	54, 1357,
	56, 1357,
	57, 1357,
	58, 1357,
	59, 1357,
	60, 1357,
	61, 1357,
	62, 1357,
	63, 1357,
	64, 1357,
	65, 1357,
	66, 1357,
	67, 1357,
	68, 1357,
	69, 1357,
	71, 1357,
	72, 1357,
	73, 1357,
	75, 1357,
	77, 1357,
	78, 1357,
	79, 1357,
	80, 1357,
	81, 1357,
	82, 1357,
	83, 1357,
	86, 1357,
	87, 1357,
	88, 1357,
	89, 1357,
	90, 1357,
	92, 1357,
	94, 1357,
	95, 1357,
	96, 1357,
	97, 1357,
	98, 1357,
	99, 1357,
	101, 1357,
	102, 1357,
	103, 1357,
	104, 1357,
	105, 1357,
	106, 1357,
	107, 1357,
	108, 1357,
	109, 1357,
	110, 1357,
	111, 1357,
	112, 1357,
	113, 1357,
	114, 1357,
	115, 1357,
	116, 1357,
	117, 1357,
	118, 1357,
	119, 1357,
	120, 1357,
	121, 1357,
	122, 1357,
	123, 1357,
	124, 1357,
	125, 1357,
	127, 1357,
	128, 1357,
	130, 1357,
	131, 1357,
	132, 1357,
	135, 1357,
	136, 1357,
	137, 1357,
	139, 1357,
	140, 1357,
	142, 1357,
	143, 1357,
	144, 1357,
	146, 1357,
	147, 1357,
	148, 1357,
	149, 1357,
	150, 1357,
	151, 1357,
	152, 1357,
	153, 1357,
	154, 1357,
	155, 1357,
	156, 1357,
	157, 1357,
	158, 1357,
	159, 1357,
	160, 1357,
	161, 1357,
	162, 1357,
	168, 1357,
	169, 1357,
	170, 1357,
	171, 1357,
	175, 1357,
	177, 1357,
	180, 1357,
	181, 1357,
	182, 1357,
	183, 1357,
	184, 1357,
	185, 1357,
	186, 1357,
	187, 1357,
	188, 1357,
	189, 1357,
	190, 1357,
	191, 1357,
	192, 1357,
	194, 1357,
	195, 1357,
	197, 1357,
	198, 1357,
	200, 1357,
	201, 1357,
	202, 1357,
	203, 1357,
	204, 1357,
	205, 1357,
	206, 1357,
	207, 1357,
	208, 1357,
	209, 1357,
	210, 1357,
	211, 1357,
	213, 1357,
	214, 1357,
	215, 1357,
	216, 1357,
	220, 1357,
	221, 1357,
	222, 1357,
	223, 1357,
	225, 1357,
	226, 1357,
	227, 1357,
	228, 1357,
	230, 1357,
	232, 1357,
	233, 1357,
	234, 1357,
	235, 1357,
	236, 1357,
	237, 1357,
	238, 1357,
	239, 1357,
	240, 1357,
	241, 1357,
	245, 1357,
	246, 1357,
	247, 1357,
	248, 1357,
	249, 1357,
	250, 1357,
	252, 1357,
	253, 1357,
	254, 1357,
	256, 1357,
	257, 1357,
	258, 1357,
	259, 1357,
	260, 1357,
	261, 1357,
	263, 1357,
	267, 1357,
	268, 1357,
	269, 1357,
	270, 1357,
	271, 1357,
	272, 1357,
	273, 1357,
	274, 1357,
	276, 1357,
	277, 1357,
	278, 1357,
	279, 1357,
	280, 1357,
	281, 1357,
	282, 1357,
	283, 1357,
	284, 1357,
	285, 1357,
	286, 1357,
	287, 1357,
	288, 1357,
	289, 1357,
	290, 1357,
	291, 1357,
	292, 1357,
	293, 1357,
	294, 1357,
	295, 1357,
	296, 1357,
	298, 1357,
	299, 1357,
	300, 1357,
	301, 1357,
	302, 1357,
	303, 1357,
	304, 1357,
	305, 1357,
	306, 1357,
	307, 1357,
	308, 1357,
	309, 1357,
	310, 1357,
	311, 1357,
	312, 1357,
	313, 1357,
	314, 1357,
	315, 1357,
	316, 1357,
	317, 1357,
	318, 1357,
	319, 1357,
	320, 1357,
	321, 1357,
	322, 1357,
	323, 1357,
	324, 1357,
	327, 1357,
	331, 1357,
	332, 1357,
	333, 1357,
	336, 1357,
	337, 1357,
	338, 1357,
	339, 1357,
	340, 1357,
	341, 1357,
	342, 1357,
	343, 1357,
	344, 1357,
	345, 1357,
	346, 1357,
	347, 1357,
	348, 1357,
	349, 1357,
	350, 1357,
	351, 1357,
	352, 1357,
	353, 1357,
	355, 1357,
	356, 1357,
	357, 1357,
	358, 1357,
	359, 1357,
	360, 1357,
	361, 1357,
	362, 1357,
	363, 1357,
	364, 1357,
	365, 1357,
	366, 1357,
	367, 1357,
	368, 1357,
	369, 1357,
	371, 1357,
	373, 1357,
	374, 1357,
	375, 1357,
	376, 1357,
	377, 1357,
	378, 1357,
	379, 1357,
	380, 1357,
	381, 1357,
	382, 1357,
	383, 1357,
	385, 1357,
	391, 1357,
	393, 1357,
	394, 1357,
	395, 1357,
	396, 1357,
	397, 1357,
	398, 1357,
	399, 1357,
	400, 1357,
	402, 1357,
	403, 1357,
	404, 1357,
	405, 1357,
	406, 1357,
	407, 1357,
	408, 1357,
	409, 1357,
	410, 1357,
	411, 1357,
	413, 1357,
	414, 1357,
	415, 1357,
	416, 1357,
	417, 1357,
	418, 1357,
	419, 1357,
	420, 1357,
	421, 1357,
	422, 1357,
	423, 1357,
	425, 1357,
	426, 1357,
	427, 1357,
	428, 1357,
	429, 1357,
	430, 1357,
	431, 1357,
	432, 1357,
	433, 1357,
	434, 1357,
	435, 1357,
	436, 1357,
	437, 1357,
	438, 1357,
	439, 1357,
	440, 1357,
	441, 1357,
	442, 1357,
	443, 1357,
	444, 1357,
	446, 1357,
	448, 1357,
	449, 1357,
	450, 1357,
	451, 1357,
	452, 1357,
	453, 1357,
	454, 1357,
	455, 1357,
	456, 1357,
	457, 1357,
	458, 1357,
	459, 1357,
	460, 1357,
	462, 1357,
	463, 1357,
	464, 1357,
	465, 1357,
	467, 1357,
	468, 1357,
	469, 1357,
	470, 1357,
	471, 1357,
	472, 1357,
	473, 1357,
	474, 1357,
	476, 1357,
	477, 1357,
	478, 1357,
	479, 1357,
	480, 1357,
	482, 1357,
	484, 1357,
	485, 1357,
	486, 1357,
	487, 1357,
	488, 1357,
	489, 1357,
	490, 1357,
	491, 1357,
	492, 1357,
	493, 1357,
	494, 1357,
	496, 1357,
	497, 1357,
	499, 1357,
	500, 1357,
	501, 1357,
	502, 1357,
	503, 1357,
	504, 1357,
	505, 1357,
	506, 1357,
	507, 1357,
	508, 1357,
	511, 1357,
	512, 1357,
	513, 1357,
	514, 1357,
	515, 1357,
	516, 1357,
	518, 1357,
	519, 1357,
	520, 1357,
	521, 1357,
	526, 1357,
	527, 1357,
	528, 1357,
	529, 1357,
	530, 1357,
	531, 1357,
	532, 1357,
	539, 1357,
	546, 1357,
	547, 1357,
	548, 1357,
	555, 1357,
	559, 1357,
	-2, 0,
	-1, 665,
	179, 2096,
	481, 2096,
	538, 2096,
	557, 2096,
	-2, 0,
	-1, 666,
	179, 2194,
	481, 2194,
	538, 2194,
	557, 2194,
	-2, 0,
	-1, 667,
	179, 2083,
	481, 2083,
	538, 2083,
	557, 2083,
	-2, 0,
	-1, 669,
	179, 2316,
	481, 2316,
	538, 2316,
	557, 2316,
	-2, 0,
	-1, 671,
	179, 2350,
	481, 2350,
	538, 2350,
	557, 2350,
	-2, 0,
	-1, 678,
	179, 2219,
	481, 2219,
	538, 2219,
	557, 2219,
	-2, 619,
	-1, 709,
	557, 2034,
	560, 2034,
	-2, 866,
	-1, 710,
	557, 2036,
	560, 2036,
	-2, 867,
	-1, 711,
	557, 2035,
	560, 2035,
	-2, 868,
	-1, 712,
	560, 1968,
	-2, 869,
	-1, 734,
	176, 216,
	-2, 0,
	-1, 755,
	42, 2038,
	-2, 0,
	-1, 756,
	518, 1125,
	-2, 931,
	-1, 772,
	4, 1477,
	21, 1477,
	22, 1477,
	23, 1477,
	24, 1477,
	25, 1477,
	26, 1477,
	28, 1477,
	29, 1477,
	35, 1477,
	40, 1477,
	41, 1477,
	43, 1477,
	44, 1477,
	45, 1477,
	46, 1477,
	47, 1477,
	48, 1477,
	49, 1477,
	51, 1477,
	52, 1477,
	53, 1477,
	54, 1477,
	56, 1477,
	57, 1477,
	58, 1477,
	59, 1477,
	60, 1477,
	61, 1477,
	62, 1477,
	66, 1477,
	67, 1477,
	68, 1477,
	69, 1477,
	71, 1477,
	72, 1477,
	73, 1477,
	77, 1477,
	78, 1477,
	79, 1477,
	80, 1477,
	81, 1477,
	82, 1477,
	83, 1477,
	86, 1477,
	87, 1477,
	88, 1477,
	89, 1477,
	90, 1477,
	92, 1477,
	94, 1477,
	95, 1477,
	96, 1477,
	97, 1477,
	98, 1477,
	99, 1477,
	101, 1477,
	102, 1477,
	103, 1477,
	105, 1477,
	106, 1477,
	114, 1477,
	115, 1477,
	116, 1477,
	117, 1477,
	119, 1477,
	120, 1477,
	121, 1477,
	123, 1477,
	124, 1477,
	125, 1477,
	127, 1477,
	128, 1477,
	130, 1477,
	131, 1477,
	132, 1477,
	135, 1477,
	136, 1477,
	137, 1477,
	139, 1477,
	140, 1477,
	142, 1477,
	143, 1477,
	144, 1477,
	146, 1477,
	147, 1477,
	148, 1477,
	149, 1477,
	150, 1477,
	151, 1477,
	152, 1477,
	153, 1477,
	154, 1477,
	155, 1477,
	156, 1477,
	157, 1477,
	158, 1477,
	159, 1477,
	160, 1477,
	162, 1477,
	168, 1477,
	169, 1477,
	170, 1477,
	171, 1477,
	175, 1477,
	177, 1477,
	181, 1477,
	182, 1477,
	183, 1477,
	184, 1477,
	185, 1477,
	186, 1477,
	187, 1477,
	188, 1477,
	189, 1477,
	190, 1477,
	191, 1477,
	192, 1477,
	194, 1477,
	195, 1477,
	197, 1477,
	198, 1477,
	200, 1477,
	201, 1477,
	202, 1477,
	203, 1477,
	204, 1477,
	205, 1477,
	206, 1477,
	207, 1477,
	208, 1477,
	210, 1477,
	211, 1477,
	213, 1477,
	214, 1477,
	215, 1477,
	216, 1477,
	220, 1477,
	221, 1477,
	222, 1477,
	223, 1477,
	226, 1477,
	227, 1477,
	228, 1477,
	230, 1477,
	232, 1477,
	233, 1477,
	235, 1477,
	237, 1477,
	238, 1477,
	239, 1477,
	241, 1477,
	245, 1477,
	246, 1477,
	247, 1477,
	248, 1477,
	249, 1477,
	250, 1477,
	252, 1477,
	253, 1477,
	254, 1477,
	256, 1477,
	257, 1477,
	259, 1477,
	260, 1477,
	263, 1477,
	267, 1477,
	268, 1477,
	271, 1477,
	272, 1477,
	273, 1477,
	274, 1477,
	276, 1477,
	277, 1477,
	278, 1477,
	279, 1477,
	280, 1477,
	281, 1477,
	282, 1477,
	283, 1477,
	284, 1477,
	285, 1477,
	286, 1477,
	287, 1477,
	288, 1477,
	289, 1477,
	290, 1477,
	291, 1477,
	292, 1477,
	293, 1477,
	294, 1477,
	295, 1477,
	296, 1477,
	298, 1477,
	300, 1477,
	301, 1477,
	302, 1477,
	303, 1477,
	304, 1477,
	305, 1477,
	306, 1477,
	307, 1477,
	308, 1477,
	309, 1477,
	310, 1477,
	311, 1477,
	313, 1477,
	315, 1477,
	317, 1477,
	318, 1477,
	320, 1477,
	321, 1477,
	322, 1477,
	323, 1477,
	324, 1477,
	327, 1477,
	331, 1477,
	332, 1477,
	333, 1477,
	336, 1477,
	337, 1477,
	338, 1477,
	340, 1477,
	342, 1477,
	343, 1477,
	344, 1477,
	345, 1477,
	346, 1477,
	347, 1477,
	348, 1477,
	349, 1477,
	350, 1477,
	351, 1477,
	352, 1477,
	353, 1477,
	355, 1477,
	356, 1477,
	357, 1477,
	358, 1477,
	359, 1477,
	360, 1477,
	361, 1477,
	362, 1477,
	363, 1477,
	364, 1477,
	365, 1477,
	366, 1477,
	367, 1477,
	368, 1477,
	369, 1477,
	371, 1477,
	373, 1477,
	374, 1477,
	375, 1477,
	376, 1477,
	377, 1477,
	378, 1477,
	379, 1477,
	380, 1477,
	381, 1477,
	382, 1477,
	383, 1477,
	385, 1477,
	391, 1477,
	393, 1477,
	394, 1477,
	395, 1477,
	396, 1477,
	397, 1477,
	398, 1477,
	399, 1477,
	400, 1477,
	402, 1477,
	403, 1477,
	404, 1477,
	406, 1477,
	407, 1477,
	408, 1477,
	409, 1477,
	410, 1477,
	411, 1477,
	413, 1477,
	414, 1477,
	415, 1477,
	416, 1477,
	417, 1477,
	418, 1477,
	419, 1477,
	420, 1477,
	421, 1477,
	422, 1477,
	423, 1477,
	425, 1477,
	426, 1477,
	427, 1477,
	428, 1477,
	429, 1477,
	430, 1477,
	432, 1477,
	433, 1477,
	434, 1477,
	435, 1477,
	436, 1477,
	438, 1477,
	439, 1477,
	440, 1477,
	441, 1477,
	442, 1477,
	443, 1477,
	444, 1477,
	446, 1477,
	448, 1477,
	449, 1477,
	450, 1477,
	451, 1477,
	452, 1477,
	453, 1477,
	454, 1477,
	455, 1477,
	456, 1477,
	457, 1477,
	458, 1477,
	459, 1477,
	460, 1477,
	462, 1477,
	463, 1477,
	465, 1477,
	467, 1477,
	468, 1477,
	469, 1477,
	470, 1477,
	471, 1477,
	472, 1477,
	473, 1477,
	474, 1477,
	476, 1477,
	477, 1477,
	478, 1477,
	479, 1477,
	480, 1477,
	482, 1477,
	484, 1477,
	485, 1477,
	486, 1477,
	487, 1477,
	488, 1477,
	489, 1477,
	491, 1477,
	492, 1477,
	493, 1477,
	494, 1477,
	496, 1477,
	497, 1477,
	500, 1477,
	501, 1477,
	502, 1477,
	503, 1477,
	504, 1477,
	505, 1477,
	506, 1477,
	508, 1477,
	511, 1477,
	512, 1477,
	513, 1477,
	514, 1477,
	515, 1477,
	516, 1477,
	518, 1477,
	519, 1477,
	520, 1477,
	521, 1477,
	526, 1477,
	527, 1477,
	528, 1477,
	529, 1477,
	530, 1477,
	531, 1477,
	-2, 0,
	-1, 796,
	4, 1146,
	21, 1146,
	22, 1146,
	23, 1146,
	24, 1146,
	25, 1146,
	26, 1146,
	28, 1146,
	29, 1146,
	35, 1146,
	40, 1146,
	41, 1146,
	43, 1146,
	44, 1146,
	45, 1146,
	46, 1146,
	47, 1146,
	48, 1146,
	49, 1146,
	51, 1146,
	52, 1146,
	53, 1146,
	54, 1146,
	56, 1146,
	57, 1146,
	58, 1146,
	59, 1146,
	60, 1146,
	61, 1146,
	62, 1146,
	66, 1146,
	67, 1146,
	68, 1146,
	69, 1146,
	71, 1146,
	72, 1146,
	73, 1146,
	77, 1146,
	78, 1146,
	79, 1146,
	80, 1146,
	81, 1146,
	82, 1146,
	83, 1146,
	86, 1146,
	87, 1146,
	88, 1146,
	89, 1146,
	90, 1146,
	92, 1146,
	94, 1146,
	95, 1146,
	96, 1146,
	97, 1146,
	98, 1146,
	99, 1146,
	101, 1146,
	102, 1146,
	103, 1146,
	105, 1146,
	106, 1146,
	114, 1146,
	115, 1146,
	116, 1146,
	117, 1146,
	119, 1146,
	120, 1146,
	121, 1146,
	123, 1146,
	124, 1146,
	125, 1146,
	127, 1146,
	128, 1146,
	130, 1146,
	131, 1146,
	132, 1146,
	135, 1146,
	136, 1146,
	137, 1146,
	139, 1146,
	140, 1146,
	142, 1146,
	143, 1146,
	144, 1146,
	146, 1146,
	147, 1146,
	148, 1146,
	149, 1146,
	150, 1146,
	151, 1146,
	152, 1146,
	153, 1146,
	154, 1146,
	155, 1146,
	156, 1146,
	157, 1146,
	158, 1146,
	159, 1146,
	160, 1146,
	162, 1146,
	168, 1146,
	169, 1146,
	170, 1146,
	171, 1146,
	175, 1146,
	177, 1146,
	181, 1146,
	182, 1146,
	183, 1146,
	184, 1146,
	185, 1146,
	186, 1146,
	187, 1146,
	188, 1146,
	189, 1146,
	190, 1146,
	191, 1146,
	192, 1146,
	194, 1146,
	195, 1146,
	197, 1146,
	198, 1146,
	200, 1146,
	201, 1146,
	202, 1146,
	203, 1146,
	204, 1146,
	205, 1146,
	206, 1146,
	207, 1146,
	208, 1146,
	210, 1146,
	211, 1146,
	213, 1146,
	214, 1146,
	215, 1146,
	216, 1146,
	220, 1146,
	221, 1146,
	222, 1146,
	223, 1146,
	226, 1146,
	227, 1146,
	228, 1146,
	230, 1146,
	232, 1146,
	233, 1146,
	235, 1146,
	237, 1146,
	238, 1146,
	239, 1146,
	241, 1146,
	245, 1146,
	246, 1146,
	247, 1146,
	248, 1146,
	249, 1146,
	250, 1146,
	252, 1146,
	253, 1146,
	254, 1146,
	256, 1146,
	257, 1146,
	259, 1146,
	260, 1146,
	263, 1146,
	267, 1146,
	268, 1146,
	271, 1146,
	272, 1146,
	273, 1146,
	274, 1146,
	276, 1146,
	277, 1146,
	278, 1146,
	279, 1146,
	280, 1146,
	281, 1146,
	282, 1146,
	283, 1146,
	284, 1146,
	285, 1146,
	286, 1146,
	287, 1146,
	288, 1146,
	289, 1146,
	290, 1146,
	291, 1146,
	292, 1146,
	293, 1146,
	294, 1146,
	295, 1146,
	296, 1146,
	298, 1146,
	300, 1146,
	301, 1146,
	302, 1146,
	303, 1146,
	304, 1146,
	305, 1146,
	306, 1146,
	307, 1146,
	308, 1146,
	309, 1146,
	310, 1146,
	311, 1146,
	313, 1146,
	315, 1146,
	317, 1146,
	318, 1146,
	320, 1146,
	321, 1146,
	322, 1146,
	323, 1146,
	324, 1146,
	327, 1146,
	331, 1146,
	332, 1146,
	333, 1146,
	336, 1146,
	337, 1146,
	338, 1146,
	340, 1146,
	342, 1146,
	343, 1146,
	344, 1146,
	345, 1146,
	346, 1146,
	347, 1146,
	348, 1146,
	349, 1146,
	350, 1146,
	351, 1146,
	352, 1146,
	353, 1146,
	355, 1146,
	356, 1146,
	357, 1146,
	358, 1146,
	359, 1146,
	360, 1146,
	361, 1146,
	362, 1146,
	363, 1146,
	364, 1146,
	365, 1146,
	366, 1146,
	367, 1146,
	368, 1146,
	369, 1146,
	371, 1146,
	373, 1146,
	374, 1146,
	375, 1146,
	376, 1146,
	377, 1146,
	378, 1146,
	379, 1146,
	380, 1146,
	381, 1146,
	382, 1146,
	383, 1146,
	385, 1146,
	391, 1146,
	393, 1146,
	394, 1146,
	395, 1146,
	396, 1146,
	397, 1146,
	398, 1146,
	399, 1146,
	400, 1146,
	402, 1146,
	403, 1146,
	404, 1146,
	406, 1146,
	407, 1146,
	408, 1146,
	409, 1146,
	410, 1146,
	411, 1146,
	413, 1146,
	414, 1146,
	415, 1146,
	416, 1146,
	417, 1146,
	418, 1146,
	419, 1146,
	420, 1146,
	421, 1146,
	422, 1146,
	423, 1146,
	425, 1146,
	426, 1146,
	427, 1146,
	428, 1146,
	429, 1146,
	430, 1146,
	432, 1146,
	433, 1146,
	434, 1146,
	435, 1146,
	436, 1146,
	438, 1146,
	439, 1146,
	440, 1146,
	441, 1146,
	442, 1146,
	443, 1146,
	444, 1146,
	446, 1146,
	448, 1146,
	449, 1146,
	450, 1146,
	451, 1146,
	452, 1146,
	453, 1146,
	454, 1146,
	455, 1146,
	456, 1146,
	457, 1146,
	458, 1146,
	459, 1146,
	460, 1146,
	462, 1146,
	463, 1146,
	465, 1146,
	467, 1146,
	468, 1146,
	469, 1146,
	470, 1146,
	471, 1146,
	472, 1146,
	473, 1146,
	474, 1146,
	476, 1146,
	477, 1146,
	478, 1146,
	479, 1146,
	480, 1146,
	482, 1146,
	484, 1146,
	485, 1146,
	486, 1146,
	487, 1146,
	488, 1146,
	489, 1146,
	491, 1146,
	492, 1146,
	493, 1146,
	494, 1146,
	496, 1146,
	497, 1146,
	500, 1146,
	501, 1146,
	502, 1146,
	503, 1146,
	504, 1146,
	505, 1146,
	506, 1146,
	508, 1146,
	511, 1146,
	512, 1146,
	513, 1146,
	514, 1146,
	515, 1146,
	516, 1146,
	518, 1146,
	519, 1146,
	520, 1146,
	521, 1146,
	526, 1146,
	527, 1146,
	528, 1146,
	529, 1146,
	530, 1146,
	531, 1146,
	-2, 0,
	-1, 877,
	375, 778,
	430, 778,
	486, 778,
	-2, 0,
	-1, 878,
	375, 777,
	430, 777,
	486, 777,
	-2, 719,
	-1, 882,
	1, 822,
	554, 822,
	556, 822,
	558, 822,
	-2, 0,
	-1, 883,
	1, 754,
	554, 754,
	556, 754,
	558, 754,
	-2, 0,
	-1, 884,
	1, 756,
	554, 756,
	556, 756,
	558, 756,
	-2, 0,
	-1, 885,
	1, 865,
	176, 865,
	554, 865,
	556, 865,
	558, 865,
	-2, 0,
	-1, 893,
	1, 781,
	554, 781,
	556, 781,
	558, 781,
	-2, 0,
	-1, 899,
	1, 822,
	554, 822,
	556, 822,
	558, 822,
	-2, 0,
	-1, 900,
	1, 824,
	554, 824,
	556, 824,
	558, 824,
	-2, 0,
	-1, 901,
	1, 827,
	554, 827,
	556, 827,
	558, 827,
	-2, 0,
	-1, 907,
	1, 844,
	554, 844,
	556, 844,
	558, 844,
	-2, 0,
	-1, 908,
	1, 846,
	554, 846,
	556, 846,
	558, 846,
	-2, 0,
	-1, 957,
	163, 1359,
	176, 1359,
	262, 1359,
	325, 1359,
	-2, 1297,
	-1, 972,
	163, 1358,
	176, 1358,
	262, 1358,
	325, 1358,
	-2, 1294,
	-1, 998,
	557, 2033,
	-2, 627,
	-1, 1026,
	5, 2025,
	555, 2023,
	-2, 2014,
	-1, 1034,
	5, 2046,
	555, 2043,
	-2, 2034,
	-1, 1035,
	5, 2047,
	555, 2044,
	-2, 2035,
	-1, 1043,
	557, 2031,
	-2, 2013,
	-1, 1044,
	555, 2432,
	-2, 2032,
	-1, 1067,
	555, 2431,
	-2, 2048,
	-1, 1068,
	5, 1552,
	-2, 2402,
	-1, 1069,
	5, 1553,
	-2, 2403,
	-1, 1070,
	5, 1554,
	-2, 2417,
	-1, 1071,
	5, 1555,
	-2, 2381,
	-1, 1072,
	5, 1556,
	-2, 2415,
	-1, 1073,
	5, 1564,
	-2, 2394,
	-1, 1074,
	5, 1551,
	-2, 2390,
	-1, 1075,
	5, 1551,
	-2, 2389,
	-1, 1076,
	5, 1551,
	-2, 2408,
	-1, 1077,
	5, 1562,
	-2, 2383,
	-1, 1078,
	5, 1567,
	-2, 2382,
	-1, 1079,
	5, 1569,
	-2, 2427,
	-1, 1082,
	5, 1591,
	-2, 2420,
	-1, 1083,
	5, 1583,
	-2, 2421,
	-1, 1084,
	5, 1591,
	-2, 2422,
	-1, 1085,
	5, 1587,
	-2, 2423,
	-1, 1086,
	5, 1537,
	-2, 2395,
	-1, 1087,
	5, 1538,
	-2, 2396,
	-1, 1088,
	5, 1539,
	-2, 2384,
	-1, 1116,
	5, 1574,
	-2, 2428,
	-1, 1117,
	5, 1575,
	-2, 2418,
	-1, 1118,
	5, 1576,
	519, 1576,
	-2, 2385,
	-1, 1119,
	5, 1577,
	519, 1577,
	-2, 2386,
	-1, 1156,
	555, 2043,
	-2, 2034,
	-1, 1157,
	555, 2044,
	-2, 2035,
	-1, 1187,
	179, 2350,
	481, 2350,
	538, 2350,
	557, 2350,
	-2, 0,
	-1, 1190,
	1, 605,
	558, 605,
	-2, 1229,
	-1, 1318,
	393, 2009,
	432, 2009,
	548, 2009,
	-2, 2006,
	-1, 1330,
	559, 2009,
	-2, 2010,
	-1, 1337,
	1, 1122,
	554, 1122,
	556, 1122,
	558, 1122,
	-2, 1346,
	-1, 1391,
	381, 930,
	518, 930,
	-2, 339,
	-1, 1410,
	42, 2037,
	-2, 2007,
	-1, 1415,
	1, 1122,
	554, 1122,
	556, 1122,
	558, 1122,
	-2, 1346,
	-1, 1422,
	4, 1146,
	21, 1146,
	22, 1146,
	23, 1146,
	24, 1146,
	25, 1146,
	26, 1146,
	28, 1146,
	29, 1146,
	35, 1146,
	40, 1146,
	41, 1146,
	43, 1146,
	44, 1146,
	45, 1146,
	46, 1146,
	47, 1146,
	48, 1146,
	49, 1146,
	51, 1146,
	52, 1146,
	53, 1146,
	54, 1146,
	56, 1146,
	57, 1146,
	58, 1146,
	59, 1146,
	60, 1146,
	61, 1146,
	62, 1146,
	66, 1146,
	67, 1146,
	68, 1146,
	69, 1146,
	71, 1146,
	72, 1146,
	73, 1146,
	77, 1146,
	78, 1146,
	79, 1146,
	80, 1146,
	81, 1146,
	82, 1146,
	83, 1146,
	86, 1146,
	87, 1146,
	88, 1146,
	89, 1146,
	90, 1146,
	92, 1146,
	94, 1146,
	95, 1146,
	96, 1146,
	97, 1146,
	98, 1146,
	99, 1146,
	101, 1146,
	102, 1146,
	103, 1146,
	105, 1146,
	106, 1146,
	114, 1146,
	115, 1146,
	116, 1146,
	117, 1146,
	119, 1146,
	120, 1146,
	121, 1146,
	123, 1146,
	124, 1146,
	125, 1146,
	127, 1146,
	128, 1146,
	130, 1146,
	131, 1146,
	132, 1146,
	135, 1146,
	136, 1146,
	137, 1146,
	139, 1146,
	140, 1146,
	142, 1146,
	143, 1146,
	144, 1146,
	146, 1146,
	147, 1146,
	148, 1146,
	149, 1146,
	150, 1146,
	151, 1146,
	152, 1146,
	153, 1146,
	154, 1146,
	155, 1146,
	156, 1146,
	157, 1146,
	158, 1146,
	159, 1146,
	160, 1146,
	168, 1146,
	169, 1146,
	170, 1146,
	171, 1146,
	175, 1146,
	177, 1146,
	181, 1146,
	182, 1146,
	183, 1146,
	184, 1146,
	185, 1146,
	186, 1146,
	187, 1146,
	188, 1146,
	189, 1146,
	190, 1146,
	191, 1146,
	192, 1146,
	194, 1146,
	195, 1146,
	197, 1146,
	198, 1146,
	200, 1146,
	201, 1146,
	202, 1146,
	203, 1146,
	204, 1146,
	205, 1146,
	206, 1146,
	207, 1146,
	208, 1146,
	210, 1146,
	211, 1146,
	213, 1146,
	214, 1146,
	215, 1146,
	216, 1146,
	221, 1146,
	222, 1146,
	223, 1146,
	226, 1146,
	227, 1146,
	228, 1146,
	230, 1146,
	232, 1146,
	233, 1146,
	235, 1146,
	237, 1146,
	238, 1146,
	239, 1146,
	241, 1146,
	245, 1146,
	246, 1146,
	247, 1146,
	248, 1146,
	249, 1146,
	250, 1146,
	252, 1146,
	253, 1146,
	254, 1146,
	256, 1146,
	257, 1146,
	259, 1146,
	260, 1146,
	263, 1146,
	267, 1146,
	268, 1146,
	271, 1146,
	272, 1146,
	273, 1146,
	274, 1146,
	276, 1146,
	277, 1146,
	278, 1146,
	279, 1146,
	280, 1146,
	281, 1146,
	282, 1146,
	283, 1146,
	284, 1146,
	285, 1146,
	286, 1146,
	287, 1146,
	288, 1146,
	289, 1146,
	290, 1146,
	291, 1146,
	292, 1146,
	293, 1146,
	294, 1146,
	295, 1146,
	296, 1146,
	298, 1146,
	300, 1146,
	301, 1146,
	302, 1146,
	303, 1146,
	304, 1146,
	305, 1146,
	306, 1146,
	307, 1146,
	308, 1146,
	309, 1146,
	310, 1146,
	311, 1146,
	313, 1146,
	317, 1146,
	318, 1146,
	320, 1146,
	321, 1146,
	322, 1146,
	323, 1146,
	324, 1146,
	327, 1146,
	329, 1146,
	331, 1146,
	332, 1146,
	333, 1146,
	336, 1146,
	337, 1146,
	338, 1146,
	340, 1146,
	342, 1146,
	343, 1146,
	344, 1146,
	345, 1146,
	346, 1146,
	347, 1146,
	348, 1146,
	349, 1146,
	350, 1146,
	351, 1146,
	352, 1146,
	353, 1146,
	355, 1146,
	356, 1146,
	357, 1146,
	358, 1146,
	359, 1146,
	360, 1146,
	361, 1146,
	362, 1146,
	363, 1146,
	364, 1146,
	365, 1146,
	366, 1146,
	367, 1146,
	368, 1146,
	369, 1146,
	371, 1146,
	373, 1146,
	374, 1146,
	375, 1146,
	376, 1146,
	377, 1146,
	378, 1146,
	379, 1146,
	380, 1146,
	381, 1146,
	382, 1146,
	383, 1146,
	385, 1146,
	391, 1146,
	393, 1146,
	394, 1146,
	395, 1146,
	396, 1146,
	397, 1146,
	398, 1146,
	399, 1146,
	400, 1146,
	402, 1146,
	403, 1146,
	404, 1146,
	406, 1146,
	407, 1146,
	408, 1146,
	409, 1146,
	410, 1146,
	411, 1146,
	413, 1146,
	414, 1146,
	415, 1146,
	416, 1146,
	417, 1146,
	418, 1146,
	419, 1146,
	420, 1146,
	421, 1146,
	422, 1146,
	423, 1146,
	425, 1146,
	426, 1146,
	427, 1146,
	428, 1146,
	429, 1146,
	430, 1146,
	432, 1146,
	433, 1146,
	434, 1146,
	435, 1146,
	436, 1146,
	438, 1146,
	439, 1146,
	440, 1146,
	441, 1146,
	442, 1146,
	443, 1146,
	444, 1146,
	446, 1146,
	448, 1146,
	449, 1146,
	450, 1146,
	451, 1146,
	452, 1146,
	453, 1146,
	454, 1146,
	455, 1146,
	456, 1146,
	457, 1146,
	458, 1146,
	459, 1146,
	460, 1146,
	462, 1146,
	463, 1146,
	465, 1146,
	467, 1146,
	468, 1146,
	469, 1146,
	470, 1146,
	471, 1146,
	472, 1146,
	473, 1146,
	474, 1146,
	476, 1146,
	477, 1146,
	478, 1146,
	479, 1146,
	480, 1146,
	482, 1146,
	484, 1146,
	485, 1146,
	486, 1146,
	487, 1146,
	488, 1146,
	489, 1146,
	491, 1146,
	492, 1146,
	493, 1146,
	494, 1146,
	496, 1146,
	497, 1146,
	500, 1146,
	501, 1146,
	502, 1146,
	503, 1146,
	504, 1146,
	505, 1146,
	506, 1146,
	508, 1146,
	511, 1146,
	512, 1146,
	513, 1146,
	514, 1146,
	515, 1146,
	516, 1146,
	518, 1146,
	519, 1146,
	520, 1146,
	521, 1146,
	526, 1146,
	527, 1146,
	528, 1146,
	529, 1146,
	530, 1146,
	531, 1146,
	-2, 0,
	-1, 1496,
	1, 478,
	554, 478,
	556, 478,
	558, 478,
	-2, 1317,
	-1, 1499,
	4, 2426,
	11, 2426,
	12, 2426,
	14, 2426,
	15, 2426,
	16, 2426,
	17, 2426,
	18, 2426,
	19, 2426,
	21, 2426,
	22, 2426,
	23, 2426,
	24, 2426,
	25, 2426,
	26, 2426,
	28, 2426,
	29, 2426,
	32, 2426,
	33, 2426,
	35, 2426,
	37, 2426,
	40, 2426,
	41, 2426,
	43, 2426,
	44, 2426,
	45, 2426,
	46, 2426,
	47, 2426,
	48, 2426,
	49, 2426,
	51, 2426,
	52, 2426,
	53, 2426,
	54, 2426,
	56, 2426,
	57, 2426,
	58, 2426,
	59, 2426,
	60, 2426,
	61, 2426,
	62, 2426,
	66, 2426,
	67, 2426,
	68, 2426,
	69, 2426,
	71, 2426,
	72, 2426,
	73, 2426,
	74, 2426,
	77, 2426,
	78, 2426,
	79, 2426,
	80, 2426,
	81, 2426,
	82, 2426,
	83, 2426,
	84, 2426,
	86, 2426,
	87, 2426,
	88, 2426,
	89, 2426,
	90, 2426,
	92, 2426,
	93, 2426,
	94, 2426,
	95, 2426,
	96, 2426,
	97, 2426,
	98, 2426,
	99, 2426,
	101, 2426,
	102, 2426,
	103, 2426,
	104, 2426,
	105, 2426,
	106, 2426,
	114, 2426,
	115, 2426,
	116, 2426,
	117, 2426,
	119, 2426,
	120, 2426,
	121, 2426,
	123, 2426,
	124, 2426,
	125, 2426,
	127, 2426,
	128, 2426,
	130, 2426,
	131, 2426,
	132, 2426,
	135, 2426,
	136, 2426,
	137, 2426,
	139, 2426,
	140, 2426,
	142, 2426,
	143, 2426,
	144, 2426,
	146, 2426,
	147, 2426,
	148, 2426,
	149, 2426,
	150, 2426,
	151, 2426,
	152, 2426,
	153, 2426,
	154, 2426,
	155, 2426,
	156, 2426,
	157, 2426,
	158, 2426,
	159, 2426,
	160, 2426,
	164, 2426,
	165, 2426,
	166, 2426,
	167, 2426,
	168, 2426,
	169, 2426,
	170, 2426,
	171, 2426,
	174, 2426,
	175, 2426,
	177, 2426,
	180, 2426,
	181, 2426,
	182, 2426,
	183, 2426,
	184, 2426,
	185, 2426,
	186, 2426,
	187, 2426,
	188, 2426,
	189, 2426,
	190, 2426,
	191, 2426,
	192, 2426,
	194, 2426,
	195, 2426,
	197, 2426,
	198, 2426,
	200, 2426,
	201, 2426,
	202, 2426,
	203, 2426,
	204, 2426,
	205, 2426,
	206, 2426,
	207, 2426,
	208, 2426,
	209, 2426,
	210, 2426,
	211, 2426,
	212, 2426,
	213, 2426,
	214, 2426,
	215, 2426,
	216, 2426,
	218, 2426,
	219, 2426,
	221, 2426,
	222, 2426,
	223, 2426,
	225, 2426,
	226, 2426,
	227, 2426,
	228, 2426,
	230, 2426,
	232, 2426,
	233, 2426,
	234, 2426,
	235, 2426,
	236, 2426,
	237, 2426,
	238, 2426,
	239, 2426,
	240, 2426,
	241, 2426,
	243, 2426,
	244, 2426,
	245, 2426,
	246, 2426,
	247, 2426,
	248, 2426,
	249, 2426,
	250, 2426,
	252, 2426,
	253, 2426,
	254, 2426,
	256, 2426,
	257, 2426,
	258, 2426,
	259, 2426,
	260, 2426,
	261, 2426,
	263, 2426,
	267, 2426,
	268, 2426,
	271, 2426,
	272, 2426,
	273, 2426,
	274, 2426,
	275, 2426,
	276, 2426,
	277, 2426,
	278, 2426,
	279, 2426,
	280, 2426,
	281, 2426,
	282, 2426,
	283, 2426,
	284, 2426,
	285, 2426,
	286, 2426,
	287, 2426,
	288, 2426,
	289, 2426,
	290, 2426,
	291, 2426,
	292, 2426,
	293, 2426,
	294, 2426,
	295, 2426,
	296, 2426,
	298, 2426,
	299, 2426,
	300, 2426,
	301, 2426,
	302, 2426,
	303, 2426,
	304, 2426,
	305, 2426,
	306, 2426,
	307, 2426,
	308, 2426,
	309, 2426,
	310, 2426,
	311, 2426,
	313, 2426,
	316, 2426,
	317, 2426,
	318, 2426,
	320, 2426,
	321, 2426,
	322, 2426,
	323, 2426,
	324, 2426,
	327, 2426,
	331, 2426,
	332, 2426,
	333, 2426,
	334, 2426,
	336, 2426,
	337, 2426,
	338, 2426,
	340, 2426,
	342, 2426,
	343, 2426,
	344, 2426,
	345, 2426,
	346, 2426,
	347, 2426,
	348, 2426,
	349, 2426,
	350, 2426,
	351, 2426,
	352, 2426,
	353, 2426,
	355, 2426,
	356, 2426,
	357, 2426,
	358, 2426,
	359, 2426,
	360, 2426,
	361, 2426,
	362, 2426,
	363, 2426,
	364, 2426,
	365, 2426,
	366, 2426,
	367, 2426,
	368, 2426,
	369, 2426,
	371, 2426,
	373, 2426,
	374, 2426,
	375, 2426,
	376, 2426,
	377, 2426,
	378, 2426,
	379, 2426,
	380, 2426,
	381, 2426,
	382, 2426,
	383, 2426,
	385, 2426,
	391, 2426,
	392, 2426,
	393, 2426,
	394, 2426,
	395, 2426,
	396, 2426,
	397, 2426,
	398, 2426,
	399, 2426,
	400, 2426,
	402, 2426,
	403, 2426,
	404, 2426,
	405, 2426,
	406, 2426,
	407, 2426,
	408, 2426,
	409, 2426,
	410, 2426,
	411, 2426,
	412, 2426,
	413, 2426,
	414, 2426,
	415, 2426,
	416, 2426,
	417, 2426,
	418, 2426,
	419, 2426,
	420, 2426,
	421, 2426,
	422, 2426,
	423, 2426,
	425, 2426,
	426, 2426,
	427, 2426,
	428, 2426,
	429, 2426,
	430, 2426,
	432, 2426,
	433, 2426,
	434, 2426,
	435, 2426,
	436, 2426,
	437, 2426,
	438, 2426,
	439, 2426,
	440, 2426,
	441, 2426,
	442, 2426,
	443, 2426,
	444, 2426,
	446, 2426,
	448, 2426,
	449, 2426,
	450, 2426,
	451, 2426,
	452, 2426,
	453, 2426,
	454, 2426,
	455, 2426,
	456, 2426,
	457, 2426,
	458, 2426,
	459, 2426,
	460, 2426,
	462, 2426,
	463, 2426,
	465, 2426,
	467, 2426,
	468, 2426,
	469, 2426,
	470, 2426,
	471, 2426,
	472, 2426,
	473, 2426,
	474, 2426,
	476, 2426,
	477, 2426,
	478, 2426,
	479, 2426,
	480, 2426,
	482, 2426,
	484, 2426,
	485, 2426,
	486, 2426,
	487, 2426,
	488, 2426,
	489, 2426,
	491, 2426,
	492, 2426,
	493, 2426,
	494, 2426,
	496, 2426,
	497, 2426,
	500, 2426,
	501, 2426,
	502, 2426,
	503, 2426,
	504, 2426,
	505, 2426,
	506, 2426,
	508, 2426,
	511, 2426,
	512, 2426,
	513, 2426,
	514, 2426,
	515, 2426,
	516, 2426,
	518, 2426,
	519, 2426,
	520, 2426,
	521, 2426,
	526, 2426,
	527, 2426,
	528, 2426,
	529, 2426,
	530, 2426,
	531, 2426,
	532, 2426,
	533, 2426,
	536, 2426,
	537, 2426,
	538, 2426,
	539, 2426,
	540, 2426,
	541, 2426,
	543, 2426,
	544, 2426,
	545, 2426,
	546, 2426,
	547, 2426,
	548, 2426,
	549, 2426,
	550, 2426,
	551, 2426,
	553, 2426,
	556, 2426,
	557, 2426,
	559, 2426,
	560, 2426,
	-2, 0,
	-1, 1504,
	179, 2316,
	481, 2316,
	538, 2316,
	557, 2316,
	-2, 0,
	-1, 1553,
	375, 778,
	430, 778,
	486, 778,
	-2, 0,
	-1, 1579,
	1, 773,
	554, 773,
	556, 773,
	558, 773,
	-2, 0,
	-1, 1580,
	1, 809,
	554, 809,
	556, 809,
	558, 809,
	-2, 0,
	-1, 1581,
	1, 817,
	554, 817,
	556, 817,
	558, 817,
	-2, 0,
	-1, 1582,
	1, 780,
	554, 780,
	556, 780,
	558, 780,
	-2, 0,
	-1, 1584,
	1, 784,
	554, 784,
	556, 784,
	558, 784,
	-2, 0,
	-1, 1590,
	1, 791,
	554, 791,
	556, 791,
	558, 791,
	-2, 0,
	-1, 1618,
	1, 2372,
	554, 2372,
	556, 2372,
	557, 2372,
	558, 2372,
	-2, 842,
	-1, 1619,
	1, 2313,
	554, 2313,
	556, 2313,
	557, 2313,
	558, 2313,
	-2, 843,
	-1, 1634,
	1, 1224,
	558, 1224,
	-2, 1229,
	-1, 1637,
	163, 1358,
	176, 1358,
	262, 1358,
	325, 1358,
	-2, 1298,
	-1, 1731,
	145, 1319,
	163, 1319,
	176, 1319,
	229, 1319,
	262, 1319,
	325, 1319,
	335, 1319,
	498, 1319,
	-2, 1752,
	-1, 1791,
	556, 1902,
	-2, 0,
	-1, 1826,
	145, 1319,
	163, 1319,
	176, 1319,
	229, 1319,
	262, 1319,
	325, 1319,
	335, 1319,
	498, 1319,
	-2, 1439,
	-1, 1875,
	555, 1579,
	-2, 1567,
	-1, 1912,
	1, 607,
	558, 607,
	-2, 1229,
	-1, 2024,
	212, 217,
	-2, 2042,
	-1, 2025,
	212, 218,
	-2, 260,
	-1, 2153,
	1, 775,
	554, 775,
	556, 775,
	558, 775,
	-2, 0,
	-1, 2154,
	1, 811,
	554, 811,
	556, 811,
	558, 811,
	-2, 0,
	-1, 2155,
	1, 819,
	554, 819,
	556, 819,
	558, 819,
	-2, 0,
	-1, 2187,
	1, 793,
	554, 793,
	556, 793,
	558, 793,
	-2, 0,
	-1, 2233,
	410, 1385,
	411, 1385,
	-2, 1612,
	-1, 2264,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1632,
	-1, 2265,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1633,
	-1, 2266,
	93, 0,
	243, 0,
	244, 0,
	540, 0,
	541, 0,
	-2, 1634,
	-1, 2267,
	93, 0,
	243, 0,
	244, 0,
	540, 0,
	541, 0,
	-2, 1635,
	-1, 2268,
	93, 0,
	243, 0,
	244, 0,
	540, 0,
	541, 0,
	-2, 1636,
	-1, 2269,
	93, 0,
	243, 0,
	244, 0,
	540, 0,
	541, 0,
	-2, 1637,
	-1, 2270,
	93, 0,
	243, 0,
	244, 0,
	540, 0,
	541, 0,
	-2, 1638,
	-1, 2271,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1639,
	-1, 2283,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1651,
	-1, 2284,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1652,
	-1, 2285,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1653,
	-1, 2288,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1658,
	-1, 2294,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1662,
	-1, 2296,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1670,
	-1, 2297,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1671,
	-1, 2298,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1672,
	-1, 2299,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1673,
	-1, 2435,
	5, 2046,
	179, 1913,
	555, 2043,
	-2, 2034,
	-1, 2436,
	179, 1914,
	-2, 2377,
	-1, 2437,
	179, 1915,
	-2, 2218,
	-1, 2438,
	179, 1916,
	-2, 2112,
	-1, 2439,
	179, 1917,
	-2, 2162,
	-1, 2440,
	179, 1918,
	-2, 2203,
	-1, 2441,
	179, 1919,
	-2, 2311,
	-1, 2442,
	179, 1920,
	-2, 1735,
	-1, 2511,
	1, 1440,
	2, 1440,
	104, 1440,
	145, 1440,
	163, 1440,
	176, 1440,
	180, 1440,
	196, 1440,
	199, 1440,
	225, 1440,
	229, 1440,
	240, 1440,
	258, 1440,
	262, 1440,
	299, 1440,
	325, 1440,
	329, 1440,
	335, 1440,
	401, 1440,
	405, 1440,
	498, 1440,
	509, 1440,
	523, 1440,
	524, 1440,
	525, 1440,
	534, 1440,
	554, 1440,
	556, 1440,
	558, 1440,
	560, 1440,
	-2, 1439,
	-1, 2524,
	555, 2015,
	-2, 2029,
	-1, 2526,
	1, 276,
	-2, 1346,
	-1, 2551,
	555, 1578,
	-2, 1568,
	-1, 2688,
	1, 1122,
	554, 1122,
	556, 1122,
	558, 1122,
	-2, 1346,
	-1, 2867,
	330, 1388,
	-2, 2416,
	-1, 2868,
	330, 1389,
	-2, 2297,
	-1, 2872,
	410, 1979,
	411, 1979,
	-2, 1733,
	-1, 2873,
	410, 1983,
	411, 1983,
	-2, 1734,
	-1, 2874,
	410, 1980,
	411, 1980,
	-2, 1733,
	-1, 2875,
	410, 1984,
	411, 1984,
	-2, 1734,
	-1, 2888,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1660,
	-1, 2889,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1664,
	-1, 2895,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1666,
	-1, 3123,
	1, 604,
	554, 604,
	556, 604,
	558, 604,
	-2, 1229,
	-1, 3255,
	1, 1122,
	554, 1122,
	556, 1122,
	558, 1122,
	-2, 1346,
	-1, 3365,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1668,
	-1, 3372,
	234, 0,
	236, 0,
	316, 0,
	-2, 1687,
	-1, 3439,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1716,
	-1, 3440,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1717,
	-1, 3441,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1718,
	-1, 3445,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1722,
	-1, 3446,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1723,
	-1, 3447,
	14, 0,
	15, 0,
	16, 0,
	536, 0,
	537, 0,
	538, 0,
	-2, 1724,
	-1, 3493,
	555, 2016,
	-2, 2030,
	-1, 3631,
	557, 2533,
	-2, 1276,
	-1, 3689,
	234, 0,
	236, 0,
	316, 0,
	-2, 1688,
	-1, 3692,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1691,
	-1, 3693,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1693,
	-1, 3905,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1692,
	-1, 3906,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 1694,
	-1, 3917,
	234, 0,
	-2, 1725,
	-1, 4069,
	234, 0,
	-2, 1726,
	-1, 4218,
	48, 0,
	209, 0,
	261, 0,
	437, 0,
	532, 0,
	539, 0,
	-2, 2380,
}

const sqlPrivate = 57344

const sqlLast = 111485

var sqlAct = [...]int{

	246, 4091, 2753, 3949, 4217, 4112, 3952, 4228, 4329, 3239,
	3046, 4192, 3672, 4176, 2784, 3829, 2587, 2021, 4173, 4229,
	2122, 4158, 4230, 3240, 4278, 4022, 3404, 3937, 2093, 4073,
	4216, 2626, 3862, 1160, 3995, 37, 4002, 2243, 3525, 3857,
	3141, 3894, 3267, 1487, 4011, 3623, 3564, 3843, 3759, 2106,
	3811, 4036, 3225, 1482, 1862, 1357, 3272, 982, 2311, 3599,
	1646, 2651, 3265, 3867, 3235, 973, 3582, 1832, 3584, 2251,
	711, 3357, 2793, 3526, 2881, 3922, 2244, 1222, 3320, 1519,
	1340, 1320, 2742, 676, 2724, 1965, 1037, 2131, 2467, 2806,
	1315, 3322, 2711, 2795, 711, 2720, 3089, 3069, 1149, 3495,
	3061, 3052, 3029, 1561, 3671, 2803, 3050, 810, 2067, 2792,
	1801, 3728, 2754, 2589, 1975, 2739, 2786, 3028, 2016, 2737,
	1777, 2015, 2504, 3464, 4074, 2503, 2129, 2248, 1739, 2324,
	1323, 1518, 2353, 2865, 2104, 1462, 1408, 706, 2010, 2001,
	2802, 240, 2725, 2665, 1994, 1030, 1206, 1951, 1948, 1802,
	981, 165, 2625, 1080, 4, 2506, 2485, 1634, 239, 2344,
	1938, 1033, 1863, 2308, 1483, 2232, 2215, 1140, 2213, 1486,
	3996, 3096, 3237, 1497, 1821, 2747, 2536, 1818, 1035, 712,
	1413, 2055, 713, 2535, 1122, 2796, 1473, 1192, 2578, 1811,
	642, 1772, 1143, 2464, 2493, 2347, 2325, 2431, 2397, 1342,
	1028, 2475, 1724, 628, 1647, 1648, 658, 650, 708, 2214,
	2216, 717, 174, 1590, 101, 1157, 2054, 670, 783, 1495,
	2079, 1437, 756, 1352, 1964, 645, 2237, 1011, 720, 42,
	41, 39, 1120, 30, 175, 717, 28, 165, 26, 1145,
	871, 804, 1653, 653, 2916, 1363, 891, 1633, 3478, 2912,
	3479, 4394, 720, 4384, 2095, 2484, 2095, 3301, 2095, 2095,
	3048, 4374, 2095, 4373, 4346, 2484, 4344, 2484, 3775, 4340,
	3775, 4258, 4252, 2029, 1583, 4259, 2484, 1139, 4250, 977,
	4247, 4244, 2484, 1356, 4248, 4245, 4239, 4214, 4213, 4212,
	2029, 2029, 2029, 2115, 4207, 4206, 4201, 3281, 2115, 2115,
	3775, 3282, 825, 4199, 4171, 1527, 4152, 3775, 3775, 4145,
	2542, 4144, 2355, 2484, 4139, 2484, 1137, 4138, 3775, 3119,
	4132, 3775, 4105, 1513, 2029, 4071, 3821, 4053, 4050, 2542,
	4047, 3660, 2029, 4004, 3775, 3969, 3968, 4005, 3960, 2029,
	2029, 3959, 2029, 3928, 3907, 3775, 3886, 2029, 2542, 3875,
	2115, 3806, 3794, 3301, 3774, 2484, 2484, 3691, 3775, 3118,
	3104, 2542, 1123, 1123, 1201, 3639, 3633, 3597, 3488, 3317,
	3317, 3598, 3489, 1377, 2477, 3486, 1152, 1201, 958, 3487,
	1661, 1662, 977, 1694, 1695, 1696, 1704, 1705, 1706, 3471,
	2130, 978, 3388, 2484, 3384, 3316, 2029, 1176, 2484, 3317,
	957, 1697, 1692, 3468, 3308, 1171, 3045, 3040, 3309, 1664,
	2484, 2484, 3039, 3301, 967, 2992, 2484, 1710, 2966, 2993,
	972, 2958, 2967, 2956, 2927, 2959, 2925, 2484, 2484, 2809,
	2782, 86, 2926, 2115, 2118, 2538, 2880, 2781, 2562, 2113,
	1124, 2118, 2484, 1663, 2484, 4153, 3001, 3002, 1365, 3019,
	3020, 3021, 2541, 1683, 2533, 2527, 2542, 2483, 2484, 2029,
	2117, 2484, 1680, 1126, 2118, 1127, 4066, 3687, 4054, 2115,
	2029, 3468, 2476, 3001, 3002, 2350, 3856, 3821, 3795, 1365,
	2029, 3660, 3309, 2642, 1172, 1969, 2577, 1917, 2094, 2717,
	2110, 2028, 2659, 2575, 1797, 1351, 3555, 1365, 3360, 3338,
	1819, 1661, 1662, 2520, 2484, 2004, 1563, 2519, 3283, 2518,
	212, 2517, 2516, 1128, 212, 1125, 966, 965, 964, 3016,
	963, 3001, 3002, 1692, 3019, 3020, 3021, 3284, 1356, 962,
	1664, 961, 960, 1686, 1687, 1688, 1689, 956, 2845, 4388,
	955, 954, 3686, 1669, 953, 952, 951, 950, 949, 948,
	947, 946, 214, 945, 944, 943, 214, 942, 941, 2351,
	1661, 1662, 940, 922, 1663, 869, 868, 867, 1661, 1662,
	866, 865, 864, 863, 1683, 862, 1376, 861, 1701, 860,
	859, 1711, 1692, 1680, 858, 857, 856, 1691, 1693, 1664,
	1692, 2096, 855, 2096, 3016, 2096, 2096, 1664, 854, 2096,
	213, 853, 852, 1707, 213, 1708, 1371, 2915, 851, 3007,
	1364, 206, 1678, 1679, 3001, 3002, 850, 849, 848, 207,
	847, 846, 845, 1663, 844, 843, 842, 841, 840, 839,
	1699, 1663, 838, 1683, 3685, 828, 3007, 2352, 827, 2349,
	823, 176, 1680, 822, 1684, 176, 816, 815, 3869, 774,
	773, 733, 732, 731, 1686, 1687, 1688, 1689, 723, 722,
	3001, 3002, 721, 690, 1669, 682, 681, 680, 664, 3022,
	234, 233, 232, 231, 230, 1035, 229, 228, 227, 1035,
	4235, 226, 3281, 225, 3007, 1709, 224, 3016, 223, 222,
	221, 220, 219, 3369, 1225, 218, 212, 217, 1225, 212,
	1172, 216, 1345, 1698, 215, 3744, 3703, 3505, 1691, 1693,
	3017, 138, 3482, 1686, 1687, 1688, 1689, 3318, 3092, 2938,
	2921, 2698, 2733, 1669, 2546, 2525, 1035, 212, 1035, 2510,
	1035, 1669, 1205, 1678, 1679, 1345, 1210, 3017, 214, 1946,
	2113, 214, 2380, 1845, 3022, 212, 2366, 1822, 1326, 2364,
	1750, 3043, 2770, 1331, 2094, 2476, 2113, 2110, 1345, 1196,
	2208, 1690, 1362, 1359, 1369, 1684, 1375, 1691, 1693, 214,
	1660, 1531, 1212, 2125, 1159, 1691, 1693, 3007, 1172, 2354,
	4215, 1685, 4119, 1355, 1365, 3017, 213, 214, 3044, 213,
	1741, 4063, 1678, 1679, 1585, 212, 3947, 206, 4057, 3921,
	206, 1345, 1035, 3001, 3002, 207, 1702, 1345, 207, 1370,
	3876, 1345, 3855, 1419, 1421, 3751, 3726, 213, 2750, 1035,
	1780, 1035, 3725, 3007, 1684, 1345, 1779, 176, 206, 1190,
	176, 1035, 1684, 1035, 4055, 213, 207, 214, 1493, 3719,
	3718, 3717, 3710, 3871, 1424, 3709, 206, 3018, 1783, 1748,
	3707, 3702, 2124, 3699, 207, 1511, 717, 1516, 176, 3602,
	1218, 3698, 1312, 1317, 3596, 3509, 3508, 1525, 3507, 1530,
	1334, 1411, 3492, 720, 3018, 3459, 176, 1345, 3017, 1476,
	3001, 3002, 1690, 3458, 3457, 213, 2348, 1185, 3380, 3376,
	3312, 3087, 3036, 1780, 1354, 1035, 206, 1353, 1035, 1779,
	3027, 1700, 1685, 3000, 207, 1675, 1676, 1682, 1703, 1681,
	1677, 2555, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670,
	1671, 1778, 3018, 2911, 1517, 1406, 176, 1741, 2997, 1584,
	1467, 1470, 2996, 1742, 2994, 1740, 1494, 2965, 2964, 2963,
	2960, 1690, 1532, 2957, 2937, 2920, 2913, 3001, 3002, 2783,
	3019, 3020, 3021, 2070, 2511, 2337, 3553, 2735, 165, 165,
	1660, 1685, 1500, 1502, 2036, 1136, 3007, 1659, 3375, 1685,
	4338, 3013, 3014, 3015, 2034, 1479, 4337, 3603, 3012, 3010,
	3011, 3003, 3004, 3005, 3006, 3008, 3009, 4268, 1035, 1035,
	1035, 1035, 1035, 1035, 1035, 4266, 4257, 1161, 3406, 4111,
	4101, 3001, 3002, 1599, 4098, 4097, 1498, 3011, 3003, 3004,
	3005, 3006, 3008, 3009, 1196, 3018, 4096, 1196, 4090, 1035,
	3016, 978, 4083, 1638, 2647, 1035, 4051, 4035, 212, 3041,
	1681, 1677, 212, 1674, 1672, 1673, 1665, 1666, 1667, 1668,
	1670, 1671, 4034, 3007, 2314, 4075, 3013, 3014, 3015, 4020,
	1440, 1661, 1662, 3012, 3010, 3011, 3003, 3004, 3005, 3006,
	3008, 3009, 4017, 3965, 3943, 1512, 3919, 3017, 3902, 3870,
	214, 3901, 2320, 1692, 214, 2611, 3084, 1526, 3883, 3882,
	1664, 3846, 3822, 3743, 1730, 3724, 3661, 3603, 3655, 1681,
	1677, 1632, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670,
	1671, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 3652,
	3007, 3543, 3110, 1537, 1663, 3542, 3529, 3528, 213, 3474,
	212, 3462, 213, 3371, 1728, 1554, 3319, 3302, 3258, 206,
	1035, 1035, 1035, 206, 3197, 2734, 1035, 207, 3170, 1586,
	3144, 207, 3143, 1157, 3017, 1157, 3012, 3010, 3011, 3003,
	3004, 3005, 3006, 3008, 3009, 3112, 2942, 1799, 3932, 176,
	1225, 2941, 214, 176, 3007, 2936, 2904, 2710, 1035, 1786,
	3022, 711, 1785, 1784, 1781, 1880, 711, 1635, 1773, 1771,
	2553, 2552, 1836, 1643, 1642, 1035, 2522, 2515, 2482, 1345,
	2362, 1844, 212, 212, 958, 3003, 3004, 3005, 3006, 3008,
	3009, 1800, 1637, 1795, 3018, 1782, 1794, 1035, 1793, 1639,
	213, 3017, 1792, 1225, 1669, 1853, 957, 1848, 1656, 1657,
	1791, 206, 1790, 1789, 1808, 3144, 1788, 1859, 2126, 207,
	1787, 1768, 1906, 978, 214, 214, 1935, 1767, 1766, 1765,
	1764, 1805, 1806, 212, 1849, 1763, 1829, 3001, 3002, 1762,
	1761, 2749, 1760, 1759, 1758, 1757, 1855, 1756, 1691, 1693,
	1755, 1874, 1661, 1662, 1944, 1754, 1909, 1774, 1775, 1915,
	1743, 1729, 1727, 1910, 1722, 1196, 1184, 1123, 1174, 1438,
	1167, 3018, 213, 213, 3849, 214, 3747, 3695, 3504, 3485,
	3477, 1664, 2924, 206, 206, 2513, 2379, 165, 1661, 1662,
	2365, 207, 207, 2363, 1152, 2544, 1152, 1443, 3749, 3503,
	1851, 1742, 717, 3001, 3002, 1684, 3108, 717, 1820, 1725,
	1830, 1937, 3287, 176, 176, 1663, 4058, 1664, 1877, 720,
	1840, 4335, 1201, 213, 720, 1209, 1937, 1827, 3003, 3004,
	3005, 3006, 3008, 3009, 206, 1912, 212, 1937, 3018, 3946,
	1345, 1345, 207, 1207, 1798, 4328, 3268, 3797, 212, 978,
	1225, 1663, 4056, 4099, 1630, 3173, 1908, 4007, 4006, 3874,
	3824, 1763, 1661, 1662, 176, 1868, 1839, 1838, 1837, 1856,
	1835, 1763, 1824, 1834, 1903, 1833, 2630, 3823, 214, 1957,
	1202, 3796, 1208, 3746, 1692, 3664, 3663, 3662, 1860, 1749,
	214, 1664, 3480, 3304, 980, 3303, 1990, 1822, 4012, 1993,
	3007, 2962, 1998, 3010, 3011, 3003, 3004, 3005, 3006, 3008,
	3009, 1780, 2961, 1553, 3606, 1923, 2886, 1779, 2613, 2022,
	2026, 1940, 1930, 1201, 1204, 1663, 213, 3541, 3242, 2145,
	3241, 1752, 1562, 4211, 2123, 1683, 4003, 206, 213, 938,
	4255, 3923, 1685, 4240, 1680, 207, 1600, 4227, 1974, 206,
	1201, 1669, 3226, 2807, 1563, 2017, 3561, 207, 2350, 3560,
	3546, 2071, 3013, 3014, 3015, 3335, 3121, 176, 3048, 3012,
	3010, 3011, 3003, 3004, 3005, 3006, 3008, 3009, 3408, 176,
	4236, 2345, 939, 717, 2551, 1796, 2100, 2002, 1776, 2102,
	3233, 1198, 1345, 2060, 1345, 2107, 1345, 2064, 2109, 1466,
	720, 3017, 2112, 2930, 1418, 1348, 2019, 986, 1135, 1179,
	2656, 4249, 1345, 1345, 1520, 1686, 1687, 1688, 1689, 4246,
	1442, 1354, 3277, 1345, 1353, 1669, 3520, 2065, 3005, 3006,
	3008, 3009, 2653, 2076, 4092, 1345, 3858, 1345, 1345, 1345,
	4170, 1997, 2351, 4237, 4080, 3147, 3536, 1541, 2790, 2746,
	3219, 4295, 4294, 3352, 3125, 2132, 2144, 4319, 3574, 711,
	3986, 3785, 1393, 1383, 2563, 2027, 936, 1349, 1203, 1691,
	1693, 4383, 934, 1674, 1672, 1673, 1665, 1666, 1667, 1668,
	1670, 1671, 3979, 932, 3971, 2084, 930, 3819, 3570, 3569,
	927, 3563, 2098, 2193, 1678, 1679, 2153, 1443, 1032, 2073,
	2191, 2047, 1969, 2581, 2046, 3559, 2128, 2137, 2086, 918,
	3557, 3517, 2581, 3516, 1924, 3222, 3103, 2935, 2579, 3573,
	2352, 976, 2349, 1598, 2149, 1199, 1684, 2579, 2934, 2933,
	2743, 2932, 2890, 1200, 2663, 1597, 2662, 2658, 3018, 2649,
	1035, 1394, 1035, 2078, 2133, 1209, 2082, 2641, 3109, 1035,
	2207, 2154, 1880, 1880, 1225, 1579, 1035, 1035, 1035, 1035,
	1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
	1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
	1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
	1035, 1498, 1035, 1498, 1035, 1035, 1035, 1035, 2225, 1440,
	717, 2081, 1208, 2081, 1209, 975, 978, 2155, 978, 2640,
	1580, 2119, 1185, 2120, 2212, 2639, 1035, 720, 2638, 1035,
	1035, 1539, 3900, 3127, 2617, 2604, 2534, 1035, 2295, 1636,
	1596, 1035, 3172, 1035, 1035, 2393, 769, 2392, 1874, 1874,
	2136, 1225, 2123, 1690, 3336, 4320, 2253, 1035, 1035, 1035,
	1035, 1452, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
	924, 1208, 2354, 1685, 2615, 1389, 1581, 2169, 640, 3012,
	3010, 3011, 3003, 3004, 3005, 3006, 3008, 3009, 1035, 1035,
	1035, 1035, 1035, 1035, 1035, 1035, 1035, 2223, 1201, 2202,
	2206, 1035, 1671, 635, 2141, 1430, 2187, 1429, 1401, 2205,
	1661, 1662, 2236, 1157, 3781, 1877, 1877, 2326, 2327, 2570,
	1225, 977, 2545, 1151, 2249, 2250, 212, 1350, 4323, 1157,
	1442, 2326, 2342, 1665, 1666, 1667, 1668, 1670, 1671, 1664,
	1913, 2223, 2526, 2209, 770, 1035, 1225, 1534, 2211, 2210,
	2217, 2224, 2603, 3009, 2221, 1609, 2197, 2388, 2045, 2627,
	2628, 2863, 1868, 1868, 2634, 1428, 958, 1427, 214, 958,
	958, 2341, 2158, 1663, 2627, 2628, 2434, 2434, 2448, 2348,
	2326, 2498, 1555, 2468, 2470, 2627, 2628, 3954, 2240, 2474,
	2161, 2241, 2242, 1629, 1164, 2310, 3532, 2345, 2221, 1661,
	1662, 1681, 1677, 3798, 1674, 1672, 1673, 1665, 1666, 1667,
	1668, 1670, 1671, 2204, 2490, 2878, 213, 2310, 4324, 2152,
	1613, 1692, 2318, 4233, 3580, 4347, 2322, 206, 1664, 2316,
	1829, 238, 2602, 2523, 1162, 207, 4294, 1191, 4332, 2339,
	1966, 2083, 978, 1641, 2848, 3343, 3342, 1225, 2842, 2354,
	1551, 978, 1183, 1123, 3394, 978, 2512, 176, 836, 3818,
	2655, 1535, 1663, 3579, 1202, 1563, 1929, 1928, 2489, 2450,
	1937, 1939, 1962, 1669, 1152, 2219, 1595, 1880, 3899, 1563,
	3124, 691, 2472, 3187, 974, 2430, 2443, 2222, 2459, 3558,
	1152, 3556, 2654, 2497, 2162, 2502, 1967, 1968, 2508, 2509,
	2610, 3956, 2591, 2491, 1196, 1225, 3779, 2480, 2481, 3397,
	2495, 2496, 165, 1592, 2652, 1782, 2539, 2560, 3544, 1345,
	2614, 1827, 3186, 2537, 4326, 2583, 1963, 2580, 1976, 3545,
	2901, 2222, 3395, 2646, 1035, 1035, 2877, 1035, 1165, 3221,
	3191, 2657, 2637, 978, 969, 2201, 913, 2616, 2851, 2582,
	1980, 4305, 1952, 2650, 3180, 2220, 2561, 1953, 2899, 928,
	1345, 1202, 1669, 1874, 1540, 928, 4311, 688, 2699, 971,
	2558, 2702, 1840, 2704, 2554, 1198, 928, 2635, 3523, 929,
	3771, 1774, 1775, 928, 1932, 2192, 2390, 4310, 2557, 2619,
	4234, 2391, 2190, 3179, 2394, 696, 2395, 2396, 2559, 2220,
	2757, 2731, 2033, 2032, 2564, 1977, 1691, 1693, 724, 2714,
	2594, 2532, 1451, 3767, 970, 2748, 1345, 1345, 2748, 1345,
	1969, 772, 771, 2690, 2870, 2871, 1388, 2765, 4350, 2606,
	1877, 1345, 636, 2769, 2629, 2631, 2632, 2633, 2586, 2620,
	2721, 2618, 2596, 2599, 2804, 767, 1345, 766, 4283, 2693,
	3780, 2354, 1203, 2695, 2636, 1610, 2812, 2813, 914, 2203,
	2778, 3274, 2689, 1684, 2773, 3768, 1954, 2819, 2820, 2821,
	717, 687, 1198, 2727, 2354, 704, 2850, 1868, 4330, 2547,
	3677, 4232, 3676, 1956, 4364, 1035, 1988, 720, 4093, 2005,
	2772, 3533, 1934, 2896, 2012, 913, 2095, 2292, 4325, 698,
	2501, 1810, 637, 1972, 1414, 2847, 1981, 1391, 1354, 1199,
	2808, 2696, 2828, 2566, 3275, 4107, 2897, 1200, 971, 2839,
	2902, 2830, 1960, 2831, 2832, 1987, 1337, 2708, 2568, 1035,
	1933, 1414, 2789, 2764, 925, 1035, 1035, 2767, 2718, 2768,
	2160, 2759, 1971, 2827, 638, 3126, 639, 3955, 1412, 1203,
	3838, 1958, 2853, 2834, 2855, 2836, 702, 2838, 2752, 1380,
	2810, 2569, 2741, 2825, 2814, 2760, 2815, 3200, 165, 1607,
	1982, 1983, 2779, 803, 2833, 4331, 2835, 1814, 2837, 2776,
	2567, 4149, 1415, 2775, 1163, 3106, 3274, 2856, 2774, 1611,
	1035, 1035, 2780, 1978, 2849, 1769, 1035, 2581, 2846, 2791,
	1685, 1960, 2593, 2011, 2157, 1608, 1199, 914, 4333, 1035,
	1035, 1536, 2597, 837, 1200, 1035, 1035, 2892, 1498, 2014,
	3673, 1035, 1817, 4282, 1814, 1490, 3912, 693, 1952, 1026,
	1035, 1035, 1035, 1953, 1979, 1506, 1035, 1812, 4304, 2309,
	915, 4181, 2317, 4110, 725, 726, 1035, 1667, 1668, 1670,
	1671, 2151, 2893, 3804, 1721, 1815, 697, 3763, 2290, 2940,
	3158, 2293, 3764, 1035, 2494, 829, 2869, 2306, 2013, 1817,
	1612, 2336, 1201, 1959, 1640, 2879, 2858, 1960, 2860, 2859,
	1960, 1550, 1552, 1182, 2492, 703, 4351, 2898, 2507, 2236,
	3587, 4261, 2923, 2914, 2864, 2304, 1813, 2900, 700, 3585,
	4262, 1545, 1815, 977, 695, 4045, 3410, 4339, 3848, 3587,
	2289, 3667, 3500, 3766, 689, 3157, 1177, 686, 3585, 2918,
	2919, 3678, 3165, 3354, 2922, 2000, 3063, 3769, 3161, 2861,
	817, 2592, 3896, 1673, 1665, 1666, 1667, 1668, 1670, 1671,
	1567, 1984, 1954, 4113, 4231, 692, 4293, 4291, 1999, 1538,
	4128, 913, 994, 1035, 1035, 1035, 2891, 4037, 3839, 1956,
	4147, 3166, 1035, 1035, 1035, 4019, 3621, 1035, 3261, 1201,
	4038, 968, 699, 916, 971, 2053, 3163, 1035, 1157, 1225,
	1995, 728, 727, 1035, 1807, 1035, 705, 1175, 1170, 915,
	3601, 3055, 3056, 1157, 4148, 1651, 627, 694, 3674, 3722,
	2239, 4039, 1816, 2929, 1967, 1968, 3588, 1970, 1941, 1942,
	2008, 1225, 1985, 1969, 4281, 1925, 3358, 3097, 4356, 917,
	3962, 4365, 1991, 1157, 3961, 3588, 1225, 1958, 3448, 978,
	2300, 3941, 4028, 2096, 1996, 729, 730, 4079, 3162, 3784,
	3077, 1955, 3765, 1880, 1155, 3622, 3783, 1225, 2301, 1816,
	3567, 3519, 3262, 2302, 3254, 3038, 3139, 2307, 3135, 2006,
	4041, 3895, 1035, 914, 2732, 2726, 2712, 3067, 2077, 2066,
	1650, 3057, 2058, 2229, 2041, 4114, 1035, 3393, 3772, 663,
	3463, 3513, 4040, 3086, 4159, 3355, 2291, 4129, 1880, 3091,
	3102, 2598, 3583, 2198, 3065, 3131, 3132, 1918, 2007, 4042,
	3624, 830, 831, 3863, 1035, 1345, 3062, 2709, 1454, 1650,
	3679, 1650, 3116, 3148, 4001, 3999, 3152, 3942, 3150, 3122,
	3146, 3090, 916, 3066, 1645, 3145, 3049, 1318, 3075, 1874,
	1330, 1333, 4260, 3128, 3078, 3079, 2884, 3083, 3149, 1152,
	1345, 3154, 3155, 3167, 3168, 3095, 1922, 3169, 3064, 1959,
	1225, 1196, 2142, 1960, 1152, 3033, 3034, 3035, 3136, 1345,
	1009, 3076, 3586, 3330, 1345, 3175, 818, 819, 917, 1649,
	3203, 2621, 3323, 3206, 1874, 1721, 2862, 3211, 3213, 3194,
	3195, 3586, 3476, 3196, 1152, 2721, 3081, 1345, 3082, 3723,
	3680, 1333, 1333, 1345, 3897, 1345, 1877, 3060, 1949, 1225,
	3160, 3099, 3100, 3101, 2230, 3107, 711, 3059, 1649, 3449,
	1649, 3198, 1582, 2531, 2530, 4355, 2486, 1345, 3450, 1920,
	2721, 3123, 2529, 3192, 2303, 3129, 3178, 3238, 2528, 3189,
	1333, 1345, 1651, 244, 2305, 3190, 3247, 1950, 3782, 2721,
	1436, 1877, 3592, 1868, 2721, 915, 2716, 1157, 1957, 1810,
	3140, 1151, 3134, 1151, 3208, 3164, 3270, 1434, 1921, 3215,
	3171, 3253, 4115, 1422, 3325, 835, 2804, 1568, 3514, 1989,
	3182, 975, 3224, 1651, 3227, 2804, 1423, 1957, 3185, 3324,
	832, 833, 3193, 3183, 3950, 4086, 3177, 3184, 1868, 2488,
	1345, 1345, 3830, 3289, 2487, 3199, 3291, 3292, 3209, 3313,
	2075, 3295, 3229, 3296, 3300, 3297, 3071, 3188, 3216, 3279,
	3220, 4301, 1345, 2002, 3997, 2811, 3880, 1955, 1992, 2694,
	3293, 2002, 2692, 1544, 3939, 1814, 3269, 3207, 3201, 4043,
	4167, 3098, 3214, 4156, 4044, 1411, 2622, 2623, 4162, 3337,
	2619, 3729, 3465, 3231, 4087, 820, 821, 717, 1225, 2361,
	4185, 1225, 1627, 3271, 662, 4303, 3251, 1952, 4251, 3223,
	1625, 3263, 1953, 1604, 720, 3113, 3114, 3940, 3115, 4100,
	1817, 1602, 3918, 3721, 1578, 1153, 1576, 1574, 916, 3591,
	3030, 1035, 3951, 3879, 3370, 1812, 1572, 1035, 1035, 3250,
	3276, 1035, 1035, 1035, 1223, 1035, 2189, 3072, 1324, 3285,
	3331, 3349, 3290, 1815, 1035, 1880, 3294, 3278, 1152, 1570,
	1560, 998, 3333, 1035, 1558, 1432, 1035, 3315, 3311, 3117,
	2995, 4163, 1225, 2903, 917, 3330, 2713, 4088, 3348, 2648,
	3346, 1035, 165, 165, 3323, 2612, 3298, 3299, 3339, 1225,
	3340, 2556, 3341, 3332, 1813, 3070, 1847, 3031, 1843, 1880,
	1880, 1035, 1035, 1628, 1035, 1035, 1035, 3356, 1522, 3373,
	3351, 3350, 1645, 2844, 978, 2843, 2817, 2218, 2200, 1435,
	4226, 1954, 3326, 3327, 3328, 3329, 3074, 1591, 3345, 2165,
	2038, 1907, 1753, 3382, 3383, 1533, 1433, 1405, 1956, 2360,
	3805, 1874, 3793, 4155, 834, 3861, 1035, 3810, 3353, 3422,
	1035, 3756, 1880, 1880, 1035, 1035, 1035, 1035, 1035, 1035,
	1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
	1035, 1035, 1035, 4279, 1035, 3423, 3325, 3620, 3202, 1626,
	2121, 1035, 1035, 1880, 3612, 1874, 1874, 1624, 1035, 3572,
	1603, 3324, 3378, 3539, 3537, 3518, 1490, 2134, 1601, 1035,
	1816, 1577, 3257, 1575, 1573, 3389, 1958, 2135, 1877, 3252,
	1157, 1157, 3243, 1571, 1035, 3405, 3396, 3398, 3399, 2143,
	2188, 2146, 2147, 2148, 2771, 2766, 3412, 2744, 2730, 3073,
	2719, 3420, 2706, 2691, 2116, 3421, 1569, 1559, 1874, 1874,
	2114, 1557, 1431, 1225, 2111, 2108, 2103, 1330, 2101, 2097,
	2088, 2037, 1877, 1877, 2035, 1868, 2018, 2003, 1986, 1973,
	3481, 2249, 3413, 1961, 3390, 3266, 3425, 3210, 4271, 1874,
	926, 1854, 2012, 1654, 2882, 4295, 3460, 3321, 1035, 3427,
	3497, 3452, 1926, 4195, 3885, 3878, 3877, 3817, 3752, 2805,
	1945, 1385, 1132, 2581, 1035, 1035, 4030, 3453, 2581, 1868,
	1868, 2601, 4023, 3632, 1969, 1877, 1877, 2156, 2579, 3498,
	3499, 3472, 3473, 2600, 2249, 3428, 1475, 1133, 2184, 2233,
	2183, 1035, 1035, 3510, 3511, 3512, 3786, 3467, 1959, 3469,
	3470, 3538, 1960, 3540, 1622, 1623, 1877, 4194, 2074, 2163,
	701, 1474, 165, 3812, 1556, 3456, 3461, 4065, 1035, 1043,
	3730, 3708, 1868, 1868, 3483, 2624, 2605, 1658, 3484, 3496,
	4297, 4289, 4256, 2705, 641, 2883, 2186, 1661, 1662, 3609,
	1345, 1152, 1152, 2059, 1188, 1661, 1662, 3130, 2653, 1655,
	2643, 2011, 235, 1868, 3326, 3327, 3328, 3329, 2661, 1880,
	3571, 3566, 2660, 242, 242, 242, 1664, 630, 631, 3400,
	646, 630, 646, 656, 661, 3522, 3551, 3568, 679, 3547,
	3552, 3554, 3565, 685, 931, 933, 935, 652, 1345, 242,
	757, 1475, 3419, 1134, 1475, 1035, 800, 624, 2607, 4154,
	1663, 3590, 2645, 1157, 1035, 4123, 3562, 814, 1663, 2609,
	4120, 3634, 3614, 242, 4085, 2644, 4015, 3994, 2757, 4327,
	2619, 3611, 2608, 3600, 1345, 1345, 1345, 3491, 2451, 3625,
	3256, 2751, 2473, 1911, 3608, 1861, 4187, 3643, 3948, 3640,
	1345, 4188, 3105, 3641, 4354, 1874, 1356, 3647, 3001, 3002,
	3629, 3578, 3607, 4122, 2804, 1543, 3628, 1661, 1662, 1225,
	4307, 1542, 3594, 3610, 2063, 4187, 1955, 3700, 3626, 2356,
	4188, 3581, 2573, 2574, 3589, 2571, 2572, 3502, 2573, 2571,
	1846, 1225, 2389, 3659, 1035, 1035, 3615, 4016, 3980, 3666,
	1035, 1035, 1880, 3813, 3809, 1035, 1035, 3613, 1035, 3808,
	1606, 3696, 1035, 1605, 3618, 3630, 3501, 3401, 3627, 3636,
	3204, 3577, 1877, 1035, 3635, 1747, 1746, 4341, 4312, 4076,
	3975, 3140, 3933, 3930, 3841, 1330, 630, 630, 998, 1035,
	3748, 3658, 998, 1947, 242, 3648, 3649, 3638, 3642, 3650,
	3595, 1151, 3682, 3657, 3656, 3506, 3690, 1309, 3593, 3654,
	3535, 1309, 3653, 3530, 3681, 3288, 3260, 1151, 3259, 1868,
	2991, 2990, 2989, 2988, 1152, 2987, 2986, 2985, 3670, 2984,
	2983, 2982, 2981, 2980, 3675, 2979, 2978, 2977, 1874, 3665,
	2976, 2975, 2974, 2973, 2972, 2971, 3694, 2970, 2969, 1157,
	2968, 1733, 1155, 2841, 1155, 1738, 2824, 1157, 2823, 2822,
	2762, 1225, 2736, 1225, 2707, 2549, 2548, 2321, 2185, 2182,
	1157, 2181, 2180, 2179, 1852, 2178, 2091, 2090, 2089, 2072,
	2048, 2044, 2043, 2042, 2040, 2039, 1225, 1621, 1620, 1565,
	1564, 1461, 1460, 1459, 1458, 1457, 1456, 1455, 1453, 1448,
	1447, 1446, 1445, 1444, 1400, 1877, 1399, 1398, 3720, 1035,
	3735, 1397, 1396, 3753, 3754, 1395, 1390, 1384, 1382, 1381,
	1216, 1215, 3738, 2688, 1214, 1213, 1181, 1180, 1115, 1916,
	937, 923, 3953, 3770, 3787, 3741, 1225, 1615, 84, 1392,
	2030, 745, 78, 2009, 1225, 3534, 896, 3777, 4184, 1378,
	3731, 4106, 1868, 752, 3734, 4169, 3737, 3156, 3736, 2664,
	3788, 3732, 3733, 2164, 1566, 3778, 3742, 3814, 3090, 3815,
	2166, 3755, 1345, 1345, 3745, 3085, 2514, 4146, 3789, 3790,
	3704, 2939, 3776, 4072, 3911, 2359, 1751, 3042, 80, 1019,
	1345, 1065, 3837, 165, 3836, 3831, 3757, 3727, 3521, 2794,
	3834, 1225, 3833, 1865, 1867, 3807, 1345, 3816, 3828, 985,
	1152, 1228, 1927, 1025, 3820, 3826, 3840, 1943, 1152, 1936,
	2777, 1490, 3825, 2550, 2433, 1042, 1039, 3852, 1869, 3854,
	3803, 1152, 1871, 1035, 1041, 1040, 1870, 1770, 1038, 1864,
	3617, 3616, 2715, 1345, 1345, 1345, 3801, 3864, 2755, 3872,
	2818, 3286, 3827, 1441, 1225, 1439, 898, 1931, 2315, 2343,
	2928, 1744, 3859, 1000, 1021, 2340, 1035, 1035, 1035, 3868,
	2721, 3881, 3832, 1173, 1010, 3851, 999, 3847, 3068, 3047,
	3873, 3273, 3490, 2228, 1225, 3850, 3865, 761, 2998, 1035,
	3866, 3884, 1035, 1035, 2346, 3792, 1166, 2456, 2449, 2445,
	3120, 3853, 1035, 2745, 1631, 1880, 3800, 1723, 3802, 2756,
	1035, 1035, 1211, 1003, 2313, 1735, 2908, 2238, 3280, 3088,
	3888, 2543, 4191, 3890, 3409, 1225, 2866, 1345, 2052, 1131,
	1130, 3898, 3887, 1129, 4175, 3892, 4172, 3903, 3651, 3236,
	1919, 1225, 2565, 3908, 1713, 3244, 1015, 1329, 3053, 1035,
	3314, 1402, 684, 1027, 1712, 2685, 1035, 2684, 4082, 3920,
	1197, 1195, 1194, 1193, 1035, 3914, 1880, 3138, 4363, 1333,
	3531, 211, 2876, 1652, 1035, 1644, 208, 1035, 210, 3935,
	209, 3842, 3494, 1153, 3094, 1153, 1035, 3929, 3926, 3927,
	4254, 1874, 3549, 1225, 3228, 21, 3966, 3967, 20, 3925,
	19, 105, 40, 18, 1345, 1345, 2451, 2451, 120, 3934,
	3936, 137, 1168, 136, 113, 135, 1333, 134, 133, 132,
	3981, 139, 131, 3983, 3984, 130, 125, 129, 3958, 3957,
	128, 127, 126, 124, 3974, 123, 122, 4009, 121, 119,
	1178, 118, 1225, 3238, 2252, 1345, 4000, 3985, 117, 679,
	116, 115, 1874, 114, 112, 111, 110, 109, 1877, 3972,
	3993, 108, 3982, 1035, 1035, 3976, 3977, 4014, 107, 3990,
	3989, 3998, 242, 1309, 242, 242, 1321, 4033, 242, 242,
	1336, 106, 1035, 1035, 3992, 675, 4024, 4052, 672, 57,
	56, 4008, 104, 103, 242, 17, 1358, 38, 1318, 1035,
	1880, 4048, 4049, 4021, 4027, 1868, 4029, 14, 3988, 4026,
	61, 62, 4046, 4032, 3868, 1330, 4013, 4031, 16, 1877,
	998, 1387, 13, 33, 1035, 4025, 1309, 1035, 3964, 83,
	4060, 2357, 95, 1404, 94, 1410, 34, 92, 91, 242,
	242, 32, 1321, 15, 89, 88, 1035, 4078, 4089, 31,
	2451, 2451, 2451, 29, 4070, 11, 9, 4064, 8, 35,
	1450, 1831, 12, 5, 4077, 170, 1868, 169, 3987, 172,
	4061, 4062, 242, 168, 242, 242, 171, 1321, 242, 1336,
	82, 167, 166, 81, 4095, 4109, 1874, 1035, 1035, 679,
	27, 242, 242, 10, 4103, 4094, 162, 4010, 1035, 3605,
	76, 1035, 164, 163, 161, 1345, 160, 4102, 159, 77,
	4108, 74, 158, 157, 814, 1345, 1345, 75, 156, 25,
	4104, 6, 1333, 1333, 60, 7, 2524, 3893, 3334, 4137,
	98, 4124, 1345, 4116, 99, 4121, 4125, 36, 72, 4127,
	71, 70, 24, 59, 4117, 4118, 1035, 1035, 23, 199,
	198, 4133, 4131, 1877, 197, 196, 195, 194, 4135, 4136,
	189, 188, 193, 191, 190, 192, 1151, 187, 4134, 202,
	201, 203, 200, 1309, 1330, 4140, 4141, 205, 4013, 1035,
	1035, 1151, 1035, 186, 4151, 4130, 242, 4166, 184, 4174,
	4177, 180, 4142, 179, 4143, 4189, 183, 185, 182, 181,
	1868, 178, 204, 242, 4164, 4186, 154, 155, 4193, 67,
	153, 1151, 152, 151, 1330, 4196, 1330, 150, 149, 148,
	4209, 147, 1155, 4205, 4208, 66, 4165, 2576, 1035, 1035,
	1035, 22, 2, 1, 4150, 4183, 4197, 4179, 1155, 4198,
	0, 0, 0, 4210, 4204, 0, 4200, 0, 4238, 0,
	0, 1035, 4203, 4243, 2319, 0, 0, 0, 0, 4222,
	4223, 4225, 0, 4224, 0, 0, 0, 4178, 0, 1733,
	4182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4265, 4241, 0, 0, 0, 0, 0, 4267, 0,
	0, 3217, 4253, 0, 0, 0, 4275, 0, 0, 1035,
	0, 4276, 0, 4280, 4274, 0, 0, 4272, 4273, 0,
	4270, 4263, 0, 4277, 4264, 4269, 0, 0, 0, 0,
	0, 3248, 0, 2455, 0, 0, 0, 4286, 4287, 4296,
	4292, 0, 4290, 0, 4288, 3255, 0, 0, 4174, 4299,
	0, 4177, 4302, 4298, 4300, 0, 0, 1035, 0, 1035,
	4314, 4309, 4315, 4313, 4306, 0, 4193, 0, 2905, 2906,
	0, 0, 0, 4317, 0, 0, 0, 0, 0, 0,
	0, 4322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4334, 4316, 4336, 4318, 0, 4321,
	0, 0, 0, 4308, 3306, 3307, 0, 0, 0, 4342,
	0, 630, 0, 0, 0, 0, 0, 0, 1035, 1035,
	0, 4343, 4352, 0, 0, 0, 1035, 0, 1035, 1035,
	4358, 0, 242, 0, 242, 4348, 4367, 0, 242, 0,
	4370, 0, 4345, 4369, 4361, 1151, 0, 4349, 0, 4371,
	0, 1358, 1321, 242, 2757, 242, 0, 0, 0, 4368,
	242, 1358, 646, 4372, 4377, 242, 1358, 4375, 4366, 4378,
	0, 4380, 679, 4381, 0, 4379, 0, 4385, 0, 1035,
	4376, 3001, 3002, 4386, 3019, 3020, 3021, 1309, 0, 0,
	2680, 4393, 0, 4395, 0, 0, 0, 0, 4382, 2451,
	2451, 4390, 3374, 4392, 4387, 0, 0, 0, 0, 0,
	0, 4389, 3024, 3025, 3026, 0, 4359, 4360, 0, 4396,
	1661, 1662, 0, 2672, 2670, 0, 0, 0, 0, 0,
	2674, 2676, 2666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1692, 0, 0, 0, 0, 3771, 0, 1664,
	0, 0, 0, 0, 3016, 0, 0, 0, 0, 0,
	0, 0, 0, 1153, 0, 0, 0, 4391, 0, 0,
	0, 0, 0, 0, 1309, 0, 0, 0, 0, 1153,
	3767, 0, 0, 1663, 3760, 0, 0, 0, 0, 0,
	0, 0, 0, 1683, 0, 0, 0, 0, 0, 0,
	0, 3758, 1680, 0, 0, 0, 0, 0, 0, 0,
	3762, 2451, 2451, 2451, 2451, 2451, 2451, 2451, 2451, 2451,
	2451, 2451, 2451, 2451, 2451, 2451, 2451, 2451, 2451, 2451,
	0, 2451, 3768, 0, 1661, 1662, 0, 1330, 242, 0,
	0, 242, 0, 1309, 3007, 0, 0, 0, 0, 0,
	0, 0, 0, 3364, 0, 0, 1692, 0, 0, 0,
	2063, 0, 0, 1664, 0, 0, 0, 0, 0, 1309,
	0, 0, 3761, 1686, 1687, 1688, 1689, 0, 0, 0,
	0, 0, 0, 1669, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 242, 0, 1663, 0, 0,
	0, 2668, 242, 0, 3022, 0, 0, 0, 242, 0,
	0, 2682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 242, 0, 1691, 1693, 630,
	0, 242, 2681, 2673, 2671, 2675, 2677, 2667, 2669, 2683,
	0, 0, 0, 0, 2092, 3017, 2679, 0, 0, 0,
	0, 0, 1678, 1679, 0, 0, 242, 0, 1151, 1151,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 3054,
	1309, 2455, 0, 0, 0, 0, 0, 0, 0, 2686,
	0, 0, 0, 0, 1684, 0, 0, 0, 0, 0,
	0, 0, 1330, 1330, 679, 0, 0, 1669, 814, 0,
	0, 3080, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3093, 0, 0, 0,
	0, 0, 0, 242, 3763, 1321, 242, 0, 1309, 3764,
	0, 0, 0, 0, 3575, 0, 0, 3111, 0, 0,
	679, 1691, 1693, 0, 0, 0, 0, 242, 0, 0,
	0, 2455, 2455, 0, 0, 0, 0, 0, 242, 242,
	0, 242, 0, 242, 0, 242, 0, 242, 0, 0,
	0, 0, 0, 1330, 0, 0, 0, 0, 0, 0,
	3766, 0, 3018, 0, 0, 0, 0, 0, 2194, 0,
	0, 2195, 0, 2196, 3769, 0, 0, 1155, 1684, 0,
	0, 1690, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 1155, 0, 0, 0, 0, 0, 3644, 3645,
	3646, 1685, 0, 0, 0, 0, 661, 0, 0, 0,
	679, 0, 0, 0, 1490, 0, 0, 0, 0, 0,
	2687, 0, 1155, 0, 0, 0, 0, 0, 0, 2678,
	0, 3366, 3367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1151, 0, 0, 0, 0, 0, 0, 0, 3093,
	0, 0, 0, 0, 0, 2455, 2455, 2455, 0, 0,
	0, 0, 0, 0, 0, 0, 3013, 3014, 3015, 3765,
	0, 0, 0, 3012, 3010, 3011, 3003, 3004, 3005, 3006,
	3008, 3009, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1685, 0, 0, 0, 0,
	0, 0, 0, 0, 1852, 3772, 0, 0, 0, 1681,
	1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670,
	1671, 0, 0, 3429, 3430, 3431, 3432, 3433, 3434, 3435,
	3436, 3437, 3438, 3439, 3440, 3441, 3442, 3443, 3444, 3445,
	3446, 3447, 0, 3451, 0, 0, 0, 630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 1661, 1662, 0, 0, 0,
	0, 630, 0, 0, 0, 0, 0, 0, 242, 0,
	630, 0, 0, 0, 0, 0, 0, 1692, 0, 0,
	0, 0, 242, 0, 1664, 0, 0, 0, 1324, 0,
	0, 1223, 0, 0, 0, 0, 0, 242, 1336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1155, 1151, 1663, 1665,
	1666, 1667, 1668, 1670, 1671, 1151, 0, 0, 1683, 0,
	0, 0, 0, 0, 0, 0, 0, 1680, 1151, 0,
	0, 0, 0, 0, 242, 1336, 0, 646, 242, 0,
	0, 0, 1661, 1662, 0, 0, 1490, 0, 0, 0,
	0, 0, 3386, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1692, 1333, 0, 0, 1153, 3402,
	0, 1664, 0, 0, 0, 0, 0, 0, 3363, 0,
	0, 0, 2590, 1153, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 1686, 1687,
	1688, 1689, 0, 242, 0, 1663, 0, 0, 1669, 0,
	0, 0, 0, 1153, 2063, 1683, 242, 3889, 0, 3891,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 1809, 0,
	0, 0, 1309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1691, 1693, 0, 0, 0, 0, 242, 2697,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2451,
	0, 0, 0, 0, 1309, 0, 0, 1678, 1679, 0,
	0, 0, 0, 1358, 0, 0, 242, 0, 0, 1309,
	0, 0, 0, 0, 242, 1686, 1687, 1688, 1689, 0,
	0, 3931, 0, 2740, 0, 1669, 0, 0, 0, 1684,
	1309, 0, 0, 2590, 0, 630, 2451, 0, 2761, 0,
	0, 0, 0, 3493, 242, 998, 0, 242, 0, 0,
	0, 242, 0, 242, 0, 0, 0, 0, 1321, 998,
	242, 242, 0, 1336, 1336, 0, 0, 0, 0, 1691,
	1693, 0, 0, 2787, 814, 0, 2590, 2590, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 2455, 2455, 0, 0, 3991, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 1321, 242, 0, 0, 1358, 0, 1358, 1358, 0,
	0, 1321, 0, 1321, 0, 1321, 1684, 0, 0, 0,
	0, 0, 0, 1309, 0, 0, 984, 0, 0, 1155,
	1155, 0, 0, 0, 0, 0, 1690, 0, 0, 0,
	0, 242, 242, 242, 242, 1321, 242, 1153, 242, 0,
	0, 0, 0, 0, 0, 0, 1685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1309, 0, 0, 0, 2451, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 1661, 1662, 0, 2455, 2455, 2455, 2455,
	2455, 2455, 2455, 2455, 2455, 2455, 2455, 2455, 2455, 2455,
	2455, 2455, 2455, 2455, 2455, 1692, 2455, 0, 0, 0,
	0, 0, 1664, 0, 0, 0, 0, 0, 0, 0,
	0, 2063, 0, 1690, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1333, 0, 0, 0, 0,
	0, 0, 0, 1685, 0, 0, 1663, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1683, 0, 0, 0,
	0, 0, 0, 0, 0, 1680, 1358, 0, 0, 0,
	0, 0, 0, 0, 1681, 1677, 0, 1674, 1672, 1673,
	1665, 1666, 1667, 1668, 1670, 1671, 0, 0, 0, 1490,
	1490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1490, 0, 0, 0,
	0, 1309, 0, 0, 1309, 0, 2894, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1686, 1687, 1688, 1689,
	0, 0, 1155, 0, 0, 0, 1669, 0, 0, 0,
	3001, 3002, 0, 3019, 3020, 3021, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1674, 1672, 1673, 1665, 1666, 1667,
	1668, 1670, 1671, 0, 0, 1309, 0, 0, 0, 0,
	1691, 1693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1309, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 3740, 0, 1678, 1679, 0, 0, 0,
	0, 3917, 242, 3016, 0, 0, 0, 630, 0, 0,
	0, 0, 630, 0, 0, 630, 3750, 0, 630, 630,
	0, 0, 0, 0, 630, 0, 0, 1684, 0, 0,
	1153, 1153, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1358, 0, 0, 0, 3944, 0,
	1661, 1662, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1358, 0, 0, 0,
	0, 0, 1692, 0, 0, 0, 0, 0, 0, 1664,
	0, 0, 0, 0, 0, 0, 0, 0, 2590, 2590,
	242, 0, 1336, 3007, 0, 2590, 0, 0, 3142, 0,
	0, 0, 0, 0, 0, 0, 2590, 3142, 1155, 2590,
	3142, 3142, 0, 1663, 0, 0, 1155, 0, 0, 0,
	0, 0, 0, 1683, 242, 242, 1336, 242, 0, 1155,
	0, 3023, 1680, 0, 0, 0, 1309, 0, 0, 0,
	0, 0, 1330, 0, 1690, 0, 0, 1336, 242, 0,
	0, 1321, 0, 3022, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2590, 1685, 3205, 2590, 1336, 0, 0,
	2590, 2590, 1336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2887, 1223, 0, 0, 0, 0, 0,
	0, 0, 0, 984, 3017, 0, 0, 984, 4069, 0,
	0, 242, 0, 1686, 1687, 1688, 1689, 0, 0, 0,
	0, 0, 0, 1669, 3909, 242, 3232, 0, 0, 3234,
	2590, 0, 0, 242, 0, 0, 0, 242, 1333, 1410,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1360, 0, 1366, 0, 1372, 0,
	0, 2740, 0, 1153, 1321, 3909, 242, 1691, 1693, 2590,
	0, 630, 0, 0, 0, 0, 0, 0, 2590, 0,
	0, 2252, 0, 0, 0, 0, 242, 0, 0, 0,
	242, 242, 1678, 1679, 0, 0, 0, 0, 0, 0,
	0, 0, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666,
	1667, 1668, 1670, 1671, 0, 0, 0, 242, 2740, 0,
	0, 2740, 0, 0, 1684, 0, 0, 0, 0, 0,
	1491, 0, 0, 2252, 0, 0, 0, 0, 0, 0,
	0, 3018, 0, 0, 0, 0, 0, 1509, 0, 1514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1523,
	0, 1528, 0, 0, 0, 3344, 0, 0, 1321, 242,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 0, 0, 68, 0, 44, 43,
	0, 0, 1309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 69, 0, 242, 141, 0, 0, 0, 0,
	0, 0, 3001, 3002, 1309, 3019, 3020, 3021, 73, 0,
	0, 0, 0, 1587, 0, 0, 1593, 0, 0, 63,
	0, 0, 0, 0, 0, 0, 46, 0, 143, 0,
	0, 1690, 0, 0, 0, 0, 0, 0, 0, 1153,
	0, 0, 0, 0, 0, 0, 45, 1153, 79, 0,
	3407, 1685, 0, 0, 0, 3013, 3014, 3015, 0, 0,
	1153, 0, 3012, 3010, 3011, 3003, 3004, 3005, 3006, 3008,
	3009, 0, 48, 64, 0, 3016, 0, 0, 0, 0,
	49, 0, 0, 0, 2455, 85, 0, 0, 0, 144,
	0, 0, 0, 0, 0, 0, 0, 47, 0, 100,
	0, 0, 0, 0, 86, 97, 1714, 1715, 1716, 1717,
	1718, 1719, 1720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1309, 0, 1309, 0, 0, 0,
	0, 2455, 0, 0, 0, 0, 0, 1732, 0, 0,
	0, 50, 0, 1745, 0, 0, 0, 0, 0, 1309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 3007, 0, 0, 0, 242,
	242, 0, 0, 0, 805, 0, 0, 0, 0, 1681,
	1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670,
	1671, 630, 630, 0, 0, 0, 0, 0, 0, 1309,
	68, 0, 808, 807, 0, 0, 0, 1309, 0, 0,
	0, 0, 0, 1358, 1358, 0, 69, 0, 0, 3001,
	3002, 0, 3019, 3020, 3021, 3022, 0, 1358, 1358, 1358,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1803, 1803,
	1803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1309, 0, 3017, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 2455, 679, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3016, 0, 0, 0, 0, 0, 0, 90,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 242, 0, 0, 51, 1309, 0, 0,
	0, 0, 0, 100, 0, 984, 0, 0, 86, 97,
	0, 1336, 242, 55, 0, 0, 0, 0, 0, 65,
	0, 0, 0, 242, 54, 173, 93, 1309, 96, 0,
	0, 0, 52, 242, 0, 0, 145, 0, 0, 0,
	0, 0, 242, 53, 0, 0, 0, 242, 0, 0,
	0, 242, 212, 0, 0, 0, 0, 0, 0, 0,
	58, 0, 3007, 87, 138, 0, 0, 0, 1309, 0,
	0, 2590, 242, 0, 0, 0, 0, 0, 142, 0,
	0, 0, 0, 3018, 1309, 0, 0, 0, 0, 0,
	0, 2787, 2787, 0, 214, 0, 0, 814, 814, 2590,
	0, 0, 2740, 2740, 0, 0, 814, 2590, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 140,
	998, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 1309, 0, 0, 0,
	0, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 3017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 1309, 3, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3705, 0, 0, 0,
	0, 0, 0, 90, 0, 0, 0, 3013, 3014, 3015,
	0, 0, 0, 0, 3012, 3010, 3011, 3003, 3004, 3005,
	3006, 3008, 3009, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	93, 0, 96, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 1358, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 0, 242,
	0, 0, 0, 0, 809, 0, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3018, 0, 0, 0, 0, 0, 2590, 2590, 2590, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 214, 1358,
	0, 0, 0, 0, 0, 0, 0, 2590, 0, 3142,
	998, 998, 1358, 1358, 242, 1336, 0, 0, 0, 0,
	0, 0, 0, 140, 0, 0, 1336, 242, 1336, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	2590, 0, 2590, 242, 0, 0, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 0, 2590, 0,
	0, 0, 0, 3844, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 806, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 998, 3013, 3014, 3015, 0, 0, 0,
	0, 3012, 3010, 3011, 3003, 3004, 3005, 3006, 3008, 3009,
	0, 0, 0, 0, 0, 1358, 0, 0, 2227, 0,
	2231, 0, 0, 0, 0, 0, 0, 2245, 0, 0,
	0, 0, 0, 0, 2254, 2255, 2256, 2257, 2258, 2259,
	2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269,
	2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279,
	2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 0,
	2294, 0, 2296, 2297, 2298, 2299, 791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2323, 0, 0, 0, 0, 0,
	775, 0, 0, 0, 0, 1732, 0, 0, 0, 2338,
	0, 0, 0, 0, 0, 0, 2590, 0, 3142, 0,
	0, 3938, 0, 0, 0, 2368, 2371, 2374, 2377, 242,
	2381, 2382, 2383, 2384, 2385, 2386, 2387, 0, 776, 0,
	0, 0, 1044, 0, 0, 0, 0, 0, 0, 777,
	0, 0, 0, 0, 0, 679, 0, 0, 2447, 0,
	2458, 2460, 2465, 0, 1321, 0, 0, 0, 0, 0,
	778, 0, 0, 0, 0, 0, 0, 0, 1336, 242,
	0, 0, 0, 0, 0, 0, 243, 243, 243, 0,
	797, 0, 0, 0, 0, 0, 0, 0, 3938, 0,
	0, 0, 0, 0, 0, 0, 2590, 0, 0, 779,
	0, 0, 243, 0, 0, 0, 0, 0, 4018, 1661,
	1662, 0, 1694, 1695, 1696, 1704, 1705, 1706, 0, 0,
	1358, 0, 780, 0, 0, 0, 243, 0, 0, 0,
	1697, 1692, 0, 0, 0, 0, 0, 0, 1664, 0,
	0, 0, 781, 0, 0, 782, 1710, 0, 0, 242,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	704, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1663, 3407, 0, 0, 0, 0, 0, 0,
	0, 0, 1683, 0, 796, 0, 0, 0, 0, 3938,
	0, 1680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2426, 2427, 2428, 2429, 2422, 2423, 2424, 2425, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 793, 0, 0, 0, 0, 0, 0, 0, 0,
	1020, 102, 0, 0, 0, 3844, 0, 0, 0, 0,
	0, 0, 1686, 1687, 1688, 1689, 0, 0, 0, 242,
	0, 0, 1669, 0, 0, 0, 0, 0, 0, 0,
	3142, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2700, 2701, 0, 2703, 0, 0, 0, 2402,
	2403, 2404, 2405, 0, 0, 0, 1358, 1701, 1358, 784,
	1711, 0, 0, 0, 0, 0, 1691, 1693, 0, 0,
	2414, 2415, 2416, 2417, 2410, 2411, 2412, 2413, 2418, 2419,
	2420, 2421, 1707, 4160, 1708, 0, 803, 102, 785, 0,
	1358, 1678, 1679, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1699,
	242, 2590, 0, 0, 0, 0, 0, 0, 0, 0,
	703, 0, 68, 1684, 0, 0, 0, 786, 242, 0,
	0, 801, 802, 799, 0, 0, 0, 0, 69, 794,
	0, 0, 787, 2398, 2399, 2400, 2401, 2406, 2407, 2408,
	2409, 0, 0, 3407, 73, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1709, 0, 959, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 979, 0, 788,
	795, 0, 1698, 0, 0, 0, 0, 0, 789, 0,
	0, 0, 0, 2840, 79, 0, 0, 0, 0, 0,
	0, 0, 790, 0, 0, 1661, 1662, 798, 0, 0,
	0, 1704, 1705, 1706, 0, 1141, 0, 0, 0, 0,
	0, 705, 0, 0, 0, 0, 3938, 1692, 0, 0,
	0, 85, 792, 0, 1664, 0, 0, 0, 0, 0,
	1690, 0, 1710, 1714, 1715, 100, 0, 0, 0, 0,
	86, 97, 0, 0, 0, 0, 0, 1358, 0, 2590,
	1685, 0, 0, 0, 0, 0, 0, 0, 1663, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1683, 0,
	0, 0, 0, 0, 0, 1702, 0, 1680, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2888, 2889,
	0, 0, 0, 0, 2895, 87, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2909, 2910, 0, 0, 0, 0, 2338,
	0, 0, 0, 0, 0, 0, 0, 0, 2917, 2787,
	0, 0, 0, 0, 0, 0, 0, 2590, 0, 0,
	0, 0, 0, 0, 2931, 0, 0, 0, 1686, 1687,
	1688, 1689, 2787, 0, 0, 0, 0, 0, 1669, 0,
	0, 2943, 0, 0, 0, 0, 0, 0, 0, 0,
	1700, 0, 0, 0, 1675, 1676, 1682, 1703, 1681, 1677,
	0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671,
	0, 0, 0, 1701, 3713, 0, 1711, 0, 3712, 0,
	0, 0, 1691, 1693, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1678, 1679, 0,
	0, 0, 0, 0, 0, 90, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1699, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1684,
	2465, 2465, 2465, 0, 0, 243, 1229, 243, 243, 0,
	1229, 243, 243, 0, 1229, 1803, 0, 0, 0, 0,
	0, 173, 93, 3058, 96, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1229, 212, 0,
	0, 0, 0, 0, 0, 0, 809, 0, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1229, 0, 243, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	984, 0, 0, 0, 0, 243, 0, 243, 243, 0,
	0, 243, 0, 1229, 984, 140, 1690, 0, 0, 1229,
	0, 0, 0, 1229, 243, 243, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 1685, 1229, 213, 0,
	0, 0, 3159, 0, 0, 0, 0, 0, 0, 206,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 1661,
	1662, 1702, 1694, 1695, 1696, 1704, 1705, 1706, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	1697, 1692, 0, 0, 0, 0, 0, 0, 1664, 1229,
	0, 0, 0, 0, 0, 0, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 1663, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1683, 0, 0, 0, 243, 0, 0, 0,
	0, 1680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1700, 102, 0, 102,
	0, 102, 0, 1703, 1681, 1677, 0, 1674, 1672, 1673,
	1665, 1666, 1667, 1668, 1670, 1671, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1686, 1687, 1688, 1689, 0, 0, 0, 0,
	0, 0, 1669, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 102, 0, 0, 0, 979, 102, 102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	102, 0, 102, 0, 0, 0, 0, 1701, 0, 0,
	1711, 0, 102, 0, 102, 0, 1691, 1693, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1707, 0, 1708, 0, 0, 0, 68, 0,
	0, 1678, 1679, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 69, 0, 0, 0, 0, 1699,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2245,
	73, 0, 0, 1684, 102, 3361, 3362, 0, 0, 3365,
	0, 0, 0, 3368, 0, 0, 0, 0, 0, 0,
	0, 0, 3372, 0, 0, 0, 0, 0, 0, 0,
	0, 3379, 0, 0, 3058, 0, 0, 0, 0, 0,
	79, 243, 0, 0, 1709, 0, 0, 0, 0, 3391,
	0, 0, 1229, 0, 0, 0, 243, 243, 243, 0,
	0, 0, 1698, 243, 0, 0, 0, 0, 243, 3414,
	3415, 0, 3416, 3417, 3418, 0, 0, 85, 0, 0,
	0, 1229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 100, 959, 0, 0, 0, 86, 97, 0, 0,
	0, 0, 0, 0, 0, 1229, 0, 0, 0, 0,
	0, 0, 1726, 0, 3424, 0, 0, 0, 3426, 0,
	1690, 0, 0, 0, 0, 0, 0, 0, 0, 1731,
	0, 0, 0, 1737, 0, 0, 0, 0, 0, 0,
	1685, 0, 0, 0, 0, 0, 0, 0, 0, 3454,
	3455, 87, 0, 0, 1661, 1662, 0, 1694, 1695, 1696,
	1704, 1705, 1706, 0, 0, 1702, 0, 3466, 0, 0,
	0, 0, 0, 0, 0, 1697, 1692, 0, 0, 0,
	0, 0, 3475, 1664, 0, 0, 0, 0, 0, 0,
	0, 1710, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1663, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1683, 0, 0,
	0, 0, 0, 0, 0, 0, 1680, 0, 0, 0,
	0, 243, 1229, 1229, 243, 0, 3515, 0, 0, 0,
	0, 0, 1229, 1823, 0, 1826, 0, 102, 0, 0,
	1700, 0, 3524, 3527, 1675, 1676, 1682, 1703, 1681, 1677,
	0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671,
	0, 0, 0, 0, 2952, 0, 0, 0, 2953, 0,
	3548, 90, 0, 0, 243, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 243, 0, 1686, 1687, 1688,
	1689, 243, 0, 0, 0, 0, 0, 1669, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 243, 0,
	0, 0, 0, 0, 243, 0, 0, 173, 93, 0,
	96, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1701, 0, 0, 1711, 0, 0, 0, 243,
	0, 1691, 1693, 0, 212, 0, 243, 0, 0, 0,
	0, 0, 809, 0, 0, 0, 138, 1707, 0, 1708,
	0, 0, 0, 0, 0, 0, 1678, 1679, 0, 0,
	0, 0, 0, 1803, 1229, 0, 1229, 0, 1229, 0,
	0, 0, 3637, 0, 1699, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 1229, 1229, 0, 0, 1684, 0,
	68, 0, 0, 0, 0, 1229, 243, 0, 0, 243,
	0, 140, 0, 0, 0, 0, 69, 1229, 0, 1229,
	1229, 1229, 0, 0, 0, 0, 177, 0, 0, 0,
	243, 0, 73, 0, 213, 0, 0, 0, 0, 1709,
	0, 243, 243, 0, 243, 206, 243, 0, 243, 0,
	243, 0, 0, 207, 0, 0, 0, 1698, 0, 1147,
	0, 0, 3683, 3684, 0, 0, 0, 0, 3688, 3689,
	0, 0, 79, 3692, 3693, 176, 0, 0, 0, 0,
	3697, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 3701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 237, 626, 0, 3706, 0, 85,
	0, 0, 0, 0, 0, 1690, 0, 0, 0, 0,
	0, 0, 0, 100, 0, 0, 0, 0, 86, 97,
	0, 0, 0, 0, 0, 1685, 1229, 0, 0, 0,
	0, 0, 0, 0, 0, 1031, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 241,
	241, 241, 979, 0, 979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 0,
	0, 0, 0, 1229, 0, 0, 0, 3527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1700, 0, 0, 0, 1675,
	1676, 1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665,
	1666, 1667, 1668, 1670, 1671, 0, 0, 0, 0, 2334,
	0, 0, 0, 2335, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 1229, 0,
	0, 0, 0, 90, 0, 0, 68, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 69, 0, 959, 0, 0, 959, 959, 0,
	0, 3527, 0, 0, 0, 0, 0, 0, 73, 0,
	1154, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	93, 0, 96, 0, 0, 0, 0, 243, 0, 0,
	0, 243, 0, 0, 3904, 3905, 3906, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 79, 0,
	0, 0, 2312, 0, 809, 0, 0, 2245, 138, 0,
	3915, 3916, 0, 0, 0, 0, 0, 0, 979, 1229,
	0, 0, 0, 0, 0, 0, 0, 1731, 3924, 0,
	0, 1731, 0, 0, 243, 85, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 100,
	0, 0, 0, 0, 86, 97, 0, 0, 0, 243,
	0, 0, 0, 140, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3527, 0, 243, 1229, 177, 0,
	0, 0, 3963, 0, 0, 0, 213, 0, 0, 0,
	0, 1229, 3970, 0, 0, 984, 0, 206, 0, 0,
	0, 243, 0, 1141, 3978, 207, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	0, 0, 0, 0, 0, 0, 0, 1503, 0, 243,
	0, 0, 1229, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	243, 0, 0, 0, 243, 0, 243, 0, 0, 0,
	0, 3527, 3527, 243, 243, 0, 0, 0, 1229, 1229,
	0, 1229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 243, 0, 0, 0, 0,
	0, 0, 4081, 0, 0, 4084, 0, 0, 0, 90,
	0, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	0, 0, 0, 0, 3527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 243, 243, 243, 0, 243,
	0, 243, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 0, 0, 173, 93, 0, 96, 0,
	0, 0, 0, 0, 0, 984, 984, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 3527, 0, 0, 3527,
	243, 0, 212, 102, 0, 0, 102, 0, 102, 0,
	809, 0, 0, 0, 138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1220, 0, 0, 0, 0, 0, 1328, 0,
	0, 0, 0, 0, 214, 2245, 0, 0, 0, 0,
	102, 0, 0, 102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 0, 984, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 102, 0,
	0, 0, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 0, 0, 0, 0, 0, 241, 0,
	241, 241, 0, 0, 241, 241, 4221, 4221, 4221, 0,
	0, 0, 1465, 1501, 1465, 1465, 0, 0, 0, 0,
	718, 0, 0, 0, 0, 0, 0, 0, 0, 4242,
	0, 1507, 1508, 0, 102, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1661, 1662, 0, 1694, 1695, 1696, 1704, 1705, 1706,
	0, 0, 0, 0, 0, 241, 241, 0, 0, 0,
	0, 0, 1697, 1692, 0, 0, 0, 4221, 0, 0,
	1664, 0, 0, 0, 0, 0, 0, 0, 1710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	241, 241, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 1229, 0, 0, 1663, 0, 0, 241, 241, 0,
	0, 0, 0, 0, 1683, 3527, 1614, 3527, 0, 0,
	0, 0, 0, 1680, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1229, 2312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1229, 0,
	0, 0, 0, 0, 0, 1731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1229,
	0, 0, 0, 0, 0, 0, 4221, 4353, 0, 0,
	0, 0, 0, 0, 4357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1686, 1687, 1688, 1689, 0, 0,
	0, 0, 241, 243, 1669, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 1229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 243, 1701,
	243, 0, 1711, 0, 0, 0, 0, 243, 1691, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 1229, 0, 1707, 0, 1708, 0, 0, 0,
	0, 0, 1229, 1678, 1679, 0, 0, 0, 0, 0,
	0, 1229, 0, 0, 0, 0, 1229, 0, 0, 0,
	0, 1699, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1684, 0, 0, 0, 1229,
	0, 0, 0, 0, 243, 1229, 0, 1229, 1141, 0,
	0, 1229, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 1141, 0, 0, 243, 0, 0, 1229,
	243, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 1229, 0, 0, 0, 0, 1841, 0,
	0, 0, 0, 0, 1698, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 1328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 243, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 1229, 0, 0, 0, 0, 0, 0,
	243, 0, 1690, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1229, 0, 0, 0, 1825, 0,
	1154, 0, 1685, 0, 241, 0, 0, 0, 102, 102,
	0, 0, 102, 0, 0, 0, 0, 0, 0, 241,
	1825, 241, 0, 0, 0, 0, 718, 1702, 0, 0,
	1229, 718, 243, 1229, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 102, 102, 0, 0, 102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	735, 0, 0, 0, 1229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1229, 1700, 0, 736, 0, 1675, 1676, 1682, 1703,
	1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668,
	1670, 1671, 0, 0, 0, 0, 4161, 1141, 0, 0,
	979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 737, 0, 754, 0, 0, 0, 0, 0,
	0, 2050, 0, 0, 0, 2057, 0, 0, 0, 0,
	0, 0, 102, 102, 0, 0, 0, 0, 2069, 738,
	0, 0, 0, 0, 739, 0, 0, 0, 0, 0,
	0, 0, 0, 2080, 241, 2080, 0, 718, 0, 0,
	0, 2087, 0, 0, 762, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 760, 0, 0, 1465, 0, 0, 0,
	0, 0, 0, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 741, 241, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 241, 1229, 742, 0, 0, 743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	764, 241, 0, 0, 704, 0, 0, 241, 0, 0,
	0, 0, 0, 2057, 0, 0, 2139, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1067, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 2159, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2170,
	0, 2172, 0, 2174, 0, 2176, 0, 2177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 763, 0, 0, 0,
	0, 0, 0, 0, 0, 758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2199, 243, 0, 0, 241,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 718, 241, 243, 241, 0, 241,
	0, 241, 744, 241, 0, 243, 0, 0, 0, 0,
	243, 0, 102, 746, 243, 0, 0, 0, 0, 0,
	1229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1141, 1141, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 747, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1229, 1229, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 703, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 734, 0, 755, 0, 243,
	0, 1229, 0, 0, 0, 0, 748, 0, 0, 0,
	0, 0, 1158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1229, 0, 0, 0, 0, 0, 753,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 749, 0, 0, 767, 0, 766, 0,
	0, 0, 750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 751, 0, 0, 0,
	0, 759, 0, 0, 0, 0, 0, 768, 0, 765,
	0, 0, 0, 0, 0, 705, 0, 0, 0, 0,
	0, 0, 2521, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 102, 0, 0,
	0, 0, 0, 1229, 0, 1229, 0, 0, 1154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2069, 0,
	0, 0, 0, 1141, 1154, 0, 0, 0, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 1229, 0,
	243, 0, 243, 0, 0, 0, 1229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	241, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 1328, 1229, 1229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 1229, 243, 0, 0, 0, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 2057, 0, 0, 241,
	0, 0, 0, 0, 2069, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 1229, 1229, 1229, 0, 0,
	0, 0, 0, 0, 0, 0, 1229, 0, 0, 241,
	0, 0, 0, 102, 2763, 0, 0, 1465, 0, 1141,
	0, 1465, 0, 1465, 0, 0, 0, 1141, 0, 0,
	0, 0, 0, 0, 718, 0, 1229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2816, 241, 0, 0, 0, 0, 0, 1661, 1662,
	241, 1694, 1695, 1696, 1704, 1705, 1706, 1229, 0, 1229,
	2826, 0, 2829, 0, 0, 0, 0, 0, 0, 1697,
	1692, 0, 0, 1229, 0, 0, 0, 1664, 0, 0,
	241, 0, 243, 241, 0, 1710, 0, 241, 0, 241,
	0, 0, 0, 0, 0, 0, 241, 241, 0, 0,
	0, 2852, 1328, 2854, 1328, 0, 2857, 0, 0, 0,
	0, 1663, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 1683, 0, 0, 0, 1229, 0, 241, 0, 0,
	1680, 102, 243, 0, 0, 0, 1229, 1229, 0, 1465,
	0, 1158, 102, 0, 0, 1158, 241, 2885, 241, 1158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1229, 0, 0, 1229, 0, 0,
	0, 0, 1158, 0, 710, 0, 0, 241, 241, 241,
	241, 0, 241, 0, 241, 0, 0, 0, 0, 0,
	0, 1686, 1687, 1688, 1689, 1158, 0, 0, 710, 0,
	0, 1669, 243, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 1661, 1662, 0,
	1694, 1695, 1696, 1704, 1705, 1706, 1701, 0, 1158, 1711,
	0, 0, 0, 0, 1158, 1691, 1693, 0, 1158, 1692,
	0, 0, 0, 0, 0, 0, 1664, 0, 0, 0,
	0, 1707, 1158, 1708, 1710, 0, 0, 0, 0, 0,
	1678, 1679, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1699, 243,
	1663, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1683, 0, 1684, 0, 0, 0, 0, 0, 0, 1680,
	0, 0, 0, 0, 1158, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 1229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1229, 1229, 0,
	0, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1229, 0, 0, 0, 0, 0,
	0, 1698, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1686, 1687, 1688, 1689, 0, 0, 0, 0, 0, 0,
	1669, 0, 0, 0, 0, 2312, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 1690,
	0, 0, 0, 0, 0, 1701, 0, 0, 1711, 0,
	0, 243, 0, 0, 1691, 1693, 0, 0, 0, 1685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1707, 0, 1708, 1154, 0, 0, 0, 0, 0, 1678,
	1679, 0, 0, 0, 1702, 0, 0, 0, 1154, 0,
	3133, 0, 0, 0, 0, 0, 0, 1699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1684, 0, 0, 0, 0, 0, 0, 1825, 0,
	0, 0, 0, 0, 3174, 3176, 0, 2069, 0, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1036, 0, 0,
	0, 0, 1709, 0, 0, 0, 102, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 1700,
	0, 0, 0, 1675, 1676, 1682, 1703, 1681, 1677, 0,
	1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0,
	1158, 0, 1158, 0, 0, 0, 0, 3711, 0, 0,
	241, 241, 0, 241, 0, 0, 0, 1158, 0, 0,
	1825, 0, 0, 3245, 0, 0, 0, 3249, 1690, 0,
	0, 0, 1881, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1158, 0, 1685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 102, 0, 0, 102, 0, 0, 0, 0, 0,
	1158, 0, 0, 1702, 0, 0, 1465, 0, 0, 0,
	1328, 1328, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 0, 0, 3310, 0, 241,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3347,
	0, 1328, 241, 0, 0, 0, 241, 241, 1700, 0,
	0, 0, 1675, 1676, 1682, 1703, 1681, 1677, 0, 1674,
	1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 0,
	0, 0, 0, 241, 3359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1158, 1158, 0,
	0, 0, 0, 0, 0, 0, 0, 1158, 1226, 0,
	0, 0, 1226, 0, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 0, 0, 1661, 1662, 0, 1694, 1695, 1696, 1704,
	1705, 1706, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 1346, 0, 1697, 1692, 0, 0, 0, 0,
	0, 0, 1664, 0, 0, 0, 0, 0, 0, 0,
	1710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 1663, 0, 0, 0,
	0, 1346, 0, 0, 0, 1346, 1683, 0, 0, 0,
	0, 0, 0, 0, 0, 1680, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1158,
	0, 1158, 0, 1158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1158,
	1158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 1158, 0, 1158, 1158, 1158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1686, 1687, 1688, 1689,
	0, 0, 0, 0, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1154, 1154, 0, 0, 0,
	0, 1701, 0, 0, 1711, 0, 0, 0, 0, 0,
	1691, 1693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1707, 0, 1708, 0,
	0, 0, 0, 0, 0, 1678, 1679, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1699, 0, 0, 0, 0, 0, 1881,
	1881, 1158, 0, 0, 0, 0, 0, 1684, 0, 0,
	0, 0, 2069, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2069, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3604, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2069, 1709, 0,
	0, 3619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1698, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 1158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 1227, 0, 0, 1690, 1227, 3668, 0, 241, 1347,
	0, 0, 0, 241, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 1685, 0, 0, 0, 0, 0,
	1158, 0, 0, 0, 0, 0, 0, 1158, 1154, 0,
	0, 0, 1347, 0, 1226, 0, 1158, 0, 0, 1702,
	0, 0, 0, 0, 0, 710, 0, 0, 0, 0,
	710, 0, 0, 1158, 0, 1347, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 1226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1347, 0,
	0, 0, 0, 0, 1347, 0, 0, 0, 1347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1700, 0, 0, 0, 1675, 1676,
	1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666,
	1667, 1668, 1670, 1671, 1158, 0, 0, 0, 0, 0,
	0, 0, 3377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3791, 0, 0, 0, 0, 0,
	0, 0, 1158, 0, 1154, 0, 0, 2069, 0, 0,
	0, 0, 1154, 0, 1346, 1346, 1158, 0, 0, 0,
	0, 0, 0, 0, 1226, 1825, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1158, 0, 0,
	0, 0, 2069, 0, 0, 0, 0, 0, 0, 0,
	0, 3860, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 1158, 1158, 0, 1158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1158, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 1346, 0,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1346,
	0, 1346, 1346, 1346, 0, 0, 0, 0, 0, 3945,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2069,
	0, 0, 0, 0, 0, 0, 1347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1227, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1661, 1662, 0, 1694, 1695, 1696, 1704, 1705, 1706, 4059,
	1328, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 1697, 1692, 0, 0, 0, 0, 0, 0, 1664,
	0, 0, 0, 0, 0, 0, 0, 1710, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1663, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1683, 0, 1226, 0, 0, 0, 0,
	0, 0, 1680, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 241, 1347, 1347, 0,
	0, 0, 0, 0, 0, 0, 0, 1227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4126,
	0, 0, 0, 0, 0, 1158, 1158, 0, 0, 0,
	0, 0, 0, 0, 1226, 0, 0, 0, 0, 0,
	1158, 0, 0, 1686, 1687, 1688, 1689, 0, 0, 0,
	0, 0, 0, 1669, 0, 0, 0, 0, 1158, 0,
	1226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1158, 0, 241, 1158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1701, 0,
	1881, 1711, 0, 4168, 1158, 0, 0, 1691, 1693, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	4190, 0, 0, 1707, 0, 1708, 0, 0, 0, 0,
	0, 0, 1678, 1679, 0, 0, 0, 0, 4202, 0,
	0, 0, 0, 0, 0, 1881, 0, 0, 0, 1347,
	1699, 1347, 0, 1347, 0, 0, 0, 0, 0, 0,
	0, 0, 1158, 0, 1684, 0, 0, 0, 0, 1347,
	1347, 1226, 0, 0, 0, 0, 0, 0, 0, 0,
	1347, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 1347, 0, 1347, 1347, 1347, 1158, 0, 0,
	0, 0, 0, 0, 0, 1709, 241, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 1158, 0, 0, 0,
	0, 1158, 0, 1698, 241, 0, 0, 0, 0, 1226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 1158, 0, 0, 0, 0, 0,
	1158, 0, 1158, 0, 0, 0, 1158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1158, 0, 0, 0, 0, 0,
	0, 1690, 0, 0, 1346, 0, 0, 0, 1158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1685, 0, 0, 1158, 0, 0, 0, 0, 0,
	0, 1227, 0, 0, 0, 0, 0, 1661, 1662, 0,
	1694, 1695, 1696, 1704, 1705, 1706, 1702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1697, 1692,
	1346, 1346, 0, 1346, 0, 0, 1664, 1158, 1158, 0,
	0, 0, 0, 0, 1710, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1158,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1663, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1683, 0, 0, 0, 0, 0, 0, 0, 1227, 1680,
	0, 0, 0, 0, 0, 1158, 0, 0, 1158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1700, 0, 0, 0, 1675, 1676, 1682, 1703, 1681,
	1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670,
	1671, 0, 0, 0, 0, 0, 0, 1661, 1662, 2955,
	1694, 1695, 1696, 1704, 1705, 1706, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 0, 0, 1227, 1697, 1692,
	1686, 1687, 1688, 1689, 0, 0, 1664, 0, 0, 1158,
	1669, 0, 0, 0, 1710, 0, 0, 0, 0, 0,
	0, 0, 0, 1227, 0, 0, 1158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1881, 1881, 0, 0,
	1663, 0, 0, 0, 0, 1701, 0, 0, 1711, 0,
	1683, 0, 0, 0, 1691, 1693, 0, 0, 0, 1680,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1707, 0, 1708, 0, 0, 0, 0, 0, 0, 1678,
	1679, 0, 0, 0, 0, 0, 0, 0, 0, 1881,
	1881, 0, 0, 0, 0, 0, 0, 1699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1684, 0, 0, 0, 0, 0, 0, 0, 0,
	1881, 0, 0, 0, 1227, 0, 0, 0, 0, 0,
	1686, 1687, 1688, 1689, 0, 0, 0, 0, 0, 0,
	1669, 0, 0, 0, 0, 0, 0, 1158, 1158, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1698, 0, 0, 0, 0, 1701, 0, 0, 1711, 0,
	1158, 0, 1227, 0, 1691, 1693, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1347, 0, 0, 0,
	1707, 0, 1708, 0, 0, 0, 0, 0, 0, 1678,
	1679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1699, 1690, 0,
	0, 0, 0, 1226, 0, 0, 0, 1347, 0, 0,
	0, 1684, 0, 0, 0, 0, 0, 0, 1685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1226, 0, 0, 0, 0,
	0, 0, 0, 1702, 0, 0, 0, 0, 0, 0,
	1226, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1347, 1347, 0, 1347, 0, 0, 0,
	1698, 1226, 0, 0, 0, 0, 0, 1158, 1347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1347, 0, 0, 1881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1158, 0, 0, 1690, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 1700, 0,
	1158, 0, 1675, 1676, 1682, 1703, 1681, 1677, 1685, 1674,
	1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 0,
	0, 1158, 1158, 1158, 1346, 0, 2954, 0, 0, 0,
	0, 0, 0, 1702, 1226, 0, 0, 1158, 0, 0,
	0, 0, 0, 1346, 0, 0, 0, 0, 1346, 0,
	0, 0, 0, 0, 0, 0, 1158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 1346, 1158, 1346,
	0, 0, 0, 1226, 0, 0, 0, 0, 0, 1881,
	710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1700, 0,
	0, 0, 1675, 1676, 1682, 1703, 1681, 1677, 0, 1674,
	1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 0,
	0, 0, 0, 0, 0, 0, 2951, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1158, 0, 0, 0,
	0, 0, 0, 0, 1158, 0, 1346, 0, 1158, 0,
	1158, 0, 0, 0, 0, 0, 0, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1158, 0, 0, 0, 0, 0, 0,
	0, 0, 1226, 0, 0, 1226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1158, 0, 0, 0, 0, 0, 0,
	0, 1158, 0, 0, 0, 0, 1227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1226, 0, 0, 1158,
	1158, 0, 0, 0, 0, 0, 0, 0, 1227, 0,
	0, 0, 0, 1226, 0, 0, 0, 1158, 0, 0,
	0, 0, 0, 1227, 0, 0, 0, 0, 1158, 0,
	0, 0, 0, 1158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1158, 1158, 1158, 0, 0, 0, 0, 0, 0, 0,
	0, 1158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1347, 0, 0, 0, 0, 0, 0, 0,
	0, 1158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 0, 0, 1347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1227, 0, 0,
	0, 0, 1158, 0, 1158, 0, 1347, 0, 0, 0,
	0, 1347, 0, 0, 0, 0, 0, 1226, 1158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1347, 0, 0, 0, 0, 0,
	1347, 0, 1347, 1881, 0, 0, 1227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1347, 0, 0, 0, 0, 0,
	1158, 0, 0, 0, 0, 0, 0, 0, 1347, 0,
	0, 1158, 1158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1661, 1662, 0, 1694, 1695,
	1696, 1704, 1705, 1706, 0, 0, 0, 0, 0, 1158,
	0, 0, 1158, 0, 0, 0, 1697, 1692, 0, 0,
	0, 0, 0, 0, 1664, 0, 0, 1347, 1347, 0,
	0, 0, 1710, 0, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1347,
	0, 0, 0, 0, 0, 0, 0, 0, 1663, 0,
	0, 0, 0, 0, 0, 0, 0, 1881, 1683, 0,
	0, 0, 0, 0, 0, 0, 0, 1680, 0, 0,
	0, 0, 1346, 0, 0, 1227, 0, 0, 1227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1346, 1346,
	1346, 0, 0, 0, 0, 1661, 1662, 0, 1694, 1695,
	1696, 1704, 1705, 1706, 1346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1697, 1692, 1686, 1687,
	1688, 1689, 0, 1226, 1664, 0, 0, 0, 1669, 1227,
	0, 0, 1710, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1158, 0, 0, 1226, 1227, 0, 0, 0,
	0, 0, 1158, 1158, 0, 0, 0, 0, 1663, 0,
	0, 0, 0, 1701, 0, 0, 1711, 0, 1683, 1158,
	0, 0, 1691, 1693, 0, 0, 0, 1680, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1707, 0,
	1708, 0, 0, 0, 0, 0, 0, 1678, 1679, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1699, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1684,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1686, 1687,
	1688, 1689, 0, 0, 0, 0, 0, 0, 1669, 0,
	0, 0, 0, 0, 0, 1226, 0, 1226, 0, 0,
	1709, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 0,
	1226, 0, 0, 1701, 0, 0, 1711, 0, 0, 0,
	1227, 0, 1691, 1693, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1707, 0,
	1708, 0, 0, 0, 0, 0, 0, 1678, 1679, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1226, 0, 0, 0, 0, 1699, 1690, 0, 1226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1684,
	0, 0, 0, 0, 0, 0, 1685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1702, 0, 0, 1346, 0, 0, 0, 0, 0,
	1709, 0, 0, 0, 0, 1226, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 0, 0, 1698, 0,
	0, 0, 0, 0, 0, 0, 0, 1347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1346, 1346, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 1226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1347, 1690, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1700, 0, 1226, 0,
	1675, 1676, 1682, 1703, 1681, 1677, 1685, 1674, 1672, 1673,
	1665, 1666, 1667, 1668, 1670, 1671, 0, 0, 0, 0,
	0, 1347, 1347, 1347, 2950, 0, 0, 0, 0, 0,
	0, 1702, 0, 0, 0, 0, 0, 1347, 0, 1226,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1226, 1227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1661, 1662, 0, 1694, 1695, 1696, 1704, 1705,
	1706, 0, 0, 0, 0, 0, 0, 1226, 0, 0,
	0, 0, 0, 1697, 1692, 0, 0, 0, 1346, 1346,
	0, 1664, 0, 0, 0, 0, 1700, 0, 0, 1710,
	1675, 1676, 1682, 1703, 1681, 1677, 0, 1674, 1672, 1673,
	1665, 1666, 1667, 1668, 1670, 1671, 0, 0, 0, 0,
	0, 0, 0, 0, 2949, 1663, 1226, 0, 0, 1346,
	0, 0, 0, 0, 0, 1683, 0, 0, 0, 0,
	0, 0, 0, 0, 1680, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 870, 0, 913,
	0, 0, 0, 0, 0, 0, 0, 0, 1227, 0,
	1227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 878, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1227, 0, 0, 0, 0, 892, 876,
	875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1686, 1687, 1688, 1689, 0,
	0, 0, 0, 0, 0, 1669, 0, 877, 0, 0,
	0, 0, 880, 0, 0, 0, 0, 921, 0, 0,
	0, 0, 0, 1227, 0, 0, 889, 890, 0, 0,
	0, 1227, 0, 0, 0, 906, 0, 0, 0, 0,
	1701, 0, 0, 1711, 0, 0, 0, 0, 0, 1691,
	1693, 914, 882, 0, 0, 0, 0, 0, 0, 1347,
	1347, 0, 0, 0, 0, 1707, 0, 1708, 0, 1346,
	0, 0, 0, 0, 1678, 1679, 0, 1347, 883, 1346,
	1346, 0, 0, 0, 0, 0, 0, 912, 1227, 0,
	0, 0, 1699, 1347, 0, 0, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1684, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 885,
	1347, 1347, 1347, 0, 0, 0, 0, 874, 0, 0,
	0, 1227, 0, 0, 0, 0, 0, 1709, 0, 0,
	0, 0, 0, 0, 0, 886, 887, 0, 0, 0,
	0, 0, 0, 0, 0, 1698, 0, 0, 0, 0,
	0, 1227, 0, 894, 893, 0, 0, 0, 0, 0,
	0, 888, 0, 0, 0, 903, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 918, 0, 0, 0, 0, 0, 0,
	0, 0, 1227, 0, 1347, 0, 0, 0, 0, 0,
	0, 0, 0, 1690, 0, 0, 0, 0, 1227, 0,
	0, 0, 0, 915, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1702, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1227, 0, 0, 0, 881, 0, 0, 920, 0, 0,
	0, 1347, 1347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 879, 0,
	0, 0, 910, 911, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1227,
	0, 0, 1347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 908, 0, 0, 0, 0, 0, 0, 919,
	904, 0, 897, 895, 0, 900, 0, 0, 0, 0,
	0, 901, 0, 1700, 872, 0, 916, 1675, 1676, 1682,
	1703, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667,
	1668, 1670, 1671, 0, 0, 0, 873, 0, 0, 0,
	0, 2335, 0, 0, 0, 0, 0, 902, 0, 0,
	0, 0, 899, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 917, 0, 0, 0, 0, 0, 0, 0,
	905, 0, 0, 0, 0, 0, 0, 0, 0, 884,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 907, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 909, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1224, 0, 1347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1347, 1347, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 1230, 257, 258, 1231, 1232, 1233, 1347,
	1234, 572, 1235, 1236, 1237, 1238, 259, 260, 1098, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 1239, 577, 268, 269, 270, 271, 272, 273, 1240,
	1241, 0, 274, 578, 579, 580, 1242, 275, 276, 581,
	1243, 1310, 1244, 277, 278, 279, 280, 281, 282, 283,
	0, 1245, 285, 286, 287, 284, 288, 1246, 289, 0,
	290, 291, 292, 293, 294, 295, 1247, 296, 297, 298,
	1099, 299, 300, 1248, 1249, 1251, 1250, 1252, 1253, 1254,
	301, 302, 303, 304, 0, 305, 582, 583, 1255, 309,
	306, 307, 1256, 310, 308, 1257, 311, 312, 313, 1258,
	1259, 314, 315, 316, 1260, 317, 318, 1261, 319, 320,
	321, 1262, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 1263, 248, 1264,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 1265, 339, 1266, 1267, 1100, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 1268,
	350, 590, 1269, 591, 351, 1270, 352, 353, 354, 355,
	356, 592, 593, 594, 430, 1102, 357, 358, 1271, 359,
	360, 361, 362, 0, 0, 0, 249, 363, 364, 366,
	1272, 1101, 365, 595, 596, 1273, 597, 1274, 367, 368,
	1103, 598, 1104, 369, 370, 371, 1105, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 1275, 379, 381,
	380, 1276, 382, 599, 1106, 383, 384, 1107, 1277, 385,
	0, 0, 0, 386, 387, 1278, 1279, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 1108, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 1109, 417,
	1280, 250, 1110, 427, 428, 1281, 600, 429, 601, 431,
	432, 1282, 0, 433, 0, 1283, 1284, 435, 436, 437,
	1285, 1286, 438, 439, 602, 1111, 440, 1112, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	1287, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 1288, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	1289, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 1290, 483, 484,
	485, 1113, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	1291, 506, 507, 505, 508, 509, 510, 1292, 511, 495,
	496, 512, 513, 1114, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 1293, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 1294, 532, 533,
	0, 531, 1295, 534, 535, 536, 537, 538, 539, 329,
	540, 1296, 541, 613, 614, 615, 616, 1297, 550, 1298,
	542, 543, 544, 617, 545, 618, 1299, 546, 547, 548,
	549, 0, 551, 552, 1300, 1301, 553, 554, 555, 557,
	558, 556, 559, 1302, 560, 1303, 0, 561, 562, 563,
	619, 620, 621, 1304, 565, 564, 566, 622, 1305, 1306,
	1307, 1308, 567, 568, 623, 569, 570, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1224, 0, 0, 0, 0, 0, 0, 0, 2499,
	0, 0, 0, 0, 0, 0, 0, 2500, 251, 252,
	253, 254, 255, 256, 1230, 257, 258, 1231, 1232, 1233,
	0, 1234, 572, 1235, 1236, 1237, 1238, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 1239, 577, 268, 269, 270, 271, 272, 273,
	1240, 1241, 0, 274, 578, 579, 580, 1242, 275, 276,
	581, 1243, 1310, 1244, 277, 278, 279, 280, 281, 282,
	283, 0, 1245, 285, 286, 287, 284, 288, 1246, 289,
	0, 290, 291, 292, 293, 294, 295, 1247, 296, 297,
	298, 1099, 299, 300, 1248, 1249, 1251, 1250, 1252, 1253,
	1254, 301, 302, 303, 304, 0, 305, 582, 583, 1255,
	309, 306, 307, 1256, 310, 308, 1257, 311, 312, 313,
	1258, 1259, 314, 315, 316, 1260, 317, 318, 1261, 319,
	320, 321, 1262, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 1263, 248,
	1264, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 1265, 339, 1266, 1267, 1100, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	1268, 350, 590, 1269, 591, 351, 1270, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 1102, 357, 358, 1271,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 1272, 1101, 365, 595, 596, 1273, 597, 1274, 367,
	368, 1103, 598, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 1275, 379,
	381, 380, 1276, 382, 599, 1106, 383, 384, 1107, 1277,
	385, 0, 0, 0, 386, 387, 1278, 1279, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 1280, 250, 1110, 427, 428, 1281, 600, 429, 601,
	431, 432, 1282, 0, 433, 0, 1283, 1284, 435, 436,
	437, 1285, 1286, 438, 439, 602, 1111, 440, 1112, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 1287, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 1288, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 1289, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 1290, 483,
	484, 485, 1113, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 1291, 506, 507, 505, 508, 509, 510, 1292, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 1293, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 1294, 532,
	533, 0, 531, 1295, 534, 535, 536, 537, 538, 539,
	329, 540, 1296, 541, 613, 614, 615, 616, 1297, 550,
	1298, 542, 543, 544, 617, 545, 618, 1299, 546, 547,
	548, 549, 0, 551, 552, 1300, 1301, 553, 554, 555,
	557, 558, 556, 559, 1302, 560, 1303, 0, 561, 562,
	563, 619, 620, 621, 1304, 565, 564, 566, 622, 1305,
	1306, 1307, 1308, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1224, 0, 0, 0, 0, 3385, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3387, 251, 252, 253,
	254, 255, 256, 1230, 257, 258, 1231, 1232, 1233, 0,
	1234, 572, 1235, 1236, 1237, 1238, 259, 260, 1098, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 1239, 577, 268, 269, 270, 271, 272, 273, 1240,
	1241, 0, 274, 578, 579, 580, 1242, 275, 276, 581,
	1243, 1310, 1244, 277, 278, 279, 280, 281, 282, 283,
	0, 1245, 285, 286, 287, 284, 288, 1246, 289, 0,
	290, 291, 292, 293, 294, 295, 1247, 296, 297, 298,
	1099, 299, 300, 1248, 1249, 1251, 1250, 1252, 1253, 1254,
	301, 302, 303, 304, 0, 305, 582, 583, 1255, 309,
	306, 307, 1256, 310, 308, 1257, 311, 312, 313, 1258,
	1259, 314, 315, 316, 1260, 317, 318, 1261, 319, 320,
	321, 1262, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 1263, 248, 1264,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 1265, 339, 1266, 1267, 1100, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 1268,
	350, 590, 1269, 591, 351, 1270, 352, 353, 354, 355,
	356, 592, 593, 594, 430, 1102, 357, 358, 1271, 359,
	360, 361, 362, 0, 0, 0, 249, 363, 364, 366,
	1272, 1101, 365, 595, 596, 1273, 597, 1274, 367, 368,
	1103, 598, 1104, 369, 370, 371, 1105, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 1275, 379, 381,
	380, 1276, 382, 599, 1106, 383, 384, 1107, 1277, 385,
	0, 0, 0, 386, 387, 1278, 1279, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 1108, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 1109, 417,
	1280, 250, 1110, 427, 428, 1281, 600, 429, 601, 431,
	432, 1282, 0, 433, 0, 1283, 1284, 435, 436, 437,
	1285, 1286, 438, 439, 602, 1111, 440, 1112, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	1287, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 1288, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	1289, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 1290, 483, 484,
	485, 1113, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	1291, 506, 507, 505, 508, 509, 510, 1292, 511, 495,
	496, 512, 513, 1114, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 1293, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 1294, 532, 533,
	0, 531, 1295, 534, 535, 536, 537, 538, 539, 329,
	540, 1296, 541, 613, 614, 615, 616, 1297, 550, 1298,
	542, 543, 544, 617, 545, 618, 1299, 546, 547, 548,
	549, 0, 551, 552, 1300, 1301, 553, 554, 555, 557,
	558, 556, 559, 1302, 560, 1303, 0, 561, 562, 563,
	619, 620, 621, 1304, 565, 564, 566, 622, 1305, 1306,
	1307, 1308, 567, 568, 623, 569, 570, 571, 0, 0,
	0, 0, 0, 1224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3739,
	251, 252, 253, 254, 255, 256, 1230, 257, 258, 1231,
	1232, 1233, 0, 1234, 572, 1235, 1236, 1237, 1238, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 1239, 577, 268, 269, 270, 271,
	272, 273, 1240, 1241, 0, 274, 578, 579, 580, 1242,
	275, 276, 581, 1243, 1310, 1244, 277, 278, 279, 280,
	281, 282, 283, 0, 1245, 285, 286, 287, 284, 288,
	1246, 289, 0, 290, 291, 292, 293, 294, 295, 1247,
	296, 297, 298, 1099, 299, 300, 1248, 1249, 1251, 1250,
	1252, 1253, 1254, 301, 302, 303, 304, 0, 305, 582,
	583, 1255, 309, 306, 307, 1256, 310, 308, 1257, 311,
	312, 313, 1258, 1259, 314, 315, 316, 1260, 317, 318,
	1261, 319, 320, 321, 1262, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	1263, 248, 1264, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 1265, 339, 1266, 1267, 1100,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 1268, 350, 590, 1269, 591, 351, 1270, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 1102, 357,
	358, 1271, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 1272, 1101, 365, 595, 596, 1273, 597,
	1274, 367, 368, 1103, 598, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	1275, 379, 381, 380, 1276, 382, 599, 1106, 383, 384,
	1107, 1277, 385, 0, 0, 0, 386, 387, 1278, 1279,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 1280, 250, 1110, 427, 428, 1281, 600,
	429, 601, 431, 432, 1282, 0, 433, 0, 1283, 1284,
	435, 436, 437, 1285, 1286, 438, 439, 602, 1111, 440,
	1112, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 1287, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 1288,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 1289, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	1290, 483, 484, 485, 1113, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 1291, 506, 507, 505, 508, 509, 510,
	1292, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 1293, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	1294, 532, 533, 0, 531, 1295, 534, 535, 536, 537,
	538, 539, 329, 540, 1296, 541, 613, 614, 615, 616,
	1297, 550, 1298, 542, 543, 544, 617, 545, 618, 1299,
	546, 547, 548, 549, 0, 551, 552, 1300, 1301, 553,
	554, 555, 557, 558, 556, 559, 1302, 560, 1303, 0,
	561, 562, 563, 619, 620, 621, 1304, 565, 564, 566,
	622, 1305, 1306, 1307, 1308, 567, 568, 623, 569, 570,
	571, 1224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3910, 251, 252,
	253, 254, 255, 256, 1230, 257, 258, 1231, 1232, 1233,
	0, 1234, 572, 1235, 1236, 1237, 1238, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 1239, 577, 268, 269, 270, 271, 272, 273,
	1240, 1241, 0, 274, 578, 579, 580, 1242, 275, 276,
	581, 1243, 1310, 1244, 277, 278, 279, 280, 281, 282,
	283, 0, 1245, 285, 286, 287, 284, 288, 1246, 289,
	0, 290, 291, 292, 293, 294, 295, 1247, 296, 297,
	298, 1099, 299, 300, 1248, 1249, 1251, 1250, 1252, 1253,
	1254, 301, 302, 303, 304, 0, 305, 582, 583, 1255,
	309, 306, 307, 1256, 310, 308, 1257, 311, 312, 313,
	1258, 1259, 314, 315, 316, 1260, 317, 318, 1261, 319,
	320, 321, 1262, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 1263, 248,
	1264, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 1265, 339, 1266, 1267, 1100, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	1268, 350, 590, 1269, 591, 351, 1270, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 1102, 357, 358, 1271,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 1272, 1101, 365, 595, 596, 1273, 597, 1274, 367,
	368, 1103, 598, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 1275, 379,
	381, 380, 1276, 382, 599, 1106, 383, 384, 1107, 1277,
	385, 0, 0, 0, 386, 387, 1278, 1279, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 1280, 250, 1110, 427, 428, 1281, 600, 429, 601,
	431, 432, 1282, 0, 433, 0, 1283, 1284, 435, 436,
	437, 1285, 1286, 438, 439, 602, 1111, 440, 1112, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 1287, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 1288, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 1289, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 1290, 483,
	484, 485, 1113, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 1291, 506, 507, 505, 508, 509, 510, 1292, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 1293, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 1294, 532,
	533, 0, 531, 1295, 534, 535, 536, 537, 538, 539,
	329, 540, 1296, 541, 613, 614, 615, 616, 1297, 550,
	1298, 542, 543, 544, 617, 545, 618, 1299, 546, 547,
	548, 549, 0, 551, 552, 1300, 1301, 553, 554, 555,
	557, 558, 556, 559, 1302, 560, 1303, 0, 561, 562,
	563, 619, 620, 621, 1304, 565, 564, 566, 622, 1305,
	1306, 1307, 1308, 567, 568, 623, 569, 570, 571, 1224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3799, 251, 252, 253, 254,
	255, 256, 1230, 257, 258, 1231, 1232, 1233, 0, 1234,
	572, 1235, 1236, 1237, 1238, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	1239, 577, 268, 269, 270, 271, 272, 273, 1240, 1241,
	0, 274, 578, 579, 580, 1242, 275, 276, 581, 1243,
	1310, 1244, 277, 278, 279, 280, 281, 282, 283, 0,
	1245, 285, 286, 287, 284, 288, 1246, 289, 0, 290,
	291, 292, 293, 294, 295, 1247, 296, 297, 298, 1099,
	299, 300, 1248, 1249, 1251, 1250, 1252, 1253, 1254, 301,
	302, 303, 304, 0, 305, 582, 583, 1255, 309, 306,
	307, 1256, 310, 308, 1257, 311, 312, 313, 1258, 1259,
	314, 315, 316, 1260, 317, 318, 1261, 319, 320, 321,
	1262, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 1263, 248, 1264, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 1265, 339, 1266, 1267, 1100, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 1268, 350,
	590, 1269, 591, 351, 1270, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 1102, 357, 358, 1271, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 1272,
	1101, 365, 595, 596, 1273, 597, 1274, 367, 368, 1103,
	598, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 1275, 379, 381, 380,
	1276, 382, 599, 1106, 383, 384, 1107, 1277, 385, 0,
	0, 0, 386, 387, 1278, 1279, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 1280,
	250, 1110, 427, 428, 1281, 600, 429, 601, 431, 432,
	1282, 0, 433, 0, 1283, 1284, 435, 436, 437, 1285,
	1286, 438, 439, 602, 1111, 440, 1112, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 1287,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 1288, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 1289,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 1290, 483, 484, 485,
	1113, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 1291,
	506, 507, 505, 508, 509, 510, 1292, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 1293, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 1294, 532, 533, 0,
	531, 1295, 534, 535, 536, 537, 538, 539, 329, 540,
	1296, 541, 613, 614, 615, 616, 1297, 550, 1298, 542,
	543, 544, 617, 545, 618, 1299, 546, 547, 548, 549,
	0, 551, 552, 1300, 1301, 553, 554, 555, 557, 558,
	556, 559, 1302, 560, 1303, 0, 561, 562, 563, 619,
	620, 621, 1304, 565, 564, 566, 622, 1305, 1306, 1307,
	1308, 567, 568, 623, 569, 570, 571, 1224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3669, 251, 252, 253, 254, 255, 256,
	1230, 257, 258, 1231, 1232, 1233, 0, 1234, 572, 1235,
	1236, 1237, 1238, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 1239, 577,
	268, 269, 270, 271, 272, 273, 1240, 1241, 0, 274,
	578, 579, 580, 1242, 275, 276, 581, 1243, 1310, 1244,
	277, 278, 279, 280, 281, 282, 283, 0, 1245, 285,
	286, 287, 284, 288, 1246, 289, 0, 290, 291, 292,
	293, 294, 295, 1247, 296, 297, 298, 1099, 299, 300,
	1248, 1249, 1251, 1250, 1252, 1253, 1254, 301, 302, 303,
	304, 0, 305, 582, 583, 1255, 309, 306, 307, 1256,
	310, 308, 1257, 311, 312, 313, 1258, 1259, 314, 315,
	316, 1260, 317, 318, 1261, 319, 320, 321, 1262, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 1263, 248, 1264, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 1265,
	339, 1266, 1267, 1100, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 1268, 350, 590, 1269,
	591, 351, 1270, 352, 353, 354, 355, 356, 592, 593,
	594, 430, 1102, 357, 358, 1271, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 1272, 1101, 365,
	595, 596, 1273, 597, 1274, 367, 368, 1103, 598, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 1275, 379, 381, 380, 1276, 382,
	599, 1106, 383, 384, 1107, 1277, 385, 0, 0, 0,
	386, 387, 1278, 1279, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 1280, 250, 1110,
	427, 428, 1281, 600, 429, 601, 431, 432, 1282, 0,
	433, 0, 1283, 1284, 435, 436, 437, 1285, 1286, 438,
	439, 602, 1111, 440, 1112, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 1287, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 1288, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 1289, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 1290, 483, 484, 485, 1113, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 1291, 506, 507,
	505, 508, 509, 510, 1292, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	1293, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 1294, 532, 533, 0, 531, 1295,
	534, 535, 536, 537, 538, 539, 329, 540, 1296, 541,
	613, 614, 615, 616, 1297, 550, 1298, 542, 543, 544,
	617, 545, 618, 1299, 546, 547, 548, 549, 0, 551,
	552, 1300, 1301, 553, 554, 555, 557, 558, 556, 559,
	1302, 560, 1303, 0, 561, 562, 563, 619, 620, 621,
	1304, 565, 564, 566, 622, 1305, 1306, 1307, 1308, 567,
	568, 623, 569, 570, 571, 1224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3403, 251, 252, 253, 254, 255, 256, 1230, 257,
	258, 1231, 1232, 1233, 0, 1234, 572, 1235, 1236, 1237,
	1238, 259, 260, 1098, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 1239, 577, 268, 269,
	270, 271, 272, 273, 1240, 1241, 0, 274, 578, 579,
	580, 1242, 275, 276, 581, 1243, 1310, 1244, 277, 278,
	279, 280, 281, 282, 283, 0, 1245, 285, 286, 287,
	284, 288, 1246, 289, 0, 290, 291, 292, 293, 294,
	295, 1247, 296, 297, 298, 1099, 299, 300, 1248, 1249,
	1251, 1250, 1252, 1253, 1254, 301, 302, 303, 304, 0,
	305, 582, 583, 1255, 309, 306, 307, 1256, 310, 308,
	1257, 311, 312, 313, 1258, 1259, 314, 315, 316, 1260,
	317, 318, 1261, 319, 320, 321, 1262, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 1263, 248, 1264, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 1265, 339, 1266,
	1267, 1100, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 1268, 350, 590, 1269, 591, 351,
	1270, 352, 353, 354, 355, 356, 592, 593, 594, 430,
	1102, 357, 358, 1271, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 1272, 1101, 365, 595, 596,
	1273, 597, 1274, 367, 368, 1103, 598, 1104, 369, 370,
	371, 1105, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 1275, 379, 381, 380, 1276, 382, 599, 1106,
	383, 384, 1107, 1277, 385, 0, 0, 0, 386, 387,
	1278, 1279, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	1108, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 1109, 417, 1280, 250, 1110, 427, 428,
	1281, 600, 429, 601, 431, 432, 1282, 0, 433, 0,
	1283, 1284, 435, 436, 437, 1285, 1286, 438, 439, 602,
	1111, 440, 1112, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 1287, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 1288, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 1289, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 1290, 483, 484, 485, 1113, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 1291, 506, 507, 505, 508,
	509, 510, 1292, 511, 495, 496, 512, 513, 1114, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 1293, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 1294, 532, 533, 0, 531, 1295, 534, 535,
	536, 537, 538, 539, 329, 540, 1296, 541, 613, 614,
	615, 616, 1297, 550, 1298, 542, 543, 544, 617, 545,
	618, 1299, 546, 547, 548, 549, 0, 551, 552, 1300,
	1301, 553, 554, 555, 557, 558, 556, 559, 1302, 560,
	1303, 0, 561, 562, 563, 619, 620, 621, 1304, 565,
	564, 566, 622, 1305, 1306, 1307, 1308, 567, 568, 623,
	569, 570, 571, 1224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3230,
	251, 252, 253, 254, 255, 256, 1230, 257, 258, 1231,
	1232, 1233, 0, 1234, 572, 1235, 1236, 1237, 1238, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 1239, 577, 268, 269, 270, 271,
	272, 273, 1240, 1241, 0, 274, 578, 579, 580, 1242,
	275, 276, 581, 1243, 1310, 1244, 277, 278, 279, 280,
	281, 282, 283, 0, 1245, 285, 286, 287, 284, 288,
	1246, 289, 0, 290, 291, 292, 293, 294, 295, 1247,
	296, 297, 298, 1099, 299, 300, 1248, 1249, 1251, 1250,
	1252, 1253, 1254, 301, 302, 303, 304, 0, 305, 582,
	583, 1255, 309, 306, 307, 1256, 310, 308, 1257, 311,
	312, 313, 1258, 1259, 314, 315, 316, 1260, 317, 318,
	1261, 319, 320, 321, 1262, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	1263, 248, 1264, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 1265, 339, 1266, 1267, 1100,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 1268, 350, 590, 1269, 591, 351, 1270, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 1102, 357,
	358, 1271, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 1272, 1101, 365, 595, 596, 1273, 597,
	1274, 367, 368, 1103, 598, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	1275, 379, 381, 380, 1276, 382, 599, 1106, 383, 384,
	1107, 1277, 385, 0, 0, 0, 386, 387, 1278, 1279,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 1280, 250, 1110, 427, 428, 1281, 600,
	429, 601, 431, 432, 1282, 0, 433, 0, 1283, 1284,
	435, 436, 437, 1285, 1286, 438, 439, 602, 1111, 440,
	1112, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 1287, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 1288,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 1289, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	1290, 483, 484, 485, 1113, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 1291, 506, 507, 505, 508, 509, 510,
	1292, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 1293, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	1294, 532, 533, 0, 531, 1295, 534, 535, 536, 537,
	538, 539, 329, 540, 1296, 541, 613, 614, 615, 616,
	1297, 550, 1298, 542, 543, 544, 617, 545, 618, 1299,
	546, 547, 548, 549, 0, 551, 552, 1300, 1301, 553,
	554, 555, 557, 558, 556, 559, 1302, 560, 1303, 0,
	561, 562, 563, 619, 620, 621, 1304, 565, 564, 566,
	622, 1305, 1306, 1307, 1308, 567, 568, 623, 569, 570,
	571, 1224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2358, 251, 252,
	253, 254, 255, 256, 1230, 257, 258, 1231, 1232, 1233,
	0, 1234, 572, 1235, 1236, 1237, 1238, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 1239, 577, 268, 269, 270, 271, 272, 273,
	1240, 1241, 0, 274, 578, 579, 580, 1242, 275, 276,
	581, 1243, 1310, 1244, 277, 278, 279, 280, 281, 282,
	283, 0, 1245, 285, 286, 287, 284, 288, 1246, 289,
	0, 290, 291, 292, 293, 294, 295, 1247, 296, 297,
	298, 1099, 299, 300, 1248, 1249, 1251, 1250, 1252, 1253,
	1254, 301, 302, 303, 304, 0, 305, 582, 583, 1255,
	309, 306, 307, 1256, 310, 308, 1257, 311, 312, 313,
	1258, 1259, 314, 315, 316, 1260, 317, 318, 1261, 319,
	320, 321, 1262, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 1263, 248,
	1264, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 1265, 339, 1266, 1267, 1100, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	1268, 350, 590, 1269, 591, 351, 1270, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 1102, 357, 358, 1271,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 1272, 1101, 365, 595, 596, 1273, 597, 1274, 367,
	368, 1103, 598, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 1275, 379,
	381, 380, 1276, 382, 599, 1106, 383, 384, 1107, 1277,
	385, 0, 0, 0, 386, 387, 1278, 1279, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 1280, 250, 1110, 427, 428, 1281, 600, 429, 601,
	431, 432, 1282, 0, 433, 0, 1283, 1284, 435, 436,
	437, 1285, 1286, 438, 439, 602, 1111, 440, 1112, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 1287, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 1288, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 1289, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 1290, 483,
	484, 485, 1113, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 1291, 506, 507, 505, 508, 509, 510, 1292, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 1293, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 1294, 532,
	533, 0, 531, 1295, 534, 535, 536, 537, 538, 539,
	329, 540, 1296, 541, 613, 614, 615, 616, 1297, 550,
	1298, 542, 543, 544, 617, 545, 618, 1299, 546, 547,
	548, 549, 0, 551, 552, 1300, 1301, 553, 554, 555,
	557, 558, 556, 559, 1302, 560, 1303, 0, 561, 562,
	563, 619, 620, 621, 1304, 565, 564, 566, 622, 1305,
	1306, 1307, 1308, 567, 568, 623, 569, 570, 571, 1322,
	0, 1224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2031, 0, 0, 251, 252,
	253, 254, 255, 256, 1230, 257, 258, 1231, 1232, 1233,
	0, 1234, 572, 1235, 1236, 1237, 1238, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 1239, 577, 268, 269, 270, 271, 272, 273,
	1240, 1241, 0, 274, 578, 579, 580, 1242, 275, 276,
	581, 1243, 1310, 1244, 277, 278, 279, 280, 281, 282,
	283, 0, 1245, 285, 286, 287, 284, 288, 1246, 289,
	0, 290, 291, 292, 293, 294, 295, 1247, 296, 297,
	298, 1099, 299, 300, 1248, 1249, 1251, 1250, 1252, 1253,
	1254, 301, 302, 303, 304, 0, 305, 582, 583, 1255,
	309, 306, 307, 1256, 310, 308, 1257, 311, 312, 313,
	1258, 1259, 314, 315, 316, 1260, 317, 318, 1261, 319,
	320, 321, 1262, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 1263, 248,
	1264, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 1265, 339, 1266, 1267, 1100, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	1268, 350, 590, 1269, 591, 351, 1270, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 1102, 357, 358, 1271,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 1272, 1101, 365, 595, 596, 1273, 597, 1274, 367,
	368, 1103, 598, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 1275, 379,
	381, 380, 1276, 382, 599, 1106, 383, 384, 1107, 1277,
	385, 0, 0, 0, 386, 387, 1278, 1279, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 1280, 250, 1110, 427, 428, 1281, 600, 429, 601,
	431, 432, 1282, 0, 433, 0, 1283, 1284, 435, 436,
	437, 1285, 1286, 438, 439, 602, 1111, 440, 1112, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 1287, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 1288, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 1289, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 1290, 483,
	484, 485, 1113, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 1291, 506, 507, 505, 508, 509, 510, 1292, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 1293, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 1294, 532,
	533, 0, 531, 1295, 534, 535, 536, 537, 538, 539,
	329, 540, 1296, 541, 613, 614, 615, 616, 1297, 550,
	1298, 542, 543, 544, 617, 545, 618, 1299, 546, 547,
	548, 549, 0, 551, 552, 1300, 1301, 553, 554, 555,
	557, 558, 556, 559, 1302, 560, 1303, 0, 561, 562,
	563, 619, 620, 621, 1304, 565, 564, 566, 622, 1305,
	1306, 1307, 1308, 567, 568, 623, 569, 570, 571, 1221,
	0, 1224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 1230, 257, 258, 1231, 1232, 1233,
	0, 1234, 572, 1235, 1236, 1237, 1238, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 1239, 577, 268, 269, 270, 271, 272, 273,
	1240, 1241, 0, 274, 578, 579, 580, 1242, 275, 276,
	581, 1243, 1310, 1244, 277, 278, 279, 280, 281, 282,
	283, 0, 1245, 285, 286, 287, 284, 288, 1246, 289,
	0, 290, 291, 292, 293, 294, 295, 1247, 296, 297,
	298, 1099, 299, 300, 1248, 1249, 1251, 1250, 1252, 1253,
	1254, 301, 302, 303, 304, 0, 305, 582, 583, 1255,
	309, 306, 307, 1256, 310, 308, 1257, 311, 312, 313,
	1258, 1259, 314, 315, 316, 1260, 317, 318, 1261, 319,
	320, 321, 1262, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 1263, 248,
	1264, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 1265, 339, 1266, 1267, 1100, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	1268, 350, 590, 1269, 591, 351, 1270, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 1102, 357, 358, 1271,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 1272, 1101, 365, 595, 596, 1273, 597, 1274, 367,
	368, 1103, 598, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 1275, 379,
	381, 380, 1276, 382, 599, 1106, 383, 384, 1107, 1277,
	385, 0, 0, 0, 386, 387, 1278, 1279, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 1280, 250, 1110, 427, 428, 1281, 600, 429, 601,
	431, 432, 1282, 0, 433, 0, 1283, 1284, 435, 436,
	437, 1285, 1286, 438, 439, 602, 1111, 440, 1112, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 1287, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 1288, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 1289, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 1290, 483,
	484, 485, 1113, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 1291, 506, 507, 505, 508, 509, 510, 1292, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 1293, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 1294, 532,
	533, 0, 531, 1295, 534, 535, 536, 537, 538, 539,
	329, 540, 1296, 541, 613, 614, 615, 616, 1297, 550,
	1298, 542, 543, 544, 617, 545, 618, 1299, 546, 547,
	548, 549, 0, 551, 552, 1300, 1301, 553, 554, 555,
	557, 558, 556, 559, 1302, 560, 1303, 0, 561, 562,
	563, 619, 620, 621, 1304, 565, 564, 566, 622, 1305,
	1306, 1307, 1308, 567, 568, 623, 569, 570, 571, 1224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 1230, 257, 258, 1231, 1232, 1233, 0, 1234,
	572, 1235, 1236, 1237, 1238, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	1239, 577, 268, 269, 270, 271, 272, 273, 1240, 1241,
	0, 274, 578, 579, 580, 1242, 275, 276, 581, 1243,
	1310, 1244, 277, 278, 279, 280, 281, 282, 283, 0,
	1245, 285, 286, 287, 284, 288, 1246, 289, 0, 290,
	291, 292, 293, 294, 295, 1247, 296, 297, 298, 1099,
	299, 300, 1248, 1249, 1251, 1250, 1252, 1253, 1254, 301,
	302, 303, 304, 0, 305, 582, 583, 1255, 309, 306,
	307, 1256, 310, 308, 1257, 311, 312, 313, 1258, 1259,
	314, 315, 316, 1260, 317, 318, 1261, 319, 320, 321,
	1262, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 1263, 248, 1264, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 1265, 339, 1266, 1267, 1100, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 1268, 350,
	590, 1269, 591, 351, 1270, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 1102, 357, 358, 1271, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 1272,
	1101, 365, 595, 596, 1273, 597, 1274, 367, 368, 1103,
	598, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 1275, 379, 381, 380,
	1276, 382, 599, 1106, 383, 384, 1107, 1277, 385, 0,
	0, 0, 386, 387, 1278, 1279, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 1280,
	250, 1110, 427, 428, 1281, 600, 429, 601, 431, 432,
	1282, 0, 433, 0, 1283, 1284, 435, 436, 437, 1285,
	1286, 438, 439, 602, 1111, 440, 1112, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 1287,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 1288, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 1289,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 1290, 483, 484, 485,
	1113, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 1291,
	506, 507, 505, 508, 509, 510, 1292, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 1293, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 1294, 532, 533, 0,
	531, 1295, 534, 535, 536, 537, 538, 539, 329, 540,
	1296, 541, 613, 614, 615, 616, 1297, 550, 1298, 542,
	543, 544, 617, 545, 618, 1299, 546, 547, 548, 549,
	0, 551, 552, 1300, 1301, 553, 554, 555, 557, 558,
	556, 559, 1302, 560, 1303, 0, 561, 562, 563, 619,
	620, 621, 1304, 565, 564, 566, 622, 1305, 1306, 1307,
	1308, 567, 568, 623, 569, 570, 571, 2333, 0, 1034,
	1006, 1007, 1008, 1004, 1005, 1017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 2330, 257, 258, 0, 0, 0, 0, 0,
	1058, 1022, 0, 0, 0, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 1071, 0, 266, 1078, 267, 1077,
	0, 1088, 268, 269, 270, 271, 272, 273, 1024, 1057,
	991, 274, 1118, 1119, 580, 0, 275, 276, 1064, 0,
	1045, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1099,
	299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301,
	302, 303, 304, 1081, 305, 1075, 1074, 995, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 2331, 0,
	314, 1066, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 1001, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1089, 1090, 1013, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 1073, 0, 0, 0,
	338, 0, 339, 0, 0, 1100, 340, 341, 1086, 1087,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	1096, 0, 1023, 351, 0, 352, 353, 354, 355, 356,
	1059, 1060, 1063, 430, 1102, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	1101, 365, 1068, 1069, 0, 1029, 0, 367, 368, 1103,
	1061, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 1097, 1106, 383, 384, 1107, 0, 385, 0,
	0, 0, 386, 387, 1052, 1051, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 992,
	250, 1110, 427, 428, 1014, 1062, 429, 1076, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 1111, 440, 1112, 1091, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	1092, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 1072, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	1113, 486, 487, 488, 489, 1002, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 1055, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 1070,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	1117, 526, 527, 528, 529, 1093, 0, 532, 533, 990,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 1082, 1083, 1084, 1085, 0, 550, 0, 542,
	543, 544, 1094, 545, 1095, 1012, 546, 547, 548, 549,
	0, 551, 552, 0, 996, 553, 554, 555, 557, 558,
	556, 559, 1056, 560, 0, 0, 561, 562, 563, 619,
	1079, 1116, 2329, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 993, 0, 0,
	0, 0, 0, 0, 989, 0, 0, 0, 0, 0,
	0, 987, 988, 2332, 0, 0, 0, 0, 0, 0,
	1018, 2328, 0, 980, 1016, 1034, 1006, 1007, 1008, 1004,
	1005, 1017, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1058, 1022, 0, 0,
	0, 259, 260, 1098, 261, 262, 263, 264, 265, 573,
	1071, 0, 266, 1078, 267, 1077, 0, 1088, 268, 269,
	270, 271, 272, 273, 1024, 1057, 991, 274, 1118, 1119,
	580, 0, 275, 276, 1064, 0, 1045, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1099, 299, 300, 1048, 1046,
	1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304, 1081,
	305, 1075, 1074, 995, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 1066, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 1001,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	1089, 1090, 1013, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 1073, 0, 0, 0, 338, 0, 339, 0,
	0, 1100, 340, 341, 1086, 1087, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 1096, 0, 1023, 351,
	0, 352, 353, 354, 355, 356, 1059, 1060, 1063, 430,
	1102, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 1101, 365, 1068, 1069,
	0, 1029, 0, 367, 368, 1103, 1061, 1104, 369, 370,
	371, 1105, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 1097, 1106,
	383, 384, 1107, 0, 385, 0, 0, 0, 386, 387,
	1052, 1051, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	1108, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 1109, 417, 992, 250, 1110, 427, 428,
	1014, 1062, 429, 1076, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	1111, 440, 1112, 1091, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 1092, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 1072, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 1113, 486, 487, 488,
	489, 1002, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 212, 506, 507, 505, 508,
	509, 510, 1055, 511, 495, 496, 512, 513, 1114, 514,
	515, 516, 517, 518, 519, 1070, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 1117, 526, 527, 528,
	529, 1093, 0, 532, 533, 990, 531, 214, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 1082, 1083,
	1084, 1085, 0, 550, 0, 542, 543, 544, 1094, 545,
	1095, 1012, 546, 547, 548, 549, 0, 551, 552, 0,
	996, 553, 554, 555, 557, 558, 556, 559, 1056, 560,
	0, 0, 561, 562, 563, 1499, 1079, 1116, 0, 565,
	564, 566, 622, 0, 0, 0, 206, 567, 568, 623,
	569, 570, 571, 993, 207, 0, 0, 0, 0, 0,
	989, 0, 0, 0, 0, 0, 0, 987, 988, 1034,
	1006, 1007, 1008, 1004, 1005, 1017, 1736, 1734, 0, 0,
	1016, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1058, 1022, 0, 0, 0, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 1071, 0, 266, 1078, 267, 1077,
	0, 1088, 268, 269, 270, 271, 272, 273, 1024, 1057,
	991, 274, 1118, 1119, 580, 0, 275, 276, 1064, 0,
	1045, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1099,
	299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301,
	302, 303, 304, 1081, 305, 1075, 1074, 995, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 1066, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 1001, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1089, 1090, 1013, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 1073, 0, 0, 0,
	338, 0, 339, 0, 0, 1100, 340, 341, 1086, 1087,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	1096, 0, 1023, 351, 0, 352, 353, 354, 355, 356,
	1059, 1060, 1063, 430, 1102, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	1101, 365, 1068, 1069, 0, 1029, 0, 367, 368, 1103,
	1061, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 1097, 1106, 383, 384, 1107, 0, 385, 0,
	0, 0, 386, 387, 1052, 1051, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 992,
	250, 1110, 427, 428, 1014, 1062, 429, 1076, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 1111, 440, 1112, 1091, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	1092, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 1072, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	1113, 486, 487, 488, 489, 1002, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 212,
	506, 507, 505, 508, 509, 510, 1055, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 1070,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	1117, 526, 527, 528, 529, 1093, 0, 532, 533, 990,
	531, 214, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 1082, 1083, 1084, 1085, 0, 550, 0, 542,
	543, 544, 1094, 545, 1095, 1012, 546, 547, 548, 549,
	0, 551, 552, 0, 996, 553, 554, 555, 557, 558,
	556, 559, 1056, 560, 0, 0, 561, 562, 563, 1499,
	1079, 1116, 0, 565, 564, 566, 622, 0, 0, 0,
	206, 567, 568, 623, 569, 570, 571, 993, 207, 0,
	0, 0, 0, 0, 989, 0, 0, 0, 0, 0,
	0, 987, 988, 1034, 1006, 1007, 1008, 1004, 1005, 1017,
	1736, 2907, 0, 0, 1016, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1058, 1022, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 1071, 0,
	266, 1078, 267, 1077, 0, 1088, 268, 269, 270, 271,
	272, 273, 1024, 1057, 991, 274, 1118, 1119, 580, 0,
	275, 276, 1064, 0, 1045, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054,
	1050, 1049, 1053, 301, 302, 303, 304, 1081, 305, 1075,
	1074, 995, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 1066, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 1001, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1089, 1090,
	1013, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	1073, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 1086, 1087, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 1096, 0, 1023, 351, 0, 352,
	353, 354, 355, 356, 1059, 1060, 1063, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 1101, 365, 1068, 1069, 0, 1029,
	0, 367, 368, 1103, 1061, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 1097, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 1052, 1051,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 992, 250, 1110, 427, 428, 1014, 1062,
	429, 1076, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 1091, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 1092, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 1072,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 1002,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 212, 506, 507, 505, 508, 509, 510,
	1055, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 1070, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 1117, 526, 527, 528, 529, 1093,
	0, 532, 533, 990, 531, 214, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 1082, 1083, 1084, 1085,
	0, 550, 0, 542, 543, 544, 1094, 545, 1095, 1012,
	546, 547, 548, 549, 0, 551, 552, 0, 996, 553,
	554, 555, 557, 558, 556, 559, 1056, 560, 0, 0,
	561, 562, 563, 1499, 1079, 1116, 0, 565, 564, 566,
	622, 0, 0, 0, 206, 567, 568, 623, 569, 570,
	571, 993, 207, 0, 0, 0, 0, 0, 989, 0,
	0, 0, 0, 0, 0, 987, 988, 1034, 1006, 1007,
	1008, 1004, 1005, 1017, 1736, 1734, 0, 0, 1016, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1058, 1022,
	0, 0, 0, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 1071, 0, 266, 1078, 267, 1077, 2461, 1088,
	268, 269, 270, 271, 272, 273, 1024, 1057, 991, 274,
	1118, 1119, 580, 0, 275, 276, 1064, 0, 1045, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1099, 299, 300,
	1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303,
	304, 1081, 305, 1075, 1074, 995, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 1066,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 1001, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1089, 1090, 1013, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1073, 0, 0, 0, 338, 0,
	339, 0, 2466, 1100, 340, 341, 1086, 1087, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 1096, 0,
	1023, 351, 0, 352, 353, 354, 355, 356, 1059, 1060,
	1063, 430, 1102, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 1101, 365,
	1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 2462, 382,
	1097, 1106, 383, 384, 1107, 0, 385, 0, 0, 0,
	386, 387, 1052, 1051, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 992, 250, 1110,
	427, 428, 1014, 1062, 429, 1076, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 1111, 440, 1112, 1091, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 1092, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 1072, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 1113, 486,
	487, 488, 489, 1002, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 1055, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 1070, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 1117, 526,
	527, 528, 529, 1093, 0, 532, 533, 990, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	1082, 1083, 1084, 1085, 0, 550, 2463, 542, 543, 544,
	1094, 545, 1095, 1012, 546, 547, 548, 549, 0, 551,
	552, 0, 996, 553, 554, 555, 557, 558, 556, 559,
	1056, 560, 0, 0, 561, 562, 563, 619, 1079, 1116,
	0, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 993, 0, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 987,
	988, 0, 0, 0, 0, 0, 0, 0, 1018, 0,
	0, 2378, 1016, 1034, 1006, 1007, 1008, 1004, 1005, 1017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1058, 1022, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 1071, 0,
	266, 1078, 267, 1077, 0, 1088, 268, 269, 270, 271,
	272, 273, 1024, 1057, 991, 274, 1118, 1119, 580, 0,
	275, 276, 1064, 0, 1045, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054,
	1050, 1049, 1053, 301, 302, 303, 304, 1081, 305, 1075,
	1074, 995, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 1066, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 1001, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1089, 1090,
	1013, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	1073, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 1086, 1087, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 1096, 0, 1023, 351, 0, 352,
	353, 354, 355, 356, 1059, 1060, 1063, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 1101, 365, 1068, 1069, 0, 1029,
	0, 367, 368, 1103, 1061, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 1097, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 1052, 1051,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 992, 250, 1110, 427, 428, 1014, 1062,
	429, 1076, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 1091, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 1092, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 1072,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 1002,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	1055, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 1070, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 1117, 526, 527, 528, 529, 1093,
	0, 532, 533, 990, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 1082, 1083, 1084, 1085,
	0, 550, 0, 542, 543, 544, 1094, 545, 1095, 1012,
	546, 547, 548, 549, 0, 551, 552, 0, 996, 553,
	554, 555, 557, 558, 556, 559, 1056, 560, 0, 0,
	561, 562, 563, 619, 1079, 1116, 0, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 993, 0, 0, 0, 0, 0, 0, 989, 0,
	0, 0, 0, 0, 0, 987, 988, 0, 0, 0,
	0, 0, 0, 0, 1018, 2376, 0, 2375, 1016, 1034,
	1006, 1007, 1008, 1004, 1005, 1017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1058, 1022, 0, 0, 0, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 1071, 0, 266, 1078, 267, 1077,
	0, 1088, 268, 269, 270, 271, 272, 273, 1024, 1057,
	991, 274, 1118, 1119, 580, 0, 275, 276, 1064, 0,
	1045, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1099,
	299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301,
	302, 303, 304, 1081, 305, 1075, 1074, 995, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 1066, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 1001, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1089, 1090, 1013, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 1073, 0, 0, 0,
	338, 0, 339, 0, 0, 1100, 340, 341, 1086, 1087,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	1096, 0, 1023, 351, 0, 352, 353, 354, 355, 356,
	1059, 1060, 1063, 430, 1102, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	1101, 365, 1068, 1069, 0, 1029, 0, 367, 368, 1103,
	1061, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 1097, 1106, 383, 384, 1107, 0, 385, 0,
	0, 0, 386, 387, 1052, 1051, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 992,
	250, 1110, 427, 428, 1014, 1062, 429, 1076, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 1111, 440, 1112, 1091, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	1092, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 1072, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	1113, 486, 487, 488, 489, 1002, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 1055, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 1070,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	1117, 526, 527, 528, 529, 1093, 0, 532, 533, 990,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 1082, 1083, 1084, 1085, 0, 550, 0, 542,
	543, 544, 1094, 545, 1095, 1012, 546, 547, 548, 549,
	0, 551, 552, 0, 996, 553, 554, 555, 557, 558,
	556, 559, 1056, 560, 0, 0, 561, 562, 563, 619,
	1079, 1116, 0, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 993, 0, 0,
	0, 0, 0, 0, 989, 0, 0, 0, 0, 0,
	0, 987, 988, 0, 0, 0, 0, 0, 0, 0,
	1018, 2373, 0, 2372, 1016, 1034, 1006, 1007, 1008, 1004,
	1005, 1017, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1058, 1022, 0, 0,
	0, 259, 260, 1098, 261, 262, 263, 264, 265, 573,
	1071, 0, 266, 1078, 267, 1077, 0, 1088, 268, 269,
	270, 271, 272, 273, 1024, 1057, 991, 274, 1118, 1119,
	580, 0, 275, 276, 1064, 0, 1045, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1099, 299, 300, 1048, 1046,
	1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304, 1081,
	305, 1075, 1074, 995, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 1066, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 1001,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	1089, 1090, 1013, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 1073, 0, 0, 0, 338, 0, 339, 0,
	0, 1100, 340, 341, 1086, 1087, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 1096, 0, 1023, 351,
	0, 352, 353, 354, 355, 356, 1059, 1060, 1063, 430,
	1102, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 1101, 365, 1068, 1069,
	0, 1029, 0, 367, 368, 1103, 1061, 1104, 369, 370,
	371, 1105, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 1097, 1106,
	383, 384, 1107, 0, 385, 0, 0, 0, 386, 387,
	1052, 1051, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	1108, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 1109, 417, 992, 250, 1110, 427, 428,
	1014, 1062, 429, 1076, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	1111, 440, 1112, 1091, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 1092, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 1072, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 1113, 486, 487, 488,
	489, 1002, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 1055, 511, 495, 496, 512, 513, 1114, 514,
	515, 516, 517, 518, 519, 1070, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 1117, 526, 527, 528,
	529, 1093, 0, 532, 533, 990, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 1082, 1083,
	1084, 1085, 0, 550, 0, 542, 543, 544, 1094, 545,
	1095, 1012, 546, 547, 548, 549, 0, 551, 552, 0,
	996, 553, 554, 555, 557, 558, 556, 559, 1056, 560,
	0, 0, 561, 562, 563, 619, 1079, 1116, 0, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 993, 0, 0, 0, 0, 0, 0,
	989, 0, 0, 0, 0, 0, 0, 987, 988, 0,
	0, 0, 0, 0, 0, 0, 1018, 2370, 0, 2369,
	1016, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1058, 1022, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 1071, 0, 266, 1078,
	267, 1077, 0, 1088, 268, 269, 270, 271, 272, 273,
	1024, 1057, 991, 274, 1118, 1119, 580, 0, 275, 276,
	1064, 0, 1045, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049,
	1053, 301, 302, 303, 304, 1081, 305, 1075, 1074, 995,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 1066, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 1001, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 1089, 1090, 1013, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 1073, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	1086, 1087, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 1096, 0, 1023, 351, 0, 352, 353, 354,
	355, 356, 1059, 1060, 1063, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 1101, 365, 1068, 1069, 0, 1029, 0, 367,
	368, 1103, 1061, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 1097, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 1052, 1051, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 992, 250, 1110, 427, 428, 1014, 1062, 429, 1076,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 1091,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 1092, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 1072, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 1002, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 1055, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 1070, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 1117, 526, 527, 528, 529, 1093, 0, 532,
	533, 990, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 1082, 1083, 1084, 1085, 0, 550,
	0, 542, 543, 544, 1094, 545, 1095, 1012, 546, 547,
	548, 549, 0, 551, 552, 0, 996, 553, 554, 555,
	557, 558, 556, 559, 1056, 560, 0, 0, 561, 562,
	563, 619, 1079, 1116, 0, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 993,
	0, 0, 0, 0, 0, 0, 989, 0, 0, 0,
	0, 0, 0, 987, 988, 0, 0, 0, 0, 0,
	0, 0, 1018, 2367, 0, 1589, 1016, 1034, 1006, 1007,
	1008, 1004, 1005, 1017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1058, 1022,
	0, 0, 0, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 1071, 0, 266, 1078, 267, 1077, 0, 1088,
	268, 269, 270, 271, 272, 273, 1024, 1057, 991, 274,
	1118, 1119, 580, 0, 275, 276, 1064, 0, 1045, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1099, 299, 300,
	1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303,
	304, 1081, 305, 1075, 1074, 995, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 1066,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 1001, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1089, 1090, 1013, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1073, 0, 0, 0, 338, 0,
	339, 0, 0, 1100, 340, 341, 1086, 1087, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 1096, 0,
	1023, 351, 0, 352, 353, 354, 355, 356, 1059, 1060,
	1063, 430, 1102, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 1101, 365,
	1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	1097, 1106, 383, 384, 1107, 0, 385, 0, 0, 0,
	386, 387, 1052, 1051, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 992, 250, 1110,
	427, 428, 1014, 1062, 429, 1076, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 1111, 440, 1112, 1091, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 1092, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 1072, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 1113, 486,
	487, 488, 489, 1002, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 1055, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 1070, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 1117, 526,
	527, 528, 529, 1093, 0, 532, 533, 990, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	1082, 1083, 1084, 1085, 0, 550, 0, 542, 543, 544,
	1094, 545, 1095, 1012, 546, 547, 548, 549, 0, 551,
	552, 0, 996, 553, 554, 555, 557, 558, 556, 559,
	1056, 560, 0, 0, 561, 562, 563, 619, 1079, 1116,
	0, 565, 564, 566, 622, 1588, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 993, 0, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 987,
	988, 0, 0, 0, 0, 0, 0, 0, 1018, 0,
	0, 983, 1016, 1034, 1006, 1007, 1008, 1004, 1005, 1017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1058, 1022, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 1071, 0,
	266, 1078, 267, 1077, 0, 1088, 268, 269, 270, 271,
	272, 273, 1024, 1057, 991, 274, 1118, 1119, 580, 0,
	275, 276, 1064, 0, 1045, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054,
	1050, 1049, 1053, 301, 302, 303, 304, 1081, 305, 1075,
	1074, 995, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 1066, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 1001, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1089, 1090,
	1013, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	1073, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 1086, 1087, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 1096, 0, 1023, 351, 0, 352,
	353, 354, 355, 356, 1059, 1060, 1063, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 1101, 365, 1068, 1069, 0, 1029,
	0, 367, 368, 1103, 1061, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 1097, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 1052, 1051,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 992, 250, 1110, 427, 428, 1014, 1062,
	429, 1076, 431, 432, 0, 0, 433, 0, 997, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 1091, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 1092, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 1072,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 1002,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	1055, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 1070, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 1117, 526, 527, 528, 529, 1093,
	0, 532, 533, 990, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 1082, 1083, 1084, 1085,
	0, 550, 0, 542, 543, 544, 1094, 545, 1095, 1012,
	546, 547, 548, 549, 0, 551, 552, 0, 996, 553,
	554, 555, 557, 558, 556, 559, 1056, 560, 0, 0,
	561, 562, 563, 619, 1079, 1116, 0, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 993, 0, 0, 0, 0, 0, 0, 989, 0,
	0, 0, 0, 0, 0, 987, 988, 1034, 1006, 1007,
	1008, 1004, 1005, 1017, 1018, 0, 0, 0, 1016, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1058, 1022,
	0, 0, 0, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 1071, 0, 266, 1078, 267, 1077, 0, 1088,
	268, 269, 270, 271, 272, 273, 1024, 1057, 991, 274,
	1118, 1119, 580, 0, 275, 276, 1064, 0, 1045, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 4180, 295, 0, 296, 297, 298, 1099, 299, 300,
	1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303,
	304, 1081, 305, 1075, 1074, 995, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 1066,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 1001, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1089, 1090, 1013, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1073, 0, 0, 0, 338, 0,
	339, 0, 0, 1100, 340, 341, 1086, 1087, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 1096, 0,
	1023, 351, 0, 352, 353, 354, 355, 356, 1059, 1060,
	1063, 430, 1102, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 1101, 365,
	1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	1097, 1106, 383, 384, 1107, 0, 385, 0, 0, 0,
	386, 387, 1052, 1051, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 992, 250, 1110,
	427, 428, 1014, 1062, 429, 1076, 431, 432, 0, 0,
	433, 0, 997, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 1111, 440, 1112, 1091, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 1092, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 1072, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 1113, 486,
	487, 488, 489, 1002, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 1055, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 1070, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 1117, 526,
	527, 528, 529, 1093, 0, 532, 533, 990, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	1082, 1083, 1084, 1085, 0, 550, 0, 542, 543, 544,
	1094, 545, 1095, 1012, 546, 547, 548, 549, 0, 551,
	552, 0, 996, 553, 554, 555, 557, 558, 556, 559,
	1056, 560, 0, 0, 561, 562, 563, 619, 1079, 1116,
	0, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 993, 0, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 987,
	988, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 1018, 0,
	0, 0, 1016, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1058, 1022, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 1071, 0, 266, 1078,
	267, 1077, 0, 1088, 268, 269, 270, 271, 272, 273,
	1024, 1057, 991, 274, 1118, 1119, 580, 0, 275, 276,
	1064, 0, 1045, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049,
	1053, 301, 302, 303, 304, 1081, 305, 1075, 1074, 995,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 1066, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 1001, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 1089, 1090, 1013, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 1073, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	1086, 1087, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 1096, 0, 1023, 351, 0, 352, 353, 354,
	355, 356, 1059, 1060, 1063, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 2247, 363, 364,
	366, 0, 1101, 365, 1068, 1069, 0, 1029, 0, 367,
	368, 1103, 1061, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 1097, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 1052, 1051, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 992, 250, 1110, 427, 428, 1014, 1062, 429, 1076,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 1091,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 1092, 459, 607, 460, 461, 2246, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 1072, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 1002, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 1055, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 1070, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 1117, 526, 527, 528, 529, 1093, 0, 532,
	533, 990, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 1082, 1083, 1084, 1085, 0, 550,
	0, 542, 543, 544, 1094, 545, 1095, 1012, 546, 547,
	548, 549, 0, 551, 552, 0, 996, 553, 554, 555,
	557, 558, 556, 559, 1056, 560, 0, 0, 561, 562,
	563, 619, 1079, 1116, 0, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 993,
	0, 0, 0, 0, 0, 0, 989, 0, 0, 0,
	0, 0, 0, 987, 988, 1034, 1006, 1007, 1008, 1004,
	1005, 1017, 1018, 0, 0, 0, 1016, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1058, 1022, 0, 0,
	0, 259, 260, 1098, 261, 262, 263, 264, 265, 573,
	1071, 0, 266, 1078, 267, 1077, 0, 1088, 268, 269,
	270, 271, 272, 273, 1024, 1057, 991, 274, 1118, 1119,
	580, 0, 275, 276, 1064, 0, 1045, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1099, 299, 300, 1048, 1046,
	1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304, 1081,
	305, 1075, 1074, 995, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 1066, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 1001,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	1089, 1090, 1013, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 1073, 0, 0, 0, 338, 0, 339, 0,
	0, 1100, 340, 341, 1086, 1087, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 1096, 0, 1023, 351,
	0, 352, 353, 354, 355, 356, 1059, 1060, 1063, 430,
	1102, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 1101, 365, 1068, 1069,
	0, 1029, 0, 367, 368, 1103, 1061, 1104, 369, 370,
	371, 1105, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 1097, 1106,
	383, 384, 1107, 0, 385, 0, 0, 0, 386, 387,
	1052, 1051, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	1108, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 1109, 417, 992, 250, 1110, 427, 428,
	1014, 1062, 429, 1076, 431, 432, 0, 0, 433, 0,
	997, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	1111, 440, 1112, 1091, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 1092, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 1072, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 1113, 486, 487, 488,
	489, 1002, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 1055, 511, 495, 496, 512, 513, 1114, 514,
	515, 516, 517, 518, 519, 1070, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 1117, 526, 527, 528,
	529, 1093, 0, 532, 533, 990, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 1082, 1083,
	1084, 1085, 0, 550, 0, 542, 543, 544, 1094, 545,
	1095, 1012, 546, 547, 548, 549, 0, 551, 552, 0,
	996, 553, 554, 555, 557, 558, 556, 559, 1056, 560,
	0, 0, 561, 562, 563, 619, 1079, 1116, 0, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 993, 0, 0, 0, 0, 0, 0,
	989, 0, 0, 0, 0, 0, 0, 987, 988, 1034,
	1006, 1007, 1008, 1004, 1005, 1017, 1018, 0, 0, 0,
	1016, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1058, 1022, 0, 0, 0, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 1071, 0, 266, 1078, 267, 1077,
	0, 1088, 268, 269, 270, 271, 272, 273, 1024, 1057,
	991, 274, 1118, 1119, 580, 0, 275, 276, 1064, 0,
	1045, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 3973, 295, 0, 296, 297, 298, 1099,
	299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301,
	302, 303, 304, 1081, 305, 1075, 1074, 995, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 1066, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 1001, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1089, 1090, 1013, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 1073, 0, 0, 0,
	338, 0, 339, 0, 0, 1100, 340, 341, 1086, 1087,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	1096, 0, 1023, 351, 0, 352, 353, 354, 355, 356,
	1059, 1060, 1063, 430, 1102, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	1101, 365, 1068, 1069, 0, 1029, 0, 367, 368, 1103,
	1061, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 1097, 1106, 383, 384, 1107, 0, 385, 0,
	0, 0, 386, 387, 1052, 1051, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 992,
	250, 1110, 427, 428, 1014, 1062, 429, 1076, 431, 432,
	0, 0, 433, 0, 997, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 1111, 440, 1112, 1091, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	1092, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 1072, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	1113, 486, 487, 488, 489, 1002, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 1055, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 1070,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	1117, 526, 527, 528, 529, 1093, 0, 532, 533, 990,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 1082, 1083, 1084, 1085, 0, 550, 0, 542,
	543, 544, 1094, 545, 1095, 1012, 546, 547, 548, 549,
	0, 551, 552, 0, 996, 553, 554, 555, 557, 558,
	556, 559, 1056, 560, 0, 0, 561, 562, 563, 619,
	1079, 1116, 0, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 993, 0, 0,
	0, 0, 0, 0, 989, 0, 0, 0, 0, 0,
	0, 987, 988, 1034, 1006, 1007, 1008, 1004, 1005, 1017,
	1018, 0, 0, 0, 1016, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1058, 1022, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 1071, 0,
	266, 1078, 267, 1077, 0, 1088, 268, 269, 270, 271,
	272, 273, 1024, 1057, 991, 274, 1118, 1119, 580, 0,
	275, 276, 1064, 0, 1045, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054,
	1050, 1049, 1053, 301, 302, 303, 304, 1081, 305, 1075,
	1074, 995, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 1066, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 1001, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1089, 1090,
	1013, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	1073, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 1086, 1087, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 1096, 0, 1023, 351, 0, 352,
	353, 354, 355, 356, 1059, 1060, 1063, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 1101, 365, 1068, 1069, 0, 1029,
	0, 367, 368, 1103, 1061, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 1097, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 1052, 1051,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 992, 3631, 1110, 427, 428, 1014, 1062,
	429, 1076, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 1091, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 1092, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 1072,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 1002,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	1055, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 1070, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 1117, 526, 527, 528, 529, 1093,
	0, 532, 533, 990, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 1082, 1083, 1084, 1085,
	0, 550, 0, 542, 543, 544, 1094, 545, 1095, 1012,
	546, 547, 548, 549, 0, 551, 552, 0, 996, 553,
	554, 555, 557, 558, 556, 559, 1056, 560, 0, 0,
	561, 562, 563, 619, 1079, 1116, 0, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 993, 0, 0, 0, 0, 0, 0, 989, 0,
	0, 0, 0, 0, 0, 987, 988, 1804, 0, 0,
	0, 0, 0, 0, 1018, 0, 0, 0, 1016, 1034,
	1006, 1007, 1008, 1004, 1005, 1017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1058, 1022, 0, 0, 0, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 1071, 0, 266, 1078, 267, 1077,
	0, 1088, 268, 269, 270, 271, 272, 273, 1024, 1057,
	991, 274, 1118, 1119, 580, 0, 275, 276, 1064, 0,
	1045, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1099,
	299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301,
	302, 303, 304, 1081, 305, 1075, 1074, 995, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 1066, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 1001, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1089, 1090, 1013, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 1073, 0, 0, 0,
	338, 0, 339, 0, 0, 1100, 340, 341, 1086, 1087,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	1096, 0, 1023, 351, 0, 352, 353, 354, 355, 356,
	1059, 1060, 1063, 430, 1102, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	1101, 365, 1068, 1069, 0, 1029, 0, 367, 368, 1103,
	1061, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 1097, 1106, 383, 384, 1107, 0, 385, 0,
	0, 0, 386, 387, 1052, 1051, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 992,
	250, 1110, 427, 428, 1014, 1062, 429, 1076, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 1111, 440, 1112, 1091, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	1092, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 1072, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	1113, 486, 487, 488, 489, 1002, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 1055, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 1070,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	1117, 526, 527, 528, 529, 1093, 0, 532, 533, 990,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 1082, 1083, 1084, 1085, 0, 550, 0, 542,
	543, 544, 1094, 545, 1095, 1012, 546, 547, 548, 549,
	0, 551, 552, 0, 996, 553, 554, 555, 557, 558,
	556, 559, 1056, 560, 0, 0, 561, 562, 563, 619,
	1079, 1116, 3381, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 993, 0, 0,
	0, 0, 0, 0, 989, 0, 0, 0, 0, 0,
	0, 987, 988, 1034, 1006, 1007, 1008, 1004, 1005, 1017,
	1018, 0, 0, 0, 1016, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1058, 1022, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 1071, 0,
	266, 1078, 267, 1077, 0, 1088, 268, 269, 270, 271,
	272, 273, 1024, 1057, 991, 274, 1118, 1119, 580, 0,
	275, 276, 1064, 0, 1045, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054,
	1050, 1049, 1053, 301, 302, 303, 304, 1081, 305, 1075,
	1074, 995, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 1066, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 1001, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1089, 1090,
	1013, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	1073, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 1086, 1087, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 1096, 0, 1023, 351, 0, 352,
	353, 354, 355, 356, 1059, 1060, 1063, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 1101, 365, 1068, 1069, 0, 1029,
	0, 367, 368, 1103, 1061, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 1097, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 1052, 1051,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 992, 250, 1110, 427, 428, 1014, 1062,
	429, 1076, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 1091, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 1092, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 1072,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 1002,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	1055, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 1070, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 1117, 526, 527, 528, 529, 1093,
	0, 532, 533, 990, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 1082, 1083, 1084, 1085,
	0, 550, 0, 542, 543, 544, 1094, 545, 1095, 1012,
	546, 547, 548, 549, 0, 551, 552, 0, 996, 553,
	554, 555, 557, 558, 556, 559, 1056, 560, 0, 0,
	561, 562, 563, 619, 1079, 1116, 0, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 993, 0, 0, 0, 0, 0, 0, 989, 0,
	0, 0, 0, 0, 0, 987, 988, 1804, 0, 0,
	0, 0, 0, 0, 1018, 0, 0, 0, 1016, 1034,
	1006, 1007, 1008, 1004, 1005, 1017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1058, 1022, 0, 0, 0, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 1071, 0, 266, 1078, 267, 1077,
	0, 1088, 268, 269, 270, 271, 272, 273, 1024, 1057,
	991, 274, 1118, 1119, 580, 0, 275, 276, 1064, 0,
	1045, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1099,
	299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301,
	302, 303, 304, 1081, 305, 1075, 1074, 995, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 1066, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 1001, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1089, 1090, 1013, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 1073, 0, 0, 0,
	338, 0, 339, 0, 2466, 1100, 340, 341, 1086, 1087,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	1096, 0, 1023, 351, 0, 352, 353, 354, 355, 356,
	1059, 1060, 1063, 430, 1102, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	1101, 365, 1068, 1069, 0, 1029, 0, 367, 368, 1103,
	1061, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 1097, 1106, 383, 384, 1107, 0, 385, 0,
	0, 0, 386, 387, 1052, 1051, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 992,
	250, 1110, 427, 428, 1014, 1062, 429, 1076, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 1111, 440, 1112, 1091, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	1092, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 1072, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	1113, 486, 487, 488, 489, 1002, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 1055, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 1070,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	1117, 526, 527, 528, 529, 1093, 0, 532, 533, 990,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 1082, 1083, 1084, 1085, 0, 550, 0, 542,
	543, 544, 1094, 545, 1095, 1012, 546, 547, 548, 549,
	0, 551, 552, 0, 996, 553, 554, 555, 557, 558,
	556, 559, 1056, 560, 0, 0, 561, 562, 563, 619,
	1079, 1116, 0, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 993, 0, 0,
	0, 0, 0, 0, 989, 0, 0, 0, 0, 0,
	0, 987, 988, 1034, 1006, 1007, 1008, 1004, 1005, 1017,
	1018, 0, 0, 0, 1016, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1058, 1022, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 1071, 0,
	266, 1078, 267, 1077, 0, 1088, 268, 269, 270, 271,
	272, 273, 1024, 1057, 991, 274, 1118, 1119, 580, 0,
	275, 276, 1064, 0, 1045, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054,
	1050, 1049, 1053, 301, 302, 303, 304, 1081, 305, 1075,
	1074, 995, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 1066, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 1001, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1089, 1090,
	1013, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	1073, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 1086, 1087, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 1096, 0, 1023, 351, 0, 352,
	353, 354, 355, 356, 1059, 1060, 1063, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 1101, 365, 1068, 1069, 0, 1029,
	0, 367, 368, 1103, 1061, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 1097, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 1052, 1051,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 992, 250, 1110, 427, 428, 1014, 1062,
	429, 1076, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 1091, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 1092, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 1072,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 1002,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	1055, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 1070, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 1117, 526, 527, 528, 529, 1093,
	0, 532, 533, 990, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 1082, 1083, 1084, 1085,
	0, 550, 0, 542, 543, 544, 1094, 545, 1095, 1012,
	546, 547, 548, 549, 0, 551, 552, 0, 996, 553,
	554, 555, 557, 558, 556, 559, 1056, 560, 0, 0,
	561, 562, 563, 619, 1079, 1116, 0, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 993, 0, 0, 0, 0, 0, 0, 989, 0,
	0, 0, 0, 0, 0, 987, 988, 0, 0, 0,
	0, 0, 0, 0, 1018, 1734, 0, 2471, 1016, 1034,
	1006, 1007, 1008, 1004, 1005, 1017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1058, 1022, 0, 0, 0, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 1071, 0, 266, 1078, 267, 1077,
	0, 1088, 268, 269, 270, 271, 272, 273, 1024, 1057,
	991, 274, 1118, 1119, 580, 0, 275, 276, 1064, 0,
	1045, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1099,
	299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301,
	302, 303, 304, 1081, 305, 1075, 1074, 995, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 1066, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 1001, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1089, 1090, 1013, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 1073, 0, 0, 0,
	338, 0, 339, 0, 0, 1100, 340, 341, 1086, 1087,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	1096, 0, 1023, 351, 0, 352, 353, 354, 355, 356,
	1059, 1060, 1063, 430, 1102, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	1101, 365, 1068, 1069, 0, 1029, 0, 367, 368, 1103,
	1061, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 1097, 1106, 383, 384, 1107, 0, 385, 0,
	0, 0, 386, 387, 1052, 1051, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 992,
	250, 1110, 427, 428, 1014, 1062, 429, 1076, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 1111, 440, 1112, 1091, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	1092, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 1072, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	1113, 486, 487, 488, 489, 1002, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 1055, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 1070,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	1117, 526, 527, 528, 529, 1093, 0, 532, 533, 990,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 1082, 1083, 1084, 1085, 0, 550, 0, 542,
	543, 544, 1094, 545, 1095, 1012, 546, 547, 548, 549,
	0, 551, 552, 0, 996, 553, 554, 555, 557, 558,
	556, 559, 1056, 560, 0, 0, 561, 562, 563, 619,
	1079, 1116, 0, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 993, 0, 0,
	0, 0, 0, 0, 989, 0, 0, 0, 0, 0,
	0, 987, 988, 0, 0, 0, 0, 0, 0, 0,
	1018, 0, 0, 2469, 1016, 1034, 1006, 1007, 1008, 1004,
	1005, 1017, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1058, 1022, 0, 0,
	0, 259, 260, 1098, 261, 262, 263, 264, 265, 573,
	1071, 0, 266, 1078, 267, 1077, 0, 1088, 268, 269,
	270, 271, 272, 273, 1024, 1057, 991, 274, 1118, 1119,
	580, 0, 275, 276, 1064, 0, 1045, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1099, 299, 300, 1048, 1046,
	1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304, 1081,
	305, 1075, 1074, 995, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 1066, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 1001,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	1089, 1090, 1013, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 1073, 0, 0, 0, 338, 0, 339, 0,
	0, 1100, 340, 341, 1086, 1087, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 1096, 0, 1023, 351,
	0, 352, 353, 354, 355, 356, 1059, 1060, 1063, 430,
	1102, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 1101, 365, 1068, 1069,
	0, 1029, 0, 367, 368, 1103, 1061, 1104, 369, 370,
	371, 1105, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 1097, 1106,
	383, 384, 1107, 0, 385, 0, 0, 0, 386, 387,
	1052, 1051, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	1108, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 1109, 417, 992, 250, 1110, 427, 428,
	1014, 1062, 429, 1076, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	1111, 440, 1112, 1091, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 1092, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 1072, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 1113, 486, 487, 488,
	489, 1002, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 1055, 511, 495, 496, 512, 513, 1114, 514,
	515, 516, 517, 518, 519, 1070, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 1117, 526, 527, 528,
	529, 1093, 0, 532, 533, 990, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 1082, 1083,
	1084, 1085, 0, 550, 0, 542, 543, 544, 1094, 545,
	1095, 1012, 546, 547, 548, 549, 0, 551, 552, 0,
	996, 553, 554, 555, 557, 558, 556, 559, 1056, 560,
	0, 0, 561, 562, 563, 619, 1079, 1116, 0, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 993, 0, 0, 0, 0, 0, 0,
	989, 0, 0, 0, 0, 0, 0, 987, 988, 0,
	0, 0, 0, 0, 0, 0, 1018, 0, 0, 2457,
	1016, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1058, 1022, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 1071, 0, 266, 1078,
	267, 1077, 0, 1088, 268, 269, 270, 271, 272, 273,
	1024, 1057, 991, 274, 1118, 1119, 580, 0, 275, 276,
	1064, 0, 1045, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049,
	1053, 301, 302, 303, 304, 1081, 305, 1075, 1074, 995,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 1066, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 1001, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 1089, 1090, 1013, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 1073, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	1086, 1087, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 1096, 0, 1023, 351, 0, 352, 353, 354,
	355, 356, 1059, 1060, 1063, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 1101, 365, 1068, 1069, 0, 1029, 0, 367,
	368, 1103, 1061, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 1097, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 1052, 1051, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 992, 250, 1110, 427, 428, 1014, 1062, 429, 1076,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 1091,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 1092, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 1072, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 1002, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 1055, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 1070, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 1117, 526, 527, 528, 529, 1093, 0, 532,
	533, 990, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 1082, 1083, 1084, 1085, 0, 550,
	0, 542, 543, 544, 1094, 545, 1095, 1012, 546, 547,
	548, 549, 0, 551, 552, 0, 996, 553, 554, 555,
	557, 558, 556, 559, 1056, 560, 0, 0, 561, 562,
	563, 619, 1079, 1116, 0, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 993,
	0, 0, 0, 0, 0, 0, 989, 0, 0, 0,
	0, 0, 0, 987, 988, 0, 0, 0, 0, 0,
	0, 0, 1018, 0, 0, 2446, 1016, 1034, 1006, 1007,
	1008, 1004, 1005, 1017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1058, 1022,
	0, 0, 0, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 1071, 0, 266, 1078, 267, 1077, 0, 1088,
	268, 269, 270, 271, 272, 273, 1024, 1057, 991, 274,
	1118, 1119, 580, 0, 275, 276, 1064, 0, 1045, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1099, 299, 300,
	1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303,
	304, 1081, 305, 1075, 1074, 995, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 1066,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 1001, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1089, 1090, 1013, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1073, 0, 0, 0, 338, 0,
	339, 0, 0, 1100, 340, 341, 1086, 1087, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 1096, 0,
	1023, 351, 0, 352, 353, 354, 355, 356, 1059, 1060,
	1063, 430, 1102, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 1101, 365,
	1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	1097, 1106, 383, 384, 1107, 0, 385, 0, 0, 0,
	386, 387, 1052, 1051, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 992, 250, 1110,
	427, 428, 1014, 1062, 429, 1076, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 1111, 440, 1112, 1091, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 1092, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 1072, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 1113, 486,
	487, 488, 489, 1002, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 1055, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 1070, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 1117, 526,
	527, 528, 529, 1093, 0, 532, 533, 990, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	1082, 1083, 1084, 1085, 0, 550, 0, 542, 543, 544,
	1094, 545, 1095, 1012, 546, 547, 548, 549, 0, 551,
	552, 0, 996, 553, 554, 555, 557, 558, 556, 559,
	1056, 560, 0, 0, 561, 562, 563, 619, 1079, 1116,
	0, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 993, 0, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 987,
	988, 0, 0, 0, 0, 0, 0, 0, 1018, 0,
	0, 2444, 1016, 2435, 2442, 1007, 1008, 1004, 1005, 1017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1058, 1022, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 1071, 0,
	266, 1078, 267, 1077, 0, 1088, 268, 269, 270, 271,
	272, 273, 1024, 1057, 991, 274, 1118, 1119, 580, 0,
	275, 276, 1064, 0, 1045, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054,
	1050, 1049, 1053, 301, 302, 303, 304, 1081, 2438, 1075,
	1074, 995, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 1066, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 1001, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1089, 1090,
	1013, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	1073, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 1086, 1087, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 1096, 0, 1023, 351, 0, 352,
	353, 354, 2439, 356, 1059, 1060, 1063, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 1101, 365, 1068, 1069, 0, 1029,
	0, 367, 368, 1103, 1061, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 1097, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 1052, 1051,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	2440, 398, 2437, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 992, 250, 1110, 427, 428, 1014, 1062,
	429, 1076, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 1091, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 1092, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 1072,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 1002,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 2441, 0, 506, 507, 505, 508, 509, 510,
	1055, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 1070, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 1117, 526, 527, 528, 529, 1093,
	0, 532, 533, 990, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 1082, 1083, 1084, 1085,
	0, 550, 0, 542, 543, 544, 1094, 545, 1095, 1012,
	546, 547, 548, 549, 0, 551, 552, 0, 996, 553,
	554, 555, 557, 558, 556, 559, 1056, 560, 0, 0,
	561, 562, 563, 619, 1079, 1116, 0, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 2436,
	571, 993, 0, 0, 0, 0, 0, 0, 989, 0,
	0, 0, 0, 0, 0, 987, 988, 0, 0, 0,
	0, 0, 0, 0, 1018, 0, 0, 2432, 1016, 2435,
	2442, 1007, 1008, 1004, 1005, 1017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1058, 1022, 0, 0, 0, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 1071, 0, 266, 1078, 267, 1077,
	0, 1088, 268, 269, 270, 271, 272, 273, 1024, 1057,
	991, 274, 1118, 1119, 580, 0, 275, 276, 1064, 0,
	1045, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1099,
	299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301,
	302, 303, 304, 1081, 2438, 1075, 1074, 995, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 1066, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 1001, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1089, 1090, 1013, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 1073, 0, 0, 0,
	338, 0, 339, 0, 0, 1100, 340, 341, 1086, 1087,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	1096, 0, 1023, 351, 0, 352, 353, 354, 2439, 356,
	1059, 1060, 1063, 430, 1102, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	1101, 365, 1068, 1069, 0, 1029, 0, 367, 368, 1103,
	1061, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 1097, 1106, 383, 384, 1107, 0, 385, 0,
	0, 0, 386, 387, 1052, 1051, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 2440, 398, 2437, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 992,
	250, 1110, 427, 428, 1014, 1062, 429, 1076, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 1111, 440, 1112, 1091, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	1092, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 1072, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	1113, 486, 487, 488, 489, 1002, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 2441, 0,
	506, 507, 505, 508, 509, 510, 1055, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 1070,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	1117, 526, 527, 528, 529, 1093, 0, 532, 533, 990,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 1082, 1083, 1084, 1085, 0, 550, 0, 542,
	543, 544, 1094, 545, 1095, 1012, 546, 547, 548, 549,
	0, 551, 552, 0, 996, 553, 554, 555, 557, 558,
	556, 559, 1056, 560, 0, 0, 561, 562, 563, 619,
	1079, 1116, 0, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 2436, 571, 993, 0, 0,
	0, 0, 0, 0, 989, 0, 0, 0, 0, 0,
	0, 987, 988, 1034, 1006, 1007, 1008, 1004, 1005, 1017,
	1018, 0, 0, 0, 1016, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1058, 1022, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 1071, 0,
	266, 1078, 267, 1077, 0, 1088, 268, 269, 270, 271,
	272, 273, 1024, 1057, 991, 274, 1118, 1119, 580, 0,
	275, 276, 1064, 0, 1045, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054,
	1050, 1049, 1053, 301, 302, 303, 304, 1081, 305, 1075,
	1074, 995, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 1066, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 1001, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1089, 1090,
	1013, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	1073, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 1086, 1087, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 1096, 0, 1023, 351, 0, 352,
	353, 354, 355, 356, 1059, 1060, 1063, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 1101, 365, 1068, 1069, 0, 1029,
	0, 367, 368, 1103, 1061, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 1097, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 1052, 1051,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 992, 250, 1110, 427, 428, 1014, 1062,
	429, 1076, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 1091, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 1092, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 1072,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 1002,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	1055, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 1070, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 1117, 526, 527, 528, 529, 1093,
	0, 532, 533, 990, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 1082, 1083, 1084, 1085,
	0, 550, 0, 542, 543, 544, 1094, 545, 1095, 1012,
	546, 547, 548, 549, 0, 551, 552, 0, 996, 553,
	554, 555, 557, 558, 556, 559, 1056, 560, 0, 0,
	561, 562, 563, 619, 1079, 1116, 0, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 993, 0, 0, 0, 0, 0, 0, 989, 0,
	0, 0, 0, 0, 0, 987, 988, 0, 0, 0,
	0, 0, 1742, 0, 1018, 0, 0, 0, 1016, 1034,
	1006, 1007, 1008, 1004, 1005, 1017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 2226, 257, 258, 0, 0, 0, 0, 0,
	1058, 1022, 0, 0, 0, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 1071, 0, 266, 1078, 267, 1077,
	0, 1088, 268, 269, 270, 271, 272, 273, 1024, 1057,
	991, 274, 1118, 1119, 580, 0, 275, 276, 1064, 0,
	1045, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1099,
	299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301,
	302, 303, 304, 1081, 305, 1075, 1074, 995, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 1066, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 1001, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1089, 1090, 1013, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 1073, 0, 0, 0,
	338, 0, 339, 0, 0, 1100, 340, 341, 1086, 1087,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	1096, 0, 1023, 351, 0, 352, 353, 354, 355, 356,
	1059, 1060, 1063, 430, 1102, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	1101, 365, 1068, 1069, 0, 1029, 0, 367, 368, 1103,
	1061, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 1097, 1106, 383, 384, 1107, 0, 385, 0,
	0, 0, 386, 387, 1052, 1051, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 992,
	250, 1110, 427, 428, 1014, 1062, 429, 1076, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 1111, 440, 1112, 1091, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	1092, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 1072, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	1113, 486, 487, 488, 489, 1002, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 1055, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 1070,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	1117, 526, 527, 528, 529, 1093, 0, 532, 533, 990,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 1082, 1083, 1084, 1085, 0, 550, 0, 542,
	543, 544, 1094, 545, 1095, 1012, 546, 547, 548, 549,
	0, 551, 552, 0, 996, 553, 554, 555, 557, 558,
	556, 559, 1056, 560, 0, 0, 561, 562, 563, 619,
	1079, 1116, 0, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 993, 0, 0,
	0, 0, 0, 0, 989, 0, 0, 0, 0, 0,
	0, 987, 988, 0, 0, 0, 0, 0, 0, 0,
	1018, 0, 0, 1594, 1016, 1034, 1006, 1007, 1008, 1004,
	1005, 1017, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1058, 1022, 0, 0,
	0, 259, 260, 1098, 261, 262, 263, 264, 265, 573,
	1071, 0, 266, 1078, 267, 1077, 0, 1088, 268, 269,
	270, 271, 272, 273, 1024, 1057, 991, 274, 1118, 1119,
	580, 0, 275, 276, 1064, 0, 1045, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1099, 299, 300, 1048, 1046,
	1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304, 1081,
	305, 1075, 1074, 995, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 1066, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 1001,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	1089, 1090, 1013, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 1073, 0, 0, 0, 338, 0, 339, 0,
	0, 1100, 340, 341, 1086, 1087, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 1096, 0, 1023, 351,
	0, 352, 353, 354, 355, 356, 1059, 1060, 1063, 430,
	1102, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 1101, 365, 1068, 1069,
	0, 1029, 0, 367, 368, 1103, 1061, 1104, 369, 370,
	371, 1105, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 1097, 1106,
	383, 384, 1107, 0, 385, 0, 0, 0, 386, 387,
	1052, 1051, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	1108, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 1109, 417, 992, 250, 1110, 427, 428,
	1014, 1062, 429, 1076, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	1111, 440, 1112, 1091, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 1092, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 1072, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 1113, 486, 487, 488,
	489, 1002, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 1055, 511, 495, 496, 512, 513, 1114, 514,
	515, 516, 517, 518, 519, 1070, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 1117, 526, 527, 528,
	529, 1093, 0, 532, 533, 990, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 1082, 1083,
	1084, 1085, 0, 550, 0, 542, 543, 544, 1094, 545,
	1095, 1012, 546, 547, 548, 549, 0, 551, 552, 0,
	996, 553, 554, 555, 557, 558, 556, 559, 1056, 560,
	0, 0, 561, 562, 563, 619, 1079, 1116, 0, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 993, 0, 0, 0, 0, 0, 0,
	989, 0, 0, 0, 0, 0, 0, 987, 988, 0,
	0, 0, 0, 0, 0, 0, 1018, 0, 0, 1529,
	1016, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1058, 1022, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 1071, 0, 266, 1078,
	267, 1077, 0, 1088, 268, 269, 270, 271, 272, 273,
	1024, 1057, 991, 274, 1118, 1119, 580, 0, 275, 276,
	1064, 0, 1045, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049,
	1053, 301, 302, 303, 304, 1081, 305, 1075, 1074, 995,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 1066, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 1001, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 1089, 1090, 1013, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 1073, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	1086, 1087, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 1096, 0, 1023, 351, 0, 352, 353, 354,
	355, 356, 1059, 1060, 1063, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 1101, 365, 1068, 1069, 0, 1029, 0, 367,
	368, 1103, 1061, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 1097, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 1052, 1051, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 992, 250, 1110, 427, 428, 1014, 1062, 429, 1076,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 1091,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 1092, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 1072, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 1002, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 1055, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 1070, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 1117, 526, 527, 528, 529, 1093, 0, 532,
	533, 990, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 1082, 1083, 1084, 1085, 0, 550,
	0, 542, 543, 544, 1094, 545, 1095, 1012, 546, 547,
	548, 549, 0, 551, 552, 0, 996, 553, 554, 555,
	557, 558, 556, 559, 1056, 560, 0, 0, 561, 562,
	563, 619, 1079, 1116, 0, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 993,
	0, 0, 0, 0, 0, 0, 989, 0, 0, 0,
	0, 0, 0, 987, 988, 0, 0, 0, 0, 0,
	0, 0, 1018, 0, 0, 1524, 1016, 1034, 1006, 1007,
	1008, 1004, 1005, 1017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1058, 1022,
	0, 0, 0, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 1071, 0, 266, 1078, 267, 1077, 0, 1088,
	268, 269, 270, 271, 272, 273, 1024, 1057, 991, 274,
	1118, 1119, 580, 0, 275, 276, 1064, 0, 1045, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1099, 299, 300,
	1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303,
	304, 1081, 305, 1075, 1074, 995, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 1066,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 1001, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1089, 1090, 1013, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1073, 0, 0, 0, 338, 0,
	339, 0, 0, 1100, 340, 341, 1086, 1087, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 1096, 0,
	1023, 351, 0, 352, 353, 354, 355, 356, 1059, 1060,
	1063, 430, 1102, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 1101, 365,
	1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	1097, 1106, 383, 384, 1107, 0, 385, 0, 0, 0,
	386, 387, 1052, 1051, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 992, 250, 1110,
	427, 428, 1014, 1062, 429, 1076, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 1111, 440, 1112, 1091, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 1092, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 1072, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 1113, 486,
	487, 488, 489, 1002, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 1055, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 1070, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 1117, 526,
	527, 528, 529, 1093, 0, 532, 533, 990, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	1082, 1083, 1084, 1085, 0, 550, 0, 542, 543, 544,
	1094, 545, 1095, 1012, 546, 547, 548, 549, 0, 551,
	552, 0, 996, 553, 554, 555, 557, 558, 556, 559,
	1056, 560, 0, 0, 561, 562, 563, 619, 1079, 1116,
	0, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 993, 0, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 987,
	988, 0, 0, 0, 0, 0, 0, 0, 1018, 0,
	0, 1515, 1016, 1034, 1006, 1007, 1008, 1004, 1005, 1017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1058, 1022, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 1071, 0,
	266, 1078, 267, 1077, 0, 1088, 268, 269, 270, 271,
	272, 273, 1024, 1057, 991, 274, 1118, 1119, 580, 0,
	275, 276, 1064, 0, 1045, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054,
	1050, 1049, 1053, 301, 302, 303, 304, 1081, 305, 1075,
	1074, 995, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 1066, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 1001, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1089, 1090,
	1013, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	1073, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 1086, 1087, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 1096, 0, 1023, 351, 0, 352,
	353, 354, 355, 356, 1059, 1060, 1063, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 1101, 365, 1068, 1069, 0, 1029,
	0, 367, 368, 1103, 1061, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 1097, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 1052, 1051,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 992, 250, 1110, 427, 428, 1014, 1062,
	429, 1076, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 1091, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 1092, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 1072,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 1002,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	1055, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 1070, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 1117, 526, 527, 528, 529, 1093,
	0, 532, 533, 990, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 1082, 1083, 1084, 1085,
	0, 550, 0, 542, 543, 544, 1094, 545, 1095, 1012,
	546, 547, 548, 549, 0, 551, 552, 0, 996, 553,
	554, 555, 557, 558, 556, 559, 1056, 560, 0, 0,
	561, 562, 563, 619, 1079, 1116, 0, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 993, 0, 0, 0, 0, 0, 0, 989, 0,
	0, 0, 0, 0, 0, 987, 988, 0, 0, 0,
	0, 0, 0, 0, 1018, 0, 0, 1510, 1016, 1034,
	1006, 1007, 1008, 1004, 1005, 1017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1058, 1022, 0, 0, 0, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 1071, 0, 266, 1078, 267, 1077,
	0, 1088, 268, 269, 270, 271, 272, 273, 1024, 1057,
	991, 274, 1118, 1119, 580, 0, 275, 276, 1064, 0,
	1045, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1099,
	299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301,
	302, 303, 304, 1081, 305, 1075, 1074, 995, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 1066, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 1001, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1089, 1090, 1013, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 1073, 0, 0, 0,
	338, 0, 339, 0, 0, 1100, 340, 341, 1086, 1087,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	1096, 0, 1023, 351, 0, 352, 353, 354, 355, 356,
	1059, 1060, 1063, 430, 1102, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	1101, 365, 1068, 1069, 0, 1029, 0, 367, 368, 1103,
	1061, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 1097, 1106, 383, 384, 1107, 0, 385, 0,
	0, 0, 386, 387, 1052, 1051, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 992,
	250, 1110, 427, 428, 1014, 1062, 429, 1076, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 1111, 440, 1112, 1091, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	1092, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 1072, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	1113, 486, 487, 488, 489, 1002, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 1055, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 1070,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	1117, 526, 527, 528, 529, 1093, 0, 532, 533, 990,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 1082, 1083, 1084, 1085, 0, 550, 0, 542,
	543, 544, 1094, 545, 1095, 1012, 546, 547, 548, 549,
	0, 551, 552, 0, 996, 553, 554, 555, 557, 558,
	556, 559, 1056, 560, 0, 0, 561, 562, 563, 619,
	1079, 1116, 0, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 993, 0, 0,
	0, 0, 0, 0, 989, 0, 0, 0, 0, 0,
	0, 987, 988, 0, 0, 0, 0, 0, 0, 0,
	1018, 0, 0, 1492, 1016, 1034, 1006, 1007, 1008, 1004,
	1005, 1017, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1058, 1022, 0, 0,
	0, 259, 260, 1098, 261, 262, 263, 264, 265, 573,
	1071, 0, 266, 1078, 267, 1077, 0, 1088, 268, 269,
	270, 271, 272, 273, 1024, 1057, 991, 274, 1118, 1119,
	580, 0, 275, 276, 1064, 0, 1045, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1099, 299, 300, 1048, 1046,
	1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304, 1081,
	305, 1075, 1074, 995, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 1066, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 1001,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	1089, 1090, 1013, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 1073, 0, 0, 0, 338, 0, 339, 0,
	0, 1100, 340, 341, 1086, 1087, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 1096, 0, 1023, 351,
	0, 352, 353, 354, 355, 356, 1059, 1060, 1063, 430,
	1102, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 1101, 365, 1068, 1069,
	0, 1029, 0, 367, 368, 1103, 1061, 1104, 369, 370,
	371, 1105, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 1097, 1106,
	383, 384, 1107, 0, 385, 0, 0, 0, 386, 387,
	1052, 1051, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	1108, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 1109, 417, 992, 250, 1110, 427, 428,
	1014, 1062, 429, 1076, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	1111, 440, 1112, 1091, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 1092, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 1072, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 1113, 486, 487, 488,
	489, 1002, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 1055, 511, 495, 496, 512, 513, 1114, 514,
	515, 516, 517, 518, 519, 1070, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 1117, 526, 527, 528,
	529, 1093, 0, 532, 533, 990, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 1082, 1083,
	1084, 1085, 0, 550, 0, 542, 543, 544, 1094, 545,
	1095, 1012, 546, 547, 548, 549, 0, 551, 552, 0,
	996, 553, 554, 555, 557, 558, 556, 559, 1056, 560,
	0, 0, 561, 562, 563, 619, 1079, 1116, 0, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 993, 0, 0, 0, 0, 0, 0,
	989, 0, 0, 0, 0, 0, 0, 987, 988, 0,
	0, 0, 0, 0, 0, 0, 1018, 0, 0, 1374,
	1016, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1058, 1022, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 1071, 0, 266, 1078,
	267, 1077, 0, 1088, 268, 269, 270, 271, 272, 273,
	1024, 1057, 991, 274, 1118, 1119, 580, 0, 275, 276,
	1064, 0, 1045, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049,
	1053, 301, 302, 303, 304, 1081, 305, 1075, 1074, 995,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 1066, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 1001, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 1089, 1090, 1013, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 1073, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	1086, 1087, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 1096, 0, 1023, 351, 0, 352, 353, 354,
	355, 356, 1373, 1060, 1063, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 1101, 365, 1068, 1069, 0, 1029, 0, 367,
	368, 1103, 1061, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 1097, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 1052, 1051, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 992, 250, 1110, 427, 428, 1014, 1062, 429, 1076,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 1091,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 1092, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 1072, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 1002, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 1055, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 1070, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 1117, 526, 527, 528, 529, 1093, 0, 532,
	533, 990, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 1082, 1083, 1084, 1085, 0, 550,
	0, 542, 543, 544, 1094, 545, 1095, 1012, 546, 547,
	548, 549, 0, 551, 552, 0, 996, 553, 554, 555,
	557, 558, 556, 559, 1056, 560, 0, 0, 561, 562,
	563, 619, 1079, 1116, 0, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 993,
	0, 0, 0, 0, 0, 0, 989, 0, 0, 0,
	0, 0, 0, 987, 988, 0, 0, 0, 0, 0,
	0, 0, 1018, 0, 0, 1368, 1016, 1034, 1006, 1007,
	1008, 1004, 1005, 1017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1058, 1022,
	0, 0, 0, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 1071, 0, 266, 1078, 267, 1077, 0, 1088,
	268, 269, 270, 271, 272, 273, 1024, 1057, 991, 274,
	1118, 1119, 580, 0, 275, 276, 1064, 0, 1045, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1099, 299, 300,
	1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303,
	304, 1081, 305, 1075, 1074, 995, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 1066,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 1001, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1089, 1090, 1013, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1073, 0, 0, 0, 338, 0,
	339, 0, 0, 1100, 340, 341, 1086, 1087, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 1096, 0,
	1023, 351, 0, 352, 353, 354, 355, 356, 1367, 1060,
	1063, 430, 1102, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 1101, 365,
	1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	1097, 1106, 383, 384, 1107, 0, 385, 0, 0, 0,
	386, 387, 1052, 1051, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 992, 250, 1110,
	427, 428, 1014, 1062, 429, 1076, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 1111, 440, 1112, 1091, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 1092, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 1072, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 1113, 486,
	487, 488, 489, 1002, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 1055, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 1070, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 1117, 526,
	527, 528, 529, 1093, 0, 532, 533, 990, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	1082, 1083, 1084, 1085, 0, 550, 0, 542, 543, 544,
	1094, 545, 1095, 1012, 546, 547, 548, 549, 0, 551,
	552, 0, 996, 553, 554, 555, 557, 558, 556, 559,
	1056, 560, 0, 0, 561, 562, 563, 619, 1079, 1116,
	0, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 993, 0, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 987,
	988, 0, 0, 0, 0, 0, 0, 0, 1018, 0,
	0, 1361, 1016, 1034, 1006, 1007, 1008, 1004, 1005, 1017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1058, 1022, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 1071, 0,
	266, 1078, 267, 1077, 0, 1088, 268, 269, 270, 271,
	272, 273, 1024, 1057, 991, 274, 1118, 1119, 580, 0,
	275, 276, 1064, 0, 1045, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054,
	1050, 1049, 1053, 301, 302, 303, 304, 1081, 305, 1075,
	1074, 995, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 1066, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 1001, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1089, 1090,
	1013, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	1073, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 1086, 1087, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 1096, 0, 1023, 351, 0, 352,
	353, 354, 355, 356, 1059, 1060, 1063, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 1101, 365, 1068, 1069, 0, 1029,
	0, 367, 368, 1103, 1061, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 1097, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 1052, 1051,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 992, 250, 1110, 427, 428, 1014, 1062,
	429, 1076, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 1091, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 1092, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 1072,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 1002,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	1055, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 1070, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 1117, 526, 527, 528, 529, 1093,
	0, 532, 533, 990, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 1082, 1083, 1084, 1085,
	0, 550, 0, 542, 543, 544, 1094, 545, 1095, 1012,
	546, 547, 548, 549, 0, 551, 552, 0, 996, 553,
	554, 555, 557, 558, 556, 559, 1056, 560, 0, 0,
	561, 562, 563, 619, 1079, 1116, 0, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 993, 0, 0, 0, 0, 0, 0, 989, 0,
	0, 0, 0, 0, 0, 987, 988, 1034, 1006, 1007,
	1008, 1004, 1005, 1017, 1018, 0, 0, 0, 1016, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1058, 1022,
	0, 0, 0, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 1071, 0, 266, 1078, 267, 1077, 0, 1088,
	268, 269, 270, 271, 272, 273, 1024, 1057, 991, 274,
	1118, 1119, 580, 0, 275, 276, 1064, 0, 1045, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1099, 299, 300,
	1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303,
	304, 1081, 305, 1075, 1074, 995, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 1066,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 1001, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1089, 1090, 1013, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1073, 0, 0, 0, 338, 0,
	339, 0, 0, 1100, 340, 341, 1086, 1087, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 1096, 0,
	1023, 351, 0, 352, 353, 354, 355, 356, 1059, 1060,
	1063, 430, 1102, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 1101, 365,
	1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	1097, 1106, 383, 384, 1107, 0, 385, 0, 0, 0,
	386, 387, 1052, 1051, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 992, 250, 1110,
	427, 428, 1014, 1062, 429, 1076, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 1111, 440, 1112, 1091, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 1092, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 1072, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 1113, 486,
	487, 488, 489, 1002, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 1055, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 1070, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 1117, 526,
	527, 528, 529, 1093, 0, 532, 533, 990, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	1082, 1083, 1084, 1085, 0, 550, 0, 542, 543, 544,
	1094, 545, 1095, 1012, 546, 547, 548, 549, 0, 551,
	552, 0, 996, 553, 554, 555, 557, 558, 556, 559,
	1056, 560, 0, 0, 561, 562, 563, 619, 1079, 1116,
	0, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 993, 0, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 987,
	988, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 1018, 0,
	0, 0, 1016, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1058, 1022, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 1071, 0, 266, 1078,
	267, 1077, 0, 1088, 268, 269, 270, 271, 272, 273,
	1024, 1057, 991, 274, 1118, 1119, 580, 0, 275, 276,
	1064, 0, 1045, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 4220, 1048, 1046, 1047, 1054, 1050, 1049,
	1053, 301, 302, 303, 304, 1081, 305, 1075, 1074, 995,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 1066, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 1001, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 1089, 1090, 1013, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 1073, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	1086, 1087, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 1096, 0, 1023, 351, 0, 352, 353, 354,
	355, 356, 1059, 1060, 1063, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 1101, 365, 1068, 1069, 0, 1029, 0, 367,
	368, 1103, 1061, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 1097, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 1052, 1051, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 992, 250, 1110, 427, 428, 1014, 1062, 429, 1076,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 1091,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 1092, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 1072, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 1002, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 1055, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 1070, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 1117, 526, 527, 528, 529, 1093, 0, 532,
	533, 990, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 1082, 1083, 1084, 1085, 0, 550,
	0, 542, 543, 544, 1094, 545, 1095, 1012, 546, 547,
	548, 549, 0, 4219, 552, 0, 996, 553, 554, 555,
	557, 558, 556, 559, 1056, 560, 0, 0, 561, 562,
	563, 619, 1079, 1116, 0, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 993,
	0, 0, 0, 0, 0, 0, 989, 0, 0, 0,
	0, 0, 0, 987, 988, 1034, 1006, 1007, 1008, 1004,
	1005, 1017, 1018, 0, 0, 0, 1016, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1058, 1022, 0, 0,
	0, 259, 260, 1098, 261, 262, 263, 264, 265, 4218,
	1071, 0, 266, 1078, 267, 1077, 0, 1088, 268, 269,
	270, 271, 272, 273, 1024, 1057, 991, 274, 1118, 1119,
	580, 0, 275, 276, 1064, 0, 1045, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1099, 299, 4220, 1048, 1046,
	1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304, 1081,
	305, 1075, 1074, 995, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 1066, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 1001,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	1089, 1090, 1013, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 1073, 0, 0, 0, 338, 0, 339, 0,
	0, 1100, 340, 341, 1086, 1087, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 1096, 0, 1023, 351,
	0, 352, 353, 354, 355, 356, 1059, 1060, 1063, 430,
	1102, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 1101, 365, 1068, 1069,
	0, 1029, 0, 367, 368, 1103, 1061, 1104, 369, 370,
	371, 1105, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 1097, 1106,
	383, 384, 1107, 0, 385, 0, 0, 0, 386, 387,
	1052, 1051, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	1108, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 1109, 417, 992, 250, 1110, 427, 428,
	1014, 1062, 429, 1076, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	1111, 440, 1112, 1091, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 1092, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 1072, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 1113, 486, 487, 488,
	489, 1002, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 1055, 511, 495, 496, 512, 513, 1114, 514,
	515, 516, 517, 518, 519, 1070, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 1117, 526, 527, 528,
	529, 1093, 0, 532, 533, 990, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 1082, 1083,
	1084, 1085, 0, 550, 0, 542, 543, 544, 1094, 545,
	1095, 1012, 546, 547, 548, 549, 0, 4219, 552, 0,
	996, 553, 554, 555, 557, 558, 556, 559, 1056, 560,
	0, 0, 561, 562, 563, 619, 1079, 1116, 0, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 993, 0, 0, 0, 0, 0, 0,
	989, 0, 0, 0, 0, 0, 0, 987, 988, 1034,
	1006, 1007, 1008, 2874, 2875, 1017, 1018, 0, 0, 0,
	1016, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1058, 1022, 0, 0, 0, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 1071, 0, 266, 1078, 267, 1077,
	0, 1088, 268, 269, 270, 271, 272, 273, 1024, 1057,
	991, 274, 1118, 1119, 580, 0, 275, 276, 1064, 0,
	1045, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1099,
	299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301,
	302, 303, 304, 1081, 305, 1075, 1074, 995, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 1066, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 1001, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1089, 1090, 1013, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 1073, 0, 0, 0,
	338, 0, 339, 0, 0, 1100, 340, 341, 1086, 1087,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	1096, 0, 1023, 351, 0, 352, 353, 354, 355, 356,
	1059, 1060, 1063, 430, 1102, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	1101, 365, 1068, 1069, 0, 1029, 0, 367, 368, 1103,
	1061, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 1097, 1106, 383, 384, 1107, 0, 385, 0,
	0, 0, 386, 387, 1052, 1051, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 992,
	250, 1110, 427, 428, 1014, 1062, 429, 1076, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 1111, 440, 1112, 1091, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	1092, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 1072, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	1113, 486, 487, 488, 489, 1002, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 1055, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 1070,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	1117, 526, 527, 528, 529, 1093, 0, 532, 533, 990,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 1082, 1083, 1084, 1085, 0, 550, 0, 542,
	543, 544, 1094, 545, 1095, 1012, 546, 547, 548, 549,
	0, 551, 552, 0, 996, 553, 554, 555, 557, 558,
	556, 559, 1056, 560, 0, 0, 561, 562, 563, 619,
	1079, 1116, 0, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 993, 0, 0,
	0, 0, 0, 0, 989, 0, 0, 0, 0, 0,
	0, 987, 988, 1034, 1006, 1007, 1008, 2872, 2873, 1017,
	1018, 0, 0, 0, 1016, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1058, 1022, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 1071, 0,
	266, 1078, 267, 1077, 0, 1088, 268, 269, 270, 271,
	272, 273, 1024, 1057, 991, 274, 1118, 1119, 580, 0,
	275, 276, 1064, 0, 1045, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054,
	1050, 1049, 1053, 301, 302, 303, 304, 1081, 305, 1075,
	1074, 995, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 1066, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 1001, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 1089, 1090,
	1013, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	1073, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 1086, 1087, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 1096, 0, 1023, 351, 0, 352,
	353, 354, 355, 356, 1059, 1060, 1063, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 1101, 365, 1068, 1069, 0, 1029,
	0, 367, 368, 1103, 1061, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 1097, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 1052, 1051,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 992, 250, 1110, 427, 428, 1014, 1062,
	429, 1076, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 1091, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 1092, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 1072,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 1002,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	1055, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 1070, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 1117, 526, 527, 528, 529, 1093,
	0, 532, 533, 990, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 1082, 1083, 1084, 1085,
	0, 550, 0, 542, 543, 544, 1094, 545, 1095, 1012,
	546, 547, 548, 549, 0, 551, 552, 0, 996, 553,
	554, 555, 557, 558, 556, 559, 1056, 560, 0, 0,
	561, 562, 563, 619, 1079, 1116, 0, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 993, 0, 0, 0, 0, 0, 0, 989, 0,
	0, 0, 0, 0, 0, 987, 988, 1034, 1006, 1007,
	1008, 1004, 1005, 1017, 1018, 0, 0, 0, 1016, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1058, 1022,
	0, 0, 0, 259, 260, 1098, 261, 262, 263, 264,
	265, 573, 1071, 0, 266, 1078, 267, 1077, 0, 1088,
	268, 269, 270, 271, 272, 273, 1024, 1057, 991, 274,
	1118, 1119, 580, 0, 275, 276, 1064, 0, 1045, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1099, 299, 300,
	1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303,
	304, 1081, 305, 1075, 1074, 995, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 1066,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 1001, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1089, 1090, 1013, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1073, 0, 0, 0, 338, 0,
	339, 0, 0, 1100, 340, 341, 1086, 1087, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 1096, 0,
	1023, 351, 0, 352, 353, 354, 355, 356, 1059, 1060,
	1063, 430, 1102, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 1101, 365,
	1068, 1069, 0, 1029, 0, 367, 368, 1103, 1061, 1104,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	1097, 1106, 383, 384, 1107, 0, 385, 0, 0, 0,
	386, 387, 1052, 1051, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 992, 250, 1110,
	427, 428, 1014, 1062, 429, 1076, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 1111, 440, 1112, 1091, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 1092, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 1072, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 1113, 486,
	487, 488, 489, 1002, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 1055, 511, 495, 496, 512, 513,
	1114, 514, 515, 516, 517, 518, 519, 1070, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 1117, 526,
	527, 528, 529, 1093, 0, 532, 533, 990, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	1082, 1083, 1084, 1085, 0, 550, 0, 542, 543, 544,
	1094, 545, 1095, 1012, 546, 547, 548, 549, 0, 551,
	552, 0, 996, 553, 554, 555, 557, 558, 556, 559,
	1056, 560, 0, 0, 561, 562, 563, 619, 1079, 1116,
	0, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 993, 0, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 2234,
	2235, 1034, 1006, 1007, 1008, 1004, 1005, 1017, 1018, 0,
	0, 0, 1016, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1058, 1022, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 1071, 0, 266, 1078,
	267, 1077, 0, 1088, 268, 269, 270, 271, 272, 273,
	1024, 1057, 0, 274, 1118, 1119, 580, 0, 275, 276,
	1064, 0, 1045, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049,
	1053, 301, 302, 303, 304, 1081, 305, 1075, 1074, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 1066, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 1001, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 1089, 1090, 1013, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 1073, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	1086, 1087, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 1096, 0, 1023, 351, 0, 352, 353, 354,
	355, 356, 1059, 1060, 1063, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 1101, 365, 1068, 1069, 0, 1029, 0, 367,
	368, 1103, 1061, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 1097, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 1052, 1051, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 0, 250, 1110, 427, 428, 1014, 1062, 429, 1076,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 1091,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 1092, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 1072, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 1002, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 1055, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 1070, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 1117, 526, 527, 528, 529, 1093, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 1082, 1083, 1084, 1085, 0, 550,
	0, 542, 543, 544, 1094, 545, 1095, 1012, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 1056, 560, 0, 0, 561, 562,
	563, 619, 1079, 1116, 0, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 1034,
	1006, 1007, 1008, 1004, 1005, 1017, 2454, 0, 0, 0,
	0, 0, 0, 2452, 2453, 0, 251, 252, 253, 254,
	255, 256, 1018, 257, 258, 0, 1016, 0, 0, 0,
	1058, 1022, 0, 0, 0, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 1071, 0, 266, 1078, 267, 1077,
	0, 1088, 268, 269, 270, 271, 272, 273, 1024, 1057,
	0, 274, 1118, 1119, 580, 0, 275, 276, 1064, 0,
	1045, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1099,
	299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301,
	302, 303, 304, 1081, 305, 1075, 1074, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 1066, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 1001, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1089, 1090, 1013, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 1073, 0, 0, 0,
	338, 0, 339, 0, 0, 1100, 340, 341, 1086, 1087,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	1096, 0, 1023, 351, 0, 352, 353, 354, 355, 356,
	1059, 1060, 1063, 430, 1102, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	1101, 365, 1068, 1069, 0, 1029, 0, 367, 368, 1103,
	1061, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 1097, 1106, 383, 384, 1107, 0, 385, 0,
	0, 0, 386, 387, 1052, 1051, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 0,
	250, 1110, 427, 428, 1014, 1062, 429, 1076, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 1111, 440, 1112, 1091, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	1092, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 1072, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	1113, 486, 487, 488, 489, 2867, 2868, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 1055, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 1070,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	1117, 526, 527, 528, 529, 1093, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 1082, 1083, 1084, 1085, 0, 550, 0, 542,
	543, 544, 1094, 545, 1095, 1012, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 1056, 560, 0, 0, 561, 562, 563, 619,
	1079, 1116, 0, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 1034, 1006, 1007,
	1008, 1004, 1005, 1017, 0, 0, 0, 0, 0, 0,
	0, 1941, 1942, 0, 251, 252, 253, 254, 255, 256,
	1018, 257, 258, 0, 1016, 0, 0, 0, 1058, 1022,
	0, 0, 0, 259, 260, 1098, 261, 262, 263, 264,
	265, 0, 1071, 0, 266, 1078, 267, 1077, 0, 1088,
	268, 269, 270, 271, 272, 273, 1024, 1057, 991, 274,
	1118, 1119, 580, 0, 275, 276, 1064, 0, 1045, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 1099, 299, 4220,
	1048, 1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303,
	304, 1081, 305, 1075, 1074, 995, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 1066,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 1001, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 1089, 1090, 1013, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 1073, 0, 0, 0, 338, 0,
	339, 0, 0, 1100, 340, 341, 1086, 1087, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 1096, 0,
	1023, 351, 0, 352, 353, 354, 355, 356, 1059, 1060,
	1063, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 1101, 365,
	1068, 1069, 0, 1029, 0, 367, 368, 0, 1061, 0,
	369, 370, 371, 1105, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	1097, 1106, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 1052, 1051, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 1108, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 1109, 417, 992, 250, 0,
	427, 428, 1014, 1062, 429, 1076, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 1111, 440, 1112, 1091, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 1092, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 1072, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 1113, 486,
	487, 488, 489, 1002, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 1055, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 1070, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 1117, 526,
	527, 528, 529, 1093, 0, 532, 533, 990, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	1082, 1083, 1084, 1085, 0, 550, 0, 542, 543, 544,
	1094, 545, 1095, 1012, 546, 547, 548, 549, 0, 4219,
	552, 0, 996, 553, 554, 555, 557, 558, 556, 559,
	1056, 560, 0, 0, 561, 562, 563, 619, 1079, 1116,
	0, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 980, 0, 1156, 0, 0, 987,
	988, 0, 0, 0, 0, 0, 0, 0, 1018, 0,
	0, 0, 1016, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1058, 0, 0,
	0, 0, 259, 260, 1098, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 1057, 0, 274, 578,
	579, 580, 0, 275, 276, 1064, 0, 1045, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1099, 299, 300, 1048,
	1046, 1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 1089, 1090, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 1100, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 1096, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 1059, 1060, 1063,
	430, 1102, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 249, 363, 364, 366, 0, 1101, 365, 595,
	596, 0, 597, 0, 367, 368, 1103, 1061, 1104, 369,
	370, 371, 1105, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 1142, 379, 381, 380, 0, 382, 1097,
	1106, 383, 384, 1107, 0, 385, 0, 0, 0, 386,
	387, 1052, 1051, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 1108, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 1109, 417, 0, 250, 1110, 427,
	428, 0, 1062, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 1148, 435, 436, 437, 0, 0, 438, 439,
	602, 1111, 440, 1112, 1091, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 1092, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 1113, 486, 487,
	488, 489, 609, 1150, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 212, 506, 507, 505,
	508, 509, 510, 1055, 511, 495, 496, 512, 513, 1114,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 1093, 0, 532, 533, 0, 531, 214, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 1094,
	545, 1095, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 1056,
	560, 0, 0, 561, 562, 563, 1499, 620, 621, 0,
	565, 564, 566, 622, 0, 1156, 0, 206, 567, 568,
	623, 569, 570, 571, 0, 207, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 1146, 1058, 1828, 0, 0,
	0, 259, 260, 1098, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 1057, 0, 274, 578, 579,
	580, 0, 275, 276, 1064, 0, 1045, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1099, 299, 300, 1048, 1046,
	1047, 1054, 1050, 1049, 1053, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	1089, 1090, 0, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 1100, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 1096, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 1059, 1060, 1063, 430,
	1102, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 1101, 365, 595, 596,
	0, 597, 0, 367, 368, 1103, 1061, 1104, 369, 370,
	371, 1105, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 1142, 379, 381, 380, 0, 382, 1097, 1106,
	383, 384, 1107, 0, 385, 0, 0, 0, 386, 387,
	1052, 1051, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	1108, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 1109, 417, 0, 250, 1110, 427, 428,
	0, 1062, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 1148, 435, 436, 437, 0, 0, 438, 439, 602,
	1111, 440, 1112, 1091, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 1092, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 1113, 486, 487, 488,
	489, 609, 1150, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 212, 506, 507, 505, 508,
	509, 510, 1055, 511, 495, 496, 512, 513, 1114, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 1093, 0, 532, 533, 0, 531, 214, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 1094, 545,
	1095, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 1056, 560,
	0, 0, 561, 562, 563, 1499, 620, 621, 0, 565,
	564, 566, 622, 0, 0, 0, 206, 567, 568, 623,
	569, 570, 571, 0, 207, 0, 0, 0, 3051, 0,
	1156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1146, 0, 1828, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1058, 0, 0, 0, 0, 259, 260, 1098, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	1057, 0, 274, 578, 579, 580, 0, 275, 276, 1064,
	0, 1045, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053,
	301, 302, 303, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 1089, 1090, 0, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 1100, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 1096, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 1059, 1060, 1063, 430, 1102, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 249, 363, 364, 366,
	0, 1101, 365, 595, 596, 0, 597, 0, 367, 368,
	1103, 1061, 1104, 369, 370, 371, 1105, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 1142, 379, 381,
	380, 0, 382, 1097, 1106, 383, 384, 1107, 0, 385,
	0, 0, 0, 386, 387, 1052, 1051, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 1108, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 1109, 417,
	0, 250, 1110, 427, 428, 0, 1062, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 1148, 435, 436, 437,
	0, 0, 438, 439, 602, 1111, 440, 1112, 1091, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 1092, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 1113, 486, 487, 488, 489, 609, 1150, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 1055, 511, 495,
	496, 512, 513, 1114, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 1093, 0, 532, 533,
	0, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 1094, 545, 1095, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 1056, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 0, 565, 564, 566, 622, 0, 1138,
	0, 1156, 567, 568, 623, 569, 570, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 1146,
	0, 1144, 1058, 0, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 1057, 0, 274, 578, 579, 580, 0, 275, 276,
	1064, 0, 1045, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049,
	1053, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 1089, 1090, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 1096, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 1059, 1060, 1063, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 1101, 365, 595, 596, 0, 597, 0, 367,
	368, 1103, 1061, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 1142, 379,
	381, 380, 0, 382, 1097, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 1052, 1051, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 0, 250, 1110, 427, 428, 0, 1062, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 1148, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 1091,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 1092, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 609, 1150, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 1055, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 1093, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 1094, 545, 1095, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 1056, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 0,
	1156, 0, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	1146, 1058, 1144, 0, 0, 0, 259, 260, 1098, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	1057, 0, 274, 578, 579, 580, 0, 275, 276, 1064,
	0, 1045, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	1099, 299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053,
	301, 302, 303, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 1089, 1090, 0, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 1100, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 1096, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 1059, 1060, 1063, 430, 1102, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 249, 363, 364, 366,
	0, 1101, 365, 595, 596, 0, 597, 0, 367, 368,
	1103, 1061, 1104, 369, 370, 371, 1105, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 1142, 379, 381,
	380, 0, 382, 1097, 1106, 383, 384, 1107, 0, 385,
	0, 0, 0, 386, 387, 1052, 1051, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 1108, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 1109, 417,
	0, 250, 1110, 427, 428, 0, 1062, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 1148, 435, 436, 437,
	0, 0, 438, 439, 602, 1111, 440, 1112, 1091, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 1092, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 1113, 486, 487, 488, 489, 609, 1150, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 1055, 511, 495,
	496, 512, 513, 1114, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 1093, 0, 532, 533,
	0, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 1094, 545, 1095, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 1056, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 0, 565, 564, 566, 622, 0, 1156,
	0, 0, 567, 568, 623, 569, 570, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 1146,
	1058, 1144, 0, 0, 0, 259, 260, 1098, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 1057,
	0, 274, 578, 579, 580, 0, 275, 276, 1064, 0,
	1045, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 1099,
	299, 300, 1048, 1046, 1047, 1054, 1050, 1049, 1053, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 1089, 1090, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 1100, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	1096, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	1059, 1060, 1063, 430, 1102, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	1101, 365, 595, 596, 0, 597, 0, 367, 368, 1103,
	1061, 1104, 369, 370, 371, 1105, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 1097, 1106, 383, 384, 1107, 0, 385, 0,
	0, 0, 386, 387, 1052, 1051, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 1108, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 1109, 417, 0,
	250, 1110, 427, 428, 0, 1062, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 1111, 440, 1112, 1091, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	1092, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	1113, 486, 487, 488, 489, 609, 1150, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 1055, 511, 495, 496,
	512, 513, 1114, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 1093, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 1094, 545, 1095, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 1056, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 0, 980, 0,
	1344, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	1727, 572, 0, 0, 0, 0, 259, 260, 1098, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 276, 581,
	0, 1310, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	1099, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 1100, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 592, 593, 594, 430, 1102, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 0, 363, 364, 366,
	0, 1101, 365, 595, 596, 0, 597, 0, 367, 368,
	1103, 598, 1104, 369, 370, 371, 1105, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 1106, 383, 384, 1107, 0, 385,
	0, 0, 0, 386, 387, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 1108, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 1109, 417,
	0, 0, 1110, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 1111, 440, 1112, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 1113, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	212, 506, 507, 505, 508, 509, 510, 0, 511, 495,
	496, 512, 513, 1114, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 214, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	1499, 620, 621, 0, 565, 564, 566, 622, 0, 0,
	0, 206, 567, 568, 623, 569, 570, 571, 0, 207,
	0, 0, 0, 1496, 0, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 1098, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 1310, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1099, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 1100, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 592, 593, 594, 430,
	1102, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 0, 363, 364, 366, 0, 1101, 365, 595, 596,
	0, 597, 0, 367, 368, 1103, 598, 1104, 369, 370,
	371, 1105, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 1106,
	383, 384, 1107, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	1108, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 1109, 417, 0, 0, 1110, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	1111, 440, 1112, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 1113, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 212, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 1114, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 214, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 1499, 620, 621, 0, 565,
	564, 566, 622, 0, 0, 0, 206, 567, 568, 623,
	569, 570, 571, 0, 207, 0, 0, 0, 0, 0,
	1344, 1343, 0, 0, 0, 0, 1341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 259, 260, 1098, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 276, 581,
	0, 1310, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	1099, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 1100, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 592, 593, 594, 430, 1102, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 0, 363, 364, 366,
	0, 1101, 365, 595, 596, 0, 597, 0, 367, 368,
	1103, 598, 1104, 369, 370, 371, 1105, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 1106, 383, 384, 1107, 0, 385,
	0, 0, 0, 386, 387, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 1108, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 1109, 417,
	0, 0, 1110, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 1111, 440, 1112, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 1113, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 0, 511, 495,
	496, 512, 513, 1114, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 0, 565, 564, 566, 622, 0, 0,
	0, 0, 567, 568, 623, 569, 570, 571, 1344, 1343,
	0, 0, 0, 0, 1341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 1521, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 1098, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 1310,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 1099, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 1100, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 1102, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 0, 363, 364, 366, 0, 1101,
	365, 595, 596, 0, 597, 0, 367, 368, 1103, 598,
	1104, 369, 370, 371, 1105, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 1106, 383, 384, 1107, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 1108, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 1109, 417, 0, 0,
	1110, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 1111, 440, 1112, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 1113,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 1114, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 0, 565, 564, 566, 622, 0, 0, 0, 0,
	567, 568, 623, 569, 570, 571, 1344, 2024, 0, 0,
	0, 0, 2025, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 3305,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 1098, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 1310, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 1099, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 1100, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 592, 593, 594,
	430, 1102, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 0, 363, 364, 366, 0, 1101, 365, 595,
	596, 0, 597, 0, 367, 368, 1103, 598, 1104, 369,
	370, 371, 1105, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 2023, 381, 380, 0, 382, 599,
	1106, 383, 384, 1107, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 1108, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 1109, 417, 0, 0, 1110, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 1111, 440, 1112, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 1113, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 1114,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 0,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 1344, 1343, 0, 0, 0, 0,
	1341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 1521, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 1098, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 1310, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 1099, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	1100, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 1102,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	0, 363, 364, 366, 0, 1101, 365, 595, 596, 0,
	597, 0, 367, 368, 1103, 598, 1104, 369, 370, 371,
	1105, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 1106, 383,
	384, 1107, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 1108,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 1109, 417, 0, 0, 1110, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 1111,
	440, 1112, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 1113, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 1114, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 1156, 0, 0, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1058, 0, 1505, 0, 0, 259, 260,
	1098, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 1057, 0, 274, 578, 579, 580, 0, 275,
	276, 1064, 0, 1045, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 1099, 299, 300, 1048, 1046, 1047, 1054, 1050,
	1049, 1053, 301, 302, 303, 304, 0, 305, 582, 583,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 1089, 1090, 0,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 0, 0, 1100, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 1096, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 1059, 1060, 1063, 430, 1102, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 0, 1101, 365, 595, 596, 0, 597, 0,
	367, 368, 1103, 1061, 1104, 369, 370, 371, 1105, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 1097, 1106, 383, 384, 1107,
	0, 385, 0, 0, 0, 386, 387, 1052, 1051, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 1108, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	1109, 417, 0, 250, 1110, 427, 428, 0, 1062, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 1111, 440, 1112,
	1091, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 1092, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 1113, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 1055,
	511, 495, 496, 512, 513, 1114, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 1093, 0,
	532, 533, 0, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 1094, 545, 1095, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 1056, 560, 0, 0, 561,
	562, 563, 619, 620, 621, 0, 565, 564, 566, 622,
	980, 0, 245, 0, 567, 568, 623, 569, 570, 571,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 578, 579, 580, 0, 275,
	276, 581, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 582, 583,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 590, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 592, 593, 594, 430, 0, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 0, 363,
	364, 366, 0, 0, 365, 595, 596, 0, 597, 0,
	367, 368, 0, 598, 0, 369, 370, 371, 0, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 599, 0, 383, 384, 0,
	0, 385, 0, 0, 0, 386, 387, 0, 0, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 0, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	0, 417, 0, 0, 0, 427, 428, 0, 600, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 0, 440, 0,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 0, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 212, 506, 507, 505, 508, 509, 510, 0,
	511, 495, 496, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 0,
	532, 533, 0, 531, 214, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 617, 545, 618, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 0, 560, 0, 0, 561,
	562, 563, 1499, 620, 621, 245, 565, 564, 566, 622,
	0, 0, 0, 206, 567, 568, 623, 569, 570, 571,
	0, 207, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 176, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 592, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 0, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 0, 417, 0, 250, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 0, 565,
	564, 566, 622, 245, 2788, 0, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 1842, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 0, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 0,
	363, 364, 366, 0, 0, 365, 595, 596, 0, 597,
	0, 367, 368, 0, 598, 0, 369, 370, 371, 0,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 0, 383, 384,
	0, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 0, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 0, 417, 0, 0, 0, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 0, 440,
	0, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 0, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 245, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 4362, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 592, 593, 594,
	430, 0, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 249, 363, 364, 366, 0, 0, 365, 595,
	596, 0, 597, 0, 367, 368, 0, 598, 0, 369,
	370, 371, 0, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	0, 383, 384, 0, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 0, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 0, 417, 0, 250, 0, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 0, 440, 0, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 0, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 0,
	565, 564, 566, 622, 0, 245, 0, 0, 567, 568,
	623, 569, 570, 571, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 3246, 572, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 592, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 0, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 0, 417, 0, 250, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 0, 565,
	564, 566, 622, 0, 245, 0, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 1442, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	0, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 0, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 245, 565, 564,
	566, 622, 0, 0, 0, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 2758, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 592, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 0, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 0, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	245, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 259, 260, 3406, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 276, 581,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 592, 593, 594, 430, 0, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 0, 363, 364, 366,
	0, 0, 365, 595, 596, 0, 597, 0, 367, 368,
	0, 598, 0, 369, 370, 371, 0, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 0, 383, 384, 0, 0, 385,
	0, 0, 0, 386, 387, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 0, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 0, 417,
	0, 0, 0, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 0, 440, 0, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 0, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 0, 511, 495,
	496, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 0, 565, 564, 566, 622, 0, 826,
	0, 709, 567, 568, 623, 569, 570, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 2127, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 716, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 824, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 250, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 714, 534, 535, 536, 537, 715, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 0,
	707, 0, 709, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 719, 257, 258, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 578, 579, 580, 0, 275,
	276, 581, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 716, 304, 0, 305, 582, 583,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 0,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 590, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 592, 593, 594, 430, 0, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 0, 0, 365, 595, 596, 0, 597, 0,
	367, 368, 0, 598, 0, 369, 370, 371, 0, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 599, 0, 383, 384, 0,
	0, 385, 0, 0, 0, 386, 387, 0, 0, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 0, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	0, 417, 0, 250, 0, 427, 428, 0, 600, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 0, 440, 0,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 0, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 0,
	511, 495, 496, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 0,
	532, 533, 0, 531, 714, 534, 535, 536, 537, 715,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 617, 545, 618, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 0, 560, 0, 0, 561,
	562, 563, 619, 620, 621, 1879, 565, 564, 566, 622,
	0, 0, 0, 0, 567, 568, 623, 569, 570, 571,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 719, 0, 0, 0,
	0, 259, 260, 1098, 261, 262, 263, 264, 265, 0,
	1885, 0, 266, 1875, 267, 1891, 0, 1898, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 1901, 1902,
	0, 0, 275, 276, 0, 0, 1310, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1099, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 1081,
	305, 1889, 1888, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 1066, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 1887, 0, 0, 0, 338, 0, 339, 0,
	0, 1100, 340, 341, 1896, 1897, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 0, 0, 0, 351,
	0, 352, 353, 354, 355, 356, 0, 0, 0, 430,
	1102, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 0, 363, 364, 366, 0, 1101, 365, 1882, 1883,
	0, 1878, 0, 367, 368, 1103, 0, 1104, 369, 370,
	371, 1105, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 0, 1106,
	383, 384, 1107, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	1108, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 1109, 417, 0, 0, 1110, 427, 428,
	0, 0, 429, 1890, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 0,
	1111, 440, 1112, 0, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 1872, 453,
	454, 455, 1873, 456, 457, 458, 0, 459, 0, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 1886, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 1113, 486, 487, 488,
	489, 0, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 1114, 514,
	515, 516, 517, 518, 519, 1884, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 1900, 526, 527, 528,
	529, 0, 0, 532, 533, 0, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 1892, 1893,
	1894, 1895, 0, 550, 0, 542, 543, 544, 0, 545,
	0, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 0, 1876, 1899, 0, 565,
	564, 566, 0, 0, 0, 1344, 1343, 567, 568, 0,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	1866, 259, 260, 1098, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 1310, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 1099, 299, 300, 0, 0,
	0, 0, 0, 0, 2722, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 1100, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 592, 593, 594, 430,
	1102, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 0, 363, 364, 366, 0, 1101, 365, 595, 596,
	0, 597, 0, 367, 368, 1103, 598, 1104, 369, 370,
	371, 1105, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 1106,
	383, 384, 1107, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	1108, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 1109, 417, 0, 0, 1110, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	1111, 440, 1112, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 1113, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 2723, 511, 495, 496, 512, 513, 1114, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 0, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 1344, 1343, 0, 0, 0, 0, 1341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 1310, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 0,
	363, 364, 366, 0, 1101, 365, 595, 596, 0, 597,
	0, 367, 368, 1103, 598, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 0, 0, 1110, 427, 428, 3576, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 709, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 716, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 592, 593, 594,
	430, 0, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 249, 363, 364, 366, 0, 0, 365, 595,
	596, 0, 597, 0, 367, 368, 0, 598, 0, 369,
	370, 371, 0, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	0, 383, 384, 0, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 0, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 0, 417, 0, 250, 0, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 0, 440, 0, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 0, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 714, 534,
	535, 536, 537, 715, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 0,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 1344, 1343, 0, 0, 0, 0,
	1341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	719, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 1098, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 1310, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 1099, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	1100, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 1102,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	0, 363, 364, 366, 0, 1101, 365, 595, 596, 0,
	597, 0, 367, 368, 1103, 598, 1104, 369, 370, 371,
	1105, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 1106, 383,
	384, 1107, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 1108,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 1109, 417, 0, 0, 1110, 427, 428, 3218,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 1111,
	440, 1112, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 1113, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 1114, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 709, 565, 564,
	566, 622, 0, 0, 0, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 716,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 248, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 592, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 249, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 250, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 2167,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 2168, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 714,
	534, 535, 536, 537, 715, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	0, 565, 564, 566, 622, 709, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 719, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 716, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 592, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 0, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 0, 417, 0, 250, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	1905, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 714, 534, 535,
	536, 537, 715, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 1904, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 0, 565,
	564, 566, 622, 709, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 719,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 716, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 0, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 0, 365, 595, 596, 0, 597,
	0, 367, 368, 0, 598, 0, 369, 370, 371, 0,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 0, 383, 384,
	0, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 0, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 0, 417, 0, 250, 0, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 0, 440,
	0, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 0, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 1858, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 714, 534, 535, 536, 537,
	715, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 1857, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 0, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 1549, 0, 1344, 1343, 0, 0, 0, 0, 1341,
	0, 0, 0, 0, 0, 0, 0, 719, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 1310, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 248, 0, 0, 0, 0, 0, 1548, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 0,
	363, 364, 366, 0, 1101, 365, 595, 596, 0, 597,
	0, 367, 368, 1103, 598, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 0, 0, 1110, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 1547, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 1546,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 0, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 1489, 0, 1344, 1343, 0, 0, 0, 0, 1341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 1310, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 1488, 593, 594, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 0,
	363, 364, 366, 0, 1101, 365, 595, 596, 0, 597,
	0, 367, 368, 1103, 598, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 0, 0, 1110, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 0, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 1417, 0, 1344, 1343, 0, 0, 0, 0, 1341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 1310, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 1416, 593, 594, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 0,
	363, 364, 366, 0, 1101, 365, 595, 596, 0, 597,
	0, 367, 368, 1103, 598, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 0, 0, 1110, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 0, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 1379, 0, 1344, 1343, 0, 0, 0, 0, 1341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 1310, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 0,
	363, 364, 366, 0, 1101, 365, 595, 596, 0, 597,
	0, 367, 368, 1103, 598, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 0, 0, 1110, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 0, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 1339, 0, 1344, 1343, 0, 0, 0, 0, 1341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 1310, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 1338, 593, 594, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 0,
	363, 364, 366, 0, 1101, 365, 595, 596, 0, 597,
	0, 367, 368, 1103, 598, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 0, 0, 1110, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 0, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 1344, 1343, 0, 0, 0, 0, 1341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 1098,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 1310, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 1099, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 1100, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 1102, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 1101, 365, 595, 596, 0, 597, 0, 367,
	368, 1103, 598, 1104, 369, 370, 371, 1105, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 1106, 383, 384, 1107, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 1108, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 1109,
	417, 0, 0, 1110, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 1111, 440, 1112, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 1113, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 1114, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 245, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 250, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 0, 565, 564,
	566, 622, 1344, 1343, 0, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 719, 0,
	0, 0, 0, 572, 0, 0, 0, 0, 259, 260,
	1098, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 578, 579, 580, 0, 275,
	276, 581, 0, 1310, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 1099, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 582, 583,
	1914, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 0,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 0, 0, 1100, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 590, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 592, 593, 594, 430, 1102, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 0, 363,
	364, 366, 0, 1101, 365, 595, 596, 0, 597, 0,
	367, 368, 1103, 598, 1104, 369, 370, 371, 1105, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 599, 1106, 383, 384, 1107,
	0, 385, 0, 0, 0, 386, 387, 0, 0, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 1108, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	1109, 417, 0, 0, 1110, 427, 428, 0, 600, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 1111, 440, 1112,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 1113, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 0,
	511, 495, 496, 512, 513, 1114, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 0,
	532, 533, 0, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 617, 545, 618, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 0, 560, 0, 0, 561,
	562, 563, 619, 620, 621, 0, 565, 564, 566, 622,
	1344, 1343, 0, 0, 567, 568, 623, 569, 570, 571,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 259, 260, 1098, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 276, 581,
	0, 1310, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	1099, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 1100, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 592, 593, 594, 430, 1102, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 0, 363, 364, 366,
	0, 1101, 365, 595, 596, 0, 597, 0, 367, 368,
	1103, 598, 1104, 369, 370, 371, 1105, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 1106, 383, 384, 1107, 0, 385,
	0, 0, 0, 386, 387, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 1108, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 1109, 417,
	0, 0, 1110, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 1111, 440, 1112, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 1113, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 0, 511, 495,
	496, 512, 513, 1114, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 1344, 565, 564, 566, 622, 0, 0,
	0, 0, 567, 568, 623, 569, 570, 571, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 1098, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 1310, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 1099, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 1100,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 1102, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 0,
	363, 364, 366, 0, 1101, 365, 595, 596, 0, 597,
	0, 367, 368, 1103, 598, 1104, 369, 370, 371, 1105,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 1106, 383, 384,
	1107, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 1108, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 1109, 417, 0, 0, 1110, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 1111, 440,
	1112, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 1113, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 1114, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 245, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 2591, 275, 276, 581, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 2588, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 2595, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 2801, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	2594, 0, 0, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 592, 593, 594,
	430, 0, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 2798, 363, 364, 366, 0, 0, 365, 595,
	596, 0, 597, 0, 367, 2800, 0, 598, 0, 369,
	370, 371, 0, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	0, 383, 384, 2797, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 0, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 0, 417, 0, 0, 0, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 0, 440, 0, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 2593, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 0, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 2799, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 245,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 2591, 275, 276, 581, 0,
	0, 2585, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 2588, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 2595, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 2594, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	2584, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 0, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	0, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 2593, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 2592, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 1616, 0, 245,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	250, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	1619, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 1617, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 1618, 564, 566, 622, 1314, 0, 245,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	1316, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	250, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 1148, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 1311, 0, 245,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	1313, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	250, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 1148, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 1217, 0, 245,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	1219, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	250, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 1148, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 655, 0, 245,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 654,
	255, 256, 644, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 647, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 648, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 0, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	0, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 649,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 0, 565, 564, 566, 622, 643, 0, 245,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 644, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 647, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 648, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	592, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 0, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	0, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 649,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 245, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 578, 579, 580, 0, 275,
	276, 581, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 582, 583,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 0,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 590, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 592, 593, 594, 430, 0, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 0, 0, 365, 595, 596, 0, 597, 0,
	367, 368, 0, 598, 0, 369, 370, 371, 0, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 599, 0, 383, 384, 0,
	0, 385, 0, 0, 0, 386, 387, 0, 0, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 0, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	0, 417, 0, 250, 0, 427, 428, 0, 600, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 1148, 435,
	436, 437, 0, 0, 438, 439, 602, 0, 440, 0,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 0, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 0,
	511, 495, 496, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 0,
	532, 533, 0, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 617, 545, 618, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 0, 560, 0, 0, 561,
	562, 563, 619, 620, 621, 245, 565, 564, 566, 622,
	0, 0, 0, 0, 567, 568, 623, 569, 570, 571,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 592, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 0, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 3181, 417, 0, 250, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 0, 565,
	564, 566, 622, 2729, 0, 245, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 2728, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 0, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 0, 417, 0, 250, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 0, 565,
	564, 566, 622, 2140, 0, 245, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 592, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 0, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 0, 417, 0, 250, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 245, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 0, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 249, 363, 364, 366, 0, 0,
	365, 595, 596, 0, 597, 0, 367, 368, 0, 598,
	0, 369, 370, 371, 0, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 0, 383, 384, 0, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 0, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 0, 417, 0, 250,
	0, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 0, 440, 0, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 0,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	2056, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 0, 565, 564, 566, 622, 2062, 0, 245, 0,
	567, 568, 623, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 2061,
	593, 594, 430, 0, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 249, 363, 364, 366, 0, 0,
	365, 595, 596, 0, 597, 0, 367, 368, 0, 598,
	0, 369, 370, 371, 0, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 0, 383, 384, 0, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 0, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 0, 417, 0, 250,
	0, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 0, 440, 0, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 0,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 0, 565, 564, 566, 622, 2049, 0, 245, 0,
	567, 568, 623, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 248, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 2051,
	593, 594, 430, 0, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 249, 363, 364, 366, 0, 0,
	365, 595, 596, 0, 597, 0, 367, 368, 0, 598,
	0, 369, 370, 371, 0, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 0, 383, 384, 0, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 0, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 0, 417, 0, 250,
	0, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 0, 440, 0, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 0,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 245, 565, 564, 566, 622, 0, 0, 0, 0,
	567, 568, 623, 569, 570, 571, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 2020, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 250, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 1148, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 1481,
	0, 245, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 1480, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 250, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 1472,
	0, 245, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 1471, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 250, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 1469,
	0, 245, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 1468, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 250, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 1464,
	0, 245, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 1463, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 250, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 1420,
	0, 245, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 250, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 1332,
	0, 245, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 250, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 1325,
	0, 245, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 1327, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 250, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 625,
	0, 245, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 250, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 236,
	0, 245, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 248,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 249, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 250, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 245, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 248, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	249, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 250, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 245, 565, 564,
	566, 622, 0, 0, 0, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 647, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 648, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 592, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 0, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 0, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 649, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	245, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 276, 581,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 2175, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 248, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 592, 593, 594, 430, 0, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 249, 363, 364, 366,
	0, 0, 365, 595, 596, 0, 597, 0, 367, 368,
	0, 598, 0, 369, 370, 371, 0, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 0, 383, 384, 0, 0, 385,
	0, 0, 0, 386, 387, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 0, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 0, 417,
	0, 250, 0, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 0, 440, 0, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 0, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 0, 511, 495,
	496, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 245, 565, 564, 566, 622, 0, 0,
	0, 0, 567, 568, 623, 569, 570, 571, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 2173, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 248, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 0, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 249,
	363, 364, 366, 0, 0, 365, 595, 596, 0, 597,
	0, 367, 368, 0, 598, 0, 369, 370, 371, 0,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 0, 383, 384,
	0, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 0, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 0, 417, 0, 250, 0, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 0, 440,
	0, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 0, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 245, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 2171, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 248, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 592, 593, 594,
	430, 0, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 249, 363, 364, 366, 0, 0, 365, 595,
	596, 0, 597, 0, 367, 368, 0, 598, 0, 369,
	370, 371, 0, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	0, 383, 384, 0, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 0, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 0, 417, 0, 250, 0, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 0, 440, 0, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 0, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 245,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 248, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	2105, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 249, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	250, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 245, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 578, 579, 580, 0, 275,
	276, 581, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 582, 583,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 0,
	248, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 590, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 2099, 593, 594, 430, 0, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 249, 363,
	364, 366, 0, 0, 365, 595, 596, 0, 597, 0,
	367, 368, 0, 598, 0, 369, 370, 371, 0, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 599, 0, 383, 384, 0,
	0, 385, 0, 0, 0, 386, 387, 0, 0, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 0, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	0, 417, 0, 250, 0, 427, 428, 0, 600, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 0, 440, 0,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 0, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 0,
	511, 495, 496, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 0,
	532, 533, 0, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 617, 545, 618, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 0, 560, 0, 0, 561,
	562, 563, 619, 620, 621, 245, 565, 564, 566, 622,
	0, 0, 0, 0, 567, 568, 623, 569, 570, 571,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 248, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 2068, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 249, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 0, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 0, 417, 0, 250, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 0, 565,
	564, 566, 622, 813, 0, 245, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 592, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 0, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 812, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 0, 417, 0, 0, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 811, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 245, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 2801, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 0, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 0, 363, 364, 366, 0, 0,
	365, 595, 596, 0, 597, 0, 367, 368, 0, 598,
	0, 369, 370, 371, 0, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 0, 383, 384, 0, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 0, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 0, 417, 0, 0,
	0, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 0, 440, 0, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 3835, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 0,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 0, 565, 564, 566, 622, 677, 0, 245, 0,
	567, 568, 623, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 1188, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 1186, 0, 275, 276, 581, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 0, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 0, 363, 364, 366, 0, 0,
	365, 595, 596, 0, 597, 0, 367, 368, 0, 598,
	0, 369, 370, 371, 0, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 0, 383, 384, 0, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 678, 0, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 0, 417, 0, 0,
	0, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 0, 440, 0, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 0,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 674, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 1189, 510, 0, 511, 495, 496, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 673, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 0, 565, 564, 566, 622, 677, 0, 245, 0,
	567, 568, 623, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 1188, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 1186, 0, 275, 276, 581, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 0, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 0, 363, 364, 366, 0, 0,
	365, 595, 596, 0, 597, 0, 367, 368, 0, 598,
	0, 369, 370, 371, 0, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 0, 383, 384, 0, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 678, 0, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 0, 417, 0, 0,
	0, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 0, 440, 0, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 0,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 674, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 1189, 510, 0, 511, 495, 496, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 673, 614, 615, 616, 0, 550, 0, 542, 1187,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 0, 565, 564, 566, 622, 634, 0, 245, 0,
	567, 568, 623, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 633, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 0, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 0, 363, 364, 366, 0, 0,
	365, 595, 596, 0, 597, 0, 367, 368, 0, 598,
	0, 369, 370, 371, 0, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 0, 383, 384, 0, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 0, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 0, 417, 0, 0,
	0, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 0, 440, 0, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 632, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 0,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 0, 565, 564, 566, 622, 245, 2788, 0, 0,
	567, 568, 623, 569, 570, 571, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 592, 593, 594,
	430, 0, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 0, 363, 364, 366, 0, 0, 365, 595,
	596, 0, 597, 0, 367, 368, 0, 598, 0, 369,
	370, 371, 0, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	0, 383, 384, 0, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 0, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 0, 417, 0, 0, 0, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 0, 440, 0, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 0, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 0,
	565, 564, 566, 622, 245, 3845, 0, 0, 567, 568,
	623, 569, 570, 571, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	0, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 0, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 245, 565, 564,
	566, 622, 0, 0, 0, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 3550, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 592, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 0, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 0, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	245, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 572, 0, 2505, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 276, 581,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 592, 593, 594, 430, 0, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 0, 363, 364, 366,
	0, 0, 365, 595, 596, 0, 597, 0, 367, 368,
	0, 598, 0, 369, 370, 371, 0, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 0, 383, 384, 0, 0, 385,
	0, 0, 0, 386, 387, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 0, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 0, 417,
	0, 0, 0, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 0, 440, 0, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 0, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 0, 511, 495,
	496, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 0, 565, 564, 566, 622, 245, 2788,
	0, 0, 567, 568, 623, 569, 570, 571, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 592,
	593, 594, 430, 0, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 0, 363, 364, 366, 0, 0,
	365, 595, 596, 0, 597, 0, 367, 368, 0, 598,
	0, 369, 370, 371, 0, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 0, 383, 384, 0, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 0, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 0, 417, 0, 0,
	0, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 2785, 0, 0,
	438, 439, 602, 0, 440, 0, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 0,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 245, 565, 564, 566, 622, 0, 0, 0, 0,
	567, 568, 623, 569, 570, 571, 0, 0, 251, 252,
	253, 254, 255, 256, 2150, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 0, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 2138,
	0, 245, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 0, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 677,
	0, 245, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 667,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 678, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 0, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 674, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 1504, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 673, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 1485,
	0, 245, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 1484, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 0, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 1478,
	0, 245, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 1477, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 0, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 1426,
	0, 245, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 1425, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 0, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 1409,
	0, 245, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 1407, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 0, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 1403,
	0, 245, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 0, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 1335,
	0, 245, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 0, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 0, 565, 564, 566, 622, 1319,
	0, 245, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 0, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 498, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 245, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 251, 252, 253, 254, 255, 256, 1169, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	0, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 0, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 511, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 245, 565, 564,
	566, 622, 0, 0, 0, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 251, 252, 253, 254, 255, 256,
	683, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 592, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 0, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 0, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	0, 565, 564, 566, 622, 677, 0, 245, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 667, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 665, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 592, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 0, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 666, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 678, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 0, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 668, 490, 0, 491, 492, 498, 499,
	493, 494, 674, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 669, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	673, 614, 615, 616, 0, 550, 0, 542, 671, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	0, 565, 564, 566, 622, 659, 0, 245, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 592, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 0, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 0, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 660, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	0, 565, 564, 566, 622, 657, 0, 245, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 592, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 0, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 0, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	0, 565, 564, 566, 622, 651, 0, 245, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 592, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 0, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 0, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	0, 565, 564, 566, 622, 629, 0, 245, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 592, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 0, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 0, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	245, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 276, 581,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 592, 593, 594, 430, 0, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 0, 363, 364, 366,
	0, 0, 365, 595, 596, 0, 597, 0, 367, 368,
	0, 598, 0, 369, 370, 371, 0, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 0, 383, 384, 0, 0, 385,
	0, 0, 0, 386, 387, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 0, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 0, 417,
	0, 0, 0, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 0, 440, 0, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 0, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 0, 511, 495,
	496, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 245, 565, 564, 566, 622, 0, 0,
	0, 0, 567, 568, 623, 569, 570, 571, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 3264, 593, 594, 430, 0, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 0,
	363, 364, 366, 0, 0, 365, 595, 596, 0, 597,
	0, 367, 368, 0, 598, 0, 369, 370, 371, 0,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 0, 383, 384,
	0, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 0, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 0, 417, 0, 0, 0, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 0, 440,
	0, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	471, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 0, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 245, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	351, 0, 352, 353, 354, 355, 356, 3212, 593, 594,
	430, 0, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 0, 363, 364, 366, 0, 0, 365, 595,
	596, 0, 597, 0, 367, 368, 0, 598, 0, 369,
	370, 371, 0, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	0, 383, 384, 0, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 0, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 0, 417, 0, 0, 0, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 0, 440, 0, 603, 441, 442, 434, 443, 444,
	445, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 467,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 0, 486, 487,
	488, 489, 609, 490, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 245,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 573, 574, 0, 266, 575, 267, 576,
	0, 577, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 578, 579, 580, 0, 275, 276, 581, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 288, 0, 289, 0, 290,
	291, 292, 293, 294, 295, 0, 296, 297, 298, 0,
	299, 300, 0, 0, 0, 0, 0, 0, 0, 301,
	302, 303, 304, 0, 305, 582, 583, 0, 309, 306,
	307, 0, 310, 308, 0, 311, 312, 313, 0, 0,
	314, 315, 316, 0, 317, 318, 0, 319, 320, 321,
	0, 322, 323, 584, 324, 325, 326, 328, 330, 327,
	331, 332, 333, 334, 585, 586, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 587, 0, 0, 0,
	338, 0, 339, 0, 0, 0, 340, 341, 588, 589,
	342, 343, 344, 345, 346, 347, 348, 349, 0, 350,
	590, 0, 591, 351, 0, 352, 353, 354, 355, 356,
	3153, 593, 594, 430, 0, 357, 358, 0, 359, 360,
	361, 362, 0, 0, 0, 0, 363, 364, 366, 0,
	0, 365, 595, 596, 0, 597, 0, 367, 368, 0,
	598, 0, 369, 370, 371, 0, 372, 0, 0, 0,
	373, 374, 375, 376, 377, 378, 0, 379, 381, 380,
	0, 382, 599, 0, 383, 384, 0, 0, 385, 0,
	0, 0, 386, 387, 0, 0, 388, 389, 390, 391,
	0, 392, 393, 395, 397, 394, 396, 398, 411, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 413, 0, 412, 0, 414, 415, 416, 421, 423,
	424, 419, 420, 422, 425, 426, 418, 0, 417, 0,
	0, 0, 427, 428, 0, 600, 429, 601, 431, 432,
	0, 0, 433, 0, 0, 0, 435, 436, 437, 0,
	0, 438, 439, 602, 0, 440, 0, 603, 441, 442,
	434, 443, 444, 445, 446, 447, 448, 449, 450, 0,
	451, 452, 604, 453, 454, 455, 605, 456, 457, 458,
	606, 459, 607, 460, 461, 0, 462, 0, 463, 464,
	465, 466, 467, 468, 469, 608, 471, 470, 472, 0,
	473, 0, 0, 0, 0, 0, 474, 0, 476, 477,
	478, 475, 479, 480, 481, 482, 0, 483, 484, 485,
	0, 486, 487, 488, 489, 609, 490, 0, 491, 492,
	498, 499, 493, 494, 500, 501, 502, 503, 504, 0,
	506, 507, 505, 508, 509, 510, 0, 511, 495, 496,
	512, 513, 0, 514, 515, 516, 517, 518, 519, 610,
	0, 520, 0, 521, 522, 523, 524, 497, 525, 530,
	611, 526, 527, 528, 529, 612, 0, 532, 533, 0,
	531, 0, 534, 535, 536, 537, 538, 539, 329, 540,
	0, 541, 613, 614, 615, 616, 0, 550, 0, 542,
	543, 544, 617, 545, 618, 0, 546, 547, 548, 549,
	0, 551, 552, 0, 0, 553, 554, 555, 557, 558,
	556, 559, 0, 560, 0, 0, 561, 562, 563, 619,
	620, 621, 245, 565, 564, 566, 622, 0, 0, 0,
	0, 567, 568, 623, 569, 570, 571, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 573, 574, 0, 266,
	575, 267, 576, 0, 577, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 578, 579, 580, 0, 275,
	276, 581, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 288, 0,
	289, 0, 290, 291, 292, 293, 294, 295, 0, 296,
	297, 298, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 301, 302, 303, 304, 0, 305, 582, 583,
	0, 309, 306, 307, 0, 310, 308, 0, 311, 312,
	313, 0, 0, 314, 315, 316, 0, 317, 318, 0,
	319, 320, 321, 0, 322, 323, 584, 324, 325, 326,
	328, 330, 327, 331, 332, 333, 334, 585, 586, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 587,
	0, 0, 0, 338, 0, 339, 0, 0, 0, 340,
	341, 588, 589, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, 590, 0, 591, 351, 0, 352, 353,
	354, 355, 356, 3151, 593, 594, 430, 0, 357, 358,
	0, 359, 360, 361, 362, 0, 0, 0, 0, 363,
	364, 366, 0, 0, 365, 595, 596, 0, 597, 0,
	367, 368, 0, 598, 0, 369, 370, 371, 0, 372,
	0, 0, 0, 373, 374, 375, 376, 377, 378, 0,
	379, 381, 380, 0, 382, 599, 0, 383, 384, 0,
	0, 385, 0, 0, 0, 386, 387, 0, 0, 388,
	389, 390, 391, 0, 392, 393, 395, 397, 394, 396,
	398, 411, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 413, 0, 412, 0, 414, 415,
	416, 421, 423, 424, 419, 420, 422, 425, 426, 418,
	0, 417, 0, 0, 0, 427, 428, 0, 600, 429,
	601, 431, 432, 0, 0, 433, 0, 0, 0, 435,
	436, 437, 0, 0, 438, 439, 602, 0, 440, 0,
	603, 441, 442, 434, 443, 444, 445, 446, 447, 448,
	449, 450, 0, 451, 452, 604, 453, 454, 455, 605,
	456, 457, 458, 606, 459, 607, 460, 461, 0, 462,
	0, 463, 464, 465, 466, 467, 468, 469, 608, 471,
	470, 472, 0, 473, 0, 0, 0, 0, 0, 474,
	0, 476, 477, 478, 475, 479, 480, 481, 482, 0,
	483, 484, 485, 0, 486, 487, 488, 489, 609, 490,
	0, 491, 492, 498, 499, 493, 494, 500, 501, 502,
	503, 504, 0, 506, 507, 505, 508, 509, 510, 0,
	511, 495, 496, 512, 513, 0, 514, 515, 516, 517,
	518, 519, 610, 0, 520, 0, 521, 522, 523, 524,
	497, 525, 530, 611, 526, 527, 528, 529, 612, 0,
	532, 533, 0, 531, 0, 534, 535, 536, 537, 538,
	539, 329, 540, 0, 541, 613, 614, 615, 616, 0,
	550, 0, 542, 543, 544, 617, 545, 618, 0, 546,
	547, 548, 549, 0, 551, 552, 0, 0, 553, 554,
	555, 557, 558, 556, 559, 0, 560, 0, 0, 561,
	562, 563, 619, 620, 621, 245, 565, 564, 566, 622,
	0, 0, 0, 0, 567, 568, 623, 569, 570, 571,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 573,
	574, 0, 266, 575, 267, 576, 0, 577, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 578, 579,
	580, 0, 275, 276, 581, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 288, 0, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 296, 297, 298, 0, 299, 300, 0, 0,
	0, 0, 0, 0, 0, 301, 302, 303, 304, 0,
	305, 582, 583, 0, 309, 306, 307, 0, 310, 308,
	0, 311, 312, 313, 0, 0, 314, 315, 316, 0,
	317, 318, 0, 319, 320, 321, 0, 322, 323, 584,
	324, 325, 326, 328, 330, 327, 331, 332, 333, 334,
	585, 586, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 587, 0, 0, 0, 338, 0, 339, 0,
	0, 0, 340, 341, 588, 589, 342, 343, 344, 345,
	346, 347, 348, 349, 0, 350, 590, 0, 591, 351,
	0, 352, 353, 354, 355, 356, 3137, 593, 594, 430,
	0, 357, 358, 0, 359, 360, 361, 362, 0, 0,
	0, 0, 363, 364, 366, 0, 0, 365, 595, 596,
	0, 597, 0, 367, 368, 0, 598, 0, 369, 370,
	371, 0, 372, 0, 0, 0, 373, 374, 375, 376,
	377, 378, 0, 379, 381, 380, 0, 382, 599, 0,
	383, 384, 0, 0, 385, 0, 0, 0, 386, 387,
	0, 0, 388, 389, 390, 391, 0, 392, 393, 395,
	397, 394, 396, 398, 411, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 413, 0, 412,
	0, 414, 415, 416, 421, 423, 424, 419, 420, 422,
	425, 426, 418, 0, 417, 0, 0, 0, 427, 428,
	0, 600, 429, 601, 431, 432, 0, 0, 433, 0,
	0, 0, 435, 436, 437, 0, 0, 438, 439, 602,
	0, 440, 0, 603, 441, 442, 434, 443, 444, 445,
	446, 447, 448, 449, 450, 0, 451, 452, 604, 453,
	454, 455, 605, 456, 457, 458, 606, 459, 607, 460,
	461, 0, 462, 0, 463, 464, 465, 466, 467, 468,
	469, 608, 471, 470, 472, 0, 473, 0, 0, 0,
	0, 0, 474, 0, 476, 477, 478, 475, 479, 480,
	481, 482, 0, 483, 484, 485, 0, 486, 487, 488,
	489, 609, 490, 0, 491, 492, 498, 499, 493, 494,
	500, 501, 502, 503, 504, 0, 506, 507, 505, 508,
	509, 510, 0, 511, 495, 496, 512, 513, 0, 514,
	515, 516, 517, 518, 519, 610, 0, 520, 0, 521,
	522, 523, 524, 497, 525, 530, 611, 526, 527, 528,
	529, 612, 0, 532, 533, 0, 531, 0, 534, 535,
	536, 537, 538, 539, 329, 540, 0, 541, 613, 614,
	615, 616, 0, 550, 0, 542, 543, 544, 617, 545,
	618, 0, 546, 547, 548, 549, 0, 551, 552, 0,
	0, 553, 554, 555, 557, 558, 556, 559, 0, 560,
	0, 0, 561, 562, 563, 619, 620, 621, 245, 565,
	564, 566, 622, 0, 0, 0, 0, 567, 568, 623,
	569, 570, 571, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 573, 574, 0, 266, 575, 267, 576, 0,
	577, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 578, 579, 580, 0, 275, 276, 581, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 288, 0, 289, 0, 290, 291,
	292, 293, 294, 295, 0, 296, 297, 298, 0, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 301, 302,
	303, 304, 0, 305, 582, 583, 0, 309, 306, 307,
	0, 310, 308, 0, 311, 312, 313, 0, 0, 314,
	315, 316, 0, 317, 318, 0, 319, 320, 321, 0,
	322, 323, 584, 324, 325, 326, 328, 330, 327, 331,
	332, 333, 334, 585, 586, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 587, 0, 0, 0, 338,
	0, 339, 0, 0, 0, 340, 341, 588, 589, 342,
	343, 344, 345, 346, 347, 348, 349, 0, 350, 590,
	0, 591, 351, 0, 352, 353, 354, 355, 356, 2738,
	593, 594, 430, 0, 357, 358, 0, 359, 360, 361,
	362, 0, 0, 0, 0, 363, 364, 366, 0, 0,
	365, 595, 596, 0, 597, 0, 367, 368, 0, 598,
	0, 369, 370, 371, 0, 372, 0, 0, 0, 373,
	374, 375, 376, 377, 378, 0, 379, 381, 380, 0,
	382, 599, 0, 383, 384, 0, 0, 385, 0, 0,
	0, 386, 387, 0, 0, 388, 389, 390, 391, 0,
	392, 393, 395, 397, 394, 396, 398, 411, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	413, 0, 412, 0, 414, 415, 416, 421, 423, 424,
	419, 420, 422, 425, 426, 418, 0, 417, 0, 0,
	0, 427, 428, 0, 600, 429, 601, 431, 432, 0,
	0, 433, 0, 0, 0, 435, 436, 437, 0, 0,
	438, 439, 602, 0, 440, 0, 603, 441, 442, 434,
	443, 444, 445, 446, 447, 448, 449, 450, 0, 451,
	452, 604, 453, 454, 455, 605, 456, 457, 458, 606,
	459, 607, 460, 461, 0, 462, 0, 463, 464, 465,
	466, 467, 468, 469, 608, 471, 470, 472, 0, 473,
	0, 0, 0, 0, 0, 474, 0, 476, 477, 478,
	475, 479, 480, 481, 482, 0, 483, 484, 485, 0,
	486, 487, 488, 489, 609, 490, 0, 491, 492, 498,
	499, 493, 494, 500, 501, 502, 503, 504, 0, 506,
	507, 505, 508, 509, 510, 0, 511, 495, 496, 512,
	513, 0, 514, 515, 516, 517, 518, 519, 610, 0,
	520, 0, 521, 522, 523, 524, 497, 525, 530, 611,
	526, 527, 528, 529, 612, 0, 532, 533, 0, 531,
	0, 534, 535, 536, 537, 538, 539, 329, 540, 0,
	541, 613, 614, 615, 616, 0, 550, 0, 542, 543,
	544, 617, 545, 618, 0, 546, 547, 548, 549, 0,
	551, 552, 0, 0, 553, 554, 555, 557, 558, 556,
	559, 0, 560, 0, 0, 561, 562, 563, 619, 620,
	621, 245, 565, 564, 566, 622, 0, 0, 0, 0,
	567, 568, 623, 569, 570, 571, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 573, 574, 0, 266, 575,
	267, 576, 0, 577, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 578, 579, 580, 0, 275, 276,
	581, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 288, 0, 289,
	0, 290, 291, 292, 293, 294, 295, 0, 296, 297,
	298, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 303, 304, 0, 305, 582, 583, 0,
	309, 306, 307, 0, 310, 308, 0, 311, 312, 313,
	0, 0, 314, 315, 316, 0, 317, 318, 0, 319,
	320, 321, 0, 322, 323, 584, 324, 325, 326, 328,
	330, 327, 331, 332, 333, 334, 585, 586, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 587, 0,
	0, 0, 338, 0, 339, 0, 0, 0, 340, 341,
	588, 589, 342, 343, 344, 345, 346, 347, 348, 349,
	0, 350, 590, 0, 591, 351, 0, 352, 353, 354,
	355, 356, 592, 593, 594, 430, 0, 357, 358, 0,
	359, 360, 361, 362, 0, 0, 0, 0, 363, 364,
	366, 0, 0, 365, 595, 596, 0, 597, 0, 367,
	368, 0, 598, 0, 369, 370, 371, 0, 372, 0,
	0, 0, 373, 374, 375, 376, 377, 378, 0, 379,
	381, 380, 0, 382, 599, 0, 383, 384, 0, 0,
	385, 0, 0, 0, 386, 387, 0, 0, 388, 389,
	390, 391, 0, 392, 393, 395, 397, 394, 396, 398,
	411, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 413, 0, 412, 0, 414, 415, 416,
	421, 423, 424, 419, 420, 422, 425, 426, 418, 0,
	417, 0, 0, 0, 427, 428, 0, 600, 429, 601,
	431, 432, 0, 0, 433, 0, 0, 0, 435, 436,
	437, 0, 0, 438, 439, 602, 0, 440, 0, 603,
	441, 442, 434, 443, 444, 445, 446, 447, 448, 449,
	450, 0, 451, 452, 604, 453, 454, 455, 605, 456,
	457, 458, 606, 459, 607, 460, 461, 0, 462, 0,
	463, 464, 465, 466, 467, 468, 469, 608, 471, 470,
	472, 0, 473, 0, 0, 0, 0, 0, 474, 0,
	476, 477, 478, 475, 479, 480, 481, 482, 0, 483,
	484, 485, 0, 486, 487, 488, 489, 609, 490, 0,
	491, 492, 660, 499, 493, 494, 500, 501, 502, 503,
	504, 0, 506, 507, 505, 508, 509, 510, 0, 511,
	495, 496, 512, 513, 0, 514, 515, 516, 517, 518,
	519, 610, 0, 520, 0, 521, 522, 523, 524, 497,
	525, 530, 611, 526, 527, 528, 529, 612, 0, 532,
	533, 0, 531, 0, 534, 535, 536, 537, 538, 539,
	329, 540, 0, 541, 613, 614, 615, 616, 0, 550,
	0, 542, 543, 544, 617, 545, 618, 0, 546, 547,
	548, 549, 0, 551, 552, 0, 0, 553, 554, 555,
	557, 558, 556, 559, 0, 560, 0, 0, 561, 562,
	563, 619, 620, 621, 245, 565, 564, 566, 622, 0,
	0, 0, 0, 567, 568, 623, 569, 570, 571, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 572, 0, 2085, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 573, 574,
	0, 266, 575, 267, 576, 0, 577, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 578, 579, 580,
	0, 275, 276, 581, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	288, 0, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 296, 297, 298, 0, 299, 300, 0, 0, 0,
	0, 0, 0, 0, 301, 302, 303, 304, 0, 305,
	582, 583, 0, 309, 306, 307, 0, 310, 308, 0,
	311, 312, 313, 0, 0, 314, 315, 316, 0, 317,
	318, 0, 319, 320, 321, 0, 322, 323, 584, 324,
	325, 326, 328, 330, 327, 331, 332, 333, 334, 585,
	586, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 587, 0, 0, 0, 338, 0, 339, 0, 0,
	0, 340, 341, 588, 589, 342, 343, 344, 345, 346,
	347, 348, 349, 0, 350, 590, 0, 591, 351, 0,
	352, 353, 354, 355, 356, 592, 593, 594, 430, 0,
	357, 358, 0, 359, 360, 361, 362, 0, 0, 0,
	0, 363, 364, 366, 0, 0, 365, 595, 596, 0,
	597, 0, 367, 368, 0, 598, 0, 369, 370, 371,
	0, 372, 0, 0, 0, 373, 374, 375, 376, 377,
	378, 0, 379, 381, 380, 0, 382, 599, 0, 383,
	384, 0, 0, 385, 0, 0, 0, 386, 387, 0,
	0, 388, 389, 390, 391, 0, 392, 393, 395, 397,
	394, 396, 398, 411, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 413, 0, 412, 0,
	414, 415, 416, 421, 423, 424, 419, 420, 422, 425,
	426, 418, 0, 417, 0, 0, 0, 427, 428, 0,
	600, 429, 601, 431, 432, 0, 0, 433, 0, 0,
	0, 435, 436, 437, 0, 0, 438, 439, 602, 0,
	440, 0, 603, 441, 442, 434, 443, 444, 445, 446,
	447, 448, 449, 450, 0, 451, 452, 604, 453, 454,
	455, 605, 456, 457, 458, 606, 459, 607, 460, 461,
	0, 462, 0, 463, 464, 465, 466, 467, 468, 469,
	608, 471, 470, 472, 0, 473, 0, 0, 0, 0,
	0, 474, 0, 476, 477, 478, 475, 479, 480, 481,
	482, 0, 483, 484, 485, 0, 486, 487, 488, 489,
	609, 490, 0, 491, 492, 498, 499, 493, 494, 500,
	501, 502, 503, 504, 0, 506, 507, 505, 508, 509,
	510, 0, 0, 495, 496, 512, 513, 0, 514, 515,
	516, 517, 518, 519, 610, 0, 520, 0, 521, 522,
	523, 524, 497, 525, 530, 611, 526, 527, 528, 529,
	612, 0, 532, 533, 0, 531, 0, 534, 535, 536,
	537, 538, 539, 329, 540, 0, 541, 613, 614, 615,
	616, 0, 550, 0, 542, 543, 544, 617, 545, 618,
	0, 546, 547, 548, 549, 0, 551, 552, 0, 0,
	553, 554, 555, 557, 558, 556, 559, 0, 560, 0,
	0, 561, 562, 563, 619, 620, 621, 245, 565, 564,
	566, 622, 0, 0, 0, 0, 567, 568, 623, 569,
	570, 571, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 572, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 573, 574, 0, 266, 575, 267, 576, 0, 577,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	578, 579, 580, 0, 275, 276, 581, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 288, 0, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 296, 297, 298, 0, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 301, 302, 303,
	304, 0, 305, 582, 583, 0, 309, 306, 307, 0,
	310, 308, 0, 311, 312, 313, 0, 0, 314, 315,
	316, 0, 317, 318, 0, 319, 320, 321, 0, 322,
	323, 584, 324, 325, 326, 328, 330, 327, 331, 332,
	333, 334, 585, 586, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 587, 0, 0, 0, 338, 0,
	339, 0, 0, 0, 340, 341, 588, 589, 342, 343,
	344, 345, 346, 347, 348, 349, 0, 350, 590, 0,
	591, 351, 0, 352, 353, 354, 355, 356, 1449, 593,
	594, 430, 0, 357, 358, 0, 359, 360, 361, 362,
	0, 0, 0, 0, 363, 364, 366, 0, 0, 365,
	595, 596, 0, 597, 0, 367, 368, 0, 598, 0,
	369, 370, 371, 0, 372, 0, 0, 0, 373, 374,
	375, 376, 377, 378, 0, 379, 381, 380, 0, 382,
	599, 0, 383, 384, 0, 0, 385, 0, 0, 0,
	386, 387, 0, 0, 388, 389, 390, 391, 0, 392,
	393, 395, 397, 394, 396, 398, 411, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 413,
	0, 412, 0, 414, 415, 416, 421, 423, 424, 419,
	420, 422, 425, 426, 418, 0, 417, 0, 0, 0,
	427, 428, 0, 600, 429, 601, 431, 432, 0, 0,
	433, 0, 0, 0, 435, 436, 437, 0, 0, 438,
	439, 602, 0, 440, 0, 603, 441, 442, 434, 443,
	444, 445, 446, 447, 448, 449, 450, 0, 451, 452,
	604, 453, 454, 455, 605, 456, 457, 458, 606, 459,
	607, 460, 461, 0, 462, 0, 463, 464, 465, 466,
	467, 468, 469, 608, 471, 470, 472, 0, 473, 0,
	0, 0, 0, 0, 474, 0, 476, 477, 478, 475,
	479, 480, 481, 482, 0, 483, 484, 485, 0, 486,
	487, 488, 489, 609, 490, 0, 491, 492, 498, 499,
	493, 494, 500, 501, 502, 503, 504, 0, 506, 507,
	505, 508, 509, 510, 0, 511, 495, 496, 512, 513,
	0, 514, 515, 516, 517, 518, 519, 610, 0, 520,
	0, 521, 522, 523, 524, 497, 525, 530, 611, 526,
	527, 528, 529, 612, 0, 532, 533, 0, 531, 0,
	534, 535, 536, 537, 538, 539, 329, 540, 0, 541,
	613, 614, 615, 616, 0, 550, 0, 542, 543, 544,
	617, 545, 618, 0, 546, 547, 548, 549, 0, 551,
	552, 0, 0, 553, 554, 555, 557, 558, 556, 559,
	0, 560, 0, 0, 561, 562, 563, 619, 620, 621,
	245, 565, 564, 566, 622, 0, 0, 0, 0, 567,
	568, 623, 569, 570, 571, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 573, 574, 0, 266, 575, 267,
	576, 0, 577, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 578, 579, 580, 0, 275, 276, 581,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 288, 0, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 296, 297, 298,
	0, 299, 300, 0, 0, 0, 0, 0, 0, 0,
	301, 302, 303, 304, 0, 305, 582, 583, 0, 309,
	306, 307, 0, 310, 308, 0, 311, 312, 313, 0,
	0, 314, 315, 316, 0, 317, 318, 0, 319, 320,
	321, 0, 322, 323, 584, 324, 325, 326, 328, 330,
	327, 331, 332, 333, 334, 585, 586, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 587, 0, 0,
	0, 338, 0, 339, 0, 0, 0, 340, 341, 588,
	589, 342, 343, 344, 345, 346, 347, 348, 349, 0,
	350, 590, 0, 591, 351, 0, 352, 353, 354, 355,
	356, 1386, 593, 594, 430, 0, 357, 358, 0, 359,
	360, 361, 362, 0, 0, 0, 0, 363, 364, 366,
	0, 0, 365, 595, 596, 0, 597, 0, 367, 368,
	0, 598, 0, 369, 370, 371, 0, 372, 0, 0,
	0, 373, 374, 375, 376, 377, 378, 0, 379, 381,
	380, 0, 382, 599, 0, 383, 384, 0, 0, 385,
	0, 0, 0, 386, 387, 0, 0, 388, 389, 390,
	391, 0, 392, 393, 395, 397, 394, 396, 398, 411,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 413, 0, 412, 0, 414, 415, 416, 421,
	423, 424, 419, 420, 422, 425, 426, 418, 0, 417,
	0, 0, 0, 427, 428, 0, 600, 429, 601, 431,
	432, 0, 0, 433, 0, 0, 0, 435, 436, 437,
	0, 0, 438, 439, 602, 0, 440, 0, 603, 441,
	442, 434, 443, 444, 445, 446, 447, 448, 449, 450,
	0, 451, 452, 604, 453, 454, 455, 605, 456, 457,
	458, 606, 459, 607, 460, 461, 0, 462, 0, 463,
	464, 465, 466, 467, 468, 469, 608, 471, 470, 472,
	0, 473, 0, 0, 0, 0, 0, 474, 0, 476,
	477, 478, 475, 479, 480, 481, 482, 0, 483, 484,
	485, 0, 486, 487, 488, 489, 609, 490, 0, 491,
	492, 498, 499, 493, 494, 500, 501, 502, 503, 504,
	0, 506, 507, 505, 508, 509, 510, 0, 511, 495,
	496, 512, 513, 0, 514, 515, 516, 517, 518, 519,
	610, 0, 520, 0, 521, 522, 523, 524, 497, 525,
	530, 611, 526, 527, 528, 529, 612, 0, 532, 533,
	0, 531, 0, 534, 535, 536, 537, 538, 539, 329,
	540, 0, 541, 613, 614, 615, 616, 0, 550, 0,
	542, 543, 544, 617, 545, 618, 0, 546, 547, 548,
	549, 0, 551, 552, 0, 0, 553, 554, 555, 557,
	558, 556, 559, 0, 560, 0, 0, 561, 562, 563,
	619, 620, 621, 245, 565, 564, 566, 622, 0, 0,
	0, 0, 567, 568, 623, 569, 570, 571, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 573, 574, 0,
	266, 575, 267, 576, 0, 577, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 578, 579, 580, 0,
	275, 276, 581, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 288,
	0, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	296, 297, 298, 0, 299, 300, 0, 0, 0, 0,
	0, 0, 0, 301, 302, 303, 304, 0, 305, 582,
	583, 0, 309, 306, 307, 0, 310, 308, 0, 311,
	312, 313, 0, 0, 314, 315, 316, 0, 317, 318,
	0, 319, 320, 321, 0, 322, 323, 584, 324, 325,
	326, 328, 330, 327, 331, 332, 333, 334, 585, 586,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	587, 0, 0, 0, 338, 0, 339, 0, 0, 0,
	340, 341, 588, 589, 342, 343, 344, 345, 346, 347,
	348, 349, 0, 350, 590, 0, 591, 351, 0, 352,
	353, 354, 355, 356, 592, 593, 594, 430, 0, 357,
	358, 0, 359, 360, 361, 362, 0, 0, 0, 0,
	363, 364, 366, 0, 0, 365, 595, 596, 0, 597,
	0, 367, 368, 0, 598, 0, 369, 370, 371, 0,
	372, 0, 0, 0, 373, 374, 375, 376, 377, 378,
	0, 379, 381, 380, 0, 382, 599, 0, 383, 384,
	0, 0, 385, 0, 0, 0, 386, 387, 0, 0,
	388, 389, 390, 391, 0, 392, 393, 395, 397, 394,
	396, 398, 411, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 413, 0, 412, 0, 414,
	415, 416, 421, 423, 424, 419, 420, 422, 425, 426,
	418, 0, 417, 0, 0, 0, 427, 428, 0, 600,
	429, 601, 431, 432, 0, 0, 433, 0, 0, 0,
	435, 436, 437, 0, 0, 438, 439, 602, 0, 440,
	0, 603, 441, 442, 434, 443, 444, 445, 446, 447,
	448, 449, 450, 0, 451, 452, 604, 453, 454, 455,
	605, 456, 457, 458, 606, 459, 607, 460, 461, 0,
	462, 0, 463, 464, 465, 466, 467, 468, 469, 608,
	1121, 470, 472, 0, 473, 0, 0, 0, 0, 0,
	474, 0, 476, 477, 478, 475, 479, 480, 481, 482,
	0, 483, 484, 485, 0, 486, 487, 488, 489, 609,
	490, 0, 491, 492, 498, 499, 493, 494, 500, 501,
	502, 503, 504, 0, 506, 507, 505, 508, 509, 510,
	0, 511, 495, 496, 512, 513, 0, 514, 515, 516,
	517, 518, 519, 610, 0, 520, 0, 521, 522, 523,
	524, 497, 525, 530, 611, 526, 527, 528, 529, 612,
	0, 532, 533, 0, 531, 0, 534, 535, 536, 537,
	538, 539, 329, 540, 0, 541, 613, 614, 615, 616,
	0, 550, 0, 542, 543, 544, 617, 545, 618, 0,
	546, 547, 548, 549, 0, 551, 552, 0, 0, 553,
	554, 555, 557, 558, 556, 559, 0, 560, 0, 0,
	561, 562, 563, 619, 620, 621, 245, 565, 564, 566,
	622, 0, 0, 0, 0, 567, 568, 623, 569, 570,
	571, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	573, 574, 0, 266, 575, 267, 576, 0, 577, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 578,
	579, 580, 0, 275, 276, 581, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 288, 0, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 296, 297, 298, 0, 299, 300, 0,
	0, 0, 0, 0, 0, 0, 301, 302, 303, 304,
	0, 305, 582, 583, 0, 309, 306, 307, 0, 310,
	308, 0, 311, 312, 313, 0, 0, 314, 315, 316,
	0, 317, 318, 0, 319, 320, 321, 0, 322, 323,
	584, 324, 325, 326, 328, 330, 327, 331, 332, 333,
	334, 585, 586, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 587, 0, 0, 0, 338, 0, 339,
	0, 0, 0, 340, 341, 588, 589, 342, 343, 344,
	345, 346, 347, 348, 349, 0, 350, 590, 0, 591,
	0, 0, 352, 353, 354, 355, 356, 592, 593, 594,
	430, 0, 357, 358, 0, 359, 360, 361, 362, 0,
	0, 0, 0, 363, 364, 366, 0, 0, 365, 595,
	596, 0, 597, 0, 367, 368, 0, 598, 0, 369,
	370, 371, 0, 372, 0, 0, 0, 373, 374, 375,
	376, 377, 378, 0, 379, 381, 380, 0, 382, 599,
	0, 383, 384, 0, 0, 385, 0, 0, 0, 386,
	387, 0, 0, 388, 389, 390, 391, 0, 392, 393,
	395, 397, 394, 396, 398, 411, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 413, 0,
	412, 0, 414, 415, 416, 421, 423, 424, 419, 420,
	422, 425, 426, 418, 0, 417, 0, 0, 0, 427,
	428, 0, 600, 429, 601, 431, 432, 0, 0, 433,
	0, 0, 0, 435, 436, 437, 0, 0, 438, 439,
	602, 0, 440, 0, 603, 441, 442, 434, 443, 444,
	0, 446, 447, 448, 449, 450, 0, 451, 452, 604,
	453, 454, 455, 605, 456, 457, 458, 606, 459, 607,
	460, 461, 0, 462, 0, 463, 464, 465, 466, 0,
	468, 469, 608, 471, 470, 472, 0, 473, 0, 0,
	0, 0, 0, 474, 0, 476, 477, 478, 475, 479,
	480, 481, 482, 0, 483, 484, 485, 0, 486, 487,
	488, 489, 609, 0, 0, 491, 492, 498, 499, 493,
	494, 500, 501, 502, 503, 504, 0, 506, 507, 505,
	508, 509, 510, 0, 511, 495, 496, 512, 513, 0,
	514, 515, 516, 517, 518, 519, 610, 0, 520, 0,
	521, 522, 523, 524, 497, 525, 530, 611, 526, 527,
	528, 529, 612, 0, 532, 533, 0, 531, 0, 534,
	535, 536, 537, 538, 539, 329, 540, 0, 541, 613,
	614, 615, 616, 0, 550, 0, 542, 543, 544, 617,
	545, 618, 0, 546, 547, 548, 549, 0, 551, 552,
	0, 0, 553, 554, 555, 557, 558, 556, 559, 0,
	560, 0, 0, 561, 562, 563, 619, 620, 621, 0,
	565, 564, 566, 622, 0, 0, 0, 0, 567, 568,
	623, 569, 570, 571, 1661, 1662, 0, 1694, 1695, 1696,
	1704, 1705, 1706, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1697, 1692, 0, 0, 0,
	0, 0, 0, 1664, 0, 0, 0, 0, 0, 0,
	0, 1710, 0, 0, 1661, 1662, 0, 1694, 1695, 1696,
	1704, 1705, 1706, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1697, 1692, 1663, 0, 0,
	0, 0, 0, 1664, 0, 0, 0, 1683, 0, 0,
	0, 1710, 0, 0, 0, 0, 1680, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1663, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1683, 0, 0,
	0, 0, 0, 0, 0, 0, 1680, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1686, 1687, 1688,
	1689, 0, 0, 0, 0, 0, 0, 1669, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1686, 1687, 1688,
	1689, 0, 1701, 0, 0, 1711, 0, 1669, 0, 0,
	0, 1691, 1693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1707, 0, 1708,
	0, 0, 0, 0, 0, 0, 1678, 1679, 0, 0,
	0, 0, 1701, 0, 0, 1711, 0, 0, 0, 0,
	0, 1691, 1693, 0, 1699, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1707, 1684, 1708,
	0, 0, 0, 0, 0, 0, 1678, 1679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1699, 1661, 1662, 0, 1694, 1695,
	1696, 1704, 1705, 1706, 0, 0, 0, 0, 1684, 1709,
	0, 0, 0, 0, 0, 0, 1697, 1692, 0, 0,
	0, 0, 0, 0, 1664, 0, 0, 1698, 0, 0,
	0, 0, 1710, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1709,
	0, 0, 0, 0, 0, 0, 0, 0, 1663, 0,
	0, 0, 0, 0, 0, 0, 0, 1698, 1683, 0,
	0, 0, 0, 0, 0, 0, 0, 1680, 0, 0,
	0, 0, 0, 0, 0, 1690, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1690, 0, 0, 0, 0,
	1702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1685, 0, 0, 1686, 1687,
	1688, 1689, 0, 0, 0, 0, 0, 0, 1669, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1661, 1662, 0, 1694, 1695, 1696,
	1704, 1705, 1706, 1701, 0, 0, 1711, 0, 0, 0,
	0, 0, 1691, 1693, 0, 1697, 1692, 0, 0, 0,
	0, 0, 0, 1664, 0, 0, 0, 0, 1707, 0,
	1708, 1710, 0, 0, 0, 1700, 0, 1678, 1679, 1675,
	1676, 1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665,
	1666, 1667, 1668, 1670, 1671, 1699, 0, 1663, 0, 4157,
	0, 0, 0, 0, 0, 0, 0, 1683, 0, 1684,
	0, 0, 0, 0, 0, 1700, 1680, 0, 0, 1675,
	1676, 1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665,
	1666, 1667, 1668, 1670, 1671, 0, 0, 0, 0, 4068,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1709, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1686, 1687, 1688,
	1689, 0, 0, 0, 0, 0, 0, 1669, 0, 1661,
	1662, 0, 1694, 1695, 1696, 1704, 1705, 1706, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1697, 1692, 0, 0, 0, 0, 1690, 0, 1664, 0,
	0, 0, 1701, 0, 0, 1711, 1710, 0, 0, 0,
	0, 1691, 1693, 0, 0, 0, 1685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1707, 0, 1708,
	0, 0, 1663, 0, 0, 0, 1678, 1679, 0, 0,
	0, 1702, 1683, 0, 0, 0, 0, 0, 0, 0,
	0, 1680, 0, 0, 1699, 1661, 1662, 0, 1694, 1695,
	1696, 1704, 1705, 1706, 0, 0, 0, 0, 1684, 0,
	0, 0, 0, 0, 0, 0, 1697, 1692, 0, 0,
	0, 0, 0, 0, 1664, 0, 0, 0, 0, 0,
	0, 0, 1710, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1709,
	0, 0, 0, 0, 0, 0, 0, 0, 1663, 0,
	0, 0, 1686, 1687, 1688, 1689, 0, 1698, 1683, 0,
	0, 0, 1669, 0, 0, 0, 1700, 1680, 0, 0,
	1675, 1676, 1682, 1703, 1681, 1677, 0, 1674, 1672, 1673,
	1665, 1666, 1667, 1668, 1670, 1671, 0, 0, 0, 0,
	4067, 0, 0, 0, 0, 0, 0, 1701, 0, 0,
	1711, 0, 0, 0, 0, 0, 1691, 1693, 0, 0,
	0, 0, 0, 0, 0, 1690, 0, 0, 0, 0,
	0, 0, 1707, 0, 1708, 0, 0, 0, 0, 0,
	0, 1678, 1679, 0, 0, 1685, 0, 0, 1686, 1687,
	1688, 1689, 0, 0, 0, 0, 0, 0, 1669, 1699,
	1661, 1662, 0, 1694, 1695, 1696, 1704, 1705, 1706, 0,
	1702, 0, 0, 1684, 0, 0, 0, 0, 0, 0,
	0, 1697, 1692, 0, 0, 0, 0, 0, 0, 1664,
	0, 0, 0, 1701, 0, 0, 1711, 1710, 0, 0,
	0, 0, 1691, 1693, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 0, 1707, 0,
	1708, 0, 0, 1663, 0, 0, 0, 1678, 1679, 0,
	0, 0, 1698, 1683, 0, 0, 0, 0, 0, 0,
	0, 0, 1680, 0, 0, 1699, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1684,
	0, 0, 0, 0, 0, 1700, 0, 0, 0, 1675,
	1676, 1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665,
	1666, 1667, 1668, 1670, 1671, 0, 0, 0, 0, 3913,
	1690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1709, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1685, 0, 0, 1686, 1687, 1688, 1689, 0, 1698, 0,
	0, 0, 0, 1669, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1702, 0, 0, 0, 0,
	0, 1661, 1662, 0, 1694, 1695, 1696, 1704, 1705, 1706,
	0, 0, 0, 0, 0, 0, 0, 0, 1701, 0,
	0, 1711, 1697, 1692, 0, 0, 0, 1691, 1693, 0,
	1664, 0, 0, 0, 0, 0, 1690, 0, 1710, 0,
	0, 0, 0, 1707, 0, 1708, 0, 0, 0, 0,
	0, 0, 1678, 1679, 0, 0, 1685, 0, 0, 0,
	0, 0, 0, 0, 1663, 0, 0, 0, 0, 0,
	1699, 0, 0, 0, 1683, 0, 0, 0, 0, 0,
	0, 1702, 0, 1680, 1684, 0, 0, 0, 0, 0,
	1700, 0, 0, 0, 1675, 1676, 1682, 1703, 1681, 1677,
	0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671,
	0, 0, 0, 0, 3773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1709, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1698, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1686, 1687, 1688, 1689, 0, 0,
	0, 0, 0, 0, 1669, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1700, 0, 0, 0,
	1675, 1676, 1682, 1703, 1681, 1677, 0, 1674, 1672, 1673,
	1665, 1666, 1667, 1668, 1670, 1671, 0, 0, 0, 1701,
	3716, 1690, 1711, 0, 0, 0, 0, 0, 1691, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1685, 0, 0, 1707, 0, 1708, 0, 0, 0,
	0, 0, 0, 1678, 1679, 0, 0, 1661, 1662, 0,
	1694, 1695, 1696, 1704, 1705, 1706, 1702, 0, 0, 0,
	0, 1699, 0, 0, 0, 0, 0, 0, 1697, 1692,
	0, 0, 0, 0, 0, 1684, 1664, 0, 0, 0,
	0, 0, 0, 0, 1710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1663, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	1683, 0, 0, 0, 0, 0, 0, 0, 0, 1680,
	0, 0, 0, 0, 1698, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1700, 0, 0, 0, 1675, 1676, 1682, 1703, 1681,
	1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670,
	1671, 0, 0, 0, 0, 3715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1690, 0, 0, 0, 0, 0, 0, 0,
	1686, 1687, 1688, 1689, 0, 0, 0, 0, 0, 0,
	1669, 0, 1685, 1661, 1662, 0, 1694, 1695, 1696, 1704,
	1705, 1706, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1697, 1692, 0, 1702, 0, 0,
	0, 0, 1664, 0, 0, 1701, 0, 0, 1711, 0,
	1710, 0, 0, 0, 1691, 1693, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1707, 0, 1708, 0, 0, 0, 1663, 0, 0, 1678,
	1679, 0, 0, 0, 0, 0, 1683, 0, 0, 0,
	0, 0, 0, 0, 0, 1680, 0, 1699, 1661, 1662,
	0, 1694, 1695, 1696, 1704, 1705, 1706, 0, 0, 0,
	0, 1684, 0, 0, 0, 0, 0, 0, 0, 1697,
	1692, 0, 0, 0, 0, 0, 0, 1664, 0, 0,
	0, 0, 1700, 0, 0, 1710, 1675, 1676, 1682, 1703,
	1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668,
	1670, 1671, 1709, 0, 0, 0, 3714, 0, 0, 0,
	0, 1663, 0, 0, 0, 0, 1686, 1687, 1688, 1689,
	1698, 1683, 0, 0, 0, 0, 1669, 0, 0, 0,
	1680, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1701, 0, 0, 1711, 0, 0, 0, 0, 0,
	1691, 1693, 0, 0, 0, 0, 0, 0, 1690, 0,
	0, 0, 0, 0, 0, 0, 1707, 0, 1708, 0,
	0, 0, 0, 0, 0, 1678, 1679, 0, 1685, 0,
	0, 1686, 1687, 1688, 1689, 0, 0, 0, 0, 0,
	0, 1669, 0, 1699, 1661, 1662, 0, 1694, 1695, 1696,
	1704, 1705, 1706, 1702, 0, 0, 0, 1684, 0, 0,
	0, 0, 0, 0, 0, 1697, 1692, 0, 0, 0,
	0, 0, 0, 1664, 0, 0, 1701, 0, 0, 1711,
	0, 1710, 0, 0, 0, 1691, 1693, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1709, 0,
	0, 1707, 0, 1708, 0, 0, 0, 1663, 0, 0,
	1678, 1679, 0, 0, 0, 0, 1698, 1683, 0, 0,
	0, 0, 0, 0, 0, 0, 1680, 0, 1699, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1684, 0, 0, 0, 0, 0, 1700, 0,
	0, 0, 1675, 1676, 1682, 1703, 1681, 1677, 0, 1674,
	1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 0,
	0, 0, 3411, 0, 1690, 0, 0, 0, 0, 0,
	0, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1685, 0, 0, 1686, 1687, 1688,
	1689, 1698, 0, 0, 0, 0, 0, 1669, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1702,
	0, 0, 0, 0, 0, 0, 0, 0, 1661, 1662,
	0, 1694, 1695, 1696, 1704, 1705, 1706, 0, 0, 0,
	0, 0, 1701, 0, 0, 1711, 0, 0, 0, 1697,
	1692, 1691, 1693, 0, 0, 0, 0, 1664, 0, 1690,
	0, 0, 0, 0, 0, 1710, 0, 1707, 0, 1708,
	0, 0, 0, 0, 0, 0, 1678, 1679, 0, 1685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1663, 0, 0, 1699, 0, 0, 0, 0, 0,
	0, 1683, 0, 0, 1702, 0, 0, 0, 1684, 0,
	1680, 0, 0, 0, 1700, 0, 0, 0, 1675, 1676,
	1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666,
	1667, 1668, 1670, 1671, 0, 0, 0, 0, 2947, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1698, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1686, 1687, 1688, 1689, 0, 0, 0, 0, 0,
	0, 1669, 0, 0, 0, 0, 0, 0, 0, 1700,
	0, 0, 0, 1675, 1676, 1682, 1703, 1681, 1677, 0,
	1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0,
	0, 0, 0, 2946, 0, 1690, 1701, 0, 0, 1711,
	0, 0, 0, 0, 0, 1691, 1693, 0, 0, 0,
	0, 0, 0, 0, 0, 1685, 0, 0, 0, 0,
	0, 1707, 0, 1708, 0, 0, 0, 0, 0, 0,
	1678, 1679, 0, 0, 0, 0, 0, 0, 0, 0,
	1702, 0, 0, 0, 0, 0, 0, 0, 1699, 1661,
	1662, 0, 1694, 1695, 1696, 1704, 1705, 1706, 0, 0,
	0, 0, 1684, 0, 0, 0, 0, 0, 0, 0,
	1697, 1692, 0, 0, 0, 0, 0, 0, 1664, 0,
	0, 0, 0, 0, 0, 0, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	0, 0, 1663, 0, 0, 0, 0, 0, 0, 0,
	0, 1698, 1683, 0, 0, 0, 0, 0, 0, 0,
	0, 1680, 0, 0, 0, 1700, 0, 0, 0, 1675,
	1676, 1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665,
	1666, 1667, 1668, 1670, 1671, 0, 0, 0, 0, 2945,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1690,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1685,
	0, 0, 1686, 1687, 1688, 1689, 0, 0, 0, 0,
	0, 0, 1669, 4285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1702, 0, 0, 0, 0, 0,
	0, 0, 0, 1661, 1662, 0, 1694, 1695, 1696, 1704,
	1705, 1706, 0, 0, 0, 0, 0, 1701, 0, 0,
	1711, 0, 0, 0, 1697, 1692, 1691, 1693, 0, 0,
	2882, 0, 1664, 0, 0, 0, 0, 0, 0, 0,
	1710, 0, 1707, 0, 1708, 0, 0, 0, 0, 0,
	0, 1678, 1679, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1663, 0, 0, 1699,
	0, 0, 0, 0, 0, 0, 1683, 0, 0, 0,
	0, 0, 0, 1684, 0, 1680, 0, 0, 0, 1700,
	0, 0, 0, 1675, 1676, 1682, 1703, 1681, 1677, 0,
	1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0,
	0, 0, 0, 2944, 0, 0, 0, 0, 0, 0,
	0, 2883, 0, 0, 1709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1698, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1686, 1687, 1688, 1689,
	0, 0, 0, 0, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 0, 4284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1690, 1701, 0, 0, 1711, 0, 0, 0, 0, 0,
	1691, 1693, 0, 0, 0, 0, 0, 0, 0, 0,
	1685, 0, 0, 0, 0, 0, 1707, 0, 1708, 0,
	0, 0, 0, 0, 0, 1678, 1679, 0, 0, 0,
	0, 0, 0, 1661, 1662, 1702, 1694, 1695, 1696, 1704,
	1705, 1706, 0, 1699, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1697, 1692, 0, 1684, 0, 0,
	0, 0, 1664, 0, 0, 0, 0, 0, 0, 0,
	1710, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1663, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 1683, 0, 0, 0,
	0, 0, 0, 0, 0, 1680, 1698, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1700, 0, 0, 0, 1675, 1676, 1682, 1703, 1681, 1677,
	0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1690, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1686, 1687, 1688, 1689,
	0, 0, 2479, 0, 1685, 0, 1669, 0, 3031, 1661,
	1662, 3030, 1694, 1695, 1696, 1704, 1705, 1706, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1702,
	1697, 1692, 0, 0, 0, 2478, 0, 0, 1664, 0,
	0, 1701, 0, 0, 1711, 0, 1710, 0, 0, 0,
	1691, 1693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1707, 0, 1708, 0,
	0, 0, 1663, 0, 0, 1678, 1679, 0, 0, 0,
	0, 0, 1683, 0, 0, 0, 0, 0, 0, 0,
	0, 1680, 0, 1699, 0, 0, 0, 1661, 1662, 0,
	1694, 1695, 1696, 1704, 1705, 1706, 0, 1684, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1697, 1692,
	0, 0, 0, 0, 1700, 0, 1664, 0, 1675, 1676,
	1682, 1703, 1681, 1677, 1710, 1674, 1672, 1673, 1665, 1666,
	1667, 1668, 1670, 1671, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1663, 0, 1686, 1687, 1688, 1689, 1698, 0, 0, 0,
	1683, 0, 1669, 0, 0, 0, 0, 0, 0, 1680,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1701, 0, 0,
	1711, 0, 0, 0, 0, 0, 1691, 1693, 0, 0,
	0, 0, 0, 0, 1690, 0, 0, 0, 0, 0,
	0, 0, 1707, 0, 1708, 0, 0, 0, 0, 0,
	0, 1678, 1679, 0, 1685, 0, 0, 0, 0, 0,
	1686, 1687, 1688, 1689, 0, 0, 0, 0, 0, 1699,
	1669, 0, 0, 0, 0, 0, 0, 0, 0, 1702,
	0, 0, 0, 1684, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1701, 0, 0, 1711, 0,
	0, 0, 0, 0, 1691, 1693, 0, 0, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 0, 0, 0,
	1707, 0, 1708, 0, 0, 0, 0, 0, 0, 1678,
	1679, 0, 1698, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1684, 0, 0, 1700, 0, 0, 0, 1675, 1676,
	1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666,
	1667, 1668, 1670, 1671, 0, 0, 0, 0, 0, 0,
	1690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	1685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1698, 977, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1702, 0, 0, 0, 0,
	1661, 1662, 0, 1694, 1695, 1696, 1704, 1705, 1706, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1697, 1692, 0, 0, 0, 0, 0, 0, 1664,
	0, 0, 0, 0, 0, 0, 0, 1710, 1690, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1685, 0,
	0, 0, 0, 1663, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1683, 0, 0, 0, 0, 0, 0,
	0, 0, 1680, 1702, 0, 0, 0, 0, 0, 0,
	1700, 0, 0, 0, 1675, 1676, 1682, 1703, 1681, 1677,
	0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1686, 1687, 1688, 1689, 0, 0, 0,
	0, 0, 0, 1669, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1700, 0,
	0, 0, 1675, 1676, 1682, 1703, 1681, 1677, 0, 1674,
	1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 1701, 0,
	0, 1711, 0, 0, 0, 0, 0, 1691, 1693, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1707, 0, 1708, 0, 0, 0, 0,
	0, 0, 1678, 1679, 0, 0, 1661, 1662, 0, 1694,
	1695, 1696, 1704, 1705, 1706, 0, 0, 0, 0, 0,
	1699, 0, 0, 0, 0, 0, 0, 1697, 1692, 0,
	0, 0, 0, 0, 1684, 1664, 0, 0, 0, 0,
	0, 0, 0, 1710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1663,
	0, 0, 0, 0, 0, 1709, 0, 0, 0, 1683,
	0, 0, 0, 0, 0, 0, 0, 0, 1680, 0,
	0, 0, 0, 1698, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1690, 0, 0, 0, 0, 0, 0, 0, 1686,
	1687, 1688, 1689, 0, 0, 0, 0, 0, 0, 1669,
	0, 1685, 1661, 1662, 3037, 1694, 1695, 1696, 1704, 1705,
	1706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1697, 1692, 0, 1702, 0, 3032, 0,
	0, 1664, 0, 0, 1701, 0, 0, 1711, 0, 1710,
	0, 0, 0, 1691, 1693, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1707,
	0, 1708, 0, 0, 3392, 1663, 0, 0, 1678, 1679,
	0, 0, 0, 0, 0, 1683, 0, 0, 0, 0,
	0, 0, 0, 0, 1680, 0, 1699, 1661, 1662, 0,
	1694, 1695, 1696, 1704, 1705, 1706, 0, 0, 0, 0,
	1684, 0, 0, 0, 0, 0, 0, 0, 1697, 1692,
	0, 0, 0, 0, 0, 0, 1664, 0, 0, 0,
	0, 1700, 0, 0, 1710, 1675, 1676, 1682, 1703, 1681,
	1677, 0, 1674, 1672, 1673, 1665, 1666, 1667, 1668, 1670,
	1671, 1709, 0, 0, 0, 0, 0, 0, 0, 0,
	1663, 0, 0, 0, 0, 1686, 1687, 1688, 1689, 1698,
	1683, 0, 0, 0, 0, 1669, 0, 0, 0, 1680,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1701, 0, 0, 1711, 0, 0, 0, 0, 0, 1691,
	1693, 0, 0, 0, 0, 0, 0, 1690, 0, 0,
	0, 0, 0, 0, 0, 1707, 0, 1708, 0, 0,
	0, 0, 0, 0, 1678, 1679, 0, 1685, 0, 0,
	1686, 1687, 1688, 1689, 0, 0, 0, 0, 0, 0,
	1669, 0, 1699, 1661, 1662, 0, 1694, 1695, 1696, 1704,
	1705, 1706, 1702, 0, 0, 0, 1684, 0, 0, 0,
	0, 0, 0, 0, 1697, 1692, 0, 0, 0, 2948,
	0, 0, 1664, 0, 0, 1701, 0, 0, 1711, 0,
	1710, 0, 0, 0, 1691, 1693, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1709, 0, 0,
	1707, 0, 1708, 0, 0, 0, 1663, 0, 0, 1678,
	1679, 0, 0, 0, 0, 1698, 1683, 0, 0, 0,
	0, 0, 0, 0, 0, 1680, 0, 1699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1684, 0, 0, 0, 0, 0, 1700, 0, 0,
	0, 1675, 1676, 1682, 1703, 1681, 1677, 0, 1674, 1672,
	1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 0, 0,
	0, 0, 0, 1690, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1685, 0, 0, 1686, 1687, 1688, 1689,
	1698, 0, 0, 0, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1702, 0,
	2999, 0, 0, 0, 1661, 1662, 0, 1694, 1695, 1696,
	1704, 1705, 1706, 0, 0, 0, 0, 0, 0, 0,
	0, 1701, 0, 0, 1711, 1697, 1692, 0, 0, 0,
	1691, 1693, 0, 1664, 0, 0, 0, 0, 1690, 0,
	0, 1710, 0, 0, 0, 0, 1707, 0, 1708, 0,
	0, 0, 0, 0, 0, 1678, 1679, 0, 1685, 0,
	0, 0, 0, 0, 0, 0, 0, 1663, 0, 0,
	0, 0, 0, 1699, 0, 0, 0, 1683, 0, 0,
	0, 0, 0, 1702, 0, 0, 1680, 1684, 0, 0,
	0, 0, 0, 1700, 0, 0, 0, 1675, 1676, 1682,
	1703, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666, 1667,
	1668, 1670, 1671, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1698, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1686, 1687, 1688,
	1689, 0, 0, 0, 0, 0, 0, 1669, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1700, 0,
	0, 0, 1675, 1676, 1682, 1703, 1681, 1677, 0, 1674,
	1672, 1673, 1665, 1666, 1667, 1668, 1670, 1671, 0, 0,
	0, 0, 1701, 0, 1690, 1711, 0, 0, 0, 0,
	0, 1691, 1693, 1661, 1662, 0, 1694, 1695, 1696, 1704,
	1705, 1706, 0, 0, 1685, 0, 0, 1707, 0, 1708,
	0, 0, 0, 0, 1697, 1692, 1678, 1679, 0, 0,
	0, 0, 1664, 0, 0, 0, 0, 0, 0, 1702,
	1710, 0, 0, 0, 1699, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1684, 0,
	0, 0, 0, 0, 0, 0, 1663, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1683, 0, 0, 0,
	0, 0, 0, 0, 0, 1680, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1698, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1700, 0, 0, 0, 1675, 1676,
	1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666,
	1667, 1668, 1670, 1671, 0, 0, 1686, 1687, 1688, 1689,
	0, 0, 0, 0, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 0, 0, 1690, 0, 0, 0, 0,
	0, 0, 0, 0, 1661, 1662, 0, 1694, 1695, 1696,
	1704, 1705, 1706, 0, 0, 1685, 0, 0, 0, 0,
	0, 1701, 0, 0, 1711, 0, 1692, 0, 0, 0,
	1691, 1693, 0, 1664, 0, 0, 0, 0, 0, 0,
	1702, 1710, 0, 0, 0, 0, 1707, 0, 1708, 0,
	0, 0, 0, 0, 0, 1678, 1679, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1663, 0, 0,
	0, 0, 0, 1699, 0, 0, 0, 1683, 0, 0,
	0, 0, 0, 0, 0, 0, 1680, 1684, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 0, 1700, 0, 0, 0, 1675,
	1676, 1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665,
	1666, 1667, 1668, 1670, 1671, 0, 0, 1686, 1687, 1688,
	1689, 0, 0, 0, 0, 0, 0, 1669, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1701, 0, 1690, 1711, 0, 0, 0, 0,
	0, 1691, 1693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1678, 1679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1702,
	0, 0, 0, 0, 1699, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1684, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1700, 0, 0, 0, 1675, 1676,
	1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665, 1666,
	1667, 1668, 1670, 1671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1690, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1700, 0, 0, 0, 1675,
	1676, 1682, 1703, 1681, 1677, 0, 1674, 1672, 1673, 1665,
	1666, 1667, 1668, 1670, 1671,
}
var sqlPact = [...]int{

	6038, -1000, -1000, -1000, -1000, 146, -1000, -1000, 143, 139,
	137, 134, 133, 132, 131, 130, 128, -1000, -1000, -1000,
	-1000, -1000, -1000, 125, -1000, -1000, 123, -1000, 120, 119,
	118, -1000, -1000, 116, -1000, 115, -1000, -1000, -1000, -1000,
	114, 113, 112, 81237, 80717, 81750, 2167, 99333, 87934, 1776,
	72425, 98813, 71905, 98293, 97773, 2577, 110, -1000, 97253, 109,
	108, 107, -1000, 96733, -1000, 1951, -1000, 105, 1979, 58888,
	104, 101, 100, 2106, 95, -1000, 94, 93, -1000, 9898,
	1618, -1000, 92, 91, -1000, 6914, 6262, 85861, 89, 88,
	2428, 85, 82, 58367, 80, 77, 2363, 2763, -1000, -1000,
	1892, -1000, -1000, 74, 71, 70, 69, 68, 67, 66,
	64, 63, 62, 60, -1000, 59, 58, 50, 44, 43,
	40, 34, 28, -1000, 27, 26, 22, 21, 19, 17,
	15, 14, 13, 12, 9, 8, 7, -1000, 14675, 5,
	1768, 1598, 1594, 1591, 1580, 1574, 964, 4, 0, -1,
	-3, -4, -5, -7, -8, -9, -1000, -10, -11, -12,
	-13, -14, -17, -18, -21, 90, -26, -27, -29, -38,
	-40, -41, -42, 2042, -1000, 1486, 1402, 27649, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 105489, 99846, -43, -95,
	-45, -1000, 3140, 963, 48987, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 217, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 442, 1818, 725, -1000,
	-1000, -1000, 96220, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2159, -76, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	723, -1000, 2158, 218, 2084, -1000, -1000, -1000, -1000, -1000,
	99846, -1000, 1001, -1000, -1000, 3545, 3544, 1950, 721, 87414,
	-1000, 1935, -1000, 903, 29281, -1000, 1174, -1000, 29281, 215,
	-1000, -1000, -1000, -1000, -1000, -1000, 3543, 3542, 3539, 3538,
	-1000, -1000, 71385, 21067, 70865, 70345, 95707, 20537, 80197, 79677,
	95187, 65689, 997, -1000, -1000, -1000, 1346, -1000, -1000, -1000,
	-1000, -1000, -1000, -65, 66730, 3318, 99846, -1000, 206, -1000,
	-1000, -1000, -1000, -1000, -1000, 42009, 608, 41453, 604, 40897,
	371, -1000, -1000, -1000, 65159, -1000, 3537, 3536, 1085, 3535,
	3045, 104976, 1660, 3534, 1812, 1159, 3533, 3530, 3529, 3525,
	3524, 3522, 1342, 94667, 2811, 94147, 1823, 64629, 996, 79157,
	81750, 2543, 93627, 1397, 1337, -1000, -1000, -1000, -1000, 2913,
	2755, 2738, 1277, -1000, -1000, 3521, 3520, 3519, 3518, 3517,
	104463, 1646, 3516, 2359, 3515, 3514, 3513, 3512, 3511, 3510,
	3509, -1000, 78637, 991, 78117, 77597, 3189, 93107, 77077, 92587,
	64099, 40341, 934, -1000, -1000, -1000, 51081, 8808, 8482, 92067,
	53200, 81750, 81750, -1000, -1000, -1000, -1000, -1000, 39785, 321,
	39229, 922, -1000, -1000, 51616, 2779, -1000, -1000, -1000, -1000,
	38673, 303, 38117, 769, 99846, -1000, 2809, 1845, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2447, 1555, 3333, 2611, 63569, 1948, 1351, 3122,
	2912, 2908, 1440, 3508, 3507, 2438, 2907, 2884, 2875, 2874,
	2872, 1290, 2473, 272, 27093, 2801, 1595, 37561, 1492, 1454,
	2869, 2861, 3378, 1893, 1853, 1918, 69825, 3506, 3505, 3098,
	2858, 2850, 2774, -1000, -1000, -1000, -1000, 1362, -1000, -1000,
	-1000, -1000, -1000, 72938, -1000, -1000, 1264, -1000, -1000, 1264,
	-1000, -1000, -1000, -1000, -1000, 1258, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1486, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2191, -1000,
	1941, -1000, -1000, 2448, 3096, 3096, 3096, 3149, 411, 404,
	-1000, 90, -1000, -1000, 110543, -1000, -1000, 42553, 42553, 42553,
	42553, 42553, 42553, 42553, 2013, -1000, 719, -1000, -1000, 766,
	-1000, 717, 569, -1000, -1000, -1000, -1000, -1000, -1000, 716,
	-1000, -1000, -1000, -1000, -1000, -1000, 3318, -1000, 23769, -1000,
	-1000, -1000, 380, 715, 42553, -1000, -1000, 3391, 3390, 844,
	-1000, 193, 915, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2806, 710, 705, -1000, 702,
	700, 699, 698, 697, -1000, -1000, -1000, 695, 694, 690,
	685, 684, 683, 682, 676, -1000, 1928, -1000, -1000, -1000,
	-1000, -1000, -1000, 624, 623, 623, 623, -1000, 979, -1000,
	-1000, -1000, 366, 619, 293, 618, 617, 614, -1000, 675,
	671, 668, 667, 665, 657, 653, 651, 648, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 976, -1000, -1000, -1000, -1000,
	-66, 99846, -1000, 442, -66, -1000, -1000, 646, -1000, 31469,
	31469, 31469, -1000, -1000, 2155, 42553, -1000, 2645, -1000, -59,
	-59, 874, 50025, -1000, 47931, 874, 275, 782, 54751, -1000,
	2769, -1000, -1000, 636, 186, -1000, -1000, -1000, -1000, 21595,
	2767, 99846, 99846, 81750, 81750, 81750, 2989, 42553, -1000, -1000,
	63039, 99846, 82263, 3278, 59401, 62521, 99846, 2805, -1000, 3081,
	-1000, -1000, 99846, -1000, 42553, -1000, 3276, 1838, 67248, 3182,
	-73, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2337, 2445,
	1095, 2192, -1000, 3006, 1962, -1000, 29281, 3034, -1000, -1000,
	-1000, 182, 21595, -1000, -1000, -1000, -1000, -1000, 2305, 2965,
	1524, -1000, 2184, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1810, 2961, -1000, 1991, 2960, 1793, -1000, -1000,
	2425, -1000, -1000, 3066, -1000, -1000, 2032, 2959, -54, -1000,
	-1000, 2166, -1000, -1000, 1975, -1000, -1000, 940, 2958, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 76557, 52672,
	51616, 66730, -69, -1000, -1000, -1000, -1000, -80, -1000, 20007,
	110543, -1000, -1000, -1000, -1000, 1685, 110543, 826, -1000, -1000,
	2956, -1000, 110543, 816, -1000, -1000, 2953, -1000, 2804, -1000,
	-1000, -1000, -1000, 3503, -1000, 3502, 2260, 3501, 3500, 3499,
	-1000, 1677, 1901, 3498, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 76044, 2146, -1000, -1000, 75004, -1000, 2258, 3181, -1000,
	-1000, -1000, 75524, 989, -1000, 940, 2255, -1000, 85341, 916,
	-1000, 3497, 3186, 2580, 940, 2254, -1000, -1000, -1000, -1000,
	-1000, 977, -1000, 56301, -1000, 56301, -1000, 1509, -1000, 103950,
	-59, 81750, 3318, -1000, -1000, -1000, -1000, -1000, -1000, 2952,
	3496, 3495, 3494, -1000, 99846, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 194, 2951, -1000, -1000, 84828, 194, 2950, -1000,
	194, 2948, -1000, 84315, -1000, -1000, 2134, 2947, -1000, 197,
	2946, -1000, -1000, 196, 2942, -1000, -1000, -91, 2936, -1000,
	-1000, 110543, -1000, -1000, -1000, -96, -1000, -1000, -1000, 963,
	-1000, 50546, -1000, 50546, 86894, 66217, 919, 673, 57846, 110543,
	-1000, -1000, -1000, -1000, 110543, -1000, -1000, -1000, -170, -1000,
	-1000, 66217, 51616, 110543, -1000, -1000, -1000, -1000, 110543, -1000,
	-1000, -1000, 66217, 75004, -1000, 91547, 74491, -1000, -1000, 1338,
	2411, -1000, -1000, -1000, 66217, 1227, 66217, 66217, 66217, -1000,
	91027, -1000, -1000, 1917, 1231, 3070, 1870, 81750, -1000, 1774,
	-1000, -1000, -1000, 3111, -1000, -1000, 2803, -1000, 62003, 83802,
	-1000, 83289, -1000, 82776, -1000, 81750, -1000, 81750, -1000, 3493,
	3491, 3490, 3489, -1000, 3487, 3087, -1000, 110543, 3085, -1000,
	3486, 3172, 2801, 110543, -1000, 2894, 1608, 1601, 99846, -1000,
	-1000, 99846, -1000, 99846, -1000, -1000, -1000, 1405, -1000, -1000,
	2333, -1000, -1000, -1000, -1000, 81750, -1000, -1000, -1000, -1000,
	-1000, -1000, 2792, -1000, 1579, -1000, 1693, -1000, 1334, -1000,
	-1000, 200, -1000, -1000, -73, -1000, 103437, -1000, 2448, -1000,
	99846, -1000, 2407, 2786, 2791, 1596, 2170, 2446, -1000, 37005,
	2403, 45273, 2177, 90, -1000, -1000, 90, 90, 28737, -1000,
	-1000, 59401, 59401, 21595, 1279, 42553, 42553, 42553, 42553, 42553,
	42553, 42553, 42553, 42553, 42553, 42553, 42553, 42553, 42553, 42553,
	42553, 42553, 42553, 42553, 42553, 42553, 42553, 42553, 42553, 42553,
	42553, 42553, 42553, 42553, 42553, 42553, 42553, 42553, 42553, 42553,
	2149, 42553, 1257, 42553, 42553, 42553, 42553, 2234, -1000, -1000,
	1878, 489, 1895, -1000, 3326, 3326, 3326, 1287, 1287, 10896,
	10896, 517, 3485, 766, -1000, 42553, -1000, 86, 42553, 22125,
	-1000, 404, 8233, 2334, -1000, 399, 22681, -1000, -1000, -1000,
	23769, 569, 36449, 42553, 969, 110543, -1000, -1000, 1349, 3341,
	19479, 2820, 2653, 635, 747, 744, 26537, 25981, 25425, 24869,
	740, 42553, 42553, 42553, 42553, 42553, 42553, 42553, 42553, -1000,
	-1000, 3354, -1000, 3341, -1000, -1000, -1000, -1000, 3341, 1270,
	1268, 3341, -1000, 3341, 3341, 6986, 6986, 35905, 35349, 34793,
	45817, 34237, 42553, 24313, 33681, 33125, -1000, 99846, -66, 3275,
	42553, 195, -1000, 109278, -1000, 195, 195, 633, -99, 110543,
	2516, 2516, 49506, 2144, 2025, 2025, 2025, -1000, 874, 15226,
	874, 89996, 2052, 874, 874, 172, 214, 398, 47412, 2645,
	89996, 741, 632, -46, -47, -49, -1000, -1000, -51, -55,
	-1000, -1000, 81750, 631, 22125, 21595, 168, 1389, -101, 2494,
	2488, 2480, -1000, 2479, 1700, -102, 1255, 81750, 99846, -90,
	-1000, 7294, -104, -1000, 1269, 167, 3341, -1000, -1000, -1000,
	-1000, -1000, 3484, 3483, -1000, 975, 626, 625, 356, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 624, 623, 623,
	623, -1000, 366, 619, 293, 618, 617, 614, -1000, -1000,
	-1000, -1000, -1000, 2762, 81750, 99846, -80, 82263, 81750, 854,
	-118, 1089, -73, -1000, -1000, -1000, 1264, -1000, 1834, -1000,
	-1000, -1000, -1000, -1000, -1000, 1356, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 844, -1000, -1000, -1000, -1000, -1000,
	-1000, 3347, 3344, -67, -1000, -1000, 21595, -1000, -74, 1546,
	1630, -1000, 69305, 2221, 3072, 3060, 1500, -1000, 1401, 1254,
	3148, 72938, 3238, 3262, 819, -1000, 2756, -1000, -1000, 897,
	1554, 1628, 1253, 72938, 1991, -1000, 59401, -1000, 2557, 3147,
	1313, 1328, 1313, 1313, 1339, -1000, 72938, 1623, 1247, 1244,
	-1000, 1238, 1176, -1000, -77, 3190, 3255, 768, -1000, 2750,
	1168, -1000, -1000, 81750, 21595, 1501, 1479, 1622, 1166, -68,
	-1000, 3201, 3197, 1165, 1163, -1000, 4339, -1000, 66217, 1730,
	2935, 2610, 798, 2607, -1000, -1000, 798, -69, 66730, 99846,
	164, -1000, 86, 42553, 42553, 86, 42553, 86, 3169, -1000,
	-1000, 2934, -1000, -1000, -1000, 3482, 1850, 2358, -1000, -1000,
	612, 2252, 2747, 99846, 2515, -71, 81750, -1000, 2932, 59921,
	1991, 2251, -1000, -1000, 73971, -1000, 2930, 442, 2250, -1000,
	580, 3480, -1000, 102924, -1000, 3081, 1171, 2929, 1050, 696,
	3274, -1000, 696, 56820, -1000, 99846, -1000, -59, 99846, -1000,
	-1000, -1000, 3478, -1000, 81750, -1000, -1000, 81750, 194, 2927,
	-1000, 81750, -1000, 81750, 192, 2926, -1000, -1000, 99846, -1000,
	81750, 81750, -1000, 99846, 99846, 66217, 66217, 8030, 68279, -119,
	-126, 393, -1000, 90514, 99846, 1049, 68792, 99846, 3024, 938,
	51616, -1000, -127, -170, 2603, 919, 919, 798, -1000, 798,
	-1000, 81750, 2790, -1000, -1000, 66217, 919, 919, 919, -1000,
	-1000, -1000, -1000, 3477, 3476, 3474, -1000, -1000, -1000, 939,
	81750, 99846, 81750, -1000, -1000, 99846, -1000, 99846, 99846, -1000,
	939, 99846, 939, 99846, 939, 99846, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 86, 42553, -1000, -1000, 3471, 1519, -1000,
	2789, -1000, 2787, -1000, -19, -1000, -1000, -1000, -1000, -1000,
	1828, 81750, 81750, 81750, 81750, 99846, 81750, -1000, 72938, -1000,
	2407, 2786, -1000, -1000, -1000, -1000, -1000, -1000, 1552, 2099,
	-1000, 2431, -1000, 1426, -1000, -1000, -1000, 110543, 46345, -1000,
	-1000, 110543, 1714, -1000, 44729, 44185, -1000, -1000, 1597, 81750,
	2542, -1000, 2542, -124, -1000, 108872, 2391, 81750, -1000, -1000,
	-1000, -1000, -1000, 895, 1799, 1799, 1251, 1251, 1251, 1251,
	3206, 1888, 4533, 557, 7394, 7394, 5101, 5101, 5101, 5101,
	5101, 7394, 1040, 1287, 1287, 1040, 1040, 1040, 1040, 1040,
	1287, 1287, 1287, 7394, 7394, 7394, 10896, 110752, 5729, 42553,
	42553, 1161, 1856, 489, 5442, 42553, 1361, 1361, 1361, 1361,
	-1000, 1897, -1000, -1000, -1000, -1000, 2744, 611, 45817, 45817,
	-1000, -1000, -1000, -1000, 23225, 42553, -1000, -1000, -1000, -1000,
	32569, -1000, -1000, 369, -314, 390, -116, 47, -1000, 42553,
	42553, 42553, 389, -1000, 163, 42553, 99846, -1000, 14571, 738,
	-128, -1000, -132, 1375, -1000, 42553, -1000, -1000, 1160, -1000,
	1158, 1157, 1146, -1000, 610, 388, -1000, 162, -1000, 2019,
	606, 601, 42553, -1000, -1000, -1000, -1000, -1000, 108437, -1000,
	-1000, 108253, -1000, -1000, 108087, -1000, -1000, 108002, -1000, -1000,
	-1000, 110362, 14084, 13954, 12996, 7818, 12866, 12449, -133, 387,
	-135, 384, 891, 880, 383, 382, 381, -138, -1000, 3468,
	3466, 3465, -1000, 3463, 3462, 3461, -1000, 3460, 3459, 3458,
	-1000, 3455, 3454, 3453, -1000, 3451, 3450, 3449, -1000, 3448,
	3447, 3445, -1000, 3444, 3443, 3441, -1000, 3440, 3439, 3438,
	-141, 378, -1000, 2741, -116, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 376, -1000, 372, -1000, 110196, -116, 347,
	5609, -1000, 45817, 45817, 45817, -1000, 344, -1000, 109112, -1000,
	110111, 32025, 32025, 32025, 336, 109945, 42553, -116, -144, -1000,
	-149, -1000, -1000, 474, -150, 955, 31469, 48466, 21595, -1000,
	955, 955, 42553, -1000, 42553, 2467, -1000, -1000, -1000, 2457,
	2097, 2516, 49506, -1000, -1000, -1000, -1000, 89996, -1000, 3318,
	2768, -1000, 89996, -1000, -1000, 99846, 442, -1000, 89996, 89996,
	21595, 874, -1000, 874, 89996, 520, -1000, -1000, -1000, -1000,
	-1000, 335, 53718, 47, 161, 21595, 940, -1000, 2512, 2512,
	2512, 2512, -1000, -1000, 99846, 1145, -70, -121, 3298, -1000,
	1930, -1000, 59401, -1000, 763, 1104, 21595, -1000, -1000, -1000,
	600, -1000, 3341, 3341, -1000, 3341, 99846, 2740, 180, 140,
	951, 29281, -1000, 1264, -1000, -1000, 1483, -1000, 1866, -1000,
	1256, -1000, -1000, -1000, -1000, 29281, -1000, 2834, 99846, 99846,
	81750, -1000, 99846, -1000, 2244, 102411, 2242, 59401, 99846, -1000,
	-1000, 587, 585, 2380, 2375, 1046, 99846, 99846, 2373, 101898,
	101385, 99846, 2036, 42553, 59921, 2161, 2029, 86, 86, -1000,
	-1000, 86, 583, 1233, 81750, 81750, 99846, 81750, 1661, -1000,
	-1000, -1000, -1000, -1000, 73451, -1000, -1000, 3351, 3350, -1000,
	1313, -1000, -1000, -1000, 1313, 1991, 1590, 99846, 81750, 59921,
	1621, 99846, 1953, 86, 86, -1000, -1000, 86, 579, 21595,
	1874, -1000, 2823, 99846, 3385, 99846, 99846, 99846, 59921, 3094,
	100872, 99846, 99846, 59921, 4339, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 61490, 1055, 940, 1620,
	1144, 72938, 51616, 937, 51616, 2586, -1000, -1000, 18951, -1000,
	110543, 110543, -1000, 110543, -1000, 60962, 99846, -1000, 982, 99846,
	68792, 913, 2914, 55782, -80, 919, 66217, 81750, -71, 99846,
	-1000, -1000, -1000, -1000, -1000, 1991, 2911, 442, 2240, -1000,
	66217, 3273, 2904, 573, 3436, 3434, -1000, 2139, 2238, -1000,
	-1000, 100359, 2976, 818, 99846, 955, 49506, 1885, -1000, 54238,
	1018, 99846, 1760, 122, -1000, -1000, -1000, -30, 99846, -1000,
	774, 3433, -1000, -1000, 194, -1000, 81750, 194, 194, -1000,
	81750, 81750, 2134, -1000, 197, -1000, 196, -1000, -91, -1000,
	-1000, 8030, 8030, 919, -147, 572, -1000, 867, 865, 52144,
	66217, -152, -1000, -1000, -1000, -1000, -1000, 81750, 99846, 670,
	2579, 99846, -161, -1000, 160, 571, -1000, 2794, -1000, -1000,
	938, 51616, 2733, -1000, -1000, 950, -1000, 1288, 919, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -60,
	-80, -80, -80, -1000, 939, -1000, 939, -1000, 939, -1000,
	110543, -1000, -1000, 1517, 1516, 99846, -1000, 21595, 99846, 81750,
	21595, 81750, 2785, 2784, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1060, -1000, 1714, 2093, -1000, 569, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2314, -1000, -72,
	28737, 2195, -1000, -1000, 81750, -61, 42553, 42553, 5004, 4419,
	42553, 45817, 45817, -1000, 42553, 549, -1000, -1000, -1000, -1000,
	-1000, 2705, 568, 42553, 59401, 4380, 936, -1000, 333, 11512,
	1040, -1000, 42553, -1000, 332, 30925, -1000, 109366, -56, -162,
	-1000, 15767, -116, -164, -1000, -1000, 758, -1000, 2973, -1000,
	42553, 109709, 2294, 1751, 1728, 1526, 3341, 3382, 18423, -1000,
	57333, 965, 2071, 107836, -1000, -1000, -1000, -1000, 59401, 59401,
	42553, 42553, -1000, 42553, 42553, 42553, -1000, -1000, -1000, 3341,
	894, -1000, -1000, -1000, 894, -1000, -1000, 1313, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1313, -1000, 42553, -1000, -1000, 2701, 42553,
	-1000, 59401, 59401, 45817, 45817, 45817, 45817, 45817, 45817, 45817,
	45817, 45817, 45817, 45817, 45817, 45817, 45817, 45817, 45817, 45817,
	45817, 45817, 2395, 45817, 3317, 3317, 3317, -1000, 2771, 2701,
	42553, 42553, 59401, 328, 327, 319, -1000, 42553, -116, -1000,
	-1000, 8030, 566, -1000, 2303, -1000, 2646, -1000, 42553, -1000,
	-157, -1000, 2645, -1000, -1000, 2646, 2646, -167, 110543, 49506,
	49506, -1000, 564, 42553, 2442, -1000, -1000, 736, -312, -1000,
	864, -1000, -1000, -1000, -1000, -1000, 442, -1000, -1000, -1000,
	155, 89996, 89996, 735, -1000, -181, -1000, -1000, -188, -1000,
	3270, 316, 21595, -1000, -1000, 3079, -1000, -1000, -1000, -1000,
	-1000, -1000, -80, 99846, 99846, 2080, 3381, -1000, 3349, 756,
	734, 150, 3341, 312, 310, 309, -80, 99846, 99846, 99846,
	-1000, 2466, -1000, -73, -1000, -1000, -1000, 42553, -1000, -1000,
	3067, 1142, 1140, -1000, -1000, 2897, -1000, 2237, -1000, 1025,
	-1000, 1932, -1000, 42553, 42553, 562, 561, 3431, 1759, 3428,
	1047, 2896, 2134, 2895, 2134, -1000, -1000, 908, -1000, 110543,
	-1000, 560, 556, -1000, -74, 1537, 1610, 945, -1000, -1000,
	42553, 42553, 89483, -1000, 397, 3066, -63, -1000, -1000, 1572,
	1139, -1000, -1000, -1000, -1000, 1991, 1570, 1134, -1000, -1000,
	-1000, 944, -1000, -1000, 941, -1000, -1000, 42553, -1000, -77,
	1120, 3216, 2236, 81750, 1118, -1000, 1117, -1000, -1000, -1000,
	3187, 2134, 2891, 1136, -1000, -1000, -1000, -1000, -1000, 60449,
	-1000, 99846, 81750, 1531, 798, -1000, 2259, 798, 937, 2700,
	-1000, 2511, 3426, 81750, 3418, 308, -189, -78, 59401, 3266,
	-1000, 2163, 532, 81750, 899, -1000, 3318, -1000, -1000, -1000,
	-1000, 3177, 81750, 3264, 2886, 940, 86, 81750, 3379, -1000,
	-1000, 81750, 2879, 2137, 2231, 2346, 818, 67766, -1000, 940,
	2068, -89, -1000, 1760, 30369, 3064, -190, -1000, -1000, -1000,
	955, 56820, 49506, 42553, 3415, -191, -1000, -1000, -1000, -1000,
	194, -1000, -1000, -1000, 192, -1000, -1000, -1000, -1000, -1000,
	-1000, 88452, 88452, 66217, 66217, 66217, 919, 99846, 99846, 68792,
	-1000, 554, 99846, 99846, 533, -1000, 99846, 99846, 3409, 66217,
	-79, 531, -1000, 859, 858, 857, -1000, -1000, -1000, -1000,
	-1000, -1000, -170, 86, -1000, 2078, 81750, -1000, 17895, -1000,
	-1000, -1000, -1000, -1000, 939, -1000, -1000, 1972, 2175, 1972,
	1772, 1770, -1000, 2091, -1000, -1000, -1000, -1000, 2440, 3086,
	21595, 3214, 1361, 42553, 42553, 490, 510, 435, 1361, 42553,
	42553, 59401, 110933, -199, 42553, 42553, -1000, 42553, 733, 110543,
	3376, 42553, 305, 297, -1000, -1000, -1000, 3339, -1000, -1000,
	-1000, 110543, 42553, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	295, -1000, 149, -1000, -1000, -1000, 106002, -1000, 42553, 294,
	3143, -1000, 289, 286, 10707, 7048, 107600, 107419, 107254, 285,
	-1000, -1000, 284, 283, 110543, 2771, 110543, -1000, -1000, 990,
	990, 1302, 1302, 1302, 1302, 3317, 462, 792, 869, 603,
	603, 603, 1236, 649, 649, 603, 603, 603, 2694, 2366,
	530, 6081, -1000, -1000, 110543, 110543, 266, -1000, -1000, -1000,
	-116, 260, 8030, -1000, 2642, 3142, 110543, -1000, 49506, 2642,
	2642, -1000, -1000, 2097, 99846, 110543, 49506, -1000, 2768, -1000,
	16306, -1000, 21595, -1000, -1000, -1000, -1000, 3318, -1000, 53718,
	-1000, 528, -1000, 148, 3079, -1000, 855, -1000, -80, -80,
	-1000, -1000, 732, 3408, 755, 21595, 259, -1000, -1000, -1000,
	-80, -80, -80, -1000, 3023, 110543, 99846, 99846, 99846, 2853,
	-1000, 4420, -1000, 1046, 107168, -202, -1000, 108872, 42553, 99846,
	-1000, -1000, 1692, 2424, 1078, -1000, 3099, 99846, -1000, 99846,
	-1000, -1000, 99846, 99846, 81750, 99846, 2837, -204, 110543, -82,
	-1000, 853, -1000, 1355, -1000, 17367, 99846, 81750, 99846, 81750,
	2007, 2835, -205, 21595, -1000, 3374, 3369, 2849, 3119, 3368,
	99846, -1000, 99846, 81750, 3022, -1000, -1000, -1000, -1000, 1540,
	1116, 937, -83, 527, -1000, 849, -1000, -1000, 832, 937,
	-1000, 66217, 51616, -1000, 442, -1000, 2569, -1000, 86374, 2088,
	86, -1000, 3402, 88970, 526, -1000, 2075, -1000, 730, 59921,
	1991, 86, 81750, -1000, -1000, 442, 256, -84, -1000, 1037,
	21595, 81750, 2847, 2350, 818, 67766, -1000, 1171, 2446, -1000,
	-88, -1000, 514, 86, 2068, -1000, -89, 110543, -1000, 831,
	-1000, -1000, -1000, -207, -1000, -1000, 254, -1000, 3021, 3020,
	-1000, 2669, 42553, 524, 523, 99846, 3019, -1000, -1000, -210,
	2532, 2532, 66217, 51616, 66217, 938, -1000, 2341, -1000, -1000,
	-1000, -1000, -1000, 21595, 1512, -1000, 516, 513, -1000, -1000,
	-1000, -1000, 3086, 1361, 1361, 42553, 42553, 42553, 1361, 110933,
	-212, -1000, 1361, 1361, -116, -1000, -1000, 109366, -1000, -1000,
	-1000, 110543, -1000, 16839, 1978, -1000, 107003, -1000, 28737, -1000,
	-1000, 42553, 42553, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 45817, 2693, 511, 59401, -1000, -1000, 243, 927, 42553,
	42553, 2645, 927, 927, -1000, -213, -1000, -1000, -1000, 3318,
	148, -1000, -1000, 3401, 21595, -1000, 66217, 605, -1000, 3400,
	-1000, -1000, -1000, -1000, -1000, -1000, 99846, -1000, 99846, -1000,
	21595, 99846, 2662, 2212, -1000, -1000, 2372, 509, 45817, 81750,
	794, -1000, 3289, 2658, 1788, 42553, 2195, -215, -218, 2205,
	-1000, -1000, 2201, 42553, -1000, 59401, 508, 2134, 2134, -220,
	-221, -1000, -1000, 42553, 1113, 99846, 29825, -1000, 3398, 3066,
	-1000, -1000, -1000, -1000, 99846, 42553, 1111, -1000, -1000, -1000,
	3363, 2134, 21595, -1000, 2134, 2134, 3119, 1077, 99846, 81750,
	-1000, 2278, 2278, 66217, 51616, -1000, -91, 937, 3260, 1953,
	2602, -1000, -1000, -1000, -1000, 2370, -1000, -1000, 99846, 2369,
	921, -1000, -223, -1000, 830, 829, 68792, 913, 926, -1000,
	-1000, -1000, -1000, 442, 3259, -1000, 3362, 507, 99846, 2136,
	494, 21595, 3062, 818, 67766, -1000, 2976, 1760, -1000, 2217,
	99846, 3055, -1000, 2446, 489, -1000, 919, 487, 472, 2378,
	2378, -226, 42553, 42553, -228, 471, 919, -1000, -229, -1000,
	-1000, -1000, -1000, -92, -1000, 807, 771, -1000, -1000, 81750,
	81750, 42553, 42553, -1000, 1361, 1361, 1361, -1000, 235, -1000,
	-1000, 2068, 3139, -1000, -94, 106814, 106563, 6298, 45817, 59401,
	-231, -1000, -1000, 99846, 110543, -116, -1000, -1000, -1000, 491,
	-1000, -1000, 3397, -1000, -1000, 2043, -1000, -1000, -1000, 99846,
	2223, -1000, 1045, 42553, 6081, 467, 42553, -1000, 3257, -1000,
	2561, 2717, 2569, 463, -1000, -1000, -1000, -1000, -1000, 1035,
	1804, -1000, -1000, 110543, 3119, 42553, -1000, -1000, 461, 450,
	110543, 449, 825, 2690, -1000, -1000, -1000, -1000, 110543, 445,
	3216, -1000, -1000, -1000, -1000, 2134, 81750, -1000, -1000, -1000,
	-234, -1000, -1000, 1833, 86, 913, -1000, 1997, 2088, 444,
	-1000, -1000, 2114, 2460, -1000, 88970, 29281, 29281, 226, 3253,
	926, -1000, 3324, -1000, 3248, 86, -1000, 42553, -1000, 81750,
	42553, 2121, -1000, 2325, 67766, -1000, 2346, -1000, -1000, -236,
	99846, 1760, -1000, -1000, 66217, 66217, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1035, -239, -242,
	-1000, 66217, -1000, -1000, 2341, -1000, 99846, -1000, 99846, -1000,
	-1000, -245, -247, -1000, 2083, 42553, 28737, -1000, -1000, 6298,
	-250, -1000, -115, -1000, 3242, -1000, -1000, -1000, -1000, 2845,
	2633, 106523, 2308, 99846, 9390, -1000, 2711, -1000, -1000, 1953,
	99846, 2569, 2630, 81750, 1041, -252, 1972, 1972, 42553, 28193,
	1995, 42553, -1000, -1000, 3119, -1000, 2670, 3340, -1000, 2114,
	81750, 99846, -1000, 3107, -1000, 3018, -1000, -1000, -1000, 2569,
	86, -1000, -1000, 86, -1000, -253, 1037, -260, 81750, 818,
	-1000, 2350, 955, -1000, -1000, -261, -262, 1788, 1035, 918,
	-267, -1000, -268, -269, -1000, -1000, 224, 43641, 43641, 43641,
	-116, -124, -1000, 99846, 443, 2808, 932, -1000, 2115, 1743,
	124, 1032, -1000, -1000, 2658, -270, -1000, 928, 442, -1000,
	42553, 1035, -275, -1000, 1015, -276, -1000, 1007, -278, -1000,
	2679, -1000, -284, 2134, 925, 3168, -1000, -1000, -1000, -1000,
	441, -285, -1000, -1000, 2263, -1000, 1953, 921, -1000, 1035,
	440, 1788, 432, 1313, 3062, 2984, 919, 919, 2569, 1788,
	955, 422, 919, -1000, -1000, -1000, 2877, -1000, 46873, 2148,
	1738, 108688, 2877, 2877, -1000, -1000, 99846, 3158, -1000, 2118,
	2117, 1433, -1000, -1000, -1000, -1000, -1000, -1000, 955, -1000,
	3157, 2308, 110543, 2569, -1000, 1972, 2599, -1000, 1972, 2676,
	-1000, 1992, -1000, -1000, -1000, 1634, 3311, 99846, -1000, 99846,
	1676, 1655, 3396, 913, 2114, 1788, 42553, 2569, 42553, -1000,
	-1000, 1252, -1000, -1000, 1953, 2569, -1000, -1000, -1000, 1722,
	3267, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 817,
	-1000, 2997, -1000, 1059, 1876, 1876, -1000, 793, 2115, -1000,
	-1000, 421, -1000, 415, -1000, 2074, -1000, -1000, -287, -1000,
	-1000, 3395, -1000, 2114, -1000, 2569, -290, 1953, -292, -1000,
	1493, 918, 1953, 1718, -1000, -1000, 2049, 43097, 42553, -1000,
	3302, -1000, -1000, 2396, -1000, 42553, 2658, 42553, 42553, 55269,
	2122, -1000, -1000, 1953, 1035, 918, 1788, 56820, 955, 918,
	-1000, -1000, -1000, 110543, -1000, -1000, -1000, 110543, -1000, -293,
	-295, -147, 88452, -1000, -1000, -1000, 918, 1788, 955, 2569,
	-263, -1000, 955, 1953, 1100, -303, 955, 2569, -1000, 1953,
	-1000, -1000, -1000, -16, -1000, -1000, 1953, 918, 42553, 918,
	955, -305, 955, -1000, 1953, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4153, 4152, 4151, 4145, 4141, 4139, 4138, 4137, 4133,
	4132, 4130, 4129, 4127, 4126, 4122, 4121, 4119, 4118, 4117,
	4116, 4113, 4111, 4108, 4103, 4097, 4092, 4091, 4090, 4089,
	4087, 4085, 4084, 4083, 4082, 4081, 4080, 4077, 4076, 4075,
	4074, 4070, 4069, 4068, 4063, 4062, 4061, 4060, 4058, 4057,
	4054, 4050, 4048, 4047, 41, 4045, 4044, 4041, 4039, 4038,
	4037, 4033, 4032, 4031, 4029, 4028, 4026, 4024, 4023, 4022,
	4020, 4019, 4017, 44, 4016, 238, 4013, 4010, 4003, 4002,
	4001, 4000, 3996, 3993, 3989, 3987, 3985, 3983, 236, 3982,
	154, 3981, 3979, 3978, 3976, 3975, 233, 3973, 3969, 3965,
	3964, 245, 3963, 3961, 3958, 3957, 3956, 3954, 3952, 3949,
	3943, 79, 131, 3942, 3938, 35, 3931, 3930, 3927, 3917,
	3915, 3913, 3912, 3910, 3909, 3908, 217, 3905, 231, 3901,
	3888, 3881, 3877, 3876, 3875, 3874, 3873, 3871, 3870, 3868,
	3861, 3859, 3858, 3856, 3855, 3853, 3852, 3851, 3850, 3847,
	3846, 3845, 3842, 3841, 3839, 3838, 3837, 3835, 3834, 3833,
	3831, 3828, 240, 171, 3823, 3822, 230, 229, 3821, 3820,
	3818, 3815, 3814, 116, 14, 20, 3812, 3810, 52, 68,
	66, 89, 91, 78, 3804, 99, 3802, 107, 47, 3801,
	9, 23, 214, 234, 7200, 212, 3800, 3798, 3796, 210,
	166, 3795, 205, 3793, 3792, 3791, 3790, 74, 71, 147,
	148, 139, 144, 28, 3788, 3787, 82, 62, 45, 32,
	25, 3783, 3782, 3781, 3780, 3199, 115, 3778, 225, 206,
	143, 3777, 3775, 3774, 2660, 3773, 50, 3772, 81, 61,
	119, 16, 105, 3771, 124, 27, 3770, 155, 40, 3768,
	130, 77, 69, 8655, 8569, 3767, 90, 53, 108, 1931,
	158, 141, 176, 169, 136, 164, 182, 179, 145, 2329,
	3766, 220, 3765, 3232, 49, 134, 3764, 3762, 3760, 64,
	172, 92, 3759, 3758, 51, 5, 15, 34, 170, 12,
	104, 18, 3756, 13, 3754, 3753, 3750, 3749, 33, 140,
	3748, 244, 3744, 65, 37, 38, 3742, 55, 190, 3741,
	201, 106, 3739, 3738, 223, 181, 135, 3737, 88, 196,
	3736, 3735, 3734, 3733, 3732, 110, 2, 112, 3729, 3727,
	123, 209, 168, 3724, 56, 3723, 3720, 142, 84, 114,
	242, 103, 194, 100, 189, 156, 197, 3719, 3718, 3717,
	193, 3716, 3714, 195, 132, 3708, 3707, 186, 246, 39,
	60, 204, 63, 165, 133, 3703, 175, 3702, 3701, 247,
	157, 187, 1, 6, 72, 109, 3699, 10, 202, 129,
	177, 97, 3698, 5208, 1969, 1517, 3696, 3694, 117, 102,
	58, 111, 128, 227, 54, 3693, 3685, 2452, 3684, 3683,
	3681, 3680, 159, 3679, 3678, 3677, 122, 125, 174, 3676,
	76, 73, 11, 101, 277, 239, 96, 192, 167, 221,
	3675, 3673, 3671, 149, 3668, 87, 126, 3662, 173, 219,
	3661, 3660, 162, 3659, 127, 200, 46, 120, 3658, 191,
	3657, 3656, 3655, 3654, 3652, 3648, 3646, 153, 198, 3645,
	3644, 3643, 31, 160, 3639, 226, 312, 152, 67, 57,
	3637, 83, 2200, 3633, 86, 199, 80, 95, 3632, 1524,
	43, 0, 11207, 10117, 6982, 10784, 3631, 2733, 3629, 3624,
	3623, 185, 113, 3622, 3620, 3619, 93, 3618, 59, 3616,
	3614, 48, 3612, 21, 7, 8, 22, 19, 1608, 161,
	3611, 3609, 98, 118, 150, 3608, 232, 184, 3607, 3606,
	3605, 3604, 75, 3603, 29, 3601, 26, 3600, 3597, 30,
	4, 24, 3596, 3595, 208, 3590, 183, 216, 3584, 137,
	3583, 3214, 121, 3579, 3577, 224, 85, 3575, 222, 3573,
	3190, 3571, 3569, 17, 3568, 3566, 213, 146, 188, 3565,
	3563, 138, 3562, 3561, 3559, 218, 3558, 3557, 36, 3553,
	3, 3552, 3551, 180, 3120, 3550, 3549, 42, 3548, 163,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 41, 41, 9, 9, 9, 9, 9,
	29, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 16, 16, 30, 30, 17, 17, 32, 32,
	18, 18, 33, 33, 535, 535, 21, 35, 22, 36,
	15, 536, 536, 536, 536, 28, 23, 37, 25, 25,
	25, 25, 25, 176, 176, 176, 176, 20, 20, 31,
	31, 210, 210, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 534, 534, 212, 212,
	211, 206, 206, 537, 537, 213, 213, 213, 215, 215,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 436,
	436, 436, 467, 467, 467, 550, 550, 551, 551, 551,
	551, 551, 114, 114, 336, 336, 336, 43, 43, 43,
	43, 43, 529, 529, 178, 178, 178, 180, 180, 179,
	179, 179, 179, 64, 64, 542, 542, 543, 543, 541,
	544, 544, 544, 177, 177, 177, 110, 110, 110, 110,
	111, 111, 112, 112, 181, 181, 181, 183, 183, 182,
	182, 182, 182, 182, 182, 182, 182, 187, 97, 97,
	97, 97, 97, 97, 97, 97, 97, 92, 92, 469,
	469, 470, 470, 172, 172, 173, 173, 173, 173, 174,
	174, 175, 175, 175, 57, 184, 184, 186, 186, 185,
	185, 45, 45, 45, 45, 45, 45, 45, 46, 46,
	46, 46, 46, 47, 47, 47, 47, 47, 47, 48,
	48, 48, 48, 48, 48, 55, 55, 55, 55, 163,
	163, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	552, 552, 552, 552, 552, 552, 552, 552, 552, 552,
	552, 552, 552, 552, 552, 552, 552, 552, 552, 553,
	553, 554, 554, 555, 555, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 70, 70, 300, 300, 272, 272, 71, 71, 71,
	72, 72, 73, 73, 59, 59, 527, 527, 315, 315,
	427, 427, 75, 75, 335, 335, 76, 76, 76, 76,
	76, 76, 77, 77, 77, 77, 77, 77, 77, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 85, 85, 85, 85, 85, 86, 86,
	86, 83, 83, 83, 80, 80, 80, 79, 79, 79,
	84, 84, 84, 526, 262, 262, 82, 82, 82, 265,
	265, 81, 81, 81, 316, 316, 87, 87, 87, 87,
	273, 88, 88, 88, 88, 88, 88, 88, 88, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 429, 429, 89, 89, 89, 395, 395, 93,
	93, 93, 351, 351, 94, 94, 94, 94, 94, 95,
	95, 95, 95, 95, 95, 113, 113, 113, 113, 113,
	113, 531, 531, 308, 308, 228, 228, 228, 228, 103,
	103, 103, 103, 104, 104, 104, 105, 105, 168, 168,
	120, 120, 120, 120, 120, 119, 119, 119, 119, 119,
	119, 49, 49, 49, 50, 50, 51, 51, 52, 52,
	53, 53, 54, 54, 54, 54, 54, 122, 122, 547,
	547, 124, 121, 121, 121, 123, 123, 123, 123, 125,
	126, 126, 126, 126, 126, 126, 126, 126, 127, 127,
	461, 461, 324, 324, 459, 459, 478, 478, 460, 460,
	277, 277, 277, 277, 277, 278, 278, 278, 468, 468,
	468, 468, 468, 468, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 169, 169,
	170, 171, 171, 171, 171, 148, 148, 148, 162, 162,
	162, 162, 162, 162, 162, 151, 151, 151, 138, 138,
	129, 129, 129, 129, 129, 129, 129, 133, 133, 133,
	133, 133, 133, 133, 133, 130, 130, 140, 140, 140,
	140, 140, 134, 134, 135, 135, 158, 158, 137, 137,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 131,
	131, 131, 131, 142, 142, 142, 142, 358, 358, 358,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 161, 161, 161, 161, 161, 161, 545, 545, 546,
	546, 155, 155, 155, 155, 155, 155, 409, 409, 149,
	149, 149, 149, 154, 154, 154, 154, 157, 157, 157,
	157, 341, 341, 146, 146, 146, 147, 147, 147, 152,
	152, 153, 150, 150, 156, 156, 156, 156, 132, 132,
	132, 557, 557, 557, 159, 159, 145, 145, 160, 160,
	160, 160, 160, 160, 160, 160, 144, 144, 144, 143,
	143, 143, 143, 136, 528, 528, 524, 524, 524, 524,
	524, 524, 524, 524, 525, 525, 525, 530, 530, 98,
	98, 98, 98, 98, 106, 106, 106, 106, 106, 99,
	99, 99, 99, 99, 101, 101, 100, 100, 100, 100,
	65, 65, 65, 65, 65, 14, 14, 14, 66, 66,
	190, 190, 190, 191, 191, 285, 285, 285, 285, 188,
	188, 189, 189, 67, 67, 558, 558, 558, 538, 538,
	538, 539, 539, 539, 539, 539, 539, 279, 279, 280,
	280, 375, 375, 375, 375, 375, 283, 283, 283, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 286, 286,
	214, 214, 214, 289, 290, 290, 287, 287, 288, 288,
	288, 292, 292, 291, 294, 294, 293, 374, 487, 487,
	489, 489, 489, 489, 489, 489, 489, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 491, 559, 559,
	485, 485, 485, 486, 481, 481, 482, 482, 482, 482,
	482, 281, 281, 282, 282, 282, 282, 483, 484, 306,
	306, 412, 488, 488, 490, 490, 492, 560, 560, 560,
	560, 560, 560, 561, 561, 561, 373, 373, 372, 372,
	298, 298, 493, 493, 493, 493, 494, 494, 494, 494,
	494, 497, 496, 495, 495, 495, 495, 495, 69, 69,
	69, 338, 338, 337, 337, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	165, 165, 231, 231, 63, 63, 63, 12, 12, 12,
	540, 540, 540, 68, 68, 68, 68, 68, 68, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 533,
	533, 532, 532, 232, 232, 563, 563, 74, 74, 74,
	74, 74, 74, 74, 430, 430, 431, 431, 62, 62,
	62, 62, 62, 359, 359, 357, 357, 356, 356, 305,
	305, 411, 236, 236, 207, 207, 207, 27, 26, 19,
	19, 24, 24, 39, 39, 39, 39, 42, 42, 38,
	38, 38, 38, 40, 40, 34, 34, 548, 548, 549,
	549, 102, 102, 107, 107, 107, 107, 107, 108, 108,
	108, 108, 109, 109, 109, 109, 118, 118, 164, 164,
	164, 164, 164, 164, 164, 44, 44, 44, 44, 56,
	56, 56, 56, 116, 565, 565, 565, 117, 117, 117,
	564, 564, 229, 229, 369, 369, 370, 370, 566, 566,
	371, 371, 371, 371, 371, 222, 221, 223, 223, 224,
	224, 61, 61, 61, 216, 216, 217, 217, 218, 218,
	219, 219, 220, 220, 567, 567, 96, 96, 96, 167,
	167, 271, 271, 271, 366, 366, 366, 299, 299, 242,
	242, 368, 368, 368, 368, 334, 334, 334, 166, 166,
	313, 313, 326, 326, 327, 327, 424, 424, 328, 115,
	115, 194, 194, 192, 192, 192, 192, 192, 192, 192,
	192, 199, 199, 200, 200, 201, 201, 202, 203, 203,
	203, 203, 317, 317, 204, 204, 204, 193, 193, 193,
	195, 195, 195, 195, 195, 195, 195, 198, 198, 198,
	198, 205, 205, 205, 197, 197, 504, 504, 504, 506,
	506, 508, 508, 507, 507, 503, 503, 505, 505, 562,
	562, 340, 340, 340, 296, 297, 295, 295, 303, 303,
	301, 302, 302, 304, 304, 410, 410, 410, 208, 208,
	208, 331, 331, 331, 331, 332, 332, 362, 362, 360,
	360, 360, 360, 361, 361, 363, 363, 363, 364, 364,
	365, 365, 330, 330, 391, 391, 196, 196, 196, 310,
	310, 310, 311, 311, 381, 381, 381, 381, 381, 381,
	382, 382, 380, 380, 380, 380, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 414, 415, 415, 312, 312,
	416, 367, 367, 522, 522, 522, 523, 523, 408, 408,
	417, 417, 417, 417, 417, 417, 406, 406, 407, 407,
	425, 426, 426, 344, 344, 344, 344, 342, 342, 345,
	345, 345, 345, 343, 343, 418, 418, 418, 418, 333,
	333, 419, 419, 419, 419, 420, 421, 421, 422, 422,
	376, 377, 377, 432, 432, 432, 432, 434, 309, 309,
	309, 309, 309, 480, 479, 479, 433, 433, 433, 433,
	433, 433, 433, 433, 433, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 449, 449, 449,
	449, 449, 449, 449, 435, 435, 435, 435, 435, 439,
	439, 439, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 440, 440, 445, 445, 446, 446, 446,
	441, 442, 447, 447, 447, 447, 568, 568, 451, 451,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 437,
	437, 437, 444, 444, 444, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 352, 352,
	354, 354, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 385,
	385, 385, 385, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 498, 498,
	498, 498, 498, 498, 498, 498, 387, 387, 501, 501,
	502, 502, 499, 499, 499, 499, 499, 499, 499, 499,
	499, 499, 499, 499, 499, 499, 499, 499, 499, 499,
	499, 499, 499, 499, 499, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 509, 509, 510, 510, 512, 512, 513, 513, 514,
	515, 515, 515, 516, 517, 517, 511, 511, 518, 518,
	518, 518, 519, 519, 520, 520, 520, 520, 520, 521,
	521, 521, 521, 521, 397, 397, 398, 398, 404, 404,
	404, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 233, 233, 233,
	233, 233, 322, 322, 320, 320, 320, 323, 323, 321,
	321, 319, 319, 318, 318, 394, 394, 392, 392, 396,
	396, 346, 346, 450, 450, 450, 450, 450, 450, 450,
	450, 347, 347, 347, 355, 348, 348, 349, 349, 349,
	349, 349, 388, 389, 350, 350, 350, 390, 390, 399,
	403, 403, 402, 401, 401, 400, 400, 378, 378, 379,
	379, 329, 329, 569, 569, 325, 325, 423, 423, 423,
	423, 275, 275, 314, 314, 274, 274, 266, 266, 267,
	267, 267, 267, 307, 307, 405, 405, 452, 452, 453,
	453, 454, 454, 455, 455, 456, 457, 458, 393, 393,
	252, 251, 239, 240, 250, 249, 248, 238, 241, 245,
	246, 247, 243, 244, 258, 257, 256, 263, 264, 254,
	255, 428, 237, 268, 268, 269, 269, 269, 270, 270,
	270, 270, 234, 234, 235, 235, 259, 259, 260, 261,
	261, 253, 253, 253, 225, 225, 225, 226, 226, 227,
	227, 466, 466, 463, 463, 463, 464, 464, 464, 465,
	465, 465, 465, 462, 462, 462, 462, 462, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 472, 472, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 474, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 476, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 477, 477,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 3,
	6, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 10, 3,
	6, 4, 3, 1, 3, 3, 2, 1, 1, 3,
	1, 3, 2, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 1, 1, 1, 3, 6, 4, 6,
	7, 9, 6, 2, 2, 3, 0, 8, 6, 8,
	7, 2, 0, 1, 2, 5, 0, 1, 3, 3,
	1, 1, 3, 12, 3, 1, 0, 1, 1, 2,
	3, 3, 0, 4, 6, 0, 5, 6, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 6, 4,
	9, 7, 12, 12, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 6, 2, 0, 1, 2, 3,
	1, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	3, 3, 4, 3, 4, 7, 4, 4, 4, 3,
	5, 7, 3, 3, 4, 3, 3, 3, 3, 2,
	0, 1, 0, 1, 0, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 1, 2, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 5, 1, 2, 1, 3,
	2, 0, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 1,
	3, 3, 5, 3, 1, 3, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 6,
	4, 7, 7, 7, 2, 6, 4, 7, 7, 7,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 2, 4, 3, 2, 2,
	1, 2, 1, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 2, 6, 3, 3, 4, 4, 3,
	1, 3, 2, 3, 3, 1, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 2,
	1, 3, 3, 3, 3, 2, 3, 3, 1, 1,
	1, 1, 1, 2, 2, 5, 7, 3, 3, 3,
	4, 4, 6, 5, 5, 5, 3, 4, 4, 3,
	4, 4, 3, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 2, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 4,
	3, 4, 3, 3, 4, 4, 5, 0, 1, 1,
	3, 2, 4, 3, 3, 5, 3, 4, 3, 5,
	3, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 4,
	3, 1, 1, 1, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 3, 4, 10, 10, 3, 5,
	5, 5, 3, 5, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 1, 2, 0, 1,
	2, 1, 2, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 6, 5, 8, 3, 6, 6, 3, 11, 14,
	1, 2, 3, 0, 4, 0, 4, 5, 4, 3,
	3, 1, 3, 10, 13, 0, 2, 3, 1, 1,
	0, 1, 2, 2, 2, 2, 1, 1, 0, 1,
	3, 1, 1, 1, 1, 3, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 8, 0,
	1, 1, 0, 2, 1, 0, 1, 0, 9, 9,
	3, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 1,
	2, 8, 4, 2, 5, 5, 5, 2, 1, 3,
	11, 12, 8, 5, 3, 1, 5, 9, 7, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 5, 1,
	3, 1, 2, 0, 1, 2, 2, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 6, 0,
	3, 0, 2, 2, 2, 0, 1, 1, 2, 2,
	0, 3, 3, 2, 1, 1, 2, 2, 5, 8,
	4, 1, 0, 1, 2, 2, 1, 2, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	4, 2, 2, 2, 4, 7, 3, 4, 6, 3,
	1, 1, 1, 8, 10, 11, 7, 10, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 8, 3, 6,
	6, 5, 3, 4, 1, 0, 1, 3, 17, 20,
	16, 19, 4, 2, 0, 1, 0, 1, 0, 1,
	3, 3, 2, 0, 1, 1, 0, 9, 6, 6,
	8, 6, 8, 6, 7, 8, 9, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 2, 3, 2, 2, 1,
	2, 9, 12, 3, 3, 0, 3, 0, 3, 0,
	3, 0, 4, 0, 1, 0, 6, 7, 3, 6,
	3, 1, 3, 1, 1, 4, 2, 1, 3, 1,
	3, 4, 8, 11, 5, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 1, 2, 6, 7, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	3, 3, 5, 1, 3, 3, 4, 5, 2, 2,
	0, 2, 2, 1, 1, 1, 0, 1, 0, 2,
	2, 5, 4, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 2, 0, 4, 2, 5, 3,
	2, 0, 1, 3, 3, 5, 1, 1, 1, 1,
	1, 3, 2, 4, 4, 0, 4, 4, 3, 4,
	1, 5, 3, 4, 5, 5, 1, 5, 1, 3,
	2, 0, 3, 0, 2, 3, 1, 3, 2, 0,
	3, 5, 6, 4, 6, 4, 3, 2, 1, 0,
	5, 1, 0, 2, 2, 2, 1, 1, 0, 1,
	1, 1, 0, 4, 2, 1, 2, 2, 4, 1,
	3, 1, 2, 3, 2, 4, 1, 0, 1, 0,
	2, 1, 0, 2, 5, 7, 2, 1, 2, 4,
	3, 5, 0, 1, 3, 5, 1, 2, 1, 1,
	1, 1, 1, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 1, 1,
	4, 4, 6, 6, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 3, 0, 5, 4, 1, 2, 1,
	4, 1, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 2, 5, 1, 4, 2, 5, 1, 4, 3,
	3, 0, 1, 2, 4, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 1, 0,
	1, 4, 1, 3, 3, 3, 5, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 5,
	4, 6, 3, 5, 4, 6, 4, 6, 5, 7,
	3, 3, 3, 3, 3, 4, 3, 2, 4, 2,
	3, 3, 4, 3, 4, 3, 4, 5, 6, 6,
	7, 6, 7, 6, 7, 3, 4, 4, 1, 3,
	1, 3, 3, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 5, 6, 6, 7, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 6, 1,
	1, 1, 1, 1, 1, 2, 1, 5, 5, 6,
	3, 1, 1, 1, 2, 2, 2, 4, 3, 5,
	6, 8, 6, 5, 4, 3, 2, 2, 4, 1,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 6, 6, 8, 8, 6, 4,
	6, 6, 6, 4, 1, 3, 3, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 4, 3, 4, 3, 4, 3, 4,
	4, 3, 6, 5, 5, 5, 4, 4, 3, 4,
	3, 5, 0, 5, 0, 2, 0, 1, 3, 3,
	2, 2, 0, 6, 1, 0, 3, 0, 3, 3,
	3, 0, 1, 4, 2, 2, 2, 2, 2, 3,
	2, 2, 3, 0, 4, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 1, 2, 3, 2, 3, 2,
	3, 1, 0, 1, 3, 1, 3, 3, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 3, 1, 2, 3, 0, 3, 3, 2,
	2, 1, 2, 2, 3, 2, 1, 1, 1, 5,
	1, 2, 4, 2, 0, 1, 0, 3, 5, 1,
	0, 1, 2, 1, 0, 1, 3, 3, 2, 1,
	1, 1, 3, 1, 3, 3, 1, 1, 1, 1,
	5, 3, 1, 1, 3, 1, 1, 1, 1, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 7, 1, 7,
	5, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 558, -90, -87, -57, -55, -93, -94,
	-76, -95, -89, -113, -118, -102, -114, -120, -164, -169,
	-170, -171, -3, -43, -45, -58, -75, -77, -88, -97,
	-96, -98, -103, -110, -106, -92, -49, -115, -119, -128,
	-165, -166, -167, 31, 30, 98, 78, 149, 124, 132,
	193, 368, 404, 415, 396, 385, -123, -124, 432, -44,
	-56, -117, -116, 71, 125, 391, -4, -12, 28, 44,
	-46, -47, -48, 60, -63, -60, -70, -64, -552, 100,
	-505, -78, -81, -109, -556, 137, 156, 211, -99, -100,
	351, -104, -105, 398, -107, -108, 400, 157, -51, -50,
	151, -192, -194, -121, -122, -168, -129, -130, -131, -132,
	-133, -134, -135, -158, -136, -137, -138, -139, -140, -141,
	-161, -142, -143, -144, -145, -150, -146, -147, -148, -149,
	-151, -152, -154, -155, -156, -157, -159, -160, 436, -153,
	491, 47, 450, 80, 141, 408, 21, -5, -6, -7,
	-8, -9, -10, -11, -14, -13, -59, -61, -62, -65,
	-66, -67, -74, -68, -69, -504, -79, -80, -83, -85,
	-86, -82, -84, 397, -195, -193, 555, 506, -16, -21,
	-22, -17, -18, -20, -23, -19, -24, -30, -35, -36,
	-32, -33, -31, -34, -37, -38, -39, -40, -41, -42,
	-26, -28, -29, -27, -15, -25, 525, 533, -198, -196,
	-197, -205, 424, 514, 466, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, -273, 2, -254, -259, -260,
	-261, -253, -225, -474, -477, 4, -471, -475, 162, 220,
	315, 21, 22, 23, 24, 25, 26, 28, 29, 40,
	41, 43, 44, 45, 46, 47, 51, 53, 57, 58,
	59, 60, 61, 62, 66, 71, 72, 77, 78, 79,
	80, 81, 82, 83, 89, 86, 87, 88, 90, 92,
	94, 95, 96, 97, 98, 99, 101, 102, 103, 105,
	106, 114, 115, 116, 117, 119, 124, 125, 128, 123,
	127, 130, 131, 132, 135, 136, 137, 139, 140, 142,
	143, 144, 146, 147, 149, 150, 151, 154, 152, 473,
	153, 155, 156, 157, 158, 168, 169, 170, 175, 177,
	181, 182, 185, 186, 187, 188, 189, 190, 191, 192,
	194, 198, 200, 201, 202, 203, 204, 210, 211, 213,
	214, 215, 216, 221, 222, 226, 223, 232, 233, 237,
	238, 239, 241, 245, 246, 247, 248, 249, 250, 252,
	254, 253, 256, 259, 260, 263, 267, 268, 271, 272,
	273, 274, 276, 277, 280, 278, 281, 279, 282, 284,
	285, 286, 287, 288, 289, 290, 291, 292, 293, 294,
	295, 283, 298, 296, 300, 301, 302, 313, 311, 306,
	307, 303, 308, 304, 305, 309, 310, 317, 318, 321,
	208, 323, 324, 327, 345, 331, 332, 333, 336, 337,
	340, 343, 344, 346, 347, 348, 349, 350, 351, 352,
	353, 355, 356, 358, 359, 360, 362, 363, 364, 366,
	368, 369, 371, 373, 374, 375, 376, 377, 378, 379,
	382, 381, 383, 385, 391, 396, 393, 394, 395, 397,
	398, 399, 400, 402, 403, 404, 406, 407, 408, 409,
	411, 413, 414, 417, 418, 433, 434, 452, 415, 416,
	419, 420, 421, 422, 423, 427, 425, 426, 428, 429,
	430, 432, 435, 436, 438, 439, 440, 441, 442, 443,
	446, 448, 449, 450, 451, 453, 456, 457, 458, 459,
	454, 465, 462, 463, 467, 468, 469, 470, 471, 472,
	474, 476, 484, 485, 486, 488, 491, 492, 493, 494,
	482, 496, 497, 500, 501, 502, 505, 503, 504, 506,
	508, 511, 512, 513, 519, 518, 520, 526, 527, 529,
	530, 531, 35, 48, 49, 52, 54, 56, 67, 68,
	69, 73, 120, 121, 148, 159, 160, 171, 183, 184,
	195, 197, 205, 206, 207, 227, 228, 230, 235, 257,
	320, 322, 338, 342, 357, 361, 365, 367, 380, 410,
	444, 455, 460, 477, 478, 479, 480, 487, 489, 514,
	515, 516, 521, 528, -273, 2, -254, 329, -247, 2,
	-225, -225, 368, 27, 2, 27, 356, 426, 468, 470,
	2, -531, -308, 2, 27, -228, -225, 100, 193, 424,
	-247, 2, -531, -308, 24, 2, -225, 2, -229, 2,
	415, -225, 277, 2, 558, 92, 268, 72, 410, 429,
	-126, 485, -125, 477, 419, -127, -461, 2, 298, -225,
	558, 558, 558, 27, -237, -225, 466, 220, 116, 463,
	558, 2, 466, 348, 518, 425, 116, 377, 220, 493,
	419, -540, 277, 406, 196, 507, -529, 2, -524, 4,
	-475, -471, -267, -266, 466, 471, 116, -261, -253, 548,
	-260, 558, 558, 558, 2, 238, 239, 376, 375, 429,
	430, 558, 558, 558, 417, 2, 26, 64, 91, 96,
	122, 158, 178, 181, 334, -553, 345, 374, 428, 465,
	474, 488, -539, 451, 66, 419, -538, -540, 277, 493,
	135, -356, 116, 268, 192, 501, 470, 468, 499, 128,
	226, 504, 503, 558, 558, 26, 64, 75, 96, 135,
	158, 178, 181, -555, 345, 374, 413, 428, 465, 474,
	488, 2, 518, 277, 425, 466, 220, 116, 493, 419,
	-540, 417, 418, 372, -90, 2, 555, 31, 30, 432,
	-187, 466, 231, 2, -225, 558, 558, 2, 238, 239,
	417, 418, 558, 558, 179, -524, 2, 558, 558, 2,
	238, 239, 417, 418, 231, 2, 66, 421, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	2, -162, 429, 451, 202, 45, 44, 72, 27, 373,
	77, 349, 117, 143, 494, 194, 220, 221, 246, 91,
	92, -358, 43, 239, 238, 418, -545, 417, -409, 467,
	420, 426, 462, 250, 415, 485, 100, 508, 407, 531,
	377, 378, 152, 4, 116, 298, 431, 477, 268, 414,
	352, 82, 558, -562, 2, 466, -564, 2, 485, 485,
	2, -564, 2, -564, 2, -564, 2, -565, 485, 528,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, -193, -195, -194,
	558, 558, 558, 558, 558, 558, 558, -162, 429, 2,
	72, 27, -301, -303, 498, 229, 145, 335, -192, -194,
	2, -504, -459, 2, -383, -478, -385, 546, 547, 539,
	464, 65, 314, 532, -397, 122, 499, 329, -477, -386,
	-399, 148, 410, -323, 8, 9, 5, 6, 7, -234,
	-387, -393, 490, 161, 319, -270, 559, 10, 555, -501,
	-194, -398, 36, 197, 63, -463, -269, -235, -435, 230,
	-268, -253, -498, -499, 4, -471, -472, -464, -438, -446,
	-442, -443, -449, -225, -474, 75, 108, 109, 107, 112,
	111, 270, 269, 113, 110, 431, 507, 64, 35, 205,
	206, 235, 320, 207, 73, -500, 136, -473, 227, 228,
	444, 49, 380, 171, 121, 120, 322, 54, 52, 515,
	-447, 118, 477, 478, 479, 480, 183, 184, 56, 159,
	160, 342, 365, 460, 487, 489, 195, 257, 42, 104,
	180, 225, 209, 234, 236, 240, 258, 261, 299, 312,
	316, 339, 341, 405, 437, -568, 516, 455, 67, 68,
	-506, 381, -507, -247, -506, 558, 558, 560, 558, -295,
	-296, -297, 2, 27, 133, 555, 2, -413, 2, -414,
	-418, -194, 251, -417, 555, -415, 553, -254, 330, -502,
	411, -498, -499, -234, -253, -269, 4, -471, -473, 557,
	-298, 555, 116, 466, 76, 220, -351, 555, -225, 27,
	329, 481, 560, -395, 555, 329, 179, 332, -225, 518,
	2, 2, 433, 2, 555, -126, 69, 485, 42, 429,
	-370, 2, -371, -221, -222, -223, -425, -224, 237, 371,
	379, 534, 126, 314, 531, -459, -547, 179, 538, 481,
	-459, -324, 557, 2, 2, 2, 2, 2, -418, 205,
	-254, 2, -251, -462, 4, -471, -475, -472, -476, -474,
	27, 30, 31, 32, 34, 36, 37, 38, 39, 55,
	63, 64, 70, 74, 76, 85, 91, 100, 107, 108,
	110, 109, 111, 112, 113, 122, 126, 129, 133, 134,
	138, 141, 145, 161, 163, 176, 178, 179, 193, 196,
	199, 212, 224, 229, 231, 251, 255, 262, 269, 270,
	314, 319, 325, 329, 330, 334, 335, 354, 370, 384,
	401, 424, 431, 447, 461, 466, 475, 481, 483, 490,
	498, 499, 507, 509, 517, 522, 523, 524, 525, -477,
	75, 2, -418, 205, 2, -256, 205, -418, -259, 2,
	-238, -225, 2, -250, -462, 2, -274, 205, -254, -255,
	-259, -257, 2, -259, -263, 2, -225, -469, 205, 2,
	-466, 10, -465, 5, 4, -471, -475, -472, 518, 231,
	481, 560, -314, -266, -267, -458, 8, -307, -225, 557,
	-383, 2, -115, -101, 2, 176, -383, 205, 2, -115,
	205, 2, -383, 205, 2, -115, 205, 2, -542, 2,
	-469, 2, 2, 488, 2, 96, 205, -225, 466, 115,
	2, 395, -554, 413, 492, 2, 2, 2, 2, 2,
	2, 466, -243, 2, -225, 176, -263, 205, -264, 2,
	-225, -226, 425, -563, 381, -469, 205, 2, 518, -257,
	2, -257, 220, 233, -238, 205, 2, 470, 468, 470,
	468, 179, 2, 231, 2, 231, 2, -419, 2, -420,
	-414, -421, 553, 330, 2, 2, 2, 2, 2, 205,
	-225, 466, 115, 2, 249, 2, 2, 2, 2, 2,
	2, 2, -316, 205, 2, -254, 518, -316, 205, 2,
	-316, 205, 2, -357, 2, 85, -238, 205, 2, -262,
	205, 2, -257, -265, 205, 2, -263, -470, 205, 2,
	-469, -383, 2, -115, 2, -429, 2, -428, -465, 514,
	-90, 555, -90, 555, 429, 555, -469, -254, -254, -383,
	2, -115, -101, 2, -383, 2, -115, 2, -112, -111,
	-469, 555, 179, -383, 2, -115, -101, 2, -383, 2,
	-115, 2, -187, 176, 2, 116, 466, -162, 2, 176,
	509, 2, 8, 2, 212, -469, 420, 378, 168, 2,
	433, 2, 434, 72, -358, 531, 72, 179, 2, 179,
	2, -341, 2, 525, 2, 2, -528, 2, 329, 179,
	2, 179, 2, 179, 2, 179, 2, 179, 2, 375,
	430, 486, 239, 2, -115, 522, -101, -383, 522, 2,
	-546, 176, 418, -383, 2, 484, 248, 153, 179, -341,
	2, 179, 2, 179, 2, 5, 2, 376, 452, 2,
	237, 371, 452, 2, -254, -557, 2, 466, 518, 425,
	2, 2, 86, 87, 179, 2, 179, 2, 179, 531,
	2, -333, -418, -369, -370, -369, 481, -301, -303, -162,
	433, 2, -199, -331, -201, 176, -360, -361, -202, 262,
	163, 325, -203, -340, 27, 133, -340, -340, 58, 556,
	556, 11, 12, 74, 40, 546, 547, 548, 549, 174,
	550, 551, 544, 545, 543, 536, 537, 541, 243, 244,
	93, 540, 538, 84, 275, 412, 164, 165, 166, 167,
	392, 218, 33, 219, 14, 15, 16, 32, 334, 261,
	532, 209, 437, 539, 17, 18, 19, 234, 236, 316,
	48, 212, -233, -276, -383, -383, -383, -383, -383, -383,
	-383, 341, 555, -329, -378, 553, -194, 555, 555, 555,
	-458, -194, -383, -397, 556, -321, 555, -194, -397, -392,
	555, 410, 553, 555, -400, -383, 5, 5, 5, 555,
	557, -509, 526, 176, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 367,
	-440, 555, -439, 555, -439, -439, 519, -437, 555, 533,
	527, 555, -437, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 519, 560, -506, -298,
	555, -325, -423, -383, 548, -325, -325, 329, -318, -383,
	104, -344, 240, 299, 180, 258, 405, 225, -380, 559,
	-380, -408, 533, -194, -415, -253, -194, -417, 555, -413,
	-408, -91, -458, -75, -88, -96, -115, -128, -166, -167,
	548, -254, 555, 179, 555, 557, -462, 179, -307, -238,
	-254, -268, -269, -274, 132, -318, -524, 493, 419, -307,
	-228, 37, -394, -432, -433, -480, 559, -479, -435, -445,
	-441, -444, 357, 361, -464, 52, 515, -447, 230, 4,
	-471, -473, 227, 228, 444, 49, 380, 171, 121, 120,
	322, 54, 477, 478, 479, 480, 183, 184, 56, 516,
	455, 67, 68, -524, 493, 419, -307, 176, -357, -461,
	-318, 37, -370, 2, 122, -466, -566, 560, 260, -278,
	274, 313, 201, 330, 529, 323, 126, -468, 5, 4,
	-393, -405, 122, 268, 230, -452, -454, 8, -453, 9,
	-455, 546, 547, -460, -459, 106, 557, -462, -210, 393,
	432, -209, 23, 28, 137, 512, 154, -288, 222, 344,
	348, 148, 448, 502, -535, -536, 416, 472, 473, 88,
	323, 432, 393, 148, -337, -339, 37, 114, 302, 343,
	59, 215, 279, 280, 450, 521, 148, 432, 393, 344,
	-536, 97, 393, -536, -212, 448, 502, -535, -536, 416,
	393, -211, -288, 148, 559, 23, 393, 432, 344, -550,
	-551, 137, 28, 393, 344, -532, -503, 525, 148, -418,
	205, -543, -111, 252, 5, 10, -111, -314, 560, 560,
	-462, 548, 418, 417, 148, 148, 148, 148, 176, 2,
	2, 314, 2, 2, 2, 181, -538, -555, 2, 2,
	-254, 205, -300, 329, -527, -315, 466, -254, 314, 42,
	-256, 205, 2, -259, 518, -532, 314, -258, 205, -254,
	37, 555, 2, -357, 2, 220, -503, 314, -419, -271,
	-254, -414, -271, 432, -247, 37, -380, -254, 148, 2,
	2, 2, -225, -213, 560, 62, 399, 148, -316, 205,
	-213, 148, -213, 148, -275, 205, -274, -213, 148, -213,
	560, 148, -213, 560, 148, 560, 148, 556, 560, -429,
	-429, -469, -175, 525, 179, 100, 555, 555, -187, -426,
	560, -425, -470, -112, -469, -469, -527, -238, 2, -254,
	2, 466, 241, -469, -175, 212, -469, -469, -469, -461,
	27, 434, 2, 375, 430, 486, 87, 434, 2, -254,
	466, 116, 220, 78, -530, 176, -525, 406, 419, -524,
	-254, 116, -254, 116, -254, 116, -254, -254, 2, 2,
	2, 2, 2, 83, 83, 2, 44, -546, 176, 2,
	484, 2, 484, 2, -225, -225, -225, 451, 260, -254,
	176, 466, 220, 466, 220, 116, 466, -213, 560, -229,
	-199, -331, -461, -332, -331, -200, -199, -202, 176, 379,
	503, 302, 435, 245, -361, -360, 27, -383, -365, 170,
	301, -383, -363, -385, 546, 547, -453, -455, -317, 323,
	-193, -193, -193, -304, -410, -383, 370, 220, -434, -432,
	-432, -252, -462, 477, -383, -383, -383, -383, -383, -383,
	-383, -383, -383, -383, -383, -383, -383, -383, -383, -383,
	-383, -383, -383, -383, -383, -383, -383, -383, -383, -383,
	-383, -383, -383, -383, -383, -383, -383, -383, -383, 261,
	209, 437, 48, 212, -383, 481, -383, -383, -383, -383,
	296, 314, 319, 490, 161, 500, 133, 323, -569, 461,
	39, -390, -194, -322, 555, -404, 34, 447, 27, -397,
	555, 2, -378, -383, -379, -319, -318, -318, 556, 517,
	27, 133, 548, 2, 556, 560, 37, 556, -383, -319,
	-396, -392, -318, -403, -402, 522, -352, -353, 530, 283,
	119, 203, 281, -354, 423, -456, 8, -462, 548, -510,
	169, 196, 555, 556, 2, 556, 2, 556, -383, 2,
	556, -383, 2, 556, -383, 2, 556, -383, 2, 556,
	2, -383, -383, -383, -383, -383, -383, -383, -318, 8,
	-456, -456, 477, 477, -456, -456, -456, -448, 357, 358,
	359, 360, 263, 264, 265, 266, 361, 362, 363, 364,
	288, 289, 290, 291, 284, 285, 286, 287, 292, 293,
	294, 295, 188, 189, 190, 191, 184, 185, 186, 187,
	-448, -346, 2, -450, -318, 4, 530, 283, 119, 203,
	281, 423, 5, -346, 2, -347, 2, -383, -318, -348,
	-384, -385, 546, 547, 539, -397, -349, 2, -383, -319,
	-383, 55, 255, 483, -350, -383, 179, -318, -318, 2,
	-318, 2, -507, 37, -318, -310, 560, 179, 37, 4,
	-310, -310, 555, 556, 560, -345, 200, 278, 273, -345,
	-413, -344, 240, -342, 339, -342, -342, -408, -239, 553,
	561, -462, -408, -407, -406, 37, -247, 336, -408, -408,
	557, 556, -407, 554, -522, 555, 558, 558, 558, 558,
	558, -254, 555, -318, -462, 557, 453, 556, 234, 234,
	234, 234, 411, 556, 481, -526, -262, -265, 525, -90,
	331, 556, 560, -309, 36, 553, 557, -456, 2, 2,
	-451, 519, 555, 555, -353, 555, 179, -526, -265, -308,
	-258, -547, 556, 485, -371, -277, 379, 446, 394, 427,
	463, 8, 9, 8, 9, 560, -462, 560, -548, 91,
	481, 76, 419, -374, 205, 76, -481, -241, 91, -482,
	-225, 70, 499, 370, 178, 146, -548, 91, 370, -548,
	91, 91, 432, 451, 481, 58, -418, 40, 40, 27,
	-115, 256, 179, 531, 466, 220, 419, 481, -418, -339,
	-432, 114, 279, 280, 58, -457, -452, 546, 547, -457,
	58, -457, -457, -457, 525, -256, -418, 419, 481, 481,
	481, 481, 560, 40, 40, 27, -115, 256, 179, 481,
	-274, -239, 513, 41, 513, 481, 41, 419, 481, 560,
	41, 41, 481, 481, -533, -230, 103, 308, 272, 309,
	95, 305, 94, 304, 101, 306, 102, 307, 520, 317,
	61, 303, 282, 310, -231, -232, 350, 511, -469, 432,
	393, 148, 212, -426, 212, -426, -266, -225, 557, -115,
	-383, -383, -115, -383, -115, 44, 148, 2, -563, 249,
	555, -281, 314, 179, -307, -427, 231, 560, -315, 148,
	-467, -466, 113, 431, -338, -337, 314, -258, 205, 2,
	148, -298, 314, 142, 555, 377, 2, -240, 205, -226,
	-225, -357, -216, 469, 148, -335, 509, -366, -115, 555,
	122, 37, -366, -326, -327, -424, -328, -241, 555, -247,
	-380, -225, 2, -254, -316, -213, 148, -316, -316, -213,
	560, 148, -238, -257, -262, -263, -265, -469, -470, -90,
	-428, 556, 556, 556, -174, 333, -173, -225, 5, -187,
	509, -280, -375, -374, -485, -486, -481, 261, 220, 499,
	233, 162, -299, -242, -241, 115, -181, 525, -111, 556,
	-426, 212, -175, -175, -426, -426, -254, 176, -469, -175,
	-175, -175, 2, 2, 2, -341, -254, -238, -274, -254,
	-307, -307, -307, -341, -238, -341, -238, -341, -238, -115,
	-383, 2, 429, 176, 176, 557, -341, 377, 116, 466,
	348, 220, -254, -274, -254, -274, -238, -254, -418, -332,
	-200, 330, 245, 435, -363, -364, -385, 410, 411, -364,
	410, 411, 8, 9, 8, 9, -204, 439, 318, -316,
	560, -207, 38, 129, 245, -254, 531, 144, -383, -383,
	481, -569, 461, -390, 144, -383, 296, 319, 490, 161,
	500, 133, 323, 179, 555, -384, -384, 556, -320, -383,
	-383, 554, 563, 556, -303, 560, -301, -383, -318, -318,
	556, 557, -318, -307, 554, 554, 560, 556, -401, -402,
	138, -383, 481, 481, 481, 481, 555, 556, 557, -515,
	340, 555, 555, -383, 556, 556, 556, 556, 37, 560,
	560, 560, 556, 560, 560, 560, 556, 556, 556, 560,
	556, 531, 531, 556, 556, 556, 556, 560, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 556, 560, 556, 179, 556, 556, -355, 354,
	556, 11, 12, 546, 547, 548, 549, 174, 550, 551,
	544, 545, 543, 536, 537, 538, 84, 275, 412, 14,
	15, 16, 234, 212, -384, -384, -384, 556, -388, -389,
	179, 176, 37, -350, -350, -350, 556, 179, -318, 556,
	556, 555, -508, 277, 314, 556, -377, -376, 523, -423,
	-311, 2, -413, -249, -462, -377, -377, -318, -383, 240,
	240, -343, 509, 329, -345, -413, -407, -458, -382, -381,
	177, 38, 129, 311, 208, -407, -247, -298, -407, -407,
	-462, -408, -408, -406, 556, -523, -458, 556, -312, -416,
	-502, -303, 557, -462, -184, -503, -163, 5, 319, -163,
	-163, -163, -307, 481, 481, 24, 355, -432, 553, 554,
	8, -462, 555, -456, -456, -456, -307, 179, 179, 179,
	-336, 525, -459, -370, 497, 81, 379, 477, -459, -209,
	393, -241, -241, -254, -263, 314, -374, 205, -215, 314,
	-432, -248, -225, 555, 555, 245, 245, 509, -241, -248,
	245, 205, -241, 205, -248, -248, -534, 379, 324, -383,
	-467, 267, 377, 315, -210, 393, 432, -115, -115, -115,
	555, -547, 509, 132, -254, -274, -254, -263, -258, 432,
	393, 312, -268, -457, -457, -337, 432, 393, -263, -256,
	-467, 419, -238, -211, -115, -115, -115, 555, -239, -212,
	393, 5, 205, -241, 5, -225, -241, -263, -467, -551,
	23, -241, 205, -241, -263, -467, -230, -469, 319, 505,
	-532, 419, 481, -418, -111, -178, 525, -111, -172, 216,
	548, -529, -225, 518, -225, -279, -282, -280, -241, -190,
	-191, 527, 525, 148, -272, -254, 553, -175, -469, -254,
	-263, -264, 148, -298, 314, -469, 37, 148, 555, 2,
	2, 329, 314, -240, 205, -217, 139, -567, 538, -238,
	-377, -311, -334, -368, 401, 329, -299, 514, -247, -334,
	-313, 560, 179, 538, 557, -299, -422, 548, 2, -213,
	-316, -213, -213, -274, -275, -213, -213, -213, -90, -90,
	-175, 560, 555, 538, 538, 555, -469, -469, 556, 560,
	-254, -240, 220, 220, -246, -226, 556, 560, 557, 555,
	-183, 333, -182, 140, 247, 232, 440, 441, 442, 443,
	131, -181, -112, 179, -52, 525, 466, -175, 559, -341,
	-341, -341, 429, 429, -225, -250, -238, -254, -251, -274,
	176, 176, 503, -364, 330, 271, -410, -208, 321, -254,
	559, -383, -383, 144, 144, -383, -384, -384, -383, 144,
	179, 555, -383, -394, 32, 32, 556, 560, -379, -383,
	556, 517, -303, -303, 556, 548, -462, 559, 556, -392,
	141, -383, 475, 283, 203, 281, -354, 281, -354, -354,
	-456, 5, -462, 548, -516, -244, 555, -225, 523, -302,
	335, 556, -434, -432, -383, -383, -383, -383, -383, -456,
	-437, -437, -452, -452, -383, -388, -383, -434, -432, -384,
	-384, -384, -384, -384, -384, -384, -384, -384, -384, -384,
	-384, -384, -384, -384, -384, -384, -384, -384, 133, 314,
	323, -384, -389, -388, -383, -383, -432, 556, 556, 556,
	-318, -90, 555, 277, -330, 196, -383, -426, 560, -330,
	-330, 556, -413, -413, 555, -383, 240, 554, 560, 562,
	538, -298, 557, -406, -407, 554, 556, 560, 556, 560,
	-367, 37, 556, -462, -186, -185, 130, 51, -307, -307,
	332, 5, 8, 553, 554, 557, -456, 556, 556, 556,
	-307, -307, -307, 115, 302, -383, 481, 481, 148, 314,
	511, -487, -482, 146, -383, -305, -411, -383, 555, 555,
	2, -206, 137, 432, -549, 2, 509, 148, -213, 148,
	-213, 529, 555, 555, 481, 419, 525, -318, -383, -176,
	122, -461, -536, 559, -536, 559, 419, 481, 419, 481,
	525, 525, -318, 481, -436, 46, 25, 314, -257, 481,
	481, -213, 148, 493, 432, -469, 319, -263, -258, 432,
	393, -426, -180, 333, -179, 140, 403, 131, 247, -426,
	-178, 179, 231, 2, -258, 2, 556, 556, 560, -488,
	37, 327, 327, 555, -254, -71, 525, -425, -458, 42,
	-256, 37, 148, -532, -115, -258, -430, -431, 5, -254,
	148, 329, 314, -218, 254, -567, -466, -503, -303, -334,
	-325, 315, 89, 556, -377, -327, -311, -383, 2, 556,
	-213, -213, -173, -174, -469, -469, -469, -175, -187, -187,
	-375, -283, 555, -240, -226, 555, -187, -242, 2, -470,
	560, 555, 538, 538, 538, -426, -115, 333, -254, 548,
	-341, -290, -289, 348, 323, -290, 410, 410, 330, 170,
	250, -207, -239, -383, -383, 144, 32, 32, -383, -383,
	-394, 556, -383, -383, -318, 554, 5, -383, 556, 556,
	8, -383, 556, 557, -517, -225, -383, 556, 58, 556,
	556, 560, 560, 556, 556, 556, 556, 556, 556, 556,
	-389, 179, 133, 323, 555, 556, 556, -90, -391, 199,
	58, -413, -391, -391, -343, -307, -413, -381, -239, 553,
	-462, -458, -416, 555, 557, -185, 538, 554, 2, 553,
	-462, 556, 115, -241, -241, -374, 148, -489, 91, -491,
	74, 162, 100, 314, 319, 499, 370, 70, 122, 384,
	-559, 37, 535, 556, 556, 560, -207, -305, -307, 314,
	458, 122, 314, 122, 115, 493, 77, -241, -248, -307,
	-307, -254, -263, 155, 556, 560, 538, 2, 548, 548,
	-263, -258, -263, -256, 346, 155, 556, -239, 5, 5,
	148, -236, 74, 5, -241, -241, -257, 115, 419, 481,
	-178, 560, 555, 538, 538, -178, -470, -111, -298, -286,
	223, -241, -486, -483, -484, 370, -490, -492, 162, 370,
	-115, 2, -189, -188, -225, 5, 555, -281, 333, 554,
	-467, -338, -115, -258, -298, 556, 560, -359, 509, -239,
	-254, 148, -219, 253, -567, -466, -216, -362, -360, 134,
	555, 329, -115, -303, 538, 556, 556, 115, 115, 214,
	147, -305, 555, 555, -307, 115, 556, -182, -183, -469,
	-111, -469, -181, -53, -54, 220, 91, 353, -251, 466,
	220, 555, 555, -207, -383, -383, -383, 556, -303, -462,
	548, -511, 348, 556, -410, -383, -383, -384, 179, 555,
	-394, 556, -512, 524, -383, -318, -512, -512, 556, -458,
	2, -469, 553, 2, -374, -248, -252, -245, -225, 162,
	205, 319, 245, 555, -384, -254, 555, 2, 29, -560,
	126, 224, -373, -561, 99, 459, 213, -411, -208, 556,
	556, 319, 319, -383, -432, 555, -213, -213, 556, 556,
	-383, 481, -461, 98, -459, 2, -536, -238, -383, 481,
	5, -213, -252, -213, -213, -236, 493, -263, -258, -179,
	-180, -469, -111, -178, 37, -287, -288, 212, -488, 245,
	-245, 245, -558, 525, 556, 560, 538, 538, -279, -190,
	-72, -73, 482, -425, -298, 37, 5, 555, -225, 329,
	555, -239, -220, 90, -567, -466, -217, -334, 315, -307,
	91, -362, -390, -175, 555, 555, -284, 79, 92, 123,
	204, 182, 221, 451, 456, 27, -284, 556, -305, -305,
	556, 555, -175, 556, 560, 27, 555, 27, 555, -254,
	-274, -318, -318, 556, -303, 58, 560, 556, 556, -384,
	-394, 556, -513, -514, -244, 554, 2, -491, -245, 314,
	509, -383, -227, 555, -383, 37, 224, 127, 210, -286,
	555, -372, 509, 384, -236, -305, 555, 555, 555, 538,
	179, 555, -436, -213, -257, 556, -541, 382, -115, -190,
	346, 555, -285, 329, 115, 302, -188, -459, -459, 556,
	37, -73, 9, 37, -115, -305, -254, -305, 329, 262,
	-466, -218, 556, -248, -334, -470, -470, -372, 556, 556,
	-470, -54, -307, -307, 556, 556, -518, 377, 411, 198,
	-318, -304, 556, 560, 37, 148, 200, 556, -493, 276,
	-225, 556, 127, 210, -287, -307, -286, 200, -254, -537,
	509, 556, -292, -291, -289, -294, -293, -289, -318, -459,
	98, 346, -318, -236, -544, 180, -543, 5, 10, -285,
	-254, -306, -412, -241, 80, 115, -286, -115, -115, 556,
	-359, 556, -254, -567, -219, -377, 556, 556, -373, -372,
	-191, 525, 556, 556, 556, 556, -519, -520, 48, 496,
	106, -383, -519, -519, -514, -516, 162, 525, -494, -497,
	-496, 329, 438, 180, 347, 556, 458, 521, -560, 556,
	525, -298, -383, -372, 556, 560, 514, 556, 560, 514,
	556, 179, 556, -213, -177, 525, 44, 555, 556, 560,
	369, 128, 137, -287, -558, -372, 555, -373, 555, -452,
	-220, 134, -175, -175, -286, -373, -377, -175, -521, 146,
	-520, 366, 175, 410, 366, 175, -521, -521, -245, 53,
	-496, 329, -497, 329, 503, 128, -377, 53, -493, -286,
	-291, 212, -293, 179, 346, 417, -543, 29, -307, -412,
	411, 411, 2, -190, -285, -373, -305, -286, -305, 315,
	503, -287, -286, 106, 196, 476, 302, 32, 538, -495,
	302, 399, 62, 432, -495, 538, -494, 555, 555, 333,
	556, 2, -285, -286, 556, -287, 556, 432, -191, -287,
	410, 337, -520, -383, 22, 319, 122, -383, -560, -318,
	-318, -174, 555, -214, 62, 399, -287, -372, -191, -373,
	-326, -377, -191, 556, 556, -174, -191, -373, -377, -286,
	-377, -377, -287, 481, 556, -377, -286, -287, 555, -287,
	-191, -318, -191, -377, 556, -377, -287,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 479, 480, 482, 483, 484, 486, 487, 489,
	491, 493, 494, 495, 497, 498, 500, 501, 502, 503,
	504, 506, 508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 570, 572, 0, 1198,
	1200, 1202, 1204, 0, 710, 0, 32, 33, 0, -2,
	281, 283, 285, 0, 311, 313, 314, 316, 318, -2,
	0, 412, 413, 415, 417, -2, -2, 0, 879, 881,
	0, 559, 561, 0, 884, 886, 0, 0, 581, 582,
	0, 1289, -2, 575, 577, 579, 644, 646, 648, 650,
	652, 654, 656, 658, 660, 661, 663, 665, 667, 669,
	671, 673, 675, 677, 678, 680, 682, 684, 686, 688,
	690, 692, 694, 696, 698, 700, 702, 704, -2, 706,
	-2, -2, 0, -2, -2, -2, 1216, 36, 38, 40,
	42, 44, 46, 48, 50, 52, 363, 364, 366, 368,
	370, 372, 375, 377, 379, 1347, 419, 421, 423, 425,
	427, 429, 431, 0, -2, 1359, 0, 0, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 83, 84, 85,
	86, 87, 88, 89, 90, 66, 67, 69, 70, 71,
	75, 76, 77, 78, 81, 64, 0, 0, 1320, 1322,
	1324, 1326, -2, 0, 0, 5, 9, 11, 13, 15,
	17, 19, 21, 23, 25, 481, 485, 488, 490, 492,
	496, 499, 505, 507, 509, 466, 467, 470, 2009, 2026,
	2027, 2028, 2031, 2032, 2033, 2034, 2035, 2036, 2451, 2532,
	2533, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076,
	2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086,
	2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096,
	2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106,
	2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156,
	2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166,
	2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176,
	2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186,
	2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196,
	2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206,
	2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216,
	2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226,
	2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236,
	2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246,
	2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256,
	2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266,
	2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276,
	2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286,
	2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296,
	2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306,
	2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316,
	2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326,
	2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336,
	2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346,
	2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356,
	2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366,
	2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376,
	2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386,
	2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396,
	2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416,
	2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426,
	2427, 2428, 2429, 2430, 468, 469, 1041, 0, 533, 531,
	2001, 534, 2267, 536, 538, 406, 407, 408, 409, 410,
	411, 0, 552, 544, 551, 553, 555, 556, 557, 558,
	528, 526, 0, 552, 2061, 550, 1196, 1197, 1181, 1182,
	2305, 1223, 0, 193, 571, -2, -2, -2, 2416, -2,
	603, -2, 610, 2420, 2307, 615, 0, 617, -2, 620,
	1199, 1201, 1203, 708, 709, 2012, 0, 0, 0, 0,
	34, 35, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1090, 1091, 1092, 0, 201, 203, -2,
	-2, -2, -2, 0, 0, 2345, 2110, 1969, 2028, 1972,
	1967, 282, 284, 286, 287, 0, 0, 0, 0, 0,
	0, 312, 315, 317, -2, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 936, 928, 929, 1147, 0,
	0, 0, -2, 414, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 343, 471, 472, 0, 1348, 1348, 0,
	0, 0, 0, 256, 247, 880, 882, 883, 0, 0,
	0, 0, 560, 562, 0, 0, 229, 885, 887, 888,
	0, 0, 0, 0, 0, 258, 0, 0, 576, 578,
	580, 645, 647, 649, 651, 653, 655, 657, 659, 662,
	664, 666, 668, 670, 672, 674, 676, 679, 681, 683,
	685, 687, 689, 691, 693, 695, 697, 699, 701, 703,
	705, 715, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, -2, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 799, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 718, 720, 721, 722, 0, 779, 797,
	798, 807, 707, 0, 1081, 1349, 1225, 1206, 1220, 1225,
	1208, 1209, 1210, 1211, 1212, 1217, 1219, 1213, 1214, 1215,
	37, 39, 41, 43, 45, 47, 49, 51, 53, 365,
	367, 369, 371, 373, 376, 378, 380, -2, 1318, 1319,
	420, 422, 424, 426, 428, 430, 432, 563, 0, 565,
	0, 719, -2, 0, 1353, 1353, 1353, 0, 0, 1319,
	1317, 0, 568, 569, 624, 625, 1612, 0, 0, 0,
	0, 0, 0, 0, 1866, 1698, 0, 626, -2, 1729,
	1731, 2391, 2416, 1865, 1733, 1734, 1735, 1736, 1737, 0,
	1739, 1740, 1741, 1742, 1743, 1744, 0, 1746, 0, 1751,
	1752, 1753, 0, 2398, 1946, 2022, -2, 0, 0, 2404,
	2018, 0, 1832, 1769, -2, -2, 2045, 2024, 1544, 1545,
	1546, 1547, 1548, -2, -2, 2434, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 0, 2379, 2399,
	2400, 2405, 2407, 2401, 2388, 1794, 2122, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1571, 1580, -2, -2, -2, -2, -2, -2, -2, 2392,
	2393, 2410, 2413, 2419, 2424, 2425, 2397, 2406, 2433, 2435,
	2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445,
	2446, 2447, 2448, 2449, 2450, 1572, -2, -2, -2, -2,
	1336, 2278, 1339, 1041, 1337, 1321, 1323, 0, 1325, 0,
	0, 0, 1330, 1356, 1354, 0, 1397, 1334, 1335, 1415,
	1415, 1439, 0, 1420, 0, 1439, 1348, 1465, 0, 1426,
	2297, 1770, 1771, 0, 2028, 2023, -2, -2, 2431, 0,
	0, 0, 0, 0, 0, 0, 529, 0, 535, 537,
	0, 0, 0, 0, 0, 0, 0, 0, 1222, 1146,
	573, 574, 0, 598, 0, 602, 2387, -2, 0, 2316,
	-2, 606, 1226, 1230, 1231, 1232, 1233, 1234, 0, 0,
	0, 0, 1239, 0, 0, 612, 0, 0, 599, 600,
	618, 621, 0, 711, 712, 713, 714, 63, 0, 2399,
	1465, 65, 0, 1991, 2053, 2054, 2055, 2056, 2057, 2432,
	2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461,
	2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471,
	2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481,
	2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521,
	2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531,
	2434, 68, 0, 2399, 72, 0, 2399, 0, -2, 79,
	0, 1997, 82, 0, 1994, 91, 0, 2399, 0, 1966,
	-2, 0, 178, 2005, 0, 907, 2007, -2, 2399, 1089,
	259, 260, 2041, 2042, 2049, 2050, 2051, 2052, 0, 0,
	0, 0, 871, 1963, 1968, 872, 1987, 873, 1973, 0,
	288, 289, 290, 291, 292, 0, 293, 2399, 295, 296,
	0, 298, 299, 2399, 301, 302, 0, 304, 0, 214,
	215, 320, 321, 0, 323, 0, 2399, 0, 0, 0,
	329, -2, 344, 0, 341, 332, 333, 335, 336, 337,
	338, 0, 384, 382, 2002, 0, 900, 2399, 0, 904,
	-2, 2008, 0, 0, 1126, -2, 2399, 1086, 0, 1132,
	1128, 0, -2, 0, 1346, 2399, 1243, 932, 933, 934,
	935, 1477, 403, 0, 1258, 0, 1260, 0, 1279, 1471,
	1415, 0, 0, 1476, 345, 346, 347, 348, 349, 2399,
	0, 0, 0, 354, 0, 356, 357, 358, 359, 360,
	361, 362, 167, 2399, 437, 464, 0, 167, 2399, 440,
	167, 2399, 443, 0, 446, 1145, 167, 2399, 449, 167,
	2399, 452, 454, 167, 2399, 458, 459, 461, 2399, 463,
	261, 1192, 1193, 1194, 1195, 0, -2, 522, 2011, -2,
	474, 0, 475, 0, -2, 0, 273, 0, 0, 889,
	890, 891, 892, 893, 896, 897, 898, 899, 1452, 232,
	230, 0, 0, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1191, 0, 0, 583, 0, 0, 716, 717, 0,
	0, 727, 728, 729, 0, 273, 2308, 2275, 2142, 736,
	0, 739, 742, -2, 0, 0, 0, 0, 746, 0,
	751, 752, 753, 0, 755, 757, 878, 759, 0, 0,
	761, 0, 765, 0, 768, 0, 770, 0, 772, -2,
	-2, -2, -2, 783, -2, 0, 786, 788, 0, 790,
	-2, 0, 799, 795, 796, 0, 0, 0, 0, 815,
	816, 0, 825, 0, 828, 829, 830, 0, 832, 833,
	0, 835, 836, 837, 838, 0, 840, 841, -2, -2,
	845, 847, 0, 854, 0, 858, 0, 862, 0, 723,
	724, 167, 1469, 1205, -2, 1207, 0, -2, 0, 564,
	0, 567, 1376, 1304, 1301, 0, 1373, 1374, 1305, 0,
	0, 0, 1312, 0, 1351, 1352, 0, 0, 0, 1291,
	1292, 0, 0, 0, 0, 1871, 1872, 1873, 1874, 1875,
	1876, 1879, 1880, 1877, 1878, 1881, 1882, 0, 0, 0,
	0, 0, 1883, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1884, 1885, 1886, 0, 0, 1888,
	0, 1890, 0, 0, 0, 0, 0, 0, 1677, 1679,
	1954, 0, 0, 1887, 1617, 1618, 1619, 1620, 1621, 1656,
	1657, 0, 0, 1730, 1951, 1950, 1732, 0, 1902, 0,
	1745, -2, 0, 1866, 1897, 0, 0, 1754, 1755, 1756,
	0, 0, 1902, 0, 0, 1945, 1766, 1767, 1609, 0,
	0, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1558,
	1557, 0, 1559, 0, 1560, 1561, 1568, 1581, 0, 0,
	0, 0, 1585, 0, 0, 0, 0, 0, 0, 0,
	1926, -2, 0, 0, 0, 0, 1573, 0, 1338, 0,
	0, 1401, 1955, 1959, 1960, 1401, 1401, 0, 0, 1903,
	1462, 1462, 0, 0, 1458, 1458, 1458, 1456, 1439, 0,
	1439, 1449, 0, 1439, 1439, 0, -2, 1420, 0, 0,
	1449, 0, 1433, 510, 512, 514, 516, 517, 518, 520,
	1466, 1467, 0, 0, 0, 0, 2029, 0, 0, 0,
	0, 0, 2014, 0, 0, 0, 0, 2355, 2307, 540,
	554, 1348, 0, 1905, 1492, 1496, 0, 1498, 1499, 1500,
	1501, 1502, 0, 0, 1493, -2, 1569, 1571, 1592, 2046,
	2047, 2048, 1552, 1553, 1554, 1555, 1556, 1564, 1551, 1551,
	1551, 1562, 1591, 1583, 1591, 1587, 1537, 1538, 1539, 1574,
	1575, 1576, 1577, 0, 2355, 2307, 546, 0, 0, 0,
	0, 0, -2, 608, 613, 614, 0, 1228, 0, 1235,
	635, 636, 637, 1237, 1238, 0, 1240, 611, 638, 639,
	640, 641, 642, 643, 0, 1975, 1976, 1977, 1978, 1981,
	1982, 0, 0, 609, 628, 616, 0, 622, 92, 1178,
	0, 131, 0, 1178, 1178, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 116, 127, 104, 105, 0,
	0, 0, 0, 0, 73, 1063, 0, 1066, 0, 0,
	0, 0, 0, 0, 0, 1079, 0, 0, 0, 0,
	115, 0, 0, 110, 94, 0, 0, 0, 117, 129,
	0, 158, 160, 0, 0, 0, 0, 0, 0, 177,
	185, 0, 0, 0, 0, 1087, 0, 1345, 0, 0,
	2399, 0, 1452, 2186, -2, -2, 1452, 870, 0, 0,
	2029, 1971, 0, 0, 0, 0, 0, 0, 0, 322,
	324, 0, 326, 327, 328, 0, 1125, 0, 334, 374,
	1012, 2399, 0, 0, 401, 396, 0, 398, 0, 0,
	1062, 2399, 1060, 2006, 0, 1084, 0, 1041, 2399, 2004,
	0, 0, 1133, 2038, 1142, 1146, 1245, 0, 405, 0,
	1261, 1263, 0, 0, 1472, 0, 1474, 1415, 0, 351,
	352, 353, 0, 433, 0, 165, 166, 0, 167, 2399,
	438, 0, 441, 0, 167, 2399, 1961, 447, 0, 450,
	0, 0, 456, 0, 0, 0, 0, 1348, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 236,
	0, 1451, 0, 1452, 230, 273, 273, 1452, 585, 1452,
	587, 0, 0, 730, 731, 0, 273, 273, 273, 737,
	738, 740, 741, -2, -2, -2, 855, 743, 744, 822,
	0, 0, 0, 821, 758, 0, 864, 2293, 2307, 876,
	822, 2110, 822, 2110, 822, 2110, 769, 771, 774, 810,
	818, 782, 787, 0, 0, 792, 800, -2, 0, 802,
	0, 804, 0, 806, 822, 823, 826, 831, 834, 839,
	0, 0, 0, 0, 0, 0, 0, 1080, 0, 1218,
	1376, 1304, 566, 1295, 1375, 1296, 1303, 1306, 0, 0,
	1308, 0, 1310, 0, 1371, 1372, 1379, 1380, 0, 1390,
	1391, 1383, 0, -2, 0, 0, 1386, 1387, 1314, 0,
	1331, 1332, 1333, 1360, 1363, 1156, 0, 2532, 1613, 1487,
	1614, 1615, 1990, 0, 1622, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, 1631, -2, -2, -2, -2, -2, -2,
	-2, -2, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
	1648, 1649, 1650, -2, -2, -2, 1654, 1655, -2, 1889,
	1891, 0, 1954, 0, -2, 0, -2, -2, -2, -2,
	1674, 0, 1676, 1681, 1683, 1685, 0, 0, 0, 0,
	1953, 1695, 1937, 1938, 0, 0, 1868, 1869, 1870, 1680,
	0, 1699, 1952, 1949, 0, 0, 1901, 1359, 1758, 0,
	0, 0, 0, 1765, 1750, 1899, 0, 1898, 0, 0,
	0, 1909, 0, 1944, 1940, 0, 1988, 1608, 1595, 1596,
	1597, 1598, 1599, 1600, 1610, 0, 1985, 2015, 2021, 1842,
	0, 0, 0, 1795, 1796, 1797, 1798, 1799, 0, 1801,
	1802, 0, 1804, 1805, 0, 1807, 1808, 0, 1810, 1811,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1505, 0,
	0, 0, 1509, 0, 0, 0, 1513, 0, 0, 0,
	1517, 0, 0, 0, 1521, 0, 0, 0, 1525, 0,
	0, 0, 1529, 0, 0, 0, 1533, 0, 0, 0,
	0, 0, 1814, 0, 1912, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 1816, 0, 1818, 1903, 1923, 0,
	0, 1700, 0, 0, 0, 1866, 0, 1821, 1903, 1931,
	0, 0, 0, 0, 0, 1903, 0, 1936, 0, 1828,
	0, 1830, 1340, 0, 0, 1482, 0, 0, 0, 1958,
	1482, 1482, 0, 1396, 0, 0, 1459, 1460, 1461, 0,
	0, 1462, 0, 1453, 1457, 1454, 1455, 1449, 1412, 0,
	0, 1992, 1449, 1418, 1448, 0, 1041, 1438, 1449, 1449,
	0, -2, 1422, 1439, 0, 0, 511, 513, 515, 519,
	521, 0, 0, 1359, -2, 0, -2, 1040, 0, 0,
	0, 0, 530, 532, 0, 0, 453, 0, 0, 524,
	0, 527, 0, 1483, 1486, 0, 0, 1497, 1503, 1504,
	0, -2, 0, 0, 1593, 0, 0, 0, 0, 0,
	196, 0, 601, 0, 1227, 1236, 0, 632, 0, 634,
	0, 1979, 1983, 1980, 1984, 0, 623, 0, 0, 0,
	0, 1177, 0, 135, 2399, 0, 169, 0, 0, 1005,
	1998, 0, 0, 0, 0, 2129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 101,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 1064,
	1065, 1067, 1074, 1076, 0, 1070, 1986, 0, 0, 1071,
	0, 1073, 1075, 1077, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 103, 107, 0, 0, 0,
	0, 1965, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1121, 1119, 1099, 1100, 1101, 1102,
	1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1114, 1115, 1116, 1117, 1118, 0, 0, -2, 0,
	0, 0, 0, 206, 0, 264, 1964, 1974, 0, 894,
	895, 294, 297, 300, 303, 202, 0, 330, 0, 0,
	938, 913, 0, 0, 383, 273, 0, 0, 397, 2038,
	902, 182, 183, 184, 1058, 1061, 0, 1041, 2399, 1098,
	0, 0, 0, 0, 0, 0, 1131, 0, 2399, 1993,
	2037, 2038, 1247, 1255, 0, 1482, 0, 1277, 1264, 0,
	0, 0, 1277, 1281, 1282, 1284, 1285, 0, 0, 1473,
	1479, 0, 355, 465, 167, 435, 0, 167, 167, 444,
	0, 0, 167, 455, 167, 460, 167, 262, 462, 473,
	523, 1348, 1348, 273, 271, 2244, 269, 266, 268, 0,
	0, 0, 939, 941, 942, 943, 944, 0, 2038, 0,
	2175, 2038, 0, 1267, 1269, 0, 226, 0, 233, 231,
	236, 0, 0, 395, 584, 589, 725, 0, 273, 733,
	734, 735, 776, 812, 820, 745, 747, 748, 749, 0,
	877, 874, 875, 760, 822, 763, 822, 766, 822, 785,
	789, 794, 801, 0, 0, 0, 814, 0, 0, 0,
	0, 0, 0, 0, 859, 860, 861, 863, 1470, 1299,
	1300, 1302, 0, 1311, 0, 0, 1385, -2, -2, 1384,
	1388, 1389, -2, -2, -2, -2, 1307, 0, 1316, 1313,
	0, 1370, 1154, 1155, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 1696, 0, -2, 1675, 1678, 1682, 1684,
	1686, 0, 0, 0, 0, 0, 0, 1892, 0, 1894,
	1697, 1947, 1950, 1864, 0, 0, 1358, 1359, 1359, 0,
	1764, 0, 1900, 0, 1907, 1908, 0, 1757, 0, 1941,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1768,
	0, 0, 0, 0, 1800, 1803, 1806, 1809, 0, 0,
	0, 0, 1789, 0, 0, 0, 1793, 1563, 1549, 0,
	1591, 1589, 1590, 1584, 1591, 1588, 1541, 0, 1506, 1507,
	1508, 1510, 1511, 1512, 1514, 1515, 1516, 1518, 1519, 1520,
	1522, 1523, 1524, 1526, 1527, 1528, 1530, 1531, 1532, 1534,
	1535, 1536, 1540, 0, 1813, 0, 1815, 1817, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1703, 1704, 1705, 1820, 1929, 1930,
	0, 0, 0, 0, 0, 0, 1826, 0, 1935, 1827,
	1829, 1348, 0, 1341, 0, 1398, 1393, 1481, 0, 1956,
	1452, 1400, 1402, 1957, 1995, 1393, 1393, 0, 1904, 0,
	0, 1443, 0, 0, 0, 1445, 1416, 0, 0, 1410,
	0, 1406, 1407, 1408, 1409, 1417, 1041, 1447, 1419, 1423,
	2015, 0, 1449, 0, 1434, 0, 1436, 1468, 0, 1428,
	1431, 0, 0, 2030, 274, 0, 305, 309, 310, 306,
	307, 308, 539, 0, 0, 0, 0, 1906, 0, 1488,
	0, 1494, 0, 0, 0, 0, 545, 0, 0, 0,
	192, 0, 597, -2, 630, 631, 633, 0, 629, 132,
	1178, 0, 0, 1159, 1161, 0, 137, 2399, 146, 0,
	979, 0, 1996, 0, 0, 0, 0, 0, 1180, 0,
	0, 2399, 167, 2399, 167, 149, 152, 0, 157, 154,
	155, 0, 0, 970, 93, 1178, 0, 96, 100, 108,
	0, 0, 0, 114, 0, 0, 0, 1163, 1169, 0,
	0, 1068, 1069, 1072, 1078, 74, 0, 0, 1167, 1173,
	80, 0, 1158, 159, 98, 102, 109, 0, 1175, 95,
	0, 181, 0, 0, 0, 173, 0, 174, 175, 186,
	0, 167, 2399, 0, 905, 906, 1120, 1082, 1083, 0,
	1088, 0, 0, 0, 1452, 198, 0, 1452, 206, 0,
	1970, 0, 0, 0, 0, 0, 0, 937, 1023, 0,
	910, 0, 0, 0, 389, 385, 0, 394, 400, 399,
	901, 0, 0, 0, 0, -2, 0, 0, 1135, 1129,
	1130, 0, 0, 0, 2399, 1249, 1255, 0, 1254, 1346,
	1359, 404, 1256, 1277, 0, 0, 0, 1266, 1262, 1259,
	1482, 0, 0, 0, 0, 0, 1475, 1478, 350, 434,
	167, 439, 442, 1962, 167, 448, 451, 457, 476, 477,
	248, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	948, 0, 2038, 2038, 0, 2000, 0, 0, 0, 0,
	234, 0, 237, 0, 0, 0, 242, 243, 244, 245,
	246, 227, 1452, 0, 586, 0, 0, 732, 0, 762,
	764, 767, 803, 805, 822, 848, 849, 965, 0, 965,
	0, 0, 1309, 0, 1382, 1315, 1364, 1365, 0, 1156,
	0, 1616, 1659, 0, 0, -2, 0, 0, 1663, 0,
	0, 0, -2, 0, 0, 0, 1893, 1895, 0, 1949,
	1759, 0, 0, 0, 1763, 1747, 1748, 0, 1867, 1910,
	1939, 1943, 0, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	0, 1989, 2016, 2020, 1840, 1841, 1845, 2003, 0, 0,
	0, 1772, 0, 0, 0, 0, 0, 0, 0, 0,
	1582, 1586, 0, 0, 1911, 1922, 1924, 1701, 1702, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, -2,
	-2, -2, 1719, 1720, 1721, -2, -2, -2, 0, 0,
	0, 1925, 1927, 1928, 1932, 1933, 0, 1823, 1824, 1825,
	1934, 0, 1348, 1342, 1395, 0, 1480, 1399, 0, 1395,
	1395, 1355, 1441, 0, 0, 1464, 0, 1413, 0, 1414,
	0, 1446, 0, 1421, 1424, 1425, 1435, 0, 1427, 0,
	1430, 0, 1759, -2, 275, 277, 0, 280, 542, 543,
	541, 525, 0, 0, 1490, 0, 0, 1566, 1570, 1594,
	548, 549, 547, 194, 0, 1450, 0, 0, 0, 0,
	168, 977, 1004, 0, 0, 0, 1149, 1156, 0, 0,
	1010, 139, 0, 0, 0, 147, 0, 0, 144, 0,
	151, 156, 0, 0, 0, 0, 0, 0, 111, 112,
	113, 0, 118, 0, 119, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 0, 0, 0, 1153, 0,
	0, 188, 0, 0, 0, 1123, 1124, 1164, 1170, 0,
	0, 206, 204, 0, 207, 0, 210, 211, 0, 206,
	200, 0, 0, 325, 1041, 331, 959, 1011, 0, 1013,
	0, 911, 0, 0, 1012, 381, 0, 388, 0, 0,
	1062, 0, 0, 1085, 1096, 1041, 0, 1134, 1136, 1144,
	0, 0, 0, 1251, 1255, 0, 1244, 1245, 1378, 1257,
	1275, -2, 0, 0, 1359, 1283, 1280, 1286, 1287, 0,
	436, 445, 270, 0, 265, 267, 0, 251, 0, 0,
	940, 945, 0, 0, 0, 0, 0, 1268, 1270, 0,
	0, 0, 0, 0, 0, 236, 257, 0, 726, 750,
	813, 850, 964, 0, 0, 852, 0, 0, 1381, 1368,
	1369, 1366, 1156, 1661, 1665, 0, 0, 0, 1667, -2,
	0, 1689, -2, -2, 1896, 1948, 1738, 1359, 1760, 1762,
	1749, 1942, 1611, 0, 1847, 1844, 0, 1831, 0, 1784,
	1785, 0, 0, 1788, 1790, 1791, 1792, 1550, 1543, 1542,
	1921, 0, 0, 0, 0, 1822, 1343, 0, 1836, 0,
	0, 1403, 1836, 1836, 1442, 0, 1444, 1411, 1404, 0,
	2016, 1437, 1429, 0, 0, 278, 0, 1484, 1489, 0,
	1495, 1565, 195, 133, 134, 136, 0, 978, 0, 981,
	0, 0, 0, 0, 988, 989, 0, 0, 0, 0,
	0, 998, 0, 1027, 1037, 0, 1370, 0, 0, 0,
	141, 162, 0, 0, 1179, 0, 0, 167, 167, 0,
	0, 1160, 1162, 0, 0, 0, 0, 121, 0, 0,
	1165, 1171, 1168, 1174, 0, 0, 0, 1176, 179, 180,
	0, 167, 0, 172, 167, 167, 1153, 0, 0, 0,
	197, 0, 0, 0, 0, 199, 263, 206, 0, 967,
	0, 1023, 1015, 1016, 1017, 0, 1022, 1024, 0, 0,
	925, 912, 0, 921, 0, 0, 938, 913, 0, 386,
	903, 1059, 1093, 1041, 0, 1127, 0, 0, 0, 0,
	0, 0, 1253, 1255, 0, 1246, 1247, 1277, 1377, 0,
	0, 0, 1265, 1378, 0, 272, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 238, 0, 239,
	240, 241, 228, 588, 590, 0, 0, 596, 963, 0,
	0, 0, 0, 1367, 1669, -2, -2, 1690, 0, 2017,
	2019, 1359, 0, 1833, 1361, 0, 0, -2, 0, 0,
	0, 1344, 1327, 0, 1394, 1392, 1328, 1329, 1463, 0,
	1432, 279, 0, 1491, 138, 0, 982, 983, 1999, 985,
	0, 987, 990, 0, 993, 2040, 0, 997, 0, 1006,
	1028, 0, 959, 0, 1033, 1034, 1035, 1150, 1151, 1039,
	0, 140, 142, 161, 1153, 0, 143, 150, 0, 0,
	97, 0, 0, 2101, 124, 122, 120, 1157, 99, 0,
	181, 187, 1152, 176, 189, 167, 0, 1166, 1172, 208,
	0, 209, 212, 0, 0, 913, 966, 0, 1014, 0,
	1025, 1026, 915, 0, 914, 0, 0, 0, 0, 0,
	387, 390, 0, 393, 0, 0, 1137, 0, 1143, 0,
	0, 0, 1241, 0, 0, 1248, 1249, 402, 1271, 0,
	0, 1277, 1288, 250, 0, 0, 946, 949, 950, 951,
	952, 953, 954, 955, 956, 957, 947, 1039, 0, 0,
	1003, 0, 255, 235, 0, 592, 0, 594, 0, 851,
	853, 0, 0, 1761, 1851, 0, 0, 1786, 1787, -2,
	0, 1727, 1835, 1837, 0, 1405, 1485, 980, 984, 0,
	0, 0, 1045, 0, 0, 999, 0, 1031, 1032, 967,
	0, 959, 0, 0, 164, 0, 0, 0, 0, 0,
	0, 0, 171, 190, 1153, 205, 222, 0, 1094, 915,
	0, 0, 923, 0, 926, 0, 922, 919, 920, 959,
	0, 391, 392, 0, 1097, 0, 1144, 0, 0, 1255,
	1250, 1251, 1482, 1274, 1278, 0, 0, 1037, 1039, 913,
	0, 591, 0, 0, 856, 857, 0, 0, 0, 0,
	1846, 1362, 1728, 0, 0, 0, 0, 992, 1050, 0,
	0, 0, 1029, 1030, 1027, 0, 1008, 0, 1041, 145,
	0, 1039, 0, 971, 0, 0, 974, 0, 0, 125,
	2101, 123, 0, 167, 225, 0, 219, 217, 218, 908,
	0, 0, 1019, 1021, 0, 927, 967, 925, 1095, 1039,
	0, 1037, 0, 0, 1253, 0, 273, 273, 959, 1037,
	1482, 0, 273, 593, 595, 1843, 1863, 1852, -2, 2358,
	2107, 0, 1863, 1863, 1838, 1839, 0, 0, 994, 1046,
	1047, 0, 1042, 1043, 1044, 2039, 995, 996, 1482, 1036,
	0, 1045, 163, 959, 968, 0, 0, 969, 0, 0,
	128, 0, 130, 191, 213, 0, 0, 0, 1018, 0,
	0, 0, 0, 913, 915, 1037, 0, 959, 0, 1252,
	1242, 0, 252, 253, 967, 959, 1002, 254, 1848, 0,
	0, 1854, 1855, 1856, 1857, 1858, 1849, 1850, 986, 0,
	1048, 0, 1049, 0, 0, 0, 1007, 0, 1050, 148,
	972, 0, 975, 0, 126, 0, 220, 221, 0, 1020,
	916, 0, 918, 915, 924, 959, 0, 967, 0, 1272,
	0, 913, 967, 0, 1860, 1861, 0, 0, 0, 1051,
	0, 1054, 1055, 0, 1052, 0, 1027, 0, 0, 0,
	962, 917, 909, 967, 1039, 913, 1037, 0, 1482, 913,
	1859, 1862, 1853, 991, 1053, 1056, 1057, 1038, 1009, 0,
	0, 223, 0, 958, 960, 961, 913, 1037, 1482, 959,
	1482, 1000, 1482, 967, 0, 0, 1482, 959, 1140, 967,
	1273, 1001, 973, 0, 224, 1138, 967, 913, 0, 913,
	1482, 0, 1482, 1141, 967, 1139, 976,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 544, 3, 550, 545, 3,
	555, 556, 548, 546, 560, 547, 557, 549, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 563, 3,
	536, 538, 537, 541, 559, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 553, 3, 554, 551, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 561, 543, 562, 539,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 540, 57879, 542,
	57880, 552, 57881, 558, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1232
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1237
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1239
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1242
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1243
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1244
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1245
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1246
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1257
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1266
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1267
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1270
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1271
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1272
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1273
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1274
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1275
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1276
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1277
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1278
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1334
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1360
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1373
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1390
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1394
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1398
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1415
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1419
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].str}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1440
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1472
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1476
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1480
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1486
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1490
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1496
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1505
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1516
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1520
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1526
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1534
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1544
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1548
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1558
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1569
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1576
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1588
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1595
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1603
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1608
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1612
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1617
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1623
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1631
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1642
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1652
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1662
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1671
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1682
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1688
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1696
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1700
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1704
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1708
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1714
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1719
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1734
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1744
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1751
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1756
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1761
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1766
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1771
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1776
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1781
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1786
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1791
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1796
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1801
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1810
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1822
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1832
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1839
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 148:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1843
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1858
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1867
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1888
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1896
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1903
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1912
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1918
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1926
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1930
		{
			sqlVAL.union.val = nil
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1940
		{
			sqlVAL.union.val = nil
		}
	case 165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1947
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1951
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1955
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1961
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1965
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1990
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2001
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2012
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2022
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2031
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2040
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2049
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2053
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2056
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2060
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2074
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2107
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2111
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2119
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 197:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2181
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2190
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2194
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2198
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2210
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2214
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2221
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2225
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2242
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2246
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2336
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = nil
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2353
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2363
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2371
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2385
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2389
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = nil
		}
	case 226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2424
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2451
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2455
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2459
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2465
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2469
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2476
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2480
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2484
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2491
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2495
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2504
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2512
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2516
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2520
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2524
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2528
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2538
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2575
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2584
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2590
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2595
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2600
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2605
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2610
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2614
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2630
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2633
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2641
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2659
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2669
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2673
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2687
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2701
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2705
		{
			sqlVAL.union.val = nil
		}
	case 274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2717
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2729
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2733
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2739
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2743
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2751
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2755
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2763
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2764
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2765
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2766
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2784
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2793
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2803
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2812
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2820
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2826
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2829
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2839
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2848
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2856
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2862
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2865
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2869
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2873
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2877
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2890
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2896
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2901
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2913
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2915
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2916
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2917
		{
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2918
		{
			return helpWith(sqllex, "CREATE")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2921
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2922
		{
			return unimplemented(sqllex, "create cast")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2923
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2924
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2925
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2926
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2927
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2928
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2929
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2930
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2931
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2932
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2933
		{
			return unimplemented(sqllex, "create operator")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2934
		{
			return unimplemented(sqllex, "create publication")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2935
		{
			return unimplemented(sqllex, "create rule")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2936
		{
			return unimplemented(sqllex, "create server")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2937
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2938
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2939
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2942
		{
		}
	case 340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2943
		{
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2946
		{
		}
	case 342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2947
		{
		}
	case 343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2950
		{
		}
	case 344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2951
		{
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2954
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2955
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2956
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2957
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2958
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2959
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2960
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2961
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2962
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2963
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2964
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2965
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2966
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2967
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2968
		{
			return unimplemented(sqllex, "drop server")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2969
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2970
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2971
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2975
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2976
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2977
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2978
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2979
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2981
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2982
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2983
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2984
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3002
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3006
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3010
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3016
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3020
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3029
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3036
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3042
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3052
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3063
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3083
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3091
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3101
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3105
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3111
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3115
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3122
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3126
		{

			sqlVAL.union.val = nil
		}
	case 402:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3150
		{
			return helpWith(sqllex, "DELETE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3153
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3154
		{
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3162
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3165
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3166
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3167
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3168
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3169
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3178
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3179
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3180
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3181
		{
			return helpWith(sqllex, "DROP")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3184
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3185
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3186
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3187
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3188
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3189
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3190
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3198
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3202
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3206
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3215
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3223
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3231
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3235
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3238
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3253
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3261
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3278
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3301
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3308
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3323
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3337
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3346
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3354
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3361
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3365
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3369
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3379
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3383
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3386
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3390
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3395
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3413
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3415
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3420
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3424
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3446
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3453
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3455
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3463
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3471
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3479
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3487
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3498
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3502
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3505
		{
			return helpWith(sqllex, "DELETE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3507
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3508
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3509
		{
			return helpWith(sqllex, "INSERT")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3512
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3514
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3517
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3522
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3523
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "DELETE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3530
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3531
		{
			return helpWith(sqllex, "INSERT")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3537
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3538
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3542
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3546
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3564
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3572
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3576
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3580
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3590
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3597
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3605
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3631
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3638
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3676
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3685
		{
			return helpWith(sqllex, "GRANT")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3715
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3719
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3723
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3732
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3737
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3741
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3751
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3755
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3769
		{
			return helpWith(sqllex, "RESET")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3770
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3778
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3785
		{
			return helpWith(sqllex, "RESET")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3796
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3807
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3810
		{
			return helpWith(sqllex, "USE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3814
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3815
		{
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3816
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3817
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3823
		{
			return helpWith(sqllex, "USE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3839
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3854
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3857
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3875
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3883
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3891
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3897
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3907
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3911
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3915
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3919
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3923
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3934
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3937
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3947
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3963
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3967
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 604:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3972
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3991
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3994
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3996
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3999
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4003
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4022
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4029
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4034
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4039
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4044
		{
			return unimplemented(sqllex, "set from current")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4045
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4053
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4058
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4065
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4069
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4075
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4079
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4086
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4107
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4111
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4117
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4121
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4125
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4133
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4139
		{
			sqlVAL.union.val = tree.Low
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4143
		{
			sqlVAL.union.val = tree.Normal
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4147
		{
			sqlVAL.union.val = tree.High
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4166
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4171
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4175
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4189
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4190
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4191
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4192
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4193
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4194
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4195
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4196
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4198
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4199
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4200
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4201
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4202
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4203
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4204
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4205
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4207
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4208
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4209
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4210
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4211
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4212
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4213
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4214
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4215
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4216
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4217
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4218
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4219
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4221
		{
			return helpWith(sqllex, "SHOW")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4228
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4231
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4235
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4240
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4245
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4250
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4261
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4262
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4273
		{
			sqlVAL.str = "client_encoding"
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4276
		{
			sqlVAL.str = "timezone"
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4277
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4291
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4295
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4299
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4310
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4318
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4326
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4332
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4340
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4349
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4358
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4367
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4375
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4385
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4389
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4392
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4394
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4397
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4399
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4403
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4406
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4417
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4425
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4433
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4437
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4440
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4451
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4458
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4461
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4468
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4471
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4484
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4492
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4500
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4503
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4513
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4516
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4518
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4522
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4525
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4533
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4536
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4538
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4541
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4552
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4557
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = true
		}
	case 778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4563
		{
			sqlVAL.union.val = true
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = false
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4584
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4586
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4590
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4594
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4597
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4599
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4607
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4615
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4625
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4631
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4633
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4639
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4641
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4647
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4651
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4661
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4665
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4679
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4681
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4684
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4686
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4690
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4693
		{
			sqlVAL.union.val = true
		}
	case 808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4694
		{
			sqlVAL.union.val = false
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4702
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4705
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4707
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4710
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4718
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4741
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4751
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4753
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4756
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = true
		}
	case 822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = false
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4767
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4774
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4781
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4785
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4788
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4795
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4799
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4806
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4819
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4827
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4832
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4837
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4849
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4853
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4857
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4870
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4873
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4884
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4892
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4896
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4904
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4919
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4926
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4941
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4949
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4964
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4976
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4980
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4987
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4992
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5116
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5120
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5163
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5168
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5172
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5180
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5189
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5193
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.nameList().ToStrings()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5200
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5204
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5217
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5218
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5219
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5229
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5230
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5231
		{
			return helpWith(sqllex, "RESUME")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5249
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5251
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5255
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5258
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5263
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5267
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5290
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5292
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5298
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5306
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5312
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5319
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].str,
				AuthRole: sqlDollar[5].str,
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5326
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
				AuthRole:    sqlDollar[8].str,
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5333
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5344
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5353
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5361
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5400
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5415
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5433
		{

			sqlVAL.union.val = nil
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5439
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = nil
		}
	case 914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5449
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5456
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5460
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5465
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5470
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5477
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5481
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5491
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 923:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5497
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5511
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5526
		{
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5527
		{
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5528
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5546
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5547
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5552
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5553
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5554
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5555
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5556
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5561
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5567
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5577
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5596
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5600
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5611
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5612
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5614
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5616
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5617
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5618
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5619
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5624
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5633
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5640
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5645
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5650
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 965:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.str = ""
		}
	case 967:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5670
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 968:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5683
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5690
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5696
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5700
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 973:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5706
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5716
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5720
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 976:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5726
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5740
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5761
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5765
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5769
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5777
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5781
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5785
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5803
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5826
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5830
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5834
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5844
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5848
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5852
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5859
		{
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5860
		{
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5865
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5878
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5893
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5905
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5917
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5922
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5928
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5946
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5958
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5969
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5976
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5980
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5986
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5996
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6007
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6011
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6024
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6035
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6045
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6051
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6055
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6061
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6076
		{
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6077
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6078
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6079
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6080
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6081
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6099
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6103
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6149
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6153
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6174
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6178
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6182
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6194
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6237
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6246
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6254
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6258
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6261
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6262
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6265
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6266
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6268
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6270
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6280
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6283
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6285
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6287
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6289
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6290
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6292
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6293
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6295
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6297
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6305
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6308
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6312
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6316
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6333
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6341
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6345
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6348
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = true
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6358
		{

			sqlVAL.union.val = true
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = false
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6373
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6387
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6399
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6411
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6421
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6431
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6435
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6443
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6447
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6483
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6499
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6516
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6522
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.union.val = nil
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6532
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6541
		{
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6542
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6551
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6558
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6560
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6562
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6564
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6566
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6568
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6576
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6586
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6606
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6624
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6643
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6660
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6677
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6681
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = false
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6702
		{
			sqlVAL.union.val = true
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = false
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = true
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6716
		{
			sqlVAL.union.val = false
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6722
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6735
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6757
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.str = ""
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6762
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6766
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6770
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6782
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6788
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6794
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6808
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6816
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6838
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6856
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6864
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6870
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6882
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6888
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6902
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6908
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6916
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6920
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6925
		{
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6926
		{
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6929
		{
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6930
		{
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6941
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6959
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6961
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6968
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6981
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6989
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6991
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6997
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7018
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7026
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7034
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7037
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7041
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7042
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7043
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7059
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7062
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7067
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7080
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7085
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7089
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7094
		{
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7095
		{
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7096
		{
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7106
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7110
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7113
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7116
		{
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7117
		{
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7131
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7135
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7141
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7145
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7158
		{
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7160
		{
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7164
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7169
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7199
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7213
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7245
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.str = ""
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.str = ""
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.str = ""
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.str = ""
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7289
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7302
		{
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7303
		{
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7332
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7350
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7354
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7363
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7368
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7388
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7412
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7416
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7439
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7443
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7469
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7481
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7493
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7510
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7513
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7517
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7566
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7570
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7597
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7613
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7623
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7627
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7637
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7646
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7647
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7648
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7656
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7657
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7658
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7663
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7698
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7699
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7700
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7722
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7735
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7749
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7761
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7765
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7783
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7798
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7805
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7817
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7821
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7826
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = true
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.union.val = false
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7862
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7874
		{
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7875
		{
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = nil
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7888
		{
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7889
		{
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7893
		{
			sqlVAL.union.val = true
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7897
		{
			sqlVAL.union.val = false
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.union.val = false
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = true
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7918
		{
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7919
		{
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7933
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7943
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7950
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7960
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7981
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7986
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8002
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8015
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8048
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8081
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8103
		{
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8104
		{
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8107
		{
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8108
		{
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8125
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8139
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8161
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8163
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8175
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8178
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8180
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8200
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8205
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8210
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8216
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8221
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8228
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8233
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8244
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8252
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8260
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8291
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8301
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8311
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8319
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8332
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8336
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8347
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8377
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8388
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8398
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8410
		{
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8412
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = nil
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = true
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = false
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8492
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8505
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.str = tree.AstFull
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.str = tree.AstRight
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.str = tree.AstInner
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8529
		{
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8530
		{
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.str = tree.AstHash
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.str = ""
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8580
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8588
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8592
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8597
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8615
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8621
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8627
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8637
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.union.val = true
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8651
		{
			sqlVAL.union.val = false
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8657
		{
			sqlVAL.union.val = true
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8661
		{
			sqlVAL.union.val = false
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8667
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8686
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8699
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8707
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8708
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8725
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8726
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8728
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8736
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8737
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8749
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8756
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8765
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8805
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8817
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8818
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8822
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8823
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8824
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8826
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8827
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8828
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8829
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8830
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8831
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8832
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8834
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8835
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8836
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8838
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8839
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8840
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8841
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8842
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8843
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8844
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8846
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8847
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8848
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8850
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8851
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8852
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = types.Geography
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8856
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8857
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8867
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8875
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8901
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8909
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = nil
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = types.Int2
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.union.val = types.Int
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8940
		{
			sqlVAL.union.val = types.Float4
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8944
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = types.Float
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8952
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8960
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8968
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union.val = types.Bool
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8982
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = types.Float
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9001
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9007
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9029
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9041
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9047
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = types.String
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9068
		{
			sqlVAL.union.val = true
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9069
		{
			sqlVAL.union.val = false
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = types.Date
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9078
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9086
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9100
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9109
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9117
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9130
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9134
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = true
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = false
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = false
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = types.Interval
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9158
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9169
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9177
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9201
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9209
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9233
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9242
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9257
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = nil
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9287
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9324
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9328
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9332
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9336
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9347
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9360
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9364
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9368
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9376
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9384
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9404
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9440
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9444
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9448
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9456
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9460
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9464
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9468
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9476
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9508
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9599
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9601
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9605
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9617
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9637
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9645
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9653
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9665
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9687
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9747
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9751
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9759
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9791
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9803
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9821
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9829
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9865
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9873
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9881
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9886
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9908
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9912
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9921
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9936
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9966
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9977
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9978
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9993
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10002
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10055
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10068
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10090
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10099
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10103
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10125
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10129
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10155
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10163
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10183
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10193
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10195
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10198
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10200
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10207
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10216
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10225
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10231
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10234
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10239
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10244
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10249
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10254
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10263
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10264
		{
			return unimplemented(sqllex, "treat")
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10282
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10285
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10290
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10337
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.str = ""
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10396
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10426
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10439
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10467
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10486
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10507
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10536
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = tree.Any
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10552
		{
			sqlVAL.union.val = tree.Some
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = tree.All
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10564
		{
			sqlVAL.union.val = tree.Div
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = tree.LT
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = tree.GT
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = tree.LE
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = tree.GE
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.union.val = tree.NE
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = tree.Like
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10581
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10624
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10676
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10696
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10733
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10737
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10750
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10771
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10831
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10848
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10854
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10858
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10865
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10871
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10882
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10897
		{
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10898
		{
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10970
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10978
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11028
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11051
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11067
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11076
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11087
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11096
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11104
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11116
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11219
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11296
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11309
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11316
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.str = ""
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11351
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
