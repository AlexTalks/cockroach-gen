// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:72

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) partitionedBackup() tree.PartitionedBackup {
	return u.val.(tree.PartitionedBackup)
}
func (u *sqlSymUnion) partitionedBackups() []tree.PartitionedBackup {
	return u.val.([]tree.PartitionedBackup)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}

//line sql-gen.y:658
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SAVEPOINT",
	"SCATTER",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:10794

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 29,
	-2, 1185,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 67,
	420, 183,
	-2, 0,
	-1, 76,
	201, 1009,
	213, 1009,
	228, 285,
	322, 285,
	331, 807,
	360, 285,
	369, 807,
	406, 807,
	430, 285,
	455, 807,
	-2, 0,
	-1, 81,
	228, 289,
	-2, 0,
	-1, 82,
	118, 1185,
	207, 1185,
	440, 1185,
	441, 1185,
	-2, 0,
	-1, 94,
	133, 1156,
	150, 1156,
	163, 1156,
	210, 1156,
	240, 1156,
	282, 1156,
	292, 1156,
	435, 1156,
	-2, 1127,
	-1, 126,
	140, 715,
	227, 715,
	325, 695,
	374, 695,
	423, 715,
	-2, 0,
	-1, 128,
	4, 1187,
	21, 1187,
	22, 1187,
	23, 1187,
	24, 1187,
	25, 1187,
	26, 1187,
	28, 1187,
	29, 1187,
	35, 1187,
	40, 1187,
	41, 1187,
	42, 1187,
	43, 1187,
	44, 1187,
	45, 1187,
	46, 1187,
	47, 1187,
	48, 1187,
	50, 1187,
	51, 1187,
	52, 1187,
	54, 1187,
	55, 1187,
	56, 1187,
	57, 1187,
	58, 1187,
	62, 1187,
	63, 1187,
	64, 1187,
	65, 1187,
	67, 1187,
	68, 1187,
	69, 1187,
	73, 1187,
	74, 1187,
	75, 1187,
	76, 1187,
	77, 1187,
	78, 1187,
	79, 1187,
	82, 1187,
	83, 1187,
	84, 1187,
	85, 1187,
	87, 1187,
	89, 1187,
	90, 1187,
	91, 1187,
	93, 1187,
	95, 1187,
	96, 1187,
	104, 1187,
	105, 1187,
	106, 1187,
	107, 1187,
	109, 1187,
	110, 1187,
	111, 1187,
	113, 1187,
	114, 1187,
	115, 1187,
	117, 1187,
	118, 1187,
	120, 1187,
	121, 1187,
	124, 1187,
	125, 1187,
	126, 1187,
	128, 1187,
	129, 1187,
	131, 1187,
	132, 1187,
	134, 1187,
	135, 1187,
	136, 1187,
	137, 1187,
	138, 1187,
	139, 1187,
	140, 1187,
	141, 1187,
	142, 1187,
	143, 1187,
	144, 1187,
	145, 1187,
	146, 1187,
	147, 1187,
	149, 1187,
	155, 1187,
	156, 1187,
	157, 1187,
	158, 1187,
	162, 1187,
	164, 1187,
	168, 1187,
	169, 1187,
	170, 1187,
	171, 1187,
	172, 1187,
	173, 1187,
	175, 1187,
	176, 1187,
	178, 1187,
	179, 1187,
	181, 1187,
	182, 1187,
	183, 1187,
	184, 1187,
	185, 1187,
	186, 1187,
	187, 1187,
	188, 1187,
	189, 1187,
	191, 1187,
	192, 1187,
	194, 1187,
	195, 1187,
	196, 1187,
	197, 1187,
	201, 1187,
	202, 1187,
	203, 1187,
	204, 1187,
	207, 1187,
	208, 1187,
	209, 1187,
	211, 1187,
	213, 1187,
	215, 1187,
	217, 1187,
	218, 1187,
	219, 1187,
	221, 1187,
	225, 1187,
	226, 1187,
	227, 1187,
	228, 1187,
	229, 1187,
	231, 1187,
	232, 1187,
	234, 1187,
	235, 1187,
	237, 1187,
	238, 1187,
	241, 1187,
	242, 1187,
	243, 1187,
	246, 1187,
	247, 1187,
	248, 1187,
	249, 1187,
	251, 1187,
	252, 1187,
	253, 1187,
	254, 1187,
	255, 1187,
	256, 1187,
	257, 1187,
	258, 1187,
	259, 1187,
	260, 1187,
	261, 1187,
	263, 1187,
	265, 1187,
	266, 1187,
	267, 1187,
	268, 1187,
	269, 1187,
	271, 1187,
	273, 1187,
	275, 1187,
	277, 1187,
	278, 1187,
	279, 1187,
	280, 1187,
	281, 1187,
	284, 1187,
	287, 1187,
	288, 1187,
	289, 1187,
	290, 1187,
	293, 1187,
	294, 1187,
	295, 1187,
	297, 1187,
	299, 1187,
	300, 1187,
	301, 1187,
	302, 1187,
	303, 1187,
	304, 1187,
	305, 1187,
	306, 1187,
	307, 1187,
	308, 1187,
	309, 1187,
	311, 1187,
	312, 1187,
	313, 1187,
	314, 1187,
	315, 1187,
	316, 1187,
	317, 1187,
	318, 1187,
	319, 1187,
	321, 1187,
	323, 1187,
	324, 1187,
	325, 1187,
	326, 1187,
	327, 1187,
	328, 1187,
	329, 1187,
	330, 1187,
	331, 1187,
	332, 1187,
	339, 1187,
	341, 1187,
	342, 1187,
	343, 1187,
	344, 1187,
	345, 1187,
	346, 1187,
	347, 1187,
	348, 1187,
	350, 1187,
	351, 1187,
	353, 1187,
	354, 1187,
	355, 1187,
	356, 1187,
	357, 1187,
	358, 1187,
	360, 1187,
	361, 1187,
	362, 1187,
	363, 1187,
	364, 1187,
	365, 1187,
	366, 1187,
	367, 1187,
	369, 1187,
	370, 1187,
	371, 1187,
	372, 1187,
	373, 1187,
	374, 1187,
	376, 1187,
	377, 1187,
	378, 1187,
	379, 1187,
	380, 1187,
	382, 1187,
	383, 1187,
	384, 1187,
	386, 1187,
	388, 1187,
	389, 1187,
	390, 1187,
	391, 1187,
	392, 1187,
	393, 1187,
	394, 1187,
	395, 1187,
	396, 1187,
	397, 1187,
	398, 1187,
	399, 1187,
	400, 1187,
	402, 1187,
	403, 1187,
	405, 1187,
	407, 1187,
	408, 1187,
	409, 1187,
	410, 1187,
	411, 1187,
	412, 1187,
	413, 1187,
	415, 1187,
	416, 1187,
	417, 1187,
	418, 1187,
	419, 1187,
	421, 1187,
	423, 1187,
	424, 1187,
	425, 1187,
	426, 1187,
	427, 1187,
	429, 1187,
	430, 1187,
	431, 1187,
	433, 1187,
	434, 1187,
	437, 1187,
	438, 1187,
	439, 1187,
	440, 1187,
	441, 1187,
	442, 1187,
	443, 1187,
	445, 1187,
	448, 1187,
	449, 1187,
	450, 1187,
	451, 1187,
	452, 1187,
	453, 1187,
	455, 1187,
	456, 1187,
	457, 1187,
	462, 1187,
	463, 1187,
	464, 1187,
	465, 1187,
	466, 1187,
	467, 1187,
	-2, 0,
	-1, 129,
	1, 1061,
	217, 1061,
	321, 1061,
	329, 1061,
	470, 1061,
	494, 1061,
	-2, 0,
	-1, 131,
	1, 1061,
	494, 1061,
	-2, 0,
	-1, 132,
	1, 1061,
	494, 1061,
	-2, 0,
	-1, 133,
	1, 1061,
	420, 1061,
	494, 1061,
	-2, 0,
	-1, 160,
	133, 1155,
	150, 1155,
	163, 1155,
	210, 1155,
	240, 1155,
	282, 1155,
	292, 1155,
	435, 1155,
	-2, 1130,
	-1, 193,
	4, 1194,
	5, 1194,
	6, 1194,
	7, 1194,
	8, 1194,
	9, 1194,
	10, 1194,
	21, 1194,
	22, 1194,
	23, 1194,
	24, 1194,
	25, 1194,
	26, 1194,
	28, 1194,
	29, 1194,
	35, 1194,
	36, 1194,
	40, 1194,
	41, 1194,
	42, 1194,
	43, 1194,
	44, 1194,
	45, 1194,
	46, 1194,
	47, 1194,
	48, 1194,
	50, 1194,
	51, 1194,
	52, 1194,
	54, 1194,
	55, 1194,
	56, 1194,
	57, 1194,
	58, 1194,
	59, 1194,
	60, 1194,
	61, 1194,
	62, 1194,
	63, 1194,
	64, 1194,
	65, 1194,
	67, 1194,
	68, 1194,
	69, 1194,
	71, 1194,
	73, 1194,
	74, 1194,
	75, 1194,
	76, 1194,
	77, 1194,
	78, 1194,
	79, 1194,
	82, 1194,
	83, 1194,
	84, 1194,
	85, 1194,
	87, 1194,
	89, 1194,
	90, 1194,
	91, 1194,
	93, 1194,
	94, 1194,
	95, 1194,
	96, 1194,
	97, 1194,
	98, 1194,
	99, 1194,
	100, 1194,
	101, 1194,
	102, 1194,
	103, 1194,
	104, 1194,
	105, 1194,
	106, 1194,
	107, 1194,
	108, 1194,
	109, 1194,
	110, 1194,
	111, 1194,
	112, 1194,
	113, 1194,
	114, 1194,
	115, 1194,
	117, 1194,
	118, 1194,
	120, 1194,
	121, 1194,
	124, 1194,
	125, 1194,
	126, 1194,
	128, 1194,
	129, 1194,
	131, 1194,
	132, 1194,
	134, 1194,
	135, 1194,
	136, 1194,
	137, 1194,
	138, 1194,
	139, 1194,
	140, 1194,
	141, 1194,
	142, 1194,
	143, 1194,
	144, 1194,
	145, 1194,
	146, 1194,
	147, 1194,
	148, 1194,
	149, 1194,
	155, 1194,
	156, 1194,
	157, 1194,
	158, 1194,
	162, 1194,
	164, 1194,
	167, 1194,
	168, 1194,
	169, 1194,
	170, 1194,
	171, 1194,
	172, 1194,
	173, 1194,
	175, 1194,
	176, 1194,
	178, 1194,
	179, 1194,
	181, 1194,
	182, 1194,
	183, 1194,
	184, 1194,
	185, 1194,
	186, 1194,
	187, 1194,
	188, 1194,
	189, 1194,
	190, 1194,
	191, 1194,
	192, 1194,
	194, 1194,
	195, 1194,
	196, 1194,
	197, 1194,
	201, 1194,
	202, 1194,
	203, 1194,
	204, 1194,
	206, 1194,
	207, 1194,
	208, 1194,
	209, 1194,
	211, 1194,
	213, 1194,
	214, 1194,
	215, 1194,
	216, 1194,
	217, 1194,
	218, 1194,
	219, 1194,
	220, 1194,
	221, 1194,
	225, 1194,
	226, 1194,
	227, 1194,
	228, 1194,
	229, 1194,
	231, 1194,
	232, 1194,
	234, 1194,
	235, 1194,
	236, 1194,
	237, 1194,
	238, 1194,
	239, 1194,
	241, 1194,
	242, 1194,
	243, 1194,
	244, 1194,
	245, 1194,
	246, 1194,
	247, 1194,
	248, 1194,
	249, 1194,
	251, 1194,
	252, 1194,
	253, 1194,
	254, 1194,
	255, 1194,
	256, 1194,
	257, 1194,
	258, 1194,
	259, 1194,
	260, 1194,
	261, 1194,
	263, 1194,
	264, 1194,
	265, 1194,
	266, 1194,
	267, 1194,
	268, 1194,
	269, 1194,
	270, 1194,
	271, 1194,
	272, 1194,
	273, 1194,
	274, 1194,
	275, 1194,
	276, 1194,
	277, 1194,
	278, 1194,
	279, 1194,
	280, 1194,
	281, 1194,
	284, 1194,
	288, 1194,
	289, 1194,
	290, 1194,
	293, 1194,
	294, 1194,
	295, 1194,
	296, 1194,
	297, 1194,
	298, 1194,
	299, 1194,
	300, 1194,
	301, 1194,
	302, 1194,
	303, 1194,
	304, 1194,
	305, 1194,
	306, 1194,
	307, 1194,
	308, 1194,
	309, 1194,
	311, 1194,
	312, 1194,
	313, 1194,
	314, 1194,
	315, 1194,
	316, 1194,
	317, 1194,
	318, 1194,
	319, 1194,
	321, 1194,
	323, 1194,
	324, 1194,
	325, 1194,
	326, 1194,
	327, 1194,
	328, 1194,
	329, 1194,
	330, 1194,
	331, 1194,
	332, 1194,
	339, 1194,
	341, 1194,
	342, 1194,
	343, 1194,
	344, 1194,
	345, 1194,
	346, 1194,
	347, 1194,
	348, 1194,
	350, 1194,
	351, 1194,
	352, 1194,
	353, 1194,
	354, 1194,
	355, 1194,
	356, 1194,
	357, 1194,
	358, 1194,
	360, 1194,
	361, 1194,
	362, 1194,
	363, 1194,
	364, 1194,
	365, 1194,
	366, 1194,
	367, 1194,
	369, 1194,
	370, 1194,
	371, 1194,
	372, 1194,
	373, 1194,
	374, 1194,
	375, 1194,
	376, 1194,
	377, 1194,
	378, 1194,
	379, 1194,
	380, 1194,
	381, 1194,
	382, 1194,
	383, 1194,
	384, 1194,
	386, 1194,
	388, 1194,
	389, 1194,
	390, 1194,
	391, 1194,
	392, 1194,
	393, 1194,
	394, 1194,
	395, 1194,
	396, 1194,
	397, 1194,
	398, 1194,
	399, 1194,
	400, 1194,
	402, 1194,
	403, 1194,
	404, 1194,
	405, 1194,
	407, 1194,
	408, 1194,
	409, 1194,
	410, 1194,
	411, 1194,
	412, 1194,
	413, 1194,
	415, 1194,
	416, 1194,
	417, 1194,
	418, 1194,
	419, 1194,
	421, 1194,
	423, 1194,
	424, 1194,
	425, 1194,
	426, 1194,
	427, 1194,
	428, 1194,
	429, 1194,
	430, 1194,
	431, 1194,
	433, 1194,
	434, 1194,
	436, 1194,
	437, 1194,
	438, 1194,
	439, 1194,
	440, 1194,
	441, 1194,
	442, 1194,
	443, 1194,
	444, 1194,
	445, 1194,
	448, 1194,
	449, 1194,
	450, 1194,
	451, 1194,
	452, 1194,
	453, 1194,
	455, 1194,
	456, 1194,
	457, 1194,
	462, 1194,
	463, 1194,
	464, 1194,
	465, 1194,
	466, 1194,
	467, 1194,
	468, 1194,
	475, 1194,
	482, 1194,
	483, 1194,
	484, 1194,
	491, 1194,
	495, 1194,
	-2, 0,
	-1, 585,
	166, 1900,
	420, 1900,
	474, 1900,
	493, 1900,
	-2, 0,
	-1, 586,
	166, 1981,
	420, 1981,
	474, 1981,
	493, 1981,
	-2, 0,
	-1, 587,
	166, 1888,
	420, 1888,
	474, 1888,
	493, 1888,
	-2, 0,
	-1, 589,
	166, 2072,
	420, 2072,
	474, 2072,
	493, 2072,
	-2, 0,
	-1, 591,
	166, 2101,
	420, 2101,
	474, 2101,
	493, 2101,
	-2, 0,
	-1, 598,
	166, 1996,
	420, 1996,
	474, 1996,
	493, 1996,
	-2, 551,
	-1, 627,
	493, 1841,
	496, 1841,
	-2, 769,
	-1, 628,
	493, 1843,
	496, 1843,
	-2, 770,
	-1, 629,
	493, 1842,
	496, 1842,
	-2, 771,
	-1, 630,
	496, 1776,
	-2, 772,
	-1, 672,
	455, 986,
	-2, 808,
	-1, 710,
	4, 1007,
	21, 1007,
	22, 1007,
	23, 1007,
	24, 1007,
	25, 1007,
	26, 1007,
	28, 1007,
	29, 1007,
	35, 1007,
	40, 1007,
	41, 1007,
	42, 1007,
	43, 1007,
	44, 1007,
	45, 1007,
	46, 1007,
	47, 1007,
	48, 1007,
	50, 1007,
	51, 1007,
	52, 1007,
	54, 1007,
	55, 1007,
	56, 1007,
	57, 1007,
	58, 1007,
	62, 1007,
	63, 1007,
	64, 1007,
	65, 1007,
	67, 1007,
	68, 1007,
	69, 1007,
	73, 1007,
	74, 1007,
	75, 1007,
	76, 1007,
	77, 1007,
	78, 1007,
	79, 1007,
	82, 1007,
	83, 1007,
	84, 1007,
	85, 1007,
	87, 1007,
	89, 1007,
	90, 1007,
	91, 1007,
	93, 1007,
	95, 1007,
	96, 1007,
	104, 1007,
	105, 1007,
	106, 1007,
	107, 1007,
	109, 1007,
	110, 1007,
	111, 1007,
	113, 1007,
	114, 1007,
	115, 1007,
	117, 1007,
	118, 1007,
	120, 1007,
	121, 1007,
	124, 1007,
	125, 1007,
	126, 1007,
	128, 1007,
	129, 1007,
	131, 1007,
	132, 1007,
	134, 1007,
	135, 1007,
	136, 1007,
	137, 1007,
	138, 1007,
	139, 1007,
	140, 1007,
	141, 1007,
	142, 1007,
	143, 1007,
	144, 1007,
	145, 1007,
	146, 1007,
	147, 1007,
	149, 1007,
	155, 1007,
	156, 1007,
	157, 1007,
	158, 1007,
	162, 1007,
	164, 1007,
	168, 1007,
	169, 1007,
	170, 1007,
	171, 1007,
	172, 1007,
	173, 1007,
	175, 1007,
	176, 1007,
	178, 1007,
	179, 1007,
	181, 1007,
	182, 1007,
	183, 1007,
	184, 1007,
	185, 1007,
	186, 1007,
	187, 1007,
	188, 1007,
	189, 1007,
	191, 1007,
	192, 1007,
	194, 1007,
	195, 1007,
	196, 1007,
	197, 1007,
	201, 1007,
	202, 1007,
	203, 1007,
	204, 1007,
	207, 1007,
	208, 1007,
	209, 1007,
	211, 1007,
	213, 1007,
	215, 1007,
	217, 1007,
	218, 1007,
	219, 1007,
	221, 1007,
	225, 1007,
	226, 1007,
	227, 1007,
	228, 1007,
	229, 1007,
	231, 1007,
	232, 1007,
	234, 1007,
	235, 1007,
	237, 1007,
	238, 1007,
	241, 1007,
	242, 1007,
	243, 1007,
	246, 1007,
	247, 1007,
	248, 1007,
	249, 1007,
	251, 1007,
	252, 1007,
	253, 1007,
	254, 1007,
	255, 1007,
	256, 1007,
	257, 1007,
	258, 1007,
	259, 1007,
	260, 1007,
	261, 1007,
	263, 1007,
	265, 1007,
	266, 1007,
	267, 1007,
	268, 1007,
	269, 1007,
	271, 1007,
	273, 1007,
	275, 1007,
	277, 1007,
	278, 1007,
	279, 1007,
	280, 1007,
	281, 1007,
	284, 1007,
	288, 1007,
	289, 1007,
	290, 1007,
	293, 1007,
	294, 1007,
	295, 1007,
	297, 1007,
	299, 1007,
	300, 1007,
	301, 1007,
	302, 1007,
	303, 1007,
	304, 1007,
	305, 1007,
	306, 1007,
	307, 1007,
	308, 1007,
	309, 1007,
	311, 1007,
	312, 1007,
	313, 1007,
	314, 1007,
	315, 1007,
	316, 1007,
	317, 1007,
	318, 1007,
	319, 1007,
	321, 1007,
	323, 1007,
	324, 1007,
	325, 1007,
	326, 1007,
	327, 1007,
	328, 1007,
	329, 1007,
	330, 1007,
	331, 1007,
	332, 1007,
	339, 1007,
	341, 1007,
	342, 1007,
	343, 1007,
	344, 1007,
	345, 1007,
	346, 1007,
	347, 1007,
	348, 1007,
	350, 1007,
	351, 1007,
	353, 1007,
	354, 1007,
	355, 1007,
	356, 1007,
	357, 1007,
	358, 1007,
	360, 1007,
	361, 1007,
	362, 1007,
	363, 1007,
	364, 1007,
	365, 1007,
	366, 1007,
	367, 1007,
	369, 1007,
	370, 1007,
	371, 1007,
	372, 1007,
	373, 1007,
	374, 1007,
	376, 1007,
	377, 1007,
	378, 1007,
	379, 1007,
	380, 1007,
	382, 1007,
	383, 1007,
	384, 1007,
	386, 1007,
	388, 1007,
	389, 1007,
	390, 1007,
	391, 1007,
	392, 1007,
	393, 1007,
	394, 1007,
	395, 1007,
	396, 1007,
	397, 1007,
	398, 1007,
	399, 1007,
	400, 1007,
	402, 1007,
	403, 1007,
	405, 1007,
	407, 1007,
	408, 1007,
	409, 1007,
	410, 1007,
	411, 1007,
	412, 1007,
	413, 1007,
	415, 1007,
	416, 1007,
	417, 1007,
	418, 1007,
	419, 1007,
	421, 1007,
	423, 1007,
	424, 1007,
	425, 1007,
	426, 1007,
	427, 1007,
	429, 1007,
	430, 1007,
	431, 1007,
	433, 1007,
	434, 1007,
	437, 1007,
	438, 1007,
	439, 1007,
	440, 1007,
	441, 1007,
	442, 1007,
	443, 1007,
	445, 1007,
	448, 1007,
	449, 1007,
	450, 1007,
	451, 1007,
	452, 1007,
	453, 1007,
	455, 1007,
	456, 1007,
	457, 1007,
	462, 1007,
	463, 1007,
	464, 1007,
	465, 1007,
	466, 1007,
	467, 1007,
	-2, 0,
	-1, 775,
	325, 696,
	374, 696,
	-2, 0,
	-1, 776,
	325, 695,
	374, 695,
	-2, 643,
	-1, 780,
	1, 725,
	490, 725,
	492, 725,
	494, 725,
	-2, 0,
	-1, 781,
	1, 768,
	163, 768,
	490, 768,
	492, 768,
	494, 768,
	-2, 0,
	-1, 789,
	1, 699,
	490, 699,
	492, 699,
	494, 699,
	-2, 0,
	-1, 792,
	1, 725,
	490, 725,
	492, 725,
	494, 725,
	-2, 0,
	-1, 793,
	1, 727,
	490, 727,
	492, 727,
	494, 727,
	-2, 0,
	-1, 794,
	1, 730,
	490, 730,
	492, 730,
	494, 730,
	-2, 0,
	-1, 800,
	1, 747,
	490, 747,
	492, 747,
	494, 747,
	-2, 0,
	-1, 801,
	1, 749,
	490, 749,
	492, 749,
	494, 749,
	-2, 0,
	-1, 847,
	150, 1196,
	163, 1196,
	240, 1196,
	282, 1196,
	-2, 1134,
	-1, 861,
	150, 1195,
	163, 1195,
	240, 1195,
	282, 1195,
	-2, 1131,
	-1, 887,
	493, 1840,
	-2, 559,
	-1, 915,
	5, 1832,
	491, 1830,
	-2, 1821,
	-1, 923,
	5, 1853,
	491, 1850,
	-2, 1841,
	-1, 924,
	5, 1854,
	491, 1851,
	-2, 1842,
	-1, 932,
	493, 1838,
	-2, 1820,
	-1, 933,
	491, 2179,
	-2, 1839,
	-1, 956,
	491, 2178,
	-2, 1855,
	-1, 957,
	5, 1360,
	-2, 2149,
	-1, 958,
	5, 1361,
	-2, 2150,
	-1, 959,
	5, 1362,
	-2, 2164,
	-1, 960,
	5, 1363,
	-2, 2129,
	-1, 961,
	5, 1364,
	-2, 2162,
	-1, 962,
	5, 1372,
	-2, 2141,
	-1, 963,
	5, 1359,
	-2, 2137,
	-1, 964,
	5, 1359,
	-2, 2136,
	-1, 965,
	5, 1359,
	-2, 2155,
	-1, 966,
	5, 1370,
	-2, 2131,
	-1, 967,
	5, 1375,
	-2, 2130,
	-1, 968,
	5, 1377,
	-2, 2174,
	-1, 971,
	5, 1399,
	-2, 2167,
	-1, 972,
	5, 1391,
	-2, 2168,
	-1, 973,
	5, 1399,
	-2, 2169,
	-1, 974,
	5, 1395,
	-2, 2170,
	-1, 975,
	5, 1346,
	-2, 2142,
	-1, 976,
	5, 1347,
	-2, 2143,
	-1, 1003,
	5, 1382,
	-2, 2175,
	-1, 1004,
	5, 1383,
	-2, 2165,
	-1, 1005,
	5, 1384,
	456, 1384,
	-2, 2132,
	-1, 1006,
	5, 1385,
	456, 1385,
	-2, 2133,
	-1, 1043,
	491, 1850,
	-2, 1841,
	-1, 1044,
	491, 1851,
	-2, 1842,
	-1, 1073,
	166, 2101,
	420, 2101,
	474, 2101,
	493, 2101,
	-2, 0,
	-1, 1076,
	1, 537,
	494, 537,
	-2, 1069,
	-1, 1201,
	341, 1816,
	484, 1816,
	-2, 1814,
	-1, 1213,
	495, 1816,
	-2, 1817,
	-1, 1217,
	1, 983,
	490, 983,
	492, 983,
	494, 983,
	-2, 1183,
	-1, 1262,
	331, 807,
	455, 807,
	-2, 284,
	-1, 1285,
	1, 983,
	490, 983,
	492, 983,
	494, 983,
	-2, 1183,
	-1, 1291,
	4, 1007,
	21, 1007,
	22, 1007,
	23, 1007,
	24, 1007,
	25, 1007,
	26, 1007,
	28, 1007,
	29, 1007,
	35, 1007,
	40, 1007,
	41, 1007,
	42, 1007,
	43, 1007,
	44, 1007,
	45, 1007,
	46, 1007,
	47, 1007,
	48, 1007,
	50, 1007,
	51, 1007,
	52, 1007,
	54, 1007,
	55, 1007,
	56, 1007,
	57, 1007,
	58, 1007,
	62, 1007,
	63, 1007,
	64, 1007,
	65, 1007,
	67, 1007,
	68, 1007,
	69, 1007,
	73, 1007,
	74, 1007,
	75, 1007,
	76, 1007,
	77, 1007,
	78, 1007,
	79, 1007,
	82, 1007,
	83, 1007,
	84, 1007,
	85, 1007,
	87, 1007,
	89, 1007,
	90, 1007,
	91, 1007,
	93, 1007,
	95, 1007,
	96, 1007,
	104, 1007,
	105, 1007,
	106, 1007,
	107, 1007,
	109, 1007,
	110, 1007,
	111, 1007,
	113, 1007,
	114, 1007,
	115, 1007,
	117, 1007,
	118, 1007,
	120, 1007,
	121, 1007,
	124, 1007,
	125, 1007,
	126, 1007,
	128, 1007,
	129, 1007,
	131, 1007,
	132, 1007,
	134, 1007,
	135, 1007,
	136, 1007,
	137, 1007,
	138, 1007,
	139, 1007,
	140, 1007,
	141, 1007,
	142, 1007,
	143, 1007,
	144, 1007,
	145, 1007,
	146, 1007,
	147, 1007,
	155, 1007,
	156, 1007,
	157, 1007,
	158, 1007,
	162, 1007,
	164, 1007,
	168, 1007,
	169, 1007,
	170, 1007,
	171, 1007,
	172, 1007,
	173, 1007,
	175, 1007,
	176, 1007,
	178, 1007,
	179, 1007,
	181, 1007,
	182, 1007,
	183, 1007,
	184, 1007,
	185, 1007,
	186, 1007,
	187, 1007,
	188, 1007,
	189, 1007,
	191, 1007,
	192, 1007,
	194, 1007,
	195, 1007,
	196, 1007,
	197, 1007,
	202, 1007,
	203, 1007,
	204, 1007,
	207, 1007,
	208, 1007,
	209, 1007,
	211, 1007,
	213, 1007,
	215, 1007,
	217, 1007,
	218, 1007,
	219, 1007,
	221, 1007,
	225, 1007,
	226, 1007,
	227, 1007,
	228, 1007,
	229, 1007,
	231, 1007,
	232, 1007,
	234, 1007,
	235, 1007,
	237, 1007,
	238, 1007,
	241, 1007,
	242, 1007,
	243, 1007,
	246, 1007,
	247, 1007,
	248, 1007,
	249, 1007,
	251, 1007,
	252, 1007,
	253, 1007,
	254, 1007,
	255, 1007,
	256, 1007,
	257, 1007,
	258, 1007,
	259, 1007,
	260, 1007,
	261, 1007,
	263, 1007,
	265, 1007,
	266, 1007,
	267, 1007,
	268, 1007,
	269, 1007,
	271, 1007,
	275, 1007,
	277, 1007,
	278, 1007,
	279, 1007,
	280, 1007,
	281, 1007,
	284, 1007,
	286, 1007,
	288, 1007,
	289, 1007,
	290, 1007,
	293, 1007,
	294, 1007,
	295, 1007,
	297, 1007,
	299, 1007,
	300, 1007,
	301, 1007,
	302, 1007,
	303, 1007,
	304, 1007,
	305, 1007,
	306, 1007,
	307, 1007,
	308, 1007,
	309, 1007,
	311, 1007,
	312, 1007,
	313, 1007,
	314, 1007,
	315, 1007,
	316, 1007,
	317, 1007,
	318, 1007,
	319, 1007,
	321, 1007,
	323, 1007,
	324, 1007,
	325, 1007,
	326, 1007,
	327, 1007,
	328, 1007,
	329, 1007,
	330, 1007,
	331, 1007,
	332, 1007,
	339, 1007,
	341, 1007,
	342, 1007,
	343, 1007,
	344, 1007,
	345, 1007,
	346, 1007,
	347, 1007,
	348, 1007,
	350, 1007,
	351, 1007,
	353, 1007,
	354, 1007,
	355, 1007,
	356, 1007,
	357, 1007,
	358, 1007,
	360, 1007,
	361, 1007,
	362, 1007,
	363, 1007,
	364, 1007,
	365, 1007,
	366, 1007,
	367, 1007,
	369, 1007,
	370, 1007,
	371, 1007,
	372, 1007,
	373, 1007,
	374, 1007,
	376, 1007,
	377, 1007,
	378, 1007,
	379, 1007,
	380, 1007,
	382, 1007,
	383, 1007,
	384, 1007,
	386, 1007,
	388, 1007,
	389, 1007,
	390, 1007,
	391, 1007,
	392, 1007,
	393, 1007,
	394, 1007,
	395, 1007,
	396, 1007,
	397, 1007,
	398, 1007,
	399, 1007,
	400, 1007,
	402, 1007,
	403, 1007,
	405, 1007,
	407, 1007,
	408, 1007,
	409, 1007,
	410, 1007,
	411, 1007,
	412, 1007,
	413, 1007,
	415, 1007,
	416, 1007,
	417, 1007,
	418, 1007,
	419, 1007,
	421, 1007,
	423, 1007,
	424, 1007,
	425, 1007,
	426, 1007,
	427, 1007,
	429, 1007,
	430, 1007,
	431, 1007,
	433, 1007,
	434, 1007,
	437, 1007,
	438, 1007,
	439, 1007,
	440, 1007,
	441, 1007,
	442, 1007,
	443, 1007,
	445, 1007,
	448, 1007,
	449, 1007,
	450, 1007,
	451, 1007,
	452, 1007,
	453, 1007,
	455, 1007,
	456, 1007,
	457, 1007,
	462, 1007,
	463, 1007,
	464, 1007,
	465, 1007,
	466, 1007,
	467, 1007,
	-2, 0,
	-1, 1356,
	1, 412,
	490, 412,
	492, 412,
	494, 412,
	-2, 1154,
	-1, 1359,
	4, 2173,
	11, 2173,
	12, 2173,
	14, 2173,
	15, 2173,
	16, 2173,
	17, 2173,
	18, 2173,
	19, 2173,
	21, 2173,
	22, 2173,
	23, 2173,
	24, 2173,
	25, 2173,
	26, 2173,
	28, 2173,
	29, 2173,
	32, 2173,
	33, 2173,
	35, 2173,
	37, 2173,
	40, 2173,
	41, 2173,
	42, 2173,
	43, 2173,
	44, 2173,
	45, 2173,
	46, 2173,
	47, 2173,
	48, 2173,
	50, 2173,
	51, 2173,
	52, 2173,
	54, 2173,
	55, 2173,
	56, 2173,
	57, 2173,
	58, 2173,
	62, 2173,
	63, 2173,
	64, 2173,
	65, 2173,
	67, 2173,
	68, 2173,
	69, 2173,
	70, 2173,
	73, 2173,
	74, 2173,
	75, 2173,
	76, 2173,
	77, 2173,
	78, 2173,
	79, 2173,
	80, 2173,
	82, 2173,
	83, 2173,
	84, 2173,
	85, 2173,
	87, 2173,
	88, 2173,
	89, 2173,
	90, 2173,
	91, 2173,
	93, 2173,
	94, 2173,
	95, 2173,
	96, 2173,
	104, 2173,
	105, 2173,
	106, 2173,
	107, 2173,
	109, 2173,
	110, 2173,
	111, 2173,
	113, 2173,
	114, 2173,
	115, 2173,
	117, 2173,
	118, 2173,
	120, 2173,
	121, 2173,
	124, 2173,
	125, 2173,
	126, 2173,
	128, 2173,
	129, 2173,
	131, 2173,
	132, 2173,
	134, 2173,
	135, 2173,
	136, 2173,
	137, 2173,
	138, 2173,
	139, 2173,
	140, 2173,
	141, 2173,
	142, 2173,
	143, 2173,
	144, 2173,
	145, 2173,
	146, 2173,
	147, 2173,
	151, 2173,
	152, 2173,
	153, 2173,
	154, 2173,
	155, 2173,
	156, 2173,
	157, 2173,
	158, 2173,
	161, 2173,
	162, 2173,
	164, 2173,
	167, 2173,
	168, 2173,
	169, 2173,
	170, 2173,
	171, 2173,
	172, 2173,
	173, 2173,
	175, 2173,
	176, 2173,
	178, 2173,
	179, 2173,
	181, 2173,
	182, 2173,
	183, 2173,
	184, 2173,
	185, 2173,
	186, 2173,
	187, 2173,
	188, 2173,
	189, 2173,
	190, 2173,
	191, 2173,
	192, 2173,
	193, 2173,
	194, 2173,
	195, 2173,
	196, 2173,
	197, 2173,
	199, 2173,
	200, 2173,
	202, 2173,
	203, 2173,
	204, 2173,
	206, 2173,
	207, 2173,
	208, 2173,
	209, 2173,
	211, 2173,
	213, 2173,
	214, 2173,
	215, 2173,
	216, 2173,
	217, 2173,
	218, 2173,
	219, 2173,
	220, 2173,
	221, 2173,
	223, 2173,
	224, 2173,
	225, 2173,
	226, 2173,
	227, 2173,
	228, 2173,
	229, 2173,
	231, 2173,
	232, 2173,
	234, 2173,
	235, 2173,
	236, 2173,
	237, 2173,
	238, 2173,
	239, 2173,
	241, 2173,
	242, 2173,
	243, 2173,
	246, 2173,
	247, 2173,
	248, 2173,
	249, 2173,
	250, 2173,
	251, 2173,
	252, 2173,
	253, 2173,
	254, 2173,
	255, 2173,
	256, 2173,
	257, 2173,
	258, 2173,
	259, 2173,
	260, 2173,
	261, 2173,
	263, 2173,
	264, 2173,
	265, 2173,
	266, 2173,
	267, 2173,
	268, 2173,
	269, 2173,
	271, 2173,
	274, 2173,
	275, 2173,
	277, 2173,
	278, 2173,
	279, 2173,
	280, 2173,
	281, 2173,
	284, 2173,
	288, 2173,
	289, 2173,
	290, 2173,
	291, 2173,
	293, 2173,
	294, 2173,
	295, 2173,
	297, 2173,
	299, 2173,
	300, 2173,
	301, 2173,
	302, 2173,
	303, 2173,
	304, 2173,
	305, 2173,
	306, 2173,
	307, 2173,
	308, 2173,
	309, 2173,
	311, 2173,
	312, 2173,
	313, 2173,
	314, 2173,
	315, 2173,
	316, 2173,
	317, 2173,
	318, 2173,
	319, 2173,
	321, 2173,
	323, 2173,
	324, 2173,
	325, 2173,
	326, 2173,
	327, 2173,
	328, 2173,
	329, 2173,
	330, 2173,
	331, 2173,
	332, 2173,
	339, 2173,
	340, 2173,
	341, 2173,
	342, 2173,
	343, 2173,
	344, 2173,
	345, 2173,
	346, 2173,
	347, 2173,
	348, 2173,
	350, 2173,
	351, 2173,
	352, 2173,
	353, 2173,
	354, 2173,
	355, 2173,
	356, 2173,
	357, 2173,
	358, 2173,
	359, 2173,
	360, 2173,
	361, 2173,
	362, 2173,
	363, 2173,
	364, 2173,
	365, 2173,
	366, 2173,
	367, 2173,
	369, 2173,
	370, 2173,
	371, 2173,
	372, 2173,
	373, 2173,
	374, 2173,
	376, 2173,
	377, 2173,
	378, 2173,
	379, 2173,
	380, 2173,
	381, 2173,
	382, 2173,
	383, 2173,
	384, 2173,
	386, 2173,
	388, 2173,
	389, 2173,
	390, 2173,
	391, 2173,
	392, 2173,
	393, 2173,
	394, 2173,
	395, 2173,
	396, 2173,
	397, 2173,
	398, 2173,
	399, 2173,
	400, 2173,
	402, 2173,
	403, 2173,
	405, 2173,
	407, 2173,
	408, 2173,
	409, 2173,
	410, 2173,
	411, 2173,
	412, 2173,
	413, 2173,
	415, 2173,
	416, 2173,
	417, 2173,
	418, 2173,
	419, 2173,
	421, 2173,
	423, 2173,
	424, 2173,
	425, 2173,
	426, 2173,
	427, 2173,
	429, 2173,
	430, 2173,
	431, 2173,
	433, 2173,
	434, 2173,
	437, 2173,
	438, 2173,
	439, 2173,
	440, 2173,
	441, 2173,
	442, 2173,
	443, 2173,
	445, 2173,
	448, 2173,
	449, 2173,
	450, 2173,
	451, 2173,
	452, 2173,
	453, 2173,
	455, 2173,
	456, 2173,
	457, 2173,
	462, 2173,
	463, 2173,
	464, 2173,
	465, 2173,
	466, 2173,
	467, 2173,
	468, 2173,
	469, 2173,
	472, 2173,
	473, 2173,
	474, 2173,
	475, 2173,
	476, 2173,
	477, 2173,
	479, 2173,
	480, 2173,
	481, 2173,
	482, 2173,
	483, 2173,
	484, 2173,
	485, 2173,
	486, 2173,
	487, 2173,
	489, 2173,
	492, 2173,
	493, 2173,
	495, 2173,
	496, 2173,
	-2, 0,
	-1, 1364,
	166, 2072,
	420, 2072,
	474, 2072,
	493, 2072,
	-2, 0,
	-1, 1398,
	325, 696,
	374, 696,
	-2, 0,
	-1, 1422,
	1, 691,
	490, 691,
	492, 691,
	494, 691,
	-2, 0,
	-1, 1423,
	1, 716,
	490, 716,
	492, 716,
	494, 716,
	-2, 0,
	-1, 1424,
	1, 698,
	490, 698,
	492, 698,
	494, 698,
	-2, 0,
	-1, 1426,
	1, 702,
	490, 702,
	492, 702,
	494, 702,
	-2, 0,
	-1, 1454,
	1, 2121,
	490, 2121,
	492, 2121,
	493, 2121,
	494, 2121,
	-2, 745,
	-1, 1455,
	1, 2069,
	490, 2069,
	492, 2069,
	493, 2069,
	494, 2069,
	-2, 746,
	-1, 1470,
	1, 1064,
	494, 1064,
	-2, 1069,
	-1, 1473,
	150, 1195,
	163, 1195,
	240, 1195,
	282, 1195,
	-2, 1135,
	-1, 1568,
	133, 1156,
	150, 1156,
	163, 1156,
	210, 1156,
	240, 1156,
	282, 1156,
	292, 1156,
	435, 1156,
	-2, 1560,
	-1, 1628,
	492, 1710,
	-2, 0,
	-1, 1663,
	133, 1156,
	150, 1156,
	163, 1156,
	210, 1156,
	240, 1156,
	282, 1156,
	292, 1156,
	435, 1156,
	-2, 1276,
	-1, 1710,
	491, 1387,
	-2, 1375,
	-1, 1743,
	1, 539,
	494, 539,
	-2, 1069,
	-1, 1955,
	1, 693,
	490, 693,
	492, 693,
	494, 693,
	-2, 0,
	-1, 1956,
	1, 718,
	490, 718,
	492, 718,
	494, 718,
	-2, 0,
	-1, 2029,
	357, 1222,
	358, 1222,
	-2, 1420,
	-1, 2060,
	14, 0,
	15, 0,
	16, 0,
	472, 0,
	473, 0,
	474, 0,
	-2, 1440,
	-1, 2061,
	14, 0,
	15, 0,
	16, 0,
	472, 0,
	473, 0,
	474, 0,
	-2, 1441,
	-1, 2062,
	88, 0,
	223, 0,
	224, 0,
	476, 0,
	477, 0,
	-2, 1442,
	-1, 2063,
	88, 0,
	223, 0,
	224, 0,
	476, 0,
	477, 0,
	-2, 1443,
	-1, 2064,
	88, 0,
	223, 0,
	224, 0,
	476, 0,
	477, 0,
	-2, 1444,
	-1, 2065,
	88, 0,
	223, 0,
	224, 0,
	476, 0,
	477, 0,
	-2, 1445,
	-1, 2066,
	88, 0,
	223, 0,
	224, 0,
	476, 0,
	477, 0,
	-2, 1446,
	-1, 2067,
	14, 0,
	15, 0,
	16, 0,
	472, 0,
	473, 0,
	474, 0,
	-2, 1447,
	-1, 2079,
	14, 0,
	15, 0,
	16, 0,
	472, 0,
	473, 0,
	474, 0,
	-2, 1459,
	-1, 2080,
	14, 0,
	15, 0,
	16, 0,
	472, 0,
	473, 0,
	474, 0,
	-2, 1460,
	-1, 2081,
	14, 0,
	15, 0,
	16, 0,
	472, 0,
	473, 0,
	474, 0,
	-2, 1461,
	-1, 2084,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1466,
	-1, 2090,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1470,
	-1, 2092,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1478,
	-1, 2093,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1479,
	-1, 2094,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1480,
	-1, 2095,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1481,
	-1, 2207,
	5, 1853,
	166, 1721,
	491, 1850,
	-2, 1841,
	-1, 2208,
	166, 1722,
	-2, 2125,
	-1, 2209,
	166, 1723,
	-2, 1995,
	-1, 2210,
	166, 1724,
	-2, 1911,
	-1, 2211,
	166, 1725,
	-2, 1952,
	-1, 2212,
	166, 1726,
	-2, 1990,
	-1, 2213,
	166, 1727,
	-2, 2067,
	-1, 2214,
	166, 1728,
	-2, 1543,
	-1, 2283,
	1, 1277,
	2, 1277,
	94, 1277,
	133, 1277,
	150, 1277,
	163, 1277,
	167, 1277,
	177, 1277,
	180, 1277,
	206, 1277,
	210, 1277,
	220, 1277,
	236, 1277,
	240, 1277,
	264, 1277,
	282, 1277,
	286, 1277,
	292, 1277,
	349, 1277,
	352, 1277,
	435, 1277,
	446, 1277,
	459, 1277,
	460, 1277,
	461, 1277,
	470, 1277,
	490, 1277,
	492, 1277,
	494, 1277,
	496, 1277,
	-2, 1276,
	-1, 2296,
	491, 1822,
	-2, 1836,
	-1, 2320,
	491, 1386,
	-2, 1376,
	-1, 2432,
	1, 983,
	490, 983,
	492, 983,
	494, 983,
	-2, 1183,
	-1, 2586,
	287, 1225,
	-2, 2163,
	-1, 2587,
	287, 1226,
	-2, 2056,
	-1, 2591,
	357, 1787,
	358, 1787,
	-2, 1541,
	-1, 2592,
	357, 1791,
	358, 1791,
	-2, 1542,
	-1, 2593,
	357, 1788,
	358, 1788,
	-2, 1541,
	-1, 2594,
	357, 1792,
	358, 1792,
	-2, 1542,
	-1, 2607,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1468,
	-1, 2608,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1472,
	-1, 2614,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1474,
	-1, 2811,
	217, 1069,
	321, 1069,
	329, 1069,
	470, 1069,
	-2, 536,
	-1, 2925,
	1, 983,
	490, 983,
	492, 983,
	494, 983,
	-2, 1183,
	-1, 3016,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1476,
	-1, 3023,
	214, 0,
	216, 0,
	274, 0,
	-2, 1495,
	-1, 3090,
	14, 0,
	15, 0,
	16, 0,
	472, 0,
	473, 0,
	474, 0,
	-2, 1524,
	-1, 3091,
	14, 0,
	15, 0,
	16, 0,
	472, 0,
	473, 0,
	474, 0,
	-2, 1525,
	-1, 3092,
	14, 0,
	15, 0,
	16, 0,
	472, 0,
	473, 0,
	474, 0,
	-2, 1526,
	-1, 3096,
	14, 0,
	15, 0,
	16, 0,
	472, 0,
	473, 0,
	474, 0,
	-2, 1530,
	-1, 3097,
	14, 0,
	15, 0,
	16, 0,
	472, 0,
	473, 0,
	474, 0,
	-2, 1531,
	-1, 3098,
	14, 0,
	15, 0,
	16, 0,
	472, 0,
	473, 0,
	474, 0,
	-2, 1532,
	-1, 3144,
	491, 1823,
	-2, 1837,
	-1, 3252,
	493, 2279,
	-2, 1113,
	-1, 3303,
	214, 0,
	216, 0,
	274, 0,
	-2, 1496,
	-1, 3306,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1499,
	-1, 3307,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1501,
	-1, 3501,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1500,
	-1, 3502,
	17, 0,
	18, 0,
	19, 0,
	47, 0,
	190, 0,
	193, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 1502,
	-1, 3513,
	214, 0,
	-2, 1533,
	-1, 3655,
	214, 0,
	-2, 1534,
	-1, 3799,
	47, 0,
	190, 0,
	239, 0,
	381, 0,
	468, 0,
	475, 0,
	-2, 2128,
}

const sqlPrivate = 57344

const sqlLast = 92506

var sqlAct = [...]int{

	228, 3585, 3798, 3677, 3544, 3809, 3547, 3900, 3698, 3166,
	3762, 3774, 3810, 2911, 3286, 2741, 3811, 3853, 2483, 3759,
	3532, 3592, 1047, 3433, 3055, 2742, 3659, 3797, 3459, 3464,
	3744, 871, 3490, 3418, 2039, 2940, 1233, 1220, 2828, 3601,
	3446, 3244, 3425, 3201, 888, 1350, 3427, 3623, 1927, 3370,
	862, 2107, 2352, 1697, 2933, 1482, 3469, 2907, 2935, 1794,
	3223, 2047, 3518, 2040, 3008, 2446, 3167, 596, 629, 1082,
	2600, 1914, 2472, 1105, 2455, 2518, 1669, 1036, 2764, 2239,
	2520, 2784, 36, 3342, 2756, 2517, 2458, 3285, 629, 870,
	152, 1198, 721, 1351, 1698, 2724, 2747, 2484, 2411, 1638,
	1406, 2745, 2528, 2467, 2469, 2509, 2276, 1839, 2511, 2354,
	1838, 1803, 3115, 1934, 2275, 2723, 2044, 2389, 4, 3660,
	2149, 1576, 2120, 1206, 2527, 2423, 1278, 1835, 1819, 1912,
	1614, 2388, 1826, 919, 2584, 2456, 1779, 2278, 915, 3586,
	1781, 1470, 1089, 2257, 2236, 1639, 2140, 1769, 2104, 2011,
	1331, 2028, 1372, 2009, 1357, 2477, 1027, 2909, 1341, 1347,
	1283, 222, 2521, 1869, 924, 2344, 1609, 1078, 564, 630,
	2143, 2265, 152, 631, 221, 1030, 1658, 1648, 2247, 2121,
	2203, 1009, 1560, 2193, 550, 1222, 160, 1483, 572, 2010,
	1203, 2790, 1484, 2012, 580, 1868, 1044, 161, 626, 590,
	1371, 715, 697, 1230, 672, 1355, 1793, 2033, 900, 41,
	567, 926, 40, 38, 29, 27, 25, 1007, 1489, 770,
	575, 1032, 2635, 1469, 787, 3129, 2631, 3130, 1086, 634,
	716, 1905, 1889, 3952, 3939, 1905, 2743, 2256, 2256, 1905,
	1655, 866, 637, 1905, 1306, 93, 866, 2950, 3938, 634,
	1251, 1026, 2256, 3916, 3119, 2809, 66, 3386, 719, 718,
	3914, 3910, 637, 3836, 3386, 1845, 2151, 3837, 2599, 1086,
	3833, 3831, 67, 2949, 2256, 2256, 3828, 3825, 3820, 2249,
	3829, 3826, 1845, 66, 3795, 71, 732, 3794, 1845, 3793,
	3789, 1845, 1024, 1920, 1920, 1935, 3788, 3783, 3781, 67,
	1920, 3386, 3386, 1903, 3770, 3757, 1063, 1058, 3581, 3386,
	2696, 2697, 71, 3738, 3731, 3730, 2644, 2311, 2256, 2256,
	76, 2407, 2645, 3725, 3724, 1010, 1010, 3386, 3386, 3718,
	2256, 3657, 3637, 1845, 1042, 2311, 1845, 3634, 3594, 848,
	3564, 3386, 3595, 3739, 1845, 3563, 3652, 76, 3555, 1845,
	847, 3554, 1845, 3524, 81, 3386, 3503, 1845, 3488, 3477,
	2311, 3413, 1920, 2965, 3404, 2256, 92, 2307, 2256, 3385,
	3305, 82, 89, 3386, 2311, 1013, 3260, 1014, 1567, 856,
	2981, 81, 3254, 1059, 861, 3221, 2981, 1354, 3139, 3222,
	3137, 3122, 3140, 92, 3138, 2256, 3039, 922, 82, 89,
	1845, 3035, 1845, 2980, 3640, 2256, 1011, 2981, 867, 2972,
	2740, 2735, 2734, 2973, 2256, 2256, 2256, 2687, 134, 2685,
	83, 2688, 2677, 2686, 1920, 66, 2678, 43, 42, 2675,
	3581, 2646, 2533, 2256, 1250, 2256, 1920, 3119, 2507, 2248,
	2506, 67, 1923, 129, 1923, 2256, 193, 83, 2696, 2697,
	2634, 2714, 2715, 2716, 71, 193, 3458, 2696, 2697, 2328,
	2702, 2310, 2305, 2256, 61, 2311, 2256, 3405, 2299, 3301,
	1845, 45, 1845, 131, 1497, 1498, 2255, 2375, 1922, 2973,
	2256, 2402, 1923, 1798, 195, 2343, 1749, 44, 1904, 76,
	2965, 2452, 1844, 195, 2419, 969, 1528, 2341, 1634, 1229,
	3195, 3011, 2989, 1500, 1656, 2696, 2697, 2480, 1829, 2292,
	1408, 47, 62, 82, 2696, 2697, 2291, 2711, 48, 2290,
	1906, 2289, 2288, 81, 1906, 2951, 2711, 132, 1906, 194,
	193, 1015, 1906, 1499, 46, 92, 84, 1012, 194, 187,
	82, 89, 2564, 2309, 2952, 1567, 855, 188, 187, 2712,
	854, 1497, 1498, 853, 852, 851, 188, 850, 846, 845,
	844, 843, 842, 84, 841, 840, 839, 838, 195, 162,
	837, 49, 3358, 159, 87, 3317, 88, 2949, 162, 836,
	1500, 3643, 835, 2176, 834, 1059, 833, 832, 831, 83,
	813, 768, 1425, 1039, 767, 924, 193, 766, 2702, 924,
	159, 87, 765, 88, 720, 764, 763, 2702, 126, 2248,
	1499, 193, 762, 194, 1108, 761, 193, 760, 1108, 759,
	758, 1225, 917, 193, 1505, 757, 1088, 756, 755, 754,
	1093, 720, 753, 752, 195, 126, 1059, 751, 750, 749,
	748, 747, 746, 924, 745, 924, 744, 924, 743, 195,
	742, 2717, 741, 162, 195, 2702, 3150, 128, 2713, 730,
	729, 195, 1527, 1529, 2702, 1214, 1497, 1498, 688, 2497,
	649, 163, 648, 1918, 1225, 2162, 640, 1904, 639, 194,
	638, 2004, 220, 610, 128, 602, 601, 2712, 1528, 187,
	1209, 600, 584, 216, 194, 1500, 2712, 188, 163, 194,
	215, 1505, 1497, 1498, 187, 84, 194, 214, 213, 187,
	212, 211, 188, 1520, 1225, 50, 187, 188, 1225, 717,
	1288, 1290, 1225, 210, 188, 1499, 1238, 924, 1243, 209,
	1249, 1500, 1225, 1076, 162, 924, 63, 3133, 193, 162,
	208, 53, 159, 87, 2712, 88, 162, 207, 51, 2982,
	126, 206, 133, 2712, 205, 204, 203, 202, 52, 201,
	200, 1499, 199, 193, 198, 193, 197, 196, 2787, 1101,
	2738, 1195, 1200, 56, 2657, 1225, 195, 126, 2707, 2705,
	2706, 2698, 2699, 2700, 2701, 2703, 2704, 130, 2640, 1071,
	2739, 924, 1617, 2436, 634, 2315, 2713, 2463, 1616, 2297,
	1659, 195, 1232, 195, 2282, 2713, 1231, 637, 152, 152,
	1370, 2696, 2697, 1617, 2160, 1930, 1505, 1777, 1377, 1616,
	1620, 194, 1521, 1496, 3641, 1682, 128, 1587, 1578, 1235,
	1378, 187, 1095, 1046, 3816, 3796, 3705, 1360, 1362, 188,
	163, 1615, 3227, 3649, 3542, 3517, 194, 3478, 194, 3473,
	1245, 1239, 1505, 2713, 1527, 1529, 187, 3457, 187, 1335,
	1338, 162, 2713, 3363, 188, 3340, 188, 3339, 1293, 3333,
	3332, 3331, 1426, 3324, 3323, 3321, 869, 924, 924, 924,
	924, 924, 924, 924, 3316, 3313, 2479, 1585, 162, 1929,
	3312, 3, 3220, 1435, 3193, 3154, 2696, 2697, 1474, 3153,
	3152, 3143, 1344, 1358, 3110, 1520, 3109, 3108, 924, 2708,
	2709, 2710, 3031, 3027, 924, 2782, 2707, 2705, 2706, 2698,
	2699, 2700, 2701, 2703, 2704, 2707, 2705, 2706, 2698, 2699,
	2700, 2701, 2703, 2704, 2731, 2976, 2722, 2695, 1850, 1309,
	2146, 2692, 1510, 1508, 1509, 1501, 1502, 1503, 1504, 1506,
	1507, 2691, 2689, 2684, 2683, 1578, 2682, 2679, 193, 2676,
	1579, 2702, 1577, 867, 2656, 2639, 2632, 2508, 2283, 2133,
	1496, 1468, 1880, 1023, 2705, 2706, 2698, 2699, 2700, 2701,
	2703, 2704, 1566, 1497, 1498, 2698, 2699, 2700, 2701, 2703,
	2704, 1383, 1848, 2465, 1495, 3947, 195, 3909, 3908, 3846,
	3844, 1399, 3835, 1048, 3057, 1528, 1497, 1498, 1217, 2736,
	3697, 3687, 1500, 3684, 1521, 2147, 3683, 924, 924, 924,
	3682, 3676, 3669, 924, 1503, 1504, 1506, 1507, 1528, 2779,
	1044, 3661, 1044, 1636, 1244, 1500, 3638, 3622, 3621, 2110,
	3609, 194, 1499, 3606, 1471, 3644, 2702, 1108, 1427, 3226,
	2712, 187, 1479, 3582, 3472, 924, 1478, 848, 629, 188,
	3560, 1285, 1715, 629, 3538, 1499, 3515, 3498, 847, 3497,
	1473, 924, 3453, 2175, 3485, 1225, 3484, 1475, 3450, 3357,
	3338, 162, 3275, 1492, 1493, 1685, 3272, 2148, 2145, 2116,
	924, 3184, 3183, 3170, 3169, 1694, 1108, 3125, 3113, 3022,
	1738, 1564, 1645, 2983, 1619, 2966, 2926, 2876, 2855, 1366,
	2831, 2830, 1746, 2804, 2661, 2660, 1673, 1642, 1643, 1373,
	2655, 1775, 2623, 152, 1690, 2445, 2802, 1623, 1666, 1622,
	1621, 1611, 1612, 1505, 1692, 1618, 1740, 1501, 1502, 1503,
	1504, 1506, 1507, 1610, 2696, 2697, 1010, 1608, 2322, 2321,
	1741, 2294, 2287, 867, 2254, 2158, 1505, 2464, 1681, 2713,
	1637, 1632, 1390, 1631, 3359, 2161, 1630, 1629, 1042, 1628,
	1042, 1527, 1529, 1501, 1502, 1503, 1504, 1506, 1507, 1497,
	1498, 1627, 3309, 1760, 1759, 1688, 1626, 1768, 1770, 1625,
	1689, 1624, 1605, 1604, 1527, 1529, 1603, 1602, 2150, 1601,
	1600, 1599, 1598, 1597, 1596, 1766, 1595, 1664, 1500, 1667,
	1594, 1593, 1592, 1591, 1931, 1743, 193, 193, 1580, 634,
	1565, 1563, 1520, 1558, 634, 2831, 1635, 1070, 1061, 1225,
	1054, 3149, 637, 3136, 3128, 2643, 1108, 637, 1499, 2313,
	1686, 1787, 193, 1676, 2285, 1520, 1675, 1674, 1672, 1671,
	1670, 1661, 3527, 3361, 195, 195, 1693, 3148, 2696, 2697,
	1579, 1737, 2800, 1816, 1561, 1768, 1818, 1677, 1657, 1823,
	1695, 3602, 3407, 1709, 1092, 3906, 1768, 867, 3899, 3685,
	195, 2706, 2698, 2699, 2700, 2701, 2703, 2704, 3642, 2936,
	2858, 1763, 3597, 1600, 2702, 1771, 1761, 2144, 1201, 194,
	194, 1213, 1216, 3596, 2159, 1090, 3583, 3476, 3406, 187,
	187, 3131, 2968, 2967, 1086, 1768, 1659, 188, 188, 1466,
	1086, 3230, 2324, 2393, 1083, 194, 1617, 1589, 1091, 2681,
	1086, 1521, 1616, 3541, 1802, 187, 2680, 2605, 2377, 162,
	162, 3182, 1087, 188, 829, 1928, 3519, 1600, 2913, 1827,
	2912, 3593, 1407, 3821, 1521, 3808, 1408, 1216, 1216, 1840,
	3215, 3198, 1225, 3186, 1225, 162, 1225, 2698, 2699, 2700,
	2701, 2703, 2704, 1586, 1873, 1225, 1225, 1755, 1398, 1225,
	2987, 1842, 2743, 3059, 830, 3817, 2141, 2320, 1633, 2649,
	1765, 634, 1225, 1225, 1225, 1216, 1878, 1744, 1613, 1232,
	2905, 1886, 1877, 1231, 637, 1266, 3830, 1436, 2416, 2424,
	1798, 3827, 629, 2945, 3161, 3678, 1822, 2413, 1387, 3382,
	3460, 3756, 1764, 3666, 2834, 1077, 1881, 1039, 1084, 1039,
	3177, 2515, 2476, 1843, 2899, 3211, 1085, 3869, 3870, 1947,
	3003, 1936, 2813, 3580, 3818, 3396, 1894, 1254, 3378, 2329,
	1883, 1989, 1508, 1509, 1501, 1502, 1503, 1504, 1506, 1507,
	2019, 1933, 1022, 1951, 3944, 3573, 1860, 1859, 1937, 3717,
	3566, 684, 827, 921, 825, 3207, 1509, 1501, 1502, 1503,
	1504, 1506, 1507, 3206, 3200, 3197, 924, 823, 924, 1987,
	3210, 1264, 3196, 3158, 3379, 924, 821, 818, 1715, 1715,
	1108, 2017, 924, 924, 924, 924, 924, 924, 924, 924,
	924, 924, 924, 924, 924, 924, 924, 924, 924, 924,
	924, 924, 924, 924, 924, 924, 924, 924, 924, 924,
	924, 924, 924, 924, 924, 924, 924, 1892, 924, 2021,
	924, 924, 924, 924, 2008, 1888, 3157, 1358, 2654, 1358,
	1896, 1897, 1309, 811, 1891, 1756, 1891, 1712, 2653, 1092,
	685, 1265, 924, 2426, 1071, 924, 924, 1924, 2652, 1925,
	1798, 1434, 1941, 634, 924, 1940, 1938, 1086, 924, 1385,
	924, 924, 2651, 2425, 2427, 2609, 637, 1433, 1108, 1092,
	2418, 2409, 2045, 2046, 924, 924, 924, 924, 806, 924,
	924, 924, 924, 924, 924, 924, 924, 867, 2801, 867,
	1969, 2401, 1083, 1091, 2018, 2857, 1373, 2700, 2701, 2703,
	2704, 860, 2146, 2430, 2400, 924, 924, 924, 924, 924,
	924, 924, 924, 924, 2380, 2032, 3716, 2306, 924, 1908,
	1083, 2091, 1910, 1091, 2122, 2123, 1472, 1228, 1915, 2815,
	1044, 1917, 2189, 865, 3374, 1507, 2188, 1108, 3375, 2122,
	2138, 1772, 1773, 2473, 2007, 2049, 1044, 2005, 2006, 1038,
	2020, 2988, 2002, 2013, 1432, 2016, 848, 815, 1945, 848,
	848, 2102, 924, 1108, 1703, 2184, 1273, 2036, 1795, 2347,
	2037, 2038, 2314, 1858, 1299, 2336, 1298, 2147, 3496, 1380,
	807, 2137, 3377, 2345, 2206, 2206, 2220, 2100, 2122, 1709,
	1709, 2240, 2242, 2368, 1791, 3380, 1084, 2246, 2397, 898,
	2141, 1297, 2298, 1296, 1085, 2379, 1320, 1260, 2696, 2697,
	864, 2714, 2715, 2716, 2704, 1213, 1993, 1796, 1797, 2390,
	2391, 1445, 2118, 1998, 1084, 608, 2262, 2582, 1225, 3300,
	2390, 2391, 1085, 1926, 3408, 2270, 3549, 2106, 1959, 2135,
	3869, 2295, 1666, 1373, 2431, 1792, 1939, 2106, 1954, 2148,
	2145, 2003, 1010, 2597, 2001, 1396, 2356, 1400, 1108, 1948,
	1949, 1950, 2284, 3894, 1465, 1746, 152, 2415, 1042, 2390,
	2391, 1789, 2261, 687, 686, 1962, 1477, 2711, 875, 2812,
	3173, 3786, 3814, 1381, 1042, 1715, 2215, 2202, 2231, 867,
	1677, 1408, 866, 1069, 226, 2308, 2244, 2414, 3376, 867,
	2096, 2252, 2253, 867, 2267, 2268, 2412, 1825, 2263, 2347,
	1108, 2097, 2269, 1051, 2274, 2098, 2367, 2280, 2281, 2103,
	607, 1664, 1225, 2345, 3164, 1893, 562, 3392, 1824, 924,
	2994, 924, 2222, 3383, 1449, 2993, 2561, 808, 2348, 3551,
	1619, 3883, 1386, 1782, 3895, 1086, 1408, 1049, 1783, 2000,
	1431, 557, 1988, 883, 1820, 2359, 2374, 2186, 2702, 1955,
	2150, 2596, 2187, 2327, 2323, 2190, 2019, 2191, 2192, 2150,
	1963, 1611, 1612, 1086, 819, 2417, 819, 1796, 1797, 2383,
	2410, 3882, 1422, 3495, 2449, 2406, 2398, 1804, 2326, 819,
	1986, 867, 1936, 2114, 2382, 1040, 2330, 739, 820, 819,
	2112, 1225, 1225, 1284, 1225, 1821, 1808, 2017, 1956, 3735,
	2378, 2717, 2438, 682, 2440, 681, 1225, 2304, 641, 3815,
	3048, 2392, 2394, 2395, 2396, 2351, 2487, 2370, 1997, 2361,
	2364, 1423, 3919, 3897, 3858, 863, 2433, 3291, 2381, 2567,
	3290, 1282, 1052, 2943, 2500, 1876, 1784, 2712, 2316, 809,
	1262, 2399, 2478, 1647, 1805, 2478, 2589, 2590, 887, 2144,
	2942, 1786, 3931, 2531, 924, 2529, 3903, 2099, 2535, 2536,
	2015, 1798, 2088, 1712, 1712, 1782, 2101, 2541, 2542, 2543,
	1783, 1905, 3679, 2551, 2869, 2552, 634, 3390, 1936, 1284,
	810, 1936, 152, 1936, 1232, 2503, 1709, 3813, 2434, 637,
	2443, 2863, 2514, 1815, 1213, 924, 2942, 1319, 1259, 1800,
	2358, 924, 924, 2489, 2453, 2549, 2814, 3185, 1443, 3442,
	2018, 2504, 609, 1788, 2471, 606, 1651, 1039, 2482, 2845,
	3174, 2150, 2534, 714, 2570, 2537, 2798, 2538, 2493, 3857,
	2494, 2546, 2495, 1039, 3550, 2559, 1809, 1789, 1789, 1446,
	2572, 2553, 2574, 2555, 1999, 2557, 2713, 3733, 2505, 2501,
	2332, 816, 1606, 3287, 2620, 1654, 924, 924, 2532, 2516,
	3508, 2565, 924, 2334, 3492, 1961, 3045, 2844, 1784, 1649,
	3879, 2016, 3896, 1382, 2879, 924, 924, 2499, 3734, 1358,
	2618, 924, 924, 1786, 2132, 1652, 3767, 924, 3696, 2611,
	1703, 1703, 2335, 1557, 1810, 1811, 924, 924, 924, 2105,
	3430, 1444, 924, 3391, 1958, 2086, 1806, 2333, 2089, 3428,
	3839, 2612, 924, 1650, 1953, 1789, 2357, 2847, 3840, 866,
	1395, 1397, 2266, 2548, 642, 643, 558, 2579, 2569, 924,
	2578, 2577, 2554, 2588, 2556, 2758, 2558, 1050, 3046, 2642,
	1807, 1476, 2032, 1447, 2633, 1788, 2583, 2346, 2849, 2659,
	2566, 2851, 3920, 3061, 2085, 2279, 2598, 3145, 1068, 2708,
	2709, 2710, 2575, 3452, 3901, 1064, 2707, 2705, 2706, 2698,
	2699, 2700, 2701, 2703, 2704, 3281, 2637, 2638, 3292, 3491,
	3443, 2641, 1647, 3856, 559, 3699, 2496, 3005, 2580, 3812,
	740, 3868, 1410, 2615, 3866, 924, 924, 924, 3713, 2432,
	3608, 1653, 2848, 3242, 924, 924, 924, 2610, 2616, 924,
	2929, 1830, 2621, 1867, 1448, 1644, 1837, 1062, 1817, 924,
	1044, 1108, 560, 2347, 561, 924, 1057, 924, 3225, 2568,
	1812, 645, 644, 549, 1487, 1044, 3336, 2362, 2750, 2751,
	3288, 3932, 1384, 2113, 806, 3902, 2035, 1789, 1799, 2150,
	1651, 1757, 3009, 1108, 1486, 1651, 2648, 3430, 3557, 1785,
	1906, 2791, 3556, 1486, 3536, 1044, 3428, 860, 1108, 3665,
	1712, 2772, 3243, 3204, 3904, 3160, 1481, 2930, 2502, 646,
	647, 2924, 1715, 2818, 3099, 3395, 1108, 3493, 2733, 1654,
	2826, 3925, 3394, 1373, 1654, 2757, 2087, 1813, 924, 2822,
	2457, 2447, 1887, 2264, 2752, 1879, 1872, 3382, 1649, 1854,
	3044, 3838, 924, 2796, 1836, 3114, 2786, 2789, 2762, 1652,
	3745, 1754, 3006, 1715, 1652, 1994, 867, 1750, 3245, 2810,
	3429, 2760, 2808, 3700, 2781, 2273, 3378, 3465, 2025, 924,
	3371, 3591, 2785, 2816, 1485, 1557, 807, 2384, 2728, 2729,
	2730, 2444, 1650, 1485, 2761, 1322, 3369, 2766, 1042, 2770,
	2617, 932, 3373, 2778, 2744, 2773, 2774, 2819, 2820, 2619,
	3589, 2836, 3537, 1042, 2841, 2842, 2799, 2759, 3293, 887,
	1108, 2837, 3379, 887, 2835, 2771, 1487, 2839, 1752, 1225,
	2833, 1785, 1486, 2832, 3337, 1487, 2823, 1703, 1192, 2603,
	2581, 1225, 1192, 1042, 224, 224, 224, 1108, 552, 553,
	1753, 568, 552, 568, 578, 583, 1946, 2827, 599, 3372,
	736, 2860, 1225, 605, 2852, 2853, 2888, 3426, 2854, 224,
	2776, 2884, 2777, 1225, 3100, 1653, 2882, 2862, 2767, 2885,
	1653, 2811, 3101, 2893, 2895, 725, 2026, 1044, 1424, 224,
	3294, 2923, 3393, 1787, 2817, 3924, 2873, 2874, 2258, 3127,
	2875, 2938, 2870, 2793, 2794, 2795, 2755, 1201, 2910, 2918,
	2754, 2363, 2303, 1038, 2302, 1038, 1411, 2850, 2877, 2301,
	1787, 1213, 1485, 2765, 728, 1225, 1225, 3429, 2947, 1833,
	2856, 2865, 2300, 1709, 3701, 2866, 1689, 2385, 2386, 2867,
	2451, 1305, 2529, 808, 2868, 2872, 864, 1291, 2769, 2878,
	1303, 2529, 1827, 2900, 2886, 3545, 3672, 2891, 2896, 1292,
	1827, 2201, 2197, 2902, 738, 2260, 3434, 2964, 2977, 1831,
	2259, 1885, 2792, 3876, 1709, 3587, 3534, 1108, 2382, 2958,
	1108, 2880, 3374, 3753, 3748, 2931, 3375, 3482, 2939, 552,
	552, 2921, 3673, 2984, 3742, 3343, 3116, 224, 2805, 2806,
	2157, 2807, 2871, 1463, 1832, 2156, 152, 152, 3878, 3832,
	924, 1216, 1216, 3535, 2944, 1461, 924, 924, 1440, 3686,
	924, 924, 924, 2953, 924, 1042, 1438, 3514, 2768, 2946,
	3377, 2195, 1421, 924, 1715, 2962, 2963, 2975, 2959, 1419,
	3335, 2979, 924, 3380, 3546, 924, 1417, 3481, 2199, 2200,
	2198, 1108, 3000, 2999, 1415, 809, 1213, 1039, 3749, 3216,
	924, 2725, 3021, 1413, 2985, 2990, 3674, 2991, 1108, 2992,
	1405, 2690, 1039, 3007, 1403, 2937, 734, 735, 1715, 1715,
	924, 924, 1301, 924, 924, 924, 2622, 3024, 2726, 2448,
	2408, 1213, 2376, 1213, 2325, 1684, 810, 3033, 3034, 1680,
	2996, 924, 1039, 2194, 2196, 924, 1464, 1715, 1715, 924,
	924, 924, 924, 924, 924, 924, 924, 924, 924, 924,
	924, 924, 924, 924, 924, 924, 924, 924, 3004, 924,
	1375, 858, 3002, 806, 1985, 867, 924, 924, 1715, 3412,
	726, 727, 3001, 924, 1481, 1782, 3376, 2563, 2562, 2540,
	1783, 1304, 2014, 1996, 924, 1966, 860, 1739, 1590, 1040,
	1302, 1040, 2881, 1379, 3029, 1044, 1044, 1462, 2997, 924,
	1277, 3807, 2045, 3064, 737, 3403, 3741, 3040, 3463, 1460,
	3854, 3383, 1439, 3047, 3049, 3050, 3417, 3367, 3041, 3056,
	1437, 1570, 3241, 3235, 3063, 1575, 1420, 859, 1108, 3209,
	3180, 2045, 3079, 1418, 3132, 3178, 3159, 2955, 2956, 2957,
	1416, 2922, 2914, 2960, 3073, 2961, 3074, 1712, 1414, 3076,
	3071, 2498, 3111, 3078, 3072, 1936, 924, 1412, 2897, 3103,
	2474, 2462, 3107, 2454, 1404, 807, 152, 2441, 1402, 1921,
	1919, 924, 924, 1916, 1911, 1709, 1300, 1909, 1784, 2919,
	3104, 1907, 1898, 1851, 1849, 1841, 3155, 1828, 1712, 1814,
	2925, 3123, 3124, 1786, 1801, 3112, 924, 924, 2934, 3118,
	1790, 1192, 3615, 3120, 3121, 1691, 1019, 817, 2892, 2601,
	1490, 3870, 3777, 1837, 1039, 3487, 3480, 924, 3479, 1709,
	1709, 3424, 2530, 3134, 1776, 1984, 1256, 2347, 3617, 2366,
	3253, 1020, 3135, 1042, 1042, 1798, 1458, 1459, 1343, 2347,
	1225, 2345, 2970, 2971, 887, 1957, 3776, 1983, 1709, 1709,
	1192, 1715, 3632, 2365, 620, 1788, 1884, 1982, 1342, 3192,
	3194, 1964, 3051, 3397, 3419, 3191, 1401, 3651, 3205, 1497,
	1498, 3344, 3322, 2387, 1703, 3187, 1225, 2369, 3163, 1709,
	3872, 1494, 3864, 924, 1747, 3070, 1055, 3203, 2413, 2421,
	2602, 1044, 924, 2420, 1497, 1498, 3199, 563, 1500, 217,
	3624, 2403, 3740, 2405, 3255, 1491, 2371, 3202, 1225, 1225,
	1225, 1836, 3625, 3247, 1065, 1703, 2404, 3250, 3709, 1106,
	2382, 599, 808, 1207, 1225, 3231, 1021, 3706, 1499, 3249,
	1108, 673, 3218, 3246, 3232, 1343, 713, 1343, 3626, 822,
	824, 826, 2487, 546, 224, 2827, 224, 224, 1204, 574,
	224, 224, 1108, 1499, 3233, 924, 924, 1789, 2373, 3267,
	3671, 924, 924, 1715, 224, 1234, 924, 924, 3898, 924,
	3584, 2372, 3234, 924, 2529, 3224, 3236, 3142, 2481, 2245,
	1742, 1696, 3251, 3543, 924, 3248, 2797, 3256, 1258, 3923,
	1192, 3708, 3257, 1780, 3628, 2696, 2697, 1497, 1498, 3270,
	924, 1276, 1213, 1281, 3268, 3269, 224, 224, 3280, 1204,
	3627, 3151, 3263, 3276, 3262, 1567, 3304, 3279, 3314, 224,
	3273, 3295, 3274, 1876, 3277, 2152, 1318, 3629, 3289, 1042,
	2339, 2340, 857, 3147, 809, 2339, 3284, 2337, 1216, 224,
	224, 224, 2185, 1204, 224, 2337, 2338, 1389, 3308, 3605,
	3296, 3574, 599, 1388, 224, 224, 3420, 3416, 1442, 1712,
	1044, 1441, 1709, 1038, 3415, 3310, 3239, 3146, 1044, 725,
	3052, 2883, 1108, 1584, 1108, 810, 1583, 3911, 3884, 1038,
	3662, 1044, 3570, 3179, 3528, 3181, 3526, 3449, 3360, 3278,
	3259, 1108, 1039, 1039, 3219, 3217, 3176, 3171, 2954, 2928,
	2927, 1785, 3349, 1712, 1712, 2545, 2544, 2491, 2466, 2442,
	924, 2318, 3334, 2317, 2117, 1981, 1980, 1979, 1978, 3388,
	1213, 1213, 1901, 1900, 1899, 1882, 1862, 1861, 1857, 1856,
	1855, 224, 1712, 1712, 1853, 1852, 1108, 3208, 1457, 1456,
	1330, 1108, 1329, 152, 3346, 3347, 224, 3389, 3351, 3348,
	3364, 3365, 1328, 1327, 1326, 3355, 3345, 1225, 2785, 3399,
	3400, 3401, 3356, 1712, 3350, 1325, 1324, 1323, 1321, 1316,
	3352, 3398, 3341, 1315, 1709, 3366, 1314, 1313, 1312, 3387,
	1272, 3432, 1108, 1271, 1270, 1269, 1703, 1225, 1268, 1267,
	1261, 1255, 1253, 1213, 1252, 1099, 3423, 1098, 1042, 1097,
	3421, 1096, 3422, 3261, 1067, 1066, 1042, 1002, 1748, 828,
	814, 3548, 3381, 924, 1451, 3435, 3630, 80, 1263, 1042,
	660, 3631, 3483, 3410, 3467, 75, 2029, 3212, 1108, 3411,
	1703, 1703, 1834, 2887, 3451, 3175, 668, 3755, 2843, 3414,
	924, 924, 924, 3436, 3466, 3470, 3475, 3444, 3454, 2422,
	3431, 1965, 3486, 624, 1192, 1409, 1967, 3455, 1108, 1703,
	1703, 3468, 3456, 924, 2780, 2286, 924, 924, 3732, 3318,
	2658, 3658, 3507, 2155, 1588, 2737, 924, 3474, 77, 1715,
	3461, 908, 954, 3441, 924, 924, 3440, 3368, 1039, 3162,
	1703, 2519, 3438, 3437, 1700, 3264, 3265, 3266, 1702, 1108,
	874, 3494, 3504, 1111, 1758, 914, 1774, 3499, 1767, 1040,
	2319, 2205, 1108, 931, 928, 1704, 1706, 930, 929, 1705,
	924, 1607, 927, 1699, 3238, 1040, 3510, 924, 3237, 2450,
	2485, 1308, 3516, 791, 1762, 924, 2111, 1715, 2139, 2647,
	552, 1581, 1192, 889, 924, 910, 1712, 924, 3530, 3522,
	3523, 2136, 1683, 924, 1060, 899, 2763, 2941, 3141, 3471,
	1108, 224, 2024, 224, 3521, 676, 2223, 224, 2693, 2142,
	3525, 2115, 1053, 3531, 2228, 2221, 2217, 2475, 3569, 1467,
	1234, 1204, 224, 3529, 224, 1559, 2486, 1570, 1094, 224,
	1234, 568, 3553, 3552, 224, 1234, 892, 3579, 2109, 1572,
	599, 1778, 2627, 3590, 1108, 3599, 2034, 1225, 2948, 3571,
	2783, 1192, 2312, 3567, 3773, 3060, 1866, 1018, 1017, 3604,
	1016, 3576, 3761, 3758, 3271, 924, 924, 2908, 1751, 2331,
	1549, 3559, 2915, 904, 3635, 3636, 3588, 1192, 924, 924,
	1212, 2227, 2748, 2910, 3612, 3614, 2978, 1274, 3598, 3616,
	604, 916, 1548, 2429, 2428, 924, 1715, 1039, 1712, 3668,
	1081, 1080, 3603, 3613, 3611, 1039, 1079, 3620, 3619, 2825,
	3633, 3470, 3618, 1703, 3930, 3172, 192, 3639, 1039, 924,
	2595, 1488, 924, 1480, 189, 191, 190, 3445, 3214, 3189,
	1709, 2901, 20, 19, 18, 3664, 97, 39, 3650, 17,
	125, 924, 3610, 124, 123, 1216, 122, 121, 3646, 3656,
	3681, 3675, 127, 120, 119, 114, 118, 3647, 3648, 117,
	3663, 116, 115, 113, 1225, 112, 111, 110, 109, 108,
	107, 106, 1192, 3680, 105, 104, 103, 924, 924, 3695,
	102, 1846, 101, 100, 99, 1876, 98, 924, 1709, 595,
	924, 592, 1225, 55, 54, 96, 3710, 95, 3688, 3712,
	16, 224, 1225, 1225, 37, 3692, 3690, 14, 3691, 59,
	60, 13, 32, 33, 86, 85, 3702, 31, 3723, 1225,
	3707, 3703, 3704, 15, 1192, 1703, 30, 28, 11, 3714,
	9, 8, 924, 924, 3720, 3715, 3719, 34, 1668, 12,
	5, 157, 156, 158, 155, 224, 79, 3694, 154, 224,
	3603, 153, 78, 3727, 224, 26, 10, 3750, 149, 3728,
	3600, 3729, 611, 3229, 74, 924, 924, 3737, 924, 151,
	150, 148, 224, 147, 224, 146, 224, 3760, 3763, 72,
	552, 3752, 3561, 3562, 3771, 145, 144, 73, 143, 24,
	6, 58, 7, 3751, 1902, 3721, 3722, 3765, 3489, 2986,
	90, 91, 3575, 1038, 3769, 3577, 3578, 1709, 3791, 3778,
	3790, 3736, 3726, 224, 924, 924, 924, 35, 1038, 70,
	3782, 3792, 69, 68, 3787, 3785, 23, 57, 22, 182,
	3775, 181, 180, 179, 174, 3819, 599, 924, 173, 178,
	725, 3824, 3803, 3804, 3764, 3806, 3805, 3768, 1038, 176,
	175, 224, 177, 1204, 224, 172, 184, 3822, 183, 186,
	3841, 170, 166, 165, 169, 3843, 616, 599, 171, 3779,
	3845, 168, 3780, 167, 224, 164, 185, 142, 3851, 65,
	924, 3842, 3855, 224, 224, 3847, 224, 141, 224, 140,
	224, 139, 224, 138, 3850, 137, 136, 135, 64, 21,
	2, 3861, 3862, 2585, 3867, 1, 1990, 3865, 3863, 1991,
	0, 1992, 0, 0, 1712, 3871, 0, 3848, 3849, 2487,
	3877, 3760, 3852, 224, 3763, 924, 3875, 924, 3874, 3881,
	3887, 3886, 3892, 3873, 3888, 3885, 3890, 622, 0, 0,
	0, 0, 0, 3891, 583, 2048, 0, 0, 599, 3889,
	0, 0, 3880, 0, 0, 3893, 0, 0, 3905, 3907,
	1876, 618, 0, 3689, 0, 0, 0, 0, 0, 0,
	3775, 3915, 1712, 1216, 3912, 3918, 0, 0, 2227, 924,
	924, 3921, 0, 2223, 2223, 0, 0, 924, 3917, 924,
	924, 3913, 3927, 0, 0, 3933, 0, 0, 3934, 0,
	0, 0, 0, 3936, 0, 0, 0, 0, 0, 0,
	0, 3935, 0, 0, 3937, 0, 0, 0, 0, 0,
	3943, 3941, 0, 0, 3946, 0, 0, 3948, 924, 3940,
	1038, 0, 0, 2153, 3953, 0, 0, 2624, 2625, 0,
	3942, 1703, 3949, 0, 3951, 3945, 0, 0, 0, 1040,
	0, 3693, 0, 0, 0, 0, 0, 0, 2227, 2227,
	0, 0, 0, 0, 1040, 613, 0, 0, 3928, 3929,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 617, 0, 0,
	0, 1712, 0, 0, 1040, 0, 0, 0, 0, 1703,
	0, 0, 0, 2223, 2223, 2223, 552, 3950, 0, 0,
	0, 0, 0, 621, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 2296, 615,
	552, 0, 0, 0, 0, 0, 0, 224, 0, 552,
	0, 0, 0, 0, 0, 1192, 0, 0, 0, 0,
	0, 224, 0, 3834, 0, 0, 0, 2719, 2720, 2721,
	0, 0, 0, 0, 0, 0, 612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1192, 2227, 2227,
	2227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 619, 1192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 0,
	1192, 568, 0, 0, 0, 614, 0, 0, 1703, 0,
	0, 0, 887, 2342, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 887, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2355, 0, 0, 0, 0, 1213,
	0, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 1040, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 1192, 0, 0, 0, 1038, 1038,
	0, 0, 0, 0, 0, 0, 224, 2435, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1192, 0, 0, 0, 0, 0, 0, 0, 1234,
	0, 0, 224, 1216, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 0, 2470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2355, 0, 552, 0, 0,
	2490, 0, 0, 0, 0, 0, 224, 0, 0, 224,
	0, 224, 0, 224, 0, 0, 0, 0, 1204, 0,
	224, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	2512, 725, 0, 2355, 2355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 1204, 224, 0, 0, 1234, 0,
	1234, 0, 0, 1204, 0, 1204, 0, 1204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1192, 0, 0, 1192, 0, 0, 0, 0, 224,
	224, 224, 224, 1204, 224, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2223,
	2223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1038, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1192, 0, 0, 0, 0,
	0, 0, 0, 3017, 3018, 0, 0, 0, 0, 0,
	0, 0, 1192, 0, 1040, 1040, 0, 0, 0, 0,
	0, 0, 0, 0, 2227, 2227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2223, 2223, 2223,
	2223, 2223, 2223, 2223, 2223, 2223, 2223, 2223, 2223, 2223,
	2223, 2223, 2223, 2223, 2223, 2223, 0, 2223, 0, 0,
	0, 0, 0, 0, 1234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3080, 3081, 3082, 3083, 3084, 3085, 3086, 3087, 3088,
	3089, 3090, 3091, 3092, 3093, 3094, 3095, 3096, 3097, 3098,
	0, 3102, 2227, 2227, 2227, 2227, 2227, 2227, 2227, 2227,
	2227, 2227, 2227, 2227, 2227, 2227, 2227, 2227, 2227, 2227,
	2227, 0, 2227, 1038, 0, 0, 0, 0, 0, 0,
	0, 1038, 1192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1038, 0, 2749, 0, 2696, 2697,
	0, 2714, 2715, 2716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3026,
	0, 224, 0, 0, 0, 0, 1497, 1498, 2775, 1530,
	1531, 1532, 1540, 1541, 1542, 0, 224, 0, 0, 0,
	0, 552, 0, 2788, 0, 0, 552, 1533, 1528, 552,
	1040, 0, 552, 552, 0, 1500, 0, 0, 552, 0,
	0, 2803, 1546, 0, 0, 0, 224, 2711, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1234, 0,
	0, 0, 0, 0, 0, 1499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1519, 0, 1234, 0, 0,
	0, 0, 0, 1516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2355, 2355, 224, 0,
	0, 0, 2355, 0, 0, 2829, 0, 0, 0, 0,
	0, 0, 0, 2355, 2829, 0, 2355, 2829, 2829, 0,
	0, 1646, 0, 0, 0, 0, 0, 0, 2702, 0,
	224, 224, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 1523, 1524, 1525,
	0, 0, 224, 1204, 0, 0, 1505, 0, 0, 0,
	0, 0, 2788, 0, 1192, 2355, 0, 224, 2355, 1281,
	0, 0, 2355, 2355, 0, 0, 0, 0, 0, 0,
	0, 2717, 0, 0, 0, 1537, 1192, 0, 1547, 0,
	0, 0, 0, 2904, 1527, 1529, 2906, 2355, 0, 1040,
	224, 0, 0, 0, 224, 0, 1281, 1040, 0, 1543,
	0, 1544, 0, 0, 0, 0, 0, 2712, 1514, 1515,
	1040, 0, 0, 2470, 0, 0, 1204, 0, 224, 0,
	0, 2355, 0, 552, 1535, 0, 66, 0, 0, 0,
	2355, 0, 0, 0, 0, 1520, 0, 0, 0, 224,
	224, 0, 67, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 0, 1545,
	0, 0, 0, 0, 224, 2470, 0, 0, 2470, 0,
	0, 0, 0, 0, 0, 873, 1534, 0, 0, 0,
	0, 0, 1207, 0, 0, 1106, 0, 0, 0, 0,
	76, 0, 0, 0, 0, 0, 1192, 0, 1192, 0,
	0, 0, 0, 0, 0, 0, 2995, 0, 0, 1204,
	224, 0, 224, 0, 0, 1192, 2713, 0, 0, 0,
	0, 0, 0, 0, 81, 1526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 92, 0, 0, 0,
	0, 82, 89, 0, 1521, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3037, 0, 0, 0,
	1192, 0, 0, 0, 0, 1192, 1538, 0, 0, 0,
	0, 0, 0, 3053, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	83, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3058, 0, 0, 0, 0, 1192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2708,
	2709, 2710, 0, 0, 0, 0, 2707, 2705, 2706, 2698,
	2699, 2700, 2701, 2703, 2704, 0, 0, 0, 0, 0,
	0, 0, 1192, 1536, 0, 0, 0, 1511, 1512, 1518,
	1539, 1517, 1513, 0, 1510, 1508, 1509, 1501, 1502, 1503,
	1504, 1506, 1507, 0, 0, 0, 0, 3327, 0, 0,
	0, 3326, 1192, 0, 2223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 224, 0, 0,
	0, 0, 0, 3144, 0, 0, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 552, 552,
	0, 0, 0, 1192, 0, 0, 0, 0, 2223, 0,
	0, 0, 0, 0, 0, 0, 1192, 0, 3513, 0,
	0, 0, 0, 159, 87, 0, 88, 0, 0, 0,
	0, 1234, 0, 0, 0, 0, 0, 0, 0, 2227,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 887, 0, 0, 720, 0, 0, 0, 126, 0,
	0, 0, 3539, 0, 1192, 1497, 1498, 0, 1530, 1531,
	1532, 1540, 1541, 1542, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 2227, 195, 0, 1533, 1528, 0, 0,
	0, 0, 0, 0, 1500, 0, 0, 0, 0, 0,
	0, 1546, 0, 0, 224, 0, 0, 128, 1192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 0, 1499, 0, 0, 224, 0, 194,
	0, 0, 0, 0, 1519, 0, 224, 0, 0, 187,
	0, 0, 1516, 2223, 224, 0, 0, 188, 0, 0,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	2696, 2697, 0, 2714, 2715, 2716, 0, 0, 0, 162,
	0, 2355, 224, 0, 0, 0, 0, 0, 0, 0,
	1034, 3025, 0, 0, 0, 0, 873, 2512, 2512, 0,
	873, 0, 0, 725, 725, 2355, 0, 3655, 2470, 2470,
	0, 0, 725, 2355, 0, 1522, 1523, 1524, 1525, 0,
	224, 0, 0, 0, 0, 1505, 0, 0, 2227, 0,
	0, 0, 0, 219, 219, 548, 0, 1497, 1498, 2711,
	0, 0, 0, 0, 1236, 0, 1240, 0, 1246, 0,
	0, 0, 0, 0, 1537, 0, 0, 1547, 0, 1528,
	0, 0, 0, 1527, 1529, 0, 1500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1543, 0,
	1544, 0, 0, 0, 0, 0, 0, 1514, 1515, 3319,
	0, 0, 0, 0, 0, 0, 1499, 0, 0, 0,
	0, 0, 0, 1535, 0, 0, 1519, 0, 0, 0,
	2227, 2227, 0, 0, 1520, 0, 0, 0, 0, 0,
	2702, 0, 0, 0, 0, 0, 0, 0, 1369, 0,
	0, 0, 0, 0, 0, 0, 1376, 0, 1545, 3354,
	887, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 1534, 3362, 1234, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 2717, 0, 0, 0, 1522, 1523, 1524,
	1525, 0, 0, 0, 0, 0, 0, 1505, 0, 2355,
	2355, 2355, 1428, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1234, 0, 1526, 0, 0, 0, 0, 2712,
	2355, 0, 2829, 0, 0, 1234, 1234, 224, 0, 0,
	0, 0, 0, 1521, 0, 1527, 1529, 0, 224, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2355,
	0, 2355, 224, 0, 0, 1538, 0, 0, 0, 0,
	0, 0, 0, 0, 2355, 0, 0, 0, 3447, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 224, 0, 1520, 0, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 0, 0, 0, 0, 0,
	0, 0, 0, 1106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1234, 0, 1569,
	0, 0, 0, 1497, 1498, 1582, 0, 0, 2713, 0,
	0, 0, 0, 3505, 0, 0, 0, 0, 0, 0,
	0, 0, 1536, 0, 0, 1528, 1511, 1512, 1518, 1539,
	1517, 1513, 1500, 1510, 1508, 1509, 1501, 1502, 1503, 1504,
	1506, 1507, 0, 0, 0, 0, 2671, 0, 0, 0,
	2672, 0, 0, 0, 3505, 0, 1526, 0, 0, 0,
	0, 0, 1499, 0, 0, 0, 0, 2048, 0, 0,
	0, 0, 1519, 0, 0, 1521, 0, 0, 0, 0,
	1516, 0, 0, 0, 0, 0, 0, 0, 0, 2355,
	0, 2829, 0, 0, 3533, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 1640, 1640,
	1640, 0, 0, 0, 0, 2048, 0, 0, 0, 0,
	0, 2708, 2709, 2710, 3299, 0, 0, 599, 2707, 2705,
	2706, 2698, 2699, 2700, 2701, 2703, 2704, 0, 0, 0,
	0, 0, 0, 1522, 1523, 1524, 1525, 0, 0, 0,
	0, 0, 0, 1505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3533, 0, 0, 0, 0, 0,
	0, 0, 2355, 0, 0, 0, 0, 0, 0, 0,
	0, 873, 3607, 0, 0, 0, 0, 0, 0, 0,
	0, 1527, 1529, 0, 1234, 1510, 1508, 1509, 1501, 1502,
	1503, 1504, 1506, 1507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1514, 1515, 224, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 933, 0, 0,
	0, 3058, 1520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 225, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1103, 0, 0, 0, 0, 0, 1211,
	0, 0, 224, 0, 0, 225, 1497, 1498, 0, 1530,
	1531, 1532, 1540, 1541, 1542, 0, 0, 3447, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 1533, 1528, 0,
	224, 0, 1526, 2696, 2697, 1500, 2714, 2715, 2716, 2829,
	0, 0, 1546, 0, 0, 0, 0, 0, 0, 0,
	0, 1521, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1234, 1499, 1234, 0, 1310, 0,
	0, 0, 0, 0, 0, 1519, 0, 0, 0, 0,
	0, 0, 0, 1516, 0, 0, 0, 0, 1334, 1334,
	1334, 3746, 0, 0, 0, 0, 0, 0, 1234, 0,
	0, 224, 2711, 1367, 1368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 2355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 1523, 1524, 1525,
	0, 0, 0, 0, 0, 0, 1505, 0, 0, 0,
	0, 3058, 0, 0, 0, 0, 0, 0, 1517, 1513,
	0, 1510, 1508, 1509, 1501, 1502, 1503, 1504, 1506, 1507,
	1450, 0, 0, 2702, 0, 1537, 0, 0, 1547, 0,
	0, 0, 0, 0, 1527, 1529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2355, 1543,
	0, 1544, 0, 0, 0, 2718, 0, 0, 1514, 1515,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3533,
	0, 0, 0, 0, 1535, 0, 2717, 0, 0, 0,
	0, 0, 0, 0, 0, 1520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1234, 0, 2355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1545,
	0, 0, 2712, 0, 0, 0, 0, 2023, 0, 2027,
	0, 0, 0, 0, 0, 0, 2041, 0, 0, 0,
	0, 0, 0, 2050, 2051, 2052, 2053, 2054, 2055, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076,
	2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 0, 2090,
	0, 2092, 2093, 2094, 2095, 1526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2119, 1521, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1569, 0, 0, 0, 2134,
	0, 0, 0, 0, 0, 0, 1538, 1497, 1498, 0,
	0, 2713, 0, 0, 0, 2164, 2167, 2170, 2173, 0,
	2177, 2178, 2179, 2180, 2181, 2182, 2183, 0, 0, 1528,
	0, 0, 0, 0, 0, 0, 1500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1678, 0, 2219, 0,
	2230, 2232, 2237, 2696, 2697, 0, 2714, 2715, 2716, 0,
	0, 1687, 0, 1211, 0, 0, 1499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1519, 0, 0, 0,
	0, 0, 2696, 2697, 1516, 2714, 2715, 2716, 0, 0,
	0, 0, 0, 1536, 0, 0, 0, 1511, 1512, 1518,
	1539, 1517, 1513, 0, 1510, 1508, 1509, 1501, 1502, 1503,
	1504, 1506, 1507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2711, 0, 2708, 2709, 2710, 0, 3020, 0,
	0, 2707, 2705, 2706, 2698, 2699, 2700, 2701, 2703, 2704,
	0, 0, 0, 0, 0, 0, 0, 1522, 1523, 1524,
	1525, 2711, 0, 0, 0, 0, 0, 1505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 1112, 225, 225, 0, 1112, 225, 225, 1112, 0,
	0, 0, 0, 0, 0, 1527, 1529, 0, 0, 0,
	225, 0, 0, 2702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1514,
	1515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2702, 0, 0, 0, 0, 0, 0, 0,
	0, 1112, 225, 225, 0, 0, 1520, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 2717, 1497, 1498, 0,
	1530, 1531, 1532, 1540, 1541, 1542, 0, 0, 0, 0,
	2437, 0, 2439, 0, 0, 225, 225, 225, 0, 1528,
	225, 1112, 0, 0, 1864, 1112, 1500, 0, 1871, 1112,
	225, 225, 2712, 1546, 0, 0, 0, 0, 0, 1112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1310, 0, 1890, 0, 1890, 1499, 0, 0, 0,
	0, 2712, 0, 0, 0, 0, 1519, 0, 0, 0,
	0, 0, 0, 0, 1516, 0, 1526, 0, 0, 0,
	0, 0, 1112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1211, 0, 0, 1521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 1943, 0, 0, 0, 1522, 1523, 1524,
	1525, 2713, 0, 0, 0, 2560, 0, 1505, 0, 0,
	0, 0, 0, 1960, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1970, 0, 1972, 0, 1974, 0, 1976,
	2713, 1977, 0, 0, 0, 0, 1537, 0, 0, 1547,
	0, 0, 0, 0, 0, 1527, 1529, 0, 0, 0,
	0, 0, 1550, 1551, 0, 0, 0, 0, 0, 0,
	0, 0, 1995, 0, 0, 0, 0, 0, 0, 1514,
	1515, 0, 1517, 1513, 0, 1510, 1508, 1509, 1501, 1502,
	1503, 1504, 1506, 1507, 0, 1535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2607, 2608, 0,
	0, 0, 0, 2614, 2708, 2709, 2710, 0, 0, 0,
	0, 2707, 2705, 2706, 2698, 2699, 2700, 2701, 2703, 2704,
	0, 0, 2628, 2629, 0, 0, 0, 0, 2134, 0,
	0, 0, 0, 2708, 2709, 2710, 0, 2636, 0, 0,
	2707, 2705, 2706, 2698, 2699, 2700, 2701, 2703, 2704, 0,
	0, 0, 0, 2650, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2662, 0, 0, 0, 0, 0, 1526, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 1521, 0, 0, 0, 0,
	1497, 1498, 0, 0, 1112, 0, 0, 0, 225, 225,
	225, 0, 0, 0, 0, 225, 0, 1538, 0, 0,
	225, 0, 1528, 0, 0, 0, 0, 0, 0, 1500,
	0, 0, 1112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2237, 2237, 2237, 0, 0,
	0, 0, 0, 1112, 0, 0, 0, 0, 0, 1499,
	1640, 0, 0, 0, 0, 0, 0, 0, 2753, 1519,
	0, 0, 0, 0, 0, 0, 0, 1516, 1497, 1498,
	2293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1528, 0, 0, 0, 1536, 0, 0, 1500, 1511, 1512,
	1518, 1539, 1517, 1513, 0, 1510, 1508, 1509, 1501, 1502,
	1503, 1504, 1506, 1507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1499, 0, 873,
	1522, 1523, 1524, 1525, 0, 0, 0, 1519, 0, 0,
	1505, 0, 0, 873, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	2846, 0, 0, 0, 0, 0, 1112, 225, 1527, 1529,
	0, 0, 0, 1112, 67, 0, 0, 0, 0, 3015,
	0, 0, 0, 0, 0, 0, 0, 71, 0, 0,
	0, 0, 1514, 1515, 0, 0, 0, 0, 1522, 1523,
	1524, 1525, 0, 0, 0, 0, 0, 0, 1505, 1211,
	0, 225, 0, 0, 0, 225, 0, 0, 0, 1520,
	225, 0, 76, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	225, 0, 225, 0, 0, 0, 1527, 1529, 0, 0,
	0, 1871, 0, 0, 0, 0, 81, 0, 2461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 92, 0,
	1514, 1515, 0, 82, 89, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 2492, 0, 0, 1334, 0,
	1334, 0, 1334, 0, 0, 0, 0, 1520, 0, 1112,
	0, 1112, 0, 1112, 0, 0, 0, 0, 0, 1526,
	0, 0, 1112, 1112, 0, 0, 1112, 225, 0, 0,
	225, 0, 83, 0, 0, 0, 2539, 0, 1521, 1112,
	1112, 1112, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 2547, 0, 2550, 0, 0, 0, 0, 225,
	225, 0, 225, 0, 225, 0, 225, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 920, 0, 0, 2571, 1211,
	2573, 1211, 0, 2576, 0, 0, 0, 1526, 0, 225,
	0, 2041, 0, 0, 0, 0, 0, 3012, 3013, 0,
	0, 3016, 0, 0, 0, 3019, 1521, 0, 0, 0,
	0, 0, 0, 0, 3023, 0, 1334, 0, 223, 223,
	223, 0, 0, 3030, 2604, 0, 2753, 0, 0, 909,
	94, 0, 0, 0, 0, 0, 0, 1112, 84, 0,
	0, 3042, 0, 635, 0, 1517, 1513, 0, 1510, 1508,
	1509, 1501, 1502, 1503, 1504, 1506, 1507, 0, 0, 0,
	0, 3065, 3066, 635, 3067, 3068, 3069, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 87, 0, 88, 0,
	0, 0, 3075, 0, 0, 0, 3077, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 0, 0, 0, 0, 0, 720, 0, 0, 0,
	126, 0, 94, 0, 0, 0, 0, 3105, 3106, 0,
	0, 0, 0, 1517, 1513, 1112, 1510, 1508, 1509, 1501,
	1502, 1503, 1504, 1506, 1507, 3117, 195, 0, 0, 0,
	0, 1497, 1498, 0, 1530, 1531, 1532, 1540, 1541, 1542,
	3126, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	0, 0, 1533, 1528, 0, 0, 0, 0, 0, 0,
	1500, 1041, 0, 163, 0, 0, 0, 1546, 0, 0,
	0, 194, 849, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 868, 0, 1112, 0, 0, 0, 0, 188,
	1499, 0, 0, 0, 0, 0, 0, 3156, 0, 0,
	1519, 0, 0, 0, 0, 0, 0, 225, 1516, 0,
	1112, 1363, 3165, 3168, 0, 1028, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1522, 1523, 1524, 1525, 1112, 0, 0, 0, 0,
	0, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1112, 0, 0, 0, 0,
	1537, 0, 0, 1547, 0, 0, 0, 2821, 225, 1527,
	1529, 0, 0, 0, 1640, 0, 0, 0, 0, 225,
	0, 0, 0, 3258, 1543, 0, 1544, 0, 0, 0,
	0, 0, 225, 1514, 1515, 0, 0, 0, 0, 2859,
	2861, 2461, 0, 0, 0, 0, 225, 1112, 0, 1535,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1112,
	1520, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1545, 0, 3297, 3298, 225, 0,
	0, 0, 3302, 3303, 0, 225, 0, 3306, 3307, 0,
	0, 1534, 0, 0, 3311, 0, 0, 0, 0, 2916,
	0, 0, 0, 2920, 0, 3315, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 225, 0, 225, 0, 225,
	0, 3320, 0, 0, 0, 0, 225, 225, 1112, 1112,
	0, 1112, 0, 0, 0, 0, 0, 0, 0, 0,
	1526, 0, 0, 1112, 0, 0, 0, 0, 1211, 1211,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 225, 0, 2974, 0, 0, 0, 0, 0, 0,
	0, 1538, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 225, 225, 225, 0,
	225, 0, 225, 0, 0, 0, 0, 0, 0, 2998,
	0, 1211, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 3010, 0, 0, 0, 223, 0,
	223, 223, 0, 0, 223, 223, 0, 0, 1536, 0,
	0, 0, 1511, 1512, 1518, 1539, 1517, 1513, 635, 1510,
	1508, 1509, 1501, 1502, 1503, 1504, 1506, 1507, 0, 0,
	0, 0, 2130, 0, 0, 0, 2131, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 3168, 0, 0, 0, 0, 0,
	0, 0, 0, 94, 0, 94, 0, 94, 0, 0,
	0, 0, 0, 223, 223, 223, 0, 0, 223, 0,
	0, 3500, 3501, 3502, 0, 0, 0, 0, 223, 223,
	956, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2041, 0, 0, 3511, 3512, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3520, 0, 0, 1497, 1498,
	0, 0, 0, 0, 0, 0, 0, 868, 94, 94,
	0, 0, 0, 0, 0, 0, 0, 94, 0, 0,
	1528, 0, 0, 0, 0, 94, 0, 1500, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 3168, 0,
	0, 0, 0, 0, 0, 0, 3558, 0, 1112, 0,
	223, 0, 0, 0, 0, 3565, 0, 1499, 873, 0,
	0, 0, 0, 0, 3572, 0, 0, 1519, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 0, 94,
	1112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1112, 0, 0, 0, 0,
	0, 0, 0, 0, 66, 0, 0, 0, 0, 0,
	0, 0, 0, 1112, 0, 0, 0, 0, 0, 3014,
	67, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 0, 3168, 3168, 1522, 1523,
	1524, 1525, 0, 0, 225, 0, 2461, 0, 1505, 0,
	0, 0, 0, 0, 0, 3228, 1045, 229, 0, 0,
	849, 0, 0, 0, 0, 0, 0, 0, 76, 0,
	3240, 0, 0, 0, 0, 0, 225, 225, 225, 0,
	1562, 0, 0, 0, 0, 225, 1527, 1529, 0, 0,
	3667, 0, 0, 3670, 0, 0, 0, 1568, 225, 0,
	0, 1574, 81, 0, 0, 0, 0, 1112, 0, 0,
	1514, 1515, 3168, 225, 92, 0, 1112, 0, 0, 82,
	89, 0, 0, 0, 0, 628, 0, 0, 1112, 3282,
	0, 0, 0, 0, 1112, 0, 0, 1520, 0, 0,
	0, 0, 0, 0, 0, 628, 225, 0, 0, 1112,
	225, 0, 0, 0, 0, 0, 0, 0, 3168, 0,
	1112, 3168, 0, 0, 0, 1662, 0, 1041, 83, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 1662, 223, 0,
	0, 0, 0, 635, 0, 225, 225, 0, 635, 0,
	0, 0, 0, 0, 2041, 0, 0, 0, 0, 0,
	0, 0, 1112, 1112, 0, 0, 0, 0, 0, 1660,
	225, 1663, 0, 94, 0, 0, 0, 1526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 873, 0, 0,
	0, 0, 0, 0, 0, 0, 1521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1112, 0, 225, 1112, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 3802, 3802, 3802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 3823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 87, 0, 88, 0, 3402, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2461, 1112, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 3802, 720, 0, 0, 1112, 126, 0, 0, 0,
	0, 0, 0, 1517, 1513, 635, 1510, 1508, 1509, 1501,
	1502, 1503, 1504, 1506, 1507, 0, 2461, 0, 0, 0,
	0, 0, 195, 3462, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3168, 0, 3168, 0,
	0, 0, 0, 0, 0, 128, 0, 0, 0, 223,
	0, 0, 0, 223, 0, 0, 0, 0, 223, 163,
	0, 0, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 187, 223, 0,
	223, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	3802, 3922, 0, 0, 0, 0, 0, 0, 3926, 0,
	0, 0, 0, 0, 0, 0, 0, 1361, 0, 0,
	0, 0, 0, 0, 1045, 0, 0, 223, 1045, 0,
	0, 1045, 0, 0, 0, 1112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 223, 0,
	0, 3540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1045, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 635, 223, 0,
	223, 868, 223, 868, 223, 0, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1045, 0, 0, 0, 1045, 0,
	225, 0, 1045, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 1045, 0, 0, 0, 0, 1112, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 1112, 0, 1045, 3645, 1211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1112, 1112, 1112, 0, 0,
	0, 1109, 0, 0, 0, 1109, 0, 0, 1226, 849,
	0, 1112, 849, 849, 0, 0, 225, 1112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1226, 0, 0, 0, 1497, 1498, 2108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3711,
	0, 0, 0, 868, 0, 0, 0, 1528, 0, 0,
	0, 0, 0, 1568, 1500, 0, 0, 1568, 0, 0,
	0, 1226, 0, 0, 0, 1226, 0, 0, 0, 1226,
	0, 0, 0, 0, 0, 1041, 0, 0, 0, 1226,
	0, 0, 0, 0, 1499, 0, 0, 0, 0, 0,
	0, 1041, 0, 0, 1519, 0, 0, 0, 0, 0,
	0, 0, 1516, 0, 0, 223, 0, 0, 0, 0,
	3754, 0, 0, 0, 0, 0, 0, 0, 0, 1112,
	0, 1112, 1226, 0, 0, 0, 0, 3772, 0, 1028,
	0, 0, 0, 0, 0, 0, 0, 0, 1112, 0,
	0, 0, 0, 0, 3784, 1663, 2613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 1523, 1524, 1525, 0,
	0, 0, 0, 225, 0, 1505, 94, 0, 0, 0,
	1045, 0, 1045, 1112, 225, 225, 0, 0, 1112, 0,
	0, 0, 0, 0, 0, 0, 0, 1045, 225, 0,
	0, 0, 0, 0, 1112, 0, 0, 0, 0, 0,
	0, 0, 1716, 1527, 1529, 0, 223, 0, 0, 0,
	0, 0, 0, 225, 0, 1045, 0, 223, 0, 1112,
	225, 0, 0, 0, 1112, 0, 0, 1514, 1515, 0,
	223, 0, 0, 0, 0, 0, 1045, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1520, 0, 0, 0, 0, 0,
	635, 0, 0, 94, 0, 1112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 925, 0, 223, 0, 0, 0,
	0, 0, 94, 223, 0, 1112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 94,
	223, 94, 0, 223, 0, 223, 0, 223, 0, 0,
	0, 0, 0, 0, 223, 223, 1112, 0, 0, 0,
	0, 0, 0, 0, 1526, 0, 0, 0, 0, 1112,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 94,
	0, 223, 94, 1521, 0, 0, 0, 0, 0, 1045,
	0, 0, 0, 0, 0, 0, 1045, 223, 0, 223,
	0, 0, 0, 0, 1109, 0, 0, 0, 0, 0,
	0, 0, 94, 0, 0, 628, 0, 1112, 0, 0,
	628, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1226, 223, 223, 223, 223, 0, 223, 0,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1109, 0, 0, 0, 0, 0, 0,
	0, 1112, 0, 0, 1112, 0, 0, 0, 0, 0,
	0, 223, 94, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 225, 0, 0, 0, 0, 0,
	1517, 1513, 0, 1510, 1508, 1509, 1501, 1502, 1503, 1504,
	1506, 1507, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1045, 0, 1045, 0, 1045, 0, 0, 0,
	0, 0, 0, 0, 0, 1045, 1045, 0, 0, 1045,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1045, 1045, 1045, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 2108,
	0, 1112, 0, 0, 0, 0, 1226, 0, 0, 0,
	0, 0, 0, 1109, 0, 0, 0, 0, 0, 0,
	1568, 0, 0, 0, 0, 0, 225, 0, 0, 1112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1112,
	1112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1112, 0, 0, 0,
	0, 0, 0, 1497, 1498, 0, 0, 0, 0, 1540,
	1541, 1542, 0, 0, 0, 0, 0, 0, 1716, 1716,
	1045, 0, 0, 0, 0, 1528, 0, 0, 0, 0,
	0, 0, 1500, 0, 0, 0, 0, 225, 0, 1546,
	0, 0, 0, 0, 0, 1041, 0, 1497, 1498, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	1041, 0, 1499, 0, 0, 0, 0, 0, 0, 1528,
	0, 225, 1519, 0, 0, 0, 1500, 0, 0, 1226,
	1516, 1226, 0, 1226, 0, 0, 0, 0, 0, 0,
	1662, 0, 1226, 1226, 0, 0, 1226, 0, 0, 1028,
	0, 0, 0, 0, 0, 0, 1499, 0, 1045, 1226,
	1226, 1226, 0, 0, 1028, 0, 1519, 0, 0, 0,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 1522, 1523, 1524, 1525, 0, 0, 0,
	0, 0, 0, 1505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2606, 0,
	1045, 0, 0, 0, 223, 223, 223, 1045, 0, 0,
	0, 0, 1537, 1662, 0, 1547, 1045, 1522, 1523, 1524,
	1525, 1527, 1529, 0, 0, 0, 223, 1505, 0, 0,
	0, 0, 0, 1045, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 1514, 1515, 1109, 0, 0,
	0, 94, 94, 0, 0, 94, 0, 0, 0, 0,
	0, 1535, 0, 0, 0, 1527, 1529, 0, 0, 0,
	0, 0, 1520, 0, 223, 0, 0, 0, 223, 0,
	0, 0, 0, 94, 94, 706, 0, 94, 0, 1514,
	1515, 0, 0, 0, 0, 0, 0, 0, 1045, 0,
	0, 0, 1041, 0, 0, 0, 0, 0, 1110, 689,
	0, 0, 1110, 0, 0, 1227, 1520, 0, 0, 0,
	0, 0, 0, 223, 223, 0, 0, 0, 1045, 0,
	0, 0, 0, 0, 0, 1109, 0, 0, 0, 0,
	0, 0, 0, 690, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 691, 1716, 1028, 0, 0, 868,
	0, 0, 1526, 0, 0, 0, 0, 0, 1227, 0,
	0, 0, 692, 0, 0, 0, 0, 0, 0, 0,
	1045, 1521, 0, 0, 0, 0, 94, 94, 0, 711,
	0, 0, 1045, 0, 223, 0, 223, 0, 0, 0,
	0, 0, 0, 1538, 1109, 0, 1526, 693, 1227, 0,
	0, 0, 1227, 0, 1497, 1498, 1227, 1530, 1531, 1532,
	1540, 1541, 1542, 0, 0, 1521, 1227, 0, 694, 223,
	1109, 0, 0, 0, 0, 1533, 1528, 0, 0, 0,
	0, 0, 0, 1500, 0, 0, 0, 0, 695, 0,
	1546, 696, 0, 0, 0, 0, 0, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 0, 1227,
	0, 1045, 1045, 1499, 1045, 0, 0, 0, 0, 0,
	0, 0, 0, 1519, 710, 0, 1045, 0, 0, 0,
	1536, 1516, 0, 0, 0, 1226, 0, 1539, 1517, 1513,
	0, 1510, 1508, 1509, 1501, 1502, 1503, 1504, 1506, 1507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1517, 1513, 0, 1510, 1508, 1509, 1501, 1502,
	1503, 1504, 1506, 1507, 1522, 1523, 1524, 1525, 0, 0,
	0, 0, 0, 0, 1505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1109, 0, 0,
	1041, 1041, 0, 0, 0, 698, 0, 0, 0, 1226,
	0, 0, 0, 1537, 0, 0, 1547, 0, 0, 0,
	0, 0, 1527, 1529, 0, 714, 0, 699, 0, 0,
	0, 0, 0, 0, 0, 0, 94, 1543, 0, 1544,
	0, 0, 0, 0, 0, 0, 1514, 1515, 0, 0,
	0, 0, 0, 0, 1028, 1028, 621, 0, 0, 0,
	0, 0, 1535, 700, 0, 0, 701, 0, 0, 0,
	0, 0, 708, 1520, 0, 702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1226, 1226,
	0, 1226, 0, 0, 0, 0, 0, 1545, 0, 0,
	0, 0, 0, 1226, 0, 0, 0, 0, 703, 709,
	0, 0, 0, 0, 1534, 0, 704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 705,
	0, 0, 0, 0, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 623, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 707, 0,
	223, 1110, 0, 1526, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 1521, 0, 0, 0, 0, 0, 0, 1227,
	0, 0, 0, 0, 0, 0, 1041, 0, 0, 0,
	0, 0, 0, 0, 1538, 0, 0, 0, 0, 0,
	1110, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1045, 1045, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 1045, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1028, 0, 0, 1045, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1045, 0, 0, 1045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1716, 0, 0, 94, 1045, 0, 0, 0,
	0, 1536, 0, 0, 0, 1511, 1512, 1518, 1539, 1517,
	1513, 0, 1510, 1508, 1509, 1501, 1502, 1503, 1504, 1506,
	1507, 0, 0, 0, 0, 0, 0, 0, 0, 3325,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1227, 0, 0, 0, 0, 0, 0,
	1110, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1041, 0, 0, 0, 0,
	0, 0, 0, 1041, 0, 0, 0, 0, 0, 0,
	1045, 0, 0, 0, 0, 0, 1662, 0, 0, 1045,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1045, 0, 0, 0, 0, 0, 1045, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 0, 1109, 1028,
	0, 0, 1045, 0, 0, 0, 0, 1028, 0, 0,
	0, 223, 0, 1045, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 223, 0, 0, 0, 1045, 0, 0,
	1109, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 1109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1227, 0, 1227, 0,
	1227, 223, 0, 1109, 0, 1045, 1045, 0, 223, 1227,
	1227, 0, 0, 1227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1227, 1227, 1227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 94, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 94, 0, 0, 1045, 0, 0,
	1045, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 94, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1109, 0, 0,
	0, 0, 0, 0, 0, 0, 1226, 0, 0, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 1226, 0,
	0, 0, 0, 0, 1109, 0, 0, 0, 0, 0,
	0, 1045, 0, 0, 1110, 0, 0, 0, 0, 1226,
	0, 0, 0, 0, 0, 0, 223, 0, 1045, 0,
	1226, 0, 0, 0, 0, 0, 0, 0, 1716, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1716, 1716, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1226, 1226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1716, 0,
	0, 0, 1110, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1045, 1045, 0, 0, 0,
	0, 0, 0, 0, 1109, 0, 0, 1109, 0, 0,
	0, 223, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1110, 0, 0, 0, 0, 2108, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1110, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1109, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	0, 0, 1227, 0, 0, 0, 0, 0, 0, 0,
	1045, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1716, 0, 0, 94, 0, 0, 0, 0, 0,
	0, 0, 1110, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1045, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1045, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1045, 1045,
	1045, 0, 223, 0, 1110, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1045, 1109, 1227, 0, 0, 223,
	1045, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1045, 0, 0, 0, 0, 0, 0, 769,
	0, 806, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 94, 0, 0, 94,
	0, 0, 0, 0, 776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	788, 774, 0, 0, 0, 1227, 1227, 0, 1227, 0,
	1497, 1498, 0, 1530, 1531, 1532, 1540, 1541, 1542, 0,
	1227, 0, 0, 0, 0, 775, 0, 0, 0, 0,
	778, 1533, 1528, 0, 0, 812, 0, 1226, 0, 1500,
	0, 0, 0, 785, 786, 0, 1546, 0, 0, 799,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1045, 0, 0, 807, 780, 0, 0, 0, 1045, 1499,
	0, 0, 1045, 1226, 1045, 0, 0, 0, 0, 1519,
	0, 1045, 0, 0, 0, 0, 0, 1516, 0, 0,
	0, 1045, 0, 0, 0, 0, 805, 0, 0, 0,
	0, 0, 0, 0, 0, 1226, 1226, 1226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1226, 0, 0, 0, 0, 0, 1109, 0, 0,
	0, 0, 781, 0, 0, 0, 1045, 0, 0, 0,
	773, 1045, 0, 0, 0, 0, 0, 0, 0, 1109,
	1522, 1523, 1524, 1525, 0, 0, 0, 1045, 782, 783,
	1505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 790, 789, 0, 0, 0,
	0, 0, 1045, 784, 0, 0, 796, 1045, 0, 1537,
	0, 0, 1547, 0, 0, 0, 0, 0, 1527, 1529,
	811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1543, 0, 1544, 0, 0, 0, 0,
	808, 0, 1514, 1515, 0, 0, 0, 0, 1045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1520,
	0, 0, 0, 0, 0, 0, 0, 0, 1045, 0,
	0, 0, 0, 779, 0, 0, 0, 0, 0, 1109,
	0, 1109, 0, 1545, 0, 0, 0, 0, 0, 1716,
	777, 0, 0, 0, 803, 804, 0, 0, 1109, 0,
	1534, 0, 0, 0, 0, 0, 0, 0, 0, 1045,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 801, 1045, 0, 0, 0, 0, 0, 797, 0,
	0, 793, 0, 0, 0, 0, 0, 794, 0, 0,
	771, 0, 809, 1109, 0, 1110, 0, 1716, 1109, 1526,
	0, 0, 0, 0, 0, 0, 0, 0, 772, 0,
	0, 0, 0, 0, 1226, 0, 0, 0, 1521, 795,
	1045, 0, 0, 0, 792, 0, 0, 1110, 0, 0,
	0, 0, 0, 810, 0, 0, 0, 0, 0, 1109,
	1538, 798, 1110, 0, 1226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1110, 0, 800, 0, 1045, 0, 0, 1045, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 802, 1109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1109, 1716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1536, 0, 0,
	0, 1511, 1512, 1518, 1539, 1517, 1513, 0, 1510, 1508,
	1509, 1501, 1502, 1503, 1504, 1506, 1507, 0, 0, 0,
	0, 0, 0, 0, 1110, 3028, 1109, 0, 0, 0,
	0, 0, 0, 1227, 0, 0, 0, 0, 0, 1109,
	0, 0, 0, 0, 0, 1227, 0, 0, 0, 0,
	0, 1110, 0, 0, 1045, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 650, 0, 1227, 0, 1497, 1498,
	0, 1530, 1531, 1532, 1540, 1541, 1542, 1227, 0, 0,
	0, 0, 1045, 0, 0, 0, 0, 1109, 651, 1533,
	1528, 0, 1045, 1045, 0, 0, 0, 1500, 0, 0,
	0, 0, 0, 0, 1546, 0, 0, 0, 0, 1045,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 652, 0, 670, 0, 0, 1499, 0, 1227,
	1227, 1109, 0, 0, 1226, 0, 0, 1519, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 653, 0,
	0, 654, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 677, 0,
	0, 0, 0, 0, 655, 0, 0, 0, 0, 0,
	0, 1110, 0, 0, 1110, 0, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 1522, 1523,
	1524, 1525, 0, 0, 0, 0, 1497, 1498, 1505, 1530,
	1531, 1532, 1540, 1541, 1542, 0, 0, 657, 0, 0,
	658, 0, 0, 0, 0, 679, 0, 1533, 1528, 622,
	0, 0, 0, 0, 0, 1500, 0, 1537, 0, 0,
	1547, 1226, 1546, 0, 0, 1110, 1527, 1529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1543, 1110, 1544, 0, 1499, 0, 0, 0, 1226,
	1514, 1515, 0, 0, 0, 1519, 0, 0, 0, 1226,
	1226, 0, 0, 1516, 0, 0, 1535, 0, 0, 0,
	0, 0, 0, 0, 0, 678, 1226, 1520, 0, 0,
	0, 0, 0, 0, 661, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1545, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1534, 0,
	0, 0, 0, 659, 0, 0, 1522, 1523, 1524, 1525,
	0, 0, 0, 0, 662, 0, 1505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 663, 0, 0, 0,
	0, 0, 0, 0, 0, 1537, 0, 1526, 1547, 0,
	0, 0, 1110, 0, 1527, 1529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 621, 1521, 0, 0, 1543,
	0, 1544, 0, 0, 0, 671, 0, 0, 1514, 1515,
	0, 0, 0, 0, 664, 0, 0, 0, 1538, 0,
	0, 0, 0, 0, 1535, 0, 0, 0, 0, 0,
	0, 0, 0, 669, 0, 1520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 665, 0, 0,
	682, 0, 681, 0, 0, 666, 0, 0, 0, 1545,
	0, 0, 0, 0, 0, 0, 0, 0, 667, 0,
	0, 0, 0, 674, 0, 0, 1534, 0, 683, 0,
	680, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 0, 0, 0, 1227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1536, 0, 0, 0, 1511,
	1512, 1518, 1539, 1517, 1513, 0, 1510, 1508, 1509, 1501,
	1502, 1503, 1504, 1506, 1507, 1526, 0, 0, 0, 0,
	1227, 0, 0, 2674, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1521, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1227, 1227, 1227, 0, 1538, 0, 1497, 1498,
	0, 1530, 1531, 1532, 1540, 1541, 1542, 0, 1227, 0,
	0, 0, 0, 0, 1110, 0, 0, 0, 0, 1533,
	1528, 0, 0, 0, 0, 0, 0, 1500, 0, 0,
	0, 0, 0, 0, 1546, 0, 1110, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1519, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 1536, 0, 0, 0, 1511, 1512, 1518,
	1539, 1517, 1513, 0, 1510, 1508, 1509, 1501, 1502, 1503,
	1504, 1506, 1507, 0, 0, 0, 0, 0, 0, 0,
	0, 2673, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 1523,
	1524, 1525, 0, 0, 0, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 0, 0, 1110, 0, 1110, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1110, 0, 1537, 0, 0,
	1547, 0, 0, 0, 0, 0, 1527, 1529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1543, 0, 1544, 0, 0, 0, 0, 0, 0,
	1514, 1515, 0, 0, 0, 0, 0, 0, 0, 0,
	1110, 0, 0, 0, 0, 1110, 1535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1520, 0, 0,
	0, 1227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1545, 0, 0, 0, 0, 1110, 0, 0, 0,
	0, 1227, 0, 0, 0, 0, 0, 0, 1534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1110, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1110, 0, 0, 0, 1521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1110, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1110, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1110, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1536, 0, 0, 0, 1511,
	1512, 1518, 1539, 1517, 1513, 0, 1510, 1508, 1509, 1501,
	1502, 1503, 1504, 1506, 1507, 0, 0, 0, 0, 0,
	0, 0, 0, 2670, 0, 0, 0, 0, 1110, 0,
	0, 1227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1107, 0, 1227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1227, 1227, 0, 0,
	0, 233, 234, 235, 236, 237, 238, 1113, 239, 240,
	1114, 1115, 1116, 1227, 1117, 495, 1118, 1119, 1120, 1121,
	241, 242, 244, 243, 245, 246, 247, 496, 497, 0,
	498, 248, 499, 1122, 249, 250, 251, 252, 253, 1123,
	1124, 0, 254, 500, 501, 502, 1125, 255, 256, 503,
	1126, 1193, 1127, 257, 258, 259, 260, 261, 262, 263,
	0, 1128, 265, 266, 267, 264, 1129, 268, 0, 269,
	270, 271, 1130, 272, 986, 273, 274, 1131, 1132, 1134,
	1133, 1135, 1136, 1137, 275, 276, 277, 278, 0, 279,
	504, 505, 1138, 283, 280, 281, 1139, 284, 282, 1140,
	285, 286, 1141, 1142, 287, 288, 289, 1143, 290, 291,
	1144, 292, 293, 1145, 294, 295, 506, 296, 297, 299,
	301, 298, 302, 303, 304, 305, 507, 508, 1146, 230,
	1147, 0, 0, 0, 0, 306, 307, 308, 509, 0,
	0, 0, 309, 1148, 310, 1149, 1150, 987, 311, 312,
	510, 511, 313, 314, 1151, 315, 512, 1152, 513, 316,
	1153, 317, 318, 319, 320, 321, 514, 515, 516, 374,
	989, 322, 323, 1154, 324, 325, 326, 327, 0, 0,
	0, 231, 328, 329, 331, 1155, 988, 330, 517, 518,
	1156, 519, 1157, 332, 990, 520, 991, 333, 334, 335,
	992, 336, 0, 0, 0, 337, 338, 339, 340, 341,
	1158, 343, 342, 1159, 344, 521, 993, 345, 346, 994,
	1160, 347, 348, 349, 1161, 1162, 350, 351, 352, 353,
	0, 354, 355, 357, 359, 356, 358, 363, 360, 361,
	362, 365, 0, 364, 995, 366, 367, 370, 371, 369,
	996, 368, 1163, 232, 997, 372, 1164, 522, 373, 523,
	375, 376, 1165, 0, 377, 0, 1166, 1167, 379, 380,
	381, 1168, 1169, 382, 383, 524, 998, 384, 999, 525,
	385, 386, 378, 387, 388, 389, 390, 391, 392, 393,
	1170, 394, 395, 526, 527, 528, 396, 529, 397, 398,
	1171, 399, 0, 400, 401, 402, 403, 404, 405, 406,
	530, 407, 408, 1172, 0, 0, 0, 0, 0, 409,
	0, 411, 412, 413, 410, 414, 415, 416, 417, 1173,
	418, 419, 1000, 420, 421, 422, 423, 531, 424, 0,
	425, 429, 430, 431, 432, 433, 434, 435, 1174, 437,
	438, 436, 439, 440, 441, 1175, 442, 426, 427, 443,
	444, 1001, 445, 446, 532, 0, 447, 1176, 448, 449,
	450, 451, 428, 452, 457, 533, 453, 454, 455, 456,
	534, 1177, 459, 460, 0, 458, 1178, 461, 462, 463,
	464, 465, 300, 466, 1179, 467, 535, 536, 537, 538,
	1180, 474, 1181, 468, 469, 539, 470, 540, 1182, 471,
	472, 473, 0, 475, 476, 1183, 1184, 477, 478, 479,
	481, 482, 480, 483, 1185, 484, 1186, 0, 485, 486,
	487, 541, 542, 543, 1187, 489, 488, 544, 1188, 1189,
	1190, 1191, 490, 491, 545, 492, 493, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1107, 0, 0, 0, 0, 0, 0, 0, 2271,
	0, 0, 0, 0, 0, 0, 0, 2272, 233, 234,
	235, 236, 237, 238, 1113, 239, 240, 1114, 1115, 1116,
	0, 1117, 495, 1118, 1119, 1120, 1121, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	1122, 249, 250, 251, 252, 253, 1123, 1124, 0, 254,
	500, 501, 502, 1125, 255, 256, 503, 1126, 1193, 1127,
	257, 258, 259, 260, 261, 262, 263, 0, 1128, 265,
	266, 267, 264, 1129, 268, 0, 269, 270, 271, 1130,
	272, 986, 273, 274, 1131, 1132, 1134, 1133, 1135, 1136,
	1137, 275, 276, 277, 278, 0, 279, 504, 505, 1138,
	283, 280, 281, 1139, 284, 282, 1140, 285, 286, 1141,
	1142, 287, 288, 289, 1143, 290, 291, 1144, 292, 293,
	1145, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 1146, 230, 1147, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	1148, 310, 1149, 1150, 987, 311, 312, 510, 511, 313,
	314, 1151, 315, 512, 1152, 513, 316, 1153, 317, 318,
	319, 320, 321, 514, 515, 516, 374, 989, 322, 323,
	1154, 324, 325, 326, 327, 0, 0, 0, 231, 328,
	329, 331, 1155, 988, 330, 517, 518, 1156, 519, 1157,
	332, 990, 520, 991, 333, 334, 335, 992, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 1158, 343, 342,
	1159, 344, 521, 993, 345, 346, 994, 1160, 347, 348,
	349, 1161, 1162, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 995, 366, 367, 370, 371, 369, 996, 368, 1163,
	232, 997, 372, 1164, 522, 373, 523, 375, 376, 1165,
	0, 377, 0, 1166, 1167, 379, 380, 381, 1168, 1169,
	382, 383, 524, 998, 384, 999, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 1170, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 1171, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	1172, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 1173, 418, 419, 1000,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 1174, 437, 438, 436, 439,
	440, 441, 1175, 442, 426, 427, 443, 444, 1001, 445,
	446, 532, 0, 447, 1176, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 1177, 459,
	460, 0, 458, 1178, 461, 462, 463, 464, 465, 300,
	466, 1179, 467, 535, 536, 537, 538, 1180, 474, 1181,
	468, 469, 539, 470, 540, 1182, 471, 472, 473, 0,
	475, 476, 1183, 1184, 477, 478, 479, 481, 482, 480,
	483, 1185, 484, 1186, 0, 485, 486, 487, 541, 542,
	543, 1187, 489, 488, 544, 1188, 1189, 1190, 1191, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1107, 0, 0, 0,
	0, 3036, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3038, 233, 234, 235, 236, 237, 238, 1113,
	239, 240, 1114, 1115, 1116, 0, 1117, 495, 1118, 1119,
	1120, 1121, 241, 242, 244, 243, 245, 246, 247, 496,
	497, 0, 498, 248, 499, 1122, 249, 250, 251, 252,
	253, 1123, 1124, 0, 254, 500, 501, 502, 1125, 255,
	256, 503, 1126, 1193, 1127, 257, 258, 259, 260, 261,
	262, 263, 0, 1128, 265, 266, 267, 264, 1129, 268,
	0, 269, 270, 271, 1130, 272, 986, 273, 274, 1131,
	1132, 1134, 1133, 1135, 1136, 1137, 275, 276, 277, 278,
	0, 279, 504, 505, 1138, 283, 280, 281, 1139, 284,
	282, 1140, 285, 286, 1141, 1142, 287, 288, 289, 1143,
	290, 291, 1144, 292, 293, 1145, 294, 295, 506, 296,
	297, 299, 301, 298, 302, 303, 304, 305, 507, 508,
	1146, 230, 1147, 0, 0, 0, 0, 306, 307, 308,
	509, 0, 0, 0, 309, 1148, 310, 1149, 1150, 987,
	311, 312, 510, 511, 313, 314, 1151, 315, 512, 1152,
	513, 316, 1153, 317, 318, 319, 320, 321, 514, 515,
	516, 374, 989, 322, 323, 1154, 324, 325, 326, 327,
	0, 0, 0, 231, 328, 329, 331, 1155, 988, 330,
	517, 518, 1156, 519, 1157, 332, 990, 520, 991, 333,
	334, 335, 992, 336, 0, 0, 0, 337, 338, 339,
	340, 341, 1158, 343, 342, 1159, 344, 521, 993, 345,
	346, 994, 1160, 347, 348, 349, 1161, 1162, 350, 351,
	352, 353, 0, 354, 355, 357, 359, 356, 358, 363,
	360, 361, 362, 365, 0, 364, 995, 366, 367, 370,
	371, 369, 996, 368, 1163, 232, 997, 372, 1164, 522,
	373, 523, 375, 376, 1165, 0, 377, 0, 1166, 1167,
	379, 380, 381, 1168, 1169, 382, 383, 524, 998, 384,
	999, 525, 385, 386, 378, 387, 388, 389, 390, 391,
	392, 393, 1170, 394, 395, 526, 527, 528, 396, 529,
	397, 398, 1171, 399, 0, 400, 401, 402, 403, 404,
	405, 406, 530, 407, 408, 1172, 0, 0, 0, 0,
	0, 409, 0, 411, 412, 413, 410, 414, 415, 416,
	417, 1173, 418, 419, 1000, 420, 421, 422, 423, 531,
	424, 0, 425, 429, 430, 431, 432, 433, 434, 435,
	1174, 437, 438, 436, 439, 440, 441, 1175, 442, 426,
	427, 443, 444, 1001, 445, 446, 532, 0, 447, 1176,
	448, 449, 450, 451, 428, 452, 457, 533, 453, 454,
	455, 456, 534, 1177, 459, 460, 0, 458, 1178, 461,
	462, 463, 464, 465, 300, 466, 1179, 467, 535, 536,
	537, 538, 1180, 474, 1181, 468, 469, 539, 470, 540,
	1182, 471, 472, 473, 0, 475, 476, 1183, 1184, 477,
	478, 479, 481, 482, 480, 483, 1185, 484, 1186, 0,
	485, 486, 487, 541, 542, 543, 1187, 489, 488, 544,
	1188, 1189, 1190, 1191, 490, 491, 545, 492, 493, 494,
	0, 0, 0, 0, 0, 1107, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3353, 233, 234, 235, 236, 237, 238, 1113, 239,
	240, 1114, 1115, 1116, 0, 1117, 495, 1118, 1119, 1120,
	1121, 241, 242, 244, 243, 245, 246, 247, 496, 497,
	0, 498, 248, 499, 1122, 249, 250, 251, 252, 253,
	1123, 1124, 0, 254, 500, 501, 502, 1125, 255, 256,
	503, 1126, 1193, 1127, 257, 258, 259, 260, 261, 262,
	263, 0, 1128, 265, 266, 267, 264, 1129, 268, 0,
	269, 270, 271, 1130, 272, 986, 273, 274, 1131, 1132,
	1134, 1133, 1135, 1136, 1137, 275, 276, 277, 278, 0,
	279, 504, 505, 1138, 283, 280, 281, 1139, 284, 282,
	1140, 285, 286, 1141, 1142, 287, 288, 289, 1143, 290,
	291, 1144, 292, 293, 1145, 294, 295, 506, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 507, 508, 1146,
	230, 1147, 0, 0, 0, 0, 306, 307, 308, 509,
	0, 0, 0, 309, 1148, 310, 1149, 1150, 987, 311,
	312, 510, 511, 313, 314, 1151, 315, 512, 1152, 513,
	316, 1153, 317, 318, 319, 320, 321, 514, 515, 516,
	374, 989, 322, 323, 1154, 324, 325, 326, 327, 0,
	0, 0, 231, 328, 329, 331, 1155, 988, 330, 517,
	518, 1156, 519, 1157, 332, 990, 520, 991, 333, 334,
	335, 992, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 1158, 343, 342, 1159, 344, 521, 993, 345, 346,
	994, 1160, 347, 348, 349, 1161, 1162, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 364, 995, 366, 367, 370, 371,
	369, 996, 368, 1163, 232, 997, 372, 1164, 522, 373,
	523, 375, 376, 1165, 0, 377, 0, 1166, 1167, 379,
	380, 381, 1168, 1169, 382, 383, 524, 998, 384, 999,
	525, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 1170, 394, 395, 526, 527, 528, 396, 529, 397,
	398, 1171, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 530, 407, 408, 1172, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	1173, 418, 419, 1000, 420, 421, 422, 423, 531, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 1174,
	437, 438, 436, 439, 440, 441, 1175, 442, 426, 427,
	443, 444, 1001, 445, 446, 532, 0, 447, 1176, 448,
	449, 450, 451, 428, 452, 457, 533, 453, 454, 455,
	456, 534, 1177, 459, 460, 0, 458, 1178, 461, 462,
	463, 464, 465, 300, 466, 1179, 467, 535, 536, 537,
	538, 1180, 474, 1181, 468, 469, 539, 470, 540, 1182,
	471, 472, 473, 0, 475, 476, 1183, 1184, 477, 478,
	479, 481, 482, 480, 483, 1185, 484, 1186, 0, 485,
	486, 487, 541, 542, 543, 1187, 489, 488, 544, 1188,
	1189, 1190, 1191, 490, 491, 545, 492, 493, 494, 1107,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3506, 233, 234, 235, 236,
	237, 238, 1113, 239, 240, 1114, 1115, 1116, 0, 1117,
	495, 1118, 1119, 1120, 1121, 241, 242, 244, 243, 245,
	246, 247, 496, 497, 0, 498, 248, 499, 1122, 249,
	250, 251, 252, 253, 1123, 1124, 0, 254, 500, 501,
	502, 1125, 255, 256, 503, 1126, 1193, 1127, 257, 258,
	259, 260, 261, 262, 263, 0, 1128, 265, 266, 267,
	264, 1129, 268, 0, 269, 270, 271, 1130, 272, 986,
	273, 274, 1131, 1132, 1134, 1133, 1135, 1136, 1137, 275,
	276, 277, 278, 0, 279, 504, 505, 1138, 283, 280,
	281, 1139, 284, 282, 1140, 285, 286, 1141, 1142, 287,
	288, 289, 1143, 290, 291, 1144, 292, 293, 1145, 294,
	295, 506, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 507, 508, 1146, 230, 1147, 0, 0, 0, 0,
	306, 307, 308, 509, 0, 0, 0, 309, 1148, 310,
	1149, 1150, 987, 311, 312, 510, 511, 313, 314, 1151,
	315, 512, 1152, 513, 316, 1153, 317, 318, 319, 320,
	321, 514, 515, 516, 374, 989, 322, 323, 1154, 324,
	325, 326, 327, 0, 0, 0, 231, 328, 329, 331,
	1155, 988, 330, 517, 518, 1156, 519, 1157, 332, 990,
	520, 991, 333, 334, 335, 992, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 1158, 343, 342, 1159, 344,
	521, 993, 345, 346, 994, 1160, 347, 348, 349, 1161,
	1162, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 995,
	366, 367, 370, 371, 369, 996, 368, 1163, 232, 997,
	372, 1164, 522, 373, 523, 375, 376, 1165, 0, 377,
	0, 1166, 1167, 379, 380, 381, 1168, 1169, 382, 383,
	524, 998, 384, 999, 525, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 1170, 394, 395, 526, 527,
	528, 396, 529, 397, 398, 1171, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 530, 407, 408, 1172, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 1173, 418, 419, 1000, 420, 421,
	422, 423, 531, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 1174, 437, 438, 436, 439, 440, 441,
	1175, 442, 426, 427, 443, 444, 1001, 445, 446, 532,
	0, 447, 1176, 448, 449, 450, 451, 428, 452, 457,
	533, 453, 454, 455, 456, 534, 1177, 459, 460, 0,
	458, 1178, 461, 462, 463, 464, 465, 300, 466, 1179,
	467, 535, 536, 537, 538, 1180, 474, 1181, 468, 469,
	539, 470, 540, 1182, 471, 472, 473, 0, 475, 476,
	1183, 1184, 477, 478, 479, 481, 482, 480, 483, 1185,
	484, 1186, 0, 485, 486, 487, 541, 542, 543, 1187,
	489, 488, 544, 1188, 1189, 1190, 1191, 490, 491, 545,
	492, 493, 494, 1107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3409,
	233, 234, 235, 236, 237, 238, 1113, 239, 240, 1114,
	1115, 1116, 0, 1117, 495, 1118, 1119, 1120, 1121, 241,
	242, 244, 243, 245, 246, 247, 496, 497, 0, 498,
	248, 499, 1122, 249, 250, 251, 252, 253, 1123, 1124,
	0, 254, 500, 501, 502, 1125, 255, 256, 503, 1126,
	1193, 1127, 257, 258, 259, 260, 261, 262, 263, 0,
	1128, 265, 266, 267, 264, 1129, 268, 0, 269, 270,
	271, 1130, 272, 986, 273, 274, 1131, 1132, 1134, 1133,
	1135, 1136, 1137, 275, 276, 277, 278, 0, 279, 504,
	505, 1138, 283, 280, 281, 1139, 284, 282, 1140, 285,
	286, 1141, 1142, 287, 288, 289, 1143, 290, 291, 1144,
	292, 293, 1145, 294, 295, 506, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 507, 508, 1146, 230, 1147,
	0, 0, 0, 0, 306, 307, 308, 509, 0, 0,
	0, 309, 1148, 310, 1149, 1150, 987, 311, 312, 510,
	511, 313, 314, 1151, 315, 512, 1152, 513, 316, 1153,
	317, 318, 319, 320, 321, 514, 515, 516, 374, 989,
	322, 323, 1154, 324, 325, 326, 327, 0, 0, 0,
	231, 328, 329, 331, 1155, 988, 330, 517, 518, 1156,
	519, 1157, 332, 990, 520, 991, 333, 334, 335, 992,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 1158,
	343, 342, 1159, 344, 521, 993, 345, 346, 994, 1160,
	347, 348, 349, 1161, 1162, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 995, 366, 367, 370, 371, 369, 996,
	368, 1163, 232, 997, 372, 1164, 522, 373, 523, 375,
	376, 1165, 0, 377, 0, 1166, 1167, 379, 380, 381,
	1168, 1169, 382, 383, 524, 998, 384, 999, 525, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 1170,
	394, 395, 526, 527, 528, 396, 529, 397, 398, 1171,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 530,
	407, 408, 1172, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 1173, 418,
	419, 1000, 420, 421, 422, 423, 531, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 1174, 437, 438,
	436, 439, 440, 441, 1175, 442, 426, 427, 443, 444,
	1001, 445, 446, 532, 0, 447, 1176, 448, 449, 450,
	451, 428, 452, 457, 533, 453, 454, 455, 456, 534,
	1177, 459, 460, 0, 458, 1178, 461, 462, 463, 464,
	465, 300, 466, 1179, 467, 535, 536, 537, 538, 1180,
	474, 1181, 468, 469, 539, 470, 540, 1182, 471, 472,
	473, 0, 475, 476, 1183, 1184, 477, 478, 479, 481,
	482, 480, 483, 1185, 484, 1186, 0, 485, 486, 487,
	541, 542, 543, 1187, 489, 488, 544, 1188, 1189, 1190,
	1191, 490, 491, 545, 492, 493, 494, 1107, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3283, 233, 234, 235, 236, 237, 238,
	1113, 239, 240, 1114, 1115, 1116, 0, 1117, 495, 1118,
	1119, 1120, 1121, 241, 242, 244, 243, 245, 246, 247,
	496, 497, 0, 498, 248, 499, 1122, 249, 250, 251,
	252, 253, 1123, 1124, 0, 254, 500, 501, 502, 1125,
	255, 256, 503, 1126, 1193, 1127, 257, 258, 259, 260,
	261, 262, 263, 0, 1128, 265, 266, 267, 264, 1129,
	268, 0, 269, 270, 271, 1130, 272, 986, 273, 274,
	1131, 1132, 1134, 1133, 1135, 1136, 1137, 275, 276, 277,
	278, 0, 279, 504, 505, 1138, 283, 280, 281, 1139,
	284, 282, 1140, 285, 286, 1141, 1142, 287, 288, 289,
	1143, 290, 291, 1144, 292, 293, 1145, 294, 295, 506,
	296, 297, 299, 301, 298, 302, 303, 304, 305, 507,
	508, 1146, 230, 1147, 0, 0, 0, 0, 306, 307,
	308, 509, 0, 0, 0, 309, 1148, 310, 1149, 1150,
	987, 311, 312, 510, 511, 313, 314, 1151, 315, 512,
	1152, 513, 316, 1153, 317, 318, 319, 320, 321, 514,
	515, 516, 374, 989, 322, 323, 1154, 324, 325, 326,
	327, 0, 0, 0, 231, 328, 329, 331, 1155, 988,
	330, 517, 518, 1156, 519, 1157, 332, 990, 520, 991,
	333, 334, 335, 992, 336, 0, 0, 0, 337, 338,
	339, 340, 341, 1158, 343, 342, 1159, 344, 521, 993,
	345, 346, 994, 1160, 347, 348, 349, 1161, 1162, 350,
	351, 352, 353, 0, 354, 355, 357, 359, 356, 358,
	363, 360, 361, 362, 365, 0, 364, 995, 366, 367,
	370, 371, 369, 996, 368, 1163, 232, 997, 372, 1164,
	522, 373, 523, 375, 376, 1165, 0, 377, 0, 1166,
	1167, 379, 380, 381, 1168, 1169, 382, 383, 524, 998,
	384, 999, 525, 385, 386, 378, 387, 388, 389, 390,
	391, 392, 393, 1170, 394, 395, 526, 527, 528, 396,
	529, 397, 398, 1171, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 530, 407, 408, 1172, 0, 0, 0,
	0, 0, 409, 0, 411, 412, 413, 410, 414, 415,
	416, 417, 1173, 418, 419, 1000, 420, 421, 422, 423,
	531, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 1174, 437, 438, 436, 439, 440, 441, 1175, 442,
	426, 427, 443, 444, 1001, 445, 446, 532, 0, 447,
	1176, 448, 449, 450, 451, 428, 452, 457, 533, 453,
	454, 455, 456, 534, 1177, 459, 460, 0, 458, 1178,
	461, 462, 463, 464, 465, 300, 466, 1179, 467, 535,
	536, 537, 538, 1180, 474, 1181, 468, 469, 539, 470,
	540, 1182, 471, 472, 473, 0, 475, 476, 1183, 1184,
	477, 478, 479, 481, 482, 480, 483, 1185, 484, 1186,
	0, 485, 486, 487, 541, 542, 543, 1187, 489, 488,
	544, 1188, 1189, 1190, 1191, 490, 491, 545, 492, 493,
	494, 1107, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3054, 233, 234,
	235, 236, 237, 238, 1113, 239, 240, 1114, 1115, 1116,
	0, 1117, 495, 1118, 1119, 1120, 1121, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	1122, 249, 250, 251, 252, 253, 1123, 1124, 0, 254,
	500, 501, 502, 1125, 255, 256, 503, 1126, 1193, 1127,
	257, 258, 259, 260, 261, 262, 263, 0, 1128, 265,
	266, 267, 264, 1129, 268, 0, 269, 270, 271, 1130,
	272, 986, 273, 274, 1131, 1132, 1134, 1133, 1135, 1136,
	1137, 275, 276, 277, 278, 0, 279, 504, 505, 1138,
	283, 280, 281, 1139, 284, 282, 1140, 285, 286, 1141,
	1142, 287, 288, 289, 1143, 290, 291, 1144, 292, 293,
	1145, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 1146, 230, 1147, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	1148, 310, 1149, 1150, 987, 311, 312, 510, 511, 313,
	314, 1151, 315, 512, 1152, 513, 316, 1153, 317, 318,
	319, 320, 321, 514, 515, 516, 374, 989, 322, 323,
	1154, 324, 325, 326, 327, 0, 0, 0, 231, 328,
	329, 331, 1155, 988, 330, 517, 518, 1156, 519, 1157,
	332, 990, 520, 991, 333, 334, 335, 992, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 1158, 343, 342,
	1159, 344, 521, 993, 345, 346, 994, 1160, 347, 348,
	349, 1161, 1162, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 995, 366, 367, 370, 371, 369, 996, 368, 1163,
	232, 997, 372, 1164, 522, 373, 523, 375, 376, 1165,
	0, 377, 0, 1166, 1167, 379, 380, 381, 1168, 1169,
	382, 383, 524, 998, 384, 999, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 1170, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 1171, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	1172, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 1173, 418, 419, 1000,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 1174, 437, 438, 436, 439,
	440, 441, 1175, 442, 426, 427, 443, 444, 1001, 445,
	446, 532, 0, 447, 1176, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 1177, 459,
	460, 0, 458, 1178, 461, 462, 463, 464, 465, 300,
	466, 1179, 467, 535, 536, 537, 538, 1180, 474, 1181,
	468, 469, 539, 470, 540, 1182, 471, 472, 473, 0,
	475, 476, 1183, 1184, 477, 478, 479, 481, 482, 480,
	483, 1185, 484, 1186, 0, 485, 486, 487, 541, 542,
	543, 1187, 489, 488, 544, 1188, 1189, 1190, 1191, 490,
	491, 545, 492, 493, 494, 1107, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2903, 233, 234, 235, 236, 237, 238, 1113, 239,
	240, 1114, 1115, 1116, 0, 1117, 495, 1118, 1119, 1120,
	1121, 241, 242, 244, 243, 245, 246, 247, 496, 497,
	0, 498, 248, 499, 1122, 249, 250, 251, 252, 253,
	1123, 1124, 0, 254, 500, 501, 502, 1125, 255, 256,
	503, 1126, 1193, 1127, 257, 258, 259, 260, 261, 262,
	263, 0, 1128, 265, 266, 267, 264, 1129, 268, 0,
	269, 270, 271, 1130, 272, 986, 273, 274, 1131, 1132,
	1134, 1133, 1135, 1136, 1137, 275, 276, 277, 278, 0,
	279, 504, 505, 1138, 283, 280, 281, 1139, 284, 282,
	1140, 285, 286, 1141, 1142, 287, 288, 289, 1143, 290,
	291, 1144, 292, 293, 1145, 294, 295, 506, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 507, 508, 1146,
	230, 1147, 0, 0, 0, 0, 306, 307, 308, 509,
	0, 0, 0, 309, 1148, 310, 1149, 1150, 987, 311,
	312, 510, 511, 313, 314, 1151, 315, 512, 1152, 513,
	316, 1153, 317, 318, 319, 320, 321, 514, 515, 516,
	374, 989, 322, 323, 1154, 324, 325, 326, 327, 0,
	0, 0, 231, 328, 329, 331, 1155, 988, 330, 517,
	518, 1156, 519, 1157, 332, 990, 520, 991, 333, 334,
	335, 992, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 1158, 343, 342, 1159, 344, 521, 993, 345, 346,
	994, 1160, 347, 348, 349, 1161, 1162, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 364, 995, 366, 367, 370, 371,
	369, 996, 368, 1163, 232, 997, 372, 1164, 522, 373,
	523, 375, 376, 1165, 0, 377, 0, 1166, 1167, 379,
	380, 381, 1168, 1169, 382, 383, 524, 998, 384, 999,
	525, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 1170, 394, 395, 526, 527, 528, 396, 529, 397,
	398, 1171, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 530, 407, 408, 1172, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	1173, 418, 419, 1000, 420, 421, 422, 423, 531, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 1174,
	437, 438, 436, 439, 440, 441, 1175, 442, 426, 427,
	443, 444, 1001, 445, 446, 532, 0, 447, 1176, 448,
	449, 450, 451, 428, 452, 457, 533, 453, 454, 455,
	456, 534, 1177, 459, 460, 0, 458, 1178, 461, 462,
	463, 464, 465, 300, 466, 1179, 467, 535, 536, 537,
	538, 1180, 474, 1181, 468, 469, 539, 470, 540, 1182,
	471, 472, 473, 0, 475, 476, 1183, 1184, 477, 478,
	479, 481, 482, 480, 483, 1185, 484, 1186, 0, 485,
	486, 487, 541, 542, 543, 1187, 489, 488, 544, 1188,
	1189, 1190, 1191, 490, 491, 545, 492, 493, 494, 1107,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2154, 233, 234, 235, 236,
	237, 238, 1113, 239, 240, 1114, 1115, 1116, 0, 1117,
	495, 1118, 1119, 1120, 1121, 241, 242, 244, 243, 245,
	246, 247, 496, 497, 0, 498, 248, 499, 1122, 249,
	250, 251, 252, 253, 1123, 1124, 0, 254, 500, 501,
	502, 1125, 255, 256, 503, 1126, 1193, 1127, 257, 258,
	259, 260, 261, 262, 263, 0, 1128, 265, 266, 267,
	264, 1129, 268, 0, 269, 270, 271, 1130, 272, 986,
	273, 274, 1131, 1132, 1134, 1133, 1135, 1136, 1137, 275,
	276, 277, 278, 0, 279, 504, 505, 1138, 283, 280,
	281, 1139, 284, 282, 1140, 285, 286, 1141, 1142, 287,
	288, 289, 1143, 290, 291, 1144, 292, 293, 1145, 294,
	295, 506, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 507, 508, 1146, 230, 1147, 0, 0, 0, 0,
	306, 307, 308, 509, 0, 0, 0, 309, 1148, 310,
	1149, 1150, 987, 311, 312, 510, 511, 313, 314, 1151,
	315, 512, 1152, 513, 316, 1153, 317, 318, 319, 320,
	321, 514, 515, 516, 374, 989, 322, 323, 1154, 324,
	325, 326, 327, 0, 0, 0, 231, 328, 329, 331,
	1155, 988, 330, 517, 518, 1156, 519, 1157, 332, 990,
	520, 991, 333, 334, 335, 992, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 1158, 343, 342, 1159, 344,
	521, 993, 345, 346, 994, 1160, 347, 348, 349, 1161,
	1162, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 995,
	366, 367, 370, 371, 369, 996, 368, 1163, 232, 997,
	372, 1164, 522, 373, 523, 375, 376, 1165, 0, 377,
	0, 1166, 1167, 379, 380, 381, 1168, 1169, 382, 383,
	524, 998, 384, 999, 525, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 1170, 394, 395, 526, 527,
	528, 396, 529, 397, 398, 1171, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 530, 407, 408, 1172, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 1173, 418, 419, 1000, 420, 421,
	422, 423, 531, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 1174, 437, 438, 436, 439, 440, 441,
	1175, 442, 426, 427, 443, 444, 1001, 445, 446, 532,
	0, 447, 1176, 448, 449, 450, 451, 428, 452, 457,
	533, 453, 454, 455, 456, 534, 1177, 459, 460, 0,
	458, 1178, 461, 462, 463, 464, 465, 300, 466, 1179,
	467, 535, 536, 537, 538, 1180, 474, 1181, 468, 469,
	539, 470, 540, 1182, 471, 472, 473, 0, 475, 476,
	1183, 1184, 477, 478, 479, 481, 482, 480, 483, 1185,
	484, 1186, 0, 485, 486, 487, 541, 542, 543, 1187,
	489, 488, 544, 1188, 1189, 1190, 1191, 490, 491, 545,
	492, 493, 494, 1205, 0, 1107, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1847,
	0, 0, 233, 234, 235, 236, 237, 238, 1113, 239,
	240, 1114, 1115, 1116, 0, 1117, 495, 1118, 1119, 1120,
	1121, 241, 242, 244, 243, 245, 246, 247, 496, 497,
	0, 498, 248, 499, 1122, 249, 250, 251, 252, 253,
	1123, 1124, 0, 254, 500, 501, 502, 1125, 255, 256,
	503, 1126, 1193, 1127, 257, 258, 259, 260, 261, 262,
	263, 0, 1128, 265, 266, 267, 264, 1129, 268, 0,
	269, 270, 271, 1130, 272, 986, 273, 274, 1131, 1132,
	1134, 1133, 1135, 1136, 1137, 275, 276, 277, 278, 0,
	279, 504, 505, 1138, 283, 280, 281, 1139, 284, 282,
	1140, 285, 286, 1141, 1142, 287, 288, 289, 1143, 290,
	291, 1144, 292, 293, 1145, 294, 295, 506, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 507, 508, 1146,
	230, 1147, 0, 0, 0, 0, 306, 307, 308, 509,
	0, 0, 0, 309, 1148, 310, 1149, 1150, 987, 311,
	312, 510, 511, 313, 314, 1151, 315, 512, 1152, 513,
	316, 1153, 317, 318, 319, 320, 321, 514, 515, 516,
	374, 989, 322, 323, 1154, 324, 325, 326, 327, 0,
	0, 0, 231, 328, 329, 331, 1155, 988, 330, 517,
	518, 1156, 519, 1157, 332, 990, 520, 991, 333, 334,
	335, 992, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 1158, 343, 342, 1159, 344, 521, 993, 345, 346,
	994, 1160, 347, 348, 349, 1161, 1162, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 364, 995, 366, 367, 370, 371,
	369, 996, 368, 1163, 232, 997, 372, 1164, 522, 373,
	523, 375, 376, 1165, 0, 377, 0, 1166, 1167, 379,
	380, 381, 1168, 1169, 382, 383, 524, 998, 384, 999,
	525, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 1170, 394, 395, 526, 527, 528, 396, 529, 397,
	398, 1171, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 530, 407, 408, 1172, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	1173, 418, 419, 1000, 420, 421, 422, 423, 531, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 1174,
	437, 438, 436, 439, 440, 441, 1175, 442, 426, 427,
	443, 444, 1001, 445, 446, 532, 0, 447, 1176, 448,
	449, 450, 451, 428, 452, 457, 533, 453, 454, 455,
	456, 534, 1177, 459, 460, 0, 458, 1178, 461, 462,
	463, 464, 465, 300, 466, 1179, 467, 535, 536, 537,
	538, 1180, 474, 1181, 468, 469, 539, 470, 540, 1182,
	471, 472, 473, 0, 475, 476, 1183, 1184, 477, 478,
	479, 481, 482, 480, 483, 1185, 484, 1186, 0, 485,
	486, 487, 541, 542, 543, 1187, 489, 488, 544, 1188,
	1189, 1190, 1191, 490, 491, 545, 492, 493, 494, 1104,
	0, 1107, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 1113, 239, 240, 1114, 1115, 1116,
	0, 1117, 495, 1118, 1119, 1120, 1121, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	1122, 249, 250, 251, 252, 253, 1123, 1124, 0, 254,
	500, 501, 502, 1125, 255, 256, 503, 1126, 1193, 1127,
	257, 258, 259, 260, 261, 262, 263, 0, 1128, 265,
	266, 267, 264, 1129, 268, 0, 269, 270, 271, 1130,
	272, 986, 273, 274, 1131, 1132, 1134, 1133, 1135, 1136,
	1137, 275, 276, 277, 278, 0, 279, 504, 505, 1138,
	283, 280, 281, 1139, 284, 282, 1140, 285, 286, 1141,
	1142, 287, 288, 289, 1143, 290, 291, 1144, 292, 293,
	1145, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 1146, 230, 1147, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	1148, 310, 1149, 1150, 987, 311, 312, 510, 511, 313,
	314, 1151, 315, 512, 1152, 513, 316, 1153, 317, 318,
	319, 320, 321, 514, 515, 516, 374, 989, 322, 323,
	1154, 324, 325, 326, 327, 0, 0, 0, 231, 328,
	329, 331, 1155, 988, 330, 517, 518, 1156, 519, 1157,
	332, 990, 520, 991, 333, 334, 335, 992, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 1158, 343, 342,
	1159, 344, 521, 993, 345, 346, 994, 1160, 347, 348,
	349, 1161, 1162, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 995, 366, 367, 370, 371, 369, 996, 368, 1163,
	232, 997, 372, 1164, 522, 373, 523, 375, 376, 1165,
	0, 377, 0, 1166, 1167, 379, 380, 381, 1168, 1169,
	382, 383, 524, 998, 384, 999, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 1170, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 1171, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	1172, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 1173, 418, 419, 1000,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 1174, 437, 438, 436, 439,
	440, 441, 1175, 442, 426, 427, 443, 444, 1001, 445,
	446, 532, 0, 447, 1176, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 1177, 459,
	460, 0, 458, 1178, 461, 462, 463, 464, 465, 300,
	466, 1179, 467, 535, 536, 537, 538, 1180, 474, 1181,
	468, 469, 539, 470, 540, 1182, 471, 472, 473, 0,
	475, 476, 1183, 1184, 477, 478, 479, 481, 482, 480,
	483, 1185, 484, 1186, 0, 485, 486, 487, 541, 542,
	543, 1187, 489, 488, 544, 1188, 1189, 1190, 1191, 490,
	491, 545, 492, 493, 494, 1107, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 234, 235, 236, 237, 238, 1113, 239,
	240, 1114, 1115, 1116, 0, 1117, 495, 1118, 1119, 1120,
	1121, 241, 242, 244, 243, 245, 246, 247, 496, 497,
	0, 498, 248, 499, 1122, 249, 250, 251, 252, 253,
	1123, 1124, 0, 254, 500, 501, 502, 1125, 255, 256,
	503, 1126, 1193, 1127, 257, 258, 259, 260, 261, 262,
	263, 0, 1128, 265, 266, 267, 264, 1129, 268, 0,
	269, 270, 271, 1130, 272, 986, 273, 274, 1131, 1132,
	1134, 1133, 1135, 1136, 1137, 275, 276, 277, 278, 0,
	279, 504, 505, 1138, 283, 280, 281, 1139, 284, 282,
	1140, 285, 286, 1141, 1142, 287, 288, 289, 1143, 290,
	291, 1144, 292, 293, 1145, 294, 295, 506, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 507, 508, 1146,
	230, 1147, 0, 0, 0, 0, 306, 307, 308, 509,
	0, 0, 0, 309, 1148, 310, 1149, 1150, 987, 311,
	312, 510, 511, 313, 314, 1151, 315, 512, 1152, 513,
	316, 1153, 317, 318, 319, 320, 321, 514, 515, 516,
	374, 989, 322, 323, 1154, 324, 325, 326, 327, 0,
	0, 0, 231, 328, 329, 331, 1155, 988, 330, 517,
	518, 1156, 519, 1157, 332, 990, 520, 991, 333, 334,
	335, 992, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 1158, 343, 342, 1159, 344, 521, 993, 345, 346,
	994, 1160, 347, 348, 349, 1161, 1162, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 364, 995, 366, 367, 370, 371,
	369, 996, 368, 1163, 232, 997, 372, 1164, 522, 373,
	523, 375, 376, 1165, 0, 377, 0, 1166, 1167, 379,
	380, 381, 1168, 1169, 382, 383, 524, 998, 384, 999,
	525, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 1170, 394, 395, 526, 527, 528, 396, 529, 397,
	398, 1171, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 530, 407, 408, 1172, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	1173, 418, 419, 1000, 420, 421, 422, 423, 531, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 1174,
	437, 438, 436, 439, 440, 441, 1175, 442, 426, 427,
	443, 444, 1001, 445, 446, 532, 0, 447, 1176, 448,
	449, 450, 451, 428, 452, 457, 533, 453, 454, 455,
	456, 534, 1177, 459, 460, 0, 458, 1178, 461, 462,
	463, 464, 465, 300, 466, 1179, 467, 535, 536, 537,
	538, 1180, 474, 1181, 468, 469, 539, 470, 540, 1182,
	471, 472, 473, 0, 475, 476, 1183, 1184, 477, 478,
	479, 481, 482, 480, 483, 1185, 484, 1186, 0, 485,
	486, 487, 541, 542, 543, 1187, 489, 488, 544, 1188,
	1189, 1190, 1191, 490, 491, 545, 492, 493, 494, 2129,
	0, 923, 895, 896, 897, 893, 894, 906, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 2126, 239, 240, 0, 0, 0,
	0, 0, 947, 911, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 960, 0, 967, 248, 966,
	0, 249, 250, 251, 252, 253, 913, 946, 880, 254,
	1005, 1006, 502, 0, 255, 256, 953, 0, 934, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 986, 273, 274, 937, 935, 936, 943, 939, 938,
	942, 275, 276, 277, 278, 970, 279, 964, 963, 884,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 2127,
	0, 287, 955, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 890, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 977, 978, 902, 230, 0, 0, 0,
	0, 0, 306, 307, 308, 962, 0, 0, 0, 309,
	0, 310, 0, 0, 987, 311, 312, 975, 976, 313,
	314, 0, 315, 984, 0, 912, 316, 0, 317, 318,
	319, 320, 321, 948, 949, 952, 374, 989, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 231, 328,
	329, 331, 0, 988, 330, 957, 958, 0, 918, 0,
	332, 990, 950, 991, 333, 334, 335, 992, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 985, 993, 345, 346, 994, 0, 347, 348,
	349, 941, 940, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 995, 366, 367, 370, 371, 369, 996, 368, 881,
	232, 997, 372, 903, 951, 373, 965, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 998, 384, 999, 979, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 980, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 961, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 1000,
	420, 421, 422, 423, 891, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 944, 442, 426, 427, 443, 444, 1001, 445,
	446, 959, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 1004, 453, 454, 455, 456, 981, 0, 459,
	460, 879, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 971, 972, 973, 974, 0, 474, 0,
	468, 469, 982, 470, 983, 901, 471, 472, 473, 0,
	475, 476, 0, 885, 477, 478, 479, 481, 482, 480,
	483, 945, 484, 0, 0, 485, 486, 487, 541, 968,
	1003, 2125, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 493, 494, 882, 0, 0, 0, 0,
	0, 0, 878, 0, 0, 0, 0, 0, 0, 876,
	877, 2128, 0, 0, 0, 0, 0, 0, 907, 2124,
	0, 869, 905, 923, 895, 896, 897, 893, 894, 906,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 947, 911, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 960, 0, 967,
	248, 966, 0, 249, 250, 251, 252, 253, 913, 946,
	880, 254, 1005, 1006, 502, 0, 255, 256, 953, 0,
	934, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 986, 273, 274, 937, 935, 936, 943,
	939, 938, 942, 275, 276, 277, 278, 970, 279, 964,
	963, 884, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 955, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 890, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 977, 978, 902, 230, 0,
	0, 0, 0, 0, 306, 307, 308, 962, 0, 0,
	0, 309, 0, 310, 0, 0, 987, 311, 312, 975,
	976, 313, 314, 0, 315, 984, 0, 912, 316, 0,
	317, 318, 319, 320, 321, 948, 949, 952, 374, 989,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	231, 328, 329, 331, 0, 988, 330, 957, 958, 0,
	918, 0, 332, 990, 950, 991, 333, 334, 335, 992,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 985, 993, 345, 346, 994, 0,
	347, 348, 349, 941, 940, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 995, 366, 367, 370, 371, 369, 996,
	368, 881, 232, 997, 372, 903, 951, 373, 965, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 998, 384, 999, 979, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 980, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 961,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 1000, 420, 421, 422, 423, 891, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 193, 437, 438,
	436, 439, 440, 441, 944, 442, 426, 427, 443, 444,
	1001, 445, 446, 959, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 1004, 453, 454, 455, 456, 981,
	0, 459, 460, 879, 458, 195, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 971, 972, 973, 974, 0,
	474, 0, 468, 469, 982, 470, 983, 901, 471, 472,
	473, 0, 475, 476, 0, 885, 477, 478, 479, 481,
	482, 480, 483, 945, 484, 0, 0, 485, 486, 487,
	1359, 968, 1003, 0, 489, 488, 544, 0, 0, 0,
	187, 490, 491, 545, 492, 493, 494, 882, 188, 0,
	0, 0, 0, 0, 878, 0, 0, 0, 0, 0,
	0, 876, 877, 923, 895, 896, 897, 893, 894, 906,
	1573, 1571, 0, 0, 905, 0, 0, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 947, 911, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 960, 0, 967,
	248, 966, 0, 249, 250, 251, 252, 253, 913, 946,
	880, 254, 1005, 1006, 502, 0, 255, 256, 953, 0,
	934, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 986, 273, 274, 937, 935, 936, 943,
	939, 938, 942, 275, 276, 277, 278, 970, 279, 964,
	963, 884, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 955, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 890, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 977, 978, 902, 230, 0,
	0, 0, 0, 0, 306, 307, 308, 962, 0, 0,
	0, 309, 0, 310, 0, 0, 987, 311, 312, 975,
	976, 313, 314, 0, 315, 984, 0, 912, 316, 0,
	317, 318, 319, 320, 321, 948, 949, 952, 374, 989,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	231, 328, 329, 331, 0, 988, 330, 957, 958, 0,
	918, 0, 332, 990, 950, 991, 333, 334, 335, 992,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 985, 993, 345, 346, 994, 0,
	347, 348, 349, 941, 940, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 995, 366, 367, 370, 371, 369, 996,
	368, 881, 232, 997, 372, 903, 951, 373, 965, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 998, 384, 999, 979, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 980, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 961,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 1000, 420, 421, 422, 423, 891, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 193, 437, 438,
	436, 439, 440, 441, 944, 442, 426, 427, 443, 444,
	1001, 445, 446, 959, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 1004, 453, 454, 455, 456, 981,
	0, 459, 460, 879, 458, 195, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 971, 972, 973, 974, 0,
	474, 0, 468, 469, 982, 470, 983, 901, 471, 472,
	473, 0, 475, 476, 0, 885, 477, 478, 479, 481,
	482, 480, 483, 945, 484, 0, 0, 485, 486, 487,
	1359, 968, 1003, 0, 489, 488, 544, 0, 0, 0,
	187, 490, 491, 545, 492, 493, 494, 882, 188, 0,
	0, 0, 0, 0, 878, 0, 0, 0, 0, 0,
	0, 876, 877, 923, 895, 896, 897, 893, 894, 906,
	1573, 2626, 0, 0, 905, 0, 0, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 947, 911, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 960, 0, 967,
	248, 966, 0, 249, 250, 251, 252, 253, 913, 946,
	880, 254, 1005, 1006, 502, 0, 255, 256, 953, 0,
	934, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 986, 273, 274, 937, 935, 936, 943,
	939, 938, 942, 275, 276, 277, 278, 970, 279, 964,
	963, 884, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 955, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 890, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 977, 978, 902, 230, 0,
	0, 0, 0, 0, 306, 307, 308, 962, 0, 0,
	0, 309, 0, 310, 0, 0, 987, 311, 312, 975,
	976, 313, 314, 0, 315, 984, 0, 912, 316, 0,
	317, 318, 319, 320, 321, 948, 949, 952, 374, 989,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	231, 328, 329, 331, 0, 988, 330, 957, 958, 0,
	918, 0, 332, 990, 950, 991, 333, 334, 335, 992,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 985, 993, 345, 346, 994, 0,
	347, 348, 349, 941, 940, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 995, 366, 367, 370, 371, 369, 996,
	368, 881, 232, 997, 372, 903, 951, 373, 965, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 998, 384, 999, 979, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 980, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 961,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 1000, 420, 421, 422, 423, 891, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 193, 437, 438,
	436, 439, 440, 441, 944, 442, 426, 427, 443, 444,
	1001, 445, 446, 959, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 1004, 453, 454, 455, 456, 981,
	0, 459, 460, 879, 458, 195, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 971, 972, 973, 974, 0,
	474, 0, 468, 469, 982, 470, 983, 901, 471, 472,
	473, 0, 475, 476, 0, 885, 477, 478, 479, 481,
	482, 480, 483, 945, 484, 0, 0, 485, 486, 487,
	1359, 968, 1003, 0, 489, 488, 544, 0, 0, 0,
	187, 490, 491, 545, 492, 493, 494, 882, 188, 0,
	0, 0, 0, 0, 878, 0, 0, 0, 0, 0,
	0, 876, 877, 923, 895, 896, 897, 893, 894, 906,
	1573, 1571, 0, 0, 905, 0, 0, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 947, 911, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 960, 0, 967,
	248, 966, 2233, 249, 250, 251, 252, 253, 913, 946,
	880, 254, 1005, 1006, 502, 0, 255, 256, 953, 0,
	934, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 986, 273, 274, 937, 935, 936, 943,
	939, 938, 942, 275, 276, 277, 278, 970, 279, 964,
	963, 884, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 955, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 890, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 977, 978, 902, 230, 0,
	0, 0, 0, 0, 306, 307, 308, 962, 0, 0,
	0, 309, 0, 310, 0, 2238, 987, 311, 312, 975,
	976, 313, 314, 0, 315, 984, 0, 912, 316, 0,
	317, 318, 319, 320, 321, 948, 949, 952, 374, 989,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	231, 328, 329, 331, 0, 988, 330, 957, 958, 0,
	918, 0, 332, 990, 950, 991, 333, 334, 335, 992,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 2234, 344, 985, 993, 345, 346, 994, 0,
	347, 348, 349, 941, 940, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 995, 366, 367, 370, 371, 369, 996,
	368, 881, 232, 997, 372, 903, 951, 373, 965, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 998, 384, 999, 979, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 980, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 961,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 1000, 420, 421, 422, 423, 891, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 437, 438,
	436, 439, 440, 441, 944, 442, 426, 427, 443, 444,
	1001, 445, 446, 959, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 1004, 453, 454, 455, 456, 981,
	0, 459, 460, 879, 458, 0, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 971, 972, 973, 974, 0,
	474, 2235, 468, 469, 982, 470, 983, 901, 471, 472,
	473, 0, 475, 476, 0, 885, 477, 478, 479, 481,
	482, 480, 483, 945, 484, 0, 0, 485, 486, 487,
	541, 968, 1003, 0, 489, 488, 544, 0, 0, 0,
	0, 490, 491, 545, 492, 493, 494, 882, 0, 0,
	0, 0, 0, 0, 878, 0, 0, 0, 0, 0,
	0, 876, 877, 0, 0, 0, 0, 0, 0, 0,
	907, 0, 0, 2174, 905, 923, 895, 896, 897, 893,
	894, 906, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 234, 235, 236, 237, 238, 0, 239,
	240, 0, 0, 0, 0, 0, 947, 911, 0, 0,
	0, 241, 242, 244, 243, 245, 246, 247, 496, 960,
	0, 967, 248, 966, 0, 249, 250, 251, 252, 253,
	913, 946, 880, 254, 1005, 1006, 502, 0, 255, 256,
	953, 0, 934, 0, 257, 258, 259, 260, 261, 262,
	263, 0, 0, 265, 266, 267, 264, 0, 268, 0,
	269, 270, 271, 0, 272, 986, 273, 274, 937, 935,
	936, 943, 939, 938, 942, 275, 276, 277, 278, 970,
	279, 964, 963, 884, 283, 280, 281, 0, 284, 282,
	0, 285, 286, 0, 0, 287, 955, 289, 0, 290,
	291, 0, 292, 293, 0, 294, 295, 890, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 977, 978, 902,
	230, 0, 0, 0, 0, 0, 306, 307, 308, 962,
	0, 0, 0, 309, 0, 310, 0, 0, 987, 311,
	312, 975, 976, 313, 314, 0, 315, 984, 0, 912,
	316, 0, 317, 318, 319, 320, 321, 948, 949, 952,
	374, 989, 322, 323, 0, 324, 325, 326, 327, 0,
	0, 0, 231, 328, 329, 331, 0, 988, 330, 957,
	958, 0, 918, 0, 332, 990, 950, 991, 333, 334,
	335, 992, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 0, 343, 342, 0, 344, 985, 993, 345, 346,
	994, 0, 347, 348, 349, 941, 940, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 364, 995, 366, 367, 370, 371,
	369, 996, 368, 881, 232, 997, 372, 903, 951, 373,
	965, 375, 376, 0, 0, 377, 0, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 524, 998, 384, 999,
	979, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 395, 526, 527, 980, 396, 529, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 961, 407, 408, 0, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	0, 418, 419, 1000, 420, 421, 422, 423, 891, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	437, 438, 436, 439, 440, 441, 944, 442, 426, 427,
	443, 444, 1001, 445, 446, 959, 0, 447, 0, 448,
	449, 450, 451, 428, 452, 457, 1004, 453, 454, 455,
	456, 981, 0, 459, 460, 879, 458, 0, 461, 462,
	463, 464, 465, 300, 466, 0, 467, 971, 972, 973,
	974, 0, 474, 0, 468, 469, 982, 470, 983, 901,
	471, 472, 473, 0, 475, 476, 0, 885, 477, 478,
	479, 481, 482, 480, 483, 945, 484, 0, 0, 485,
	486, 487, 541, 968, 1003, 0, 489, 488, 544, 0,
	0, 0, 0, 490, 491, 545, 492, 493, 494, 882,
	0, 0, 0, 0, 0, 0, 878, 0, 0, 0,
	0, 0, 0, 876, 877, 0, 0, 0, 0, 0,
	0, 0, 907, 2172, 0, 2171, 905, 923, 895, 896,
	897, 893, 894, 906, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 234, 235, 236, 237, 238,
	0, 239, 240, 0, 0, 0, 0, 0, 947, 911,
	0, 0, 0, 241, 242, 244, 243, 245, 246, 247,
	496, 960, 0, 967, 248, 966, 0, 249, 250, 251,
	252, 253, 913, 946, 880, 254, 1005, 1006, 502, 0,
	255, 256, 953, 0, 934, 0, 257, 258, 259, 260,
	261, 262, 263, 0, 0, 265, 266, 267, 264, 0,
	268, 0, 269, 270, 271, 0, 272, 986, 273, 274,
	937, 935, 936, 943, 939, 938, 942, 275, 276, 277,
	278, 970, 279, 964, 963, 884, 283, 280, 281, 0,
	284, 282, 0, 285, 286, 0, 0, 287, 955, 289,
	0, 290, 291, 0, 292, 293, 0, 294, 295, 890,
	296, 297, 299, 301, 298, 302, 303, 304, 305, 977,
	978, 902, 230, 0, 0, 0, 0, 0, 306, 307,
	308, 962, 0, 0, 0, 309, 0, 310, 0, 0,
	987, 311, 312, 975, 976, 313, 314, 0, 315, 984,
	0, 912, 316, 0, 317, 318, 319, 320, 321, 948,
	949, 952, 374, 989, 322, 323, 0, 324, 325, 326,
	327, 0, 0, 0, 231, 328, 329, 331, 0, 988,
	330, 957, 958, 0, 918, 0, 332, 990, 950, 991,
	333, 334, 335, 992, 336, 0, 0, 0, 337, 338,
	339, 340, 341, 0, 343, 342, 0, 344, 985, 993,
	345, 346, 994, 0, 347, 348, 349, 941, 940, 350,
	351, 352, 353, 0, 354, 355, 357, 359, 356, 358,
	363, 360, 361, 362, 365, 0, 364, 995, 366, 367,
	370, 371, 369, 996, 368, 881, 232, 997, 372, 903,
	951, 373, 965, 375, 376, 0, 0, 377, 0, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 524, 998,
	384, 999, 979, 385, 386, 378, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 395, 526, 527, 980, 396,
	529, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 961, 407, 408, 0, 0, 0, 0,
	0, 0, 409, 0, 411, 412, 413, 410, 414, 415,
	416, 417, 0, 418, 419, 1000, 420, 421, 422, 423,
	891, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 437, 438, 436, 439, 440, 441, 944, 442,
	426, 427, 443, 444, 1001, 445, 446, 959, 0, 447,
	0, 448, 449, 450, 451, 428, 452, 457, 1004, 453,
	454, 455, 456, 981, 0, 459, 460, 879, 458, 0,
	461, 462, 463, 464, 465, 300, 466, 0, 467, 971,
	972, 973, 974, 0, 474, 0, 468, 469, 982, 470,
	983, 901, 471, 472, 473, 0, 475, 476, 0, 885,
	477, 478, 479, 481, 482, 480, 483, 945, 484, 0,
	0, 485, 486, 487, 541, 968, 1003, 0, 489, 488,
	544, 0, 0, 0, 0, 490, 491, 545, 492, 493,
	494, 882, 0, 0, 0, 0, 0, 0, 878, 0,
	0, 0, 0, 0, 0, 876, 877, 0, 0, 0,
	0, 0, 0, 0, 907, 2169, 0, 2168, 905, 923,
	895, 896, 897, 893, 894, 906, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	947, 911, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 960, 0, 967, 248, 966, 0, 249,
	250, 251, 252, 253, 913, 946, 880, 254, 1005, 1006,
	502, 0, 255, 256, 953, 0, 934, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 986,
	273, 274, 937, 935, 936, 943, 939, 938, 942, 275,
	276, 277, 278, 970, 279, 964, 963, 884, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	955, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 890, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 977, 978, 902, 230, 0, 0, 0, 0, 0,
	306, 307, 308, 962, 0, 0, 0, 309, 0, 310,
	0, 0, 987, 311, 312, 975, 976, 313, 314, 0,
	315, 984, 0, 912, 316, 0, 317, 318, 319, 320,
	321, 948, 949, 952, 374, 989, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 231, 328, 329, 331,
	0, 988, 330, 957, 958, 0, 918, 0, 332, 990,
	950, 991, 333, 334, 335, 992, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	985, 993, 345, 346, 994, 0, 347, 348, 349, 941,
	940, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 995,
	366, 367, 370, 371, 369, 996, 368, 881, 232, 997,
	372, 903, 951, 373, 965, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 998, 384, 999, 979, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	980, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 961, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 1000, 420, 421,
	422, 423, 891, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	944, 442, 426, 427, 443, 444, 1001, 445, 446, 959,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	1004, 453, 454, 455, 456, 981, 0, 459, 460, 879,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 971, 972, 973, 974, 0, 474, 0, 468, 469,
	982, 470, 983, 901, 471, 472, 473, 0, 475, 476,
	0, 885, 477, 478, 479, 481, 482, 480, 483, 945,
	484, 0, 0, 485, 486, 487, 541, 968, 1003, 0,
	489, 488, 544, 0, 0, 0, 0, 490, 491, 545,
	492, 493, 494, 882, 0, 0, 0, 0, 0, 0,
	878, 0, 0, 0, 0, 0, 0, 876, 877, 0,
	0, 0, 0, 0, 0, 0, 907, 2166, 0, 2165,
	905, 923, 895, 896, 897, 893, 894, 906, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 947, 911, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 960, 0, 967, 248, 966,
	0, 249, 250, 251, 252, 253, 913, 946, 880, 254,
	1005, 1006, 502, 0, 255, 256, 953, 0, 934, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 986, 273, 274, 937, 935, 936, 943, 939, 938,
	942, 275, 276, 277, 278, 970, 279, 964, 963, 884,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 955, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 890, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 977, 978, 902, 230, 0, 0, 0,
	0, 0, 306, 307, 308, 962, 0, 0, 0, 309,
	0, 310, 0, 0, 987, 311, 312, 975, 976, 313,
	314, 0, 315, 984, 0, 912, 316, 0, 317, 318,
	319, 320, 321, 948, 949, 952, 374, 989, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 231, 328,
	329, 331, 0, 988, 330, 957, 958, 0, 918, 0,
	332, 990, 950, 991, 333, 334, 335, 992, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 985, 993, 345, 346, 994, 0, 347, 348,
	349, 941, 940, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 995, 366, 367, 370, 371, 369, 996, 368, 881,
	232, 997, 372, 903, 951, 373, 965, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 998, 384, 999, 979, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 980, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 961, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 1000,
	420, 421, 422, 423, 891, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 944, 442, 426, 427, 443, 444, 1001, 445,
	446, 959, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 1004, 453, 454, 455, 456, 981, 0, 459,
	460, 879, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 971, 972, 973, 974, 0, 474, 0,
	468, 469, 982, 470, 983, 901, 471, 472, 473, 0,
	475, 476, 0, 885, 477, 478, 479, 481, 482, 480,
	483, 945, 484, 0, 0, 485, 486, 487, 541, 968,
	1003, 0, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 493, 494, 882, 0, 0, 0, 0,
	0, 0, 878, 0, 0, 0, 0, 0, 0, 876,
	877, 0, 0, 0, 0, 0, 0, 0, 907, 2163,
	0, 1430, 905, 923, 895, 896, 897, 893, 894, 906,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 947, 911, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 960, 0, 967,
	248, 966, 0, 249, 250, 251, 252, 253, 913, 946,
	880, 254, 1005, 1006, 502, 0, 255, 256, 953, 0,
	934, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 986, 273, 274, 937, 935, 936, 943,
	939, 938, 942, 275, 276, 277, 278, 970, 279, 964,
	963, 884, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 955, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 890, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 977, 978, 902, 230, 0,
	0, 0, 0, 0, 306, 307, 308, 962, 0, 0,
	0, 309, 0, 310, 0, 0, 987, 311, 312, 975,
	976, 313, 314, 0, 315, 984, 0, 912, 316, 0,
	317, 318, 319, 320, 321, 948, 949, 952, 374, 989,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	231, 328, 329, 331, 0, 988, 330, 957, 958, 0,
	918, 0, 332, 990, 950, 991, 333, 334, 335, 992,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 985, 993, 345, 346, 994, 0,
	347, 348, 349, 941, 940, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 995, 366, 367, 370, 371, 369, 996,
	368, 881, 232, 997, 372, 903, 951, 373, 965, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 998, 384, 999, 979, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 980, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 961,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 1000, 420, 421, 422, 423, 891, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 437, 438,
	436, 439, 440, 441, 944, 442, 426, 427, 443, 444,
	1001, 445, 446, 959, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 1004, 453, 454, 455, 456, 981,
	0, 459, 460, 879, 458, 0, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 971, 972, 973, 974, 0,
	474, 0, 468, 469, 982, 470, 983, 901, 471, 472,
	473, 0, 475, 476, 0, 885, 477, 478, 479, 481,
	482, 480, 483, 945, 484, 0, 0, 485, 486, 487,
	541, 968, 1003, 0, 489, 488, 544, 1429, 0, 0,
	0, 490, 491, 545, 492, 493, 494, 882, 0, 0,
	0, 0, 0, 0, 878, 0, 0, 0, 0, 0,
	0, 876, 877, 0, 0, 0, 0, 0, 0, 0,
	907, 0, 0, 872, 905, 923, 895, 896, 897, 893,
	894, 906, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 234, 235, 236, 237, 238, 0, 239,
	240, 0, 0, 0, 0, 0, 947, 911, 0, 0,
	0, 241, 242, 244, 243, 245, 246, 247, 496, 960,
	0, 967, 248, 966, 0, 249, 250, 251, 252, 253,
	913, 946, 880, 254, 1005, 1006, 502, 0, 255, 256,
	953, 0, 934, 0, 257, 258, 259, 260, 261, 262,
	263, 0, 0, 265, 266, 267, 264, 0, 268, 0,
	269, 270, 271, 0, 272, 986, 273, 274, 937, 935,
	936, 943, 939, 938, 942, 275, 276, 277, 278, 970,
	279, 964, 963, 884, 283, 280, 281, 0, 284, 282,
	0, 285, 286, 0, 0, 287, 955, 289, 0, 290,
	291, 0, 292, 293, 0, 294, 295, 890, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 977, 978, 902,
	230, 0, 0, 0, 0, 0, 306, 307, 308, 962,
	0, 0, 0, 309, 0, 310, 0, 0, 987, 311,
	312, 975, 976, 313, 314, 0, 315, 984, 0, 912,
	316, 0, 317, 318, 319, 320, 321, 948, 949, 952,
	374, 989, 322, 323, 0, 324, 325, 326, 327, 0,
	0, 0, 231, 328, 329, 331, 0, 988, 330, 957,
	958, 0, 918, 0, 332, 990, 950, 991, 333, 334,
	335, 992, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 0, 343, 342, 0, 344, 985, 993, 345, 346,
	994, 0, 347, 348, 349, 941, 940, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 364, 995, 366, 367, 370, 371,
	369, 996, 368, 881, 232, 997, 372, 903, 951, 373,
	965, 375, 376, 0, 0, 377, 0, 886, 0, 379,
	380, 381, 0, 0, 382, 383, 524, 998, 384, 999,
	979, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 395, 526, 527, 980, 396, 529, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 961, 407, 408, 0, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	0, 418, 419, 1000, 420, 421, 422, 423, 891, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	437, 438, 436, 439, 440, 441, 944, 442, 426, 427,
	443, 444, 1001, 445, 446, 959, 0, 447, 0, 448,
	449, 450, 451, 428, 452, 457, 1004, 453, 454, 455,
	456, 981, 0, 459, 460, 879, 458, 0, 461, 462,
	463, 464, 465, 300, 466, 0, 467, 971, 972, 973,
	974, 0, 474, 0, 468, 469, 982, 470, 983, 901,
	471, 472, 473, 0, 475, 476, 0, 885, 477, 478,
	479, 481, 482, 480, 483, 945, 484, 0, 0, 485,
	486, 487, 541, 968, 1003, 0, 489, 488, 544, 0,
	0, 0, 0, 490, 491, 545, 492, 493, 494, 882,
	0, 0, 0, 0, 0, 0, 878, 0, 0, 0,
	0, 0, 0, 876, 877, 923, 895, 896, 897, 893,
	894, 906, 907, 0, 0, 0, 905, 0, 0, 0,
	0, 0, 233, 234, 235, 236, 237, 238, 0, 239,
	240, 0, 0, 0, 0, 0, 947, 911, 0, 0,
	0, 241, 242, 244, 243, 245, 246, 247, 496, 960,
	0, 967, 248, 966, 0, 249, 250, 251, 252, 253,
	913, 946, 880, 254, 1005, 1006, 502, 0, 255, 256,
	953, 0, 934, 0, 257, 258, 259, 260, 261, 262,
	263, 0, 0, 265, 266, 267, 264, 0, 268, 0,
	269, 3766, 271, 0, 272, 986, 273, 274, 937, 935,
	936, 943, 939, 938, 942, 275, 276, 277, 278, 970,
	279, 964, 963, 884, 283, 280, 281, 0, 284, 282,
	0, 285, 286, 0, 0, 287, 955, 289, 0, 290,
	291, 0, 292, 293, 0, 294, 295, 890, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 977, 978, 902,
	230, 0, 0, 0, 0, 0, 306, 307, 308, 962,
	0, 0, 0, 309, 0, 310, 0, 0, 987, 311,
	312, 975, 976, 313, 314, 0, 315, 984, 0, 912,
	316, 0, 317, 318, 319, 320, 321, 948, 949, 952,
	374, 989, 322, 323, 0, 324, 325, 326, 327, 0,
	0, 0, 231, 328, 329, 331, 0, 988, 330, 957,
	958, 0, 918, 0, 332, 990, 950, 991, 333, 334,
	335, 992, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 0, 343, 342, 0, 344, 985, 993, 345, 346,
	994, 0, 347, 348, 349, 941, 940, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 364, 995, 366, 367, 370, 371,
	369, 996, 368, 881, 232, 997, 372, 903, 951, 373,
	965, 375, 376, 0, 0, 377, 0, 886, 0, 379,
	380, 381, 0, 0, 382, 383, 524, 998, 384, 999,
	979, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 395, 526, 527, 980, 396, 529, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 961, 407, 408, 0, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	0, 418, 419, 1000, 420, 421, 422, 423, 891, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	437, 438, 436, 439, 440, 441, 944, 442, 426, 427,
	443, 444, 1001, 445, 446, 959, 0, 447, 0, 448,
	449, 450, 451, 428, 452, 457, 1004, 453, 454, 455,
	456, 981, 0, 459, 460, 879, 458, 0, 461, 462,
	463, 464, 465, 300, 466, 0, 467, 971, 972, 973,
	974, 0, 474, 0, 468, 469, 982, 470, 983, 901,
	471, 472, 473, 0, 475, 476, 0, 885, 477, 478,
	479, 481, 482, 480, 483, 945, 484, 0, 0, 485,
	486, 487, 541, 968, 1003, 0, 489, 488, 544, 0,
	0, 0, 0, 490, 491, 545, 492, 493, 494, 882,
	0, 0, 0, 0, 0, 0, 878, 0, 0, 0,
	0, 0, 0, 876, 877, 923, 895, 896, 897, 893,
	894, 906, 907, 0, 0, 0, 905, 0, 0, 0,
	0, 0, 233, 234, 235, 236, 237, 238, 0, 239,
	240, 0, 0, 0, 0, 0, 947, 911, 0, 0,
	0, 241, 242, 244, 243, 245, 246, 247, 496, 960,
	0, 967, 248, 966, 0, 249, 250, 251, 252, 253,
	913, 946, 880, 254, 1005, 1006, 502, 0, 255, 256,
	953, 0, 934, 0, 257, 258, 259, 260, 261, 262,
	263, 0, 0, 265, 266, 267, 264, 0, 268, 0,
	269, 270, 271, 0, 272, 986, 273, 274, 937, 935,
	936, 943, 939, 938, 942, 275, 276, 277, 278, 970,
	279, 964, 963, 884, 283, 280, 281, 0, 284, 282,
	0, 285, 286, 0, 0, 287, 955, 289, 0, 290,
	291, 0, 292, 293, 0, 294, 295, 890, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 977, 978, 902,
	230, 0, 0, 0, 0, 0, 306, 307, 308, 962,
	0, 0, 0, 309, 0, 310, 0, 0, 987, 311,
	312, 975, 976, 313, 314, 0, 315, 984, 0, 912,
	316, 0, 317, 318, 319, 320, 321, 948, 949, 952,
	374, 989, 322, 323, 0, 324, 325, 326, 327, 0,
	0, 0, 2043, 328, 329, 331, 0, 988, 330, 957,
	958, 0, 918, 0, 332, 990, 950, 991, 333, 334,
	335, 992, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 0, 343, 342, 0, 344, 985, 993, 345, 346,
	994, 0, 347, 348, 349, 941, 940, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 364, 995, 366, 367, 370, 371,
	369, 996, 368, 881, 232, 997, 372, 903, 951, 373,
	965, 375, 376, 0, 0, 377, 0, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 524, 998, 384, 999,
	979, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 395, 526, 527, 980, 396, 529, 397,
	398, 2042, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 961, 407, 408, 0, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	0, 418, 419, 1000, 420, 421, 422, 423, 891, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	437, 438, 436, 439, 440, 441, 944, 442, 426, 427,
	443, 444, 1001, 445, 446, 959, 0, 447, 0, 448,
	449, 450, 451, 428, 452, 457, 1004, 453, 454, 455,
	456, 981, 0, 459, 460, 879, 458, 0, 461, 462,
	463, 464, 465, 300, 466, 0, 467, 971, 972, 973,
	974, 0, 474, 0, 468, 469, 982, 470, 983, 901,
	471, 472, 473, 0, 475, 476, 0, 885, 477, 478,
	479, 481, 482, 480, 483, 945, 484, 0, 0, 485,
	486, 487, 541, 968, 1003, 0, 489, 488, 544, 0,
	0, 0, 0, 490, 491, 545, 492, 493, 494, 882,
	0, 0, 0, 0, 0, 0, 878, 0, 0, 0,
	0, 0, 0, 876, 877, 923, 895, 896, 897, 893,
	894, 906, 907, 0, 0, 0, 905, 0, 0, 0,
	0, 0, 233, 234, 235, 236, 237, 238, 0, 239,
	240, 0, 0, 0, 0, 0, 947, 911, 0, 0,
	0, 241, 242, 244, 243, 245, 246, 247, 496, 960,
	0, 967, 248, 966, 0, 249, 250, 251, 252, 253,
	913, 946, 880, 254, 1005, 1006, 502, 0, 255, 256,
	953, 0, 934, 0, 257, 258, 259, 260, 261, 262,
	263, 0, 0, 265, 266, 267, 264, 0, 268, 0,
	269, 3568, 271, 0, 272, 986, 273, 274, 937, 935,
	936, 943, 939, 938, 942, 275, 276, 277, 278, 970,
	279, 964, 963, 884, 283, 280, 281, 0, 284, 282,
	0, 285, 286, 0, 0, 287, 955, 289, 0, 290,
	291, 0, 292, 293, 0, 294, 295, 890, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 977, 978, 902,
	230, 0, 0, 0, 0, 0, 306, 307, 308, 962,
	0, 0, 0, 309, 0, 310, 0, 0, 987, 311,
	312, 975, 976, 313, 314, 0, 315, 984, 0, 912,
	316, 0, 317, 318, 319, 320, 321, 948, 949, 952,
	374, 989, 322, 323, 0, 324, 325, 326, 327, 0,
	0, 0, 231, 328, 329, 331, 0, 988, 330, 957,
	958, 0, 918, 0, 332, 990, 950, 991, 333, 334,
	335, 992, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 0, 343, 342, 0, 344, 985, 993, 345, 346,
	994, 0, 347, 348, 349, 941, 940, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 364, 995, 366, 367, 370, 371,
	369, 996, 368, 881, 232, 997, 372, 903, 951, 373,
	965, 375, 376, 0, 0, 377, 0, 886, 0, 379,
	380, 381, 0, 0, 382, 383, 524, 998, 384, 999,
	979, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 395, 526, 527, 980, 396, 529, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 961, 407, 408, 0, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	0, 418, 419, 1000, 420, 421, 422, 423, 891, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	437, 438, 436, 439, 440, 441, 944, 442, 426, 427,
	443, 444, 1001, 445, 446, 959, 0, 447, 0, 448,
	449, 450, 451, 428, 452, 457, 1004, 453, 454, 455,
	456, 981, 0, 459, 460, 879, 458, 0, 461, 462,
	463, 464, 465, 300, 466, 0, 467, 971, 972, 973,
	974, 0, 474, 0, 468, 469, 982, 470, 983, 901,
	471, 472, 473, 0, 475, 476, 0, 885, 477, 478,
	479, 481, 482, 480, 483, 945, 484, 0, 0, 485,
	486, 487, 541, 968, 1003, 0, 489, 488, 544, 0,
	0, 0, 0, 490, 491, 545, 492, 493, 494, 882,
	0, 0, 0, 0, 0, 0, 878, 0, 0, 0,
	0, 0, 0, 876, 877, 923, 895, 896, 897, 893,
	894, 906, 907, 0, 0, 0, 905, 0, 0, 0,
	0, 0, 233, 234, 235, 236, 237, 238, 0, 239,
	240, 0, 0, 0, 0, 0, 947, 911, 0, 0,
	0, 241, 242, 244, 243, 245, 246, 247, 496, 960,
	0, 967, 248, 966, 0, 249, 250, 251, 252, 253,
	913, 946, 880, 254, 1005, 1006, 502, 0, 255, 256,
	953, 0, 934, 0, 257, 258, 259, 260, 261, 262,
	263, 0, 0, 265, 266, 267, 264, 0, 268, 0,
	269, 270, 271, 0, 272, 986, 273, 274, 937, 935,
	936, 943, 939, 938, 942, 275, 276, 277, 278, 970,
	279, 964, 963, 884, 283, 280, 281, 0, 284, 282,
	0, 285, 286, 0, 0, 287, 955, 289, 0, 290,
	291, 0, 292, 293, 0, 294, 295, 890, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 977, 978, 902,
	230, 0, 0, 0, 0, 0, 306, 307, 308, 962,
	0, 0, 0, 309, 0, 310, 0, 0, 987, 311,
	312, 975, 976, 313, 314, 0, 315, 984, 0, 912,
	316, 0, 317, 318, 319, 320, 321, 948, 949, 952,
	374, 989, 322, 323, 0, 324, 325, 326, 327, 0,
	0, 0, 231, 328, 329, 331, 0, 988, 330, 957,
	958, 0, 918, 0, 332, 990, 950, 991, 333, 334,
	335, 992, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 0, 343, 342, 0, 344, 985, 993, 345, 346,
	994, 0, 347, 348, 349, 941, 940, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 364, 995, 366, 367, 370, 371,
	369, 996, 368, 881, 3252, 997, 372, 903, 951, 373,
	965, 375, 376, 0, 0, 377, 0, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 524, 998, 384, 999,
	979, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 395, 526, 527, 980, 396, 529, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 961, 407, 408, 0, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	0, 418, 419, 1000, 420, 421, 422, 423, 891, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	437, 438, 436, 439, 440, 441, 944, 442, 426, 427,
	443, 444, 1001, 445, 446, 959, 0, 447, 0, 448,
	449, 450, 451, 428, 452, 457, 1004, 453, 454, 455,
	456, 981, 0, 459, 460, 879, 458, 0, 461, 462,
	463, 464, 465, 300, 466, 0, 467, 971, 972, 973,
	974, 0, 474, 0, 468, 469, 982, 470, 983, 901,
	471, 472, 473, 0, 475, 476, 0, 885, 477, 478,
	479, 481, 482, 480, 483, 945, 484, 0, 0, 485,
	486, 487, 541, 968, 1003, 0, 489, 488, 544, 0,
	0, 0, 0, 490, 491, 545, 492, 493, 494, 882,
	0, 0, 0, 0, 0, 0, 878, 0, 0, 0,
	0, 0, 0, 876, 877, 1641, 0, 0, 0, 0,
	0, 0, 907, 0, 0, 0, 905, 923, 895, 896,
	897, 893, 894, 906, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 234, 235, 236, 237, 238,
	0, 239, 240, 0, 0, 0, 0, 0, 947, 911,
	0, 0, 0, 241, 242, 244, 243, 245, 246, 247,
	496, 960, 0, 967, 248, 966, 0, 249, 250, 251,
	252, 253, 913, 946, 880, 254, 1005, 1006, 502, 0,
	255, 256, 953, 0, 934, 0, 257, 258, 259, 260,
	261, 262, 263, 0, 0, 265, 266, 267, 264, 0,
	268, 0, 269, 270, 271, 0, 272, 986, 273, 274,
	937, 935, 936, 943, 939, 938, 942, 275, 276, 277,
	278, 970, 279, 964, 963, 884, 283, 280, 281, 0,
	284, 282, 0, 285, 286, 0, 0, 287, 955, 289,
	0, 290, 291, 0, 292, 293, 0, 294, 295, 890,
	296, 297, 299, 301, 298, 302, 303, 304, 305, 977,
	978, 902, 230, 0, 0, 0, 0, 0, 306, 307,
	308, 962, 0, 0, 0, 309, 0, 310, 0, 0,
	987, 311, 312, 975, 976, 313, 314, 0, 315, 984,
	0, 912, 316, 0, 317, 318, 319, 320, 321, 948,
	949, 952, 374, 989, 322, 323, 0, 324, 325, 326,
	327, 0, 0, 0, 231, 328, 329, 331, 0, 988,
	330, 957, 958, 0, 918, 0, 332, 990, 950, 991,
	333, 334, 335, 992, 336, 0, 0, 0, 337, 338,
	339, 340, 341, 0, 343, 342, 0, 344, 985, 993,
	345, 346, 994, 0, 347, 348, 349, 941, 940, 350,
	351, 352, 353, 0, 354, 355, 357, 359, 356, 358,
	363, 360, 361, 362, 365, 0, 364, 995, 366, 367,
	370, 371, 369, 996, 368, 881, 232, 997, 372, 903,
	951, 373, 965, 375, 376, 0, 0, 377, 0, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 524, 998,
	384, 999, 979, 385, 386, 378, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 395, 526, 527, 980, 396,
	529, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 961, 407, 408, 0, 0, 0, 0,
	0, 0, 409, 0, 411, 412, 413, 410, 414, 415,
	416, 417, 0, 418, 419, 1000, 420, 421, 422, 423,
	891, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 437, 438, 436, 439, 440, 441, 944, 442,
	426, 427, 443, 444, 1001, 445, 446, 959, 0, 447,
	0, 448, 449, 450, 451, 428, 452, 457, 1004, 453,
	454, 455, 456, 981, 0, 459, 460, 879, 458, 0,
	461, 462, 463, 464, 465, 300, 466, 0, 467, 971,
	972, 973, 974, 0, 474, 0, 468, 469, 982, 470,
	983, 901, 471, 472, 473, 0, 475, 476, 0, 885,
	477, 478, 479, 481, 482, 480, 483, 945, 484, 0,
	0, 485, 486, 487, 541, 968, 1003, 3032, 489, 488,
	544, 0, 0, 0, 0, 490, 491, 545, 492, 493,
	494, 882, 0, 0, 0, 0, 0, 0, 878, 0,
	0, 0, 0, 0, 0, 876, 877, 923, 895, 896,
	897, 893, 894, 906, 907, 0, 0, 0, 905, 0,
	0, 0, 0, 0, 233, 234, 235, 236, 237, 238,
	0, 239, 240, 0, 0, 0, 0, 0, 947, 911,
	0, 0, 0, 241, 242, 244, 243, 245, 246, 247,
	496, 960, 0, 967, 248, 966, 0, 249, 250, 251,
	252, 253, 913, 946, 880, 254, 1005, 1006, 502, 0,
	255, 256, 953, 0, 934, 0, 257, 258, 259, 260,
	261, 262, 263, 0, 0, 265, 266, 267, 264, 0,
	268, 0, 269, 270, 271, 0, 272, 986, 273, 274,
	937, 935, 936, 943, 939, 938, 942, 275, 276, 277,
	278, 970, 279, 964, 963, 884, 283, 280, 281, 0,
	284, 282, 0, 285, 286, 0, 0, 287, 955, 289,
	0, 290, 291, 0, 292, 293, 0, 294, 295, 890,
	296, 297, 299, 301, 298, 302, 303, 304, 305, 977,
	978, 902, 230, 0, 0, 0, 0, 0, 306, 307,
	308, 962, 0, 0, 0, 309, 0, 310, 0, 0,
	987, 311, 312, 975, 976, 313, 314, 0, 315, 984,
	0, 912, 316, 0, 317, 318, 319, 320, 321, 948,
	949, 952, 374, 989, 322, 323, 0, 324, 325, 326,
	327, 0, 0, 0, 231, 328, 329, 331, 0, 988,
	330, 957, 958, 0, 918, 0, 332, 990, 950, 991,
	333, 334, 335, 992, 336, 0, 0, 0, 337, 338,
	339, 340, 341, 0, 343, 342, 0, 344, 985, 993,
	345, 346, 994, 0, 347, 348, 349, 941, 940, 350,
	351, 352, 353, 0, 354, 355, 357, 359, 356, 358,
	363, 360, 361, 362, 365, 0, 364, 995, 366, 367,
	370, 371, 369, 996, 368, 881, 232, 997, 372, 903,
	951, 373, 965, 375, 376, 0, 0, 377, 0, 886,
	0, 379, 380, 381, 0, 0, 382, 383, 524, 998,
	384, 999, 979, 385, 386, 378, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 395, 526, 527, 980, 396,
	529, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 961, 407, 408, 0, 0, 0, 0,
	0, 0, 409, 0, 411, 412, 413, 410, 414, 415,
	416, 417, 0, 418, 419, 1000, 420, 421, 422, 423,
	891, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 437, 438, 436, 439, 440, 441, 944, 442,
	426, 427, 443, 444, 1001, 445, 446, 959, 0, 447,
	0, 448, 449, 450, 451, 428, 452, 457, 1004, 453,
	454, 455, 456, 981, 0, 459, 460, 879, 458, 0,
	461, 462, 463, 464, 465, 300, 466, 0, 467, 971,
	972, 973, 974, 0, 474, 0, 468, 469, 982, 470,
	983, 901, 471, 472, 473, 0, 475, 476, 0, 885,
	477, 478, 479, 481, 482, 480, 483, 945, 484, 0,
	0, 485, 486, 487, 541, 968, 1003, 0, 489, 488,
	544, 0, 0, 0, 0, 490, 491, 545, 492, 493,
	494, 882, 0, 0, 0, 0, 0, 0, 878, 0,
	0, 0, 0, 0, 0, 876, 877, 923, 895, 896,
	897, 893, 894, 906, 907, 0, 0, 0, 905, 0,
	0, 0, 0, 0, 233, 234, 235, 236, 237, 238,
	0, 239, 240, 0, 0, 0, 0, 0, 947, 911,
	0, 0, 0, 241, 242, 244, 243, 245, 246, 247,
	496, 960, 0, 967, 248, 966, 0, 249, 250, 251,
	252, 253, 913, 946, 880, 254, 1005, 1006, 502, 0,
	255, 256, 953, 0, 934, 0, 257, 258, 259, 260,
	261, 262, 263, 0, 0, 265, 266, 267, 264, 0,
	268, 0, 269, 270, 271, 0, 272, 986, 273, 274,
	937, 935, 936, 943, 939, 938, 942, 275, 276, 277,
	278, 970, 279, 964, 963, 884, 283, 280, 281, 0,
	284, 282, 0, 285, 286, 0, 0, 287, 955, 289,
	0, 290, 291, 0, 292, 293, 0, 294, 295, 890,
	296, 297, 299, 301, 298, 302, 303, 304, 305, 977,
	978, 902, 230, 0, 0, 0, 0, 0, 306, 307,
	308, 962, 0, 0, 0, 309, 0, 310, 0, 0,
	987, 311, 312, 975, 976, 313, 314, 0, 315, 984,
	0, 912, 316, 0, 317, 318, 319, 320, 321, 948,
	949, 952, 374, 989, 322, 323, 0, 324, 325, 326,
	327, 0, 0, 0, 231, 328, 329, 331, 0, 988,
	330, 957, 958, 0, 918, 0, 332, 990, 950, 991,
	333, 334, 335, 992, 336, 0, 0, 0, 337, 338,
	339, 340, 341, 0, 343, 342, 0, 344, 985, 993,
	345, 346, 994, 0, 347, 348, 349, 941, 940, 350,
	351, 352, 353, 0, 354, 355, 357, 359, 356, 358,
	363, 360, 361, 362, 365, 0, 364, 995, 366, 367,
	370, 371, 369, 996, 368, 881, 232, 997, 372, 903,
	951, 373, 965, 375, 376, 0, 0, 377, 0, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 524, 998,
	384, 999, 979, 385, 386, 378, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 395, 526, 527, 980, 396,
	529, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 961, 407, 408, 0, 0, 0, 0,
	0, 0, 409, 0, 411, 412, 413, 410, 414, 415,
	416, 417, 0, 418, 419, 1000, 420, 421, 422, 423,
	891, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 437, 438, 436, 439, 440, 441, 944, 442,
	426, 427, 443, 444, 1001, 445, 446, 959, 0, 447,
	0, 448, 449, 450, 451, 428, 452, 457, 1004, 453,
	454, 455, 456, 981, 0, 459, 460, 879, 458, 0,
	461, 462, 463, 464, 465, 300, 466, 0, 467, 971,
	972, 973, 974, 0, 474, 0, 468, 469, 982, 470,
	983, 901, 471, 472, 473, 0, 475, 476, 0, 885,
	477, 478, 479, 481, 482, 480, 483, 945, 484, 0,
	0, 485, 486, 487, 541, 968, 1003, 0, 489, 488,
	544, 0, 0, 0, 0, 490, 491, 545, 492, 493,
	494, 882, 0, 0, 0, 0, 0, 0, 878, 0,
	0, 0, 0, 0, 0, 876, 877, 1641, 0, 0,
	0, 0, 0, 0, 907, 0, 0, 0, 905, 923,
	895, 896, 897, 893, 894, 906, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	947, 911, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 960, 0, 967, 248, 966, 0, 249,
	250, 251, 252, 253, 913, 946, 880, 254, 1005, 1006,
	502, 0, 255, 256, 953, 0, 934, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 986,
	273, 274, 937, 935, 936, 943, 939, 938, 942, 275,
	276, 277, 278, 970, 279, 964, 963, 884, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	955, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 890, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 977, 978, 902, 230, 0, 0, 0, 0, 0,
	306, 307, 308, 962, 0, 0, 0, 309, 0, 310,
	0, 2238, 987, 311, 312, 975, 976, 313, 314, 0,
	315, 984, 0, 912, 316, 0, 317, 318, 319, 320,
	321, 948, 949, 952, 374, 989, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 231, 328, 329, 331,
	0, 988, 330, 957, 958, 0, 918, 0, 332, 990,
	950, 991, 333, 334, 335, 992, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	985, 993, 345, 346, 994, 0, 347, 348, 349, 941,
	940, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 995,
	366, 367, 370, 371, 369, 996, 368, 881, 232, 997,
	372, 903, 951, 373, 965, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 998, 384, 999, 979, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	980, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 961, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 1000, 420, 421,
	422, 423, 891, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	944, 442, 426, 427, 443, 444, 1001, 445, 446, 959,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	1004, 453, 454, 455, 456, 981, 0, 459, 460, 879,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 971, 972, 973, 974, 0, 474, 0, 468, 469,
	982, 470, 983, 901, 471, 472, 473, 0, 475, 476,
	0, 885, 477, 478, 479, 481, 482, 480, 483, 945,
	484, 0, 0, 485, 486, 487, 541, 968, 1003, 0,
	489, 488, 544, 0, 0, 0, 0, 490, 491, 545,
	492, 493, 494, 882, 0, 0, 0, 0, 0, 0,
	878, 0, 0, 0, 0, 0, 0, 876, 877, 923,
	895, 896, 897, 893, 894, 906, 907, 0, 0, 0,
	905, 0, 0, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	947, 911, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 960, 0, 967, 248, 966, 0, 249,
	250, 251, 252, 253, 913, 946, 880, 254, 1005, 1006,
	502, 0, 255, 256, 953, 0, 934, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 986,
	273, 274, 937, 935, 936, 943, 939, 938, 942, 275,
	276, 277, 278, 970, 279, 964, 963, 884, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	955, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 890, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 977, 978, 902, 230, 0, 0, 0, 0, 0,
	306, 307, 308, 962, 0, 0, 0, 309, 0, 310,
	0, 0, 987, 311, 312, 975, 976, 313, 314, 0,
	315, 984, 0, 912, 316, 0, 317, 318, 319, 320,
	321, 948, 949, 952, 374, 989, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 231, 328, 329, 331,
	0, 988, 330, 957, 958, 0, 918, 0, 332, 990,
	950, 991, 333, 334, 335, 992, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	985, 993, 345, 346, 994, 0, 347, 348, 349, 941,
	940, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 995,
	366, 367, 370, 371, 369, 996, 368, 881, 232, 997,
	372, 903, 951, 373, 965, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 998, 384, 999, 979, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	980, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 961, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 1000, 420, 421,
	422, 423, 891, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	944, 442, 426, 427, 443, 444, 1001, 445, 446, 959,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	1004, 453, 454, 455, 456, 981, 0, 459, 460, 879,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 971, 972, 973, 974, 0, 474, 0, 468, 469,
	982, 470, 983, 901, 471, 472, 473, 0, 475, 476,
	0, 885, 477, 478, 479, 481, 482, 480, 483, 945,
	484, 0, 0, 485, 486, 487, 541, 968, 1003, 0,
	489, 488, 544, 0, 0, 0, 0, 490, 491, 545,
	492, 493, 494, 882, 0, 0, 0, 0, 0, 0,
	878, 0, 0, 0, 0, 0, 0, 876, 877, 0,
	0, 0, 0, 0, 0, 0, 907, 1571, 0, 2243,
	905, 923, 895, 896, 897, 893, 894, 906, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 947, 911, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 960, 0, 967, 248, 966,
	0, 249, 250, 251, 252, 253, 913, 946, 880, 254,
	1005, 1006, 502, 0, 255, 256, 953, 0, 934, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 986, 273, 274, 937, 935, 936, 943, 939, 938,
	942, 275, 276, 277, 278, 970, 279, 964, 963, 884,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 955, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 890, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 977, 978, 902, 230, 0, 0, 0,
	0, 0, 306, 307, 308, 962, 0, 0, 0, 309,
	0, 310, 0, 0, 987, 311, 312, 975, 976, 313,
	314, 0, 315, 984, 0, 912, 316, 0, 317, 318,
	319, 320, 321, 948, 949, 952, 374, 989, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 231, 328,
	329, 331, 0, 988, 330, 957, 958, 0, 918, 0,
	332, 990, 950, 991, 333, 334, 335, 992, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 985, 993, 345, 346, 994, 0, 347, 348,
	349, 941, 940, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 995, 366, 367, 370, 371, 369, 996, 368, 881,
	232, 997, 372, 903, 951, 373, 965, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 998, 384, 999, 979, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 980, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 961, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 1000,
	420, 421, 422, 423, 891, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 944, 442, 426, 427, 443, 444, 1001, 445,
	446, 959, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 1004, 453, 454, 455, 456, 981, 0, 459,
	460, 879, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 971, 972, 973, 974, 0, 474, 0,
	468, 469, 982, 470, 983, 901, 471, 472, 473, 0,
	475, 476, 0, 885, 477, 478, 479, 481, 482, 480,
	483, 945, 484, 0, 0, 485, 486, 487, 541, 968,
	1003, 0, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 493, 494, 882, 0, 0, 0, 0,
	0, 0, 878, 0, 0, 0, 0, 0, 0, 876,
	877, 0, 0, 0, 0, 0, 0, 0, 907, 0,
	0, 2241, 905, 923, 895, 896, 897, 893, 894, 906,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 947, 911, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 960, 0, 967,
	248, 966, 0, 249, 250, 251, 252, 253, 913, 946,
	880, 254, 1005, 1006, 502, 0, 255, 256, 953, 0,
	934, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 986, 273, 274, 937, 935, 936, 943,
	939, 938, 942, 275, 276, 277, 278, 970, 279, 964,
	963, 884, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 955, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 890, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 977, 978, 902, 230, 0,
	0, 0, 0, 0, 306, 307, 308, 962, 0, 0,
	0, 309, 0, 310, 0, 0, 987, 311, 312, 975,
	976, 313, 314, 0, 315, 984, 0, 912, 316, 0,
	317, 318, 319, 320, 321, 948, 949, 952, 374, 989,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	231, 328, 329, 331, 0, 988, 330, 957, 958, 0,
	918, 0, 332, 990, 950, 991, 333, 334, 335, 992,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 985, 993, 345, 346, 994, 0,
	347, 348, 349, 941, 940, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 995, 366, 367, 370, 371, 369, 996,
	368, 881, 232, 997, 372, 903, 951, 373, 965, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 998, 384, 999, 979, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 980, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 961,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 1000, 420, 421, 422, 423, 891, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 437, 438,
	436, 439, 440, 441, 944, 442, 426, 427, 443, 444,
	1001, 445, 446, 959, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 1004, 453, 454, 455, 456, 981,
	0, 459, 460, 879, 458, 0, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 971, 972, 973, 974, 0,
	474, 0, 468, 469, 982, 470, 983, 901, 471, 472,
	473, 0, 475, 476, 0, 885, 477, 478, 479, 481,
	482, 480, 483, 945, 484, 0, 0, 485, 486, 487,
	541, 968, 1003, 0, 489, 488, 544, 0, 0, 0,
	0, 490, 491, 545, 492, 493, 494, 882, 0, 0,
	0, 0, 0, 0, 878, 0, 0, 0, 0, 0,
	0, 876, 877, 0, 0, 0, 0, 0, 0, 0,
	907, 0, 0, 2229, 905, 923, 895, 896, 897, 893,
	894, 906, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 234, 235, 236, 237, 238, 0, 239,
	240, 0, 0, 0, 0, 0, 947, 911, 0, 0,
	0, 241, 242, 244, 243, 245, 246, 247, 496, 960,
	0, 967, 248, 966, 0, 249, 250, 251, 252, 253,
	913, 946, 880, 254, 1005, 1006, 502, 0, 255, 256,
	953, 0, 934, 0, 257, 258, 259, 260, 261, 262,
	263, 0, 0, 265, 266, 267, 264, 0, 268, 0,
	269, 270, 271, 0, 272, 986, 273, 274, 937, 935,
	936, 943, 939, 938, 942, 275, 276, 277, 278, 970,
	279, 964, 963, 884, 283, 280, 281, 0, 284, 282,
	0, 285, 286, 0, 0, 287, 955, 289, 0, 290,
	291, 0, 292, 293, 0, 294, 295, 890, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 977, 978, 902,
	230, 0, 0, 0, 0, 0, 306, 307, 308, 962,
	0, 0, 0, 309, 0, 310, 0, 0, 987, 311,
	312, 975, 976, 313, 314, 0, 315, 984, 0, 912,
	316, 0, 317, 318, 319, 320, 321, 948, 949, 952,
	374, 989, 322, 323, 0, 324, 325, 326, 327, 0,
	0, 0, 231, 328, 329, 331, 0, 988, 330, 957,
	958, 0, 918, 0, 332, 990, 950, 991, 333, 334,
	335, 992, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 0, 343, 342, 0, 344, 985, 993, 345, 346,
	994, 0, 347, 348, 349, 941, 940, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 364, 995, 366, 367, 370, 371,
	369, 996, 368, 881, 232, 997, 372, 903, 951, 373,
	965, 375, 376, 0, 0, 377, 0, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 524, 998, 384, 999,
	979, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 395, 526, 527, 980, 396, 529, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 961, 407, 408, 0, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	0, 418, 419, 1000, 420, 421, 422, 423, 891, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	437, 438, 436, 439, 440, 441, 944, 442, 426, 427,
	443, 444, 1001, 445, 446, 959, 0, 447, 0, 448,
	449, 450, 451, 428, 452, 457, 1004, 453, 454, 455,
	456, 981, 0, 459, 460, 879, 458, 0, 461, 462,
	463, 464, 465, 300, 466, 0, 467, 971, 972, 973,
	974, 0, 474, 0, 468, 469, 982, 470, 983, 901,
	471, 472, 473, 0, 475, 476, 0, 885, 477, 478,
	479, 481, 482, 480, 483, 945, 484, 0, 0, 485,
	486, 487, 541, 968, 1003, 0, 489, 488, 544, 0,
	0, 0, 0, 490, 491, 545, 492, 493, 494, 882,
	0, 0, 0, 0, 0, 0, 878, 0, 0, 0,
	0, 0, 0, 876, 877, 0, 0, 0, 0, 0,
	0, 0, 907, 0, 0, 2218, 905, 923, 895, 896,
	897, 893, 894, 906, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 234, 235, 236, 237, 238,
	0, 239, 240, 0, 0, 0, 0, 0, 947, 911,
	0, 0, 0, 241, 242, 244, 243, 245, 246, 247,
	496, 960, 0, 967, 248, 966, 0, 249, 250, 251,
	252, 253, 913, 946, 880, 254, 1005, 1006, 502, 0,
	255, 256, 953, 0, 934, 0, 257, 258, 259, 260,
	261, 262, 263, 0, 0, 265, 266, 267, 264, 0,
	268, 0, 269, 270, 271, 0, 272, 986, 273, 274,
	937, 935, 936, 943, 939, 938, 942, 275, 276, 277,
	278, 970, 279, 964, 963, 884, 283, 280, 281, 0,
	284, 282, 0, 285, 286, 0, 0, 287, 955, 289,
	0, 290, 291, 0, 292, 293, 0, 294, 295, 890,
	296, 297, 299, 301, 298, 302, 303, 304, 305, 977,
	978, 902, 230, 0, 0, 0, 0, 0, 306, 307,
	308, 962, 0, 0, 0, 309, 0, 310, 0, 0,
	987, 311, 312, 975, 976, 313, 314, 0, 315, 984,
	0, 912, 316, 0, 317, 318, 319, 320, 321, 948,
	949, 952, 374, 989, 322, 323, 0, 324, 325, 326,
	327, 0, 0, 0, 231, 328, 329, 331, 0, 988,
	330, 957, 958, 0, 918, 0, 332, 990, 950, 991,
	333, 334, 335, 992, 336, 0, 0, 0, 337, 338,
	339, 340, 341, 0, 343, 342, 0, 344, 985, 993,
	345, 346, 994, 0, 347, 348, 349, 941, 940, 350,
	351, 352, 353, 0, 354, 355, 357, 359, 356, 358,
	363, 360, 361, 362, 365, 0, 364, 995, 366, 367,
	370, 371, 369, 996, 368, 881, 232, 997, 372, 903,
	951, 373, 965, 375, 376, 0, 0, 377, 0, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 524, 998,
	384, 999, 979, 385, 386, 378, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 395, 526, 527, 980, 396,
	529, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 961, 407, 408, 0, 0, 0, 0,
	0, 0, 409, 0, 411, 412, 413, 410, 414, 415,
	416, 417, 0, 418, 419, 1000, 420, 421, 422, 423,
	891, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 437, 438, 436, 439, 440, 441, 944, 442,
	426, 427, 443, 444, 1001, 445, 446, 959, 0, 447,
	0, 448, 449, 450, 451, 428, 452, 457, 1004, 453,
	454, 455, 456, 981, 0, 459, 460, 879, 458, 0,
	461, 462, 463, 464, 465, 300, 466, 0, 467, 971,
	972, 973, 974, 0, 474, 0, 468, 469, 982, 470,
	983, 901, 471, 472, 473, 0, 475, 476, 0, 885,
	477, 478, 479, 481, 482, 480, 483, 945, 484, 0,
	0, 485, 486, 487, 541, 968, 1003, 0, 489, 488,
	544, 0, 0, 0, 0, 490, 491, 545, 492, 493,
	494, 882, 0, 0, 0, 0, 0, 0, 878, 0,
	0, 0, 0, 0, 0, 876, 877, 0, 0, 0,
	0, 0, 0, 0, 907, 0, 0, 2216, 905, 2207,
	2214, 896, 897, 893, 894, 906, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	947, 911, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 960, 0, 967, 248, 966, 0, 249,
	250, 251, 252, 253, 913, 946, 880, 254, 1005, 1006,
	502, 0, 255, 256, 953, 0, 934, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 986,
	273, 274, 937, 935, 936, 943, 939, 938, 942, 275,
	276, 277, 278, 970, 2210, 964, 963, 884, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	955, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 890, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 977, 978, 902, 230, 0, 0, 0, 0, 0,
	306, 307, 308, 962, 0, 0, 0, 309, 0, 310,
	0, 0, 987, 311, 312, 975, 976, 313, 314, 0,
	315, 984, 0, 912, 316, 0, 317, 318, 319, 2211,
	321, 948, 949, 952, 374, 989, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 231, 328, 329, 331,
	0, 988, 330, 957, 958, 0, 918, 0, 332, 990,
	950, 991, 333, 334, 335, 992, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	985, 993, 345, 346, 994, 0, 347, 348, 349, 941,
	940, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 2212, 2209, 360, 361, 362, 365, 0, 364, 995,
	366, 367, 370, 371, 369, 996, 368, 881, 232, 997,
	372, 903, 951, 373, 965, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 998, 384, 999, 979, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	980, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 961, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 1000, 420, 421,
	422, 423, 891, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 2213, 0, 437, 438, 436, 439, 440, 441,
	944, 442, 426, 427, 443, 444, 1001, 445, 446, 959,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	1004, 453, 454, 455, 456, 981, 0, 459, 460, 879,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 971, 972, 973, 974, 0, 474, 0, 468, 469,
	982, 470, 983, 901, 471, 472, 473, 0, 475, 476,
	0, 885, 477, 478, 479, 481, 482, 480, 483, 945,
	484, 0, 0, 485, 486, 487, 541, 968, 1003, 0,
	489, 488, 544, 0, 0, 0, 0, 490, 491, 545,
	492, 2208, 494, 882, 0, 0, 0, 0, 0, 0,
	878, 0, 0, 0, 0, 0, 0, 876, 877, 0,
	0, 0, 0, 0, 0, 0, 907, 0, 0, 2204,
	905, 2207, 2214, 896, 897, 893, 894, 906, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 947, 911, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 960, 0, 967, 248, 966,
	0, 249, 250, 251, 252, 253, 913, 946, 880, 254,
	1005, 1006, 502, 0, 255, 256, 953, 0, 934, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 986, 273, 274, 937, 935, 936, 943, 939, 938,
	942, 275, 276, 277, 278, 970, 2210, 964, 963, 884,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 955, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 890, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 977, 978, 902, 230, 0, 0, 0,
	0, 0, 306, 307, 308, 962, 0, 0, 0, 309,
	0, 310, 0, 0, 987, 311, 312, 975, 976, 313,
	314, 0, 315, 984, 0, 912, 316, 0, 317, 318,
	319, 2211, 321, 948, 949, 952, 374, 989, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 231, 328,
	329, 331, 0, 988, 330, 957, 958, 0, 918, 0,
	332, 990, 950, 991, 333, 334, 335, 992, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 985, 993, 345, 346, 994, 0, 347, 348,
	349, 941, 940, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 2212, 2209, 360, 361, 362, 365, 0,
	364, 995, 366, 367, 370, 371, 369, 996, 368, 881,
	232, 997, 372, 903, 951, 373, 965, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 998, 384, 999, 979, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 980, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 961, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 1000,
	420, 421, 422, 423, 891, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 2213, 0, 437, 438, 436, 439,
	440, 441, 944, 442, 426, 427, 443, 444, 1001, 445,
	446, 959, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 1004, 453, 454, 455, 456, 981, 0, 459,
	460, 879, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 971, 972, 973, 974, 0, 474, 0,
	468, 469, 982, 470, 983, 901, 471, 472, 473, 0,
	475, 476, 0, 885, 477, 478, 479, 481, 482, 480,
	483, 945, 484, 0, 0, 485, 486, 487, 541, 968,
	1003, 0, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 2208, 494, 882, 0, 0, 0, 0,
	0, 0, 878, 0, 0, 0, 0, 0, 0, 876,
	877, 923, 895, 896, 897, 893, 894, 906, 907, 0,
	0, 0, 905, 0, 0, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 947, 911, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 960, 0, 967, 248, 966,
	0, 249, 250, 251, 252, 253, 913, 946, 880, 254,
	1005, 1006, 502, 0, 255, 256, 953, 0, 934, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 986, 273, 274, 937, 935, 936, 943, 939, 938,
	942, 275, 276, 277, 278, 970, 279, 964, 963, 884,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 955, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 890, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 977, 978, 902, 230, 0, 0, 0,
	0, 0, 306, 307, 308, 962, 0, 0, 0, 309,
	0, 310, 0, 0, 987, 311, 312, 975, 976, 313,
	314, 0, 315, 984, 0, 912, 316, 0, 317, 318,
	319, 320, 321, 948, 949, 952, 374, 989, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 231, 328,
	329, 331, 0, 988, 330, 957, 958, 0, 918, 0,
	332, 990, 950, 991, 333, 334, 335, 992, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 985, 993, 345, 346, 994, 0, 347, 348,
	349, 941, 940, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 995, 366, 367, 370, 371, 369, 996, 368, 881,
	232, 997, 372, 903, 951, 373, 965, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 998, 384, 999, 979, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 980, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 961, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 1000,
	420, 421, 422, 423, 891, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 944, 442, 426, 427, 443, 444, 1001, 445,
	446, 959, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 1004, 453, 454, 455, 456, 981, 0, 459,
	460, 879, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 971, 972, 973, 974, 0, 474, 0,
	468, 469, 982, 470, 983, 901, 471, 472, 473, 0,
	475, 476, 0, 885, 477, 478, 479, 481, 482, 480,
	483, 945, 484, 0, 0, 485, 486, 487, 541, 968,
	1003, 0, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 493, 494, 882, 0, 0, 0, 0,
	0, 0, 878, 0, 0, 0, 0, 0, 0, 876,
	877, 0, 0, 0, 0, 0, 1579, 0, 907, 0,
	0, 0, 905, 923, 895, 896, 897, 893, 894, 906,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 2022, 239, 240, 0,
	0, 0, 0, 0, 947, 911, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 960, 0, 967,
	248, 966, 0, 249, 250, 251, 252, 253, 913, 946,
	880, 254, 1005, 1006, 502, 0, 255, 256, 953, 0,
	934, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 986, 273, 274, 937, 935, 936, 943,
	939, 938, 942, 275, 276, 277, 278, 970, 279, 964,
	963, 884, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 955, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 890, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 977, 978, 902, 230, 0,
	0, 0, 0, 0, 306, 307, 308, 962, 0, 0,
	0, 309, 0, 310, 0, 0, 987, 311, 312, 975,
	976, 313, 314, 0, 315, 984, 0, 912, 316, 0,
	317, 318, 319, 320, 321, 948, 949, 952, 374, 989,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	231, 328, 329, 331, 0, 988, 330, 957, 958, 0,
	918, 0, 332, 990, 950, 991, 333, 334, 335, 992,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 985, 993, 345, 346, 994, 0,
	347, 348, 349, 941, 940, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 995, 366, 367, 370, 371, 369, 996,
	368, 881, 232, 997, 372, 903, 951, 373, 965, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 998, 384, 999, 979, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 980, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 961,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 1000, 420, 421, 422, 423, 891, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 437, 438,
	436, 439, 440, 441, 944, 442, 426, 427, 443, 444,
	1001, 445, 446, 959, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 1004, 453, 454, 455, 456, 981,
	0, 459, 460, 879, 458, 0, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 971, 972, 973, 974, 0,
	474, 0, 468, 469, 982, 470, 983, 901, 471, 472,
	473, 0, 475, 476, 0, 885, 477, 478, 479, 481,
	482, 480, 483, 945, 484, 0, 0, 485, 486, 487,
	541, 968, 1003, 0, 489, 488, 544, 0, 0, 0,
	0, 490, 491, 545, 492, 493, 494, 882, 0, 0,
	0, 0, 0, 0, 878, 0, 0, 0, 0, 0,
	0, 876, 877, 0, 0, 0, 0, 0, 0, 0,
	907, 0, 0, 1248, 905, 923, 895, 896, 897, 893,
	894, 906, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 234, 235, 236, 237, 238, 0, 239,
	240, 0, 0, 0, 0, 0, 947, 911, 0, 0,
	0, 241, 242, 244, 243, 245, 246, 247, 496, 960,
	0, 967, 248, 966, 0, 249, 250, 251, 252, 253,
	913, 946, 880, 254, 1005, 1006, 502, 0, 255, 256,
	953, 0, 934, 0, 257, 258, 259, 260, 261, 262,
	263, 0, 0, 265, 266, 267, 264, 0, 268, 0,
	269, 270, 271, 0, 272, 986, 273, 274, 937, 935,
	936, 943, 939, 938, 942, 275, 276, 277, 278, 970,
	279, 964, 963, 884, 283, 280, 281, 0, 284, 282,
	0, 285, 286, 0, 0, 287, 955, 289, 0, 290,
	291, 0, 292, 293, 0, 294, 295, 890, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 977, 978, 902,
	230, 0, 0, 0, 0, 0, 306, 307, 308, 962,
	0, 0, 0, 309, 0, 310, 0, 0, 987, 311,
	312, 975, 976, 313, 314, 0, 315, 984, 0, 912,
	316, 0, 317, 318, 319, 320, 321, 1247, 949, 952,
	374, 989, 322, 323, 0, 324, 325, 326, 327, 0,
	0, 0, 231, 328, 329, 331, 0, 988, 330, 957,
	958, 0, 918, 0, 332, 990, 950, 991, 333, 334,
	335, 992, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 0, 343, 342, 0, 344, 985, 993, 345, 346,
	994, 0, 347, 348, 349, 941, 940, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 364, 995, 366, 367, 370, 371,
	369, 996, 368, 881, 232, 997, 372, 903, 951, 373,
	965, 375, 376, 0, 0, 377, 0, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 524, 998, 384, 999,
	979, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 395, 526, 527, 980, 396, 529, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 961, 407, 408, 0, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	0, 418, 419, 1000, 420, 421, 422, 423, 891, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	437, 438, 436, 439, 440, 441, 944, 442, 426, 427,
	443, 444, 1001, 445, 446, 959, 0, 447, 0, 448,
	449, 450, 451, 428, 452, 457, 1004, 453, 454, 455,
	456, 981, 0, 459, 460, 879, 458, 0, 461, 462,
	463, 464, 465, 300, 466, 0, 467, 971, 972, 973,
	974, 0, 474, 0, 468, 469, 982, 470, 983, 901,
	471, 472, 473, 0, 475, 476, 0, 885, 477, 478,
	479, 481, 482, 480, 483, 945, 484, 0, 0, 485,
	486, 487, 541, 968, 1003, 0, 489, 488, 544, 0,
	0, 0, 0, 490, 491, 545, 492, 493, 494, 882,
	0, 0, 0, 0, 0, 0, 878, 0, 0, 0,
	0, 0, 0, 876, 877, 0, 0, 0, 0, 0,
	0, 0, 907, 0, 0, 1242, 905, 923, 895, 896,
	897, 893, 894, 906, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 234, 235, 236, 237, 238,
	0, 239, 240, 0, 0, 0, 0, 0, 947, 911,
	0, 0, 0, 241, 242, 244, 243, 245, 246, 247,
	496, 960, 0, 967, 248, 966, 0, 249, 250, 251,
	252, 253, 913, 946, 880, 254, 1005, 1006, 502, 0,
	255, 256, 953, 0, 934, 0, 257, 258, 259, 260,
	261, 262, 263, 0, 0, 265, 266, 267, 264, 0,
	268, 0, 269, 270, 271, 0, 272, 986, 273, 274,
	937, 935, 936, 943, 939, 938, 942, 275, 276, 277,
	278, 970, 279, 964, 963, 884, 283, 280, 281, 0,
	284, 282, 0, 285, 286, 0, 0, 287, 955, 289,
	0, 290, 291, 0, 292, 293, 0, 294, 295, 890,
	296, 297, 299, 301, 298, 302, 303, 304, 305, 977,
	978, 902, 230, 0, 0, 0, 0, 0, 306, 307,
	308, 962, 0, 0, 0, 309, 0, 310, 0, 0,
	987, 311, 312, 975, 976, 313, 314, 0, 315, 984,
	0, 912, 316, 0, 317, 318, 319, 320, 321, 1241,
	949, 952, 374, 989, 322, 323, 0, 324, 325, 326,
	327, 0, 0, 0, 231, 328, 329, 331, 0, 988,
	330, 957, 958, 0, 918, 0, 332, 990, 950, 991,
	333, 334, 335, 992, 336, 0, 0, 0, 337, 338,
	339, 340, 341, 0, 343, 342, 0, 344, 985, 993,
	345, 346, 994, 0, 347, 348, 349, 941, 940, 350,
	351, 352, 353, 0, 354, 355, 357, 359, 356, 358,
	363, 360, 361, 362, 365, 0, 364, 995, 366, 367,
	370, 371, 369, 996, 368, 881, 232, 997, 372, 903,
	951, 373, 965, 375, 376, 0, 0, 377, 0, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 524, 998,
	384, 999, 979, 385, 386, 378, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 395, 526, 527, 980, 396,
	529, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 961, 407, 408, 0, 0, 0, 0,
	0, 0, 409, 0, 411, 412, 413, 410, 414, 415,
	416, 417, 0, 418, 419, 1000, 420, 421, 422, 423,
	891, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 437, 438, 436, 439, 440, 441, 944, 442,
	426, 427, 443, 444, 1001, 445, 446, 959, 0, 447,
	0, 448, 449, 450, 451, 428, 452, 457, 1004, 453,
	454, 455, 456, 981, 0, 459, 460, 879, 458, 0,
	461, 462, 463, 464, 465, 300, 466, 0, 467, 971,
	972, 973, 974, 0, 474, 0, 468, 469, 982, 470,
	983, 901, 471, 472, 473, 0, 475, 476, 0, 885,
	477, 478, 479, 481, 482, 480, 483, 945, 484, 0,
	0, 485, 486, 487, 541, 968, 1003, 0, 489, 488,
	544, 0, 0, 0, 0, 490, 491, 545, 492, 493,
	494, 882, 0, 0, 0, 0, 0, 0, 878, 0,
	0, 0, 0, 0, 0, 876, 877, 0, 0, 0,
	0, 0, 0, 0, 907, 0, 0, 1237, 905, 923,
	895, 896, 897, 893, 894, 906, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	947, 911, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 960, 0, 967, 248, 966, 0, 249,
	250, 251, 252, 253, 913, 946, 880, 254, 1005, 1006,
	502, 0, 255, 256, 953, 0, 934, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 986,
	273, 274, 937, 935, 936, 943, 939, 938, 942, 275,
	276, 277, 278, 970, 279, 964, 963, 884, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	955, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 890, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 977, 978, 902, 230, 0, 0, 0, 0, 0,
	306, 307, 308, 962, 0, 0, 0, 309, 0, 310,
	0, 0, 987, 311, 312, 975, 976, 313, 314, 0,
	315, 984, 0, 912, 316, 0, 317, 318, 319, 320,
	321, 948, 949, 952, 374, 989, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 231, 328, 329, 331,
	0, 988, 330, 957, 958, 0, 918, 0, 332, 990,
	950, 991, 333, 334, 335, 992, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	985, 993, 345, 346, 994, 0, 347, 348, 349, 941,
	940, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 995,
	366, 367, 370, 371, 369, 996, 368, 881, 232, 997,
	372, 903, 951, 373, 965, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 998, 384, 999, 979, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	980, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 961, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 1000, 420, 421,
	422, 423, 891, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	944, 442, 426, 427, 443, 444, 1001, 445, 446, 959,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	1004, 453, 454, 455, 456, 981, 0, 459, 460, 879,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 971, 972, 973, 974, 0, 474, 0, 468, 469,
	982, 470, 983, 901, 471, 472, 473, 0, 475, 476,
	0, 885, 477, 478, 479, 481, 482, 480, 483, 945,
	484, 0, 0, 485, 486, 487, 541, 968, 1003, 0,
	489, 488, 544, 0, 0, 0, 0, 490, 491, 545,
	492, 493, 494, 882, 0, 0, 0, 0, 0, 0,
	878, 0, 0, 0, 0, 0, 0, 876, 877, 923,
	895, 896, 897, 893, 894, 906, 907, 0, 0, 0,
	905, 0, 0, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	947, 911, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 960, 0, 967, 248, 966, 0, 249,
	250, 251, 252, 253, 913, 946, 880, 254, 1005, 1006,
	502, 0, 255, 256, 953, 0, 934, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 986,
	273, 274, 937, 935, 936, 943, 939, 938, 942, 275,
	276, 277, 278, 970, 279, 964, 963, 884, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	955, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 890, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 977, 978, 902, 230, 0, 0, 0, 0, 0,
	306, 307, 308, 962, 0, 0, 0, 309, 0, 310,
	0, 0, 987, 311, 312, 975, 976, 313, 314, 0,
	315, 984, 0, 912, 316, 0, 317, 318, 319, 320,
	321, 948, 949, 952, 374, 989, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 231, 328, 329, 331,
	0, 988, 330, 957, 958, 0, 918, 0, 332, 990,
	950, 991, 333, 334, 335, 992, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	985, 993, 345, 346, 994, 0, 347, 348, 349, 941,
	940, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 995,
	366, 367, 370, 371, 369, 996, 368, 881, 232, 997,
	372, 903, 951, 373, 965, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 998, 384, 999, 979, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	980, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 961, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 1000, 420, 421,
	422, 423, 891, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	944, 442, 426, 427, 443, 444, 1001, 445, 446, 959,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	1004, 453, 454, 455, 456, 981, 0, 459, 460, 879,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 971, 972, 973, 974, 0, 474, 0, 468, 469,
	982, 470, 983, 901, 471, 472, 473, 0, 475, 476,
	0, 885, 477, 478, 479, 481, 482, 480, 483, 945,
	484, 0, 0, 485, 486, 487, 541, 968, 1003, 0,
	489, 488, 544, 0, 0, 0, 0, 490, 491, 545,
	492, 493, 494, 882, 0, 0, 0, 0, 0, 0,
	878, 0, 0, 0, 0, 0, 0, 876, 877, 923,
	895, 896, 897, 893, 894, 906, 907, 0, 0, 0,
	905, 0, 0, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	947, 911, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 960, 0, 967, 248, 966, 0, 249,
	250, 251, 252, 253, 913, 946, 880, 254, 1005, 1006,
	502, 0, 255, 256, 953, 0, 934, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 986,
	273, 3801, 937, 935, 936, 943, 939, 938, 942, 275,
	276, 277, 278, 970, 279, 964, 963, 884, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	955, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 890, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 977, 978, 902, 230, 0, 0, 0, 0, 0,
	306, 307, 308, 962, 0, 0, 0, 309, 0, 310,
	0, 0, 987, 311, 312, 975, 976, 313, 314, 0,
	315, 984, 0, 912, 316, 0, 317, 318, 319, 320,
	321, 948, 949, 952, 374, 989, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 231, 328, 329, 331,
	0, 988, 330, 957, 958, 0, 918, 0, 332, 990,
	950, 991, 333, 334, 335, 992, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	985, 993, 345, 346, 994, 0, 347, 348, 349, 941,
	940, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 995,
	366, 367, 370, 371, 369, 996, 368, 881, 232, 997,
	372, 903, 951, 373, 965, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 998, 384, 999, 979, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	980, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 961, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 1000, 420, 421,
	422, 423, 891, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	944, 442, 426, 427, 443, 444, 1001, 445, 446, 959,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	1004, 453, 454, 455, 456, 981, 0, 459, 460, 879,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 971, 972, 973, 974, 0, 474, 0, 468, 469,
	982, 470, 983, 901, 471, 472, 473, 0, 3800, 476,
	0, 885, 477, 478, 479, 481, 482, 480, 483, 945,
	484, 0, 0, 485, 486, 487, 541, 968, 1003, 0,
	489, 488, 544, 0, 0, 0, 0, 490, 491, 545,
	492, 493, 494, 882, 0, 0, 0, 0, 0, 0,
	878, 0, 0, 0, 0, 0, 0, 876, 877, 923,
	895, 896, 897, 893, 894, 906, 907, 0, 0, 0,
	905, 0, 0, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	947, 911, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 3799, 960, 0, 967, 248, 966, 0, 249,
	250, 251, 252, 253, 913, 946, 880, 254, 1005, 1006,
	502, 0, 255, 256, 953, 0, 934, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 986,
	273, 3801, 937, 935, 936, 943, 939, 938, 942, 275,
	276, 277, 278, 970, 279, 964, 963, 884, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	955, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 890, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 977, 978, 902, 230, 0, 0, 0, 0, 0,
	306, 307, 308, 962, 0, 0, 0, 309, 0, 310,
	0, 0, 987, 311, 312, 975, 976, 313, 314, 0,
	315, 984, 0, 912, 316, 0, 317, 318, 319, 320,
	321, 948, 949, 952, 374, 989, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 231, 328, 329, 331,
	0, 988, 330, 957, 958, 0, 918, 0, 332, 990,
	950, 991, 333, 334, 335, 992, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	985, 993, 345, 346, 994, 0, 347, 348, 349, 941,
	940, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 995,
	366, 367, 370, 371, 369, 996, 368, 881, 232, 997,
	372, 903, 951, 373, 965, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 998, 384, 999, 979, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	980, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 961, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 1000, 420, 421,
	422, 423, 891, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	944, 442, 426, 427, 443, 444, 1001, 445, 446, 959,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	1004, 453, 454, 455, 456, 981, 0, 459, 460, 879,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 971, 972, 973, 974, 0, 474, 0, 468, 469,
	982, 470, 983, 901, 471, 472, 473, 0, 3800, 476,
	0, 885, 477, 478, 479, 481, 482, 480, 483, 945,
	484, 0, 0, 485, 486, 487, 541, 968, 1003, 0,
	489, 488, 544, 0, 0, 0, 0, 490, 491, 545,
	492, 493, 494, 882, 0, 0, 0, 0, 0, 0,
	878, 0, 0, 0, 0, 0, 0, 876, 877, 923,
	895, 896, 897, 2593, 2594, 906, 907, 0, 0, 0,
	905, 0, 0, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	947, 911, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 960, 0, 967, 248, 966, 0, 249,
	250, 251, 252, 253, 913, 946, 880, 254, 1005, 1006,
	502, 0, 255, 256, 953, 0, 934, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 986,
	273, 274, 937, 935, 936, 943, 939, 938, 942, 275,
	276, 277, 278, 970, 279, 964, 963, 884, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	955, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 890, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 977, 978, 902, 230, 0, 0, 0, 0, 0,
	306, 307, 308, 962, 0, 0, 0, 309, 0, 310,
	0, 0, 987, 311, 312, 975, 976, 313, 314, 0,
	315, 984, 0, 912, 316, 0, 317, 318, 319, 320,
	321, 948, 949, 952, 374, 989, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 231, 328, 329, 331,
	0, 988, 330, 957, 958, 0, 918, 0, 332, 990,
	950, 991, 333, 334, 335, 992, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	985, 993, 345, 346, 994, 0, 347, 348, 349, 941,
	940, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 995,
	366, 367, 370, 371, 369, 996, 368, 881, 232, 997,
	372, 903, 951, 373, 965, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 998, 384, 999, 979, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	980, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 961, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 1000, 420, 421,
	422, 423, 891, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	944, 442, 426, 427, 443, 444, 1001, 445, 446, 959,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	1004, 453, 454, 455, 456, 981, 0, 459, 460, 879,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 971, 972, 973, 974, 0, 474, 0, 468, 469,
	982, 470, 983, 901, 471, 472, 473, 0, 475, 476,
	0, 885, 477, 478, 479, 481, 482, 480, 483, 945,
	484, 0, 0, 485, 486, 487, 541, 968, 1003, 0,
	489, 488, 544, 0, 0, 0, 0, 490, 491, 545,
	492, 493, 494, 882, 0, 0, 0, 0, 0, 0,
	878, 0, 0, 0, 0, 0, 0, 876, 877, 923,
	895, 896, 897, 2591, 2592, 906, 907, 0, 0, 0,
	905, 0, 0, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	947, 911, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 960, 0, 967, 248, 966, 0, 249,
	250, 251, 252, 253, 913, 946, 880, 254, 1005, 1006,
	502, 0, 255, 256, 953, 0, 934, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 986,
	273, 274, 937, 935, 936, 943, 939, 938, 942, 275,
	276, 277, 278, 970, 279, 964, 963, 884, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	955, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 890, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 977, 978, 902, 230, 0, 0, 0, 0, 0,
	306, 307, 308, 962, 0, 0, 0, 309, 0, 310,
	0, 0, 987, 311, 312, 975, 976, 313, 314, 0,
	315, 984, 0, 912, 316, 0, 317, 318, 319, 320,
	321, 948, 949, 952, 374, 989, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 231, 328, 329, 331,
	0, 988, 330, 957, 958, 0, 918, 0, 332, 990,
	950, 991, 333, 334, 335, 992, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	985, 993, 345, 346, 994, 0, 347, 348, 349, 941,
	940, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 995,
	366, 367, 370, 371, 369, 996, 368, 881, 232, 997,
	372, 903, 951, 373, 965, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 998, 384, 999, 979, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	980, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 961, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 1000, 420, 421,
	422, 423, 891, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	944, 442, 426, 427, 443, 444, 1001, 445, 446, 959,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	1004, 453, 454, 455, 456, 981, 0, 459, 460, 879,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 971, 972, 973, 974, 0, 474, 0, 468, 469,
	982, 470, 983, 901, 471, 472, 473, 0, 475, 476,
	0, 885, 477, 478, 479, 481, 482, 480, 483, 945,
	484, 0, 0, 485, 486, 487, 541, 968, 1003, 0,
	489, 488, 544, 0, 0, 0, 0, 490, 491, 545,
	492, 493, 494, 882, 0, 0, 0, 0, 0, 0,
	878, 0, 0, 0, 0, 0, 0, 876, 877, 923,
	895, 896, 897, 893, 894, 906, 907, 0, 0, 0,
	905, 0, 0, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	947, 911, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 960, 0, 967, 248, 966, 0, 249,
	250, 251, 252, 253, 913, 946, 880, 254, 1005, 1006,
	502, 0, 255, 256, 953, 0, 934, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 986,
	273, 274, 937, 935, 936, 943, 939, 938, 942, 275,
	276, 277, 278, 970, 279, 964, 963, 884, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	955, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 890, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 977, 978, 902, 230, 0, 0, 0, 0, 0,
	306, 307, 308, 962, 0, 0, 0, 309, 0, 310,
	0, 0, 987, 311, 312, 975, 976, 313, 314, 0,
	315, 984, 0, 912, 316, 0, 317, 318, 319, 320,
	321, 948, 949, 952, 374, 989, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 231, 328, 329, 331,
	0, 988, 330, 957, 958, 0, 918, 0, 332, 990,
	950, 991, 333, 334, 335, 992, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	985, 993, 345, 346, 994, 0, 347, 348, 349, 941,
	940, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 995,
	366, 367, 370, 371, 369, 996, 368, 881, 232, 997,
	372, 903, 951, 373, 965, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 998, 384, 999, 979, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	980, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 961, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 1000, 420, 421,
	422, 423, 891, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	944, 442, 426, 427, 443, 444, 1001, 445, 446, 959,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	1004, 453, 454, 455, 456, 981, 0, 459, 460, 879,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 971, 972, 973, 974, 0, 474, 0, 468, 469,
	982, 470, 983, 901, 471, 472, 473, 0, 475, 476,
	0, 885, 477, 478, 479, 481, 482, 480, 483, 945,
	484, 0, 0, 485, 486, 487, 541, 968, 1003, 0,
	489, 488, 544, 0, 0, 0, 0, 490, 491, 545,
	492, 493, 494, 882, 0, 0, 0, 0, 0, 0,
	878, 0, 0, 0, 0, 0, 0, 2030, 2031, 923,
	895, 896, 897, 893, 894, 906, 907, 0, 0, 0,
	905, 0, 0, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	947, 911, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 960, 0, 967, 248, 966, 0, 249,
	250, 251, 252, 253, 913, 946, 0, 254, 1005, 1006,
	502, 0, 255, 256, 953, 0, 934, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 986,
	273, 274, 937, 935, 936, 943, 939, 938, 942, 275,
	276, 277, 278, 970, 279, 964, 963, 0, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	955, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 890, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 977, 978, 902, 230, 0, 0, 0, 0, 0,
	306, 307, 308, 962, 0, 0, 0, 309, 0, 310,
	0, 0, 987, 311, 312, 975, 976, 313, 314, 0,
	315, 984, 0, 912, 316, 0, 317, 318, 319, 320,
	321, 948, 949, 952, 374, 989, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 231, 328, 329, 331,
	0, 988, 330, 957, 958, 0, 918, 0, 332, 990,
	950, 991, 333, 334, 335, 992, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	985, 993, 345, 346, 994, 0, 347, 348, 349, 941,
	940, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 995,
	366, 367, 370, 371, 369, 996, 368, 0, 232, 997,
	372, 903, 951, 373, 965, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 998, 384, 999, 979, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	980, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 961, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 1000, 420, 421,
	422, 423, 891, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	944, 442, 426, 427, 443, 444, 1001, 445, 446, 959,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	1004, 453, 454, 455, 456, 981, 0, 459, 460, 0,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 971, 972, 973, 974, 0, 474, 0, 468, 469,
	982, 470, 983, 901, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 483, 945,
	484, 0, 0, 485, 486, 487, 541, 968, 1003, 0,
	489, 488, 544, 0, 0, 0, 0, 490, 491, 545,
	492, 493, 494, 923, 895, 896, 897, 893, 894, 906,
	2226, 0, 0, 0, 0, 0, 0, 2224, 2225, 0,
	233, 234, 235, 236, 237, 238, 907, 239, 240, 0,
	905, 0, 0, 0, 947, 911, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 960, 0, 967,
	248, 966, 0, 249, 250, 251, 252, 253, 913, 946,
	0, 254, 1005, 1006, 502, 0, 255, 256, 953, 0,
	934, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 986, 273, 274, 937, 935, 936, 943,
	939, 938, 942, 275, 276, 277, 278, 970, 279, 964,
	963, 0, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 955, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 890, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 977, 978, 902, 230, 0,
	0, 0, 0, 0, 306, 307, 308, 962, 0, 0,
	0, 309, 0, 310, 0, 0, 987, 311, 312, 975,
	976, 313, 314, 0, 315, 984, 0, 912, 316, 0,
	317, 318, 319, 320, 321, 948, 949, 952, 374, 989,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	231, 328, 329, 331, 0, 988, 330, 957, 958, 0,
	918, 0, 332, 990, 950, 991, 333, 334, 335, 992,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 985, 993, 345, 346, 994, 0,
	347, 348, 349, 941, 940, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 995, 366, 367, 370, 371, 369, 996,
	368, 0, 232, 997, 372, 903, 951, 373, 965, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 998, 384, 999, 979, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 980, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 961,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 1000, 420, 421, 422, 423, 2586, 2587, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 437, 438,
	436, 439, 440, 441, 944, 442, 426, 427, 443, 444,
	1001, 445, 446, 959, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 1004, 453, 454, 455, 456, 981,
	0, 459, 460, 0, 458, 0, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 971, 972, 973, 974, 0,
	474, 0, 468, 469, 982, 470, 983, 901, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 483, 945, 484, 0, 0, 485, 486, 487,
	541, 968, 1003, 0, 489, 488, 544, 0, 0, 0,
	0, 490, 491, 545, 492, 493, 494, 923, 895, 896,
	897, 893, 894, 906, 0, 0, 0, 0, 0, 0,
	0, 1772, 1773, 0, 233, 234, 235, 236, 237, 238,
	907, 239, 240, 0, 905, 0, 0, 0, 947, 911,
	0, 0, 0, 241, 242, 244, 243, 245, 246, 247,
	0, 960, 0, 967, 248, 966, 0, 249, 250, 251,
	252, 253, 913, 946, 880, 254, 1005, 1006, 502, 0,
	255, 256, 953, 0, 934, 0, 257, 258, 259, 260,
	261, 262, 263, 0, 0, 265, 266, 267, 264, 0,
	268, 0, 269, 270, 271, 0, 272, 986, 273, 3801,
	937, 935, 936, 943, 939, 938, 942, 275, 276, 277,
	278, 970, 279, 964, 963, 884, 283, 280, 281, 0,
	284, 282, 0, 285, 286, 0, 0, 287, 955, 289,
	0, 290, 291, 0, 292, 293, 0, 294, 295, 890,
	296, 297, 299, 301, 298, 302, 303, 304, 305, 977,
	978, 902, 230, 0, 0, 0, 0, 0, 306, 307,
	308, 962, 0, 0, 0, 309, 0, 310, 0, 0,
	987, 311, 312, 975, 976, 313, 314, 0, 315, 984,
	0, 912, 316, 0, 317, 318, 319, 320, 321, 948,
	949, 952, 374, 0, 322, 323, 0, 324, 325, 326,
	327, 0, 0, 0, 231, 328, 329, 331, 0, 988,
	330, 957, 958, 0, 918, 0, 332, 0, 950, 0,
	333, 334, 335, 992, 336, 0, 0, 0, 337, 338,
	339, 340, 341, 0, 343, 342, 0, 344, 985, 993,
	345, 346, 0, 0, 347, 348, 349, 941, 940, 350,
	351, 352, 353, 0, 354, 355, 357, 359, 356, 358,
	363, 360, 361, 362, 365, 0, 364, 995, 366, 367,
	370, 371, 369, 996, 368, 881, 232, 0, 372, 903,
	951, 373, 965, 375, 376, 0, 0, 377, 0, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 524, 998,
	384, 999, 979, 385, 386, 378, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 395, 526, 527, 980, 396,
	529, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 961, 407, 408, 0, 0, 0, 0,
	0, 0, 409, 0, 411, 412, 413, 410, 414, 415,
	416, 417, 0, 418, 419, 1000, 420, 421, 422, 423,
	891, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 437, 438, 436, 439, 440, 441, 944, 442,
	426, 427, 443, 444, 0, 445, 446, 959, 0, 447,
	0, 448, 449, 450, 451, 428, 452, 457, 1004, 453,
	454, 455, 456, 981, 0, 459, 460, 879, 458, 0,
	461, 462, 463, 464, 465, 300, 466, 0, 467, 971,
	972, 973, 974, 0, 474, 0, 468, 469, 982, 470,
	983, 901, 471, 472, 473, 0, 3800, 476, 0, 885,
	477, 478, 479, 481, 482, 480, 483, 945, 484, 0,
	0, 485, 486, 487, 541, 968, 1003, 0, 489, 488,
	544, 0, 0, 0, 0, 490, 491, 545, 492, 493,
	494, 923, 895, 896, 897, 893, 894, 906, 0, 0,
	0, 0, 0, 0, 0, 876, 877, 0, 233, 234,
	235, 236, 237, 238, 907, 239, 240, 0, 905, 0,
	0, 0, 947, 911, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 960, 0, 967, 248, 966,
	0, 249, 250, 251, 252, 253, 0, 946, 0, 254,
	1005, 1006, 502, 0, 255, 256, 953, 0, 934, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 986, 273, 274, 937, 935, 936, 943, 939, 938,
	942, 275, 276, 277, 278, 970, 279, 964, 963, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 955, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 977, 978, 902, 230, 0, 0, 0,
	0, 0, 306, 307, 308, 962, 0, 0, 0, 309,
	0, 310, 0, 0, 987, 311, 312, 975, 976, 313,
	314, 0, 315, 984, 0, 912, 316, 0, 317, 318,
	319, 320, 321, 948, 949, 952, 374, 989, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 231, 328,
	329, 331, 0, 988, 330, 957, 958, 0, 918, 0,
	332, 990, 950, 991, 333, 334, 335, 992, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 985, 993, 345, 346, 994, 0, 347, 348,
	349, 941, 940, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 995, 366, 367, 370, 371, 369, 996, 368, 0,
	232, 997, 372, 903, 951, 373, 965, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 998, 384, 999, 979, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 980, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 961, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 1000,
	420, 421, 422, 423, 891, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 944, 442, 426, 427, 443, 444, 1001, 445,
	446, 959, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 1004, 453, 454, 455, 456, 981, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 971, 972, 973, 974, 0, 474, 0,
	468, 469, 982, 470, 983, 901, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 945, 484, 0, 0, 485, 486, 487, 541, 968,
	1003, 0, 489, 488, 544, 0, 869, 0, 1043, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 234, 235, 236, 237,
	238, 0, 239, 240, 0, 0, 0, 0, 907, 947,
	0, 0, 905, 0, 241, 242, 244, 243, 245, 246,
	247, 496, 497, 0, 498, 248, 499, 0, 249, 250,
	251, 252, 253, 0, 946, 0, 254, 500, 501, 502,
	0, 255, 256, 953, 0, 934, 0, 257, 258, 259,
	260, 261, 262, 263, 0, 0, 265, 266, 267, 264,
	0, 268, 0, 269, 270, 271, 0, 272, 986, 273,
	274, 937, 935, 936, 943, 939, 938, 942, 275, 276,
	277, 278, 0, 279, 504, 505, 0, 283, 280, 281,
	0, 284, 282, 0, 285, 286, 0, 0, 287, 288,
	289, 0, 290, 291, 0, 292, 293, 0, 294, 295,
	506, 296, 297, 299, 301, 298, 302, 303, 304, 305,
	977, 978, 0, 230, 0, 0, 0, 0, 0, 306,
	307, 308, 509, 0, 0, 0, 309, 0, 310, 0,
	0, 987, 311, 312, 510, 511, 313, 314, 0, 315,
	984, 0, 513, 316, 0, 317, 318, 319, 320, 321,
	948, 949, 952, 374, 989, 322, 323, 0, 324, 325,
	326, 327, 0, 0, 0, 231, 328, 329, 331, 0,
	988, 330, 517, 518, 0, 519, 0, 332, 990, 950,
	991, 333, 334, 335, 992, 336, 0, 0, 0, 337,
	338, 339, 340, 341, 1029, 343, 342, 0, 344, 985,
	993, 345, 346, 994, 0, 347, 348, 349, 941, 940,
	350, 351, 352, 353, 0, 354, 355, 357, 359, 356,
	358, 363, 360, 361, 362, 365, 0, 364, 995, 366,
	367, 370, 371, 369, 996, 368, 0, 232, 997, 372,
	0, 951, 373, 523, 375, 376, 0, 0, 377, 0,
	0, 1035, 379, 380, 381, 0, 0, 382, 383, 524,
	998, 384, 999, 979, 385, 386, 378, 387, 388, 389,
	390, 391, 392, 393, 0, 394, 395, 526, 527, 980,
	396, 529, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 530, 407, 408, 0, 0, 0,
	0, 0, 0, 409, 0, 411, 412, 413, 410, 414,
	415, 416, 417, 0, 418, 419, 1000, 420, 421, 422,
	423, 531, 1037, 0, 425, 429, 430, 431, 432, 433,
	434, 435, 193, 437, 438, 436, 439, 440, 441, 944,
	442, 426, 427, 443, 444, 1001, 445, 446, 532, 0,
	447, 0, 448, 449, 450, 451, 428, 452, 457, 533,
	453, 454, 455, 456, 981, 0, 459, 460, 0, 458,
	195, 461, 462, 463, 464, 465, 300, 466, 0, 467,
	535, 536, 537, 538, 0, 474, 0, 468, 469, 982,
	470, 983, 0, 471, 472, 473, 0, 475, 476, 0,
	0, 477, 478, 479, 481, 482, 480, 483, 945, 484,
	0, 0, 485, 486, 487, 1359, 542, 543, 0, 489,
	488, 544, 0, 1043, 0, 187, 490, 491, 545, 492,
	493, 494, 0, 188, 0, 0, 0, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 1033, 947, 1665, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 497, 0, 498,
	248, 499, 0, 249, 250, 251, 252, 253, 0, 946,
	0, 254, 500, 501, 502, 0, 255, 256, 953, 0,
	934, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 986, 273, 274, 937, 935, 936, 943,
	939, 938, 942, 275, 276, 277, 278, 0, 279, 504,
	505, 0, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 288, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 506, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 977, 978, 0, 230, 0,
	0, 0, 0, 0, 306, 307, 308, 509, 0, 0,
	0, 309, 0, 310, 0, 0, 987, 311, 312, 510,
	511, 313, 314, 0, 315, 984, 0, 513, 316, 0,
	317, 318, 319, 320, 321, 948, 949, 952, 374, 989,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	231, 328, 329, 331, 0, 988, 330, 517, 518, 0,
	519, 0, 332, 990, 950, 991, 333, 334, 335, 992,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 1029,
	343, 342, 0, 344, 985, 993, 345, 346, 994, 0,
	347, 348, 349, 941, 940, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 995, 366, 367, 370, 371, 369, 996,
	368, 0, 232, 997, 372, 0, 951, 373, 523, 375,
	376, 0, 0, 377, 0, 0, 1035, 379, 380, 381,
	0, 0, 382, 383, 524, 998, 384, 999, 979, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 980, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 530,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 1000, 420, 421, 422, 423, 531, 1037, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 193, 437, 438,
	436, 439, 440, 441, 944, 442, 426, 427, 443, 444,
	1001, 445, 446, 532, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 533, 453, 454, 455, 456, 981,
	0, 459, 460, 0, 458, 195, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 535, 536, 537, 538, 0,
	474, 0, 468, 469, 982, 470, 983, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 483, 945, 484, 0, 0, 485, 486, 487,
	1359, 542, 543, 0, 489, 488, 544, 0, 0, 0,
	187, 490, 491, 545, 492, 493, 494, 0, 188, 0,
	0, 0, 2746, 0, 1043, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1033, 0,
	1665, 233, 234, 235, 236, 237, 238, 0, 239, 240,
	0, 0, 0, 0, 0, 947, 0, 0, 0, 0,
	241, 242, 244, 243, 245, 246, 247, 496, 497, 0,
	498, 248, 499, 0, 249, 250, 251, 252, 253, 0,
	946, 0, 254, 500, 501, 502, 0, 255, 256, 953,
	0, 934, 0, 257, 258, 259, 260, 261, 262, 263,
	0, 0, 265, 266, 267, 264, 0, 268, 0, 269,
	270, 271, 0, 272, 986, 273, 274, 937, 935, 936,
	943, 939, 938, 942, 275, 276, 277, 278, 0, 279,
	504, 505, 0, 283, 280, 281, 0, 284, 282, 0,
	285, 286, 0, 0, 287, 288, 289, 0, 290, 291,
	0, 292, 293, 0, 294, 295, 506, 296, 297, 299,
	301, 298, 302, 303, 304, 305, 977, 978, 0, 230,
	0, 0, 0, 0, 0, 306, 307, 308, 509, 0,
	0, 0, 309, 0, 310, 0, 0, 987, 311, 312,
	510, 511, 313, 314, 0, 315, 984, 0, 513, 316,
	0, 317, 318, 319, 320, 321, 948, 949, 952, 374,
	989, 322, 323, 0, 324, 325, 326, 327, 0, 0,
	0, 231, 328, 329, 331, 0, 988, 330, 517, 518,
	0, 519, 0, 332, 990, 950, 991, 333, 334, 335,
	992, 336, 0, 0, 0, 337, 338, 339, 340, 341,
	1029, 343, 342, 0, 344, 985, 993, 345, 346, 994,
	0, 347, 348, 349, 941, 940, 350, 351, 352, 353,
	0, 354, 355, 357, 359, 356, 358, 363, 360, 361,
	362, 365, 0, 364, 995, 366, 367, 370, 371, 369,
	996, 368, 0, 232, 997, 372, 0, 951, 373, 523,
	375, 376, 0, 0, 377, 0, 0, 1035, 379, 380,
	381, 0, 0, 382, 383, 524, 998, 384, 999, 979,
	385, 386, 378, 387, 388, 389, 390, 391, 392, 393,
	0, 394, 395, 526, 527, 980, 396, 529, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 404, 405, 406,
	530, 407, 408, 0, 0, 0, 0, 0, 0, 409,
	0, 411, 412, 413, 410, 414, 415, 416, 417, 0,
	418, 419, 1000, 420, 421, 422, 423, 531, 1037, 0,
	425, 429, 430, 431, 432, 433, 434, 435, 0, 437,
	438, 436, 439, 440, 441, 944, 442, 426, 427, 443,
	444, 1001, 445, 446, 532, 0, 447, 0, 448, 449,
	450, 451, 428, 452, 457, 533, 453, 454, 455, 456,
	981, 0, 459, 460, 0, 458, 0, 461, 462, 463,
	464, 465, 300, 466, 0, 467, 535, 536, 537, 538,
	0, 474, 0, 468, 469, 982, 470, 983, 0, 471,
	472, 473, 0, 475, 476, 0, 0, 477, 478, 479,
	481, 482, 480, 483, 945, 484, 0, 0, 485, 486,
	487, 541, 542, 543, 0, 489, 488, 544, 0, 1025,
	0, 1043, 490, 491, 545, 492, 493, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 1033,
	0, 1031, 947, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 946, 0, 254,
	500, 501, 502, 0, 255, 256, 953, 0, 934, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 986, 273, 274, 937, 935, 936, 943, 939, 938,
	942, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 977, 978, 0, 230, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 987, 311, 312, 510, 511, 313,
	314, 0, 315, 984, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 948, 949, 952, 374, 989, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 231, 328,
	329, 331, 0, 988, 330, 517, 518, 0, 519, 0,
	332, 990, 950, 991, 333, 334, 335, 992, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 1029, 343, 342,
	0, 344, 985, 993, 345, 346, 994, 0, 347, 348,
	349, 941, 940, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 995, 366, 367, 370, 371, 369, 996, 368, 0,
	232, 997, 372, 0, 951, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 1035, 379, 380, 381, 0, 0,
	382, 383, 524, 998, 384, 999, 979, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 980, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 1000,
	420, 421, 422, 423, 531, 1037, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 944, 442, 426, 427, 443, 444, 1001, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 981, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 982, 470, 983, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 945, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 0, 489, 488, 544, 0, 1043, 0, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 234, 235, 236, 237, 238, 0,
	239, 240, 0, 0, 0, 0, 1033, 947, 1031, 0,
	0, 0, 241, 242, 244, 243, 245, 246, 247, 496,
	497, 0, 498, 248, 499, 0, 249, 250, 251, 252,
	253, 0, 946, 0, 254, 500, 501, 502, 0, 255,
	256, 953, 0, 934, 0, 257, 258, 259, 260, 261,
	262, 263, 0, 0, 265, 266, 267, 264, 0, 268,
	0, 269, 270, 271, 0, 272, 986, 273, 274, 937,
	935, 936, 943, 939, 938, 942, 275, 276, 277, 278,
	0, 279, 504, 505, 0, 283, 280, 281, 0, 284,
	282, 0, 285, 286, 0, 0, 287, 288, 289, 0,
	290, 291, 0, 292, 293, 0, 294, 295, 506, 296,
	297, 299, 301, 298, 302, 303, 304, 305, 977, 978,
	0, 230, 0, 0, 0, 0, 0, 306, 307, 308,
	509, 0, 0, 0, 309, 0, 310, 0, 0, 987,
	311, 312, 510, 511, 313, 314, 0, 315, 984, 0,
	513, 316, 0, 317, 318, 319, 320, 321, 948, 949,
	952, 374, 989, 322, 323, 0, 324, 325, 326, 327,
	0, 0, 0, 231, 328, 329, 331, 0, 988, 330,
	517, 518, 0, 519, 0, 332, 990, 950, 991, 333,
	334, 335, 992, 336, 0, 0, 0, 337, 338, 339,
	340, 341, 1029, 343, 342, 0, 344, 985, 993, 345,
	346, 994, 0, 347, 348, 349, 941, 940, 350, 351,
	352, 353, 0, 354, 355, 357, 359, 356, 358, 363,
	360, 361, 362, 365, 0, 364, 995, 366, 367, 370,
	371, 369, 996, 368, 0, 232, 997, 372, 0, 951,
	373, 523, 375, 376, 0, 0, 377, 0, 0, 1035,
	379, 380, 381, 0, 0, 382, 383, 524, 998, 384,
	999, 979, 385, 386, 378, 387, 388, 389, 390, 391,
	392, 393, 0, 394, 395, 526, 527, 980, 396, 529,
	397, 398, 0, 399, 0, 400, 401, 402, 403, 404,
	405, 406, 530, 407, 408, 0, 0, 0, 0, 0,
	0, 409, 0, 411, 412, 413, 410, 414, 415, 416,
	417, 0, 418, 419, 1000, 420, 421, 422, 423, 531,
	1037, 0, 425, 429, 430, 431, 432, 433, 434, 435,
	0, 437, 438, 436, 439, 440, 441, 944, 442, 426,
	427, 443, 444, 1001, 445, 446, 532, 0, 447, 0,
	448, 449, 450, 451, 428, 452, 457, 533, 453, 454,
	455, 456, 981, 0, 459, 460, 0, 458, 0, 461,
	462, 463, 464, 465, 300, 466, 0, 467, 535, 536,
	537, 538, 0, 474, 0, 468, 469, 982, 470, 983,
	0, 471, 472, 473, 0, 475, 476, 0, 0, 477,
	478, 479, 481, 482, 480, 483, 945, 484, 0, 0,
	485, 486, 487, 541, 542, 543, 0, 489, 488, 544,
	0, 1043, 0, 0, 490, 491, 545, 492, 493, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 1033, 947, 1031, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 946, 0, 254,
	500, 501, 502, 0, 255, 256, 953, 0, 934, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 986, 273, 274, 937, 935, 936, 943, 939, 938,
	942, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 977, 978, 0, 230, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 987, 311, 312, 510, 511, 313,
	314, 0, 315, 984, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 948, 949, 952, 374, 989, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 231, 328,
	329, 331, 0, 988, 330, 517, 518, 0, 519, 0,
	332, 990, 950, 991, 333, 334, 335, 992, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 985, 993, 345, 346, 994, 0, 347, 348,
	349, 941, 940, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 995, 366, 367, 370, 371, 369, 996, 368, 0,
	232, 997, 372, 0, 951, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 998, 384, 999, 979, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 980, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 1000,
	420, 421, 422, 423, 531, 1037, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 944, 442, 426, 427, 443, 444, 1001, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 981, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 982, 470, 983, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 945, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 0, 489, 488, 544, 0, 869, 0, 1224, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 234, 235, 236, 237,
	238, 0, 239, 240, 0, 0, 0, 0, 1563, 495,
	0, 0, 0, 0, 241, 242, 244, 243, 245, 246,
	247, 496, 497, 0, 498, 248, 499, 0, 249, 250,
	251, 252, 253, 0, 0, 0, 254, 500, 501, 502,
	0, 255, 256, 503, 0, 1193, 0, 257, 258, 259,
	260, 261, 262, 263, 0, 0, 265, 266, 267, 264,
	0, 268, 0, 269, 270, 271, 0, 272, 986, 273,
	274, 0, 0, 0, 0, 0, 0, 0, 275, 276,
	277, 278, 0, 279, 504, 505, 0, 283, 280, 281,
	0, 284, 282, 0, 285, 286, 0, 0, 287, 288,
	289, 0, 290, 291, 0, 292, 293, 0, 294, 295,
	506, 296, 297, 299, 301, 298, 302, 303, 304, 305,
	507, 508, 0, 230, 0, 0, 0, 0, 0, 306,
	307, 308, 509, 0, 0, 0, 309, 0, 310, 0,
	0, 987, 311, 312, 510, 511, 313, 314, 0, 315,
	512, 0, 513, 316, 0, 317, 318, 319, 320, 321,
	514, 515, 516, 374, 989, 322, 323, 0, 324, 325,
	326, 327, 0, 0, 0, 0, 328, 329, 331, 0,
	988, 330, 517, 518, 0, 519, 0, 332, 990, 520,
	991, 333, 334, 335, 992, 336, 0, 0, 0, 337,
	338, 339, 340, 341, 0, 343, 342, 0, 344, 521,
	993, 345, 346, 994, 0, 347, 348, 349, 0, 0,
	350, 351, 352, 353, 0, 354, 355, 357, 359, 356,
	358, 363, 360, 361, 362, 365, 0, 364, 995, 366,
	367, 370, 371, 369, 996, 368, 0, 0, 997, 372,
	0, 522, 373, 523, 375, 376, 0, 0, 377, 0,
	0, 0, 379, 380, 381, 0, 0, 382, 383, 524,
	998, 384, 999, 525, 385, 386, 378, 387, 388, 389,
	390, 391, 392, 393, 0, 394, 395, 526, 527, 528,
	396, 529, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 530, 407, 408, 0, 0, 0,
	0, 0, 0, 409, 0, 411, 412, 413, 410, 414,
	415, 416, 417, 0, 418, 419, 1000, 420, 421, 422,
	423, 531, 424, 0, 425, 429, 430, 431, 432, 433,
	434, 435, 193, 437, 438, 436, 439, 440, 441, 0,
	442, 426, 427, 443, 444, 1001, 445, 446, 532, 0,
	447, 0, 448, 449, 450, 451, 428, 452, 457, 533,
	453, 454, 455, 456, 534, 0, 459, 460, 0, 458,
	195, 461, 462, 463, 464, 465, 300, 466, 0, 467,
	535, 536, 537, 538, 0, 474, 0, 468, 469, 539,
	470, 540, 0, 471, 472, 473, 0, 475, 476, 0,
	0, 477, 478, 479, 481, 482, 480, 483, 0, 484,
	0, 0, 485, 486, 487, 1359, 542, 543, 0, 489,
	488, 544, 0, 0, 0, 187, 490, 491, 545, 492,
	493, 494, 0, 188, 0, 0, 0, 1356, 0, 1224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 497, 0, 498, 248, 499, 0, 249,
	250, 251, 252, 253, 0, 0, 0, 254, 500, 501,
	502, 0, 255, 256, 503, 0, 1193, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 986,
	273, 274, 0, 0, 0, 0, 0, 0, 0, 275,
	276, 277, 278, 0, 279, 504, 505, 0, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	288, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 506, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 507, 508, 0, 230, 0, 0, 0, 0, 0,
	306, 307, 308, 509, 0, 0, 0, 309, 0, 310,
	0, 0, 987, 311, 312, 510, 511, 313, 314, 0,
	315, 512, 0, 513, 316, 0, 317, 318, 319, 320,
	321, 514, 515, 516, 374, 989, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 0, 328, 329, 331,
	0, 988, 330, 517, 518, 0, 519, 0, 332, 990,
	520, 991, 333, 334, 335, 992, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	521, 993, 345, 346, 994, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 995,
	366, 367, 370, 371, 369, 996, 368, 0, 0, 997,
	372, 0, 522, 373, 523, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 998, 384, 999, 525, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	528, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 530, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 1000, 420, 421,
	422, 423, 531, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 193, 437, 438, 436, 439, 440, 441,
	0, 442, 426, 427, 443, 444, 1001, 445, 446, 532,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	533, 453, 454, 455, 456, 534, 0, 459, 460, 0,
	458, 195, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 535, 536, 537, 538, 0, 474, 0, 468, 469,
	539, 470, 540, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 483, 0,
	484, 0, 0, 485, 486, 487, 1359, 542, 543, 0,
	489, 488, 544, 0, 0, 0, 187, 490, 491, 545,
	492, 493, 494, 0, 188, 0, 0, 0, 0, 0,
	1224, 1223, 0, 0, 0, 0, 1221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 233, 234, 235,
	236, 237, 238, 0, 239, 240, 0, 0, 0, 0,
	0, 495, 0, 0, 0, 0, 241, 242, 244, 243,
	245, 246, 247, 496, 497, 0, 498, 248, 499, 0,
	249, 250, 251, 252, 253, 0, 0, 0, 254, 500,
	501, 502, 0, 255, 256, 503, 0, 1193, 0, 257,
	258, 259, 260, 261, 262, 263, 0, 0, 265, 266,
	267, 264, 0, 268, 0, 269, 270, 271, 0, 272,
	986, 273, 274, 0, 0, 0, 0, 0, 0, 0,
	275, 276, 277, 278, 0, 279, 504, 505, 0, 283,
	280, 281, 0, 284, 282, 0, 285, 286, 0, 0,
	287, 288, 289, 0, 290, 291, 0, 292, 293, 0,
	294, 295, 506, 296, 297, 299, 301, 298, 302, 303,
	304, 305, 507, 508, 0, 230, 0, 0, 0, 0,
	0, 306, 307, 308, 509, 0, 0, 0, 309, 0,
	310, 0, 0, 987, 311, 312, 510, 511, 313, 314,
	0, 315, 512, 0, 513, 316, 0, 317, 318, 319,
	320, 321, 514, 515, 516, 374, 989, 322, 323, 0,
	324, 325, 326, 327, 0, 0, 0, 0, 328, 329,
	331, 0, 988, 330, 517, 518, 0, 519, 0, 332,
	990, 520, 991, 333, 334, 335, 992, 336, 0, 0,
	0, 337, 338, 339, 340, 341, 0, 343, 342, 0,
	344, 521, 993, 345, 346, 994, 0, 347, 348, 349,
	0, 0, 350, 351, 352, 353, 0, 354, 355, 357,
	359, 356, 358, 363, 360, 361, 362, 365, 0, 364,
	995, 366, 367, 370, 371, 369, 996, 368, 0, 0,
	997, 372, 0, 522, 373, 523, 375, 376, 0, 0,
	377, 0, 0, 0, 379, 380, 381, 0, 0, 382,
	383, 524, 998, 384, 999, 525, 385, 386, 378, 387,
	388, 389, 390, 391, 392, 393, 0, 394, 395, 526,
	527, 528, 396, 529, 397, 398, 0, 399, 0, 400,
	401, 402, 403, 404, 405, 406, 530, 407, 408, 0,
	0, 0, 0, 0, 0, 409, 0, 411, 412, 413,
	410, 414, 415, 416, 417, 0, 418, 419, 1000, 420,
	421, 422, 423, 531, 424, 0, 425, 429, 430, 431,
	432, 433, 434, 435, 0, 437, 438, 436, 439, 440,
	441, 0, 442, 426, 427, 443, 444, 1001, 445, 446,
	532, 0, 447, 0, 448, 449, 450, 451, 428, 452,
	457, 533, 453, 454, 455, 456, 534, 0, 459, 460,
	0, 458, 0, 461, 462, 463, 464, 465, 300, 466,
	0, 467, 535, 536, 537, 538, 0, 474, 0, 468,
	469, 539, 470, 540, 0, 471, 472, 473, 0, 475,
	476, 0, 0, 477, 478, 479, 481, 482, 480, 483,
	0, 484, 0, 0, 485, 486, 487, 541, 542, 543,
	0, 489, 488, 544, 0, 0, 0, 0, 490, 491,
	545, 492, 493, 494, 1224, 1223, 0, 0, 0, 0,
	1221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 234, 235, 236, 237, 238, 2969, 239, 240,
	0, 0, 0, 0, 0, 495, 0, 0, 0, 0,
	241, 242, 244, 243, 245, 246, 247, 496, 497, 0,
	498, 248, 499, 0, 249, 250, 251, 252, 253, 0,
	0, 0, 254, 500, 501, 502, 0, 255, 256, 503,
	0, 1193, 0, 257, 258, 259, 260, 261, 262, 263,
	0, 0, 265, 266, 267, 264, 0, 268, 0, 269,
	270, 271, 0, 272, 986, 273, 274, 0, 0, 0,
	0, 0, 0, 0, 275, 276, 277, 278, 0, 279,
	504, 505, 0, 283, 280, 281, 0, 284, 282, 0,
	285, 286, 0, 0, 287, 288, 289, 0, 290, 291,
	0, 292, 293, 0, 294, 295, 506, 296, 297, 299,
	301, 298, 302, 303, 304, 305, 507, 508, 0, 230,
	0, 0, 0, 0, 0, 306, 307, 308, 509, 0,
	0, 0, 309, 0, 310, 0, 0, 987, 311, 312,
	510, 511, 313, 314, 0, 315, 512, 0, 513, 316,
	0, 317, 318, 319, 320, 321, 514, 515, 516, 374,
	989, 322, 323, 0, 324, 325, 326, 327, 0, 0,
	0, 0, 328, 329, 331, 0, 988, 330, 517, 518,
	0, 519, 0, 332, 990, 520, 991, 333, 334, 335,
	992, 336, 0, 0, 0, 337, 338, 339, 340, 341,
	0, 343, 342, 0, 344, 521, 993, 345, 346, 994,
	0, 347, 348, 349, 0, 0, 350, 351, 352, 353,
	0, 354, 355, 357, 359, 356, 358, 363, 360, 361,
	362, 365, 0, 364, 995, 366, 367, 370, 371, 369,
	996, 368, 0, 0, 997, 372, 0, 522, 373, 523,
	375, 376, 0, 0, 377, 0, 0, 0, 379, 380,
	381, 0, 0, 382, 383, 524, 998, 384, 999, 525,
	385, 386, 378, 387, 388, 389, 390, 391, 392, 393,
	0, 394, 395, 526, 527, 528, 396, 529, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 404, 405, 406,
	530, 407, 408, 0, 0, 0, 0, 0, 0, 409,
	0, 411, 412, 413, 410, 414, 415, 416, 417, 0,
	418, 419, 1000, 420, 421, 422, 423, 531, 424, 0,
	425, 429, 430, 431, 432, 433, 434, 435, 0, 437,
	438, 436, 439, 440, 441, 0, 442, 426, 427, 443,
	444, 1001, 445, 446, 532, 0, 447, 0, 448, 449,
	450, 451, 428, 452, 457, 533, 453, 454, 455, 456,
	534, 0, 459, 460, 0, 458, 0, 461, 462, 463,
	464, 465, 300, 466, 0, 467, 535, 536, 537, 538,
	0, 474, 0, 468, 469, 539, 470, 540, 0, 471,
	472, 473, 0, 475, 476, 0, 0, 477, 478, 479,
	481, 482, 480, 483, 0, 484, 0, 0, 485, 486,
	487, 541, 542, 543, 0, 489, 488, 544, 0, 0,
	0, 0, 490, 491, 545, 492, 493, 494, 1224, 1223,
	0, 0, 0, 0, 1221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 234, 235, 236, 237,
	238, 1374, 239, 240, 0, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 241, 242, 244, 243, 245, 246,
	247, 496, 497, 0, 498, 248, 499, 0, 249, 250,
	251, 252, 253, 0, 0, 0, 254, 500, 501, 502,
	0, 255, 256, 503, 0, 1193, 0, 257, 258, 259,
	260, 261, 262, 263, 0, 0, 265, 266, 267, 264,
	0, 268, 0, 269, 270, 271, 0, 272, 986, 273,
	274, 0, 0, 0, 0, 0, 0, 0, 275, 276,
	277, 278, 0, 279, 504, 505, 0, 283, 280, 281,
	0, 284, 282, 0, 285, 286, 0, 0, 287, 288,
	289, 0, 290, 291, 0, 292, 293, 0, 294, 295,
	506, 296, 297, 299, 301, 298, 302, 303, 304, 305,
	507, 508, 0, 230, 0, 0, 0, 0, 0, 306,
	307, 308, 509, 0, 0, 0, 309, 0, 310, 0,
	0, 987, 311, 312, 510, 511, 313, 314, 0, 315,
	512, 0, 513, 316, 0, 317, 318, 319, 320, 321,
	514, 515, 516, 374, 989, 322, 323, 0, 324, 325,
	326, 327, 0, 0, 0, 0, 328, 329, 331, 0,
	988, 330, 517, 518, 0, 519, 0, 332, 990, 520,
	991, 333, 334, 335, 992, 336, 0, 0, 0, 337,
	338, 339, 340, 341, 0, 343, 342, 0, 344, 521,
	993, 345, 346, 994, 0, 347, 348, 349, 0, 0,
	350, 351, 352, 353, 0, 354, 355, 357, 359, 356,
	358, 363, 360, 361, 362, 365, 0, 364, 995, 366,
	367, 370, 371, 369, 996, 368, 0, 0, 997, 372,
	0, 522, 373, 523, 375, 376, 0, 0, 377, 0,
	0, 0, 379, 380, 381, 0, 0, 382, 383, 524,
	998, 384, 999, 525, 385, 386, 378, 387, 388, 389,
	390, 391, 392, 393, 0, 394, 395, 526, 527, 528,
	396, 529, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 530, 407, 408, 0, 0, 0,
	0, 0, 0, 409, 0, 411, 412, 413, 410, 414,
	415, 416, 417, 0, 418, 419, 1000, 420, 421, 422,
	423, 531, 424, 0, 425, 429, 430, 431, 432, 433,
	434, 435, 0, 437, 438, 436, 439, 440, 441, 0,
	442, 426, 427, 443, 444, 1001, 445, 446, 532, 0,
	447, 0, 448, 449, 450, 451, 428, 452, 457, 533,
	453, 454, 455, 456, 534, 0, 459, 460, 0, 458,
	0, 461, 462, 463, 464, 465, 300, 466, 0, 467,
	535, 536, 537, 538, 0, 474, 0, 468, 469, 539,
	470, 540, 0, 471, 472, 473, 0, 475, 476, 0,
	0, 477, 478, 479, 481, 482, 480, 483, 0, 484,
	0, 0, 485, 486, 487, 541, 542, 543, 0, 489,
	488, 544, 1043, 0, 0, 0, 490, 491, 545, 492,
	493, 494, 0, 0, 0, 0, 0, 0, 0, 233,
	234, 235, 236, 237, 238, 0, 239, 240, 0, 0,
	0, 0, 0, 947, 0, 1365, 0, 0, 241, 242,
	244, 243, 245, 246, 247, 496, 497, 0, 498, 248,
	499, 0, 249, 250, 251, 252, 253, 0, 946, 0,
	254, 500, 501, 502, 0, 255, 256, 953, 0, 934,
	0, 257, 258, 259, 260, 261, 262, 263, 0, 0,
	265, 266, 267, 264, 0, 268, 0, 269, 270, 271,
	0, 272, 986, 273, 274, 937, 935, 936, 943, 939,
	938, 942, 275, 276, 277, 278, 0, 279, 504, 505,
	0, 283, 280, 281, 0, 284, 282, 0, 285, 286,
	0, 0, 287, 288, 289, 0, 290, 291, 0, 292,
	293, 0, 294, 295, 506, 296, 297, 299, 301, 298,
	302, 303, 304, 305, 977, 978, 0, 230, 0, 0,
	0, 0, 0, 306, 307, 308, 509, 0, 0, 0,
	309, 0, 310, 0, 0, 987, 311, 312, 510, 511,
	313, 314, 0, 315, 984, 0, 513, 316, 0, 317,
	318, 319, 320, 321, 948, 949, 952, 374, 989, 322,
	323, 0, 324, 325, 326, 327, 0, 0, 0, 231,
	328, 329, 331, 0, 988, 330, 517, 518, 0, 519,
	0, 332, 990, 950, 991, 333, 334, 335, 992, 336,
	0, 0, 0, 337, 338, 339, 340, 341, 0, 343,
	342, 0, 344, 985, 993, 345, 346, 994, 0, 347,
	348, 349, 941, 940, 350, 351, 352, 353, 0, 354,
	355, 357, 359, 356, 358, 363, 360, 361, 362, 365,
	0, 364, 995, 366, 367, 370, 371, 369, 996, 368,
	0, 232, 997, 372, 0, 951, 373, 523, 375, 376,
	0, 0, 377, 0, 0, 0, 379, 380, 381, 0,
	0, 382, 383, 524, 998, 384, 999, 979, 385, 386,
	378, 387, 388, 389, 390, 391, 392, 393, 0, 394,
	395, 526, 527, 980, 396, 529, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 404, 405, 406, 530, 407,
	408, 0, 0, 0, 0, 0, 0, 409, 0, 411,
	412, 413, 410, 414, 415, 416, 417, 0, 418, 419,
	1000, 420, 421, 422, 423, 531, 424, 0, 425, 429,
	430, 431, 432, 433, 434, 435, 0, 437, 438, 436,
	439, 440, 441, 944, 442, 426, 427, 443, 444, 1001,
	445, 446, 532, 0, 447, 0, 448, 449, 450, 451,
	428, 452, 457, 533, 453, 454, 455, 456, 981, 0,
	459, 460, 0, 458, 0, 461, 462, 463, 464, 465,
	300, 466, 0, 467, 535, 536, 537, 538, 0, 474,
	0, 468, 469, 982, 470, 983, 0, 471, 472, 473,
	0, 475, 476, 0, 0, 477, 478, 479, 481, 482,
	480, 483, 945, 484, 0, 0, 485, 486, 487, 541,
	542, 543, 0, 489, 488, 544, 869, 0, 227, 0,
	490, 491, 545, 492, 493, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 234, 235, 236, 237,
	238, 0, 239, 240, 0, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 241, 242, 244, 243, 245, 246,
	247, 496, 497, 0, 498, 248, 499, 0, 249, 250,
	251, 252, 253, 0, 0, 0, 254, 500, 501, 502,
	0, 255, 256, 503, 0, 0, 0, 257, 258, 259,
	260, 261, 262, 263, 0, 0, 265, 266, 267, 264,
	0, 268, 0, 269, 270, 271, 0, 272, 0, 273,
	274, 0, 0, 0, 0, 0, 0, 0, 275, 276,
	277, 278, 0, 279, 504, 505, 0, 283, 280, 281,
	0, 284, 282, 0, 285, 286, 0, 0, 287, 288,
	289, 0, 290, 291, 0, 292, 293, 0, 294, 295,
	506, 296, 297, 299, 301, 298, 302, 303, 304, 305,
	507, 508, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 509, 0, 0, 0, 309, 0, 310, 0,
	0, 0, 311, 312, 510, 511, 313, 314, 0, 315,
	512, 0, 513, 316, 0, 317, 318, 319, 320, 321,
	514, 515, 516, 374, 0, 322, 323, 0, 324, 325,
	326, 327, 0, 0, 0, 0, 328, 329, 331, 0,
	0, 330, 517, 518, 0, 519, 0, 332, 0, 520,
	0, 333, 334, 335, 0, 336, 0, 0, 0, 337,
	338, 339, 340, 341, 0, 343, 342, 0, 344, 521,
	0, 345, 346, 0, 0, 347, 348, 349, 0, 0,
	350, 351, 352, 353, 0, 354, 355, 357, 359, 356,
	358, 363, 360, 361, 362, 365, 0, 364, 0, 366,
	367, 370, 371, 369, 0, 368, 0, 0, 0, 372,
	0, 522, 373, 523, 375, 376, 0, 0, 377, 0,
	0, 0, 379, 380, 381, 0, 0, 382, 383, 524,
	0, 384, 0, 525, 385, 386, 378, 387, 388, 389,
	390, 391, 392, 393, 0, 394, 395, 526, 527, 528,
	396, 529, 397, 398, 0, 399, 0, 400, 401, 402,
	403, 404, 405, 406, 530, 407, 408, 0, 0, 0,
	0, 0, 0, 409, 0, 411, 412, 413, 410, 414,
	415, 416, 417, 0, 418, 419, 0, 420, 421, 422,
	423, 531, 424, 0, 425, 429, 430, 431, 432, 433,
	434, 435, 193, 437, 438, 436, 439, 440, 441, 0,
	442, 426, 427, 443, 444, 0, 445, 446, 532, 0,
	447, 0, 448, 449, 450, 451, 428, 452, 457, 533,
	453, 454, 455, 456, 534, 0, 459, 460, 0, 458,
	195, 461, 462, 463, 464, 465, 300, 466, 0, 467,
	535, 536, 537, 538, 0, 474, 0, 468, 469, 539,
	470, 540, 0, 471, 472, 473, 0, 475, 476, 0,
	0, 477, 478, 479, 481, 482, 480, 483, 0, 484,
	0, 0, 485, 486, 487, 1359, 542, 543, 0, 489,
	488, 544, 227, 0, 0, 187, 490, 491, 545, 492,
	493, 494, 0, 188, 0, 0, 0, 0, 0, 233,
	234, 235, 236, 237, 238, 0, 239, 240, 0, 0,
	0, 0, 0, 495, 0, 162, 0, 0, 241, 242,
	244, 243, 245, 246, 247, 496, 497, 0, 498, 248,
	499, 0, 249, 250, 251, 252, 253, 0, 0, 0,
	254, 500, 501, 502, 0, 255, 256, 503, 0, 0,
	0, 257, 258, 259, 260, 261, 262, 263, 0, 0,
	265, 266, 267, 264, 0, 268, 0, 269, 270, 271,
	0, 272, 0, 273, 274, 0, 0, 0, 0, 0,
	0, 0, 275, 276, 277, 278, 0, 279, 504, 505,
	0, 283, 280, 281, 0, 284, 282, 0, 285, 286,
	0, 0, 287, 288, 289, 0, 290, 291, 0, 292,
	293, 0, 294, 295, 506, 296, 297, 299, 301, 298,
	302, 303, 304, 305, 507, 508, 0, 230, 0, 0,
	0, 0, 0, 306, 307, 308, 509, 0, 0, 0,
	309, 0, 310, 0, 0, 0, 311, 312, 510, 511,
	313, 314, 0, 315, 512, 0, 513, 316, 0, 317,
	318, 319, 320, 321, 514, 515, 516, 374, 0, 322,
	323, 0, 324, 325, 326, 327, 0, 0, 0, 231,
	328, 329, 331, 0, 0, 330, 517, 518, 0, 519,
	0, 332, 0, 520, 0, 333, 334, 335, 0, 336,
	0, 0, 0, 337, 338, 339, 340, 341, 0, 343,
	342, 0, 344, 521, 0, 345, 346, 0, 0, 347,
	348, 349, 0, 0, 350, 351, 352, 353, 0, 354,
	355, 357, 359, 356, 358, 363, 360, 361, 362, 365,
	0, 364, 0, 366, 367, 370, 371, 369, 0, 368,
	0, 232, 0, 372, 0, 522, 373, 523, 375, 376,
	0, 0, 377, 0, 0, 0, 379, 380, 381, 0,
	0, 382, 383, 524, 0, 384, 0, 525, 385, 386,
	378, 387, 388, 389, 390, 391, 392, 393, 0, 394,
	395, 526, 527, 528, 396, 529, 397, 398, 0, 399,
	0, 400, 401, 402, 403, 404, 405, 406, 530, 407,
	408, 0, 0, 0, 0, 0, 0, 409, 0, 411,
	412, 413, 410, 414, 415, 416, 417, 0, 418, 419,
	0, 420, 421, 422, 423, 531, 424, 0, 425, 429,
	430, 431, 432, 433, 434, 435, 0, 437, 438, 436,
	439, 440, 441, 0, 442, 426, 427, 443, 444, 0,
	445, 446, 532, 0, 447, 0, 448, 449, 450, 451,
	428, 452, 457, 533, 453, 454, 455, 456, 534, 0,
	459, 460, 0, 458, 0, 461, 462, 463, 464, 465,
	300, 466, 0, 467, 535, 536, 537, 538, 0, 474,
	0, 468, 469, 539, 470, 540, 0, 471, 472, 473,
	0, 475, 476, 0, 0, 477, 478, 479, 481, 482,
	480, 483, 0, 484, 0, 0, 485, 486, 487, 541,
	542, 543, 0, 489, 488, 544, 0, 1307, 0, 227,
	490, 491, 545, 492, 493, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 1679,
	495, 0, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 497, 0, 498, 248, 499, 0, 249,
	250, 251, 252, 253, 0, 0, 0, 254, 500, 501,
	502, 0, 255, 256, 503, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 0, 0, 275,
	276, 277, 278, 0, 279, 504, 505, 0, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	288, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 506, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 507, 508, 0, 230, 0, 0, 0, 0, 0,
	306, 307, 308, 509, 0, 0, 0, 309, 0, 310,
	0, 0, 0, 311, 312, 510, 511, 313, 314, 0,
	315, 512, 0, 513, 316, 0, 317, 318, 319, 320,
	321, 514, 515, 516, 374, 0, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 231, 328, 329, 331,
	0, 0, 330, 517, 518, 0, 519, 0, 332, 0,
	520, 0, 333, 334, 335, 0, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	521, 0, 345, 346, 0, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 0,
	366, 367, 370, 371, 369, 0, 368, 0, 232, 0,
	372, 0, 522, 373, 523, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 0, 384, 0, 525, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	528, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 530, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 0, 420, 421,
	422, 423, 531, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	0, 442, 426, 427, 443, 444, 0, 445, 446, 532,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	533, 453, 454, 455, 456, 534, 0, 459, 460, 0,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 535, 536, 537, 538, 0, 474, 0, 468, 469,
	539, 470, 540, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 483, 0,
	484, 0, 0, 485, 486, 487, 541, 542, 543, 227,
	489, 488, 544, 0, 0, 0, 0, 490, 491, 545,
	492, 493, 494, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 1311, 241, 242, 244, 243, 245,
	246, 247, 496, 497, 0, 498, 248, 499, 0, 249,
	250, 251, 252, 253, 0, 0, 0, 254, 500, 501,
	502, 0, 255, 256, 503, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 0, 0, 275,
	276, 277, 278, 0, 279, 504, 505, 0, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	288, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 506, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 507, 508, 0, 230, 0, 0, 0, 0, 0,
	306, 307, 308, 509, 0, 0, 0, 309, 0, 310,
	0, 0, 0, 311, 312, 510, 511, 313, 314, 0,
	315, 512, 0, 513, 316, 0, 317, 318, 319, 320,
	321, 514, 515, 516, 374, 0, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 231, 328, 329, 331,
	0, 0, 330, 517, 518, 0, 519, 0, 332, 0,
	520, 0, 333, 334, 335, 0, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	521, 0, 345, 346, 0, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 0,
	366, 367, 370, 371, 369, 0, 368, 0, 232, 0,
	372, 0, 522, 373, 523, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 0, 384, 0, 525, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	528, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 530, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 0, 420, 421,
	422, 423, 531, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	0, 442, 426, 427, 443, 444, 0, 445, 446, 532,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	533, 453, 454, 455, 456, 534, 0, 459, 460, 0,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 535, 536, 537, 538, 0, 474, 0, 468, 469,
	539, 470, 540, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 483, 0,
	484, 0, 0, 485, 486, 487, 541, 542, 543, 227,
	489, 488, 544, 0, 0, 0, 0, 490, 491, 545,
	492, 493, 494, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 2917, 241, 242, 244, 243, 245,
	246, 247, 496, 497, 0, 498, 248, 499, 0, 249,
	250, 251, 252, 253, 0, 0, 0, 254, 500, 501,
	502, 0, 255, 256, 503, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 0, 0, 275,
	276, 277, 278, 0, 279, 504, 505, 0, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	288, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 506, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 507, 508, 0, 230, 0, 0, 0, 0, 0,
	306, 307, 308, 509, 0, 0, 0, 309, 0, 310,
	0, 0, 0, 311, 312, 510, 511, 313, 314, 0,
	315, 512, 0, 513, 316, 0, 317, 318, 319, 320,
	321, 514, 515, 516, 374, 0, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 231, 328, 329, 331,
	0, 0, 330, 517, 518, 0, 519, 0, 332, 0,
	520, 0, 333, 334, 335, 0, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	521, 0, 345, 346, 0, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 0,
	366, 367, 370, 371, 369, 0, 368, 0, 232, 0,
	372, 0, 522, 373, 523, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 0, 384, 0, 525, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	528, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 530, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 0, 420, 421,
	422, 423, 531, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	0, 442, 426, 427, 443, 444, 0, 445, 446, 532,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	533, 453, 454, 455, 456, 534, 0, 459, 460, 0,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 535, 536, 537, 538, 0, 474, 0, 468, 469,
	539, 470, 540, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 483, 0,
	484, 0, 0, 485, 486, 487, 541, 542, 543, 227,
	489, 488, 544, 0, 0, 0, 0, 490, 491, 545,
	492, 493, 494, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 1311, 241, 242, 244, 243, 245,
	246, 247, 496, 497, 0, 498, 248, 499, 0, 249,
	250, 251, 252, 253, 0, 0, 0, 254, 500, 501,
	502, 0, 255, 256, 503, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 0, 0, 275,
	276, 277, 278, 0, 279, 504, 505, 0, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	288, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 506, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 507, 508, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 509, 0, 0, 0, 309, 0, 310,
	0, 0, 0, 311, 312, 510, 511, 313, 314, 0,
	315, 512, 0, 513, 316, 0, 317, 318, 319, 320,
	321, 514, 515, 516, 374, 0, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 0, 328, 329, 331,
	0, 0, 330, 517, 518, 0, 519, 0, 332, 0,
	520, 0, 333, 334, 335, 0, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	521, 0, 345, 346, 0, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 0,
	366, 367, 370, 371, 369, 0, 368, 0, 0, 0,
	372, 0, 522, 373, 523, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 0, 384, 0, 525, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	528, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 530, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 0, 420, 421,
	422, 423, 531, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	0, 442, 426, 427, 443, 444, 0, 445, 446, 532,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	533, 453, 454, 455, 456, 534, 0, 459, 460, 0,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 535, 536, 537, 538, 0, 474, 0, 468, 469,
	539, 470, 540, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 483, 0,
	484, 0, 0, 485, 486, 487, 541, 542, 543, 0,
	489, 488, 544, 227, 0, 0, 0, 490, 491, 545,
	492, 493, 494, 0, 0, 0, 0, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 495, 0, 2488, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 497, 0, 498,
	248, 499, 0, 249, 250, 251, 252, 253, 0, 0,
	0, 254, 500, 501, 502, 0, 255, 256, 503, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 0, 0, 275, 276, 277, 278, 0, 279, 504,
	505, 0, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 288, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 506, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 507, 508, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 509, 0, 0,
	0, 309, 0, 310, 0, 0, 0, 311, 312, 510,
	511, 313, 314, 0, 315, 512, 0, 513, 316, 0,
	317, 318, 319, 320, 321, 514, 515, 516, 374, 0,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	0, 328, 329, 331, 0, 0, 330, 517, 518, 0,
	519, 0, 332, 0, 520, 0, 333, 334, 335, 0,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 521, 0, 345, 346, 0, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 0, 366, 367, 370, 371, 369, 0,
	368, 0, 0, 0, 372, 0, 522, 373, 523, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 0, 384, 0, 525, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 528, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 530,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 0, 420, 421, 422, 423, 531, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 437, 438,
	436, 439, 440, 441, 0, 442, 426, 427, 443, 444,
	0, 445, 446, 532, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 533, 453, 454, 455, 456, 534,
	0, 459, 460, 0, 458, 0, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 535, 536, 537, 538, 0,
	474, 0, 468, 469, 539, 470, 540, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 483, 0, 484, 0, 0, 485, 486, 487,
	541, 542, 543, 0, 489, 488, 544, 227, 0, 0,
	0, 490, 491, 545, 492, 493, 494, 0, 0, 0,
	0, 0, 0, 0, 233, 234, 235, 236, 237, 238,
	0, 239, 240, 0, 0, 0, 0, 0, 495, 0,
	3057, 0, 0, 241, 242, 244, 243, 245, 246, 247,
	496, 497, 0, 498, 248, 499, 0, 249, 250, 251,
	252, 253, 0, 0, 0, 254, 500, 501, 502, 0,
	255, 256, 503, 0, 0, 0, 257, 258, 259, 260,
	261, 262, 263, 0, 0, 265, 266, 267, 264, 0,
	268, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 0, 0, 275, 276, 277,
	278, 0, 279, 504, 505, 0, 283, 280, 281, 0,
	284, 282, 0, 285, 286, 0, 0, 287, 288, 289,
	0, 290, 291, 0, 292, 293, 0, 294, 295, 506,
	296, 297, 299, 301, 298, 302, 303, 304, 305, 507,
	508, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 509, 0, 0, 0, 309, 0, 310, 0, 0,
	0, 311, 312, 510, 511, 313, 314, 0, 315, 512,
	0, 513, 316, 0, 317, 318, 319, 320, 321, 514,
	515, 516, 374, 0, 322, 323, 0, 324, 325, 326,
	327, 0, 0, 0, 0, 328, 329, 331, 0, 0,
	330, 517, 518, 0, 519, 0, 332, 0, 520, 0,
	333, 334, 335, 0, 336, 0, 0, 0, 337, 338,
	339, 340, 341, 0, 343, 342, 0, 344, 521, 0,
	345, 346, 0, 0, 347, 348, 349, 0, 0, 350,
	351, 352, 353, 0, 354, 355, 357, 359, 356, 358,
	363, 360, 361, 362, 365, 0, 364, 0, 366, 367,
	370, 371, 369, 0, 368, 0, 0, 0, 372, 0,
	522, 373, 523, 375, 376, 0, 0, 377, 0, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 524, 0,
	384, 0, 525, 385, 386, 378, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 395, 526, 527, 528, 396,
	529, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 530, 407, 408, 0, 0, 0, 0,
	0, 0, 409, 0, 411, 412, 413, 410, 414, 415,
	416, 417, 0, 418, 419, 0, 420, 421, 422, 423,
	531, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 437, 438, 436, 439, 440, 441, 0, 442,
	426, 427, 443, 444, 0, 445, 446, 532, 0, 447,
	0, 448, 449, 450, 451, 428, 452, 457, 533, 453,
	454, 455, 456, 534, 0, 459, 460, 0, 458, 0,
	461, 462, 463, 464, 465, 300, 466, 0, 467, 535,
	536, 537, 538, 0, 474, 0, 468, 469, 539, 470,
	540, 0, 471, 472, 473, 0, 475, 476, 0, 0,
	477, 478, 479, 481, 482, 480, 483, 0, 484, 0,
	0, 485, 486, 487, 541, 542, 543, 0, 489, 488,
	544, 0, 733, 0, 627, 490, 491, 545, 492, 493,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 234, 235, 236, 237, 238, 0, 239, 240,
	0, 0, 0, 0, 1932, 495, 0, 0, 0, 0,
	241, 242, 244, 243, 245, 246, 247, 496, 497, 0,
	498, 248, 499, 0, 249, 250, 251, 252, 253, 0,
	0, 0, 254, 500, 501, 502, 0, 255, 256, 503,
	0, 0, 0, 257, 258, 259, 260, 261, 262, 263,
	0, 0, 265, 266, 267, 264, 0, 268, 0, 269,
	270, 271, 0, 272, 0, 273, 274, 0, 0, 0,
	0, 0, 0, 0, 275, 276, 633, 278, 0, 279,
	504, 505, 0, 283, 280, 281, 0, 284, 282, 0,
	285, 286, 0, 0, 287, 288, 289, 0, 290, 291,
	0, 292, 293, 0, 294, 295, 506, 296, 297, 299,
	301, 298, 302, 303, 304, 305, 507, 508, 0, 230,
	0, 0, 0, 0, 0, 306, 307, 308, 509, 0,
	0, 0, 309, 0, 310, 0, 731, 0, 311, 312,
	510, 511, 313, 314, 0, 315, 512, 0, 513, 316,
	0, 317, 318, 319, 320, 321, 514, 515, 516, 374,
	0, 322, 323, 0, 324, 325, 326, 327, 0, 0,
	0, 231, 328, 329, 331, 0, 0, 330, 517, 518,
	0, 519, 0, 332, 0, 520, 0, 333, 334, 335,
	0, 336, 0, 0, 0, 337, 338, 339, 340, 341,
	0, 343, 342, 0, 344, 521, 0, 345, 346, 0,
	0, 347, 348, 349, 0, 0, 350, 351, 352, 353,
	0, 354, 355, 357, 359, 356, 358, 363, 360, 361,
	362, 365, 0, 364, 0, 366, 367, 370, 371, 369,
	0, 368, 0, 232, 0, 372, 0, 522, 373, 523,
	375, 376, 0, 0, 377, 0, 0, 0, 379, 380,
	381, 0, 0, 382, 383, 524, 0, 384, 0, 525,
	385, 386, 378, 387, 388, 389, 390, 391, 392, 393,
	0, 394, 395, 526, 527, 528, 396, 529, 397, 398,
	0, 399, 0, 400, 401, 402, 403, 404, 405, 406,
	530, 407, 408, 0, 0, 0, 0, 0, 0, 409,
	0, 411, 412, 413, 410, 414, 415, 416, 417, 0,
	418, 419, 0, 420, 421, 422, 423, 531, 424, 0,
	425, 429, 430, 431, 432, 433, 434, 435, 0, 437,
	438, 436, 439, 440, 441, 0, 442, 426, 427, 443,
	444, 0, 445, 446, 532, 0, 447, 0, 448, 449,
	450, 451, 428, 452, 457, 533, 453, 454, 455, 456,
	534, 0, 459, 460, 0, 458, 632, 461, 462, 463,
	464, 465, 300, 466, 0, 467, 535, 536, 537, 538,
	0, 474, 0, 468, 469, 539, 470, 540, 0, 471,
	472, 473, 0, 475, 476, 0, 0, 477, 478, 479,
	481, 482, 480, 483, 0, 484, 0, 0, 485, 486,
	487, 541, 542, 543, 0, 489, 488, 544, 0, 625,
	0, 627, 490, 491, 545, 492, 493, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 636, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 633, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 230, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 514, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 231, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	232, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 632, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 627, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 636, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 633, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 230, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 514, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 231, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	232, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	1968, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 632, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 627, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 636, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 633, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 230, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 514, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 231, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	232, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 632, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 1714, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 636, 0, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 0, 1720, 0, 1710, 248, 1726,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	1735, 1736, 0, 0, 255, 256, 0, 0, 1193, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 986, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 970, 279, 1724, 1723, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 955, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 0, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 1722, 0, 0, 0, 309,
	0, 310, 0, 0, 987, 311, 312, 1731, 1732, 313,
	314, 0, 315, 0, 0, 0, 316, 0, 317, 318,
	319, 320, 321, 0, 0, 0, 374, 989, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 0, 328,
	329, 331, 0, 988, 330, 1717, 1718, 0, 1713, 0,
	332, 990, 0, 991, 333, 334, 335, 992, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 0, 993, 345, 346, 994, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 995, 366, 367, 370, 371, 369, 996, 368, 0,
	0, 997, 372, 0, 0, 373, 1725, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 0, 998, 384, 999, 0, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	1707, 1708, 0, 396, 0, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 1721, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 1000,
	420, 421, 422, 423, 0, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 1001, 445,
	446, 1719, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 1734, 453, 454, 455, 456, 0, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 1727, 1728, 1729, 1730, 0, 474, 0,
	468, 469, 0, 470, 0, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 0, 1711,
	1733, 0, 489, 488, 0, 0, 0, 0, 0, 490,
	491, 0, 492, 493, 494, 1224, 1223, 0, 0, 0,
	0, 1221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 234, 235, 236, 237, 238, 0, 239,
	240, 0, 1701, 0, 0, 0, 495, 0, 0, 0,
	0, 241, 242, 244, 243, 245, 246, 247, 496, 497,
	0, 498, 248, 499, 0, 249, 250, 251, 252, 253,
	0, 0, 0, 254, 500, 501, 502, 0, 255, 256,
	503, 0, 1193, 0, 257, 258, 259, 260, 261, 262,
	263, 0, 0, 265, 266, 267, 264, 0, 268, 0,
	269, 270, 271, 0, 272, 986, 273, 274, 0, 0,
	0, 0, 0, 0, 0, 275, 276, 277, 278, 0,
	279, 504, 505, 0, 283, 280, 281, 0, 284, 282,
	0, 285, 286, 0, 0, 287, 288, 289, 0, 290,
	291, 0, 292, 293, 0, 294, 295, 506, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 507, 508, 0,
	230, 0, 0, 0, 0, 0, 306, 307, 308, 509,
	0, 0, 0, 309, 0, 310, 0, 0, 987, 311,
	312, 510, 511, 313, 314, 0, 315, 512, 0, 513,
	316, 0, 317, 318, 319, 320, 321, 514, 515, 516,
	374, 989, 322, 323, 0, 324, 325, 326, 327, 0,
	0, 0, 0, 328, 329, 331, 0, 988, 330, 517,
	518, 0, 519, 0, 332, 990, 520, 991, 333, 334,
	335, 992, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 0, 343, 342, 0, 344, 521, 993, 345, 346,
	994, 0, 347, 348, 349, 0, 0, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 364, 995, 366, 367, 370, 371,
	369, 996, 368, 0, 0, 997, 372, 3213, 522, 373,
	523, 375, 376, 0, 0, 377, 0, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 524, 998, 384, 999,
	525, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 395, 526, 527, 528, 396, 529, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 530, 407, 408, 0, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	0, 418, 419, 1000, 420, 421, 422, 423, 531, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	437, 438, 436, 439, 440, 441, 0, 442, 426, 427,
	443, 444, 1001, 445, 446, 532, 0, 447, 0, 448,
	449, 450, 451, 428, 452, 457, 533, 453, 454, 455,
	456, 534, 0, 459, 460, 0, 458, 0, 461, 462,
	463, 464, 465, 300, 466, 0, 467, 535, 536, 537,
	538, 0, 474, 0, 468, 469, 539, 470, 540, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 483, 0, 484, 0, 0, 485,
	486, 487, 541, 542, 543, 0, 489, 488, 544, 0,
	0, 0, 0, 490, 491, 545, 492, 493, 494, 1224,
	1223, 0, 0, 0, 0, 1221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 497, 0, 498, 248, 499, 0, 249,
	250, 251, 252, 253, 0, 0, 0, 254, 500, 501,
	502, 0, 255, 256, 503, 0, 1193, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 986,
	273, 274, 0, 0, 0, 0, 0, 0, 0, 275,
	276, 277, 278, 0, 279, 504, 505, 0, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	288, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 506, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 507, 508, 0, 230, 0, 0, 0, 0, 0,
	306, 307, 308, 509, 0, 0, 0, 309, 0, 310,
	0, 0, 987, 311, 312, 510, 511, 313, 314, 0,
	315, 512, 0, 513, 316, 0, 317, 318, 319, 320,
	321, 514, 515, 516, 374, 989, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 0, 328, 329, 331,
	0, 988, 330, 517, 518, 0, 519, 0, 332, 990,
	520, 991, 333, 334, 335, 992, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	521, 993, 345, 346, 994, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 995,
	366, 367, 370, 371, 369, 996, 368, 0, 0, 997,
	372, 2898, 522, 373, 523, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 998, 384, 999, 525, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	528, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 530, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 1000, 420, 421,
	422, 423, 531, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	0, 442, 426, 427, 443, 444, 1001, 445, 446, 532,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	533, 453, 454, 455, 456, 534, 0, 459, 460, 0,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 535, 536, 537, 538, 0, 474, 0, 468, 469,
	539, 470, 540, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 483, 0,
	484, 0, 0, 485, 486, 487, 541, 542, 543, 0,
	489, 488, 544, 1224, 1223, 0, 0, 490, 491, 545,
	492, 493, 494, 0, 0, 0, 0, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 497, 0, 498,
	248, 499, 0, 249, 250, 251, 252, 253, 0, 0,
	0, 254, 500, 501, 502, 0, 255, 256, 503, 0,
	1193, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 986, 273, 274, 0, 0, 0, 0,
	0, 0, 2889, 275, 276, 277, 278, 0, 279, 504,
	505, 0, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 288, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 506, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 507, 508, 0, 230, 0,
	0, 0, 0, 0, 306, 307, 308, 509, 0, 0,
	0, 309, 0, 310, 0, 0, 987, 311, 312, 510,
	511, 313, 314, 0, 315, 512, 0, 513, 316, 0,
	317, 318, 319, 320, 321, 514, 515, 516, 374, 989,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	0, 328, 329, 331, 0, 988, 330, 517, 518, 0,
	519, 0, 332, 990, 520, 991, 333, 334, 335, 992,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 521, 993, 345, 346, 994, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 995, 366, 367, 370, 371, 369, 996,
	368, 0, 0, 997, 372, 0, 522, 373, 523, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 998, 384, 999, 525, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 528, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 530,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 1000, 420, 421, 422, 423, 531, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 437, 438,
	436, 439, 440, 441, 2890, 442, 426, 427, 443, 444,
	1001, 445, 446, 532, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 533, 453, 454, 455, 456, 534,
	0, 459, 460, 0, 458, 0, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 535, 536, 537, 538, 0,
	474, 0, 468, 469, 539, 470, 540, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 483, 0, 484, 0, 0, 485, 486, 487,
	541, 542, 543, 227, 489, 488, 544, 0, 0, 0,
	0, 490, 491, 545, 492, 493, 494, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 497, 0, 498,
	248, 499, 0, 249, 250, 251, 252, 253, 0, 0,
	0, 254, 500, 501, 502, 0, 255, 256, 503, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 0, 0, 275, 276, 277, 278, 0, 279, 504,
	505, 0, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 288, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 506, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 507, 508, 0, 230, 0,
	0, 0, 0, 0, 306, 307, 308, 509, 0, 0,
	0, 309, 0, 310, 0, 0, 0, 311, 312, 510,
	511, 313, 314, 0, 315, 512, 0, 513, 316, 0,
	317, 318, 319, 320, 321, 514, 515, 516, 374, 0,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	231, 328, 329, 331, 0, 0, 330, 517, 518, 0,
	519, 0, 332, 0, 520, 0, 333, 334, 335, 0,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 521, 0, 345, 346, 0, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 0, 366, 367, 370, 371, 369, 0,
	368, 0, 232, 0, 372, 0, 522, 373, 523, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 0, 384, 0, 525, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 528, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 530,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 0, 420, 421, 422, 423, 531, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 437, 438,
	436, 439, 440, 441, 0, 442, 426, 427, 443, 444,
	0, 445, 446, 532, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 533, 453, 454, 455, 456, 534,
	0, 459, 460, 0, 458, 0, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 535, 536, 537, 538, 0,
	474, 0, 468, 469, 539, 470, 540, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 483, 0, 484, 0, 0, 485, 486, 487,
	541, 542, 543, 0, 489, 488, 544, 0, 0, 0,
	0, 490, 491, 545, 492, 493, 494, 1394, 0, 1224,
	1223, 0, 0, 0, 0, 1221, 0, 0, 0, 0,
	0, 0, 0, 636, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 497, 0, 498, 248, 499, 0, 249,
	250, 251, 252, 253, 0, 0, 0, 254, 500, 501,
	502, 0, 255, 256, 503, 0, 1193, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 986,
	273, 274, 0, 0, 0, 0, 0, 0, 0, 275,
	276, 277, 278, 0, 279, 504, 505, 0, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	288, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 506, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 507, 508, 0, 230, 0, 0, 0, 0, 0,
	1393, 307, 308, 509, 0, 0, 0, 309, 0, 310,
	0, 0, 987, 311, 312, 510, 511, 313, 314, 0,
	315, 512, 0, 513, 316, 0, 317, 318, 319, 320,
	321, 514, 515, 516, 374, 989, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 0, 328, 329, 331,
	0, 988, 330, 517, 518, 0, 519, 0, 332, 990,
	520, 991, 333, 334, 335, 992, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	521, 993, 345, 346, 994, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 995,
	366, 367, 370, 371, 369, 996, 368, 0, 0, 997,
	372, 0, 522, 373, 523, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 998, 384, 999, 525, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	528, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 1392, 406, 530, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 1000, 420, 421,
	422, 423, 531, 424, 0, 425, 429, 430, 431, 1391,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	0, 442, 426, 427, 443, 444, 1001, 445, 446, 532,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	533, 453, 454, 455, 456, 534, 0, 459, 460, 0,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 535, 536, 537, 538, 0, 474, 0, 468, 469,
	539, 470, 540, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 483, 0,
	484, 0, 0, 485, 486, 487, 541, 542, 543, 0,
	489, 488, 544, 0, 0, 0, 0, 490, 491, 545,
	492, 493, 494, 1353, 0, 1224, 1223, 0, 0, 0,
	0, 1221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 234, 235, 236, 237, 238, 0, 239,
	240, 0, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 241, 242, 244, 243, 245, 246, 247, 496, 497,
	0, 498, 248, 499, 0, 249, 250, 251, 252, 253,
	0, 0, 0, 254, 500, 501, 502, 0, 255, 256,
	503, 0, 1193, 0, 257, 258, 259, 260, 261, 262,
	263, 0, 0, 265, 266, 267, 264, 0, 268, 0,
	269, 270, 271, 0, 272, 986, 273, 274, 0, 0,
	0, 0, 0, 0, 0, 275, 276, 277, 278, 0,
	279, 504, 505, 0, 283, 280, 281, 0, 284, 282,
	0, 285, 286, 0, 0, 287, 288, 289, 0, 290,
	291, 0, 292, 293, 0, 294, 295, 506, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 507, 508, 0,
	230, 0, 0, 0, 0, 0, 306, 307, 308, 509,
	0, 0, 0, 309, 0, 310, 0, 0, 987, 311,
	312, 510, 511, 313, 314, 0, 315, 512, 0, 513,
	316, 0, 317, 318, 319, 320, 321, 1352, 515, 516,
	374, 989, 322, 323, 0, 324, 325, 326, 327, 0,
	0, 0, 0, 328, 329, 331, 0, 988, 330, 517,
	518, 0, 519, 0, 332, 990, 520, 991, 333, 334,
	335, 992, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 0, 343, 342, 0, 344, 521, 993, 345, 346,
	994, 0, 347, 348, 349, 0, 0, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 364, 995, 366, 367, 370, 371,
	369, 996, 368, 0, 0, 997, 372, 0, 522, 373,
	523, 375, 376, 0, 0, 377, 0, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 524, 998, 384, 999,
	525, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 395, 526, 527, 528, 396, 529, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 530, 407, 408, 0, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	0, 418, 419, 1000, 420, 421, 422, 423, 531, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	437, 438, 436, 439, 440, 441, 0, 442, 426, 427,
	443, 444, 1001, 445, 446, 532, 0, 447, 0, 448,
	449, 450, 451, 428, 452, 457, 533, 453, 454, 455,
	456, 534, 0, 459, 460, 0, 458, 0, 461, 462,
	463, 464, 465, 300, 466, 0, 467, 535, 536, 537,
	538, 0, 474, 0, 468, 469, 539, 470, 540, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 483, 0, 484, 0, 0, 485,
	486, 487, 541, 542, 543, 0, 489, 488, 544, 0,
	0, 0, 0, 490, 491, 545, 492, 493, 494, 1287,
	0, 1224, 1223, 0, 0, 0, 0, 1221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 1193, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 986, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 230, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 987, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 1286, 515, 516, 374, 989, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 0, 328,
	329, 331, 0, 988, 330, 517, 518, 0, 519, 0,
	332, 990, 520, 991, 333, 334, 335, 992, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 993, 345, 346, 994, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 995, 366, 367, 370, 371, 369, 996, 368, 0,
	0, 997, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 998, 384, 999, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 1000,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 1001, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 0, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 493, 494, 1219, 0, 1224, 1223, 0,
	0, 0, 0, 1221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 234, 235, 236, 237, 238,
	0, 239, 240, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 241, 242, 244, 243, 245, 246, 247,
	496, 497, 0, 498, 248, 499, 0, 249, 250, 251,
	252, 253, 0, 0, 0, 254, 500, 501, 502, 0,
	255, 256, 503, 0, 1193, 0, 257, 258, 259, 260,
	261, 262, 263, 0, 0, 265, 266, 267, 264, 0,
	268, 0, 269, 270, 271, 0, 272, 986, 273, 274,
	0, 0, 0, 0, 0, 0, 0, 275, 276, 277,
	278, 0, 279, 504, 505, 0, 283, 280, 281, 0,
	284, 282, 0, 285, 286, 0, 0, 287, 288, 289,
	0, 290, 291, 0, 292, 293, 0, 294, 295, 506,
	296, 297, 299, 301, 298, 302, 303, 304, 305, 507,
	508, 0, 230, 0, 0, 0, 0, 0, 306, 307,
	308, 509, 0, 0, 0, 309, 0, 310, 0, 0,
	987, 311, 312, 510, 511, 313, 314, 0, 315, 512,
	0, 513, 316, 0, 317, 318, 319, 320, 321, 1218,
	515, 516, 374, 989, 322, 323, 0, 324, 325, 326,
	327, 0, 0, 0, 0, 328, 329, 331, 0, 988,
	330, 517, 518, 0, 519, 0, 332, 990, 520, 991,
	333, 334, 335, 992, 336, 0, 0, 0, 337, 338,
	339, 340, 341, 0, 343, 342, 0, 344, 521, 993,
	345, 346, 994, 0, 347, 348, 349, 0, 0, 350,
	351, 352, 353, 0, 354, 355, 357, 359, 356, 358,
	363, 360, 361, 362, 365, 0, 364, 995, 366, 367,
	370, 371, 369, 996, 368, 0, 0, 997, 372, 0,
	522, 373, 523, 375, 376, 0, 0, 377, 0, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 524, 998,
	384, 999, 525, 385, 386, 378, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 395, 526, 527, 528, 396,
	529, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 530, 407, 408, 0, 0, 0, 0,
	0, 0, 409, 0, 411, 412, 413, 410, 414, 415,
	416, 417, 0, 418, 419, 1000, 420, 421, 422, 423,
	531, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 437, 438, 436, 439, 440, 441, 0, 442,
	426, 427, 443, 444, 1001, 445, 446, 532, 0, 447,
	0, 448, 449, 450, 451, 428, 452, 457, 533, 453,
	454, 455, 456, 534, 0, 459, 460, 0, 458, 0,
	461, 462, 463, 464, 465, 300, 466, 0, 467, 535,
	536, 537, 538, 0, 474, 0, 468, 469, 539, 470,
	540, 0, 471, 472, 473, 0, 475, 476, 0, 0,
	477, 478, 479, 481, 482, 480, 483, 0, 484, 0,
	0, 485, 486, 487, 541, 542, 543, 0, 489, 488,
	544, 0, 0, 0, 0, 490, 491, 545, 492, 493,
	494, 1224, 1223, 0, 0, 0, 0, 1221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 1193, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 986, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 230, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 987, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 514, 515, 516, 374, 989, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 0, 328,
	329, 331, 0, 988, 330, 517, 518, 0, 519, 0,
	332, 990, 520, 991, 333, 334, 335, 992, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 993, 345, 346, 994, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 995, 366, 367, 370, 371, 369, 996, 368, 0,
	0, 997, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 998, 384, 999, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 1000,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 1001, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 0, 489, 488, 544, 1224, 1223, 0, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 0, 0,
	0, 0, 233, 234, 235, 236, 237, 238, 0, 239,
	240, 0, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 241, 242, 244, 243, 245, 246, 247, 496, 497,
	0, 498, 248, 499, 0, 249, 250, 251, 252, 253,
	0, 0, 0, 254, 500, 501, 502, 0, 255, 256,
	503, 0, 1193, 0, 257, 258, 259, 260, 261, 262,
	263, 0, 0, 265, 266, 267, 264, 0, 268, 0,
	269, 270, 271, 0, 272, 986, 273, 274, 0, 0,
	0, 0, 0, 0, 0, 275, 276, 277, 278, 0,
	279, 504, 505, 1745, 283, 280, 281, 0, 284, 282,
	0, 285, 286, 0, 0, 287, 288, 289, 0, 290,
	291, 0, 292, 293, 0, 294, 295, 506, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 507, 508, 0,
	230, 0, 0, 0, 0, 0, 306, 307, 308, 509,
	0, 0, 0, 309, 0, 310, 0, 0, 987, 311,
	312, 510, 511, 313, 314, 0, 315, 512, 0, 513,
	316, 0, 317, 318, 319, 320, 321, 514, 515, 516,
	374, 989, 322, 323, 0, 324, 325, 326, 327, 0,
	0, 0, 0, 328, 329, 331, 0, 988, 330, 517,
	518, 0, 519, 0, 332, 990, 520, 991, 333, 334,
	335, 992, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 0, 343, 342, 0, 344, 521, 993, 345, 346,
	994, 0, 347, 348, 349, 0, 0, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 364, 995, 366, 367, 370, 371,
	369, 996, 368, 0, 0, 997, 372, 0, 522, 373,
	523, 375, 376, 0, 0, 377, 0, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 524, 998, 384, 999,
	525, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 395, 526, 527, 528, 396, 529, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 530, 407, 408, 0, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	0, 418, 419, 1000, 420, 421, 422, 423, 531, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	437, 438, 436, 439, 440, 441, 0, 442, 426, 427,
	443, 444, 1001, 445, 446, 532, 0, 447, 0, 448,
	449, 450, 451, 428, 452, 457, 533, 453, 454, 455,
	456, 534, 0, 459, 460, 0, 458, 0, 461, 462,
	463, 464, 465, 300, 466, 0, 467, 535, 536, 537,
	538, 0, 474, 0, 468, 469, 539, 470, 540, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 483, 0, 484, 0, 0, 485,
	486, 487, 541, 542, 543, 0, 489, 488, 544, 1224,
	1223, 0, 0, 490, 491, 545, 492, 493, 494, 0,
	0, 0, 0, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 497, 0, 498, 248, 499, 0, 249,
	250, 251, 252, 253, 0, 0, 0, 254, 500, 501,
	502, 0, 255, 256, 503, 0, 1193, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 986,
	273, 274, 0, 0, 0, 0, 0, 0, 0, 275,
	276, 277, 278, 0, 279, 504, 505, 0, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	288, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 506, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 507, 508, 0, 230, 0, 0, 0, 0, 0,
	306, 307, 308, 509, 0, 0, 0, 309, 0, 310,
	0, 0, 987, 311, 312, 510, 511, 313, 314, 0,
	315, 512, 0, 513, 316, 0, 317, 318, 319, 320,
	321, 514, 515, 516, 374, 989, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 0, 328, 329, 331,
	0, 988, 330, 517, 518, 0, 519, 0, 332, 990,
	520, 991, 333, 334, 335, 992, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	521, 993, 345, 346, 994, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 995,
	366, 367, 370, 371, 369, 996, 368, 0, 0, 997,
	372, 0, 522, 373, 523, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 998, 384, 999, 525, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	528, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 530, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 1000, 420, 421,
	422, 423, 531, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	0, 442, 426, 427, 443, 444, 1001, 445, 446, 532,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	533, 453, 454, 455, 456, 534, 0, 459, 460, 0,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 535, 536, 537, 538, 0, 474, 0, 468, 469,
	539, 470, 540, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 483, 0,
	484, 0, 0, 485, 486, 487, 541, 542, 543, 1224,
	489, 488, 544, 0, 0, 0, 0, 490, 491, 545,
	492, 493, 494, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 497, 0, 498, 248, 499, 0, 249,
	250, 251, 252, 253, 0, 0, 0, 254, 500, 501,
	502, 0, 255, 256, 503, 0, 1193, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 986,
	273, 274, 0, 0, 0, 0, 0, 0, 0, 275,
	276, 277, 278, 0, 279, 504, 505, 0, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	288, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 506, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 507, 508, 0, 230, 0, 0, 0, 0, 0,
	306, 307, 308, 509, 0, 0, 0, 309, 0, 310,
	0, 0, 987, 311, 312, 510, 511, 313, 314, 0,
	315, 512, 0, 513, 316, 0, 317, 318, 319, 320,
	321, 514, 515, 516, 374, 989, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 0, 328, 329, 331,
	0, 988, 330, 517, 518, 0, 519, 0, 332, 990,
	520, 991, 333, 334, 335, 992, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	521, 993, 345, 346, 994, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 995,
	366, 367, 370, 371, 369, 996, 368, 0, 0, 997,
	372, 0, 522, 373, 523, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 998, 384, 999, 525, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	528, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 530, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 1000, 420, 421,
	422, 423, 531, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	0, 442, 426, 427, 443, 444, 1001, 445, 446, 532,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	533, 453, 454, 455, 456, 534, 0, 459, 460, 0,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 535, 536, 537, 538, 0, 474, 0, 468, 469,
	539, 470, 540, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 483, 0,
	484, 0, 0, 485, 486, 487, 541, 542, 543, 227,
	489, 488, 544, 0, 0, 0, 0, 490, 491, 545,
	492, 493, 494, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 497, 0, 498, 248, 499, 0, 249,
	250, 251, 252, 253, 0, 0, 0, 254, 500, 501,
	502, 2356, 255, 256, 503, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 2353, 268, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 0, 0, 275,
	276, 277, 278, 0, 279, 504, 505, 0, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	288, 289, 0, 290, 291, 0, 292, 293, 0, 2360,
	295, 506, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 507, 508, 0, 2526, 0, 0, 0, 0, 0,
	306, 307, 308, 509, 0, 0, 0, 309, 0, 310,
	2359, 0, 0, 311, 312, 510, 511, 313, 314, 0,
	315, 512, 0, 513, 316, 0, 317, 318, 319, 320,
	321, 514, 515, 516, 374, 0, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 2523, 328, 329, 331,
	0, 0, 330, 517, 518, 0, 519, 0, 2525, 0,
	520, 0, 333, 334, 335, 0, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	521, 0, 345, 346, 2522, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 0,
	366, 367, 370, 371, 369, 0, 368, 0, 0, 0,
	372, 0, 522, 373, 523, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 0, 384, 0, 525, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	528, 396, 529, 397, 398, 2358, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 530, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 0, 420, 421,
	422, 423, 531, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	0, 442, 426, 427, 443, 444, 0, 445, 446, 532,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	533, 453, 454, 455, 456, 534, 0, 459, 460, 0,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 535, 536, 537, 538, 0, 474, 0, 468, 469,
	539, 470, 540, 0, 471, 472, 473, 0, 475, 476,
	0, 2524, 477, 478, 479, 481, 482, 480, 483, 0,
	484, 0, 0, 485, 486, 487, 541, 542, 543, 227,
	489, 488, 544, 0, 0, 0, 0, 490, 491, 545,
	492, 493, 494, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 497, 0, 498, 248, 499, 0, 249,
	250, 251, 252, 253, 0, 0, 0, 254, 500, 501,
	502, 2356, 255, 256, 503, 0, 0, 2350, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 2353, 268, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 0, 0, 275,
	276, 277, 278, 0, 279, 504, 505, 0, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	288, 289, 0, 290, 291, 0, 292, 293, 0, 2360,
	295, 506, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 507, 508, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 509, 0, 0, 0, 309, 0, 310,
	2359, 0, 0, 311, 312, 510, 511, 313, 314, 0,
	315, 512, 0, 513, 316, 0, 317, 318, 319, 320,
	321, 2349, 515, 516, 374, 0, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 0, 328, 329, 331,
	0, 0, 330, 517, 518, 0, 519, 0, 332, 0,
	520, 0, 333, 334, 335, 0, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	521, 0, 345, 346, 0, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 0,
	366, 367, 370, 371, 369, 0, 368, 0, 0, 0,
	372, 0, 522, 373, 523, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 0, 384, 0, 525, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	528, 396, 529, 397, 398, 2358, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 530, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 0, 420, 421,
	422, 423, 531, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	0, 442, 426, 427, 443, 444, 0, 445, 446, 532,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	533, 453, 454, 455, 456, 534, 0, 459, 460, 0,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 535, 536, 537, 538, 0, 474, 0, 468, 469,
	539, 470, 540, 0, 471, 472, 473, 0, 475, 476,
	0, 2357, 477, 478, 479, 481, 482, 480, 483, 0,
	484, 0, 0, 485, 486, 487, 541, 542, 543, 0,
	489, 488, 544, 1452, 0, 227, 0, 490, 491, 545,
	492, 493, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 234, 235, 236, 237, 238, 0, 239,
	240, 0, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 241, 242, 244, 243, 245, 246, 247, 496, 497,
	0, 498, 248, 499, 0, 249, 250, 251, 252, 253,
	0, 0, 0, 254, 500, 501, 502, 0, 255, 256,
	503, 0, 0, 0, 257, 258, 259, 260, 261, 262,
	263, 0, 0, 265, 266, 267, 264, 0, 268, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 0, 0, 275, 276, 277, 278, 0,
	279, 504, 505, 0, 283, 280, 281, 0, 284, 282,
	0, 285, 286, 0, 0, 287, 288, 289, 0, 290,
	291, 0, 292, 293, 0, 294, 295, 506, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 507, 508, 0,
	230, 0, 0, 0, 0, 0, 306, 307, 308, 509,
	0, 0, 0, 309, 0, 310, 0, 0, 0, 311,
	312, 510, 511, 313, 314, 0, 315, 512, 0, 513,
	316, 0, 317, 318, 319, 320, 321, 514, 515, 516,
	374, 0, 322, 323, 0, 324, 325, 326, 327, 0,
	0, 0, 231, 328, 329, 331, 0, 0, 330, 517,
	518, 0, 519, 0, 332, 0, 520, 0, 333, 334,
	335, 0, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 0, 343, 342, 0, 344, 521, 0, 345, 346,
	0, 0, 347, 348, 349, 0, 0, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 364, 0, 366, 367, 370, 371,
	369, 0, 368, 0, 232, 0, 372, 0, 522, 373,
	523, 375, 376, 0, 0, 377, 0, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 524, 0, 384, 0,
	525, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 395, 526, 527, 528, 396, 529, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 530, 407, 408, 0, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	0, 418, 419, 0, 420, 421, 422, 423, 531, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	1455, 438, 436, 439, 440, 441, 0, 442, 426, 427,
	443, 444, 0, 445, 446, 532, 0, 447, 0, 448,
	449, 450, 451, 428, 452, 457, 533, 453, 454, 455,
	456, 534, 0, 459, 460, 0, 458, 1453, 461, 462,
	463, 464, 465, 300, 466, 0, 467, 535, 536, 537,
	538, 0, 474, 0, 468, 469, 539, 470, 540, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 483, 0, 484, 0, 0, 485,
	486, 487, 541, 542, 543, 0, 1454, 488, 544, 1197,
	0, 227, 0, 490, 491, 545, 492, 493, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 230, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 1199, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 231, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	232, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 1035, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 0, 489, 488, 544, 1194, 0, 227, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 234, 235, 236, 237, 238,
	0, 239, 240, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 241, 242, 244, 243, 245, 246, 247,
	496, 497, 0, 498, 248, 499, 0, 249, 250, 251,
	252, 253, 0, 0, 0, 254, 500, 501, 502, 0,
	255, 256, 503, 0, 0, 0, 257, 258, 259, 260,
	261, 262, 263, 0, 0, 265, 266, 267, 264, 0,
	268, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 0, 0, 275, 276, 277,
	278, 0, 279, 504, 505, 0, 283, 280, 281, 0,
	284, 282, 0, 285, 286, 0, 0, 287, 288, 289,
	0, 290, 291, 0, 292, 293, 0, 294, 295, 506,
	296, 297, 299, 301, 298, 302, 303, 304, 305, 507,
	508, 0, 230, 0, 0, 0, 0, 0, 306, 307,
	308, 509, 0, 0, 0, 309, 0, 310, 0, 0,
	0, 311, 312, 510, 511, 313, 314, 0, 315, 512,
	0, 513, 316, 0, 317, 318, 319, 320, 321, 1196,
	515, 516, 374, 0, 322, 323, 0, 324, 325, 326,
	327, 0, 0, 0, 231, 328, 329, 331, 0, 0,
	330, 517, 518, 0, 519, 0, 332, 0, 520, 0,
	333, 334, 335, 0, 336, 0, 0, 0, 337, 338,
	339, 340, 341, 0, 343, 342, 0, 344, 521, 0,
	345, 346, 0, 0, 347, 348, 349, 0, 0, 350,
	351, 352, 353, 0, 354, 355, 357, 359, 356, 358,
	363, 360, 361, 362, 365, 0, 364, 0, 366, 367,
	370, 371, 369, 0, 368, 0, 232, 0, 372, 0,
	522, 373, 523, 375, 376, 0, 0, 377, 0, 0,
	1035, 379, 380, 381, 0, 0, 382, 383, 524, 0,
	384, 0, 525, 385, 386, 378, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 395, 526, 527, 528, 396,
	529, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 530, 407, 408, 0, 0, 0, 0,
	0, 0, 409, 0, 411, 412, 413, 410, 414, 415,
	416, 417, 0, 418, 419, 0, 420, 421, 422, 423,
	531, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 437, 438, 436, 439, 440, 441, 0, 442,
	426, 427, 443, 444, 0, 445, 446, 532, 0, 447,
	0, 448, 449, 450, 451, 428, 452, 457, 533, 453,
	454, 455, 456, 534, 0, 459, 460, 0, 458, 0,
	461, 462, 463, 464, 465, 300, 466, 0, 467, 535,
	536, 537, 538, 0, 474, 0, 468, 469, 539, 470,
	540, 0, 471, 472, 473, 0, 475, 476, 0, 0,
	477, 478, 479, 481, 482, 480, 483, 0, 484, 0,
	0, 485, 486, 487, 541, 542, 543, 0, 489, 488,
	544, 1100, 0, 227, 0, 490, 491, 545, 492, 493,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 497, 0, 498,
	248, 499, 0, 249, 250, 251, 252, 253, 0, 0,
	0, 254, 500, 501, 502, 0, 255, 256, 503, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 0, 0, 275, 276, 277, 278, 0, 279, 504,
	505, 0, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 288, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 506, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 507, 508, 0, 230, 0,
	0, 0, 0, 0, 306, 307, 308, 509, 0, 0,
	0, 309, 0, 310, 0, 0, 0, 311, 312, 510,
	511, 313, 314, 0, 315, 512, 0, 513, 316, 0,
	317, 318, 319, 320, 321, 1102, 515, 516, 374, 0,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	231, 328, 329, 331, 0, 0, 330, 517, 518, 0,
	519, 0, 332, 0, 520, 0, 333, 334, 335, 0,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 521, 0, 345, 346, 0, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 0, 366, 367, 370, 371, 369, 0,
	368, 0, 232, 0, 372, 0, 522, 373, 523, 375,
	376, 0, 0, 377, 0, 0, 1035, 379, 380, 381,
	0, 0, 382, 383, 524, 0, 384, 0, 525, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 528, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 530,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 0, 420, 421, 422, 423, 531, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 437, 438,
	436, 439, 440, 441, 0, 442, 426, 427, 443, 444,
	0, 445, 446, 532, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 533, 453, 454, 455, 456, 534,
	0, 459, 460, 0, 458, 0, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 535, 536, 537, 538, 0,
	474, 0, 468, 469, 539, 470, 540, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 483, 0, 484, 0, 0, 485, 486, 487,
	541, 542, 543, 0, 489, 488, 544, 577, 0, 227,
	0, 490, 491, 545, 492, 493, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 234, 235, 576,
	237, 238, 566, 239, 240, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 497, 0, 498, 248, 499, 0, 249,
	250, 251, 252, 253, 0, 0, 0, 254, 500, 501,
	502, 0, 255, 256, 503, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 569, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 0, 0, 275,
	276, 277, 278, 0, 279, 504, 505, 0, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	288, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 506, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 507, 508, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 509, 0, 0, 0, 309, 0, 310,
	0, 0, 0, 311, 312, 510, 511, 313, 314, 570,
	315, 512, 0, 513, 316, 0, 317, 318, 319, 320,
	321, 514, 515, 516, 374, 0, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 0, 328, 329, 331,
	0, 0, 330, 517, 518, 0, 519, 0, 332, 0,
	520, 0, 333, 334, 335, 0, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	521, 0, 345, 346, 0, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 0,
	366, 367, 370, 371, 369, 0, 368, 0, 0, 0,
	372, 0, 522, 373, 523, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 0, 384, 0, 525, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	528, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 530, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 0, 420, 421,
	422, 423, 531, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 571, 437, 438, 436, 439, 440, 441,
	0, 442, 426, 427, 443, 444, 0, 445, 446, 532,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	533, 453, 454, 455, 456, 534, 0, 459, 460, 0,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 535, 536, 537, 538, 0, 474, 0, 468, 469,
	539, 470, 540, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 483, 0,
	484, 0, 0, 485, 486, 487, 541, 542, 543, 0,
	489, 488, 544, 565, 0, 227, 0, 490, 491, 545,
	492, 493, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 234, 235, 236, 237, 238, 566, 239,
	240, 0, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 241, 242, 244, 243, 245, 246, 247, 496, 497,
	0, 498, 248, 499, 0, 249, 250, 251, 252, 253,
	0, 0, 0, 254, 500, 501, 502, 0, 255, 256,
	503, 0, 0, 0, 257, 258, 259, 260, 261, 262,
	263, 0, 0, 265, 266, 267, 264, 0, 268, 0,
	269, 270, 271, 569, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 0, 0, 275, 276, 277, 278, 0,
	279, 504, 505, 0, 283, 280, 281, 0, 284, 282,
	0, 285, 286, 0, 0, 287, 288, 289, 0, 290,
	291, 0, 292, 293, 0, 294, 295, 506, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 507, 508, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 509,
	0, 0, 0, 309, 0, 310, 0, 0, 0, 311,
	312, 510, 511, 313, 314, 570, 315, 512, 0, 513,
	316, 0, 317, 318, 319, 320, 321, 514, 515, 516,
	374, 0, 322, 323, 0, 324, 325, 326, 327, 0,
	0, 0, 0, 328, 329, 331, 0, 0, 330, 517,
	518, 0, 519, 0, 332, 0, 520, 0, 333, 334,
	335, 0, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 0, 343, 342, 0, 344, 521, 0, 345, 346,
	0, 0, 347, 348, 349, 0, 0, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 364, 0, 366, 367, 370, 371,
	369, 0, 368, 0, 0, 0, 372, 0, 522, 373,
	523, 375, 376, 0, 0, 377, 0, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 524, 0, 384, 0,
	525, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 395, 526, 527, 528, 396, 529, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 530, 407, 408, 0, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	0, 418, 419, 0, 420, 421, 422, 423, 531, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 571,
	437, 438, 436, 439, 440, 441, 0, 442, 426, 427,
	443, 444, 0, 445, 446, 532, 0, 447, 0, 448,
	449, 450, 451, 428, 452, 457, 533, 453, 454, 455,
	456, 534, 0, 459, 460, 0, 458, 0, 461, 462,
	463, 464, 465, 300, 466, 0, 467, 535, 536, 537,
	538, 0, 474, 0, 468, 469, 539, 470, 540, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 483, 0, 484, 0, 0, 485,
	486, 487, 541, 542, 543, 227, 489, 488, 544, 0,
	0, 0, 0, 490, 491, 545, 492, 493, 494, 0,
	0, 0, 233, 234, 235, 236, 237, 238, 0, 239,
	240, 0, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 241, 242, 244, 243, 245, 246, 247, 496, 497,
	0, 498, 248, 499, 0, 249, 250, 251, 252, 253,
	0, 0, 0, 254, 500, 501, 502, 0, 255, 256,
	503, 0, 0, 0, 257, 258, 259, 260, 261, 262,
	263, 0, 0, 265, 266, 267, 264, 0, 268, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 0, 0, 275, 276, 277, 278, 0,
	279, 504, 505, 0, 283, 280, 281, 0, 284, 282,
	0, 285, 286, 0, 0, 287, 288, 289, 0, 290,
	291, 0, 292, 293, 0, 294, 295, 506, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 507, 508, 0,
	230, 0, 0, 0, 0, 0, 306, 307, 308, 509,
	0, 0, 0, 309, 0, 310, 0, 0, 0, 311,
	312, 510, 511, 313, 314, 0, 315, 512, 0, 513,
	316, 0, 317, 318, 319, 320, 321, 514, 515, 516,
	374, 0, 322, 323, 0, 324, 325, 326, 327, 0,
	0, 0, 231, 328, 329, 331, 0, 0, 330, 517,
	518, 0, 519, 0, 332, 0, 520, 0, 333, 334,
	335, 0, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 0, 343, 342, 0, 344, 521, 0, 345, 346,
	0, 0, 347, 348, 349, 0, 0, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 364, 0, 366, 367, 370, 371,
	369, 2864, 368, 0, 232, 0, 372, 0, 522, 373,
	523, 375, 376, 0, 0, 377, 0, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 524, 0, 384, 0,
	525, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 395, 526, 527, 528, 396, 529, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 530, 407, 408, 0, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	0, 418, 419, 0, 420, 421, 422, 423, 531, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	437, 438, 436, 439, 440, 441, 0, 442, 426, 427,
	443, 444, 0, 445, 446, 532, 0, 447, 0, 448,
	449, 450, 451, 428, 452, 457, 533, 453, 454, 455,
	456, 534, 0, 459, 460, 0, 458, 0, 461, 462,
	463, 464, 465, 300, 466, 0, 467, 535, 536, 537,
	538, 0, 474, 0, 468, 469, 539, 470, 540, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 483, 0, 484, 0, 0, 485,
	486, 487, 541, 542, 543, 227, 489, 488, 544, 0,
	0, 0, 0, 490, 491, 545, 492, 493, 494, 0,
	0, 0, 233, 234, 235, 236, 237, 238, 0, 239,
	240, 0, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 241, 242, 244, 243, 245, 246, 247, 496, 497,
	0, 498, 248, 499, 0, 249, 250, 251, 252, 253,
	0, 0, 0, 254, 500, 501, 502, 0, 255, 256,
	503, 0, 0, 0, 257, 258, 259, 260, 261, 262,
	263, 0, 0, 265, 266, 267, 264, 0, 268, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 0, 0, 275, 276, 277, 278, 0,
	279, 504, 505, 0, 283, 280, 281, 0, 284, 282,
	0, 285, 286, 0, 0, 287, 288, 289, 0, 290,
	291, 0, 292, 293, 0, 294, 295, 506, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 507, 508, 0,
	230, 0, 0, 0, 0, 0, 306, 307, 308, 509,
	0, 0, 0, 309, 0, 310, 0, 0, 0, 311,
	312, 510, 511, 313, 314, 0, 315, 512, 0, 513,
	316, 0, 317, 318, 319, 320, 321, 514, 515, 516,
	374, 0, 322, 323, 0, 324, 325, 326, 327, 0,
	0, 0, 231, 328, 329, 331, 0, 0, 330, 517,
	518, 0, 519, 0, 332, 0, 520, 0, 333, 334,
	335, 0, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 0, 343, 342, 0, 344, 521, 0, 345, 346,
	0, 0, 347, 348, 349, 0, 0, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 364, 0, 366, 367, 370, 371,
	369, 0, 368, 0, 232, 0, 372, 0, 522, 373,
	523, 375, 376, 0, 0, 377, 0, 0, 1035, 379,
	380, 381, 0, 0, 382, 383, 524, 0, 384, 0,
	525, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 395, 526, 527, 528, 396, 529, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 530, 407, 408, 0, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	0, 418, 419, 0, 420, 421, 422, 423, 531, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	437, 438, 436, 439, 440, 441, 0, 442, 426, 427,
	443, 444, 0, 445, 446, 532, 0, 447, 0, 448,
	449, 450, 451, 428, 452, 457, 533, 453, 454, 455,
	456, 534, 0, 459, 460, 0, 458, 0, 461, 462,
	463, 464, 465, 300, 466, 0, 467, 535, 536, 537,
	538, 0, 474, 0, 468, 469, 539, 470, 540, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 483, 0, 484, 0, 0, 485,
	486, 487, 541, 542, 543, 0, 489, 488, 544, 2460,
	0, 227, 0, 490, 491, 545, 492, 493, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 230, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 2459, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 231, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	232, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 0, 489, 488, 544, 1944, 0, 227, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 234, 235, 236, 237, 238,
	0, 239, 240, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 241, 242, 244, 243, 245, 246, 247,
	496, 497, 0, 498, 248, 499, 0, 249, 250, 251,
	252, 253, 0, 0, 0, 254, 500, 501, 502, 0,
	255, 256, 503, 0, 0, 0, 257, 258, 259, 260,
	261, 262, 263, 0, 0, 265, 266, 267, 264, 0,
	268, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 0, 0, 275, 276, 277,
	278, 0, 279, 504, 505, 0, 283, 280, 281, 0,
	284, 282, 0, 285, 286, 0, 0, 287, 288, 289,
	0, 290, 291, 0, 292, 293, 0, 294, 295, 506,
	296, 297, 299, 301, 298, 302, 303, 304, 305, 507,
	508, 0, 230, 0, 0, 0, 0, 0, 306, 307,
	308, 509, 0, 0, 0, 309, 0, 310, 0, 0,
	0, 311, 312, 510, 511, 313, 314, 0, 315, 512,
	0, 513, 316, 0, 317, 318, 319, 320, 321, 514,
	515, 516, 374, 0, 322, 323, 0, 324, 325, 326,
	327, 0, 0, 0, 231, 328, 329, 331, 0, 0,
	330, 517, 518, 0, 519, 0, 332, 0, 520, 0,
	333, 334, 335, 0, 336, 0, 0, 0, 337, 338,
	339, 340, 341, 0, 343, 342, 0, 344, 521, 0,
	345, 346, 0, 0, 347, 348, 349, 0, 0, 350,
	351, 352, 353, 0, 354, 355, 357, 359, 356, 358,
	363, 360, 361, 362, 365, 0, 364, 0, 366, 367,
	370, 371, 369, 0, 368, 0, 232, 0, 372, 0,
	522, 373, 523, 375, 376, 0, 0, 377, 0, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 524, 0,
	384, 0, 525, 385, 386, 378, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 395, 526, 527, 528, 396,
	529, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 530, 407, 408, 0, 0, 0, 0,
	0, 0, 409, 0, 411, 412, 413, 410, 414, 415,
	416, 417, 0, 418, 419, 0, 420, 421, 422, 423,
	531, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 437, 438, 436, 439, 440, 441, 0, 442,
	426, 427, 443, 444, 0, 445, 446, 532, 0, 447,
	0, 448, 449, 450, 451, 428, 452, 457, 533, 453,
	454, 455, 456, 534, 0, 459, 460, 0, 458, 0,
	461, 462, 463, 464, 465, 300, 466, 0, 467, 535,
	536, 537, 538, 0, 474, 0, 468, 469, 539, 470,
	540, 0, 471, 472, 473, 0, 475, 476, 0, 0,
	477, 478, 479, 481, 482, 480, 483, 0, 484, 0,
	0, 485, 486, 487, 541, 542, 543, 227, 489, 488,
	544, 0, 0, 0, 0, 490, 491, 545, 492, 493,
	494, 0, 0, 0, 233, 234, 235, 236, 237, 238,
	0, 239, 240, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 241, 242, 244, 243, 245, 246, 247,
	496, 497, 0, 498, 248, 499, 0, 249, 250, 251,
	252, 253, 0, 0, 0, 254, 500, 501, 502, 0,
	255, 256, 503, 0, 0, 0, 257, 258, 259, 260,
	261, 262, 263, 0, 0, 265, 266, 267, 264, 0,
	268, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 0, 0, 275, 276, 277,
	278, 0, 279, 504, 505, 0, 283, 280, 281, 0,
	284, 282, 0, 285, 286, 0, 0, 287, 288, 289,
	0, 290, 291, 0, 292, 293, 0, 294, 295, 506,
	296, 297, 299, 301, 298, 302, 303, 304, 305, 507,
	508, 0, 230, 0, 0, 0, 0, 0, 306, 307,
	308, 509, 0, 0, 0, 309, 0, 310, 0, 0,
	0, 311, 312, 510, 511, 313, 314, 0, 315, 512,
	0, 513, 316, 0, 317, 318, 319, 320, 321, 514,
	515, 516, 374, 0, 322, 323, 0, 324, 325, 326,
	327, 0, 0, 0, 231, 328, 329, 331, 0, 0,
	330, 517, 518, 0, 519, 0, 332, 0, 520, 0,
	333, 334, 335, 0, 336, 0, 0, 0, 337, 338,
	339, 340, 341, 0, 343, 342, 0, 344, 521, 0,
	345, 346, 0, 0, 347, 348, 349, 0, 0, 350,
	351, 352, 353, 0, 354, 355, 357, 359, 356, 358,
	363, 360, 361, 362, 365, 0, 364, 0, 366, 367,
	370, 371, 369, 0, 368, 0, 232, 0, 372, 0,
	522, 373, 523, 375, 376, 0, 0, 377, 0, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 524, 0,
	384, 0, 525, 385, 386, 378, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 395, 526, 527, 528, 396,
	529, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 530, 407, 408, 0, 0, 0, 0,
	0, 0, 409, 0, 411, 412, 413, 410, 414, 415,
	416, 417, 0, 418, 419, 0, 420, 421, 422, 423,
	531, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 437, 438, 436, 439, 440, 441, 0, 442,
	426, 427, 443, 444, 0, 445, 446, 532, 0, 447,
	0, 448, 449, 450, 451, 428, 452, 457, 533, 453,
	454, 455, 456, 534, 0, 459, 460, 0, 458, 1870,
	461, 462, 463, 464, 465, 300, 466, 0, 467, 535,
	536, 537, 538, 0, 474, 0, 468, 469, 539, 470,
	540, 0, 471, 472, 473, 0, 475, 476, 0, 0,
	477, 478, 479, 481, 482, 480, 483, 0, 484, 0,
	0, 485, 486, 487, 541, 542, 543, 0, 489, 488,
	544, 1875, 0, 227, 0, 490, 491, 545, 492, 493,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 497, 0, 498,
	248, 499, 0, 249, 250, 251, 252, 253, 0, 0,
	0, 254, 500, 501, 502, 0, 255, 256, 503, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 0, 0, 275, 276, 277, 278, 0, 279, 504,
	505, 0, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 288, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 506, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 507, 508, 0, 230, 0,
	0, 0, 0, 0, 306, 307, 308, 509, 0, 0,
	0, 309, 0, 310, 0, 0, 0, 311, 312, 510,
	511, 313, 314, 0, 315, 512, 0, 513, 316, 0,
	317, 318, 319, 320, 321, 1874, 515, 516, 374, 0,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	231, 328, 329, 331, 0, 0, 330, 517, 518, 0,
	519, 0, 332, 0, 520, 0, 333, 334, 335, 0,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 521, 0, 345, 346, 0, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 0, 366, 367, 370, 371, 369, 0,
	368, 0, 232, 0, 372, 0, 522, 373, 523, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 0, 384, 0, 525, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 528, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 530,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 0, 420, 421, 422, 423, 531, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 437, 438,
	436, 439, 440, 441, 0, 442, 426, 427, 443, 444,
	0, 445, 446, 532, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 533, 453, 454, 455, 456, 534,
	0, 459, 460, 0, 458, 0, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 535, 536, 537, 538, 0,
	474, 0, 468, 469, 539, 470, 540, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 483, 0, 484, 0, 0, 485, 486, 487,
	541, 542, 543, 0, 489, 488, 544, 1863, 0, 227,
	0, 490, 491, 545, 492, 493, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 497, 0, 498, 248, 499, 0, 249,
	250, 251, 252, 253, 0, 0, 0, 254, 500, 501,
	502, 0, 255, 256, 503, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 0, 0, 275,
	276, 277, 278, 0, 279, 504, 505, 0, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	288, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 506, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 507, 508, 0, 230, 0, 0, 0, 0, 0,
	306, 307, 308, 509, 0, 0, 0, 309, 0, 310,
	0, 0, 0, 311, 312, 510, 511, 313, 314, 0,
	315, 512, 0, 513, 316, 0, 317, 318, 319, 320,
	321, 1865, 515, 516, 374, 0, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 231, 328, 329, 331,
	0, 0, 330, 517, 518, 0, 519, 0, 332, 0,
	520, 0, 333, 334, 335, 0, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	521, 0, 345, 346, 0, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 0,
	366, 367, 370, 371, 369, 0, 368, 0, 232, 0,
	372, 0, 522, 373, 523, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 0, 384, 0, 525, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	528, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 530, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 0, 420, 421,
	422, 423, 531, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	0, 442, 426, 427, 443, 444, 0, 445, 446, 532,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	533, 453, 454, 455, 456, 534, 0, 459, 460, 0,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 535, 536, 537, 538, 0, 474, 0, 468, 469,
	539, 470, 540, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 483, 0,
	484, 0, 0, 485, 486, 487, 541, 542, 543, 0,
	489, 488, 544, 1349, 0, 227, 0, 490, 491, 545,
	492, 493, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 234, 235, 236, 237, 238, 0, 239,
	240, 0, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 241, 242, 244, 243, 245, 246, 247, 496, 497,
	0, 498, 248, 499, 0, 249, 250, 251, 252, 253,
	0, 0, 0, 254, 500, 501, 502, 0, 255, 256,
	503, 0, 0, 0, 257, 258, 259, 260, 261, 262,
	263, 0, 0, 265, 266, 267, 264, 0, 268, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 0, 0, 275, 276, 277, 278, 0,
	279, 504, 505, 0, 283, 280, 281, 0, 284, 282,
	0, 285, 286, 0, 0, 287, 288, 289, 0, 290,
	291, 0, 292, 293, 0, 294, 295, 506, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 507, 508, 0,
	230, 0, 0, 0, 0, 0, 306, 307, 308, 509,
	0, 0, 0, 309, 0, 310, 0, 0, 0, 311,
	312, 510, 511, 313, 314, 0, 315, 512, 0, 513,
	316, 0, 317, 318, 319, 320, 321, 1348, 515, 516,
	374, 0, 322, 323, 0, 324, 325, 326, 327, 0,
	0, 0, 231, 328, 329, 331, 0, 0, 330, 517,
	518, 0, 519, 0, 332, 0, 520, 0, 333, 334,
	335, 0, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 0, 343, 342, 0, 344, 521, 0, 345, 346,
	0, 0, 347, 348, 349, 0, 0, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 364, 0, 366, 367, 370, 371,
	369, 0, 368, 0, 232, 0, 372, 0, 522, 373,
	523, 375, 376, 0, 0, 377, 0, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 524, 0, 384, 0,
	525, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 395, 526, 527, 528, 396, 529, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 530, 407, 408, 0, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	0, 418, 419, 0, 420, 421, 422, 423, 531, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	437, 438, 436, 439, 440, 441, 0, 442, 426, 427,
	443, 444, 0, 445, 446, 532, 0, 447, 0, 448,
	449, 450, 451, 428, 452, 457, 533, 453, 454, 455,
	456, 534, 0, 459, 460, 0, 458, 0, 461, 462,
	463, 464, 465, 300, 466, 0, 467, 535, 536, 537,
	538, 0, 474, 0, 468, 469, 539, 470, 540, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 483, 0, 484, 0, 0, 485,
	486, 487, 541, 542, 543, 0, 489, 488, 544, 1340,
	0, 227, 0, 490, 491, 545, 492, 493, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 230, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 1339, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 231, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	232, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 0, 489, 488, 544, 1337, 0, 227, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 234, 235, 236, 237, 238,
	0, 239, 240, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 241, 242, 244, 243, 245, 246, 247,
	496, 497, 0, 498, 248, 499, 0, 249, 250, 251,
	252, 253, 0, 0, 0, 254, 500, 501, 502, 0,
	255, 256, 503, 0, 0, 0, 257, 258, 259, 260,
	261, 262, 263, 0, 0, 265, 266, 267, 264, 0,
	268, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 0, 0, 275, 276, 277,
	278, 0, 279, 504, 505, 0, 283, 280, 281, 0,
	284, 282, 0, 285, 286, 0, 0, 287, 288, 289,
	0, 290, 291, 0, 292, 293, 0, 294, 295, 506,
	296, 297, 299, 301, 298, 302, 303, 304, 305, 507,
	508, 0, 230, 0, 0, 0, 0, 0, 306, 307,
	308, 509, 0, 0, 0, 309, 0, 310, 0, 0,
	0, 311, 312, 510, 511, 313, 314, 0, 315, 512,
	0, 513, 316, 0, 317, 318, 319, 320, 321, 1336,
	515, 516, 374, 0, 322, 323, 0, 324, 325, 326,
	327, 0, 0, 0, 231, 328, 329, 331, 0, 0,
	330, 517, 518, 0, 519, 0, 332, 0, 520, 0,
	333, 334, 335, 0, 336, 0, 0, 0, 337, 338,
	339, 340, 341, 0, 343, 342, 0, 344, 521, 0,
	345, 346, 0, 0, 347, 348, 349, 0, 0, 350,
	351, 352, 353, 0, 354, 355, 357, 359, 356, 358,
	363, 360, 361, 362, 365, 0, 364, 0, 366, 367,
	370, 371, 369, 0, 368, 0, 232, 0, 372, 0,
	522, 373, 523, 375, 376, 0, 0, 377, 0, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 524, 0,
	384, 0, 525, 385, 386, 378, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 395, 526, 527, 528, 396,
	529, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 530, 407, 408, 0, 0, 0, 0,
	0, 0, 409, 0, 411, 412, 413, 410, 414, 415,
	416, 417, 0, 418, 419, 0, 420, 421, 422, 423,
	531, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 437, 438, 436, 439, 440, 441, 0, 442,
	426, 427, 443, 444, 0, 445, 446, 532, 0, 447,
	0, 448, 449, 450, 451, 428, 452, 457, 533, 453,
	454, 455, 456, 534, 0, 459, 460, 0, 458, 0,
	461, 462, 463, 464, 465, 300, 466, 0, 467, 535,
	536, 537, 538, 0, 474, 0, 468, 469, 539, 470,
	540, 0, 471, 472, 473, 0, 475, 476, 0, 0,
	477, 478, 479, 481, 482, 480, 483, 0, 484, 0,
	0, 485, 486, 487, 541, 542, 543, 0, 489, 488,
	544, 1333, 0, 227, 0, 490, 491, 545, 492, 493,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 497, 0, 498,
	248, 499, 0, 249, 250, 251, 252, 253, 0, 0,
	0, 254, 500, 501, 502, 0, 255, 256, 503, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 0, 0, 275, 276, 277, 278, 0, 279, 504,
	505, 0, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 288, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 506, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 507, 508, 0, 230, 0,
	0, 0, 0, 0, 306, 307, 308, 509, 0, 0,
	0, 309, 0, 310, 0, 0, 0, 311, 312, 510,
	511, 313, 314, 0, 315, 512, 0, 513, 316, 0,
	317, 318, 319, 320, 321, 1332, 515, 516, 374, 0,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	231, 328, 329, 331, 0, 0, 330, 517, 518, 0,
	519, 0, 332, 0, 520, 0, 333, 334, 335, 0,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 521, 0, 345, 346, 0, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 0, 366, 367, 370, 371, 369, 0,
	368, 0, 232, 0, 372, 0, 522, 373, 523, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 0, 384, 0, 525, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 528, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 530,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 0, 420, 421, 422, 423, 531, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 437, 438,
	436, 439, 440, 441, 0, 442, 426, 427, 443, 444,
	0, 445, 446, 532, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 533, 453, 454, 455, 456, 534,
	0, 459, 460, 0, 458, 0, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 535, 536, 537, 538, 0,
	474, 0, 468, 469, 539, 470, 540, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 483, 0, 484, 0, 0, 485, 486, 487,
	541, 542, 543, 0, 489, 488, 544, 1289, 0, 227,
	0, 490, 491, 545, 492, 493, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 497, 0, 498, 248, 499, 0, 249,
	250, 251, 252, 253, 0, 0, 0, 254, 500, 501,
	502, 0, 255, 256, 503, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 0, 0, 275,
	276, 277, 278, 0, 279, 504, 505, 0, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	288, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 506, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 507, 508, 0, 230, 0, 0, 0, 0, 0,
	306, 307, 308, 509, 0, 0, 0, 309, 0, 310,
	0, 0, 0, 311, 312, 510, 511, 313, 314, 0,
	315, 512, 0, 513, 316, 0, 317, 318, 319, 320,
	321, 514, 515, 516, 374, 0, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 231, 328, 329, 331,
	0, 0, 330, 517, 518, 0, 519, 0, 332, 0,
	520, 0, 333, 334, 335, 0, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	521, 0, 345, 346, 0, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 0,
	366, 367, 370, 371, 369, 0, 368, 0, 232, 0,
	372, 0, 522, 373, 523, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 0, 384, 0, 525, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	528, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 530, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 0, 420, 421,
	422, 423, 531, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	0, 442, 426, 427, 443, 444, 0, 445, 446, 532,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	533, 453, 454, 455, 456, 534, 0, 459, 460, 0,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 535, 536, 537, 538, 0, 474, 0, 468, 469,
	539, 470, 540, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 483, 0,
	484, 0, 0, 485, 486, 487, 541, 542, 543, 0,
	489, 488, 544, 1215, 0, 227, 0, 490, 491, 545,
	492, 493, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 234, 235, 236, 237, 238, 0, 239,
	240, 0, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 241, 242, 244, 243, 245, 246, 247, 496, 497,
	0, 498, 248, 499, 0, 249, 250, 251, 252, 253,
	0, 0, 0, 254, 500, 501, 502, 0, 255, 256,
	503, 0, 0, 0, 257, 258, 259, 260, 261, 262,
	263, 0, 0, 265, 266, 267, 264, 0, 268, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 0, 0, 275, 276, 277, 278, 0,
	279, 504, 505, 0, 283, 280, 281, 0, 284, 282,
	0, 285, 286, 0, 0, 287, 288, 289, 0, 290,
	291, 0, 292, 293, 0, 294, 295, 506, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 507, 508, 0,
	230, 0, 0, 0, 0, 0, 306, 307, 308, 509,
	0, 0, 0, 309, 0, 310, 0, 0, 0, 311,
	312, 510, 511, 313, 314, 0, 315, 512, 0, 513,
	316, 0, 317, 318, 319, 320, 321, 514, 515, 516,
	374, 0, 322, 323, 0, 324, 325, 326, 327, 0,
	0, 0, 231, 328, 329, 331, 0, 0, 330, 517,
	518, 0, 519, 0, 332, 0, 520, 0, 333, 334,
	335, 0, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 0, 343, 342, 0, 344, 521, 0, 345, 346,
	0, 0, 347, 348, 349, 0, 0, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 364, 0, 366, 367, 370, 371,
	369, 0, 368, 0, 232, 0, 372, 0, 522, 373,
	523, 375, 376, 0, 0, 377, 0, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 524, 0, 384, 0,
	525, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 395, 526, 527, 528, 396, 529, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 530, 407, 408, 0, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	0, 418, 419, 0, 420, 421, 422, 423, 531, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	437, 438, 436, 439, 440, 441, 0, 442, 426, 427,
	443, 444, 0, 445, 446, 532, 0, 447, 0, 448,
	449, 450, 451, 428, 452, 457, 533, 453, 454, 455,
	456, 534, 0, 459, 460, 0, 458, 0, 461, 462,
	463, 464, 465, 300, 466, 0, 467, 535, 536, 537,
	538, 0, 474, 0, 468, 469, 539, 470, 540, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 483, 0, 484, 0, 0, 485,
	486, 487, 541, 542, 543, 0, 489, 488, 544, 1208,
	0, 227, 0, 490, 491, 545, 492, 493, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 230, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 1210, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 231, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	232, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 0, 489, 488, 544, 547, 0, 227, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 234, 235, 236, 237, 238,
	0, 239, 240, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 241, 242, 244, 243, 245, 246, 247,
	496, 497, 0, 498, 248, 499, 0, 249, 250, 251,
	252, 253, 0, 0, 0, 254, 500, 501, 502, 0,
	255, 256, 503, 0, 0, 0, 257, 258, 259, 260,
	261, 262, 263, 0, 0, 265, 266, 267, 264, 0,
	268, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 0, 0, 275, 276, 277,
	278, 0, 279, 504, 505, 0, 283, 280, 281, 0,
	284, 282, 0, 285, 286, 0, 0, 287, 288, 289,
	0, 290, 291, 0, 292, 293, 0, 294, 295, 506,
	296, 297, 299, 301, 298, 302, 303, 304, 305, 507,
	508, 0, 230, 0, 0, 0, 0, 0, 306, 307,
	308, 509, 0, 0, 0, 309, 0, 310, 0, 0,
	0, 311, 312, 510, 511, 313, 314, 0, 315, 512,
	0, 513, 316, 0, 317, 318, 319, 320, 321, 514,
	515, 516, 374, 0, 322, 323, 0, 324, 325, 326,
	327, 0, 0, 0, 231, 328, 329, 331, 0, 0,
	330, 517, 518, 0, 519, 0, 332, 0, 520, 0,
	333, 334, 335, 0, 336, 0, 0, 0, 337, 338,
	339, 340, 341, 0, 343, 342, 0, 344, 521, 0,
	345, 346, 0, 0, 347, 348, 349, 0, 0, 350,
	351, 352, 353, 0, 354, 355, 357, 359, 356, 358,
	363, 360, 361, 362, 365, 0, 364, 0, 366, 367,
	370, 371, 369, 0, 368, 0, 232, 0, 372, 0,
	522, 373, 523, 375, 376, 0, 0, 377, 0, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 524, 0,
	384, 0, 525, 385, 386, 378, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 395, 526, 527, 528, 396,
	529, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 530, 407, 408, 0, 0, 0, 0,
	0, 0, 409, 0, 411, 412, 413, 410, 414, 415,
	416, 417, 0, 418, 419, 0, 420, 421, 422, 423,
	531, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 437, 438, 436, 439, 440, 441, 0, 442,
	426, 427, 443, 444, 0, 445, 446, 532, 0, 447,
	0, 448, 449, 450, 451, 428, 452, 457, 533, 453,
	454, 455, 456, 534, 0, 459, 460, 0, 458, 0,
	461, 462, 463, 464, 465, 300, 466, 0, 467, 535,
	536, 537, 538, 0, 474, 0, 468, 469, 539, 470,
	540, 0, 471, 472, 473, 0, 475, 476, 0, 0,
	477, 478, 479, 481, 482, 480, 483, 0, 484, 0,
	0, 485, 486, 487, 541, 542, 543, 0, 489, 488,
	544, 218, 0, 227, 0, 490, 491, 545, 492, 493,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 497, 0, 498,
	248, 499, 0, 249, 250, 251, 252, 253, 0, 0,
	0, 254, 500, 501, 502, 0, 255, 256, 503, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 0, 0, 275, 276, 277, 278, 0, 279, 504,
	505, 0, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 288, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 506, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 507, 508, 0, 230, 0,
	0, 0, 0, 0, 306, 307, 308, 509, 0, 0,
	0, 309, 0, 310, 0, 0, 0, 311, 312, 510,
	511, 313, 314, 0, 315, 512, 0, 513, 316, 0,
	317, 318, 319, 320, 321, 514, 515, 516, 374, 0,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	231, 328, 329, 331, 0, 0, 330, 517, 518, 0,
	519, 0, 332, 0, 520, 0, 333, 334, 335, 0,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 521, 0, 345, 346, 0, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 0, 366, 367, 370, 371, 369, 0,
	368, 0, 232, 0, 372, 0, 522, 373, 523, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 0, 384, 0, 525, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 528, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 530,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 0, 420, 421, 422, 423, 531, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 437, 438,
	436, 439, 440, 441, 0, 442, 426, 427, 443, 444,
	0, 445, 446, 532, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 533, 453, 454, 455, 456, 534,
	0, 459, 460, 0, 458, 0, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 535, 536, 537, 538, 0,
	474, 0, 468, 469, 539, 470, 540, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 483, 0, 484, 0, 0, 485, 486, 487,
	541, 542, 543, 227, 489, 488, 544, 0, 0, 0,
	0, 490, 491, 545, 492, 493, 494, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 497, 0, 498,
	248, 499, 0, 249, 250, 251, 252, 253, 0, 0,
	0, 254, 500, 501, 502, 0, 255, 256, 503, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 0, 0, 275, 276, 277, 278, 0, 279, 504,
	505, 0, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 288, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 506, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 507, 508, 0, 230, 0,
	0, 0, 0, 0, 306, 307, 308, 509, 0, 0,
	0, 309, 0, 310, 0, 0, 0, 311, 312, 510,
	511, 313, 314, 0, 315, 512, 0, 513, 316, 0,
	317, 318, 319, 320, 321, 514, 515, 516, 374, 0,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	231, 328, 329, 331, 0, 0, 330, 517, 518, 0,
	519, 0, 332, 0, 520, 0, 333, 334, 335, 0,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 521, 0, 345, 346, 0, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 0, 366, 367, 370, 371, 369, 0,
	368, 0, 232, 0, 372, 0, 522, 373, 523, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 0, 384, 0, 525, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 528, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 530,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 0, 420, 421, 422, 423, 531, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 437, 438,
	436, 439, 440, 441, 0, 442, 426, 427, 443, 444,
	0, 445, 446, 532, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 533, 453, 454, 455, 456, 534,
	0, 459, 460, 0, 458, 0, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 535, 536, 537, 538, 0,
	474, 0, 468, 469, 539, 470, 540, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 483, 0, 484, 0, 0, 485, 486, 487,
	541, 542, 543, 227, 489, 488, 544, 0, 0, 0,
	0, 490, 491, 545, 492, 493, 494, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 497, 0, 498,
	248, 499, 0, 249, 250, 251, 252, 253, 0, 0,
	0, 254, 500, 501, 502, 0, 255, 256, 503, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 569, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 0, 0, 275, 276, 277, 278, 0, 279, 504,
	505, 0, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 288, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 506, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 507, 508, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 509, 0, 0,
	0, 309, 0, 310, 0, 0, 0, 311, 312, 510,
	511, 313, 314, 570, 315, 512, 0, 513, 316, 0,
	317, 318, 319, 320, 321, 514, 515, 516, 374, 0,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	0, 328, 329, 331, 0, 0, 330, 517, 518, 0,
	519, 0, 332, 0, 520, 0, 333, 334, 335, 0,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 521, 0, 345, 346, 0, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 0, 366, 367, 370, 371, 369, 0,
	368, 0, 0, 0, 372, 0, 522, 373, 523, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 0, 384, 0, 525, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 528, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 530,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 0, 420, 421, 422, 423, 531, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 571, 437, 438,
	436, 439, 440, 441, 0, 442, 426, 427, 443, 444,
	0, 445, 446, 532, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 533, 453, 454, 455, 456, 534,
	0, 459, 460, 0, 458, 0, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 535, 536, 537, 538, 0,
	474, 0, 468, 469, 539, 470, 540, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 483, 0, 484, 0, 0, 485, 486, 487,
	541, 542, 543, 227, 489, 488, 544, 0, 0, 0,
	0, 490, 491, 545, 492, 493, 494, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 497, 0, 498,
	248, 499, 0, 249, 250, 251, 252, 253, 0, 0,
	0, 254, 500, 501, 502, 0, 255, 256, 503, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 0, 0, 275, 276, 1975, 278, 0, 279, 504,
	505, 0, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 288, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 506, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 507, 508, 0, 230, 0,
	0, 0, 0, 0, 306, 307, 308, 509, 0, 0,
	0, 309, 0, 310, 0, 0, 0, 311, 312, 510,
	511, 313, 314, 0, 315, 512, 0, 513, 316, 0,
	317, 318, 319, 320, 321, 514, 515, 516, 374, 0,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	231, 328, 329, 331, 0, 0, 330, 517, 518, 0,
	519, 0, 332, 0, 520, 0, 333, 334, 335, 0,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 521, 0, 345, 346, 0, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 0, 366, 367, 370, 371, 369, 0,
	368, 0, 232, 0, 372, 0, 522, 373, 523, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 0, 384, 0, 525, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 528, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 530,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 0, 420, 421, 422, 423, 531, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 437, 438,
	436, 439, 440, 441, 0, 442, 426, 427, 443, 444,
	0, 445, 446, 532, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 533, 453, 454, 455, 456, 534,
	0, 459, 460, 0, 458, 0, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 535, 536, 537, 538, 0,
	474, 0, 468, 469, 539, 470, 540, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 483, 0, 484, 0, 0, 485, 486, 487,
	541, 542, 543, 227, 489, 488, 544, 0, 0, 0,
	0, 490, 491, 545, 492, 493, 494, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 497, 0, 498,
	248, 499, 0, 249, 250, 251, 252, 253, 0, 0,
	0, 254, 500, 501, 502, 0, 255, 256, 503, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 0, 0, 275, 276, 1973, 278, 0, 279, 504,
	505, 0, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 288, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 506, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 507, 508, 0, 230, 0,
	0, 0, 0, 0, 306, 307, 308, 509, 0, 0,
	0, 309, 0, 310, 0, 0, 0, 311, 312, 510,
	511, 313, 314, 0, 315, 512, 0, 513, 316, 0,
	317, 318, 319, 320, 321, 514, 515, 516, 374, 0,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	231, 328, 329, 331, 0, 0, 330, 517, 518, 0,
	519, 0, 332, 0, 520, 0, 333, 334, 335, 0,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 521, 0, 345, 346, 0, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 0, 366, 367, 370, 371, 369, 0,
	368, 0, 232, 0, 372, 0, 522, 373, 523, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 0, 384, 0, 525, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 528, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 530,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 0, 420, 421, 422, 423, 531, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 437, 438,
	436, 439, 440, 441, 0, 442, 426, 427, 443, 444,
	0, 445, 446, 532, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 533, 453, 454, 455, 456, 534,
	0, 459, 460, 0, 458, 0, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 535, 536, 537, 538, 0,
	474, 0, 468, 469, 539, 470, 540, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 483, 0, 484, 0, 0, 485, 486, 487,
	541, 542, 543, 227, 489, 488, 544, 0, 0, 0,
	0, 490, 491, 545, 492, 493, 494, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 497, 0, 498,
	248, 499, 0, 249, 250, 251, 252, 253, 0, 0,
	0, 254, 500, 501, 502, 0, 255, 256, 503, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 0, 0, 275, 276, 1971, 278, 0, 279, 504,
	505, 0, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 288, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 506, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 507, 508, 0, 230, 0,
	0, 0, 0, 0, 306, 307, 308, 509, 0, 0,
	0, 309, 0, 310, 0, 0, 0, 311, 312, 510,
	511, 313, 314, 0, 315, 512, 0, 513, 316, 0,
	317, 318, 319, 320, 321, 514, 515, 516, 374, 0,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	231, 328, 329, 331, 0, 0, 330, 517, 518, 0,
	519, 0, 332, 0, 520, 0, 333, 334, 335, 0,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 521, 0, 345, 346, 0, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 0, 366, 367, 370, 371, 369, 0,
	368, 0, 232, 0, 372, 0, 522, 373, 523, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 0, 384, 0, 525, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 528, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 530,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 0, 420, 421, 422, 423, 531, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 437, 438,
	436, 439, 440, 441, 0, 442, 426, 427, 443, 444,
	0, 445, 446, 532, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 533, 453, 454, 455, 456, 534,
	0, 459, 460, 0, 458, 0, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 535, 536, 537, 538, 0,
	474, 0, 468, 469, 539, 470, 540, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 483, 0, 484, 0, 0, 485, 486, 487,
	541, 542, 543, 227, 489, 488, 544, 0, 0, 0,
	0, 490, 491, 545, 492, 493, 494, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 497, 0, 498,
	248, 499, 0, 249, 250, 251, 252, 253, 0, 0,
	0, 254, 500, 501, 502, 0, 255, 256, 503, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 0, 0, 275, 276, 277, 278, 0, 279, 504,
	505, 0, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 288, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 506, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 507, 508, 0, 230, 0,
	0, 0, 0, 0, 306, 307, 308, 509, 0, 0,
	0, 309, 0, 310, 0, 0, 0, 311, 312, 510,
	511, 313, 314, 0, 315, 512, 0, 513, 316, 0,
	317, 318, 319, 320, 321, 1913, 515, 516, 374, 0,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	231, 328, 329, 331, 0, 0, 330, 517, 518, 0,
	519, 0, 332, 0, 520, 0, 333, 334, 335, 0,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 521, 0, 345, 346, 0, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 0, 366, 367, 370, 371, 369, 0,
	368, 0, 232, 0, 372, 0, 522, 373, 523, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 0, 384, 0, 525, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 528, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 530,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 0, 420, 421, 422, 423, 531, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 437, 438,
	436, 439, 440, 441, 0, 442, 426, 427, 443, 444,
	0, 445, 446, 532, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 533, 453, 454, 455, 456, 534,
	0, 459, 460, 0, 458, 0, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 535, 536, 537, 538, 0,
	474, 0, 468, 469, 539, 470, 540, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 483, 0, 484, 0, 0, 485, 486, 487,
	541, 542, 543, 0, 489, 488, 544, 724, 0, 227,
	0, 490, 491, 545, 492, 493, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 497, 0, 498, 248, 499, 0, 249,
	250, 251, 252, 253, 0, 0, 0, 254, 500, 501,
	502, 0, 255, 256, 503, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 0, 0, 275,
	276, 277, 278, 0, 279, 504, 505, 0, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	288, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 506, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 507, 508, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 509, 0, 0, 0, 309, 0, 310,
	0, 0, 0, 311, 312, 510, 511, 313, 314, 0,
	315, 512, 0, 513, 316, 0, 317, 318, 319, 320,
	321, 514, 515, 516, 374, 0, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 0, 328, 329, 331,
	0, 0, 330, 517, 518, 0, 519, 723, 332, 0,
	520, 0, 333, 334, 335, 0, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	521, 0, 345, 346, 0, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 0,
	366, 367, 370, 371, 369, 0, 368, 0, 0, 0,
	372, 0, 522, 373, 523, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 0, 384, 0, 525, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	528, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 530, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 0, 420, 421,
	422, 423, 531, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	0, 442, 426, 427, 443, 444, 0, 445, 446, 532,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	533, 453, 454, 455, 456, 534, 0, 459, 460, 0,
	458, 722, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 535, 536, 537, 538, 0, 474, 0, 468, 469,
	539, 470, 540, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 483, 0,
	484, 0, 0, 485, 486, 487, 541, 542, 543, 227,
	489, 488, 544, 0, 0, 0, 0, 490, 491, 545,
	492, 493, 494, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 497, 0, 498, 248, 499, 0, 249,
	250, 251, 252, 253, 0, 0, 0, 254, 500, 501,
	502, 0, 255, 256, 503, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 0, 0, 275,
	276, 277, 278, 0, 279, 504, 505, 0, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	288, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 506, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 507, 508, 0, 2526, 0, 0, 0, 0, 0,
	306, 307, 308, 509, 0, 0, 0, 309, 0, 310,
	0, 0, 0, 311, 312, 510, 511, 313, 314, 0,
	315, 512, 0, 513, 316, 0, 317, 318, 319, 320,
	321, 514, 515, 516, 374, 0, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 0, 328, 329, 331,
	0, 0, 330, 517, 518, 0, 519, 0, 332, 0,
	520, 0, 333, 334, 335, 0, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	521, 0, 345, 346, 0, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 0,
	366, 367, 370, 371, 369, 0, 368, 0, 0, 0,
	372, 0, 522, 373, 523, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 0, 384, 0, 525, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	528, 396, 529, 397, 398, 3439, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 530, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 0, 420, 421,
	422, 423, 531, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	0, 442, 426, 427, 443, 444, 0, 445, 446, 532,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	533, 453, 454, 455, 456, 534, 0, 459, 460, 0,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 535, 536, 537, 538, 0, 474, 0, 468, 469,
	539, 470, 540, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 483, 0,
	484, 0, 0, 485, 486, 487, 541, 542, 543, 0,
	489, 488, 544, 556, 0, 227, 0, 490, 491, 545,
	492, 493, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 234, 235, 236, 237, 238, 555, 239,
	240, 0, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 241, 242, 244, 243, 245, 246, 247, 496, 497,
	0, 498, 248, 499, 0, 249, 250, 251, 252, 253,
	0, 0, 0, 254, 500, 501, 502, 0, 255, 256,
	503, 0, 0, 0, 257, 258, 259, 260, 261, 262,
	263, 0, 0, 265, 266, 267, 264, 0, 268, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 0, 0, 275, 276, 277, 278, 0,
	279, 504, 505, 0, 283, 280, 281, 0, 284, 282,
	0, 285, 286, 0, 0, 287, 288, 289, 0, 290,
	291, 0, 292, 293, 0, 294, 295, 506, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 507, 508, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 509,
	0, 0, 0, 309, 0, 310, 0, 0, 0, 311,
	312, 510, 511, 313, 314, 0, 315, 512, 0, 513,
	316, 0, 317, 318, 319, 320, 321, 514, 515, 516,
	374, 0, 322, 323, 0, 324, 325, 326, 327, 0,
	0, 0, 0, 328, 329, 331, 0, 0, 330, 517,
	518, 0, 519, 0, 332, 0, 520, 0, 333, 334,
	335, 0, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 0, 343, 342, 0, 344, 521, 0, 345, 346,
	0, 0, 347, 348, 349, 0, 0, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 364, 0, 366, 367, 370, 371,
	369, 0, 368, 0, 0, 0, 372, 0, 522, 373,
	523, 375, 376, 0, 0, 377, 0, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 524, 0, 384, 0,
	525, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 395, 526, 527, 528, 396, 529, 554,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 530, 407, 408, 0, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	0, 418, 419, 0, 420, 421, 422, 423, 531, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	437, 438, 436, 439, 440, 441, 0, 442, 426, 427,
	443, 444, 0, 445, 446, 532, 0, 447, 0, 448,
	449, 450, 451, 428, 452, 457, 533, 453, 454, 455,
	456, 534, 0, 459, 460, 0, 458, 0, 461, 462,
	463, 464, 465, 300, 466, 0, 467, 535, 536, 537,
	538, 0, 474, 0, 468, 469, 539, 470, 540, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 483, 0, 484, 0, 0, 485,
	486, 487, 541, 542, 543, 0, 489, 488, 544, 227,
	3448, 0, 0, 490, 491, 545, 492, 493, 494, 0,
	0, 0, 0, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 497, 0, 498, 248, 499, 0, 249,
	250, 251, 252, 253, 0, 0, 0, 254, 500, 501,
	502, 0, 255, 256, 503, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 0, 0, 275,
	276, 277, 278, 0, 279, 504, 505, 0, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	288, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 506, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 507, 508, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 509, 0, 0, 0, 309, 0, 310,
	0, 0, 0, 311, 312, 510, 511, 313, 314, 0,
	315, 512, 0, 513, 316, 0, 317, 318, 319, 320,
	321, 514, 515, 516, 374, 0, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 0, 328, 329, 331,
	0, 0, 330, 517, 518, 0, 519, 0, 332, 0,
	520, 0, 333, 334, 335, 0, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	521, 0, 345, 346, 0, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 0,
	366, 367, 370, 371, 369, 0, 368, 0, 0, 0,
	372, 0, 522, 373, 523, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 0, 384, 0, 525, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	528, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 530, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 0, 420, 421,
	422, 423, 531, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	0, 442, 426, 427, 443, 444, 0, 445, 446, 532,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	533, 453, 454, 455, 456, 534, 0, 459, 460, 0,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 535, 536, 537, 538, 0, 474, 0, 468, 469,
	539, 470, 540, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 483, 0,
	484, 0, 0, 485, 486, 487, 541, 542, 543, 0,
	489, 488, 544, 227, 2513, 0, 0, 490, 491, 545,
	492, 493, 494, 0, 0, 0, 0, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 497, 0, 498,
	248, 499, 0, 249, 250, 251, 252, 253, 0, 0,
	0, 254, 500, 501, 502, 0, 255, 256, 503, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 0, 0, 275, 276, 277, 278, 0, 279, 504,
	505, 0, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 288, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 506, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 507, 508, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 509, 0, 0,
	0, 309, 0, 310, 0, 0, 0, 311, 312, 510,
	511, 313, 314, 0, 315, 512, 0, 513, 316, 0,
	317, 318, 319, 320, 321, 514, 515, 516, 374, 0,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	0, 328, 329, 331, 0, 0, 330, 517, 518, 0,
	519, 0, 332, 0, 520, 0, 333, 334, 335, 0,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 521, 0, 345, 346, 0, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 0, 366, 367, 370, 371, 369, 0,
	368, 0, 0, 0, 372, 0, 522, 373, 523, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 0, 384, 0, 525, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 528, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 530,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 0, 420, 421, 422, 423, 531, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 437, 438,
	436, 439, 440, 441, 0, 442, 426, 427, 443, 444,
	0, 445, 446, 532, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 533, 453, 454, 455, 456, 534,
	0, 459, 460, 0, 458, 0, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 535, 536, 537, 538, 0,
	474, 0, 468, 469, 539, 470, 540, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 483, 0, 484, 0, 0, 485, 486, 487,
	541, 542, 543, 227, 489, 488, 544, 0, 0, 0,
	0, 490, 491, 545, 492, 493, 494, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 497, 0, 498,
	248, 499, 0, 249, 250, 251, 252, 253, 0, 0,
	0, 254, 500, 501, 502, 0, 255, 256, 503, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 0, 0, 275, 276, 277, 278, 0, 279, 504,
	505, 3190, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 288, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 506, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 507, 508, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 509, 0, 0,
	0, 309, 0, 310, 0, 0, 0, 311, 312, 510,
	511, 313, 314, 0, 315, 512, 0, 513, 316, 0,
	317, 318, 319, 320, 321, 514, 515, 516, 374, 0,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	0, 328, 329, 331, 0, 0, 330, 517, 518, 0,
	519, 0, 332, 0, 520, 0, 333, 334, 335, 0,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 521, 0, 345, 346, 0, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 0, 366, 367, 370, 371, 369, 0,
	368, 0, 0, 0, 372, 0, 522, 373, 523, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 0, 384, 0, 525, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 528, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 530,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 0, 420, 421, 422, 423, 531, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 437, 438,
	436, 439, 440, 441, 0, 442, 426, 427, 443, 444,
	0, 445, 446, 532, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 533, 453, 454, 455, 456, 534,
	0, 459, 460, 0, 458, 0, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 535, 536, 537, 538, 0,
	474, 0, 468, 469, 539, 470, 540, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 483, 0, 484, 0, 0, 485, 486, 487,
	541, 542, 543, 227, 489, 488, 544, 0, 0, 0,
	0, 490, 491, 545, 492, 493, 494, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 495, 0, 2277, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 497, 0, 498,
	248, 499, 0, 249, 250, 251, 252, 253, 0, 0,
	0, 254, 500, 501, 502, 0, 255, 256, 503, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 0, 0, 275, 276, 277, 278, 0, 279, 504,
	505, 0, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 288, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 506, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 507, 508, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 509, 0, 0,
	0, 309, 0, 310, 0, 0, 0, 311, 312, 510,
	511, 313, 314, 0, 315, 512, 0, 513, 316, 0,
	317, 318, 319, 320, 321, 514, 515, 516, 374, 0,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	0, 328, 329, 331, 0, 0, 330, 517, 518, 0,
	519, 0, 332, 0, 520, 0, 333, 334, 335, 0,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 521, 0, 345, 346, 0, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 0, 366, 367, 370, 371, 369, 0,
	368, 0, 0, 0, 372, 0, 522, 373, 523, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 0, 384, 0, 525, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 528, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 530,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 0, 420, 421, 422, 423, 531, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 437, 438,
	436, 439, 440, 441, 0, 442, 426, 427, 443, 444,
	0, 445, 446, 532, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 533, 453, 454, 455, 456, 534,
	0, 459, 460, 0, 458, 0, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 535, 536, 537, 538, 0,
	474, 0, 468, 469, 539, 470, 540, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 483, 0, 484, 0, 0, 485, 486, 487,
	541, 542, 543, 0, 489, 488, 544, 227, 2513, 0,
	0, 490, 491, 545, 492, 493, 494, 0, 0, 0,
	0, 0, 0, 0, 233, 234, 235, 236, 237, 238,
	0, 239, 240, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 241, 242, 244, 243, 245, 246, 247,
	496, 497, 0, 498, 248, 499, 0, 249, 250, 251,
	252, 253, 0, 0, 0, 254, 500, 501, 502, 0,
	255, 256, 503, 0, 0, 0, 257, 258, 259, 260,
	261, 262, 263, 0, 0, 265, 266, 267, 264, 0,
	268, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 0, 0, 275, 276, 277,
	278, 0, 279, 504, 505, 0, 283, 280, 281, 0,
	284, 282, 0, 285, 286, 0, 0, 287, 288, 289,
	0, 290, 291, 0, 292, 293, 0, 294, 295, 506,
	296, 297, 299, 301, 298, 302, 303, 304, 305, 507,
	508, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 509, 0, 0, 0, 309, 0, 310, 0, 0,
	0, 311, 312, 510, 511, 313, 314, 0, 315, 512,
	0, 513, 316, 0, 317, 318, 319, 320, 321, 514,
	515, 516, 374, 0, 322, 323, 0, 324, 325, 326,
	327, 0, 0, 0, 0, 328, 329, 331, 0, 0,
	330, 517, 518, 0, 519, 0, 332, 0, 520, 0,
	333, 334, 335, 0, 336, 0, 0, 0, 337, 338,
	339, 340, 341, 0, 343, 342, 0, 344, 521, 0,
	345, 346, 0, 0, 347, 348, 349, 0, 0, 350,
	351, 352, 353, 0, 354, 355, 357, 359, 356, 358,
	363, 360, 361, 362, 365, 0, 364, 0, 366, 367,
	370, 371, 369, 0, 368, 0, 0, 0, 372, 0,
	522, 373, 523, 375, 376, 0, 0, 377, 0, 0,
	0, 379, 380, 2510, 0, 0, 382, 383, 524, 0,
	384, 0, 525, 385, 386, 378, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 395, 526, 527, 528, 396,
	529, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 530, 407, 408, 0, 0, 0, 0,
	0, 0, 409, 0, 411, 412, 413, 410, 414, 415,
	416, 417, 0, 418, 419, 0, 420, 421, 422, 423,
	531, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 437, 438, 436, 439, 440, 441, 0, 442,
	426, 427, 443, 444, 0, 445, 446, 532, 0, 447,
	0, 448, 449, 450, 451, 428, 452, 457, 533, 453,
	454, 455, 456, 534, 0, 459, 460, 0, 458, 0,
	461, 462, 463, 464, 465, 300, 466, 0, 467, 535,
	536, 537, 538, 0, 474, 0, 468, 469, 539, 470,
	540, 0, 471, 472, 473, 0, 475, 476, 0, 0,
	477, 478, 479, 481, 482, 480, 483, 0, 484, 0,
	0, 485, 486, 487, 541, 542, 543, 227, 489, 488,
	544, 0, 0, 0, 0, 490, 491, 545, 492, 493,
	494, 0, 0, 0, 233, 234, 235, 236, 237, 238,
	1952, 239, 240, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 241, 242, 244, 243, 245, 246, 247,
	496, 497, 0, 498, 248, 499, 0, 249, 250, 251,
	252, 253, 0, 0, 0, 254, 500, 501, 502, 0,
	255, 256, 503, 0, 0, 0, 257, 258, 259, 260,
	261, 262, 263, 0, 0, 265, 266, 267, 264, 0,
	268, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 0, 0, 275, 276, 277,
	278, 0, 279, 504, 505, 0, 283, 280, 281, 0,
	284, 282, 0, 285, 286, 0, 0, 287, 288, 289,
	0, 290, 291, 0, 292, 293, 0, 294, 295, 506,
	296, 297, 299, 301, 298, 302, 303, 304, 305, 507,
	508, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 509, 0, 0, 0, 309, 0, 310, 0, 0,
	0, 311, 312, 510, 511, 313, 314, 0, 315, 512,
	0, 513, 316, 0, 317, 318, 319, 320, 321, 514,
	515, 516, 374, 0, 322, 323, 0, 324, 325, 326,
	327, 0, 0, 0, 0, 328, 329, 331, 0, 0,
	330, 517, 518, 0, 519, 0, 332, 0, 520, 0,
	333, 334, 335, 0, 336, 0, 0, 0, 337, 338,
	339, 340, 341, 0, 343, 342, 0, 344, 521, 0,
	345, 346, 0, 0, 347, 348, 349, 0, 0, 350,
	351, 352, 353, 0, 354, 355, 357, 359, 356, 358,
	363, 360, 361, 362, 365, 0, 364, 0, 366, 367,
	370, 371, 369, 0, 368, 0, 0, 0, 372, 0,
	522, 373, 523, 375, 376, 0, 0, 377, 0, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 524, 0,
	384, 0, 525, 385, 386, 378, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 395, 526, 527, 528, 396,
	529, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 530, 407, 408, 0, 0, 0, 0,
	0, 0, 409, 0, 411, 412, 413, 410, 414, 415,
	416, 417, 0, 418, 419, 0, 420, 421, 422, 423,
	531, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 437, 438, 436, 439, 440, 441, 0, 442,
	426, 427, 443, 444, 0, 445, 446, 532, 0, 447,
	0, 448, 449, 450, 451, 428, 452, 457, 533, 453,
	454, 455, 456, 534, 0, 459, 460, 0, 458, 0,
	461, 462, 463, 464, 465, 300, 466, 0, 467, 535,
	536, 537, 538, 0, 474, 0, 468, 469, 539, 470,
	540, 0, 471, 472, 473, 0, 475, 476, 0, 0,
	477, 478, 479, 481, 482, 480, 483, 0, 484, 0,
	0, 485, 486, 487, 541, 542, 543, 0, 489, 488,
	544, 1942, 0, 227, 0, 490, 491, 545, 492, 493,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 497, 0, 498,
	248, 499, 0, 249, 250, 251, 252, 253, 0, 0,
	0, 254, 500, 501, 502, 0, 255, 256, 503, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 0, 0, 275, 276, 277, 278, 0, 279, 504,
	505, 0, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 288, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 506, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 507, 508, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 509, 0, 0,
	0, 309, 0, 310, 0, 0, 0, 311, 312, 510,
	511, 313, 314, 0, 315, 512, 0, 513, 316, 0,
	317, 318, 319, 320, 321, 514, 515, 516, 374, 0,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	0, 328, 329, 331, 0, 0, 330, 517, 518, 0,
	519, 0, 332, 0, 520, 0, 333, 334, 335, 0,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 521, 0, 345, 346, 0, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 0, 366, 367, 370, 371, 369, 0,
	368, 0, 0, 0, 372, 0, 522, 373, 523, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 0, 384, 0, 525, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 528, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 530,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 0, 420, 421, 422, 423, 531, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 437, 438,
	436, 439, 440, 441, 0, 442, 426, 427, 443, 444,
	0, 445, 446, 532, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 533, 453, 454, 455, 456, 534,
	0, 459, 460, 0, 458, 0, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 535, 536, 537, 538, 0,
	474, 0, 468, 469, 539, 470, 540, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 483, 0, 484, 0, 0, 485, 486, 487,
	541, 542, 543, 0, 489, 488, 544, 597, 0, 227,
	0, 490, 491, 545, 492, 493, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 241, 242, 1074, 243, 245,
	246, 247, 496, 497, 0, 498, 248, 499, 0, 249,
	250, 251, 252, 253, 0, 0, 0, 254, 500, 501,
	1072, 0, 255, 256, 503, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 0, 0, 275,
	276, 277, 278, 0, 279, 504, 505, 0, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	288, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 506, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 507, 508, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 509, 0, 0, 0, 309, 0, 310,
	0, 0, 0, 311, 312, 510, 511, 313, 314, 0,
	315, 512, 0, 513, 316, 0, 317, 318, 319, 320,
	321, 514, 515, 516, 374, 0, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 0, 328, 329, 331,
	0, 0, 330, 517, 518, 0, 519, 0, 332, 0,
	520, 0, 333, 334, 335, 0, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	521, 0, 345, 346, 0, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 598, 0,
	366, 367, 370, 371, 369, 0, 368, 0, 0, 0,
	372, 0, 522, 373, 523, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 0, 384, 0, 525, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	528, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 530, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 0, 420, 421,
	422, 423, 531, 424, 0, 425, 429, 430, 594, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 1075, 441,
	0, 442, 426, 427, 443, 444, 0, 445, 446, 532,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	533, 453, 454, 455, 456, 534, 0, 459, 460, 0,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 593, 536, 537, 538, 0, 474, 0, 468, 469,
	539, 470, 540, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 483, 0,
	484, 0, 0, 485, 486, 487, 541, 542, 543, 0,
	489, 488, 544, 597, 0, 227, 0, 490, 491, 545,
	492, 493, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 234, 235, 236, 237, 238, 0, 239,
	240, 0, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 241, 242, 244, 243, 245, 246, 247, 496, 497,
	0, 498, 248, 499, 0, 249, 250, 251, 252, 253,
	0, 0, 0, 254, 500, 501, 502, 0, 255, 587,
	503, 0, 0, 0, 257, 258, 259, 260, 261, 262,
	263, 0, 0, 265, 266, 267, 264, 0, 268, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 0, 0, 275, 276, 277, 278, 0,
	279, 504, 505, 0, 283, 280, 281, 0, 284, 282,
	0, 285, 286, 0, 0, 287, 288, 289, 0, 290,
	291, 0, 292, 293, 0, 294, 295, 506, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 507, 508, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 509,
	0, 0, 0, 309, 0, 310, 0, 0, 0, 311,
	312, 510, 511, 313, 314, 0, 315, 512, 0, 513,
	316, 0, 317, 318, 319, 320, 321, 514, 515, 516,
	374, 0, 322, 323, 0, 324, 325, 326, 327, 0,
	0, 0, 0, 328, 329, 331, 0, 0, 330, 517,
	518, 0, 519, 0, 332, 0, 520, 0, 333, 334,
	335, 0, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 0, 343, 342, 0, 344, 521, 0, 345, 346,
	0, 0, 347, 348, 349, 0, 0, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 598, 0, 366, 367, 370, 371,
	369, 0, 368, 0, 0, 0, 372, 0, 522, 373,
	523, 375, 376, 0, 0, 377, 0, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 524, 0, 384, 0,
	525, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 395, 526, 527, 528, 396, 529, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 530, 407, 408, 0, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	0, 418, 419, 0, 420, 421, 422, 423, 531, 424,
	0, 425, 429, 430, 594, 432, 433, 434, 435, 0,
	437, 438, 436, 439, 1364, 441, 0, 442, 426, 427,
	443, 444, 0, 445, 446, 532, 0, 447, 0, 448,
	449, 450, 451, 428, 452, 457, 533, 453, 454, 455,
	456, 534, 0, 459, 460, 0, 458, 0, 461, 462,
	463, 464, 465, 300, 466, 0, 467, 593, 536, 537,
	538, 0, 474, 0, 468, 469, 539, 470, 540, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 483, 0, 484, 0, 0, 485,
	486, 487, 541, 542, 543, 0, 489, 488, 544, 1346,
	0, 227, 0, 490, 491, 545, 492, 493, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 1345, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 0, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	0, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 0, 489, 488, 544, 1295, 0, 227, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 234, 235, 236, 237, 238,
	0, 239, 240, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 241, 242, 244, 243, 245, 246, 247,
	496, 497, 0, 498, 248, 499, 0, 249, 250, 251,
	252, 253, 0, 0, 0, 254, 500, 501, 502, 0,
	255, 256, 503, 0, 0, 0, 257, 258, 259, 260,
	261, 262, 263, 0, 0, 265, 266, 267, 264, 0,
	268, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 0, 0, 275, 276, 277,
	278, 0, 279, 504, 505, 0, 283, 280, 281, 0,
	284, 282, 0, 285, 286, 0, 0, 287, 288, 289,
	0, 290, 291, 0, 292, 293, 0, 294, 295, 506,
	296, 297, 299, 301, 298, 302, 303, 304, 305, 507,
	508, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 509, 0, 0, 0, 309, 0, 310, 0, 0,
	0, 311, 312, 510, 511, 313, 314, 0, 315, 512,
	0, 513, 316, 0, 317, 318, 319, 320, 321, 1294,
	515, 516, 374, 0, 322, 323, 0, 324, 325, 326,
	327, 0, 0, 0, 0, 328, 329, 331, 0, 0,
	330, 517, 518, 0, 519, 0, 332, 0, 520, 0,
	333, 334, 335, 0, 336, 0, 0, 0, 337, 338,
	339, 340, 341, 0, 343, 342, 0, 344, 521, 0,
	345, 346, 0, 0, 347, 348, 349, 0, 0, 350,
	351, 352, 353, 0, 354, 355, 357, 359, 356, 358,
	363, 360, 361, 362, 365, 0, 364, 0, 366, 367,
	370, 371, 369, 0, 368, 0, 0, 0, 372, 0,
	522, 373, 523, 375, 376, 0, 0, 377, 0, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 524, 0,
	384, 0, 525, 385, 386, 378, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 395, 526, 527, 528, 396,
	529, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 530, 407, 408, 0, 0, 0, 0,
	0, 0, 409, 0, 411, 412, 413, 410, 414, 415,
	416, 417, 0, 418, 419, 0, 420, 421, 422, 423,
	531, 424, 0, 425, 429, 430, 431, 432, 433, 434,
	435, 0, 437, 438, 436, 439, 440, 441, 0, 442,
	426, 427, 443, 444, 0, 445, 446, 532, 0, 447,
	0, 448, 449, 450, 451, 428, 452, 457, 533, 453,
	454, 455, 456, 534, 0, 459, 460, 0, 458, 0,
	461, 462, 463, 464, 465, 300, 466, 0, 467, 535,
	536, 537, 538, 0, 474, 0, 468, 469, 539, 470,
	540, 0, 471, 472, 473, 0, 475, 476, 0, 0,
	477, 478, 479, 481, 482, 480, 483, 0, 484, 0,
	0, 485, 486, 487, 541, 542, 543, 0, 489, 488,
	544, 1280, 0, 227, 0, 490, 491, 545, 492, 493,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 497, 0, 498,
	248, 499, 0, 249, 250, 251, 252, 253, 0, 0,
	0, 254, 500, 501, 502, 0, 255, 256, 503, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 0, 0, 275, 276, 277, 278, 0, 279, 504,
	505, 0, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 288, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 506, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 507, 508, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 509, 0, 0,
	0, 309, 0, 310, 0, 0, 0, 311, 312, 510,
	511, 313, 314, 0, 315, 512, 0, 513, 316, 0,
	317, 318, 319, 320, 321, 1279, 515, 516, 374, 0,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	0, 328, 329, 331, 0, 0, 330, 517, 518, 0,
	519, 0, 332, 0, 520, 0, 333, 334, 335, 0,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 521, 0, 345, 346, 0, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 0, 366, 367, 370, 371, 369, 0,
	368, 0, 0, 0, 372, 0, 522, 373, 523, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 0, 384, 0, 525, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 528, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 530,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 0, 420, 421, 422, 423, 531, 424, 0, 425,
	429, 430, 431, 432, 433, 434, 435, 0, 437, 438,
	436, 439, 440, 441, 0, 442, 426, 427, 443, 444,
	0, 445, 446, 532, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 533, 453, 454, 455, 456, 534,
	0, 459, 460, 0, 458, 0, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 535, 536, 537, 538, 0,
	474, 0, 468, 469, 539, 470, 540, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 483, 0, 484, 0, 0, 485, 486, 487,
	541, 542, 543, 0, 489, 488, 544, 1275, 0, 227,
	0, 490, 491, 545, 492, 493, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 497, 0, 498, 248, 499, 0, 249,
	250, 251, 252, 253, 0, 0, 0, 254, 500, 501,
	502, 0, 255, 256, 503, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 0, 0, 275,
	276, 277, 278, 0, 279, 504, 505, 0, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	288, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 506, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 507, 508, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 509, 0, 0, 0, 309, 0, 310,
	0, 0, 0, 311, 312, 510, 511, 313, 314, 0,
	315, 512, 0, 513, 316, 0, 317, 318, 319, 320,
	321, 514, 515, 516, 374, 0, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 0, 328, 329, 331,
	0, 0, 330, 517, 518, 0, 519, 0, 332, 0,
	520, 0, 333, 334, 335, 0, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	521, 0, 345, 346, 0, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 0,
	366, 367, 370, 371, 369, 0, 368, 0, 0, 0,
	372, 0, 522, 373, 523, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 0, 384, 0, 525, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	528, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 530, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 0, 420, 421,
	422, 423, 531, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	0, 442, 426, 427, 443, 444, 0, 445, 446, 532,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	533, 453, 454, 455, 456, 534, 0, 459, 460, 0,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 535, 536, 537, 538, 0, 474, 0, 468, 469,
	539, 470, 540, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 483, 0,
	484, 0, 0, 485, 486, 487, 541, 542, 543, 0,
	489, 488, 544, 1202, 0, 227, 0, 490, 491, 545,
	492, 493, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 234, 235, 236, 237, 238, 0, 239,
	240, 0, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 241, 242, 244, 243, 245, 246, 247, 496, 497,
	0, 498, 248, 499, 0, 249, 250, 251, 252, 253,
	0, 0, 0, 254, 500, 501, 502, 0, 255, 256,
	503, 0, 0, 0, 257, 258, 259, 260, 261, 262,
	263, 0, 0, 265, 266, 267, 264, 0, 268, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 0, 0, 275, 276, 277, 278, 0,
	279, 504, 505, 0, 283, 280, 281, 0, 284, 282,
	0, 285, 286, 0, 0, 287, 288, 289, 0, 290,
	291, 0, 292, 293, 0, 294, 295, 506, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 507, 508, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 509,
	0, 0, 0, 309, 0, 310, 0, 0, 0, 311,
	312, 510, 511, 313, 314, 0, 315, 512, 0, 513,
	316, 0, 317, 318, 319, 320, 321, 514, 515, 516,
	374, 0, 322, 323, 0, 324, 325, 326, 327, 0,
	0, 0, 0, 328, 329, 331, 0, 0, 330, 517,
	518, 0, 519, 0, 332, 0, 520, 0, 333, 334,
	335, 0, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 0, 343, 342, 0, 344, 521, 0, 345, 346,
	0, 0, 347, 348, 349, 0, 0, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 364, 0, 366, 367, 370, 371,
	369, 0, 368, 0, 0, 0, 372, 0, 522, 373,
	523, 375, 376, 0, 0, 377, 0, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 524, 0, 384, 0,
	525, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 395, 526, 527, 528, 396, 529, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 530, 407, 408, 0, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	0, 418, 419, 0, 420, 421, 422, 423, 531, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	437, 438, 436, 439, 440, 441, 0, 442, 426, 427,
	443, 444, 0, 445, 446, 532, 0, 447, 0, 448,
	449, 450, 451, 428, 452, 457, 533, 453, 454, 455,
	456, 534, 0, 459, 460, 0, 458, 0, 461, 462,
	463, 464, 465, 300, 466, 0, 467, 535, 536, 537,
	538, 0, 474, 0, 468, 469, 539, 470, 540, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 483, 0, 484, 0, 0, 485,
	486, 487, 541, 542, 543, 0, 489, 488, 544, 597,
	0, 227, 0, 490, 491, 545, 492, 493, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 241, 242, 1074,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 1072, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 514, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 0, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	598, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	0, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	594, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	1075, 441, 0, 442, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 593, 536, 537, 538, 0, 474, 0,
	468, 1073, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 227, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 1056, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 514, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 0, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	0, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 227, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 603, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 514, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 0, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	0, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 0, 489, 488, 544, 597, 0, 227, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 234, 235, 236, 237, 238,
	0, 239, 240, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 241, 242, 244, 243, 245, 246, 247,
	496, 497, 0, 498, 248, 499, 0, 249, 250, 251,
	252, 253, 0, 0, 0, 254, 500, 501, 502, 0,
	255, 587, 503, 0, 0, 0, 257, 258, 259, 260,
	261, 262, 263, 0, 0, 265, 266, 267, 264, 0,
	585, 0, 269, 270, 271, 0, 272, 0, 273, 274,
	0, 0, 0, 0, 0, 0, 0, 275, 276, 277,
	278, 0, 279, 504, 505, 0, 283, 280, 281, 0,
	284, 282, 0, 285, 286, 0, 0, 287, 288, 289,
	0, 290, 291, 0, 292, 293, 0, 294, 295, 506,
	296, 297, 299, 301, 298, 302, 303, 304, 305, 507,
	508, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 509, 0, 0, 0, 309, 0, 310, 0, 0,
	0, 311, 312, 510, 511, 313, 314, 0, 315, 512,
	0, 513, 316, 0, 317, 318, 319, 320, 321, 514,
	515, 516, 374, 0, 322, 323, 0, 324, 325, 326,
	327, 0, 0, 0, 0, 328, 329, 331, 0, 0,
	330, 517, 518, 0, 519, 0, 332, 0, 520, 0,
	333, 334, 335, 0, 336, 0, 0, 0, 337, 338,
	339, 340, 341, 0, 343, 342, 0, 344, 521, 0,
	345, 346, 0, 0, 347, 348, 586, 0, 0, 350,
	351, 352, 353, 0, 354, 355, 357, 359, 356, 358,
	363, 360, 361, 362, 365, 0, 598, 0, 366, 367,
	370, 371, 369, 0, 368, 0, 0, 0, 372, 0,
	522, 373, 523, 375, 376, 0, 0, 377, 0, 0,
	0, 379, 380, 381, 0, 0, 382, 383, 524, 0,
	384, 0, 525, 385, 386, 378, 387, 388, 389, 390,
	391, 392, 393, 0, 394, 395, 526, 527, 528, 396,
	529, 397, 398, 0, 399, 0, 400, 401, 402, 403,
	404, 405, 406, 530, 407, 408, 0, 0, 0, 0,
	0, 0, 409, 0, 411, 412, 413, 410, 414, 415,
	416, 417, 0, 418, 419, 0, 420, 421, 422, 423,
	588, 424, 0, 425, 429, 430, 594, 432, 433, 434,
	435, 0, 437, 438, 436, 439, 589, 441, 0, 442,
	426, 427, 443, 444, 0, 445, 446, 532, 0, 447,
	0, 448, 449, 450, 451, 428, 452, 457, 533, 453,
	454, 455, 456, 534, 0, 459, 460, 0, 458, 0,
	461, 462, 463, 464, 465, 300, 466, 0, 467, 593,
	536, 537, 538, 0, 474, 0, 468, 591, 539, 470,
	540, 0, 471, 472, 473, 0, 475, 476, 0, 0,
	477, 478, 479, 481, 482, 480, 483, 0, 484, 0,
	0, 485, 486, 487, 541, 542, 543, 0, 489, 488,
	544, 581, 0, 227, 0, 490, 491, 545, 492, 493,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 234, 235, 236, 237, 238, 0, 239, 240, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 241,
	242, 244, 243, 245, 246, 247, 496, 497, 0, 498,
	248, 499, 0, 249, 250, 251, 252, 253, 0, 0,
	0, 254, 500, 501, 502, 0, 255, 256, 503, 0,
	0, 0, 257, 258, 259, 260, 261, 262, 263, 0,
	0, 265, 266, 267, 264, 0, 268, 0, 269, 270,
	271, 0, 272, 0, 273, 274, 0, 0, 0, 0,
	0, 0, 0, 275, 276, 277, 278, 0, 279, 504,
	505, 0, 283, 280, 281, 0, 284, 282, 0, 285,
	286, 0, 0, 287, 288, 289, 0, 290, 291, 0,
	292, 293, 0, 294, 295, 506, 296, 297, 299, 301,
	298, 302, 303, 304, 305, 507, 508, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 509, 0, 0,
	0, 309, 0, 310, 0, 0, 0, 311, 312, 510,
	511, 313, 314, 0, 315, 512, 0, 513, 316, 0,
	317, 318, 319, 320, 321, 514, 515, 516, 374, 0,
	322, 323, 0, 324, 325, 326, 327, 0, 0, 0,
	0, 328, 329, 331, 0, 0, 330, 517, 518, 0,
	519, 0, 332, 0, 520, 0, 333, 334, 335, 0,
	336, 0, 0, 0, 337, 338, 339, 340, 341, 0,
	343, 342, 0, 344, 521, 0, 345, 346, 0, 0,
	347, 348, 349, 0, 0, 350, 351, 352, 353, 0,
	354, 355, 357, 359, 356, 358, 363, 360, 361, 362,
	365, 0, 364, 0, 366, 367, 370, 371, 369, 0,
	368, 0, 0, 0, 372, 0, 522, 373, 523, 375,
	376, 0, 0, 377, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 524, 0, 384, 0, 525, 385,
	386, 378, 387, 388, 389, 390, 391, 392, 393, 0,
	394, 395, 526, 527, 528, 396, 529, 397, 398, 0,
	399, 0, 400, 401, 402, 403, 404, 405, 406, 530,
	407, 408, 0, 0, 0, 0, 0, 0, 409, 0,
	411, 412, 413, 410, 414, 415, 416, 417, 0, 418,
	419, 0, 420, 421, 422, 423, 531, 424, 0, 425,
	582, 430, 431, 432, 433, 434, 435, 0, 437, 438,
	436, 439, 440, 441, 0, 442, 426, 427, 443, 444,
	0, 445, 446, 532, 0, 447, 0, 448, 449, 450,
	451, 428, 452, 457, 533, 453, 454, 455, 456, 534,
	0, 459, 460, 0, 458, 0, 461, 462, 463, 464,
	465, 300, 466, 0, 467, 535, 536, 537, 538, 0,
	474, 0, 468, 469, 539, 470, 540, 0, 471, 472,
	473, 0, 475, 476, 0, 0, 477, 478, 479, 481,
	482, 480, 483, 0, 484, 0, 0, 485, 486, 487,
	541, 542, 543, 0, 489, 488, 544, 579, 0, 227,
	0, 490, 491, 545, 492, 493, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 234, 235, 236,
	237, 238, 0, 239, 240, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 241, 242, 244, 243, 245,
	246, 247, 496, 497, 0, 498, 248, 499, 0, 249,
	250, 251, 252, 253, 0, 0, 0, 254, 500, 501,
	502, 0, 255, 256, 503, 0, 0, 0, 257, 258,
	259, 260, 261, 262, 263, 0, 0, 265, 266, 267,
	264, 0, 268, 0, 269, 270, 271, 0, 272, 0,
	273, 274, 0, 0, 0, 0, 0, 0, 0, 275,
	276, 277, 278, 0, 279, 504, 505, 0, 283, 280,
	281, 0, 284, 282, 0, 285, 286, 0, 0, 287,
	288, 289, 0, 290, 291, 0, 292, 293, 0, 294,
	295, 506, 296, 297, 299, 301, 298, 302, 303, 304,
	305, 507, 508, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 509, 0, 0, 0, 309, 0, 310,
	0, 0, 0, 311, 312, 510, 511, 313, 314, 0,
	315, 512, 0, 513, 316, 0, 317, 318, 319, 320,
	321, 514, 515, 516, 374, 0, 322, 323, 0, 324,
	325, 326, 327, 0, 0, 0, 0, 328, 329, 331,
	0, 0, 330, 517, 518, 0, 519, 0, 332, 0,
	520, 0, 333, 334, 335, 0, 336, 0, 0, 0,
	337, 338, 339, 340, 341, 0, 343, 342, 0, 344,
	521, 0, 345, 346, 0, 0, 347, 348, 349, 0,
	0, 350, 351, 352, 353, 0, 354, 355, 357, 359,
	356, 358, 363, 360, 361, 362, 365, 0, 364, 0,
	366, 367, 370, 371, 369, 0, 368, 0, 0, 0,
	372, 0, 522, 373, 523, 375, 376, 0, 0, 377,
	0, 0, 0, 379, 380, 381, 0, 0, 382, 383,
	524, 0, 384, 0, 525, 385, 386, 378, 387, 388,
	389, 390, 391, 392, 393, 0, 394, 395, 526, 527,
	528, 396, 529, 397, 398, 0, 399, 0, 400, 401,
	402, 403, 404, 405, 406, 530, 407, 408, 0, 0,
	0, 0, 0, 0, 409, 0, 411, 412, 413, 410,
	414, 415, 416, 417, 0, 418, 419, 0, 420, 421,
	422, 423, 531, 424, 0, 425, 429, 430, 431, 432,
	433, 434, 435, 0, 437, 438, 436, 439, 440, 441,
	0, 442, 426, 427, 443, 444, 0, 445, 446, 532,
	0, 447, 0, 448, 449, 450, 451, 428, 452, 457,
	533, 453, 454, 455, 456, 534, 0, 459, 460, 0,
	458, 0, 461, 462, 463, 464, 465, 300, 466, 0,
	467, 535, 536, 537, 538, 0, 474, 0, 468, 469,
	539, 470, 540, 0, 471, 472, 473, 0, 475, 476,
	0, 0, 477, 478, 479, 481, 482, 480, 483, 0,
	484, 0, 0, 485, 486, 487, 541, 542, 543, 0,
	489, 488, 544, 573, 0, 227, 0, 490, 491, 545,
	492, 493, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 234, 235, 236, 237, 238, 0, 239,
	240, 0, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 241, 242, 244, 243, 245, 246, 247, 496, 497,
	0, 498, 248, 499, 0, 249, 250, 251, 252, 253,
	0, 0, 0, 254, 500, 501, 502, 0, 255, 256,
	503, 0, 0, 0, 257, 258, 259, 260, 261, 262,
	263, 0, 0, 265, 266, 267, 264, 0, 268, 0,
	269, 270, 271, 0, 272, 0, 273, 274, 0, 0,
	0, 0, 0, 0, 0, 275, 276, 277, 278, 0,
	279, 504, 505, 0, 283, 280, 281, 0, 284, 282,
	0, 285, 286, 0, 0, 287, 288, 289, 0, 290,
	291, 0, 292, 293, 0, 294, 295, 506, 296, 297,
	299, 301, 298, 302, 303, 304, 305, 507, 508, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 509,
	0, 0, 0, 309, 0, 310, 0, 0, 0, 311,
	312, 510, 511, 313, 314, 0, 315, 512, 0, 513,
	316, 0, 317, 318, 319, 320, 321, 514, 515, 516,
	374, 0, 322, 323, 0, 324, 325, 326, 327, 0,
	0, 0, 0, 328, 329, 331, 0, 0, 330, 517,
	518, 0, 519, 0, 332, 0, 520, 0, 333, 334,
	335, 0, 336, 0, 0, 0, 337, 338, 339, 340,
	341, 0, 343, 342, 0, 344, 521, 0, 345, 346,
	0, 0, 347, 348, 349, 0, 0, 350, 351, 352,
	353, 0, 354, 355, 357, 359, 356, 358, 363, 360,
	361, 362, 365, 0, 364, 0, 366, 367, 370, 371,
	369, 0, 368, 0, 0, 0, 372, 0, 522, 373,
	523, 375, 376, 0, 0, 377, 0, 0, 0, 379,
	380, 381, 0, 0, 382, 383, 524, 0, 384, 0,
	525, 385, 386, 378, 387, 388, 389, 390, 391, 392,
	393, 0, 394, 395, 526, 527, 528, 396, 529, 397,
	398, 0, 399, 0, 400, 401, 402, 403, 404, 405,
	406, 530, 407, 408, 0, 0, 0, 0, 0, 0,
	409, 0, 411, 412, 413, 410, 414, 415, 416, 417,
	0, 418, 419, 0, 420, 421, 422, 423, 531, 424,
	0, 425, 429, 430, 431, 432, 433, 434, 435, 0,
	437, 438, 436, 439, 440, 441, 0, 442, 426, 427,
	443, 444, 0, 445, 446, 532, 0, 447, 0, 448,
	449, 450, 451, 428, 452, 457, 533, 453, 454, 455,
	456, 534, 0, 459, 460, 0, 458, 0, 461, 462,
	463, 464, 465, 300, 466, 0, 467, 535, 536, 537,
	538, 0, 474, 0, 468, 469, 539, 470, 540, 0,
	471, 472, 473, 0, 475, 476, 0, 0, 477, 478,
	479, 481, 482, 480, 483, 0, 484, 0, 0, 485,
	486, 487, 541, 542, 543, 0, 489, 488, 544, 551,
	0, 227, 0, 490, 491, 545, 492, 493, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 514, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 0, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	0, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 227, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 514, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 0, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	0, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 227, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 2932, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 0, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	0, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 227, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 2894, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 0, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	0, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 227, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 2840, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 0, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	0, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 227, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 2838, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 0, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	0, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 227, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 2824, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 0, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	0, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 227, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 2468, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 0, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	0, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 227, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 514, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 0, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	0, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	420, 421, 422, 423, 531, 424, 0, 425, 582, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 227, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 1895, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 514, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 0, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	0, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 0, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 227, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 1317, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 0, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	0, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 227, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 1257, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 0, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	0, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 227, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 316, 0, 317, 318,
	319, 320, 321, 514, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 0, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	0, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 389, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 404, 405, 406, 530, 1008, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	420, 421, 422, 423, 531, 424, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 227, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 493, 494, 0, 0, 0, 233, 234,
	235, 236, 237, 238, 0, 239, 240, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 241, 242, 244,
	243, 245, 246, 247, 496, 497, 0, 498, 248, 499,
	0, 249, 250, 251, 252, 253, 0, 0, 0, 254,
	500, 501, 502, 0, 255, 256, 503, 0, 0, 0,
	257, 258, 259, 260, 261, 262, 263, 0, 0, 265,
	266, 267, 264, 0, 268, 0, 269, 270, 271, 0,
	272, 0, 273, 274, 0, 0, 0, 0, 0, 0,
	0, 275, 276, 277, 278, 0, 279, 504, 505, 0,
	283, 280, 281, 0, 284, 282, 0, 285, 286, 0,
	0, 287, 288, 289, 0, 290, 291, 0, 292, 293,
	0, 294, 295, 506, 296, 297, 299, 301, 298, 302,
	303, 304, 305, 507, 508, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 509, 0, 0, 0, 309,
	0, 310, 0, 0, 0, 311, 312, 510, 511, 313,
	314, 0, 315, 512, 0, 513, 0, 0, 317, 318,
	319, 320, 321, 514, 515, 516, 374, 0, 322, 323,
	0, 324, 325, 326, 327, 0, 0, 0, 0, 328,
	329, 331, 0, 0, 330, 517, 518, 0, 519, 0,
	332, 0, 520, 0, 333, 334, 335, 0, 336, 0,
	0, 0, 337, 338, 339, 340, 341, 0, 343, 342,
	0, 344, 521, 0, 345, 346, 0, 0, 347, 348,
	349, 0, 0, 350, 351, 352, 353, 0, 354, 355,
	357, 359, 356, 358, 363, 360, 361, 362, 365, 0,
	364, 0, 366, 367, 370, 371, 369, 0, 368, 0,
	0, 0, 372, 0, 522, 373, 523, 375, 376, 0,
	0, 377, 0, 0, 0, 379, 380, 381, 0, 0,
	382, 383, 524, 0, 384, 0, 525, 385, 386, 378,
	387, 388, 0, 390, 391, 392, 393, 0, 394, 395,
	526, 527, 528, 396, 529, 397, 398, 0, 399, 0,
	400, 401, 402, 403, 0, 405, 406, 530, 407, 408,
	0, 0, 0, 0, 0, 0, 409, 0, 411, 412,
	413, 410, 414, 415, 416, 417, 0, 418, 419, 0,
	420, 421, 422, 423, 531, 0, 0, 425, 429, 430,
	431, 432, 433, 434, 435, 0, 437, 438, 436, 439,
	440, 441, 0, 442, 426, 427, 443, 444, 0, 445,
	446, 532, 0, 447, 0, 448, 449, 450, 451, 428,
	452, 457, 533, 453, 454, 455, 456, 534, 0, 459,
	460, 0, 458, 0, 461, 462, 463, 464, 465, 300,
	466, 0, 467, 535, 536, 537, 538, 0, 474, 0,
	468, 469, 539, 470, 540, 0, 471, 472, 473, 0,
	475, 476, 0, 0, 477, 478, 479, 481, 482, 480,
	483, 0, 484, 0, 0, 485, 486, 487, 541, 542,
	543, 0, 489, 488, 544, 0, 0, 0, 0, 490,
	491, 545, 492, 493, 494, 1497, 1498, 0, 1530, 1531,
	1532, 1540, 1541, 1542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1533, 1528, 0, 0,
	0, 0, 0, 0, 1500, 0, 0, 0, 0, 0,
	0, 1546, 0, 0, 0, 0, 0, 0, 1497, 1498,
	0, 1530, 1531, 1532, 1540, 1541, 1542, 0, 0, 0,
	0, 0, 0, 0, 1499, 0, 0, 0, 0, 1533,
	1528, 0, 0, 0, 1519, 0, 0, 1500, 0, 0,
	0, 0, 1516, 0, 1546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1519, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 1523, 1524, 1525, 0,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1537, 0, 0, 1547, 1522, 1523,
	1524, 1525, 0, 1527, 1529, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1543, 0,
	1544, 0, 0, 0, 0, 0, 0, 1514, 1515, 0,
	0, 0, 0, 0, 0, 0, 0, 1537, 0, 0,
	1547, 0, 0, 1535, 0, 0, 1527, 1529, 0, 0,
	0, 0, 0, 0, 1520, 0, 0, 0, 0, 0,
	0, 1543, 0, 1544, 0, 0, 0, 0, 0, 0,
	1514, 1515, 0, 0, 0, 0, 0, 0, 1545, 0,
	0, 0, 0, 0, 0, 0, 1535, 0, 0, 0,
	0, 0, 0, 0, 0, 1534, 0, 1520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1545, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1534, 0,
	0, 0, 0, 0, 1526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1521, 0, 0, 0, 1497, 1498, 0,
	1530, 1531, 1532, 1540, 1541, 1542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1538, 0, 1526, 1533, 1528,
	0, 0, 0, 0, 0, 0, 1500, 0, 0, 0,
	0, 0, 0, 1546, 0, 0, 1521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1499, 0, 1538, 0,
	0, 0, 0, 0, 0, 0, 1519, 0, 0, 0,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1536, 0, 0, 0, 1511, 1512, 1518, 1539,
	1517, 1513, 0, 1510, 1508, 1509, 1501, 1502, 1503, 1504,
	1506, 1507, 0, 0, 0, 0, 0, 0, 0, 0,
	2669, 0, 0, 0, 0, 0, 0, 1522, 1523, 1524,
	1525, 0, 0, 0, 0, 1536, 0, 1505, 0, 1511,
	1512, 1518, 1539, 1517, 1513, 0, 1510, 1508, 1509, 1501,
	1502, 1503, 1504, 1506, 1507, 0, 0, 0, 0, 0,
	0, 0, 0, 2668, 0, 0, 1537, 0, 0, 1547,
	0, 0, 0, 0, 0, 1527, 1529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1543, 0, 1544, 0, 0, 0, 0, 0, 0, 1514,
	1515, 1497, 1498, 0, 1530, 1531, 1532, 1540, 1541, 1542,
	0, 0, 0, 0, 0, 1535, 0, 0, 0, 0,
	0, 0, 1533, 1528, 0, 0, 1520, 0, 0, 0,
	1500, 0, 0, 0, 0, 0, 0, 1546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1499, 0, 0, 0, 0, 0, 0, 1534, 0, 0,
	1519, 0, 0, 0, 0, 0, 0, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1526, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1521, 0, 0, 0, 0,
	0, 1522, 1523, 1524, 1525, 0, 0, 0, 0, 0,
	0, 1505, 0, 0, 0, 0, 0, 1538, 0, 0,
	0, 0, 0, 0, 1497, 1498, 0, 1530, 1531, 1532,
	1540, 1541, 1542, 0, 0, 0, 0, 0, 0, 0,
	1537, 0, 0, 1547, 0, 1533, 1528, 0, 0, 1527,
	1529, 0, 0, 1500, 0, 0, 0, 0, 0, 0,
	1546, 0, 0, 0, 1543, 0, 1544, 0, 0, 0,
	0, 0, 0, 1514, 1515, 0, 0, 0, 0, 0,
	0, 0, 0, 1499, 0, 0, 0, 0, 0, 1535,
	0, 0, 0, 1519, 0, 0, 0, 0, 0, 0,
	1520, 1516, 0, 0, 1536, 0, 0, 0, 1511, 1512,
	1518, 1539, 1517, 1513, 0, 1510, 1508, 1509, 1501, 1502,
	1503, 1504, 1506, 1507, 1545, 0, 0, 0, 0, 0,
	0, 0, 2131, 0, 0, 0, 0, 0, 0, 0,
	0, 1534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1522, 1523, 1524, 1525, 0, 0,
	0, 0, 0, 0, 1505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1526, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1537, 0, 0, 1547, 0, 0, 1521,
	0, 0, 1527, 1529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1543, 0, 1544,
	0, 1538, 0, 0, 0, 0, 1514, 1515, 1497, 1498,
	0, 1530, 1531, 1532, 1540, 1541, 1542, 0, 0, 0,
	0, 0, 1535, 0, 0, 0, 0, 0, 0, 1533,
	1528, 0, 0, 1520, 0, 0, 0, 1500, 0, 0,
	0, 0, 0, 0, 1546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1545, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1499, 0, 0,
	0, 0, 0, 0, 1534, 0, 0, 1519, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 1536, 0,
	0, 0, 1511, 1512, 1518, 1539, 1517, 1513, 0, 1510,
	1508, 1509, 1501, 1502, 1503, 1504, 1506, 1507, 0, 0,
	0, 0, 3747, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1521, 0, 0, 0, 0, 0, 1522, 1523,
	1524, 1525, 0, 0, 0, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 1538, 0, 0, 0, 0, 0,
	0, 1497, 1498, 0, 1530, 1531, 1532, 1540, 1541, 1542,
	0, 0, 0, 0, 0, 0, 0, 1537, 0, 0,
	1547, 0, 1533, 1528, 0, 0, 1527, 1529, 0, 0,
	1500, 0, 0, 0, 0, 0, 0, 1546, 0, 0,
	0, 1543, 0, 1544, 0, 0, 0, 0, 0, 0,
	1514, 1515, 0, 0, 0, 0, 0, 0, 0, 0,
	1499, 0, 0, 0, 0, 0, 1535, 0, 0, 0,
	1519, 0, 0, 0, 0, 0, 0, 1520, 1516, 0,
	0, 1536, 0, 0, 0, 1511, 1512, 1518, 1539, 1517,
	1513, 0, 1510, 1508, 1509, 1501, 1502, 1503, 1504, 1506,
	1507, 1545, 0, 0, 0, 3743, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1522, 1523, 1524, 1525, 0, 0, 0, 0, 0,
	0, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1537, 0, 0, 1547, 0, 0, 1521, 0, 0, 1527,
	1529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1543, 0, 1544, 0, 1538, 0,
	0, 0, 0, 1514, 1515, 1497, 1498, 0, 1530, 1531,
	1532, 1540, 1541, 1542, 0, 0, 0, 0, 0, 1535,
	0, 0, 0, 0, 0, 0, 1533, 1528, 0, 0,
	1520, 0, 0, 0, 1500, 0, 0, 0, 0, 0,
	0, 1546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1499, 0, 0, 0, 0, 0,
	0, 1534, 0, 0, 1519, 0, 0, 0, 0, 0,
	0, 0, 1516, 0, 0, 1536, 0, 0, 0, 1511,
	1512, 1518, 1539, 1517, 1513, 0, 1510, 1508, 1509, 1501,
	1502, 1503, 1504, 1506, 1507, 0, 0, 0, 0, 3654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1526, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 1522, 1523, 1524, 1525, 0,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	0, 1538, 0, 0, 0, 0, 0, 0, 1497, 1498,
	0, 1530, 1531, 1532, 1540, 1541, 1542, 0, 0, 0,
	0, 0, 0, 0, 1537, 0, 0, 1547, 0, 1533,
	1528, 0, 0, 1527, 1529, 0, 0, 1500, 0, 0,
	0, 0, 0, 0, 1546, 0, 0, 0, 1543, 0,
	1544, 0, 0, 0, 0, 0, 0, 1514, 1515, 0,
	0, 0, 0, 0, 0, 0, 0, 1499, 0, 0,
	0, 0, 0, 1535, 0, 0, 0, 1519, 0, 0,
	0, 0, 0, 0, 1520, 1516, 0, 0, 1536, 0,
	0, 0, 1511, 1512, 1518, 1539, 1517, 1513, 0, 1510,
	1508, 1509, 1501, 1502, 1503, 1504, 1506, 1507, 1545, 0,
	0, 0, 3653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 1523,
	1524, 1525, 0, 0, 0, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1537, 0, 0,
	1547, 0, 0, 1521, 0, 0, 1527, 1529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1543, 0, 1544, 0, 1538, 0, 0, 0, 0,
	1514, 1515, 1497, 1498, 0, 1530, 1531, 1532, 1540, 1541,
	1542, 0, 0, 0, 0, 0, 1535, 0, 0, 0,
	0, 0, 0, 1533, 1528, 0, 0, 1520, 0, 0,
	0, 1500, 0, 0, 0, 0, 0, 0, 1546, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1545, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1499, 0, 0, 0, 0, 0, 0, 1534, 0,
	0, 1519, 0, 0, 0, 0, 0, 0, 0, 1516,
	0, 0, 1536, 0, 0, 0, 1511, 1512, 1518, 1539,
	1517, 1513, 0, 1510, 1508, 1509, 1501, 1502, 1503, 1504,
	1506, 1507, 0, 0, 0, 0, 3509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1521, 0, 0, 0,
	0, 0, 1522, 1523, 1524, 1525, 0, 0, 0, 0,
	0, 0, 1505, 0, 0, 0, 0, 0, 1538, 0,
	0, 0, 0, 0, 0, 1497, 1498, 0, 1530, 1531,
	1532, 1540, 1541, 1542, 0, 0, 0, 0, 0, 0,
	0, 1537, 0, 0, 1547, 0, 1533, 1528, 0, 0,
	1527, 1529, 0, 0, 1500, 0, 0, 0, 0, 0,
	0, 1546, 0, 0, 0, 1543, 0, 1544, 0, 0,
	0, 0, 0, 0, 1514, 1515, 0, 0, 0, 0,
	0, 0, 0, 0, 1499, 0, 0, 0, 0, 0,
	1535, 0, 0, 0, 1519, 0, 0, 0, 0, 0,
	0, 1520, 1516, 0, 0, 1536, 0, 0, 0, 1511,
	1512, 1518, 1539, 1517, 1513, 0, 1510, 1508, 1509, 1501,
	1502, 1503, 1504, 1506, 1507, 1545, 0, 0, 0, 3384,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 1523, 1524, 1525, 0,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1537, 0, 0, 1547, 0, 0,
	1521, 0, 0, 1527, 1529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1543, 0,
	1544, 0, 1538, 0, 0, 0, 0, 1514, 1515, 1497,
	1498, 0, 1530, 1531, 1532, 1540, 1541, 1542, 0, 0,
	0, 0, 0, 1535, 0, 0, 0, 0, 0, 0,
	1533, 1528, 0, 0, 1520, 0, 0, 0, 1500, 0,
	0, 0, 0, 0, 0, 1546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1499, 0,
	0, 0, 0, 0, 0, 1534, 0, 0, 1519, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 0, 1536,
	0, 0, 0, 1511, 1512, 1518, 1539, 1517, 1513, 0,
	1510, 1508, 1509, 1501, 1502, 1503, 1504, 1506, 1507, 0,
	0, 0, 0, 3330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1521, 0, 0, 0, 0, 0, 1522,
	1523, 1524, 1525, 0, 0, 0, 0, 0, 0, 1505,
	0, 0, 0, 0, 0, 1538, 0, 0, 0, 0,
	0, 0, 1497, 1498, 0, 1530, 1531, 1532, 1540, 1541,
	1542, 0, 0, 0, 0, 0, 0, 0, 1537, 0,
	0, 1547, 0, 1533, 1528, 0, 0, 1527, 1529, 0,
	0, 1500, 0, 0, 0, 0, 0, 0, 1546, 0,
	0, 0, 1543, 0, 1544, 0, 0, 0, 0, 0,
	0, 1514, 1515, 0, 0, 0, 0, 0, 0, 0,
	0, 1499, 0, 0, 0, 0, 0, 1535, 0, 0,
	0, 1519, 0, 0, 0, 0, 0, 0, 1520, 1516,
	0, 0, 1536, 0, 0, 0, 1511, 1512, 1518, 1539,
	1517, 1513, 0, 1510, 1508, 1509, 1501, 1502, 1503, 1504,
	1506, 1507, 1545, 0, 0, 0, 3329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 1523, 1524, 1525, 0, 0, 0, 0,
	0, 0, 1505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1537, 0, 0, 1547, 0, 0, 1521, 0, 0,
	1527, 1529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1543, 0, 1544, 0, 1538,
	0, 0, 0, 0, 1514, 1515, 1497, 1498, 0, 1530,
	1531, 1532, 1540, 1541, 1542, 0, 0, 0, 0, 0,
	1535, 0, 0, 0, 0, 0, 0, 1533, 1528, 0,
	0, 1520, 0, 0, 0, 1500, 0, 0, 0, 0,
	0, 0, 1546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1545, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1499, 0, 0, 0, 0,
	0, 0, 1534, 0, 0, 1519, 0, 0, 0, 0,
	0, 0, 0, 1516, 0, 0, 1536, 0, 0, 0,
	1511, 1512, 1518, 1539, 1517, 1513, 0, 1510, 1508, 1509,
	1501, 1502, 1503, 1504, 1506, 1507, 0, 0, 0, 0,
	3328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1521, 0, 0, 0, 0, 0, 1522, 1523, 1524, 1525,
	0, 0, 0, 0, 0, 0, 1505, 0, 0, 0,
	0, 0, 1538, 0, 0, 0, 0, 0, 0, 1497,
	1498, 0, 1530, 1531, 1532, 1540, 1541, 1542, 0, 0,
	0, 0, 0, 0, 0, 1537, 0, 0, 1547, 0,
	1533, 1528, 0, 0, 1527, 1529, 0, 0, 1500, 0,
	0, 0, 0, 0, 0, 1546, 0, 0, 0, 1543,
	0, 1544, 0, 0, 0, 0, 0, 0, 1514, 1515,
	0, 0, 0, 0, 0, 0, 0, 0, 1499, 0,
	0, 0, 0, 0, 1535, 0, 0, 0, 1519, 0,
	0, 0, 0, 0, 0, 1520, 1516, 0, 0, 1536,
	0, 0, 0, 1511, 1512, 1518, 1539, 1517, 1513, 0,
	1510, 1508, 1509, 1501, 1502, 1503, 1504, 1506, 1507, 1545,
	0, 0, 0, 3062, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1522,
	1523, 1524, 1525, 0, 0, 0, 0, 0, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1537, 0,
	0, 1547, 0, 0, 1521, 0, 0, 1527, 1529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1543, 0, 1544, 0, 1538, 0, 0, 0,
	0, 1514, 1515, 1497, 1498, 0, 1530, 1531, 1532, 1540,
	1541, 1542, 0, 0, 0, 0, 0, 1535, 0, 0,
	0, 0, 0, 0, 1533, 1528, 0, 0, 1520, 0,
	0, 0, 1500, 0, 0, 0, 0, 0, 0, 1546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1499, 0, 0, 0, 0, 0, 0, 1534,
	0, 0, 1519, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 0, 1536, 0, 0, 0, 1511, 1512, 1518,
	1539, 1517, 1513, 0, 1510, 1508, 1509, 1501, 1502, 1503,
	1504, 1506, 1507, 0, 0, 0, 0, 2666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1521, 0, 0,
	0, 0, 0, 1522, 1523, 1524, 1525, 0, 0, 0,
	0, 0, 0, 1505, 0, 0, 0, 0, 0, 1538,
	0, 0, 0, 0, 0, 0, 1497, 1498, 0, 1530,
	1531, 1532, 1540, 1541, 1542, 0, 0, 0, 0, 0,
	0, 0, 1537, 0, 0, 1547, 0, 1533, 1528, 0,
	0, 1527, 1529, 0, 0, 1500, 0, 0, 0, 0,
	0, 0, 1546, 0, 0, 0, 1543, 0, 1544, 0,
	0, 0, 0, 0, 0, 1514, 1515, 0, 0, 0,
	0, 0, 0, 0, 0, 1499, 0, 0, 0, 0,
	0, 1535, 0, 0, 0, 1519, 0, 0, 0, 0,
	0, 0, 1520, 1516, 0, 0, 1536, 0, 0, 0,
	1511, 1512, 1518, 1539, 1517, 1513, 0, 1510, 1508, 1509,
	1501, 1502, 1503, 1504, 1506, 1507, 1545, 0, 0, 0,
	2665, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 1523, 1524, 1525,
	0, 0, 0, 0, 0, 0, 1505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1526, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1537, 0, 0, 1547, 0,
	0, 1521, 0, 0, 1527, 1529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1543,
	0, 1544, 0, 1538, 0, 0, 0, 0, 1514, 1515,
	1497, 1498, 0, 1530, 1531, 1532, 1540, 1541, 1542, 0,
	0, 0, 0, 0, 1535, 0, 0, 0, 0, 0,
	0, 1533, 1528, 0, 0, 1520, 0, 0, 0, 1500,
	0, 0, 0, 0, 0, 0, 1546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1499,
	0, 0, 0, 0, 0, 0, 1534, 0, 0, 1519,
	0, 0, 0, 0, 0, 0, 0, 1516, 0, 0,
	1536, 0, 0, 0, 1511, 1512, 1518, 1539, 1517, 1513,
	0, 1510, 1508, 1509, 1501, 1502, 1503, 1504, 1506, 1507,
	0, 0, 0, 0, 2664, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1521, 0, 0, 0, 0, 0,
	1522, 1523, 1524, 1525, 0, 0, 0, 0, 0, 0,
	1505, 0, 0, 0, 0, 0, 1538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1537,
	0, 0, 1547, 0, 0, 0, 0, 0, 1527, 1529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1543, 0, 1544, 0, 0, 0, 0,
	0, 0, 1514, 1515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1520,
	0, 0, 0, 1536, 0, 0, 0, 1511, 1512, 1518,
	1539, 1517, 1513, 0, 1510, 1508, 1509, 1501, 1502, 1503,
	1504, 1506, 1507, 1545, 0, 0, 0, 2663, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1497, 1498,
	0, 1530, 1531, 1532, 1540, 1541, 1542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1533,
	1528, 0, 0, 0, 0, 0, 0, 1500, 0, 1526,
	0, 0, 0, 0, 1546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1521, 0,
	0, 0, 0, 0, 0, 0, 0, 1499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1519, 0, 0,
	1538, 0, 0, 0, 0, 1516, 0, 1497, 1498, 0,
	1530, 1531, 1532, 1540, 1541, 1542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1533, 1528,
	0, 0, 0, 0, 2601, 0, 1500, 0, 0, 0,
	0, 0, 0, 1546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1499, 0, 1522, 1523,
	1524, 1525, 0, 0, 0, 0, 1519, 0, 1505, 3860,
	0, 0, 0, 0, 1516, 0, 0, 1536, 0, 0,
	0, 1511, 1512, 1518, 1539, 1517, 1513, 0, 1510, 1508,
	1509, 1501, 1502, 1503, 1504, 1506, 1507, 1537, 0, 2630,
	1547, 0, 0, 0, 0, 2602, 1527, 1529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1543, 0, 1544, 0, 0, 0, 0, 0, 0,
	1514, 1515, 0, 0, 0, 0, 0, 1522, 1523, 1524,
	1525, 0, 0, 0, 0, 0, 1535, 1505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1537, 0, 0, 1547,
	0, 1545, 0, 0, 0, 1527, 1529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1534, 0,
	1543, 0, 1544, 0, 0, 0, 0, 0, 0, 1514,
	1515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3859, 0, 1535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1545, 0, 0, 0, 0, 0, 1521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1538, 0,
	0, 0, 0, 0, 0, 1497, 1498, 0, 1530, 1531,
	1532, 1540, 1541, 1542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1533, 1528, 0, 0,
	0, 0, 0, 0, 1500, 0, 1526, 0, 0, 0,
	0, 1546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1521, 0, 0, 0, 0,
	0, 0, 0, 0, 1499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1519, 0, 0, 1538, 0, 0,
	0, 0, 1516, 0, 0, 1536, 0, 0, 0, 1511,
	1512, 1518, 1539, 1517, 1513, 0, 1510, 1508, 1509, 1501,
	1502, 1503, 1504, 1506, 1507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 1523, 1524, 1525, 0,
	0, 0, 0, 0, 0, 1505, 0, 2726, 0, 0,
	2725, 0, 0, 0, 1536, 0, 0, 0, 1511, 1512,
	1518, 1539, 1517, 1513, 0, 1510, 1508, 1509, 1501, 1502,
	1503, 1504, 1506, 1507, 1537, 0, 0, 1547, 0, 0,
	0, 0, 0, 1527, 1529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1543, 0,
	1544, 0, 2251, 0, 0, 0, 0, 1514, 1515, 1497,
	1498, 0, 1530, 1531, 1532, 1540, 1541, 1542, 0, 0,
	0, 0, 0, 1535, 0, 0, 0, 0, 0, 0,
	1533, 1528, 0, 0, 1520, 2250, 0, 0, 1500, 0,
	0, 0, 0, 0, 0, 1546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1499, 0,
	0, 0, 0, 0, 0, 1534, 0, 0, 1519, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1521, 0, 0, 0, 0, 0, 1522,
	1523, 1524, 1525, 0, 0, 0, 0, 0, 0, 1505,
	0, 0, 0, 0, 0, 1538, 0, 0, 0, 0,
	0, 0, 1497, 1498, 0, 1530, 1531, 1532, 1540, 1541,
	1542, 0, 0, 0, 0, 0, 0, 0, 1537, 0,
	0, 1547, 0, 1533, 1528, 0, 0, 1527, 1529, 0,
	0, 1500, 0, 0, 0, 0, 0, 0, 1546, 0,
	0, 0, 1543, 0, 1544, 0, 0, 0, 0, 0,
	0, 1514, 1515, 0, 0, 0, 0, 0, 0, 0,
	0, 1499, 0, 0, 0, 0, 0, 1535, 0, 0,
	0, 1519, 0, 0, 0, 0, 0, 0, 1520, 1516,
	0, 0, 1536, 0, 0, 0, 1511, 1512, 1518, 1539,
	1517, 1513, 0, 1510, 1508, 1509, 1501, 1502, 1503, 1504,
	1506, 1507, 1545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 1523, 1524, 1525, 0, 0, 0, 0,
	0, 0, 1505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1537, 0, 0, 1547, 0, 0, 1521, 0, 0,
	1527, 1529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1543, 0, 1544, 0, 1538,
	0, 0, 0, 0, 1514, 1515, 1497, 1498, 0, 1530,
	1531, 1532, 1540, 1541, 1542, 0, 0, 0, 0, 0,
	1535, 0, 0, 0, 0, 0, 0, 1533, 1528, 0,
	0, 1520, 0, 0, 0, 1500, 0, 0, 0, 0,
	0, 0, 1546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1545, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1499, 0, 0, 0, 0,
	0, 0, 1534, 866, 0, 1519, 0, 0, 0, 0,
	0, 0, 0, 1516, 0, 0, 1536, 0, 0, 0,
	1511, 1512, 1518, 1539, 1517, 1513, 0, 1510, 1508, 1509,
	1501, 1502, 1503, 1504, 1506, 1507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1521, 0, 0, 0, 0, 0, 1522, 1523, 1524, 1525,
	0, 0, 0, 0, 0, 0, 1505, 0, 0, 0,
	0, 0, 1538, 0, 0, 0, 0, 0, 0, 1497,
	1498, 0, 1530, 1531, 1532, 1540, 1541, 1542, 0, 0,
	0, 0, 0, 0, 0, 1537, 0, 0, 1547, 0,
	1533, 1528, 0, 0, 1527, 1529, 0, 0, 1500, 0,
	0, 0, 0, 0, 0, 1546, 0, 0, 0, 1543,
	0, 1544, 0, 0, 0, 0, 0, 0, 1514, 1515,
	0, 0, 0, 0, 0, 0, 0, 0, 1499, 0,
	0, 0, 0, 0, 1535, 0, 0, 0, 1519, 0,
	0, 0, 0, 0, 0, 1520, 1516, 0, 0, 1536,
	0, 0, 0, 1511, 1512, 1518, 1539, 1517, 1513, 0,
	1510, 1508, 1509, 1501, 1502, 1503, 1504, 1506, 1507, 1545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1522,
	1523, 1524, 1525, 0, 0, 0, 0, 0, 0, 1505,
	0, 0, 0, 0, 2732, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1526, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1537, 0,
	0, 1547, 0, 0, 1521, 0, 0, 1527, 1529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1543, 0, 1544, 0, 1538, 0, 0, 0,
	0, 1514, 1515, 0, 1497, 1498, 0, 1530, 1531, 1532,
	1540, 1541, 1542, 0, 0, 0, 0, 1535, 0, 0,
	0, 0, 0, 0, 0, 1533, 1528, 0, 1520, 3043,
	2727, 0, 0, 1500, 0, 0, 0, 0, 0, 0,
	1546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1499, 0, 0, 0, 0, 0, 1534,
	0, 0, 0, 1519, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 1536, 0, 0, 0, 1511, 1512, 1518,
	1539, 1517, 1513, 0, 1510, 1508, 1509, 1501, 1502, 1503,
	1504, 1506, 1507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1521, 0, 0,
	0, 0, 0, 0, 1522, 1523, 1524, 1525, 0, 0,
	0, 0, 0, 0, 1505, 0, 0, 0, 0, 1538,
	1497, 1498, 0, 1530, 1531, 1532, 1540, 1541, 1542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1533, 1528, 1537, 0, 0, 1547, 0, 0, 1500,
	0, 0, 1527, 1529, 0, 0, 1546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1543, 0, 1544,
	0, 0, 0, 0, 0, 0, 1514, 1515, 0, 1499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1519,
	0, 0, 1535, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 1520, 0, 0, 1536, 0, 0, 0,
	1511, 1512, 1518, 1539, 1517, 1513, 0, 1510, 1508, 1509,
	1501, 1502, 1503, 1504, 1506, 1507, 0, 1545, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1522, 1523, 1524, 1525, 0, 0, 0, 0, 1497, 1498,
	1505, 1530, 1531, 1532, 1540, 1541, 1542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1533,
	1528, 0, 0, 1526, 2667, 0, 0, 1500, 0, 1537,
	0, 0, 1547, 0, 1546, 0, 0, 0, 1527, 1529,
	0, 0, 1521, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1543, 0, 1544, 0, 1499, 0, 0,
	0, 0, 1514, 1515, 1538, 0, 0, 1519, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 1535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1545, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1534, 0, 0, 0, 0, 0, 0, 0, 1522, 1523,
	1524, 1525, 0, 0, 0, 0, 0, 0, 1505, 2694,
	0, 1536, 0, 0, 0, 1511, 1512, 1518, 1539, 1517,
	1513, 0, 1510, 1508, 1509, 1501, 1502, 1503, 1504, 1506,
	1507, 0, 0, 0, 0, 0, 0, 1537, 0, 1526,
	1547, 0, 0, 0, 0, 0, 1527, 1529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1521, 0,
	0, 1543, 0, 1544, 0, 0, 0, 0, 0, 0,
	1514, 1515, 0, 0, 0, 0, 0, 0, 0, 0,
	1538, 0, 0, 0, 0, 0, 1535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1545, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1536, 0, 0,
	0, 1511, 1512, 1518, 1539, 1517, 1513, 0, 1510, 1508,
	1509, 1501, 1502, 1503, 1504, 1506, 1507, 1526, 0, 0,
	0, 0, 0, 0, 0, 1497, 1498, 0, 1530, 1531,
	1532, 1540, 1541, 1542, 0, 0, 1521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1533, 1528, 0, 0,
	0, 0, 0, 0, 1500, 0, 0, 0, 1538, 0,
	0, 1546, 0, 0, 0, 0, 0, 0, 0, 1497,
	1498, 0, 1530, 1531, 1532, 1540, 1541, 1542, 0, 0,
	0, 0, 0, 0, 1499, 0, 0, 0, 0, 0,
	0, 1528, 0, 0, 1519, 0, 0, 0, 1500, 0,
	0, 0, 1516, 0, 0, 1546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1519, 0,
	0, 0, 0, 0, 0, 1536, 1516, 0, 0, 1511,
	1512, 1518, 1539, 1517, 1513, 0, 1510, 1508, 1509, 1501,
	1502, 1503, 1504, 1506, 1507, 1522, 1523, 1524, 1525, 0,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1537, 0, 0, 1547, 0, 1522,
	1523, 1524, 1525, 1527, 1529, 0, 0, 0, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 1543, 0,
	1544, 0, 0, 0, 0, 0, 0, 1514, 1515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1537, 0,
	0, 1547, 0, 1535, 0, 0, 0, 1527, 1529, 0,
	0, 0, 0, 0, 1520, 0, 0, 0, 0, 0,
	0, 0, 1543, 0, 1544, 0, 0, 0, 0, 0,
	0, 1514, 1515, 0, 0, 0, 0, 0, 1545, 0,
	0, 0, 0, 0, 0, 0, 0, 1535, 0, 0,
	0, 0, 0, 0, 0, 1534, 0, 0, 1520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1538, 0, 0, 1526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1521, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1538,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1536, 0, 0, 0, 1511, 1512, 1518, 1539,
	1517, 1513, 0, 1510, 1508, 1509, 1501, 1502, 1503, 1504,
	1506, 1507, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1536, 0, 0, 0,
	1511, 1512, 1518, 1539, 1517, 1513, 0, 1510, 1508, 1509,
	1501, 1502, 1503, 1504, 1506, 1507,
}
var sqlPact = [...]int{

	397, -1000, -1000, -1000, -1000, 273, -1000, -1000, 272, 270,
	268, 266, 265, 263, 262, 261, -1000, -1000, -1000, -1000,
	-1000, -1000, 260, -1000, -1000, 257, -1000, 253, 246, 235,
	229, -1000, 217, 216, 214, -1000, -1000, -1000, -1000, 213,
	206, 199, 66119, 65663, 66569, 1977, 80177, 70181, 1844, 58841,
	79721, 58385, 79265, 78809, 198, -1000, 78353, 197, 192, 191,
	-1000, 77897, -1000, 1639, -1000, 189, 3680, 48337, 186, 184,
	182, 1936, 178, -1000, 176, -1000, 11662, 1353, -1000, 174,
	-1000, 9803, 228, 69275, 2512, 166, 165, 47880, 2448, 2552,
	-1000, -1000, 1855, -1000, -1000, 158, 156, 154, 152, 150,
	148, 147, 146, 145, -1000, 144, 143, 139, 138, 135,
	134, 133, -1000, 131, 126, 125, 123, 121, 118, 112,
	111, 108, 103, 100, 97, -1000, 11087, 96, 1675, 1495,
	1494, 1485, 1472, 1470, 920, 94, 93, 92, 90, 88,
	85, 76, 73, -1000, 72, 71, 70, 68, 67, 66,
	65, 64, 162, 63, 61, 60, 59, 56, 52, 2719,
	-1000, 1520, 874, 23771, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 85577, 80627, 43,
	-119, 37, -1000, 2864, 971, 40107, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 340, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 512, 1761,
	739, -1000, -1000, -1000, 77447, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1970, -113, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 737, -1000, 1961, 140, 1906, -1000, -1000, -1000,
	-1000, -1000, 80627, -1000, -1000, 3263, 3262, 1811, 736, 76997,
	-1000, 1423, -1000, 875, 26663, -1000, 1139, -1000, 26663, 339,
	-1000, -1000, -1000, -1000, -1000, -1000, 3259, 3257, 3255, 3253,
	-1000, -1000, 57929, 17957, 57473, 57017, 76541, 17491, 65207, 64751,
	53383, -1000, -1000, -1000, 1227, -1000, -1000, -1000, -1000, -1000,
	-1000, 3, 51519, 80627, -1000, 336, -1000, -1000, -1000, -1000,
	-1000, -1000, 33515, 849, 33023, 848, 32531, 248, -1000, -1000,
	-1000, 3252, 3250, 1021, 3249, 2797, 85127, 1622, 3248, 1627,
	1131, 950, 3247, 3246, 3243, 3242, 3241, 3238, 1280, 76085,
	2597, 75629, 1592, 52917, 64295, 66569, 2336, 75173, 1313, 1286,
	-1000, -1000, -1000, -1000, 2670, 2538, 2529, 45165, -1000, 3236,
	3235, 3234, 3231, 3227, 84677, 1621, 3226, 2157, 3225, 3224,
	3223, 3212, 3211, 3210, 3200, 3198, -1000, 63839, 63383, 62927,
	2916, 74717, 62471, 52451, -1000, -1000, -1000, 41945, 8186, 7100,
	74261, 43344, 66569, 66569, -1000, -1000, 33995, 78, -1000, -1000,
	-1000, 42880, 2554, -1000, 33995, 78, -1000, 80627, -1000, 2590,
	1697, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2270, 1416, 3105, 51985, 1773, 1310, 2858, 2662, 2658,
	1350, 2220, 2651, 2642, 2634, 2627, 2620, 1577, 2259, 590,
	23279, 1447, 1405, 2614, 2606, 3116, 1712, 1739, 1852, 56561,
	3197, 3196, 2814, 2603, 2591, 2530, -1000, -1000, -1000, -1000,
	1317, -1000, -1000, -1000, 59741, -1000, -1000, 1107, -1000, -1000,
	1107, -1000, -1000, -1000, -1000, -1000, 1226, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1520, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1594, -1000, 1794,
	-1000, -1000, 2143, 2843, 2843, 2843, 2886, 502, 478, -1000,
	162, -1000, -1000, 91974, -1000, -1000, 33995, 33995, 33995, 33995,
	33995, 33995, 33995, 1825, -1000, 732, -1000, -1000, 775, -1000,
	730, 610, -1000, -1000, -1000, -1000, -1000, -1000, 729, -1000,
	-1000, -1000, -1000, -1000, -1000, 3067, -1000, 20339, -1000, -1000,
	-1000, 471, 727, 33995, -1000, -1000, 3131, 3128, 882, -1000,
	334, 865, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2585, 722, 721, -1000, 720, 719,
	715, 713, 712, -1000, -1000, -1000, 711, 710, 709, 708,
	706, 705, 702, 701, -1000, 1765, -1000, -1000, -1000, -1000,
	-1000, -1000, 656, 652, 652, 652, -1000, 942, -1000, -1000,
	-1000, 350, 644, 329, 639, 638, 636, 700, 698, 695,
	690, 678, 676, 675, 672, 670, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 932, -1000, -1000, -1000, -1000, 2, 80627, -1000,
	512, 2, -1000, -1000, 669, -1000, 27143, 27143, 27143, -1000,
	-1000, 1959, 33995, -1000, 2118, -1000, 9, 9, 847, 41017,
	-1000, 39179, 847, 370, 783, 44708, -1000, 2523, -1000, -1000,
	667, 332, -1000, -1000, -1000, -1000, 18421, 2519, 80627, 80627,
	66569, 66569, 66569, 2744, 33995, -1000, -1000, 49237, 80627, 67019,
	3004, 49687, 49237, 80627, 2584, -1000, -1000, -1000, 80627, -1000,
	33995, -1000, 3003, 1395, 54301, 2902, -10, -1000, -1000, -1000,
	-1000, -1000, -1000, 2119, 2169, 1090, 2001, 1179, -1000, 26663,
	2788, -1000, -1000, -1000, 324, 18421, -1000, -1000, -1000, -1000,
	-1000, 2712, 2724, 1326, -1000, 1998, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1688, 2718, -1000, 1870, 2713,
	1682, -1000, -1000, 1907, -1000, -1000, 2811, -1000, -1000, 1486,
	2711, 13, -1000, -1000, 2218, -1000, -1000, 898, 2709, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 42880, 51519,
	-4, -1000, -1000, -26, -1000, 17025, 91974, -1000, -1000, -1000,
	91974, 856, -1000, -1000, 2708, -1000, 91974, 802, -1000, -1000,
	2707, -1000, -1000, -1000, 3193, -1000, 3192, 2067, 3188, 3187,
	3186, -1000, 1525, 1731, 3185, -1000, 3184, -1000, -1000, -1000,
	-1000, -1000, -1000, 62015, 1957, -1000, -1000, 61103, -1000, 2064,
	-1000, -1000, 61559, 947, -1000, 898, 2063, -1000, 935, -1000,
	3183, 2914, 2360, 898, 2060, -1000, -1000, -1000, -1000, -1000,
	46065, -1000, 46065, -1000, 46065, -1000, 1469, -1000, 84227, 9,
	9, 3067, -1000, -1000, -1000, -1000, -1000, 2706, 3182, 3181,
	3180, -1000, 80627, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 181, 2705, -1000, -1000, 181, 2701, -1000, 181, 2698,
	-1000, 68819, -1000, -1000, 1943, 2697, -1000, 177, 2694, -1000,
	-1000, -72, 2693, -1000, -1000, -14, -1000, -1000, -1000, 971,
	-1000, 41474, -1000, 41474, 73805, 53847, 884, 723, 47423, 91974,
	-1000, -201, -1000, -1000, 53847, 42880, 91974, -1000, 53847, 61103,
	-1000, 73349, 60653, -1000, -1000, 1272, 2225, -1000, -1000, -1000,
	884, 53847, 53847, 53847, -1000, 72893, -1000, -1000, 1766, 1554,
	2822, 1756, 66569, -1000, 1689, -1000, -1000, -1000, 2847, 2582,
	-1000, 48787, 68369, -1000, 67919, -1000, 67469, -1000, 66569, -1000,
	66569, -1000, 3176, 3175, 3174, -1000, 3173, 2838, 91974, 2828,
	-1000, 2722, 1487, 1449, 80627, -1000, -1000, 80627, -1000, 80627,
	-1000, -1000, -1000, 1345, -1000, -1000, 2117, -1000, -1000, -1000,
	-1000, 66569, -1000, -1000, -1000, -1000, -1000, -1000, 2580, -1000,
	1542, -1000, 1668, -1000, 1266, -1000, -1000, 185, -1000, -1000,
	-10, -1000, 83777, -1000, 2143, -1000, 80627, -1000, 2134, 2571,
	2579, 1661, 1982, 2272, -1000, 32039, 2211, 36395, 1996, 162,
	-1000, -1000, 162, 162, 24731, -1000, -1000, 49687, 49687, 18421,
	1249, 33995, 33995, 33995, 33995, 33995, 33995, 33995, 33995, 33995,
	33995, 33995, 33995, 33995, 33995, 33995, 33995, 33995, 33995, 33995,
	33995, 33995, 33995, 33995, 33995, 33995, 33995, 33995, 33995, 33995,
	33995, 33995, 33995, 33995, 33995, 33995, 1945, 33995, 1221, 33995,
	33995, 33995, 33995, 1559, -1000, -1000, 1728, 548, 1886, -1000,
	3046, 3046, 3046, 691, 691, 92018, 92018, 598, 3172, 775,
	-1000, 33995, -1000, 78, 33995, 18887, -1000, -1000, 478, 7500,
	2077, -1000, 477, 19379, -1000, -1000, -1000, 20339, 610, 31547,
	33995, 928, 91974, -1000, -1000, 1513, 3077, 16561, 2439, 2413,
	664, 812, 673, 22787, 22295, 21803, 21311, 581, 33995, 33995,
	33995, 33995, 33995, 33995, 33995, 33995, -1000, -1000, 3094, -1000,
	3077, -1000, -1000, -1000, -1000, 3077, 1240, 1236, 3077, -1000,
	3077, 3077, 2380, 2380, 31067, 30575, 30083, 36875, 29591, 33995,
	20819, 29099, 28607, -1000, 80627, 2, 3002, 33995, 113, -1000,
	90578, -1000, 113, 113, 663, -16, 91974, 2307, 2307, 40562,
	2113, 1856, 1856, 1856, -1000, 847, 12820, 847, 71989, 1892,
	847, 847, 311, 331, 476, 38724, 2118, 71989, 754, 661,
	28, 27, 25, -1000, -1000, 22, 15, -1000, -1000, 66569,
	660, 18887, 18421, 306, 1329, -24, 2308, 2295, 2290, -1000,
	2288, 1579, -30, 1217, -94, -1000, 255, -31, -1000, 1203,
	302, 3077, -1000, -1000, -1000, -1000, -1000, 3171, 3169, -1000,
	931, 658, 657, 831, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 656, 652, 652, 652, -1000, 350, 644, 329,
	639, 638, 636, -1000, -1000, -1000, -1000, 2518, -26, 67019,
	854, -33, 1025, -10, -1000, -1000, -1000, 54301, 1107, -1000,
	1751, -1000, -1000, -1000, -1000, -1000, -1000, 1292, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 882, -1000, -1000, -1000, -1000,
	-1000, -1000, 3097, 3082, 1, -1000, -1000, 18421, -1000, -11,
	1757, -1000, 56105, 2181, 2827, 2803, 1460, -1000, 1322, 2882,
	59741, 2926, 2991, 243, -1000, 2516, -1000, -1000, 871, 1524,
	1214, 59741, 1870, -1000, 49687, -1000, 2273, 2878, 1307, 1268,
	1307, 1307, 1257, -1000, 59741, 1204, -1000, 1191, -1000, -15,
	2921, 2936, 87, -1000, 2514, 1171, -1000, -1000, 66569, 18421,
	1376, 1367, 1532, 1170, -2, -1000, 2912, 2908, -1000, 1316,
	-1000, 53847, 844, -4, 51519, 80627, 300, -1000, 33995, 78,
	33995, 78, -1000, -1000, 2691, -1000, -1000, -1000, 3167, 1678,
	2153, -1000, -1000, -1000, 634, 2059, 2513, 80627, 2318, -5,
	66569, -1000, 2687, 1870, 2058, -1000, -1000, 60197, -1000, 2685,
	666, 3166, -1000, 83327, -1000, 2817, 1254, 2684, 986, 395,
	3001, -1000, 395, 46515, -1000, 80627, -1000, -1000, 80627, -1000,
	-1000, -1000, 3165, -1000, 66569, -1000, -1000, 66569, -1000, 66569,
	-1000, 66569, 173, 2675, -1000, -1000, 80627, -1000, 66569, 66569,
	53847, 53847, 4848, 55205, -52, -54, 475, -1000, 72443, 80627,
	985, 55655, 80627, 2777, 884, 42880, -1000, -60, -201, 884,
	884, 844, -1000, 844, -1000, 66569, 2576, -1000, 884, 884,
	884, -1000, -1000, -1000, -1000, 3164, 3163, -1000, -1000, -1000,
	895, 66569, 80627, 66569, -1000, -1000, 80627, -1000, 80627, -1000,
	895, 80627, 895, 80627, 895, 80627, -1000, -1000, -1000, -1000,
	-1000, -1000, 78, 33995, 1483, -1000, 2575, -1000, 2574, -1000,
	49, -1000, -1000, -1000, -1000, -1000, 1853, 66569, 66569, 66569,
	66569, 80627, 66569, -1000, 59741, -1000, 2134, 2571, -1000, -1000,
	-1000, -1000, -1000, -1000, 1235, 1931, -1000, 2205, -1000, 1368,
	-1000, -1000, -1000, 91974, 37339, -1000, -1000, 91974, 1619, -1000,
	35915, 35435, -1000, -1000, 1498, 66569, 2326, -1000, 2326, -228,
	-1000, 90066, 2204, 66569, -1000, -1000, -1000, -1000, -1000, 870,
	540, 540, 1168, 1168, 1168, 1168, 2918, 995, 655, 972,
	9542, 9542, 5386, 5386, 5386, 5386, 5386, 9542, 463, 691,
	691, 463, 463, 463, 463, 463, 691, 691, 691, 9542,
	9542, 9542, 92018, 5965, 9586, 33995, 33995, 1165, 1718, 548,
	8934, 33995, 6939, 6939, 6939, 6939, -1000, 1962, -1000, -1000,
	-1000, -1000, 2510, 631, 36875, 36875, -1000, -1000, -1000, -1000,
	19859, 33995, -1000, -1000, -1000, -1000, 28115, -1000, -1000, 89689,
	-273, 474, -166, -46, -1000, 33995, 33995, 33995, 473, -1000,
	295, 33995, 80627, -1000, 86836, 745, -174, -1000, -61, 1262,
	-1000, 33995, -1000, -1000, 1162, -1000, 1148, 1138, 1128, -1000,
	629, 472, -1000, 281, -1000, 1882, 624, 623, 33995, -1000,
	-1000, -1000, -1000, -1000, 89475, -1000, -1000, 89312, -1000, -1000,
	89098, -1000, -1000, 88935, -1000, -1000, -1000, 91637, 86527, 86484,
	12177, 5224, 11805, 11657, -63, 467, -70, 465, 869, 862,
	464, 462, 461, -73, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -75, 460, -1000, 2495, -166, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 459, -1000, 449, -1000, 91489,
	-166, 445, 5992, -1000, 36875, 36875, 36875, -1000, 444, -1000,
	90364, -1000, 91333, 27635, 27635, 27635, 442, 91118, 33995, -166,
	-80, -1000, -81, -1000, -1000, 518, -82, 923, 27143, 39650,
	18421, -1000, 923, 923, 33995, -1000, 33995, 2280, -1000, -1000,
	-1000, 2276, 1879, 2307, 40562, -1000, -1000, -1000, -1000, 71989,
	-1000, 3067, 2349, -1000, 71989, -1000, -1000, 80627, 512, -1000,
	71989, 71989, 18421, 847, -1000, 847, 71989, 537, -1000, -1000,
	-1000, -1000, -1000, 423, 43798, -46, 275, 18421, 884, -1000,
	2286, 2286, 2286, 2286, -1000, -1000, 80627, 3022, -1000, 1745,
	-1000, 49687, -1000, 773, 1118, 18421, -1000, -1000, -1000, 622,
	-1000, 3077, 3077, -1000, 3077, 80627, 89, 26663, -1000, 1107,
	-1000, -1000, 1365, -1000, 1707, -1000, 1233, -1000, -1000, -1000,
	-1000, 26663, -1000, 1972, 80627, 80627, 66569, -1000, -1000, 2057,
	82877, 2048, 49687, 80627, -1000, -1000, 620, 619, 2198, 2195,
	978, 80627, 80627, 2186, 82427, 81977, 80627, 1768, 33995, 1905,
	1840, 78, 78, -1000, -1000, 78, 617, 1169, 66569, 66569,
	66569, 1680, -1000, -1000, -1000, -1000, -1000, 59291, -1000, -1000,
	3089, 3087, -1000, 1307, -1000, -1000, -1000, 1307, 1870, 1663,
	66569, 80627, 1762, 78, 78, -1000, -1000, 78, 616, 18421,
	1763, -1000, 2566, 80627, 3126, 66569, 80627, 80627, 51069, 2845,
	81527, 80627, 1316, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	50615, 992, 898, 2356, -1000, -1000, 16097, 91974, -1000, 91974,
	-1000, 80627, -1000, 945, 80627, 55655, 887, 2666, 45615, -26,
	884, 53847, 66569, -5, 80627, -1000, 1870, 2665, 512, 2039,
	-1000, -1000, 53847, 615, 3158, 3157, -1000, 1954, 2035, -1000,
	-1000, 81077, 2730, 815, 80627, 923, 40562, 1677, -1000, 44254,
	962, 80627, 1631, 81, -1000, -1000, -1000, 51, 80627, -1000,
	3156, -1000, -1000, 181, 181, 181, -1000, 66569, 66569, 1943,
	-1000, 177, -1000, -72, -1000, -1000, 4848, 4848, 884, -6,
	614, -1000, 839, 838, 42416, 53847, -83, -1000, -1000, -1000,
	-1000, -1000, 66569, 80627, 734, 2357, 80627, -89, -1000, 256,
	612, -1000, -1000, -1000, 884, 2488, -1000, -1000, 919, -1000,
	1265, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	7, -26, -26, -1000, 895, -1000, 895, -1000, 895, -1000,
	91974, -1000, 1482, 1477, 80627, -1000, 18421, 80627, 66569, 18421,
	66569, 2569, 2559, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1000, -1000, 1619, 1930, -1000, 610, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2106, -1000, -8, 24731,
	2004, -1000, -1000, 66569, 6, 33995, 33995, 8097, 7017, 33995,
	36875, 36875, -1000, 33995, 6336, -1000, -1000, -1000, -1000, -1000,
	2486, 608, 33995, 49687, 5319, 4607, -1000, 421, 11129, 463,
	-1000, 33995, -1000, 420, 26183, -1000, 90741, -51, -91, -1000,
	13297, -166, -96, -1000, -1000, 771, -1000, 2648, -1000, 33995,
	90955, 2083, 1912, 1684, 1522, 3077, 3125, 15633, -1000, 46969,
	924, 1891, 88721, -1000, -1000, -1000, -1000, 49687, 49687, 33995,
	33995, -1000, 33995, 33995, 33995, -1000, -1000, -1000, 3077, 863,
	-1000, -1000, -1000, 863, -1000, -1000, 1307, -1000, 1307, -1000,
	33995, -1000, -1000, 2485, 33995, -1000, 49687, 49687, 36875, 36875,
	36875, 36875, 36875, 36875, 36875, 36875, 36875, 36875, 36875, 36875,
	36875, 36875, 36875, 36875, 36875, 36875, 36875, 2192, 36875, 3044,
	3044, 3044, -1000, 2515, 2485, 33995, 33995, 49687, 415, 414,
	412, -1000, 33995, -166, -1000, -1000, 4848, 607, -1000, 2093,
	-1000, 2409, -1000, 33995, -1000, -242, -1000, 2118, -1000, -1000,
	2409, 2409, -101, 91974, 40562, 40562, -1000, 606, 33995, 2269,
	-1000, -1000, 744, -271, -1000, 837, -1000, -1000, -1000, -1000,
	-1000, 512, -1000, -1000, -1000, 244, 71989, 71989, 743, -1000,
	-102, -1000, -1000, -104, -1000, 3000, 409, 18421, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -26, 1898, 3122, -1000,
	3085, 768, 741, 163, 3077, 408, 407, 403, -26, 80627,
	-1000, -10, -1000, -1000, -1000, 33995, -1000, -1000, 2815, 1126,
	1073, -1000, 2660, -1000, 2033, -1000, 966, -1000, 1710, -1000,
	33995, 33995, 603, 602, 3155, 1674, 3154, 984, 2659, 1943,
	2654, 1943, -1000, -1000, 876, -1000, 91974, 601, 600, -1000,
	-11, 1617, 902, -1000, -1000, 33995, 33995, 71539, -1000, 399,
	2811, 5, -1000, 1072, -1000, -1000, -1000, -1000, 1870, 1065,
	-1000, -1000, -1000, 900, -1000, -1000, 33995, -1000, -15, 1064,
	2922, 2031, 66569, 1063, -1000, 1055, -1000, -1000, -1000, -1000,
	-1000, -1000, 2907, 1943, 2653, 1059, -1000, -1000, -1000, 50151,
	-1000, 899, 2483, -1000, 3153, 66569, 3152, 400, -107, -17,
	49687, 2998, 1974, 558, 66569, 860, -1000, 3067, -1000, -1000,
	-1000, -1000, 66569, 2995, 2647, 898, 3121, -1000, -1000, 66569,
	2646, 1947, 2030, 2126, 815, 54755, -1000, 898, 1857, -59,
	-1000, 1631, 25691, 2805, -110, -1000, -1000, -1000, 923, 46515,
	40562, 33995, 3148, -116, -1000, -1000, -1000, -1000, -1000, 173,
	-1000, -1000, -1000, -1000, -1000, 71089, 71089, 53847, 53847, 53847,
	884, 80627, 80627, 55655, -1000, 595, 80627, 80627, 591, -1000,
	80627, 80627, 3147, 53847, -1000, 78, -1000, 1915, 66569, 15169,
	-1000, -1000, -1000, -1000, -1000, 895, -1000, -1000, 1778, 1990,
	1778, 1603, 1600, -1000, 1921, -1000, -1000, -1000, -1000, 2251,
	2831, 18421, 2943, 6939, 33995, 33995, 5662, 1717, 437, 6939,
	33995, 33995, 49687, 6586, -122, 33995, 33995, -1000, 33995, 692,
	91974, 3120, 33995, 398, 393, -1000, -1000, -1000, 3070, -1000,
	-1000, -1000, 91974, 33995, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 392, -1000, 82, -1000, -1000, -1000, 86027, -1000, 33995,
	383, 2877, -1000, 382, 381, 9923, 4635, 88558, 88344, 88181,
	379, -1000, -1000, 378, 377, 91974, 2515, 91974, -1000, -1000,
	1133, 1133, 1247, 1247, 1247, 1247, 3044, 800, 503, 494,
	446, 446, 446, 299, 885, 885, 446, 446, 446, 2464,
	2144, 589, 6382, -1000, -1000, 91974, 91974, 375, -1000, -1000,
	-1000, -166, 373, 4848, -1000, 2405, 2876, 91974, -1000, 40562,
	2405, 2405, -1000, -1000, 1879, 80627, 91974, 40562, -1000, 2349,
	-1000, 13772, -1000, 18421, -1000, -1000, -1000, -1000, 3067, -1000,
	43798, -1000, 588, -1000, 79, -1000, -1000, 674, 3146, 764,
	18421, 371, -1000, -1000, -1000, -26, 91974, 80627, 80627, 80627,
	2641, -1000, 2300, -1000, 978, 87967, -123, -1000, 90066, 33995,
	80627, -1000, -1000, 1735, 2210, 1014, -1000, 2850, 80627, -1000,
	80627, -1000, -1000, 80627, 80627, 66569, 2623, -128, 91974, -29,
	-1000, 834, -1000, 1270, -1000, 14705, 66569, 66569, 2587, -131,
	18421, -1000, 3119, 3112, 2640, 2854, 3111, 80627, -1000, 80627,
	66569, 2776, -1000, -1000, -1000, 2167, 53847, -1000, 512, -1000,
	2352, -1000, 69725, 1890, 78, -1000, 70635, 3145, 587, -1000,
	1903, -1000, 582, 1870, 78, 66569, -1000, 365, -40, -1000,
	974, 18421, 66569, 2632, 2136, 815, 54755, -1000, 1254, 2272,
	-1000, -57, -1000, 563, 78, 1857, -1000, -59, 91974, -1000,
	833, -1000, -1000, -133, -1000, -1000, 355, -1000, 2773, 2771,
	-1000, 2442, 33995, 585, 583, 80627, 2770, -1000, -1000, -134,
	-1000, 2008, -1000, -1000, -1000, -1000, -1000, 18421, 1497, -1000,
	578, 576, -1000, -1000, -1000, -1000, 2831, 6939, 6939, 33995,
	33995, 33995, 6939, 6586, -136, -1000, 6939, 6939, -166, -1000,
	-1000, 90741, -1000, -1000, -1000, 91974, -1000, 14241, 1785, -1000,
	87804, -1000, 24731, -1000, -1000, 33995, 33995, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 36875, 2451, 575, 49687, -1000,
	-1000, 353, 886, 33995, 33995, 2118, 886, 886, -1000, -139,
	-1000, -1000, -1000, 3067, 79, -1000, -1000, 3144, 18421, 763,
	-1000, 3142, -1000, -1000, -1000, -1000, -1000, 80627, -1000, 80627,
	-1000, 18421, 80627, 2417, 2018, -1000, -1000, 2177, 573, 36875,
	66569, 842, -1000, 3014, 2429, 1665, 33995, 2004, -141, -144,
	2016, -1000, -1000, 2012, 33995, -1000, 49687, 569, 1943, 1943,
	-147, -152, -1000, 33995, 1050, 80627, 25211, -1000, 3140, 2811,
	-1000, -1000, 33995, 1045, -1000, -1000, -1000, 3106, 1943, 18421,
	-1000, 1943, 1943, 2854, 1012, -66, 562, -1000, 832, -1000,
	-1000, -72, 2993, 1762, 2372, -1000, -1000, -1000, -1000, 2175,
	-1000, -1000, 80627, 2146, 890, -154, -1000, 829, 818, -1000,
	55655, 887, 850, -1000, -1000, -1000, 512, -1000, 3104, 552,
	80627, 1944, 549, 18421, -1000, 815, 54755, -1000, 2730, 1631,
	-1000, 2739, 80627, 2802, -1000, 2272, 548, -1000, 884, 547,
	546, 2885, 2885, -155, 33995, 33995, -160, 545, 884, -92,
	-1000, 797, 554, -1000, -1000, 66569, 66569, 33995, 33995, -1000,
	6939, 6939, 6939, -1000, 351, -1000, -1000, 1857, 2872, -1000,
	-150, 87590, 87427, 6411, 36875, 49687, -161, -1000, -1000, 80627,
	91974, -166, -1000, -1000, -1000, 541, -1000, 3138, -1000, -1000,
	1382, -1000, -1000, -1000, 80627, 2027, -1000, 977, 33995, 6382,
	531, 33995, -1000, 2983, -1000, 2341, 2465, 2352, 530, -1000,
	-1000, -1000, -1000, -1000, 969, 1669, -1000, -1000, 91974, 2854,
	33995, -1000, -1000, 529, 525, 91974, 522, 805, 2443, -1000,
	-1000, -1000, 91974, 520, 2922, -1000, -1000, -1000, -1000, 1943,
	66569, 2010, 2010, 53847, 78, 887, -1000, 1815, 1890, 519,
	-1000, -1000, 1929, 2258, -1000, 70635, 38267, 38267, 344, 2950,
	850, -1000, 3042, -1000, 2941, -1000, 33995, -1000, 66569, 33995,
	1942, 54755, -1000, 2126, -1000, 1196, -163, 80627, 1631, -1000,
	-1000, 53847, 53847, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 969, -168, -169, -1000, 53847, -1000,
	2008, -1000, 80627, -1000, 80627, -1000, -1000, -177, -178, -1000,
	1750, 33995, 24731, -1000, -1000, 6411, -179, -1000, -153, -1000,
	2925, -1000, -1000, -1000, -1000, 2630, 2403, 87213, 2099, 80627,
	87050, -1000, 2457, -1000, -1000, 1762, 80627, 2352, 2392, 66569,
	975, -187, 1778, 1778, 33995, 24251, 1813, 33995, -1000, -1000,
	2854, -1000, -188, -1000, -1000, 1929, 66569, 80627, -1000, 2830,
	-1000, 2767, -1000, -1000, -1000, 2352, 78, -1000, -1000, 78,
	-194, 974, -195, 66569, -1000, 2136, 1425, -1000, 923, -1000,
	-1000, -196, -202, 1665, 969, 923, -203, -1000, -205, -208,
	-1000, -1000, 343, 34955, 34955, 34955, -166, -228, -1000, 80627,
	513, 2612, 894, -1000, 1933, 1635, 342, 987, -1000, -1000,
	2429, -214, -1000, 892, 512, -1000, 33995, 969, -215, -1000,
	960, -216, -1000, 955, -221, -1000, 2433, -1000, -222, 1943,
	-1000, -1000, 511, -229, -1000, -1000, 2022, -1000, 1762, 890,
	-1000, 969, 509, 1665, 508, -1000, 46515, -1000, 884, 884,
	2352, 1665, -1000, 884, -1000, -1000, -1000, 2636, -1000, 37803,
	1897, 1597, 89987, 2636, 2636, -1000, -1000, 80627, 2891, -1000,
	1938, 1935, 1320, -1000, -1000, -1000, -1000, -1000, -1000, 923,
	-1000, 2889, 2099, 91974, 2352, -1000, 1778, 2370, -1000, 1778,
	2432, -1000, 1797, -1000, -1000, 80627, -1000, 80627, 1543, 1503,
	3136, 887, 1929, 1665, 33995, 2352, 33995, -223, -1000, -1000,
	1762, 2352, -1000, -1000, 1687, 2996, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 804, -1000, 2753, -1000, 997, 1928,
	1928, -1000, 801, 1933, -1000, -1000, 507, -1000, 506, -1000,
	-231, -1000, -1000, 3135, -1000, 1929, -1000, 2352, -232, 1762,
	-239, -1000, 923, 1762, 1595, -1000, -1000, 1888, 34475, 33995,
	-1000, 3027, -1000, -1000, 2209, -1000, 33995, 2429, 33995, 33995,
	1924, -1000, -1000, 1762, 969, 923, 1665, -1000, 923, -1000,
	-1000, -1000, 91974, -1000, -1000, -1000, 91974, -1000, -244, -258,
	-1000, -1000, -1000, 923, 1665, -1000, 2352, -1000, 1762, 1044,
	-1000, 2352, 1762, -1000, 504, 1762, 923, 33995, 923, -1000,
	-259, -1000, 1762, -1000,
}
var sqlPgo = [...]int{

	0, 3825, 3820, 3819, 3818, 3817, 3816, 3815, 3813, 3811,
	3809, 3807, 3799, 3797, 3796, 3795, 3793, 3791, 3788, 3784,
	3783, 3782, 3781, 3779, 3778, 3776, 3775, 3772, 3770, 3769,
	3759, 3758, 3754, 3753, 3752, 3751, 3749, 3748, 3747, 3746,
	3743, 3742, 3739, 3737, 3721, 3720, 3719, 3718, 32, 3712,
	3711, 3710, 3709, 3708, 3707, 3706, 3705, 3699, 3695, 3693,
	3691, 3690, 3689, 3684, 3683, 3680, 39, 3678, 216, 3676,
	3675, 3672, 3671, 3668, 3666, 3664, 3663, 3662, 3661, 3660,
	215, 3659, 118, 3658, 3657, 3651, 3650, 3648, 214, 3647,
	3646, 3643, 3637, 3635, 3634, 3633, 3632, 152, 200, 3631,
	82, 3630, 3629, 3627, 3624, 3620, 3617, 3615, 3614, 3613,
	3611, 199, 3609, 213, 3606, 3604, 3603, 3602, 3600, 3596,
	3595, 3594, 3591, 3590, 3589, 3588, 3587, 3586, 3585, 3583,
	3582, 3581, 3579, 3576, 3575, 3574, 3573, 3572, 3567, 3566,
	3564, 3563, 3560, 219, 191, 3559, 3557, 212, 209, 3556,
	3554, 3553, 3552, 3551, 108, 105, 48, 3549, 3548, 46,
	42, 92, 40, 3547, 13, 245, 197, 7399, 186, 3546,
	3545, 3544, 193, 149, 3543, 192, 3541, 3540, 3536, 3535,
	70, 64, 140, 136, 132, 128, 303, 3534, 3529, 72,
	54, 41, 29, 3526, 3521, 3520, 2391, 104, 3519, 210,
	194, 125, 3514, 3513, 3512, 1719, 3511, 33, 3510, 190,
	98, 103, 52, 102, 3507, 119, 20, 3506, 137, 38,
	3502, 123, 73, 61, 7345, 5350, 3500, 91, 45, 86,
	682, 174, 161, 159, 126, 173, 169, 133, 138, 3493,
	232, 3492, 2959, 71, 129, 3490, 3489, 3488, 57, 157,
	65, 3487, 3484, 47, 8, 23, 1, 139, 14, 87,
	19, 3483, 10, 3482, 3480, 3478, 3477, 22, 124, 3476,
	222, 3475, 50, 34, 9, 3474, 36, 168, 3472, 178,
	101, 3470, 3468, 203, 163, 150, 3466, 79, 179, 3462,
	3459, 3458, 3456, 3448, 99, 18, 97, 3446, 3445, 112,
	189, 153, 3439, 35, 3437, 135, 74, 111, 218, 100,
	171, 84, 177, 143, 180, 3436, 3435, 3434, 144, 3432,
	3429, 170, 120, 3428, 3425, 158, 224, 28, 55, 187,
	56, 151, 134, 3422, 155, 3419, 3418, 3417, 223, 141,
	167, 3, 6, 75, 85, 25, 15, 182, 122, 240,
	78, 3416, 4761, 1852, 1798, 44, 3415, 115, 95, 51,
	83, 121, 208, 53, 3414, 3411, 1873, 3405, 3403, 3401,
	3399, 146, 3398, 3396, 3394, 106, 114, 176, 3393, 63,
	66, 11, 96, 251, 221, 81, 175, 156, 244, 3391,
	145, 3390, 69, 113, 3389, 154, 205, 3388, 3384, 94,
	3383, 116, 622, 43, 130, 3382, 166, 3381, 3379, 3378,
	3377, 3376, 3375, 3374, 495, 183, 3373, 3371, 3370, 117,
	147, 3368, 207, 266, 131, 76, 31, 3366, 67, 2365,
	3365, 211, 185, 37, 3364, 387, 93, 0, 9214, 8070,
	5907, 8267, 3363, 1814, 3360, 3358, 3354, 162, 109, 3353,
	3352, 3351, 80, 3349, 60, 3347, 3346, 49, 3343, 30,
	5, 7, 16, 12, 1473, 397, 3342, 3341, 77, 107,
	89, 3338, 217, 181, 3335, 3334, 3333, 3332, 62, 3331,
	26, 3330, 24, 3329, 3328, 27, 2, 17, 3325, 3324,
	198, 3316, 195, 3315, 3313, 3311, 2957, 110, 3309, 3298,
	206, 59, 3297, 204, 3296, 2914, 142, 165, 3295, 3293,
	3292, 127, 3285, 3280, 3278, 202, 3277, 3274, 21, 3272,
	4, 3271, 3270, 160, 2867, 3269, 3268, 58, 3267, 148,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 11,
	11, 7, 7, 8, 8, 8, 36, 36, 9, 9,
	9, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 15, 15, 26, 26, 16, 16, 28, 28,
	17, 17, 29, 29, 500, 500, 20, 31, 21, 32,
	14, 501, 501, 501, 501, 25, 22, 33, 23, 23,
	23, 23, 23, 157, 157, 157, 157, 19, 19, 27,
	27, 183, 183, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 499, 499, 185, 185, 184,
	179, 179, 502, 502, 186, 186, 186, 188, 188, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 403, 403,
	403, 509, 509, 509, 510, 510, 511, 511, 511, 511,
	511, 37, 37, 494, 494, 158, 158, 158, 160, 160,
	159, 159, 159, 96, 96, 96, 97, 97, 98, 98,
	161, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	84, 84, 435, 435, 436, 436, 153, 153, 154, 154,
	154, 154, 155, 155, 156, 156, 156, 51, 39, 39,
	39, 39, 39, 39, 39, 40, 40, 40, 40, 41,
	41, 41, 41, 41, 41, 42, 42, 42, 42, 42,
	42, 49, 49, 49, 49, 144, 144, 52, 52, 52,
	52, 52, 52, 52, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 512, 512, 512, 512, 512, 512,
	512, 512, 512, 512, 513, 513, 514, 514, 515, 515,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 63, 63, 269,
	269, 241, 241, 64, 64, 64, 65, 65, 66, 66,
	53, 53, 492, 492, 284, 284, 394, 394, 68, 68,
	304, 304, 69, 69, 69, 69, 69, 69, 70, 70,
	70, 70, 70, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 71, 71, 71, 77, 77, 77, 78, 78,
	78, 75, 75, 75, 73, 73, 73, 72, 72, 72,
	76, 76, 76, 233, 233, 74, 74, 74, 285, 285,
	79, 79, 79, 79, 242, 80, 80, 80, 80, 80,
	80, 80, 80, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 396, 396,
	81, 81, 81, 364, 364, 85, 85, 85, 319, 319,
	86, 86, 86, 86, 86, 87, 87, 87, 87, 99,
	99, 99, 99, 496, 496, 277, 277, 199, 199, 199,
	199, 92, 92, 92, 92, 93, 93, 93, 94, 94,
	149, 149, 105, 105, 105, 105, 105, 104, 104, 104,
	104, 104, 104, 43, 43, 43, 44, 44, 45, 45,
	46, 46, 47, 47, 48, 48, 48, 48, 48, 107,
	107, 506, 506, 109, 106, 106, 106, 108, 108, 108,
	108, 110, 111, 111, 111, 111, 111, 111, 111, 111,
	112, 112, 428, 428, 293, 293, 426, 426, 444, 444,
	427, 427, 246, 246, 246, 246, 246, 247, 247, 247,
	434, 434, 434, 434, 434, 434, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 150, 150, 151, 152, 152, 152, 152, 132,
	132, 132, 143, 143, 143, 143, 143, 143, 143, 135,
	135, 135, 122, 122, 114, 114, 114, 114, 114, 118,
	118, 118, 118, 118, 118, 118, 118, 115, 115, 124,
	124, 124, 124, 124, 119, 119, 121, 121, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 116, 116, 116,
	116, 126, 126, 126, 126, 326, 326, 326, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 139, 139,
	139, 139, 139, 139, 378, 378, 133, 133, 133, 133,
	138, 138, 138, 138, 309, 309, 130, 130, 130, 131,
	131, 131, 136, 136, 137, 134, 134, 140, 140, 140,
	140, 117, 117, 117, 517, 517, 517, 141, 141, 129,
	129, 142, 142, 142, 142, 142, 142, 142, 142, 128,
	128, 128, 127, 127, 127, 127, 120, 493, 493, 490,
	490, 490, 490, 490, 490, 490, 491, 491, 495, 495,
	90, 90, 90, 58, 58, 58, 59, 59, 164, 164,
	164, 164, 254, 254, 254, 254, 162, 162, 163, 163,
	60, 60, 518, 518, 518, 503, 503, 503, 504, 504,
	504, 504, 504, 504, 248, 248, 249, 249, 344, 344,
	344, 344, 344, 252, 252, 252, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 255, 255, 187, 187, 187,
	258, 259, 259, 256, 256, 257, 257, 257, 261, 261,
	260, 263, 263, 262, 343, 453, 453, 455, 455, 455,
	455, 455, 455, 455, 457, 457, 457, 457, 457, 457,
	457, 457, 457, 457, 457, 519, 519, 451, 451, 451,
	452, 447, 447, 448, 448, 448, 448, 448, 250, 250,
	251, 251, 251, 251, 449, 450, 275, 275, 381, 454,
	454, 456, 456, 458, 520, 520, 520, 520, 520, 520,
	521, 521, 521, 342, 342, 341, 341, 267, 267, 459,
	459, 459, 459, 460, 460, 460, 460, 460, 463, 462,
	461, 461, 461, 461, 461, 62, 62, 62, 306, 306,
	305, 305, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 146, 146, 202,
	202, 57, 57, 57, 12, 12, 12, 505, 505, 505,
	61, 61, 61, 61, 201, 201, 201, 201, 201, 201,
	498, 498, 497, 497, 203, 203, 523, 523, 67, 67,
	67, 67, 67, 67, 67, 397, 397, 398, 398, 56,
	56, 56, 56, 56, 327, 327, 325, 325, 324, 324,
	274, 274, 380, 207, 207, 180, 180, 180, 24, 18,
	18, 34, 34, 35, 35, 30, 30, 507, 507, 508,
	508, 91, 91, 95, 95, 95, 103, 103, 145, 145,
	145, 145, 145, 145, 145, 38, 38, 38, 38, 50,
	50, 50, 50, 101, 525, 525, 525, 102, 102, 102,
	524, 524, 200, 200, 338, 338, 339, 339, 526, 526,
	340, 340, 340, 340, 194, 193, 195, 195, 55, 55,
	55, 189, 189, 190, 190, 191, 191, 192, 192, 527,
	527, 88, 88, 88, 148, 148, 240, 240, 240, 334,
	334, 334, 268, 268, 213, 213, 337, 337, 335, 335,
	335, 335, 303, 303, 303, 147, 147, 282, 282, 295,
	295, 296, 296, 391, 391, 297, 100, 100, 167, 167,
	165, 165, 165, 165, 165, 165, 165, 165, 172, 172,
	173, 173, 174, 174, 175, 176, 176, 176, 176, 286,
	286, 177, 177, 177, 166, 166, 166, 168, 168, 168,
	168, 168, 168, 168, 171, 171, 171, 171, 178, 178,
	178, 170, 170, 470, 470, 470, 472, 472, 474, 474,
	473, 473, 469, 469, 471, 471, 522, 522, 308, 308,
	308, 265, 266, 264, 264, 272, 272, 270, 271, 271,
	273, 273, 379, 379, 379, 181, 181, 181, 300, 300,
	300, 300, 301, 301, 330, 330, 328, 328, 328, 328,
	329, 329, 331, 331, 331, 332, 332, 333, 333, 299,
	299, 360, 360, 169, 169, 169, 279, 279, 279, 280,
	280, 350, 350, 350, 350, 350, 350, 351, 351, 349,
	349, 349, 349, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 383, 384, 384, 281, 281, 385, 336, 336,
	488, 488, 488, 489, 489, 377, 377, 386, 386, 386,
	386, 386, 386, 375, 375, 376, 376, 392, 393, 393,
	312, 312, 312, 312, 310, 310, 313, 313, 313, 313,
	311, 311, 387, 387, 387, 387, 302, 302, 388, 388,
	388, 388, 389, 345, 346, 346, 399, 399, 399, 399,
	401, 278, 278, 278, 278, 278, 446, 445, 445, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 415, 415,
	415, 415, 415, 415, 415, 415, 416, 416, 416, 416,
	416, 416, 402, 402, 402, 402, 402, 406, 406, 406,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 407, 407, 412, 412, 413, 413, 413, 408, 409,
	414, 414, 414, 414, 528, 528, 418, 418, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 404, 404, 404,
	411, 411, 411, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 320, 320, 322, 322,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 354, 354, 354,
	354, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 464, 464, 464, 464,
	464, 464, 464, 464, 356, 356, 467, 467, 468, 468,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 465, 465, 465, 465, 465, 465, 465,
	465, 465, 465, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 475,
	475, 476, 476, 478, 478, 479, 479, 480, 481, 481,
	481, 482, 483, 483, 477, 477, 484, 484, 484, 484,
	485, 485, 486, 486, 486, 486, 486, 487, 487, 487,
	487, 487, 366, 366, 367, 367, 373, 373, 373, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 204, 204, 204, 204, 204,
	291, 291, 289, 289, 289, 292, 292, 290, 290, 288,
	288, 287, 287, 363, 363, 361, 361, 365, 365, 314,
	314, 417, 417, 417, 417, 417, 417, 417, 417, 315,
	315, 315, 323, 316, 316, 317, 317, 317, 317, 317,
	357, 358, 318, 318, 318, 359, 359, 368, 372, 372,
	371, 370, 370, 369, 369, 347, 347, 348, 348, 298,
	298, 529, 529, 294, 294, 390, 390, 390, 390, 244,
	244, 283, 283, 243, 243, 235, 235, 236, 236, 236,
	236, 276, 276, 374, 374, 419, 419, 420, 420, 421,
	421, 422, 422, 423, 424, 425, 362, 362, 223, 222,
	210, 211, 221, 220, 219, 209, 212, 216, 217, 218,
	214, 215, 229, 228, 227, 234, 225, 226, 395, 208,
	237, 237, 238, 238, 238, 239, 239, 239, 239, 205,
	205, 206, 206, 230, 230, 231, 232, 232, 224, 224,
	224, 196, 196, 196, 197, 197, 198, 198, 433, 433,
	430, 430, 430, 431, 431, 431, 432, 432, 432, 432,
	429, 429, 429, 429, 429, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 438, 438,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 440, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 443, 443,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 1, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 3, 1, 1, 3, 4, 6, 1, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 10, 3,
	6, 4, 3, 1, 3, 2, 1, 1, 3, 1,
	3, 2, 2, 0, 1, 1, 0, 2, 0, 7,
	10, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 3, 6, 4, 6, 7,
	9, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 5, 6, 2, 1, 3, 1, 3,
	1, 6, 4, 9, 7, 12, 12, 12, 9, 2,
	7, 2, 1, 1, 1, 3, 3, 0, 3, 1,
	3, 1, 1, 3, 2, 5, 0, 6, 1, 2,
	1, 2, 1, 2, 2, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 6, 6, 6, 6, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 3, 3, 4, 3, 4, 7,
	4, 4, 4, 3, 5, 7, 4, 3, 3, 4,
	3, 3, 3, 3, 2, 0, 1, 0, 1, 0,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 3,
	5, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 1, 2, 1, 2, 1, 2, 7, 3, 2,
	0, 1, 3, 3, 1, 0, 1, 2, 2, 1,
	6, 5, 1, 2, 1, 3, 2, 0, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 6, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 6, 4, 7, 2, 6,
	4, 7, 2, 1, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 4, 3,
	2, 2, 1, 2, 1, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 1, 3, 5, 4, 6, 4,
	3, 0, 1, 3, 2, 4, 2, 4, 1, 6,
	3, 1, 1, 5, 3, 2, 6, 3, 3, 4,
	4, 3, 1, 3, 2, 3, 3, 1, 3, 1,
	2, 1, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 2, 2, 1, 3, 3, 3, 3, 2,
	3, 3, 1, 1, 1, 1, 1, 2, 2, 5,
	7, 3, 3, 3, 4, 5, 5, 5, 3, 4,
	4, 3, 4, 4, 3, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 4, 3, 5, 3,
	6, 5, 6, 3, 5, 6, 3, 4, 3, 4,
	3, 3, 4, 4, 5, 0, 1, 1, 3, 2,
	4, 3, 3, 5, 4, 3, 5, 3, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 2, 0, 4, 2, 3, 4,
	2, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 3, 4, 3, 1, 1, 1, 2, 3, 2,
	3, 6, 6, 7, 9, 7, 9, 3, 4, 10,
	10, 3, 5, 5, 5, 3, 5, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 1, 2, 0,
	3, 3, 2, 3, 6, 3, 11, 14, 0, 2,
	4, 3, 0, 4, 5, 4, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 1, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 8, 0, 1, 1, 0,
	2, 1, 0, 1, 0, 9, 9, 3, 1, 3,
	7, 1, 3, 11, 3, 2, 0, 3, 1, 2,
	2, 3, 2, 6, 2, 1, 1, 2, 8, 4,
	2, 5, 5, 5, 2, 1, 3, 10, 11, 7,
	5, 3, 1, 5, 9, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 5, 1, 3, 1, 2,
	0, 1, 2, 2, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 6, 0, 3, 0, 2,
	2, 2, 0, 1, 1, 2, 2, 0, 3, 3,
	2, 1, 1, 2, 2, 5, 8, 4, 1, 0,
	1, 2, 2, 1, 2, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 4, 2, 2,
	2, 4, 7, 3, 4, 6, 3, 1, 1, 1,
	8, 10, 11, 5, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 3, 0, 1, 8, 3,
	6, 6, 5, 3, 4, 1, 0, 1, 3, 16,
	19, 15, 18, 4, 2, 0, 1, 0, 1, 0,
	1, 3, 3, 2, 0, 1, 1, 0, 6, 6,
	8, 6, 8, 6, 8, 6, 8, 1, 0, 2,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 2, 3, 2, 2, 8, 11,
	3, 3, 0, 3, 0, 3, 0, 3, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 8, 5, 3, 4,
	3, 0, 2, 2, 0, 10, 3, 2, 0, 1,
	3, 1, 1, 3, 3, 5, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 1, 2,
	6, 7, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 3, 3, 5,
	1, 3, 3, 4, 5, 2, 2, 0, 2, 2,
	1, 1, 1, 0, 1, 0, 2, 2, 5, 4,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 2, 0, 4, 2, 5, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 1, 1, 1, 3, 2,
	4, 4, 0, 4, 4, 3, 4, 1, 5, 3,
	4, 5, 5, 1, 5, 1, 3, 2, 0, 3,
	0, 2, 3, 1, 3, 2, 0, 3, 5, 6,
	4, 6, 4, 3, 2, 1, 0, 5, 1, 0,
	2, 2, 2, 1, 1, 0, 1, 1, 1, 0,
	4, 2, 1, 2, 2, 4, 1, 3, 1, 2,
	3, 2, 2, 2, 1, 0, 2, 5, 7, 2,
	1, 2, 4, 3, 5, 0, 1, 3, 5, 1,
	2, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	6, 6, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 3, 0, 5, 4, 1, 2, 1, 4, 1,
	1, 2, 1, 1, 1, 1, 1, 0, 1, 2,
	5, 1, 4, 2, 5, 1, 4, 3, 3, 0,
	1, 2, 4, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 1, 0, 1, 4,
	1, 3, 3, 3, 5, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 5, 4, 6,
	3, 5, 4, 6, 4, 6, 5, 7, 3, 3,
	3, 3, 3, 4, 3, 2, 4, 2, 3, 3,
	4, 3, 4, 3, 4, 5, 6, 6, 7, 6,
	7, 6, 7, 3, 4, 4, 1, 3, 1, 3,
	3, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 5, 6, 6, 7, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 6, 1, 1, 1,
	1, 1, 1, 2, 1, 5, 5, 6, 3, 1,
	1, 1, 2, 2, 2, 4, 3, 5, 6, 8,
	6, 5, 4, 3, 2, 2, 4, 1, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 6, 8, 8, 6, 4, 6, 6,
	6, 4, 1, 3, 3, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 1, 2, 3, 2, 3, 2, 3, 1,
	0, 1, 3, 1, 3, 3, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 1, 2, 3, 0, 3, 3, 2, 2, 1,
	2, 2, 3, 2, 1, 1, 1, 5, 1, 2,
	4, 2, 0, 1, 0, 3, 5, 1, 0, 1,
	2, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	3, 1, 3, 3, 1, 1, 1, 1, 5, 3,
	1, 1, 3, 1, 1, 1, 1, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 7, 1, 7, 5, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 0, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 494, -82, -79, -51, -49, -85, -86,
	-69, -87, -81, -99, -103, -91, -105, -145, -150, -151,
	-152, -3, -37, -39, -52, -68, -70, -80, -89, -88,
	-90, -92, -96, -95, -84, -43, -100, -104, -113, -146,
	-147, -148, 31, 30, 90, 74, 137, 114, 121, 174,
	318, 351, 361, 344, -108, -109, 376, -38, -50, -102,
	-101, 67, 115, 339, -4, -12, 28, 44, -40, -41,
	-42, 57, -57, -54, -63, -512, 92, -471, -71, -74,
	-516, 126, 143, 192, 308, -93, -94, 346, 348, 144,
	-45, -44, 138, -165, -167, -106, -107, -149, -114, -115,
	-116, -117, -118, -119, -120, -121, -122, -123, -124, -125,
	-126, -127, -128, -129, -134, -130, -131, -132, -133, -135,
	-136, -138, -139, -140, -141, -142, 380, -137, 429, 46,
	390, 76, 130, 355, 21, -5, -6, -7, -8, -9,
	-10, -11, -13, -53, -55, -56, -58, -59, -60, -67,
	-61, -62, -470, -72, -73, -75, -77, -78, -76, 345,
	-168, -166, 491, 443, -15, -20, -21, -16, -17, -19,
	-22, -18, -26, -31, -32, -28, -29, -27, -30, -33,
	-34, -35, -36, -24, -25, -14, -23, 461, 469, -171,
	-169, -170, -178, 368, 451, 406, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, -242, 2, -225,
	-230, -231, -232, -224, -196, -440, -443, 4, -437, -441,
	149, 201, 273, 21, 22, 23, 24, 25, 26, 28,
	29, 40, 41, 43, 42, 44, 45, 46, 51, 54,
	55, 56, 57, 58, 62, 67, 68, 73, 74, 75,
	76, 77, 78, 79, 85, 82, 83, 84, 87, 89,
	90, 91, 93, 95, 96, 104, 105, 106, 107, 109,
	114, 115, 118, 113, 117, 120, 121, 124, 125, 126,
	128, 129, 131, 132, 134, 135, 137, 138, 141, 139,
	412, 140, 142, 143, 144, 145, 155, 156, 157, 162,
	164, 168, 169, 172, 173, 175, 179, 181, 182, 183,
	184, 185, 191, 192, 194, 195, 196, 197, 202, 203,
	207, 204, 213, 217, 218, 219, 221, 225, 226, 227,
	228, 229, 232, 231, 234, 237, 238, 241, 242, 243,
	246, 247, 248, 249, 251, 252, 255, 253, 256, 254,
	258, 259, 260, 257, 263, 261, 265, 266, 271, 269,
	267, 268, 275, 278, 189, 280, 281, 284, 302, 288,
	289, 290, 293, 294, 297, 300, 301, 303, 304, 305,
	306, 307, 308, 309, 311, 312, 316, 318, 319, 321,
	323, 324, 325, 326, 327, 328, 329, 331, 332, 339,
	344, 341, 342, 343, 345, 346, 347, 348, 350, 351,
	353, 354, 355, 356, 358, 360, 377, 378, 392, 361,
	362, 363, 364, 365, 366, 367, 371, 369, 370, 372,
	373, 374, 376, 379, 380, 382, 383, 386, 388, 389,
	390, 391, 393, 396, 397, 398, 399, 394, 405, 402,
	403, 407, 408, 409, 410, 411, 413, 415, 423, 424,
	426, 429, 430, 431, 421, 433, 434, 437, 438, 439,
	442, 440, 441, 443, 445, 448, 449, 450, 456, 455,
	462, 463, 465, 466, 467, 35, 47, 48, 50, 52,
	63, 64, 65, 69, 110, 111, 136, 146, 147, 158,
	170, 171, 176, 178, 186, 187, 188, 208, 209, 211,
	215, 235, 277, 279, 295, 299, 313, 314, 315, 317,
	330, 357, 384, 395, 400, 416, 417, 418, 419, 425,
	427, 451, 452, 453, 457, 464, -242, 2, -225, 286,
	-218, 2, -196, -196, 318, 27, 2, 27, 312, 370,
	408, 410, 2, -496, -277, 2, 27, -199, -196, 92,
	174, 368, -218, 2, -496, -277, 24, 2, -196, 2,
	-200, 2, 361, -196, 494, 87, 243, 68, 357, 373,
	-111, 424, -110, 416, 363, -112, -428, 2, 263, -196,
	494, 494, 494, 27, -208, -196, 406, 201, 106, 403,
	494, 2, 406, 305, 455, 369, 106, 327, 201, 431,
	-505, 353, 177, 444, -494, 2, -490, 4, -441, -437,
	-236, -235, 406, 106, -232, -224, 484, -231, 494, 494,
	494, 2, 218, 219, 326, 325, 373, 374, 494, 494,
	2, 26, 60, 86, 89, 112, 145, 165, 168, 291,
	-513, 252, 302, 324, 372, 405, 413, 426, -504, 391,
	62, 363, -503, -505, 431, 124, -324, 106, 243, 173,
	438, 410, 408, 436, 118, 207, 441, 440, 494, 26,
	60, 71, 89, 124, 145, 165, 168, -515, 302, 324,
	360, 363, 372, 405, 413, 426, 2, 455, 369, 406,
	201, 106, 431, -505, 322, -82, 2, 491, 31, 30,
	376, -161, 406, 212, 2, -196, 218, 219, 2, 494,
	494, 166, -490, 2, 218, 219, 2, 212, 2, 62,
	365, 494, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 494, 2,
	-143, 373, 391, 183, 44, 68, 27, 323, 73, 306,
	107, 175, 201, 202, 226, 86, 87, -326, 43, 219,
	218, -378, 407, 364, 370, 402, 229, 361, 424, 92,
	445, 354, 467, 327, 328, 139, 4, 106, 263, 375,
	416, 243, 78, 494, -522, 2, 406, -524, 2, 424,
	424, 2, -524, 2, -524, 2, -524, 2, -525, 424,
	464, 494, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, -166, -168, -167,
	494, 494, 494, 494, 494, 494, -143, 373, 2, 68,
	27, -270, -272, 435, 210, 133, 292, -165, -167, 2,
	-470, -426, 2, -352, -444, -354, 482, 483, 475, 404,
	61, 272, 468, -366, 112, 436, 286, -443, -355, -368,
	136, 357, -292, 8, 9, 5, 6, 7, -205, -356,
	-362, 428, 148, 276, -239, 495, 10, 491, -467, -167,
	-367, 36, 178, 59, -430, -238, -206, -402, 211, -237,
	-224, -464, -465, 4, -437, -438, -431, -405, -413, -409,
	-410, -416, -196, -440, 71, 98, 99, 97, 102, 101,
	245, 244, 103, 100, 375, 444, 60, 35, 186, 187,
	215, 277, 188, 69, -466, 125, -439, 208, 209, 384,
	48, 330, 158, 111, 110, 279, 52, 50, 452, -414,
	108, 416, 417, 418, 419, 170, 171, 146, 147, 299,
	315, 400, 425, 427, 176, 235, 94, 167, 206, 190,
	214, 216, 220, 236, 239, 264, 270, 274, 296, 298,
	352, 381, -528, 453, 395, 63, 64, -472, 331, -473,
	-218, -472, 494, 494, 496, 494, -264, -265, -266, 2,
	27, 122, 491, 2, -382, 2, -383, -387, -167, 230,
	-386, 491, -384, 489, -225, 287, -468, 358, -464, -465,
	-205, -224, -238, 4, -437, -439, 493, -267, 491, 106,
	406, 72, 201, -319, 491, -196, 27, 286, 420, 496,
	-364, 491, 286, 166, 289, -196, 2, 2, 377, 2,
	491, -111, 65, 424, 42, 373, -339, 2, -340, -193,
	-194, -195, -392, 217, 321, 329, 470, 467, -426, -506,
	166, 474, 420, -426, -293, 493, 2, 2, 2, 2,
	2, -387, 186, -225, 2, -222, -429, 4, -437, -441,
	-438, -442, -440, 27, 30, 31, 32, 34, 36, 37,
	38, 39, 53, 59, 60, 66, 70, 72, 81, 86,
	92, 97, 98, 100, 99, 101, 102, 103, 112, 116,
	119, 122, 123, 127, 130, 133, 148, 150, 163, 165,
	166, 174, 177, 180, 193, 205, 210, 212, 230, 233,
	240, 244, 245, 272, 276, 282, 286, 287, 291, 292,
	310, 320, 333, 349, 368, 375, 387, 401, 406, 414,
	420, 422, 428, 435, 436, 444, 446, 454, 458, 459,
	460, 461, -443, 71, 2, -387, 186, 2, -227, 186,
	-387, -230, 2, -209, -196, 2, -221, -429, 2, -243,
	186, -225, -226, -230, -228, 2, -230, -435, 186, 2,
	-433, 10, -432, 5, 4, -437, -441, -438, 420, 496,
	-283, -235, -236, -276, -196, 493, -352, 2, -100, 2,
	-352, 186, 2, -100, 186, 2, -352, 186, 2, -100,
	186, 2, 2, 2, 426, 2, 89, 186, -196, 406,
	105, 2, 343, -514, 360, 430, 455, 2, 2, 2,
	2, 2, 2, 406, -214, 2, -196, 163, -234, 186,
	2, -196, 369, -523, 331, -435, 186, 2, -228, 2,
	-228, 201, 213, -209, 186, 2, 410, 408, 410, 408,
	166, 2, 212, 2, 212, 2, -388, 2, -389, -383,
	-225, 489, 2, 2, 2, 2, 2, 186, -196, 406,
	105, 2, 228, 2, 2, 2, 2, 2, 2, 2,
	2, -285, 186, 2, -225, -285, 186, 2, -285, 186,
	2, -325, 2, 81, -209, 186, 2, -233, 186, 2,
	-228, -436, 186, 2, -435, -396, 2, -395, -432, 451,
	-82, 491, -82, 491, 373, 491, -435, -225, -225, -352,
	-100, -98, -97, -435, 491, 166, -352, -100, -161, 163,
	2, 106, 406, -143, 2, 163, 446, 2, 8, 2,
	-435, 364, 328, 155, 2, 377, 2, 378, 68, -326,
	467, 68, 166, 2, 166, 2, -309, 2, 461, -493,
	2, 286, 166, 2, 166, 2, 166, 2, 166, 2,
	166, 2, 325, 374, 219, 2, -100, 458, -352, 458,
	2, 423, 227, 140, 166, -309, 2, 166, 2, 166,
	2, 5, 2, 326, 392, 2, 217, 321, 392, 2,
	-225, -517, 2, 406, 455, 369, 2, 2, 82, 83,
	166, 2, 166, 2, 166, 467, 2, -302, -387, -338,
	-339, -338, 420, -270, -272, -143, 377, 2, -172, -300,
	-174, 163, -328, -329, -175, 240, 150, 282, -176, -308,
	27, 122, -308, -308, 55, 492, 492, 11, 12, 70,
	40, 482, 483, 484, 485, 161, 486, 487, 480, 481,
	479, 472, 473, 477, 223, 224, 88, 476, 474, 80,
	250, 359, 151, 152, 153, 154, 340, 199, 33, 200,
	14, 15, 16, 32, 291, 239, 468, 190, 381, 475,
	17, 18, 19, 214, 216, 274, 47, 193, -204, -245,
	-352, -352, -352, -352, -352, -352, -352, 298, 491, -298,
	-347, 489, -167, 491, 491, 491, -425, 8, -167, -352,
	-366, 492, -290, 491, -167, -366, -361, 491, 357, 489,
	491, -369, -352, 5, 5, 5, 491, 493, -475, 462,
	163, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 317, -407, 491, -406,
	491, -406, -406, 456, -404, 491, 469, 463, 491, -404,
	491, 491, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 491, 491, 456, 496, -472, -267, 491, -294, -390,
	-352, 484, -294, -294, 286, -287, -352, 94, -312, 220,
	264, 167, 236, 352, 206, -349, 495, -349, -377, 469,
	-167, -384, -224, -167, -386, 491, -382, -377, -83, -425,
	-68, -80, -88, -100, -113, -147, -148, 484, -225, 491,
	166, 491, 493, -429, 166, -276, -209, -225, -237, -238,
	-243, 121, -287, -490, -276, -199, 37, -363, -399, -400,
	-446, 495, -445, -402, -412, -408, -411, 313, 314, -431,
	50, 452, -414, 211, 4, -437, -439, 208, 209, 384,
	48, 330, 158, 111, 110, 279, 52, 416, 417, 418,
	419, 170, 171, 453, 395, 63, 64, -490, -276, 163,
	-428, -287, 37, -339, 2, 112, -433, 42, -526, 496,
	238, -247, 249, 271, 182, 287, 465, 280, -434, 5,
	4, -362, -374, 112, 243, 211, -419, -421, 8, -420,
	9, -422, 482, 483, -427, -426, 96, 493, -429, -183,
	341, -182, 23, 28, 126, 449, 141, -257, 203, 305,
	136, 388, 439, -500, -501, 362, 411, 412, 84, 280,
	341, 136, -305, -307, 37, 104, 266, 300, 56, 196,
	254, 255, 390, 457, 136, 341, -501, 341, -501, -185,
	388, 439, -500, -501, 362, 341, -184, -257, 136, 495,
	23, 341, 376, 301, -510, -511, 126, 28, -497, -469,
	461, 136, -97, -283, 496, 496, -429, 484, 136, 136,
	136, 136, 2, 2, 272, 2, 2, 2, 168, -503,
	-515, 2, 2, 2, -225, 186, -269, 286, -492, -284,
	406, -225, 272, -227, 186, 2, -230, 455, -497, 272,
	37, 491, 2, -325, 2, 201, -469, 272, -388, -240,
	-225, -383, -240, 376, -218, 37, -349, -349, 136, 2,
	2, 2, -196, -186, 496, 58, 347, 136, -186, 136,
	-186, 136, -244, 186, -243, -186, 136, -186, 496, 136,
	496, 136, 492, 496, -396, -396, -435, -156, 461, 166,
	92, 491, 491, -161, -393, 496, -392, -436, -98, -435,
	-492, -209, 2, -225, 2, 406, 221, -156, -435, -435,
	-435, -428, 27, 378, 2, 325, 374, 83, 378, 2,
	-225, 406, 106, 201, 74, -495, 163, -491, 353, -490,
	-225, 106, -225, 106, -225, 106, -225, -225, 2, 2,
	2, 2, 79, 79, 163, 2, 423, 2, 423, 2,
	-196, -196, -196, 391, 238, -225, 163, 406, 201, 406,
	201, 106, 406, -186, 496, -200, -172, -300, -428, -301,
	-300, -173, -172, -175, 163, 329, 440, 266, 379, 225,
	-329, -328, 27, -352, -333, 157, 265, -352, -331, -354,
	482, 483, -420, -422, -286, 280, -166, -166, -166, -273,
	-379, -352, 320, 201, -401, -399, -399, -223, -429, 416,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -352, -352, 239, 190, 381, 47, 193,
	-352, 420, -352, -352, -352, -352, 261, 272, 276, 428,
	148, 437, 122, 280, -529, 401, 39, -359, -167, -291,
	491, -373, 34, 387, 27, -366, 491, 2, -347, -352,
	-348, -288, -287, -287, 492, 454, 27, 122, 484, 2,
	492, 496, 37, 492, -352, -288, -365, -361, -287, -372,
	-371, 458, -320, -321, 466, 257, 109, 184, 256, -322,
	367, -423, 8, -429, 484, -476, 156, 177, 491, 492,
	2, 492, 2, 492, -352, 2, 492, -352, 2, 492,
	-352, 2, 492, -352, 2, 492, 2, -352, -352, -352,
	-352, -352, -352, -352, -287, 8, -423, -423, 416, 416,
	-423, -423, -423, -415, 313, 241, 314, 172, 260, 258,
	259, 171, -415, -314, 2, -417, -287, 4, 466, 257,
	109, 184, 256, 367, 5, -314, 2, -315, 2, -352,
	-287, -316, -353, -354, 482, 483, 475, -366, -317, 2,
	-352, -288, -352, 53, 233, 422, -318, -352, 166, -287,
	-287, 2, -287, 2, -473, 37, -287, -279, 496, 166,
	37, 4, -279, -279, 491, 492, 496, -313, 181, 253,
	248, -313, -382, -312, 220, -310, 296, -310, -310, -377,
	-210, 489, 497, -429, -377, -376, -375, 37, -218, 293,
	-377, -377, 493, 492, -376, 490, -488, 491, 494, 494,
	494, 494, 494, -225, 491, -287, -429, 493, 393, 492,
	214, 214, 214, 214, 358, 492, 420, 461, -82, 288,
	492, 496, -278, 36, 489, 493, -423, 2, 2, -418,
	456, 491, 491, -321, 491, 166, -277, -506, 492, 424,
	-340, -246, 329, 386, 342, 371, 403, 8, 9, 8,
	9, 496, -429, 496, -507, 86, 420, 72, -343, 186,
	72, -447, -212, 86, -448, -196, 66, 436, 320, 165,
	134, -507, 86, 320, -507, 86, 86, 376, 391, 55,
	-387, 40, 40, 27, -100, 234, 166, 467, 406, 201,
	420, -387, -307, -399, 104, 254, 255, 55, -424, -419,
	482, 483, -424, 55, -424, -424, -424, 461, -227, -387,
	420, 420, 496, 40, 40, 27, -100, 234, 166, 420,
	-243, -210, 450, 41, 450, 420, 41, 363, 420, 496,
	41, 41, -498, -201, 93, 267, 247, 268, -202, -203,
	307, 448, -435, -393, -235, -196, 493, -352, -100, -352,
	-100, 136, 2, -523, 228, 491, -250, 272, 166, -276,
	-394, 212, 496, -284, 136, -306, -305, 272, -229, 186,
	2, -225, 136, 131, 491, 327, 2, -211, 186, -197,
	-196, -325, -189, 409, 136, -304, 446, -334, -100, 491,
	112, 37, -334, -295, -296, -391, -297, -212, 491, -218,
	-196, 2, -225, -285, -285, -285, -186, 496, 136, -209,
	-228, -233, -435, -436, -82, -395, 492, 492, 492, -155,
	290, -154, -196, 5, -161, 446, -249, -344, -343, -451,
	-452, -447, 239, 201, 436, 213, 149, -268, -213, -212,
	105, -156, -97, 492, -393, -156, -156, -393, -393, -225,
	163, -156, -156, -156, 2, 2, -309, -225, -209, -243,
	-225, -276, -276, -309, -209, -309, -209, -309, -209, -100,
	-352, 373, 163, 163, 493, -309, 327, 106, 406, 305,
	201, -225, -243, -225, -243, -209, -225, -387, -301, -173,
	287, 225, 379, -331, -332, -354, 357, 358, -332, 357,
	358, 8, 9, 8, 9, -177, 383, 275, -285, 496,
	-180, 38, 119, 225, -225, 467, 132, -352, -352, 420,
	-529, 401, -359, 132, -352, 261, 276, 428, 148, 437,
	122, 280, 166, 491, -353, -353, 492, -289, -352, -352,
	490, 499, 492, -272, 496, -270, -352, -287, -287, 492,
	493, -287, -276, 490, 490, 496, 492, -370, -371, 127,
	-352, 420, 420, 420, 420, 491, 492, 493, -481, 297,
	491, 491, -352, 492, 492, 492, 492, 37, 496, 496,
	496, 492, 496, 496, 496, 492, 492, 492, 496, 492,
	467, 467, 492, 492, 492, 492, 496, 492, 496, 492,
	166, 492, 492, -323, 310, 492, 11, 12, 482, 483,
	484, 485, 161, 486, 487, 480, 481, 479, 472, 473,
	474, 80, 250, 359, 14, 15, 16, 214, 193, -353,
	-353, -353, 492, -357, -358, 166, 163, 37, -318, -318,
	-318, 492, 166, -287, 492, 492, 491, -474, 252, 272,
	492, -346, -345, 459, -390, -280, 2, -382, -220, -429,
	-346, -346, -287, -352, 220, 220, -311, 446, 286, -313,
	-382, -376, -425, -351, -350, 164, 38, 119, 269, 189,
	-376, -218, -267, -376, -376, -429, -377, -377, -375, 492,
	-489, -425, 492, -281, -385, -468, -272, 493, -429, -156,
	-144, 5, 276, -144, -144, -144, -276, 24, 311, -399,
	489, 490, 8, -429, 491, -423, -423, -423, -276, 166,
	-426, -339, 434, 77, 329, 416, -426, -182, 341, -212,
	-212, -225, 272, -343, 186, -188, 272, -399, -219, -196,
	491, 491, 225, 225, 446, -212, -219, 225, 186, -212,
	186, -219, -219, -499, 329, 281, -352, 242, 327, 273,
	-183, 341, -100, -100, -100, 491, -506, 446, 121, -225,
	-243, -225, -229, 341, 270, -237, -424, -424, -305, 341,
	-227, -209, -184, -100, -100, -100, 491, -210, -185, 341,
	5, 186, -212, 5, -228, -212, -234, -509, -433, 103,
	375, -511, 23, -212, 186, -212, -201, -435, 276, 442,
	-497, -153, 197, 484, -196, 455, -196, -248, -251, -249,
	-212, -164, 463, 461, 136, -241, -225, 489, -156, -435,
	-225, -234, 136, -267, 272, -435, 491, 2, 2, 286,
	272, -211, 186, -190, 128, -527, 474, -209, -346, -280,
	-303, -337, 349, 286, -268, 451, -218, -303, -282, 496,
	166, 474, 493, -268, 2, -186, -186, -186, -243, -244,
	-186, -186, -82, -82, -156, 496, 491, 474, 474, 491,
	-435, -435, 492, 496, -225, -211, 201, 201, -217, -197,
	492, 496, 493, 491, -156, 166, -46, 461, 406, 495,
	-309, -309, -309, 373, 373, -196, -221, -209, -225, -222,
	-243, 163, 163, 440, -332, 287, 246, -379, -181, 278,
	-225, 495, -352, -352, 132, 132, -352, -353, -353, -352,
	132, 166, 491, -352, -363, 32, 32, 492, 496, -348,
	-352, 492, 454, -272, -272, 492, 484, -429, 495, 492,
	-361, 130, -352, 414, 257, 184, 256, -322, 256, -322,
	-322, -423, 5, -429, 484, -482, -215, 491, -196, 459,
	-271, 292, 492, -401, -399, -352, -352, -352, -352, -352,
	-423, -404, -404, -419, -419, -352, -357, -352, -401, -399,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, 122,
	272, 280, -353, -358, -357, -352, -352, -399, 492, 492,
	492, -287, -82, 491, 252, -299, 177, -352, -393, 496,
	-299, -299, 492, -382, -382, 491, -352, 220, 490, 496,
	498, 474, -267, 493, -375, -376, 490, 492, 496, 492,
	496, -336, 37, 492, -429, 289, 5, 8, 489, 490,
	493, -423, 492, 492, 492, -276, -352, 420, 420, 136,
	272, 448, -453, -448, 134, -352, -274, -380, -352, 491,
	491, 2, -179, 126, 376, -508, 2, 446, 136, -186,
	136, -186, 465, 491, 491, 420, 461, -287, -352, -157,
	112, -428, -501, 495, -501, 495, 420, 420, 461, -287,
	420, -403, 45, 25, 272, -228, 420, 420, -186, 136,
	431, 376, -435, 276, -158, 461, 166, 2, -229, 2,
	492, 492, 496, -454, 37, 284, 491, 284, -225, -64,
	461, -392, -425, -227, 37, 136, -497, -397, -398, 5,
	-225, 136, 286, 272, -191, 232, -527, -433, -469, -272,
	-303, -294, 273, 85, 492, -346, -296, -280, -352, 2,
	492, -186, -154, -155, -435, -435, -435, -156, -161, -161,
	-344, -252, 491, -211, -197, 491, -161, -213, 2, -436,
	-100, 290, -225, 484, -309, -259, -258, 305, 280, -259,
	357, 357, 287, 157, 229, -180, -210, -352, -352, 132,
	32, 32, -352, -352, -363, 492, -352, -352, -287, 490,
	5, -352, 492, 492, 8, -352, 492, 493, -483, -196,
	-352, 492, 55, 492, 492, 496, 496, 492, 492, 492,
	492, 492, 492, 492, -358, 166, 122, 280, 491, 492,
	492, -82, -360, 180, 55, -382, -360, -360, -311, -276,
	-382, -350, -210, 489, -429, -425, -385, 491, 493, 490,
	2, 489, -429, 492, -212, -212, -343, 136, -455, 86,
	-457, 70, 149, 92, 272, 276, 436, 320, 66, 112,
	333, -519, 37, 471, 492, 492, 496, -180, -274, -276,
	272, 398, 112, 272, 112, 105, 431, 73, -212, -219,
	-276, -276, -225, 142, 492, 496, 474, 2, 484, 484,
	-229, -227, 142, 492, -210, 5, 5, 136, -207, 70,
	5, -212, -212, -228, 105, -160, 290, -159, 129, 350,
	120, -436, -267, -255, 204, -212, -452, -449, -450, 320,
	-456, -458, 149, 320, -100, -163, -162, -196, 5, 2,
	491, -250, 290, 490, -306, -100, -229, 492, 496, -327,
	446, -210, -225, 136, -192, 231, -527, -433, -189, -330,
	-328, -335, 491, 286, -100, -272, 474, 492, 492, 105,
	105, 195, 135, -274, 491, 491, -276, 105, 492, -47,
	-48, 201, 86, 309, -222, 406, 201, 491, 491, -180,
	-352, -352, -352, 492, -272, -429, 484, -477, 305, 492,
	-379, -352, -352, -353, 166, 491, -363, 492, -478, 460,
	-352, -287, -478, -478, 492, -425, 2, 489, 2, -343,
	-219, -223, -216, -196, 149, 186, 276, 225, 491, -353,
	-225, 491, 2, 29, -520, 116, 205, -342, -521, 91,
	399, 194, -380, -181, 492, 492, 276, 276, -352, -399,
	491, -186, -186, 492, 492, -352, 420, -428, 90, -426,
	2, -501, -352, 420, 5, -186, -223, -186, -186, -207,
	431, 496, 491, 474, 37, -256, -257, 193, -454, 225,
	-216, 225, -518, 461, 492, 496, 474, 474, -248, -164,
	-65, -66, 421, -392, -267, 5, 491, -196, 286, 491,
	-210, -527, -433, -190, -303, 123, -276, 86, -330, -359,
	-156, 491, 491, -253, 75, 87, 113, 185, 169, 202,
	391, 396, 27, -253, 492, -274, -274, 492, 491, -156,
	496, 27, 491, 27, 491, -225, -243, -287, -287, 492,
	-272, 55, 496, 492, 492, -353, -363, 492, -479, -480,
	-215, 490, 2, -457, -216, 272, 446, -352, -198, 491,
	-352, 37, 205, 117, 191, -255, 491, -341, 446, 333,
	-207, -274, 491, 491, 491, 474, 166, 491, -403, -186,
	-228, -159, -160, -435, -100, -164, 303, 491, -254, 286,
	105, 266, -162, -355, -355, 492, 37, -66, 9, 37,
	-274, -225, -274, 286, -433, -191, 440, 273, 492, -219,
	-303, -436, -436, -341, 492, 492, -436, -48, -276, -276,
	492, 492, -484, 327, 358, 179, -287, -273, 492, 496,
	37, 136, 181, 492, -459, 251, -196, 492, 117, 191,
	-256, -276, -255, 181, -225, -502, 446, 492, -261, -260,
	-258, -263, -262, -258, -287, -426, 90, 303, -287, -207,
	492, -254, -225, -275, -381, -212, 76, 105, -255, -100,
	-100, 492, -327, 492, -225, -192, 376, -345, 492, 492,
	-342, -341, -346, 492, 492, 492, 492, -485, -486, 47,
	433, 96, -352, -485, -485, -480, -482, 149, 461, -460,
	-463, -462, 286, 382, 167, 304, 492, 398, 457, -520,
	492, 461, -267, -352, -341, 492, 496, 451, 492, 496,
	451, 492, 166, 492, -186, 491, 492, 496, 319, 118,
	126, -256, -518, -341, 491, -342, 491, -295, -156, -156,
	-255, -342, -156, -487, 134, -486, 316, 162, 357, 316,
	162, -487, -487, -216, 51, -462, 286, -463, 286, 440,
	118, -346, 51, -459, -255, -260, 193, -262, 166, 303,
	-276, -381, 358, 358, 2, -164, -254, -342, -274, -255,
	-274, -346, -256, -255, 96, 177, 415, 266, 32, 474,
	-461, 266, 347, 58, 376, -461, 474, -460, 491, 491,
	492, 2, -254, -255, 492, -256, 492, -346, -256, 357,
	294, -486, -352, 22, 276, 112, -352, -520, -287, -287,
	-187, 58, 347, -256, -341, -346, -342, -346, 492, 492,
	-346, -342, -255, -256, 420, -255, -256, 491, -256, -346,
	-287, -346, 492, -256,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 25, 26, 27,
	28, 413, 414, 416, 417, 418, 420, 421, 423, 425,
	427, 429, 430, 432, 434, 436, 437, 438, 439, 440,
	442, 444, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 502, 504, 0, 1038, 1040, 1042,
	1044, 0, 634, 0, 30, 31, 0, -2, 228, 230,
	232, 0, 257, 259, 260, 262, -2, 0, 358, 359,
	361, -2, -2, 0, 0, 491, 493, 0, 0, 0,
	513, 514, 0, 1126, -2, 507, 509, 511, 576, 578,
	580, 582, 584, 586, 588, 589, 591, 593, 595, 597,
	599, 601, 603, 604, 606, 608, 610, 612, 614, 616,
	618, 620, 622, 624, 626, 628, -2, 630, -2, -2,
	0, -2, -2, -2, 1056, 34, 36, 38, 40, 42,
	44, 46, 48, 309, 310, 312, 314, 316, 318, 321,
	323, 325, 1184, 363, 365, 367, 369, 371, 373, 0,
	-2, 1196, 0, 0, 50, 51, 52, 53, 54, 55,
	56, 57, 73, 74, 75, 76, 77, 78, 79, 80,
	61, 63, 64, 68, 69, 71, 59, 0, 0, 1157,
	1159, 1161, 1163, -2, 0, 0, 5, 9, 11, 13,
	15, 17, 19, 21, 23, 415, 419, 422, 424, 426,
	428, 431, 433, 435, 441, 443, 445, 400, 401, 404,
	1816, 1833, 1834, 1835, 1838, 1839, 1840, 1841, 1842, 1843,
	2197, 2278, 2279, 1865, 1866, 1867, 1868, 1869, 1870, 1871,
	1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881,
	1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891,
	1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901,
	1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911,
	1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921,
	1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931,
	1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941,
	1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951,
	1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961,
	1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971,
	1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981,
	1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991,
	1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,
	2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,
	2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,
	2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031,
	2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041,
	2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051,
	2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061,
	2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071,
	2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081,
	2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091,
	2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101,
	2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111,
	2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121,
	2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131,
	2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141,
	2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151,
	2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161,
	2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171,
	2172, 2173, 2174, 2175, 2176, 2177, 402, 403, 918, 0,
	469, 467, 1809, 470, 2029, 472, 474, 352, 353, 354,
	355, 356, 357, 0, 484, 478, 483, 485, 487, 488,
	489, 490, 464, 462, 0, 484, 1868, 482, 1036, 1037,
	1031, 1032, 2061, 1063, 503, -2, -2, -2, 2163, -2,
	535, -2, 542, 2167, 2063, 547, 0, 549, -2, 552,
	1039, 1041, 1043, 632, 633, 1819, 0, 0, 0, 0,
	32, 33, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 967, 968, 969, 0, 182, 184, -2, -2, -2,
	-2, 0, 0, 1909, 1777, 1835, 1780, 1775, 229, 231,
	233, 234, 0, 0, 0, 0, 0, 0, 258, 261,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	813, 805, 806, 1008, 0, 0, 0, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 0, 0,
	-2, 0, 0, 0, 288, 405, 406, 0, 1185, 1185,
	0, 0, 0, 0, 209, 200, 0, 0, 782, 492,
	494, 0, 0, 195, 0, 0, 1035, 0, 211, 0,
	0, 508, 510, 512, 577, 579, 581, 583, 585, 587,
	590, 592, 594, 596, 598, 600, 602, 605, 607, 609,
	611, 613, 615, 617, 619, 621, 623, 625, 627, 629,
	639, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, 642, 644, 645, 646,
	0, 697, 714, 631, 0, 958, 1186, 1065, 1046, 1060,
	1065, 1048, 1049, 1050, 1051, 1052, 1057, 1059, 1053, 1054,
	1055, 35, 37, 39, 41, 43, 45, 47, 49, 311,
	313, 315, 317, 319, 322, 324, 326, -2, 1155, 1156,
	364, 366, 368, 370, 372, 374, 495, 0, 497, 0,
	643, -2, 0, 1190, 1190, 1190, 0, 0, 1156, 1154,
	0, 500, 501, 556, 557, 1420, 0, 0, 0, 0,
	0, 0, 0, 1674, 1506, 0, 558, -2, 1537, 1539,
	2138, 2163, 1673, 1541, 1542, 1543, 1544, 1545, 0, 1547,
	1548, 1549, 1550, 1551, 1552, 0, 1554, 0, 1559, 1560,
	1561, 0, 2145, 1754, 1829, -2, 0, 0, 2151, 1825,
	0, 1640, 1577, -2, -2, 1852, 1831, 1352, 1353, 1354,
	1355, 1356, -2, -2, 2180, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 0, 2127, 2146, 2147,
	2152, 2154, 2148, 2135, 1602, 1920, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1379,
	1388, -2, -2, -2, -2, -2, -2, 2139, 2140, 2157,
	2160, 2166, 2171, 2172, 2144, 2153, 2181, 2182, 2183, 2184,
	2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194,
	2195, 2196, 1380, -2, -2, -2, -2, 1173, 2039, 1176,
	918, 1174, 1158, 1160, 0, 1162, 0, 0, 0, 1167,
	1193, 1191, 0, 1234, 1171, 1172, 1252, 1252, 1276, 0,
	1257, 0, 1276, 1185, 1302, 0, 1263, 2056, 1578, 1579,
	0, 1835, 1830, -2, -2, 2178, 0, 0, 0, 0,
	0, 0, 0, 465, 0, 471, 473, 0, 0, 0,
	0, 0, 0, 0, 0, 1062, 505, 506, 0, 530,
	0, 534, 2134, -2, 1876, 2072, -2, 538, 1066, 1070,
	1071, 1072, 1073, 0, 0, 0, 0, 0, 544, 0,
	0, 531, 532, 550, 553, 0, 635, 636, 637, 638,
	58, 0, 2146, 1302, 60, 0, 1799, 1860, 1861, 1862,
	1863, 1864, 2179, 2198, 2199, 2200, 2201, 2202, 2203, 2204,
	2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214,
	2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224,
	2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234,
	2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244,
	2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254,
	2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264,
	2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274,
	2275, 2276, 2277, 2180, 62, 0, 2146, 65, 0, 2146,
	0, -2, 70, 0, 1805, 72, 0, 1802, 81, 0,
	2146, 0, 1774, -2, 0, 167, 1813, -2, 2146, 966,
	212, 213, 1848, 1849, 1856, 1857, 1858, 1859, 0, 0,
	774, 1771, 1776, 775, 1781, 0, 235, 236, 237, 238,
	239, 2146, 241, 242, 0, 244, 245, 2146, 247, 248,
	0, 250, 264, 265, 0, 267, 0, 2146, 0, 0,
	0, 273, -2, 289, 0, 286, 0, 277, 278, 280,
	281, 282, 283, 0, 330, 328, 1810, 0, 783, 2146,
	785, 1815, 0, 0, 987, -2, 2146, 963, 993, 989,
	0, -2, 0, 1183, 2146, 1080, 809, 810, 811, 812,
	0, 349, 0, 1093, 0, 1095, 0, 1116, 1308, 1252,
	1252, 0, 290, 291, 292, 293, 294, 2146, 0, 0,
	0, 299, 0, 301, 302, 303, 304, 305, 306, 307,
	308, 156, 2146, 377, 398, 156, 2146, 380, 156, 2146,
	383, 0, 386, 1006, 156, 2146, 389, 156, 2146, 392,
	393, 395, 2146, 397, 214, 0, -2, 458, 1818, -2,
	408, 0, 409, 0, -2, 0, 226, 0, 0, 780,
	781, 1289, 198, 196, 0, 0, 1033, 1034, 0, 0,
	515, 0, 0, 640, 641, 0, 0, 651, 652, 653,
	226, 2064, 2037, 1938, 658, 0, 661, 664, -2, 0,
	0, 0, 0, 668, 0, 673, 674, 675, 0, 779,
	677, 0, 0, 679, 0, 683, 0, 686, 0, 688,
	0, 690, -2, -2, -2, 701, -2, 0, 705, 0,
	707, 0, 0, 0, 0, 722, 723, 0, 728, 0,
	731, 732, 733, 0, 735, 736, 0, 738, 739, 740,
	741, 0, 743, 744, -2, -2, 748, 750, 0, 757,
	0, 761, 0, 765, 0, 647, 648, 156, 1306, 1045,
	-2, 1047, 0, -2, 0, 496, 0, 499, 1213, 1141,
	1138, 0, 1210, 1211, 1142, 0, 0, 0, 1149, 0,
	1188, 1189, 0, 0, 0, 1128, 1129, 0, 0, 0,
	0, 1679, 1680, 1681, 1682, 1683, 1684, 1687, 1688, 1685,
	1686, 1689, 1690, 0, 0, 0, 0, 0, 1691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1692, 1693, 1694, 0, 0, 1696, 0, 1698, 0, 0,
	0, 0, 0, 0, 1485, 1487, 1762, 0, 0, 1695,
	1425, 1426, 1427, 1428, 1429, 1464, 1465, 0, 0, 1538,
	1759, 1758, 1540, 0, 1710, 0, 1553, 1795, -2, 0,
	1674, 1705, 0, 0, 1562, 1563, 1564, 0, 0, 1710,
	0, 0, 1753, 1574, 1575, 1417, 0, 0, 1642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1366, 1365, 0, 1367,
	0, 1368, 1369, 1376, 1389, 0, 0, 0, 0, 1393,
	0, 0, 0, 0, 0, 0, 0, 1734, -2, 0,
	0, 0, 0, 1381, 0, 1175, 0, 0, 1238, 1763,
	1767, 1768, 1238, 1238, 0, 0, 1711, 1299, 1299, 0,
	0, 1295, 1295, 1295, 1293, 1276, 0, 1276, 1286, 0,
	1276, 1276, 0, -2, 1257, 0, 0, 1286, 0, 1270,
	446, 448, 450, 452, 453, 454, 456, 1303, 1304, 0,
	0, 0, 0, 1836, 0, 0, 0, 0, 0, 1821,
	0, 0, 0, 0, 476, 486, 1185, 0, 1713, 1325,
	1329, 0, 1331, 1332, 1333, 1334, 1335, 0, 0, 1326,
	-2, 1377, 1379, 1400, 1853, 1854, 1855, 1360, 1361, 1362,
	1363, 1364, 1372, 1359, 1359, 1359, 1370, 1399, 1391, 1399,
	1395, 1346, 1347, 1382, 1383, 1384, 1385, 0, 480, 0,
	0, 0, 0, -2, 540, 545, 546, 0, 0, 1068,
	0, 1074, 567, 568, 569, 1076, 1077, 0, 543, 570,
	571, 572, 573, 574, 575, 0, 1783, 1784, 1785, 1786,
	1789, 1790, 0, 0, 541, 560, 548, 0, 554, 82,
	1028, 121, 0, 1028, 1028, 0, 0, 143, 0, 0,
	0, 0, 0, 0, 106, 117, 94, 95, 0, 0,
	0, 0, 66, 940, 0, 943, 0, 0, 0, 0,
	0, 0, 0, 956, 0, 0, 105, 0, 100, 84,
	0, 0, 0, 107, 119, 0, 147, 149, 0, 0,
	0, 0, 0, 0, 166, 174, 0, 0, 964, 0,
	1182, 0, 1289, 773, 0, 0, 1836, 1779, 0, 0,
	0, 0, 266, 268, 0, 270, 271, 272, 0, 986,
	0, 279, 276, 320, 889, 2146, 0, 0, 347, 342,
	0, 344, 0, 939, 2146, 937, 1814, 0, 961, 0,
	0, 0, 994, 1845, 1003, 1007, 1082, 0, 351, 0,
	1096, 1098, 0, 0, 1309, 0, 1311, 1312, 0, 296,
	297, 298, 0, 375, 0, 154, 155, 0, 378, 0,
	381, 0, 156, 2146, 1769, 387, 0, 390, 0, 0,
	0, 0, 1185, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 226, 0, 1288, 0, 1289, 226,
	226, 1289, 517, 1289, 519, 0, 0, 654, 226, 226,
	226, 659, 660, 662, 663, -2, -2, 758, 665, 666,
	725, 0, 0, 0, 724, 676, 0, 767, 2052, 777,
	725, 1909, 725, 1909, 725, 1909, 687, 689, 692, 717,
	700, 704, 0, 0, 0, 709, 0, 711, 0, 713,
	725, 726, 729, 734, 737, 742, 0, 0, 0, 0,
	0, 0, 0, 957, 0, 1058, 1213, 1141, 498, 1132,
	1212, 1133, 1140, 1143, 0, 0, 1145, 0, 1147, 0,
	1208, 1209, 1216, 1217, 0, 1227, 1228, 1220, 0, -2,
	0, 0, 1223, 1224, 1151, 0, 1168, 1169, 1170, 1197,
	1200, 1017, 0, 2278, 1421, 1320, 1422, 1423, 1798, 0,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	-2, -2, -2, -2, -2, -2, -2, -2, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, -2,
	-2, -2, 1462, 1463, -2, 1697, 1699, 0, 1762, 0,
	-2, 0, -2, -2, -2, -2, 1482, 0, 1484, 1489,
	1491, 1493, 0, 0, 0, 0, 1761, 1503, 1745, 1746,
	0, 0, 1676, 1677, 1678, 1488, 0, 1507, 1760, 1757,
	0, 0, 1709, 1196, 1566, 0, 0, 0, 0, 1573,
	1558, 1707, 0, 1706, 0, 0, 0, 1717, 0, 1752,
	1748, 0, 1796, 1416, 1403, 1404, 1405, 1406, 1407, 1408,
	1418, 0, 1793, 1822, 1828, 1650, 0, 0, 0, 1603,
	1604, 1605, 1606, 1607, 0, 1609, 1610, 0, 1612, 1613,
	0, 1615, 1616, 0, 1618, 1619, 1620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 0, 0, 1622, 0, 1720, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 1624, 0, 1626, 1711,
	1731, 0, 0, 1508, 0, 0, 0, 1674, 0, 1629,
	1711, 1739, 0, 0, 0, 0, 0, 1711, 0, 1744,
	0, 1636, 0, 1638, 1177, 0, 0, 1315, 0, 0,
	0, 1766, 1315, 1315, 0, 1233, 0, 0, 1296, 1297,
	1298, 0, 0, 1299, 0, 1290, 1294, 1291, 1292, 1286,
	1249, 0, 0, 1800, 1286, 1255, 1285, 0, 918, 1275,
	1286, 1286, 0, -2, 1259, 1276, 0, 0, 447, 449,
	451, 455, 457, 0, 0, 1196, -2, 0, 226, 917,
	0, 0, 0, 0, 466, 468, 0, 0, 460, 0,
	463, 0, 1316, 1319, 0, 0, 1330, 1336, 1337, 0,
	-2, 0, 0, 1401, 0, 0, 0, 0, 533, 0,
	1067, 1075, 0, 564, 0, 566, 0, 1787, 1791, 1788,
	1792, 0, 555, 0, 0, 0, 0, 1027, 125, 2146,
	0, 158, 0, 0, 882, 1806, 0, 0, 0, 0,
	1926, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 91, 96, 0, 0, 0, 0, 0,
	0, 0, 941, 942, 944, 951, 953, 0, 947, 1794,
	0, 0, 948, 0, 950, 952, 954, 0, 0, 0,
	0, 0, 0, 0, 0, 93, 97, 0, 0, 0,
	0, 1773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 982, 980, 974, 975, 976, 977, 978, 979,
	0, 0, -2, 217, 1772, 1782, 0, 240, 243, 246,
	249, 0, 274, 0, 0, 815, 788, 0, 0, 329,
	226, 0, 0, 343, 0, 935, 938, 0, 918, 2146,
	973, 1812, 0, 0, 0, 0, 992, 0, 2146, 1801,
	1844, 1845, 1084, 1090, 0, 1315, 0, 1114, 1099, 0,
	0, 0, 1114, 1118, 1119, 1121, 1122, 0, 0, 1310,
	0, 300, 399, 156, 156, 156, 384, 0, 0, 156,
	394, 156, 215, 396, 407, 459, 1185, 1185, 226, 224,
	2013, 222, 219, 221, 0, 0, 0, 816, 818, 819,
	820, 821, 0, 1845, 0, 1964, 1845, 0, 1102, 1104,
	0, 193, 199, 197, 226, 0, 341, 516, 521, 649,
	0, 655, 656, 657, 694, 719, 667, 669, 670, 671,
	0, 778, 776, 678, 725, 681, 725, 684, 725, 703,
	706, 708, 0, 0, 0, 721, 0, 0, 0, 0,
	0, 0, 0, 762, 763, 764, 766, 1307, 1136, 1137,
	1139, 0, 1148, 0, 0, 1222, -2, -2, 1221, 1225,
	1226, -2, -2, -2, -2, 1144, 0, 1153, 1150, 0,
	1207, 1015, 1016, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 1504, 0, -2, 1483, 1486, 1490, 1492, 1494,
	0, 0, 0, 0, 0, 0, 1700, 0, 1702, 1505,
	1755, 1758, 1672, 0, 0, 1195, 1196, 1196, 0, 1572,
	0, 1708, 0, 1715, 1716, 0, 1565, 0, 1749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1576, 0,
	0, 0, 0, 1608, 1611, 1614, 1617, 0, 0, 0,
	0, 1597, 0, 0, 0, 1601, 1371, 1357, 0, 1399,
	1397, 1398, 1392, 1399, 1396, 1349, 0, 1348, 0, 1621,
	0, 1623, 1625, 0, 0, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1511,
	1512, 1513, 1628, 1737, 1738, 0, 0, 0, 0, 0,
	0, 1634, 0, 1743, 1635, 1637, 1185, 0, 1178, 0,
	1235, 1230, 1314, 0, 1764, 1289, 1237, 1239, 1765, 1803,
	1230, 1230, 0, 1712, 0, 0, 1280, 0, 0, 0,
	1282, 1253, 0, 0, 1247, 0, 1243, 1244, 1245, 1246,
	1254, 918, 1284, 1256, 1260, 1822, 0, 1286, 0, 1271,
	0, 1273, 1305, 0, 1265, 1268, 0, 0, 1837, 227,
	251, 255, 256, 252, 253, 254, 475, 0, 0, 1714,
	0, 1321, 0, 1327, 0, 0, 0, 0, 479, 0,
	529, -2, 562, 563, 565, 0, 561, 122, 1028, 0,
	0, 1019, 0, 127, 2146, 136, 0, 856, 0, 1804,
	0, 0, 0, 0, 0, 1030, 0, 0, 2146, 156,
	2146, 156, 139, 142, 0, 146, 144, 0, 0, 847,
	83, 1028, 86, 90, 98, 0, 0, 0, 104, 0,
	0, 0, 1021, 0, 945, 946, 949, 955, 67, 0,
	1023, 1018, 148, 88, 92, 99, 0, 1025, 85, 0,
	170, 0, 0, 0, 162, 0, 163, 164, 171, 172,
	173, 175, 0, 156, 2146, 0, 981, 959, 960, 0,
	965, 187, 0, 1778, 0, 0, 0, 0, 0, 814,
	900, 0, 0, 0, 0, 335, 331, 0, 340, 346,
	345, 784, 0, 0, 0, -2, 996, 990, 991, 0,
	0, 0, 2146, 1086, 1090, 0, 1089, 1183, 1196, 350,
	1091, 1114, 0, 0, 0, 1101, 1097, 1094, 1315, 0,
	0, 0, 0, 0, 295, 376, 379, 382, 1770, 156,
	388, 391, 410, 411, 201, 0, 0, 0, 0, 0,
	226, 0, 0, 0, 825, 0, 1845, 1845, 0, 1808,
	0, 0, 0, 0, 194, 0, 518, 0, 0, 0,
	680, 682, 685, 710, 712, 725, 751, 752, 842, 0,
	842, 0, 0, 1146, 0, 1219, 1152, 1201, 1202, 0,
	1017, 0, 1424, 1467, 0, 0, -2, 0, 0, 1471,
	0, 0, 0, -2, 0, 0, 0, 1701, 1703, 0,
	1757, 1567, 0, 0, 0, 1571, 1555, 1556, 0, 1675,
	1718, 1747, 1751, 0, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 0, 1797, 1823, 1827, 1648, 1649, 1653, 1811, 0,
	0, 0, 1580, 0, 0, 0, 0, 0, 0, 0,
	0, 1390, 1394, 0, 0, 1719, 1730, 1732, 1509, 1510,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	-2, -2, -2, 1527, 1528, 1529, -2, -2, -2, 0,
	0, 0, 1733, 1735, 1736, 1740, 1741, 0, 1631, 1632,
	1633, 1742, 0, 1185, 1179, 1232, 0, 1313, 1236, 0,
	1232, 1232, 1192, 1278, 0, 0, 1301, 0, 1250, 0,
	1251, 0, 1283, 0, 1258, 1261, 1262, 1272, 0, 1264,
	0, 1267, 0, 1567, -2, 477, 461, 0, 0, 1323,
	0, 0, 1374, 1378, 1402, 481, 1287, 0, 0, 0,
	0, 157, 854, 881, 0, 0, 0, 1010, 1017, 0,
	0, 887, 129, 0, 0, 0, 137, 0, 0, 134,
	0, 141, 145, 0, 0, 0, 0, 0, 101, 102,
	103, 0, 108, 0, 109, 0, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 1014, 0, 0, 177, 0,
	0, 0, 984, 985, 181, 0, 0, 269, 918, 275,
	836, 888, 0, 890, 0, 789, 0, 0, 889, 327,
	0, 334, 0, 939, 0, 0, 962, 0, 995, 997,
	1005, 0, 0, 0, 1088, 1090, 0, 1081, 1082, 1215,
	1092, 1112, -2, 1111, 0, 1196, 1120, 1117, 1123, 1124,
	0, 385, 223, 0, 218, 220, 0, 204, 0, 0,
	817, 822, 0, 0, 0, 0, 0, 1103, 1105, 0,
	210, 0, 650, 672, 720, 753, 841, 0, 0, 755,
	0, 0, 1218, 1205, 1206, 1203, 1017, 1469, 1473, 0,
	0, 0, 1475, -2, 0, 1497, -2, -2, 1704, 1756,
	1546, 1196, 1568, 1570, 1557, 1750, 1419, 0, 1655, 1652,
	0, 1639, 0, 1592, 1593, 0, 0, 1596, 1598, 1599,
	1600, 1358, 1351, 1350, 1729, 0, 0, 0, 0, 1630,
	1180, 0, 1644, 0, 0, 1240, 1644, 1644, 1279, 0,
	1281, 1248, 1241, 0, 1823, 1274, 1266, 0, 0, 1317,
	1322, 0, 1328, 1373, 123, 124, 126, 0, 855, 0,
	858, 0, 0, 0, 0, 865, 866, 0, 0, 0,
	0, 0, 875, 0, 904, 914, 0, 1207, 0, 0,
	0, 131, 151, 0, 0, 1029, 0, 0, 156, 156,
	0, 0, 1020, 0, 0, 0, 0, 111, 0, 0,
	1022, 1024, 0, 0, 1026, 168, 169, 0, 156, 0,
	161, 156, 156, 1014, 0, 185, 0, 188, 0, 191,
	192, 216, 0, 844, 0, 900, 892, 893, 894, 0,
	899, 901, 0, 0, 802, 0, 798, 0, 0, 791,
	815, 788, 0, 332, 936, 970, 918, 988, 0, 0,
	0, 0, 0, 0, 1078, 1090, 0, 1083, 1084, 1114,
	1214, 0, 0, 0, 1100, 1215, 0, 225, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 520,
	522, 0, 0, 528, 840, 0, 0, 0, 0, 1204,
	1477, -2, -2, 1498, 0, 1824, 1826, 1196, 0, 1641,
	1198, 0, 0, -2, 0, 0, 0, 1181, 1164, 0,
	1231, 1229, 1165, 1166, 1300, 0, 1269, 0, 1324, 128,
	0, 859, 860, 1807, 862, 0, 864, 867, 0, 870,
	1847, 0, 874, 0, 883, 905, 0, 836, 0, 910,
	911, 912, 1011, 1012, 916, 0, 130, 132, 150, 1014,
	0, 133, 140, 0, 0, 87, 0, 0, 1902, 114,
	112, 110, 89, 0, 170, 176, 1013, 165, 178, 156,
	0, 0, 0, 0, 0, 788, 843, 0, 891, 0,
	902, 903, 792, 0, 790, 0, 0, 0, 0, 0,
	333, 336, 0, 339, 0, 998, 0, 1004, 0, 0,
	0, 0, 1085, 1086, 348, 0, 0, 0, 1114, 1125,
	203, 0, 0, 823, 826, 827, 828, 829, 830, 831,
	832, 833, 834, 824, 916, 0, 0, 880, 0, 208,
	0, 524, 0, 526, 0, 754, 756, 0, 0, 1569,
	1659, 0, 0, 1594, 1595, -2, 0, 1535, 1643, 1645,
	0, 1242, 1318, 857, 861, 0, 0, 0, 922, 0,
	0, 876, 0, 908, 909, 844, 0, 836, 0, 0,
	153, 0, 0, 0, 0, 0, 0, 0, 160, 179,
	1014, 189, 0, 190, 971, 792, 0, 0, 800, 0,
	803, 0, 799, 796, 797, 836, 0, 337, 338, 0,
	0, 1005, 0, 0, 1087, 1088, 0, 1107, 1108, 1110,
	1115, 0, 0, 914, 916, 1315, 0, 523, 0, 0,
	759, 760, 0, 0, 0, 0, 1654, 1199, 1536, 0,
	0, 0, 0, 869, 927, 0, 0, 0, 906, 907,
	904, 0, 885, 0, 918, 135, 0, 916, 0, 848,
	0, 0, 851, 0, 0, 115, 1902, 113, 0, 156,
	186, 786, 0, 0, 896, 898, 0, 804, 844, 802,
	972, 916, 0, 914, 0, 1079, 0, 1109, 226, 226,
	836, 914, 879, 226, 525, 527, 1651, 1671, 1660, -2,
	2107, 1906, 0, 1671, 1671, 1646, 1647, 0, 0, 871,
	923, 924, 0, 919, 920, 921, 1846, 872, 873, 1315,
	913, 0, 922, 152, 836, 845, 0, 0, 846, 0,
	0, 118, 0, 120, 180, 0, 895, 0, 0, 0,
	0, 788, 792, 914, 0, 836, 0, 1315, 205, 206,
	844, 836, 207, 1656, 0, 0, 1662, 1663, 1664, 1665,
	1666, 1657, 1658, 863, 0, 925, 0, 926, 0, 0,
	0, 884, 0, 927, 138, 849, 0, 852, 0, 116,
	0, 897, 793, 0, 795, 792, 801, 836, 0, 844,
	0, 1106, 1315, 844, 0, 1668, 1669, 0, 0, 0,
	928, 0, 931, 932, 0, 929, 0, 904, 0, 0,
	839, 794, 787, 844, 916, 1315, 914, 877, 1315, 1667,
	1670, 1661, 868, 930, 933, 934, 915, 886, 0, 0,
	835, 837, 838, 1315, 914, 1001, 836, 878, 844, 0,
	999, 836, 844, 850, 0, 844, 1315, 0, 1315, 1002,
	0, 1000, 844, 853,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 480, 3, 486, 481, 3,
	491, 492, 484, 482, 496, 483, 493, 485, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 499, 3,
	472, 474, 473, 477, 495, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 489, 3, 490, 487, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 497, 479, 498, 475,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 476,
	57815, 478, 57816, 488, 57817, 494, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1172
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1177
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1179
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1182
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1183
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1184
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1185
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1186
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1187
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1188
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1189
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1196
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1205
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1206
		{
			return helpWith(sqllex, "ALTER")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1209
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1210
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1211
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1212
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1213
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1214
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1215
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1216
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1270
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1296
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1307
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1326
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 67:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1330
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1344
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1363
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1395
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1399
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1403
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1409
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1413
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1419
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1428
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1439
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 89:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1443
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1449
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1457
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1467
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1471
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1481
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1492
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1499
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1511
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1518
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1526
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1531
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1535
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1540
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1546
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1554
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1565
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 108:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1575
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 109:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1585
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 110:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1594
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1605
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 112:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1611
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1619
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1623
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1627
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 116:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1631
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1637
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1642
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1653
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1657
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1663
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1667
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1674
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1679
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1684
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1689
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1694
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1699
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1704
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1709
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1714
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1719
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1724
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1733
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1745
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1755
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1762
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 138:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1766
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1774
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1781
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1790
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1799
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1804
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1811
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1819
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1820
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1824
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1828
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1834
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1842
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = nil
		}
	case 152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1852
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = nil
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1863
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1867
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1877
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1906
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1917
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1928
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1938
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].union.unresolvedObjectName(),
				},
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1947
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1956
		{
			return unimplementedWithIssueDetail(sqllex, 48700, "ALTER TYPE OWNER TO")
		}
	case 165:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1960
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1964
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1967
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1971
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1985
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 181:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2029
		{
			backup := &tree.Backup{
				To:              sqlDollar[4].union.partitionedBackup(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}

			tl := sqlDollar[2].union.targetListPtr()
			if tl == nil {
				backup.DescriptorCoverage = tree.AllDescriptors
			} else {
				backup.DescriptorCoverage = tree.RequestedDescriptors
				backup.Targets = *tl
			}

			sqlVAL.union.val = backup
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2047
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2051
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2055
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2063
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2078
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2082
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2091
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2095
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2099
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = &tree.Restore{DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.partitionedBackups(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2128
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.partitionedBackups(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2131
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = tree.PartitionedBackup{sqlDollar[1].union.expr()}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = tree.PartitionedBackup(sqlDollar[2].union.exprs())
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2145
		{
			sqlVAL.union.val = []tree.PartitionedBackup{sqlDollar[1].union.partitionedBackup()}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2149
		{
			sqlVAL.union.val = append(sqlDollar[1].union.partitionedBackups(), sqlDollar[3].union.partitionedBackup())
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2155
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2192
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2197
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2201
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2207
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2212
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2217
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2222
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2227
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2231
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 210:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2247
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2250
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2258
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2266
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2270
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2276
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2280
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2286
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2290
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2298
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2308
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2322
		{
			sqlVAL.union.val = nil
		}
	case 227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2328
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2342
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2343
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2344
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2345
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2363
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2365
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2368
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2387
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2395
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2401
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2404
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2431
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2437
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2440
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 251:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2444
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2452
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2465
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2471
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2476
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2488
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2490
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2491
		{
		}
	case 263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2492
		{
			return helpWith(sqllex, "CREATE")
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2495
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2496
		{
			return unimplemented(sqllex, "create cast")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2497
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2498
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2499
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2500
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 270:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2501
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2502
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2503
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2504
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2505
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2506
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2507
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2508
		{
			return unimplemented(sqllex, "create operator")
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2509
		{
			return unimplemented(sqllex, "create publication")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2510
		{
			return unimplemented(sqllex, "create rule")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2511
		{
			return unimplemented(sqllex, "create server")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2512
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2513
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2514
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2517
		{
		}
	case 285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2518
		{
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2521
		{
		}
	case 287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2522
		{
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2525
		{
		}
	case 289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2526
		{
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2529
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2530
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2531
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2532
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2533
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2534
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2535
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2536
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2537
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2538
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2539
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2540
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2541
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2542
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2543
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "drop")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2544
		{
			return unimplemented(sqllex, "drop server")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2545
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2546
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2547
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2551
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2552
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2553
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2554
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2555
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2557
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2558
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2559
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2560
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2578
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2582
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2586
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2592
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2596
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2605
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2612
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2618
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2628
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2639
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2651
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2659
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2667
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2687
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2698
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2702
		{

			sqlVAL.union.val = nil
		}
	case 348:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2716
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2726
		{
			return helpWith(sqllex, "DELETE")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2729
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2730
		{
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2738
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2741
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2742
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2743
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2744
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2745
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2754
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2755
		{
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2756
		{
			return helpWith(sqllex, "DROP")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2759
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2760
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2761
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2762
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2763
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2764
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2772
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2779
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2794
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2802
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2806
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2809
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2817
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2826
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2834
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2850
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2857
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2864
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2872
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2879
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2884
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2899
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2906
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2910
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2915
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2933
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2935
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2940
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2944
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2966
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2973
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2975
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2983
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2991
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2999
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3007
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3018
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3022
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3025
		{
			return helpWith(sqllex, "DELETE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3027
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3028
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3029
		{
			return helpWith(sqllex, "INSERT")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3030
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3032
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3033
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3034
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3037
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3042
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3043
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3044
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3049
		{
			return helpWith(sqllex, "DELETE")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3050
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3051
		{
			return helpWith(sqllex, "INSERT")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3053
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3057
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3058
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3062
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3066
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3076
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3084
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3092
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3096
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3100
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3110
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3117
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3125
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3129
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3133
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3143
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3147
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3151
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3158
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3178
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3182
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3186
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3189
		{
			return helpWith(sqllex, "GRANT")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3209
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3213
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3217
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3220
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3225
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3229
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3243
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3257
		{
			return helpWith(sqllex, "RESET")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3258
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3273
		{
			return helpWith(sqllex, "RESET")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3281
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3284
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3295
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3298
		{
			return helpWith(sqllex, "USE")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3302
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3303
		{
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3304
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3305
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3309
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3310
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3311
		{
			return helpWith(sqllex, "USE")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3327
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3345
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3363
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3371
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3375
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 521:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3379
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3389
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3399
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3403
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3407
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3411
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3425
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3435
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3451
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3455
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3460
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3477
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3480
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3482
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3485
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3489
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3508
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3515
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3520
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3525
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3530
		{
			return unimplemented(sqllex, "set from current")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3531
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3539
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3544
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3551
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3555
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3561
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3572
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3593
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3597
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3603
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3607
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3611
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3615
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3619
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3625
		{
			sqlVAL.union.val = tree.Low
		}
	case 568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3629
		{
			sqlVAL.union.val = tree.Normal
		}
	case 569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3633
		{
			sqlVAL.union.val = tree.High
		}
	case 570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3644
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3657
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3661
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3675
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3676
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3677
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3678
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3679
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3680
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3682
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3683
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3684
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3685
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3686
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3687
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3688
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3690
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3691
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3692
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3693
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3694
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3695
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3696
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3697
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3698
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3699
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3700
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3701
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3703
		{
			return helpWith(sqllex, "SHOW")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3704
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3709
		{
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3710
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3713
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3717
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3722
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3727
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3732
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3742
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3743
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3744
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3755
		{
			sqlVAL.str = "client_encoding"
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3758
		{
			sqlVAL.str = "timezone"
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3759
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3773
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3777
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3781
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3792
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3800
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3808
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3816
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3825
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3834
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3842
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3852
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3856
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3859
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3861
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3864
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3866
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3873
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3881
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3884
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3896
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3900
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3904
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3907
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3915
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3918
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3931
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3939
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3947
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3950
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3952
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3956
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3960
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3963
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3969
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3972
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3983
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3985
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3988
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3996
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3999
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4001
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4004
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4008
		{
			sqlVAL.union.val = true
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4010
		{
			sqlVAL.union.val = true
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4012
		{
			sqlVAL.union.val = false
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4022
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4026
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4029
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4030
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4032
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4036
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4039
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4041
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4049
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4057
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4066
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4069
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4071
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4074
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4076
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4080
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4083
		{
			sqlVAL.union.val = true
		}
	case 715:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4084
		{
			sqlVAL.union.val = false
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4092
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4095
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4097
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4100
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4108
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4118
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4128
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4131
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			sqlVAL.union.val = true
		}
	case 725:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4135
		{
			sqlVAL.union.val = false
		}
	case 726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4142
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4146
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4149
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4156
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4160
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4163
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4170
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4174
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4181
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4191
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4194
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4202
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4207
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4212
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4216
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4228
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4232
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4245
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4256
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4259
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4271
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4279
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4287
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4305
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4316
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4324
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4330
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4339
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4344
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4348
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4351
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4355
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4362
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 768:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4367
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4491
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4495
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4534
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4538
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4547
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4556
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4563
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 779:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4588
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4591
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4599
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4611
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4650
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:4665
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4682
		{
			sqlVAL.union.val = nil
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4686
		{

			sqlVAL.union.val = nil
		}
	case 790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4692
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4697
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4707
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4712
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4717
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4724
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4734
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 800:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4744
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
			}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4757
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4771
		{
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4772
		{
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4773
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = true
		}
	case 806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = true
		}
	case 807:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4793
		{
			sqlVAL.union.val = false
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = true
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4798
		{
			sqlVAL.union.val = true
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4799
		{
			sqlVAL.union.val = true
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4800
		{
			sqlVAL.union.val = true
		}
	case 813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4801
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4806
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4822
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4832
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4841
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4845
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 825:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4851
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4856
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4857
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4858
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4859
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4860
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4862
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4863
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4864
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4869
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4885
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4890
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 839:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4895
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4901
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 842:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4908
		{
			sqlVAL.str = ""
		}
	case 844:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4915
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 845:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4921
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4928
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4941
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4945
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 850:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4951
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4961
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 853:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4971
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4985
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4996
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 856:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5000
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5006
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5010
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5014
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5018
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5022
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5026
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5052
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5056
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5060
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5064
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5071
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5075
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5079
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5089
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5093
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5097
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5104
		{
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5105
		{
		}
	case 877:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
				Predicate:   sqlDollar[10].union.expr(),
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5122
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
					Predicate:   sqlDollar[11].union.expr(),
				},
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5136
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:      tree.Name(sqlDollar[3].str),
				Columns:   sqlDollar[5].union.idxElems(),
				Inverted:  true,
				Predicate: sqlDollar[7].union.expr(),
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5147
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5164
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5176
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5200
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5211
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5218
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 889:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5222
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5228
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5238
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5249
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5253
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5260
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5266
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5277
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5293
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 900:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5297
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5303
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5307
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5313
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5318
		{
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5319
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5320
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5321
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5322
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5323
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 914:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5351
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 918:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5367
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5387
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5391
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5395
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5399
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5408
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5420
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5424
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5430
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5436
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5448
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5452
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5456
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5460
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5479
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5488
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5496
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5500
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5503
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5504
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5507
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5511
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5512
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5522
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5525
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5527
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5529
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5531
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5532
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5534
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5535
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5537
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5539
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5547
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5550
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5554
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5568
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5572
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5575
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5590
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5596
		{
			sqlVAL.union.val = true
		}
	case 968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5600
		{

			sqlVAL.union.val = true
		}
	case 969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = false
		}
	case 970:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5615
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5629
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Temporary:   sqlDollar[4].union.persistenceType(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5641
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5652
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5660
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5664
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5668
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5686
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5690
		{
			sqlVAL.union.val = nil
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5696
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5700
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5705
		{
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5706
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5715
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5722
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5724
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 991:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5726
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5728
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5730
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5732
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5736
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 996:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5740
		{
			sqlVAL.union.val = []string(nil)
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5746
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 999:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5768
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[5].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Columns:      sqlDollar[10].union.idxElems(),
				Sharded:      sqlDollar[12].union.shardedIndexDef(),
				Storing:      sqlDollar[13].union.nameList(),
				Interleave:   sqlDollar[14].union.interleave(),
				PartitionBy:  sqlDollar[15].union.partitionBy(),
				Predicate:    sqlDollar[16].union.expr(),
				Inverted:     sqlDollar[8].union.bool(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:5785
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[8].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Sharded:      sqlDollar[15].union.shardedIndexDef(),
				Storing:      sqlDollar[16].union.nameList(),
				Interleave:   sqlDollar[17].union.interleave(),
				PartitionBy:  sqlDollar[18].union.partitionBy(),
				Inverted:     sqlDollar[11].union.bool(),
				Predicate:    sqlDollar[19].union.expr(),
				Concurrently: sqlDollar[4].union.bool(),
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5803
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[6].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				Columns:      sqlDollar[10].union.idxElems(),
				Storing:      sqlDollar[12].union.nameList(),
				Interleave:   sqlDollar[13].union.interleave(),
				PartitionBy:  sqlDollar[14].union.partitionBy(),
				Predicate:    sqlDollar[15].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:5819
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:         tree.Name(sqlDollar[9].str),
				Table:        table,
				Unique:       sqlDollar[2].union.bool(),
				Inverted:     true,
				IfNotExists:  true,
				Columns:      sqlDollar[13].union.idxElems(),
				Storing:      sqlDollar[15].union.nameList(),
				Interleave:   sqlDollar[16].union.interleave(),
				PartitionBy:  sqlDollar[17].union.partitionBy(),
				Predicate:    sqlDollar[18].union.expr(),
				Concurrently: sqlDollar[5].union.bool(),
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5835
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5839
		{

			switch sqlDollar[2].str {
			case "gin":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "gist", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5854
		{
			sqlVAL.union.val = false
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5860
		{
			sqlVAL.union.val = true
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = false
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5870
		{
			sqlVAL.union.val = true
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5874
		{
			sqlVAL.union.val = false
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5880
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5884
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5893
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5915
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5916
		{
			sqlVAL.str = ""
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5920
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5924
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5928
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5940
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5946
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5954
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5960
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5968
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5974
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5982
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5986
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5991
		{
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5992
		{
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5995
		{
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5996
		{
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6004
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6007
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6026
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6029
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6040
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6044
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6045
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6046
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6065
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6070
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6083
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6088
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6092
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6097
		{
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6098
		{
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6099
		{
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6113
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6116
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6119
		{
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6120
		{
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6124
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6128
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6138
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6148
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6161
		{
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6163
		{
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6167
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6172
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6176
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6180
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6186
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6192
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6222
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6232
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.str = ""
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6246
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.str = ""
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.str = ""
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6266
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6270
		{
			sqlVAL.str = ""
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6275
		{
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6276
		{
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6288
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6295
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6302
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6313
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6320
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6324
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6333
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6382
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6386
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6390
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6396
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6399
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6400
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6408
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6446
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6449
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6478
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6482
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6550
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6554
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6558
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6578
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6584
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6588
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6592
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6596
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6611
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6612
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6613
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6614
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6617
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6621
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6628
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6663
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6664
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6665
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6687
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6700
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6714
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6726
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6730
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6770
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6782
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6786
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6791
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6797
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6801
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6807
		{
			sqlVAL.union.val = true
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6811
		{
			sqlVAL.union.val = false
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6817
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6839
		{
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6840
		{
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = nil
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6853
		{
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6854
		{
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = true
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = false
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = false
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = true
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6878
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6883
		{
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6884
		{
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6888
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6892
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6904
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6919
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6925
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6946
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6951
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6963
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6967
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6971
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6980
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7013
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7027
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7031
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7039
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7046
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7068
		{
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7069
		{
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7072
		{
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7073
		{
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7090
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7100
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7104
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7123
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7126
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7128
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7143
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7145
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7151
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7155
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7161
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7165
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7170
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7175
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7186
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7198
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7213
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7217
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7256
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7266
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7276
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7284
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7301
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7312
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7336
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7342
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7357
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7363
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7365
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7375
		{
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7377
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7380
		{
			sqlVAL.union.val = nil
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = true
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = false
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7432
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.str = tree.AstFull
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.str = tree.AstRight
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7488
		{
			sqlVAL.str = tree.AstInner
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7494
		{
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7495
		{
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7516
		{
			sqlVAL.str = tree.AstHash
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7520
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.str = ""
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7541
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7550
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7551
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7553
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7557
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7562
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7580
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7586
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7592
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7602
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7612
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7631
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7644
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7652
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7653
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7663
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7671
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7673
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7681
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7694
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7701
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7710
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7750
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.IDTypeReference{ID: uint32(id)}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7755
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7762
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7763
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7767
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7769
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7770
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7771
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7772
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7773
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.union.val = types.Geography
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7777
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7779
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7783
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7787
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7795
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7821
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7829
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7837
		{
			sqlVAL.union.val = nil
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7844
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = types.Int2
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = types.Int
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7860
		{
			sqlVAL.union.val = types.Float4
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = types.Float
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7872
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7880
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7888
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.union.val = types.Bool
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7902
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7915
		{
			sqlVAL.union.val = types.Float
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7921
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7927
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7943
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7949
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = types.String
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = true
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7989
		{
			sqlVAL.union.val = false
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = types.Date
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7998
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8006
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8018
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8020
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8029
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8037
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8054
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8064
		{
			sqlVAL.union.val = true
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8065
		{
			sqlVAL.union.val = false
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = false
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = types.Interval
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8078
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8089
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8113
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8121
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8144
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8162
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8177
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8193
		{
			sqlVAL.union.val = nil
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8207
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8244
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8267
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8272
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8280
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8288
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8292
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8296
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8300
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8304
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8308
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8332
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8336
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8352
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8364
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8368
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8384
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8388
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8412
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8420
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8424
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8432
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8436
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8440
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8452
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8492
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8496
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8508
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8512
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8519
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8521
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8525
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8529
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8533
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8541
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8545
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8549
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8553
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8561
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8569
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8573
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8581
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8585
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8607
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8619
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8631
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8635
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8643
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8651
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8663
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8667
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8671
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8691
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8711
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8715
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8723
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8727
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8741
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8785
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8801
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8806
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8808
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8816
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8820
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8828
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8832
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8841
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8848
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8852
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8856
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8867
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8886
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8890
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8894
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8897
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8898
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8910
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8913
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8922
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8988
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9009
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9029
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9033
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9037
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9041
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9045
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9067
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9071
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9087
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9091
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9095
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9099
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9103
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9113
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9118
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9120
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9127
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9129
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9136
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9145
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9154
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9159
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9161
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9164
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9169
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9174
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9180
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9183
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9184
		{
			return unimplemented(sqllex, "treat")
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9198
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9205
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9210
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9226
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9257
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9265
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9300
		{
			sqlVAL.str = ""
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9324
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9332
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9346
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9359
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9415
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9427
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9456
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9468
		{
			sqlVAL.union.val = tree.Any
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.union.val = tree.Some
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9476
		{
			sqlVAL.union.val = tree.All
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = tree.Div
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9486
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9489
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = tree.LT
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9492
		{
			sqlVAL.union.val = tree.GT
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = tree.LE
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = tree.GE
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.union.val = tree.NE
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = tree.Like
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9565
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9586
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9626
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9653
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9663
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9713
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9751
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9768
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9785
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9791
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9817
		{
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9818
		{
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9857
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9861
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9890
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9898
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9952
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9971
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9987
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9996
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10007
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10016
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10024
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10036
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10152
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10166
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10214
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10227
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10234
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.str = ""
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
