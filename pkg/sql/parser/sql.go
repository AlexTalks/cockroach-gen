// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionArgs() tree.FuncArgs {
	return u.val.(tree.FuncArgs)
}
func (u *sqlSymUnion) functionArg() tree.FuncArg {
	return u.val.(tree.FuncArg)
}
func (u *sqlSymUnion) functionArgClass() tree.FuncArgClass {
	return u.val.(tree.FuncArgClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}

//line sql-gen.y:960
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECONDARY = lexbase.SECONDARY
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECONDARY",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15218

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 5,
	-2, 1834,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 63,
	281, 526,
	-2, 0,
	-1, 75,
	8, 987,
	29, 987,
	643, 987,
	644, 987,
	-2, 0,
	-1, 76,
	8, 987,
	29, 987,
	643, 987,
	644, 987,
	-2, 0,
	-1, 78,
	1, 1681,
	139, 1681,
	269, 1681,
	356, 1681,
	419, 1681,
	429, 1681,
	624, 1681,
	656, 1681,
	-2, 0,
	-1, 79,
	1, 1681,
	656, 1681,
	-2, 0,
	-1, 85,
	262, 274,
	562, 274,
	-2, 0,
	-1, 99,
	203, 448,
	248, 1558,
	264, 1558,
	281, 448,
	421, 448,
	433, 1301,
	477, 448,
	493, 1301,
	546, 1301,
	575, 448,
	602, 1301,
	-2, 0,
	-1, 106,
	141, 1834,
	257, 1834,
	586, 1834,
	587, 1834,
	-2, 0,
	-1, 124,
	160, 1805,
	181, 1805,
	194, 1805,
	260, 1805,
	295, 1805,
	369, 1805,
	380, 1805,
	581, 1805,
	-2, 1776,
	-1, 166,
	168, 1121,
	280, 1121,
	424, 1082,
	498, 1082,
	545, 1082,
	565, 1121,
	567, 1082,
	-2, 0,
	-1, 171,
	4, 1836,
	21, 1836,
	22, 1836,
	23, 1836,
	24, 1836,
	25, 1836,
	26, 1836,
	27, 1836,
	28, 1836,
	30, 1836,
	31, 1836,
	37, 1836,
	41, 1836,
	43, 1836,
	44, 1836,
	45, 1836,
	47, 1836,
	48, 1836,
	49, 1836,
	50, 1836,
	51, 1836,
	52, 1836,
	53, 1836,
	54, 1836,
	55, 1836,
	57, 1836,
	58, 1836,
	59, 1836,
	60, 1836,
	62, 1836,
	63, 1836,
	64, 1836,
	65, 1836,
	66, 1836,
	67, 1836,
	68, 1836,
	69, 1836,
	73, 1836,
	74, 1836,
	75, 1836,
	76, 1836,
	78, 1836,
	79, 1836,
	80, 1836,
	84, 1836,
	85, 1836,
	86, 1836,
	87, 1836,
	88, 1836,
	89, 1836,
	90, 1836,
	91, 1836,
	94, 1836,
	95, 1836,
	96, 1836,
	97, 1836,
	98, 1836,
	100, 1836,
	102, 1836,
	103, 1836,
	104, 1836,
	105, 1836,
	106, 1836,
	107, 1836,
	108, 1836,
	110, 1836,
	111, 1836,
	112, 1836,
	114, 1836,
	115, 1836,
	116, 1836,
	124, 1836,
	125, 1836,
	126, 1836,
	127, 1836,
	128, 1836,
	130, 1836,
	131, 1836,
	132, 1836,
	133, 1836,
	135, 1836,
	136, 1836,
	137, 1836,
	138, 1836,
	140, 1836,
	141, 1836,
	142, 1836,
	144, 1836,
	145, 1836,
	146, 1836,
	149, 1836,
	150, 1836,
	151, 1836,
	153, 1836,
	154, 1836,
	155, 1836,
	157, 1836,
	158, 1836,
	159, 1836,
	161, 1836,
	162, 1836,
	163, 1836,
	164, 1836,
	165, 1836,
	166, 1836,
	167, 1836,
	168, 1836,
	169, 1836,
	170, 1836,
	171, 1836,
	172, 1836,
	173, 1836,
	174, 1836,
	175, 1836,
	176, 1836,
	177, 1836,
	178, 1836,
	180, 1836,
	186, 1836,
	187, 1836,
	188, 1836,
	189, 1836,
	193, 1836,
	195, 1836,
	196, 1836,
	197, 1836,
	199, 1836,
	200, 1836,
	203, 1836,
	204, 1836,
	205, 1836,
	206, 1836,
	207, 1836,
	208, 1836,
	209, 1836,
	210, 1836,
	211, 1836,
	212, 1836,
	213, 1836,
	214, 1836,
	215, 1836,
	216, 1836,
	218, 1836,
	219, 1836,
	221, 1836,
	222, 1836,
	224, 1836,
	225, 1836,
	226, 1836,
	227, 1836,
	228, 1836,
	229, 1836,
	230, 1836,
	231, 1836,
	232, 1836,
	233, 1836,
	234, 1836,
	236, 1836,
	237, 1836,
	238, 1836,
	240, 1836,
	241, 1836,
	242, 1836,
	243, 1836,
	244, 1836,
	248, 1836,
	249, 1836,
	250, 1836,
	251, 1836,
	254, 1836,
	255, 1836,
	256, 1836,
	257, 1836,
	258, 1836,
	259, 1836,
	261, 1836,
	263, 1836,
	264, 1836,
	265, 1836,
	267, 1836,
	269, 1836,
	270, 1836,
	271, 1836,
	273, 1836,
	277, 1836,
	278, 1836,
	279, 1836,
	280, 1836,
	281, 1836,
	282, 1836,
	284, 1836,
	285, 1836,
	286, 1836,
	288, 1836,
	289, 1836,
	290, 1836,
	292, 1836,
	293, 1836,
	296, 1836,
	297, 1836,
	298, 1836,
	299, 1836,
	300, 1836,
	301, 1836,
	302, 1836,
	305, 1836,
	306, 1836,
	307, 1836,
	308, 1836,
	310, 1836,
	311, 1836,
	312, 1836,
	313, 1836,
	314, 1836,
	315, 1836,
	316, 1836,
	317, 1836,
	318, 1836,
	319, 1836,
	320, 1836,
	321, 1836,
	322, 1836,
	323, 1836,
	324, 1836,
	325, 1836,
	326, 1836,
	327, 1836,
	328, 1836,
	329, 1836,
	330, 1836,
	331, 1836,
	332, 1836,
	334, 1836,
	336, 1836,
	337, 1836,
	338, 1836,
	339, 1836,
	340, 1836,
	341, 1836,
	342, 1836,
	343, 1836,
	344, 1836,
	345, 1836,
	346, 1836,
	347, 1836,
	348, 1836,
	349, 1836,
	350, 1836,
	351, 1836,
	352, 1836,
	354, 1836,
	355, 1836,
	357, 1836,
	359, 1836,
	360, 1836,
	361, 1836,
	362, 1836,
	364, 1836,
	365, 1836,
	366, 1836,
	367, 1836,
	368, 1836,
	371, 1836,
	373, 1836,
	375, 1836,
	376, 1836,
	377, 1836,
	378, 1836,
	381, 1836,
	382, 1836,
	383, 1836,
	385, 1836,
	387, 1836,
	388, 1836,
	389, 1836,
	390, 1836,
	391, 1836,
	392, 1836,
	393, 1836,
	394, 1836,
	395, 1836,
	396, 1836,
	397, 1836,
	398, 1836,
	399, 1836,
	400, 1836,
	402, 1836,
	403, 1836,
	404, 1836,
	405, 1836,
	406, 1836,
	407, 1836,
	408, 1836,
	409, 1836,
	410, 1836,
	411, 1836,
	412, 1836,
	413, 1836,
	414, 1836,
	415, 1836,
	416, 1836,
	418, 1836,
	419, 1836,
	420, 1836,
	422, 1836,
	423, 1836,
	424, 1836,
	425, 1836,
	426, 1836,
	427, 1836,
	428, 1836,
	429, 1836,
	430, 1836,
	431, 1836,
	432, 1836,
	433, 1836,
	434, 1836,
	435, 1836,
	437, 1836,
	439, 1836,
	440, 1836,
	441, 1836,
	447, 1836,
	448, 1836,
	449, 1836,
	451, 1836,
	452, 1836,
	453, 1836,
	454, 1836,
	455, 1836,
	456, 1836,
	457, 1836,
	458, 1836,
	459, 1836,
	460, 1836,
	461, 1836,
	463, 1836,
	464, 1836,
	465, 1836,
	466, 1836,
	467, 1836,
	469, 1836,
	470, 1836,
	471, 1836,
	472, 1836,
	473, 1836,
	474, 1836,
	475, 1836,
	477, 1836,
	478, 1836,
	479, 1836,
	480, 1836,
	481, 1836,
	482, 1836,
	483, 1836,
	484, 1836,
	485, 1836,
	486, 1836,
	487, 1836,
	488, 1836,
	489, 1836,
	490, 1836,
	491, 1836,
	493, 1836,
	494, 1836,
	495, 1836,
	496, 1836,
	497, 1836,
	498, 1836,
	500, 1836,
	501, 1836,
	502, 1836,
	503, 1836,
	504, 1836,
	505, 1836,
	506, 1836,
	508, 1836,
	509, 1836,
	510, 1836,
	511, 1836,
	512, 1836,
	513, 1836,
	514, 1836,
	515, 1836,
	517, 1836,
	519, 1836,
	520, 1836,
	521, 1836,
	522, 1836,
	523, 1836,
	524, 1836,
	525, 1836,
	526, 1836,
	527, 1836,
	528, 1836,
	529, 1836,
	530, 1836,
	531, 1836,
	532, 1836,
	533, 1836,
	534, 1836,
	535, 1836,
	536, 1836,
	537, 1836,
	538, 1836,
	539, 1836,
	541, 1836,
	542, 1836,
	544, 1836,
	545, 1836,
	547, 1836,
	548, 1836,
	549, 1836,
	550, 1836,
	551, 1836,
	552, 1836,
	554, 1836,
	555, 1836,
	557, 1836,
	558, 1836,
	559, 1836,
	560, 1836,
	561, 1836,
	563, 1836,
	565, 1836,
	566, 1836,
	567, 1836,
	568, 1836,
	569, 1836,
	570, 1836,
	571, 1836,
	572, 1836,
	574, 1836,
	575, 1836,
	576, 1836,
	577, 1836,
	578, 1836,
	579, 1836,
	580, 1836,
	583, 1836,
	584, 1836,
	585, 1836,
	586, 1836,
	587, 1836,
	588, 1836,
	589, 1836,
	590, 1836,
	592, 1836,
	595, 1836,
	596, 1836,
	597, 1836,
	598, 1836,
	599, 1836,
	600, 1836,
	602, 1836,
	603, 1836,
	604, 1836,
	605, 1836,
	606, 1836,
	607, 1836,
	608, 1836,
	609, 1836,
	610, 1836,
	615, 1836,
	616, 1836,
	617, 1836,
	618, 1836,
	619, 1836,
	620, 1836,
	-2, 0,
	-1, 173,
	1, 1681,
	656, 1681,
	659, 1681,
	-2, 0,
	-1, 174,
	1, 1681,
	562, 1681,
	656, 1681,
	659, 1681,
	-2, 0,
	-1, 207,
	160, 1804,
	181, 1804,
	194, 1804,
	260, 1804,
	295, 1804,
	369, 1804,
	380, 1804,
	581, 1804,
	-2, 1779,
	-1, 261,
	4, 1843,
	5, 1843,
	6, 1843,
	7, 1843,
	8, 1843,
	9, 1843,
	10, 1843,
	21, 1843,
	22, 1843,
	23, 1843,
	24, 1843,
	25, 1843,
	26, 1843,
	27, 1843,
	28, 1843,
	30, 1843,
	31, 1843,
	37, 1843,
	38, 1843,
	41, 1843,
	43, 1843,
	44, 1843,
	45, 1843,
	46, 1843,
	47, 1843,
	48, 1843,
	49, 1843,
	50, 1843,
	51, 1843,
	52, 1843,
	53, 1843,
	54, 1843,
	55, 1843,
	57, 1843,
	58, 1843,
	59, 1843,
	60, 1843,
	62, 1843,
	63, 1843,
	64, 1843,
	65, 1843,
	66, 1843,
	67, 1843,
	68, 1843,
	69, 1843,
	70, 1843,
	71, 1843,
	72, 1843,
	73, 1843,
	74, 1843,
	75, 1843,
	76, 1843,
	78, 1843,
	79, 1843,
	80, 1843,
	82, 1843,
	84, 1843,
	85, 1843,
	86, 1843,
	87, 1843,
	88, 1843,
	89, 1843,
	90, 1843,
	91, 1843,
	94, 1843,
	95, 1843,
	96, 1843,
	97, 1843,
	98, 1843,
	100, 1843,
	102, 1843,
	103, 1843,
	104, 1843,
	105, 1843,
	106, 1843,
	107, 1843,
	108, 1843,
	110, 1843,
	111, 1843,
	112, 1843,
	113, 1843,
	114, 1843,
	115, 1843,
	116, 1843,
	117, 1843,
	118, 1843,
	119, 1843,
	120, 1843,
	121, 1843,
	122, 1843,
	123, 1843,
	124, 1843,
	125, 1843,
	126, 1843,
	127, 1843,
	128, 1843,
	129, 1843,
	130, 1843,
	131, 1843,
	132, 1843,
	133, 1843,
	134, 1843,
	135, 1843,
	136, 1843,
	137, 1843,
	138, 1843,
	140, 1843,
	141, 1843,
	142, 1843,
	144, 1843,
	145, 1843,
	146, 1843,
	149, 1843,
	150, 1843,
	151, 1843,
	153, 1843,
	154, 1843,
	155, 1843,
	157, 1843,
	158, 1843,
	159, 1843,
	161, 1843,
	162, 1843,
	163, 1843,
	164, 1843,
	165, 1843,
	166, 1843,
	167, 1843,
	168, 1843,
	169, 1843,
	170, 1843,
	171, 1843,
	172, 1843,
	173, 1843,
	174, 1843,
	175, 1843,
	176, 1843,
	177, 1843,
	178, 1843,
	179, 1843,
	180, 1843,
	186, 1843,
	187, 1843,
	188, 1843,
	189, 1843,
	193, 1843,
	195, 1843,
	196, 1843,
	197, 1843,
	199, 1843,
	200, 1843,
	202, 1843,
	203, 1843,
	204, 1843,
	205, 1843,
	206, 1843,
	207, 1843,
	208, 1843,
	209, 1843,
	210, 1843,
	211, 1843,
	212, 1843,
	213, 1843,
	214, 1843,
	215, 1843,
	216, 1843,
	218, 1843,
	219, 1843,
	221, 1843,
	222, 1843,
	224, 1843,
	225, 1843,
	226, 1843,
	227, 1843,
	228, 1843,
	229, 1843,
	230, 1843,
	231, 1843,
	232, 1843,
	233, 1843,
	234, 1843,
	235, 1843,
	236, 1843,
	237, 1843,
	238, 1843,
	240, 1843,
	241, 1843,
	242, 1843,
	243, 1843,
	244, 1843,
	248, 1843,
	249, 1843,
	250, 1843,
	251, 1843,
	253, 1843,
	254, 1843,
	255, 1843,
	256, 1843,
	257, 1843,
	258, 1843,
	259, 1843,
	261, 1843,
	263, 1843,
	264, 1843,
	265, 1843,
	266, 1843,
	267, 1843,
	268, 1843,
	269, 1843,
	270, 1843,
	271, 1843,
	272, 1843,
	273, 1843,
	277, 1843,
	278, 1843,
	279, 1843,
	280, 1843,
	281, 1843,
	282, 1843,
	284, 1843,
	285, 1843,
	286, 1843,
	288, 1843,
	289, 1843,
	290, 1843,
	291, 1843,
	292, 1843,
	293, 1843,
	294, 1843,
	296, 1843,
	297, 1843,
	298, 1843,
	299, 1843,
	300, 1843,
	301, 1843,
	302, 1843,
	303, 1843,
	304, 1843,
	305, 1843,
	306, 1843,
	307, 1843,
	308, 1843,
	310, 1843,
	311, 1843,
	312, 1843,
	313, 1843,
	314, 1843,
	315, 1843,
	316, 1843,
	317, 1843,
	318, 1843,
	319, 1843,
	320, 1843,
	321, 1843,
	322, 1843,
	323, 1843,
	324, 1843,
	325, 1843,
	326, 1843,
	327, 1843,
	328, 1843,
	329, 1843,
	330, 1843,
	331, 1843,
	332, 1843,
	334, 1843,
	335, 1843,
	336, 1843,
	337, 1843,
	338, 1843,
	339, 1843,
	340, 1843,
	341, 1843,
	342, 1843,
	343, 1843,
	344, 1843,
	345, 1843,
	346, 1843,
	347, 1843,
	348, 1843,
	349, 1843,
	350, 1843,
	351, 1843,
	352, 1843,
	353, 1843,
	354, 1843,
	355, 1843,
	356, 1843,
	357, 1843,
	358, 1843,
	359, 1843,
	360, 1843,
	361, 1843,
	362, 1843,
	363, 1843,
	364, 1843,
	365, 1843,
	366, 1843,
	367, 1843,
	368, 1843,
	371, 1843,
	373, 1843,
	376, 1843,
	377, 1843,
	378, 1843,
	381, 1843,
	382, 1843,
	383, 1843,
	384, 1843,
	385, 1843,
	386, 1843,
	387, 1843,
	388, 1843,
	389, 1843,
	390, 1843,
	391, 1843,
	392, 1843,
	393, 1843,
	394, 1843,
	395, 1843,
	396, 1843,
	397, 1843,
	398, 1843,
	399, 1843,
	400, 1843,
	402, 1843,
	403, 1843,
	404, 1843,
	405, 1843,
	406, 1843,
	407, 1843,
	408, 1843,
	409, 1843,
	410, 1843,
	411, 1843,
	412, 1843,
	413, 1843,
	414, 1843,
	415, 1843,
	416, 1843,
	418, 1843,
	419, 1843,
	420, 1843,
	422, 1843,
	423, 1843,
	424, 1843,
	425, 1843,
	426, 1843,
	427, 1843,
	428, 1843,
	429, 1843,
	430, 1843,
	431, 1843,
	432, 1843,
	433, 1843,
	434, 1843,
	435, 1843,
	437, 1843,
	439, 1843,
	440, 1843,
	441, 1843,
	447, 1843,
	448, 1843,
	449, 1843,
	451, 1843,
	452, 1843,
	453, 1843,
	454, 1843,
	455, 1843,
	456, 1843,
	457, 1843,
	458, 1843,
	459, 1843,
	460, 1843,
	461, 1843,
	463, 1843,
	464, 1843,
	465, 1843,
	466, 1843,
	467, 1843,
	468, 1843,
	469, 1843,
	470, 1843,
	471, 1843,
	472, 1843,
	473, 1843,
	474, 1843,
	475, 1843,
	477, 1843,
	478, 1843,
	479, 1843,
	480, 1843,
	481, 1843,
	482, 1843,
	483, 1843,
	484, 1843,
	485, 1843,
	486, 1843,
	487, 1843,
	488, 1843,
	489, 1843,
	490, 1843,
	491, 1843,
	493, 1843,
	494, 1843,
	495, 1843,
	496, 1843,
	497, 1843,
	498, 1843,
	499, 1843,
	500, 1843,
	501, 1843,
	502, 1843,
	503, 1843,
	504, 1843,
	505, 1843,
	506, 1843,
	507, 1843,
	508, 1843,
	509, 1843,
	510, 1843,
	511, 1843,
	512, 1843,
	513, 1843,
	514, 1843,
	515, 1843,
	517, 1843,
	519, 1843,
	520, 1843,
	521, 1843,
	522, 1843,
	523, 1843,
	524, 1843,
	525, 1843,
	526, 1843,
	527, 1843,
	528, 1843,
	529, 1843,
	530, 1843,
	531, 1843,
	532, 1843,
	533, 1843,
	534, 1843,
	535, 1843,
	536, 1843,
	537, 1843,
	538, 1843,
	539, 1843,
	541, 1843,
	542, 1843,
	543, 1843,
	544, 1843,
	545, 1843,
	547, 1843,
	548, 1843,
	549, 1843,
	550, 1843,
	551, 1843,
	552, 1843,
	554, 1843,
	555, 1843,
	557, 1843,
	558, 1843,
	559, 1843,
	560, 1843,
	561, 1843,
	563, 1843,
	565, 1843,
	566, 1843,
	567, 1843,
	568, 1843,
	569, 1843,
	570, 1843,
	571, 1843,
	572, 1843,
	573, 1843,
	574, 1843,
	575, 1843,
	576, 1843,
	577, 1843,
	578, 1843,
	579, 1843,
	580, 1843,
	582, 1843,
	583, 1843,
	584, 1843,
	585, 1843,
	586, 1843,
	587, 1843,
	588, 1843,
	589, 1843,
	590, 1843,
	591, 1843,
	592, 1843,
	595, 1843,
	596, 1843,
	597, 1843,
	598, 1843,
	599, 1843,
	600, 1843,
	602, 1843,
	603, 1843,
	604, 1843,
	605, 1843,
	606, 1843,
	607, 1843,
	608, 1843,
	609, 1843,
	610, 1843,
	615, 1843,
	616, 1843,
	617, 1843,
	618, 1843,
	619, 1843,
	620, 1843,
	621, 1843,
	636, 1843,
	643, 1843,
	644, 1843,
	645, 1843,
	653, 1843,
	657, 1843,
	-2, 0,
	-1, 833,
	4, 1556,
	21, 1556,
	22, 1556,
	23, 1556,
	24, 1556,
	25, 1556,
	26, 1556,
	27, 1556,
	28, 1556,
	30, 1556,
	31, 1556,
	37, 1556,
	41, 1556,
	43, 1556,
	44, 1556,
	45, 1556,
	47, 1556,
	48, 1556,
	49, 1556,
	50, 1556,
	51, 1556,
	52, 1556,
	53, 1556,
	54, 1556,
	55, 1556,
	57, 1556,
	58, 1556,
	59, 1556,
	60, 1556,
	62, 1556,
	63, 1556,
	64, 1556,
	65, 1556,
	66, 1556,
	67, 1556,
	68, 1556,
	69, 1556,
	73, 1556,
	74, 1556,
	75, 1556,
	76, 1556,
	78, 1556,
	79, 1556,
	80, 1556,
	84, 1556,
	85, 1556,
	86, 1556,
	87, 1556,
	88, 1556,
	89, 1556,
	90, 1556,
	91, 1556,
	94, 1556,
	95, 1556,
	96, 1556,
	97, 1556,
	98, 1556,
	100, 1556,
	102, 1556,
	103, 1556,
	104, 1556,
	105, 1556,
	106, 1556,
	107, 1556,
	108, 1556,
	110, 1556,
	111, 1556,
	112, 1556,
	114, 1556,
	115, 1556,
	116, 1556,
	124, 1556,
	125, 1556,
	126, 1556,
	127, 1556,
	128, 1556,
	130, 1556,
	131, 1556,
	132, 1556,
	133, 1556,
	135, 1556,
	136, 1556,
	137, 1556,
	138, 1556,
	140, 1556,
	141, 1556,
	142, 1556,
	144, 1556,
	145, 1556,
	146, 1556,
	149, 1556,
	150, 1556,
	151, 1556,
	153, 1556,
	154, 1556,
	155, 1556,
	157, 1556,
	158, 1556,
	159, 1556,
	161, 1556,
	162, 1556,
	163, 1556,
	164, 1556,
	165, 1556,
	166, 1556,
	167, 1556,
	168, 1556,
	169, 1556,
	170, 1556,
	171, 1556,
	172, 1556,
	173, 1556,
	174, 1556,
	175, 1556,
	176, 1556,
	177, 1556,
	178, 1556,
	180, 1556,
	186, 1556,
	187, 1556,
	188, 1556,
	189, 1556,
	193, 1556,
	195, 1556,
	196, 1556,
	197, 1556,
	199, 1556,
	200, 1556,
	203, 1556,
	204, 1556,
	205, 1556,
	206, 1556,
	207, 1556,
	208, 1556,
	209, 1556,
	210, 1556,
	211, 1556,
	212, 1556,
	213, 1556,
	214, 1556,
	215, 1556,
	216, 1556,
	218, 1556,
	219, 1556,
	221, 1556,
	222, 1556,
	224, 1556,
	225, 1556,
	226, 1556,
	227, 1556,
	228, 1556,
	229, 1556,
	230, 1556,
	231, 1556,
	232, 1556,
	233, 1556,
	234, 1556,
	236, 1556,
	237, 1556,
	238, 1556,
	240, 1556,
	241, 1556,
	242, 1556,
	243, 1556,
	244, 1556,
	248, 1556,
	249, 1556,
	250, 1556,
	251, 1556,
	254, 1556,
	255, 1556,
	256, 1556,
	257, 1556,
	258, 1556,
	259, 1556,
	261, 1556,
	263, 1556,
	264, 1556,
	265, 1556,
	267, 1556,
	269, 1556,
	270, 1556,
	271, 1556,
	273, 1556,
	277, 1556,
	278, 1556,
	279, 1556,
	280, 1556,
	281, 1556,
	282, 1556,
	284, 1556,
	285, 1556,
	286, 1556,
	288, 1556,
	289, 1556,
	290, 1556,
	292, 1556,
	293, 1556,
	296, 1556,
	297, 1556,
	298, 1556,
	299, 1556,
	300, 1556,
	301, 1556,
	302, 1556,
	305, 1556,
	306, 1556,
	307, 1556,
	308, 1556,
	310, 1556,
	311, 1556,
	312, 1556,
	313, 1556,
	314, 1556,
	315, 1556,
	316, 1556,
	317, 1556,
	318, 1556,
	319, 1556,
	320, 1556,
	321, 1556,
	322, 1556,
	323, 1556,
	324, 1556,
	325, 1556,
	326, 1556,
	327, 1556,
	328, 1556,
	329, 1556,
	330, 1556,
	331, 1556,
	332, 1556,
	334, 1556,
	336, 1556,
	337, 1556,
	338, 1556,
	339, 1556,
	340, 1556,
	341, 1556,
	342, 1556,
	343, 1556,
	344, 1556,
	345, 1556,
	346, 1556,
	347, 1556,
	348, 1556,
	349, 1556,
	350, 1556,
	351, 1556,
	352, 1556,
	354, 1556,
	355, 1556,
	357, 1556,
	359, 1556,
	360, 1556,
	361, 1556,
	362, 1556,
	364, 1556,
	365, 1556,
	366, 1556,
	367, 1556,
	368, 1556,
	371, 1556,
	373, 1556,
	376, 1556,
	377, 1556,
	378, 1556,
	381, 1556,
	382, 1556,
	383, 1556,
	385, 1556,
	387, 1556,
	388, 1556,
	389, 1556,
	390, 1556,
	391, 1556,
	392, 1556,
	393, 1556,
	394, 1556,
	395, 1556,
	396, 1556,
	397, 1556,
	398, 1556,
	399, 1556,
	400, 1556,
	402, 1556,
	403, 1556,
	404, 1556,
	405, 1556,
	406, 1556,
	407, 1556,
	408, 1556,
	409, 1556,
	410, 1556,
	411, 1556,
	412, 1556,
	413, 1556,
	414, 1556,
	415, 1556,
	416, 1556,
	418, 1556,
	419, 1556,
	420, 1556,
	422, 1556,
	423, 1556,
	424, 1556,
	425, 1556,
	426, 1556,
	427, 1556,
	428, 1556,
	429, 1556,
	430, 1556,
	431, 1556,
	432, 1556,
	433, 1556,
	434, 1556,
	435, 1556,
	437, 1556,
	439, 1556,
	440, 1556,
	441, 1556,
	447, 1556,
	448, 1556,
	449, 1556,
	451, 1556,
	452, 1556,
	453, 1556,
	454, 1556,
	455, 1556,
	456, 1556,
	457, 1556,
	458, 1556,
	459, 1556,
	460, 1556,
	461, 1556,
	463, 1556,
	464, 1556,
	465, 1556,
	466, 1556,
	467, 1556,
	469, 1556,
	470, 1556,
	471, 1556,
	472, 1556,
	473, 1556,
	474, 1556,
	475, 1556,
	477, 1556,
	478, 1556,
	479, 1556,
	480, 1556,
	481, 1556,
	482, 1556,
	483, 1556,
	484, 1556,
	485, 1556,
	486, 1556,
	487, 1556,
	488, 1556,
	489, 1556,
	490, 1556,
	491, 1556,
	493, 1556,
	494, 1556,
	495, 1556,
	496, 1556,
	497, 1556,
	498, 1556,
	500, 1556,
	501, 1556,
	502, 1556,
	503, 1556,
	504, 1556,
	505, 1556,
	506, 1556,
	508, 1556,
	509, 1556,
	510, 1556,
	511, 1556,
	512, 1556,
	513, 1556,
	514, 1556,
	515, 1556,
	517, 1556,
	519, 1556,
	520, 1556,
	521, 1556,
	522, 1556,
	523, 1556,
	524, 1556,
	525, 1556,
	526, 1556,
	527, 1556,
	528, 1556,
	529, 1556,
	530, 1556,
	531, 1556,
	532, 1556,
	533, 1556,
	534, 1556,
	535, 1556,
	536, 1556,
	537, 1556,
	538, 1556,
	539, 1556,
	541, 1556,
	542, 1556,
	544, 1556,
	545, 1556,
	547, 1556,
	548, 1556,
	549, 1556,
	550, 1556,
	551, 1556,
	552, 1556,
	554, 1556,
	555, 1556,
	557, 1556,
	558, 1556,
	559, 1556,
	560, 1556,
	561, 1556,
	563, 1556,
	565, 1556,
	566, 1556,
	567, 1556,
	568, 1556,
	569, 1556,
	570, 1556,
	571, 1556,
	572, 1556,
	574, 1556,
	575, 1556,
	576, 1556,
	577, 1556,
	578, 1556,
	579, 1556,
	580, 1556,
	583, 1556,
	584, 1556,
	585, 1556,
	586, 1556,
	587, 1556,
	588, 1556,
	589, 1556,
	590, 1556,
	592, 1556,
	595, 1556,
	596, 1556,
	597, 1556,
	598, 1556,
	599, 1556,
	600, 1556,
	602, 1556,
	603, 1556,
	604, 1556,
	605, 1556,
	606, 1556,
	607, 1556,
	608, 1556,
	609, 1556,
	610, 1556,
	615, 1556,
	616, 1556,
	617, 1556,
	618, 1556,
	619, 1556,
	620, 1556,
	-2, 0,
	-1, 852,
	201, 2646,
	562, 2646,
	635, 2646,
	655, 2646,
	-2, 0,
	-1, 853,
	201, 2632,
	562, 2632,
	635, 2632,
	655, 2632,
	-2, 0,
	-1, 855,
	201, 2926,
	562, 2926,
	635, 2926,
	655, 2926,
	-2, 0,
	-1, 858,
	201, 2769,
	562, 2769,
	635, 2769,
	655, 2769,
	-2, 0,
	-1, 859,
	201, 2973,
	562, 2973,
	635, 2973,
	655, 2973,
	-2, 0,
	-1, 867,
	201, 2797,
	562, 2797,
	635, 2797,
	655, 2797,
	-2, 853,
	-1, 883,
	8, 986,
	29, 986,
	643, 986,
	644, 986,
	-2, 991,
	-1, 887,
	1, 2703,
	656, 2703,
	659, 2703,
	-2, 991,
	-1, 888,
	1, 2756,
	656, 2756,
	659, 2756,
	-2, 991,
	-1, 891,
	1, 2802,
	656, 2802,
	659, 2802,
	-2, 984,
	-1, 892,
	1, 2859,
	656, 2859,
	659, 2859,
	-2, 985,
	-1, 893,
	1, 2708,
	656, 2708,
	659, 2708,
	-2, 988,
	-1, 894,
	1, 2618,
	656, 2618,
	659, 2618,
	-2, 989,
	-1, 934,
	655, 2575,
	658, 2575,
	-2, 1217,
	-1, 935,
	655, 2577,
	658, 2577,
	-2, 1218,
	-1, 936,
	655, 2576,
	658, 2576,
	-2, 1219,
	-1, 937,
	658, 2499,
	-2, 1220,
	-1, 963,
	194, 297,
	-2, 0,
	-1, 985,
	46, 2548,
	-2, 0,
	-1, 986,
	602, 1534,
	-2, 1302,
	-1, 1003,
	4, 1977,
	21, 1977,
	22, 1977,
	23, 1977,
	24, 1977,
	25, 1977,
	26, 1977,
	27, 1977,
	28, 1977,
	30, 1977,
	31, 1977,
	37, 1977,
	41, 1977,
	43, 1977,
	44, 1977,
	45, 1977,
	47, 1977,
	48, 1977,
	49, 1977,
	50, 1977,
	51, 1977,
	52, 1977,
	53, 1977,
	54, 1977,
	55, 1977,
	57, 1977,
	58, 1977,
	59, 1977,
	60, 1977,
	62, 1977,
	63, 1977,
	64, 1977,
	65, 1977,
	66, 1977,
	67, 1977,
	68, 1977,
	69, 1977,
	73, 1977,
	74, 1977,
	75, 1977,
	76, 1977,
	78, 1977,
	79, 1977,
	80, 1977,
	84, 1977,
	85, 1977,
	86, 1977,
	87, 1977,
	88, 1977,
	89, 1977,
	90, 1977,
	91, 1977,
	94, 1977,
	95, 1977,
	96, 1977,
	97, 1977,
	98, 1977,
	100, 1977,
	102, 1977,
	103, 1977,
	104, 1977,
	105, 1977,
	106, 1977,
	107, 1977,
	108, 1977,
	110, 1977,
	111, 1977,
	112, 1977,
	114, 1977,
	115, 1977,
	116, 1977,
	124, 1977,
	125, 1977,
	126, 1977,
	127, 1977,
	128, 1977,
	130, 1977,
	131, 1977,
	132, 1977,
	133, 1977,
	135, 1977,
	136, 1977,
	137, 1977,
	138, 1977,
	140, 1977,
	141, 1977,
	142, 1977,
	144, 1977,
	145, 1977,
	146, 1977,
	149, 1977,
	150, 1977,
	151, 1977,
	153, 1977,
	154, 1977,
	155, 1977,
	157, 1977,
	158, 1977,
	159, 1977,
	161, 1977,
	162, 1977,
	163, 1977,
	164, 1977,
	165, 1977,
	166, 1977,
	167, 1977,
	168, 1977,
	169, 1977,
	170, 1977,
	171, 1977,
	172, 1977,
	173, 1977,
	174, 1977,
	175, 1977,
	176, 1977,
	177, 1977,
	178, 1977,
	180, 1977,
	186, 1977,
	187, 1977,
	188, 1977,
	189, 1977,
	193, 1977,
	195, 1977,
	196, 1977,
	197, 1977,
	199, 1977,
	200, 1977,
	203, 1977,
	204, 1977,
	205, 1977,
	206, 1977,
	207, 1977,
	208, 1977,
	209, 1977,
	210, 1977,
	211, 1977,
	212, 1977,
	213, 1977,
	214, 1977,
	215, 1977,
	216, 1977,
	218, 1977,
	219, 1977,
	221, 1977,
	222, 1977,
	224, 1977,
	225, 1977,
	226, 1977,
	227, 1977,
	228, 1977,
	229, 1977,
	230, 1977,
	231, 1977,
	232, 1977,
	233, 1977,
	234, 1977,
	236, 1977,
	237, 1977,
	238, 1977,
	240, 1977,
	241, 1977,
	242, 1977,
	243, 1977,
	244, 1977,
	248, 1977,
	249, 1977,
	250, 1977,
	251, 1977,
	254, 1977,
	255, 1977,
	256, 1977,
	257, 1977,
	258, 1977,
	259, 1977,
	261, 1977,
	263, 1977,
	264, 1977,
	265, 1977,
	267, 1977,
	269, 1977,
	270, 1977,
	271, 1977,
	273, 1977,
	277, 1977,
	278, 1977,
	279, 1977,
	280, 1977,
	281, 1977,
	282, 1977,
	284, 1977,
	285, 1977,
	286, 1977,
	288, 1977,
	289, 1977,
	290, 1977,
	292, 1977,
	293, 1977,
	296, 1977,
	297, 1977,
	298, 1977,
	299, 1977,
	300, 1977,
	301, 1977,
	302, 1977,
	305, 1977,
	306, 1977,
	307, 1977,
	308, 1977,
	310, 1977,
	311, 1977,
	312, 1977,
	313, 1977,
	314, 1977,
	315, 1977,
	316, 1977,
	317, 1977,
	318, 1977,
	319, 1977,
	320, 1977,
	321, 1977,
	322, 1977,
	323, 1977,
	324, 1977,
	325, 1977,
	326, 1977,
	327, 1977,
	328, 1977,
	329, 1977,
	330, 1977,
	331, 1977,
	332, 1977,
	334, 1977,
	336, 1977,
	337, 1977,
	338, 1977,
	339, 1977,
	340, 1977,
	341, 1977,
	342, 1977,
	343, 1977,
	344, 1977,
	345, 1977,
	346, 1977,
	347, 1977,
	348, 1977,
	349, 1977,
	350, 1977,
	351, 1977,
	352, 1977,
	354, 1977,
	355, 1977,
	357, 1977,
	359, 1977,
	360, 1977,
	361, 1977,
	362, 1977,
	364, 1977,
	365, 1977,
	366, 1977,
	367, 1977,
	368, 1977,
	371, 1977,
	373, 1977,
	376, 1977,
	377, 1977,
	378, 1977,
	381, 1977,
	382, 1977,
	383, 1977,
	385, 1977,
	387, 1977,
	388, 1977,
	389, 1977,
	390, 1977,
	391, 1977,
	392, 1977,
	393, 1977,
	394, 1977,
	395, 1977,
	396, 1977,
	397, 1977,
	398, 1977,
	399, 1977,
	400, 1977,
	402, 1977,
	403, 1977,
	404, 1977,
	405, 1977,
	406, 1977,
	407, 1977,
	408, 1977,
	409, 1977,
	410, 1977,
	411, 1977,
	412, 1977,
	413, 1977,
	414, 1977,
	415, 1977,
	416, 1977,
	418, 1977,
	419, 1977,
	420, 1977,
	422, 1977,
	423, 1977,
	424, 1977,
	425, 1977,
	426, 1977,
	427, 1977,
	428, 1977,
	429, 1977,
	430, 1977,
	431, 1977,
	432, 1977,
	433, 1977,
	434, 1977,
	435, 1977,
	437, 1977,
	439, 1977,
	440, 1977,
	441, 1977,
	447, 1977,
	448, 1977,
	449, 1977,
	451, 1977,
	452, 1977,
	453, 1977,
	454, 1977,
	455, 1977,
	456, 1977,
	457, 1977,
	458, 1977,
	459, 1977,
	460, 1977,
	461, 1977,
	463, 1977,
	464, 1977,
	465, 1977,
	466, 1977,
	467, 1977,
	469, 1977,
	470, 1977,
	471, 1977,
	472, 1977,
	473, 1977,
	474, 1977,
	475, 1977,
	477, 1977,
	478, 1977,
	479, 1977,
	480, 1977,
	481, 1977,
	482, 1977,
	483, 1977,
	484, 1977,
	485, 1977,
	486, 1977,
	487, 1977,
	488, 1977,
	489, 1977,
	490, 1977,
	491, 1977,
	493, 1977,
	494, 1977,
	495, 1977,
	496, 1977,
	497, 1977,
	498, 1977,
	500, 1977,
	501, 1977,
	502, 1977,
	503, 1977,
	504, 1977,
	505, 1977,
	506, 1977,
	508, 1977,
	509, 1977,
	510, 1977,
	511, 1977,
	512, 1977,
	513, 1977,
	514, 1977,
	515, 1977,
	517, 1977,
	519, 1977,
	520, 1977,
	521, 1977,
	522, 1977,
	523, 1977,
	524, 1977,
	525, 1977,
	526, 1977,
	527, 1977,
	528, 1977,
	529, 1977,
	530, 1977,
	531, 1977,
	532, 1977,
	533, 1977,
	534, 1977,
	535, 1977,
	536, 1977,
	537, 1977,
	538, 1977,
	539, 1977,
	541, 1977,
	542, 1977,
	544, 1977,
	545, 1977,
	547, 1977,
	548, 1977,
	549, 1977,
	550, 1977,
	551, 1977,
	552, 1977,
	554, 1977,
	555, 1977,
	557, 1977,
	558, 1977,
	559, 1977,
	560, 1977,
	561, 1977,
	563, 1977,
	565, 1977,
	566, 1977,
	567, 1977,
	568, 1977,
	569, 1977,
	570, 1977,
	571, 1977,
	572, 1977,
	574, 1977,
	575, 1977,
	576, 1977,
	577, 1977,
	578, 1977,
	579, 1977,
	580, 1977,
	583, 1977,
	584, 1977,
	585, 1977,
	586, 1977,
	587, 1977,
	588, 1977,
	589, 1977,
	590, 1977,
	592, 1977,
	595, 1977,
	596, 1977,
	597, 1977,
	598, 1977,
	599, 1977,
	600, 1977,
	602, 1977,
	603, 1977,
	604, 1977,
	605, 1977,
	606, 1977,
	607, 1977,
	608, 1977,
	609, 1977,
	610, 1977,
	615, 1977,
	616, 1977,
	617, 1977,
	618, 1977,
	619, 1977,
	620, 1977,
	-2, 0,
	-1, 1014,
	281, 526,
	-2, 0,
	-1, 1092,
	201, 1030,
	-2, 0,
	-1, 1093,
	424, 1083,
	498, 1083,
	545, 1083,
	567, 1083,
	-2, 0,
	-1, 1094,
	424, 1082,
	498, 1082,
	545, 1082,
	567, 1082,
	-2, 1004,
	-1, 1098,
	1, 1135,
	652, 1135,
	654, 1135,
	656, 1135,
	659, 1135,
	-2, 0,
	-1, 1100,
	1, 1057,
	652, 1057,
	654, 1057,
	656, 1057,
	659, 1057,
	-2, 0,
	-1, 1101,
	1, 1061,
	652, 1061,
	654, 1061,
	656, 1061,
	659, 1061,
	-2, 0,
	-1, 1102,
	1, 1208,
	194, 1208,
	652, 1208,
	654, 1208,
	656, 1208,
	659, 1208,
	-2, 0,
	-1, 1110,
	1, 1088,
	652, 1088,
	654, 1088,
	656, 1088,
	659, 1088,
	-2, 0,
	-1, 1117,
	1, 1135,
	652, 1135,
	654, 1135,
	656, 1135,
	659, 1135,
	-2, 0,
	-1, 1118,
	1, 1137,
	652, 1137,
	654, 1137,
	656, 1137,
	659, 1137,
	-2, 0,
	-1, 1119,
	1, 1140,
	652, 1140,
	654, 1140,
	656, 1140,
	659, 1140,
	-2, 0,
	-1, 1127,
	1, 1171,
	652, 1171,
	654, 1171,
	656, 1171,
	659, 1171,
	-2, 0,
	-1, 1128,
	1, 1173,
	652, 1173,
	654, 1173,
	656, 1173,
	659, 1173,
	-2, 0,
	-1, 1133,
	1, 1201,
	652, 1201,
	654, 1201,
	656, 1201,
	659, 1201,
	-2, 0,
	-1, 1184,
	181, 1847,
	194, 1847,
	295, 1847,
	369, 1847,
	-2, 1783,
	-1, 1200,
	181, 1846,
	194, 1846,
	295, 1846,
	369, 1846,
	-2, 1780,
	-1, 1229,
	655, 2574,
	-2, 861,
	-1, 1258,
	5, 2566,
	653, 2564,
	-2, 2555,
	-1, 1266,
	5, 2587,
	653, 2584,
	-2, 2575,
	-1, 1267,
	5, 2588,
	653, 2585,
	-2, 2576,
	-1, 1275,
	655, 2572,
	-2, 2554,
	-1, 1276,
	653, 3083,
	-2, 2573,
	-1, 1299,
	5, 2589,
	38, 2589,
	134, 2589,
	635, 2589,
	651, 2589,
	654, 2589,
	655, 2589,
	658, 2589,
	-2, 3082,
	-1, 1300,
	5, 2052,
	-2, 3052,
	-1, 1301,
	5, 2053,
	-2, 3053,
	-1, 1302,
	5, 2054,
	-2, 3068,
	-1, 1303,
	5, 2055,
	-2, 3030,
	-1, 1304,
	5, 2056,
	-2, 3065,
	-1, 1305,
	5, 2064,
	-2, 3043,
	-1, 1306,
	5, 2051,
	-2, 3039,
	-1, 1307,
	5, 2051,
	-2, 3038,
	-1, 1308,
	5, 2051,
	-2, 3058,
	-1, 1309,
	5, 2062,
	-2, 3032,
	-1, 1310,
	5, 2067,
	-2, 3031,
	-1, 1311,
	5, 2069,
	-2, 3078,
	-1, 1314,
	5, 2091,
	-2, 3071,
	-1, 1315,
	5, 2083,
	-2, 3072,
	-1, 1316,
	5, 2091,
	-2, 3073,
	-1, 1317,
	5, 2087,
	-2, 3074,
	-1, 1318,
	5, 2037,
	-2, 3044,
	-1, 1319,
	5, 2038,
	-2, 3045,
	-1, 1320,
	5, 2039,
	-2, 3033,
	-1, 1348,
	5, 2074,
	-2, 3079,
	-1, 1349,
	5, 2075,
	-2, 3069,
	-1, 1350,
	5, 2076,
	603, 2076,
	-2, 3034,
	-1, 1351,
	5, 2077,
	603, 2077,
	-2, 3035,
	-1, 1389,
	653, 2584,
	-2, 2575,
	-1, 1390,
	653, 2585,
	-2, 2576,
	-1, 1492,
	201, 2973,
	562, 2973,
	635, 2973,
	655, 2973,
	-2, 0,
	-1, 1497,
	1, 837,
	656, 837,
	659, 837,
	-2, 1689,
	-1, 1544,
	1, 1684,
	656, 1684,
	659, 1684,
	-2, 1689,
	-1, 1646,
	389, 2549,
	451, 2549,
	500, 2549,
	645, 2549,
	-2, 2537,
	-1, 1652,
	201, 153,
	288, 153,
	354, 153,
	610, 153,
	-2, 2968,
	-1, 1653,
	201, 154,
	288, 154,
	354, 154,
	610, 154,
	-2, 2693,
	-1, 1654,
	201, 155,
	288, 155,
	354, 155,
	610, 155,
	-2, 2882,
	-1, 1660,
	657, 2549,
	-2, 2551,
	-1, 1684,
	1, 1531,
	456, 1485,
	500, 1485,
	627, 1485,
	632, 1485,
	652, 1531,
	654, 1531,
	656, 1531,
	659, 1531,
	-2, 1832,
	-1, 1690,
	217, 1628,
	239, 1628,
	467, 1628,
	-2, 0,
	-1, 1758,
	46, 2547,
	-2, 1264,
	-1, 1765,
	1, 1531,
	652, 1531,
	654, 1531,
	656, 1531,
	659, 1531,
	-2, 1832,
	-1, 1768,
	433, 1301,
	602, 1301,
	-2, 447,
	-1, 1774,
	4, 1556,
	21, 1556,
	22, 1556,
	23, 1556,
	24, 1556,
	25, 1556,
	26, 1556,
	27, 1556,
	28, 1556,
	30, 1556,
	31, 1556,
	37, 1556,
	41, 1556,
	43, 1556,
	44, 1556,
	45, 1556,
	47, 1556,
	48, 1556,
	49, 1556,
	50, 1556,
	51, 1556,
	52, 1556,
	53, 1556,
	54, 1556,
	55, 1556,
	57, 1556,
	58, 1556,
	59, 1556,
	60, 1556,
	62, 1556,
	63, 1556,
	64, 1556,
	65, 1556,
	66, 1556,
	67, 1556,
	68, 1556,
	69, 1556,
	73, 1556,
	74, 1556,
	75, 1556,
	76, 1556,
	78, 1556,
	79, 1556,
	80, 1556,
	84, 1556,
	85, 1556,
	86, 1556,
	87, 1556,
	88, 1556,
	89, 1556,
	90, 1556,
	91, 1556,
	94, 1556,
	95, 1556,
	96, 1556,
	97, 1556,
	98, 1556,
	100, 1556,
	102, 1556,
	103, 1556,
	104, 1556,
	105, 1556,
	106, 1556,
	107, 1556,
	108, 1556,
	110, 1556,
	111, 1556,
	112, 1556,
	114, 1556,
	115, 1556,
	116, 1556,
	124, 1556,
	125, 1556,
	126, 1556,
	127, 1556,
	128, 1556,
	130, 1556,
	131, 1556,
	132, 1556,
	133, 1556,
	135, 1556,
	136, 1556,
	137, 1556,
	138, 1556,
	140, 1556,
	141, 1556,
	142, 1556,
	144, 1556,
	145, 1556,
	146, 1556,
	149, 1556,
	150, 1556,
	151, 1556,
	153, 1556,
	154, 1556,
	155, 1556,
	157, 1556,
	158, 1556,
	159, 1556,
	161, 1556,
	162, 1556,
	163, 1556,
	164, 1556,
	165, 1556,
	166, 1556,
	167, 1556,
	168, 1556,
	169, 1556,
	170, 1556,
	171, 1556,
	172, 1556,
	173, 1556,
	174, 1556,
	175, 1556,
	176, 1556,
	177, 1556,
	178, 1556,
	186, 1556,
	187, 1556,
	188, 1556,
	189, 1556,
	193, 1556,
	195, 1556,
	196, 1556,
	197, 1556,
	199, 1556,
	200, 1556,
	203, 1556,
	204, 1556,
	205, 1556,
	206, 1556,
	207, 1556,
	208, 1556,
	209, 1556,
	210, 1556,
	211, 1556,
	212, 1556,
	213, 1556,
	214, 1556,
	215, 1556,
	216, 1556,
	218, 1556,
	219, 1556,
	221, 1556,
	222, 1556,
	224, 1556,
	225, 1556,
	226, 1556,
	227, 1556,
	228, 1556,
	229, 1556,
	230, 1556,
	231, 1556,
	232, 1556,
	233, 1556,
	234, 1556,
	236, 1556,
	237, 1556,
	238, 1556,
	240, 1556,
	241, 1556,
	242, 1556,
	243, 1556,
	244, 1556,
	249, 1556,
	250, 1556,
	251, 1556,
	254, 1556,
	255, 1556,
	256, 1556,
	257, 1556,
	258, 1556,
	259, 1556,
	261, 1556,
	263, 1556,
	264, 1556,
	265, 1556,
	267, 1556,
	269, 1556,
	270, 1556,
	271, 1556,
	273, 1556,
	277, 1556,
	278, 1556,
	279, 1556,
	280, 1556,
	281, 1556,
	282, 1556,
	284, 1556,
	285, 1556,
	286, 1556,
	288, 1556,
	289, 1556,
	290, 1556,
	292, 1556,
	293, 1556,
	296, 1556,
	297, 1556,
	298, 1556,
	299, 1556,
	300, 1556,
	301, 1556,
	302, 1556,
	305, 1556,
	306, 1556,
	307, 1556,
	308, 1556,
	310, 1556,
	311, 1556,
	312, 1556,
	313, 1556,
	314, 1556,
	315, 1556,
	316, 1556,
	317, 1556,
	318, 1556,
	319, 1556,
	320, 1556,
	321, 1556,
	322, 1556,
	323, 1556,
	324, 1556,
	325, 1556,
	326, 1556,
	327, 1556,
	328, 1556,
	329, 1556,
	330, 1556,
	331, 1556,
	332, 1556,
	334, 1556,
	336, 1556,
	337, 1556,
	338, 1556,
	339, 1556,
	340, 1556,
	341, 1556,
	342, 1556,
	343, 1556,
	344, 1556,
	345, 1556,
	346, 1556,
	347, 1556,
	348, 1556,
	349, 1556,
	350, 1556,
	351, 1556,
	352, 1556,
	354, 1556,
	355, 1556,
	359, 1556,
	360, 1556,
	361, 1556,
	362, 1556,
	364, 1556,
	365, 1556,
	366, 1556,
	367, 1556,
	368, 1556,
	371, 1556,
	373, 1556,
	374, 1556,
	376, 1556,
	377, 1556,
	378, 1556,
	381, 1556,
	382, 1556,
	383, 1556,
	385, 1556,
	387, 1556,
	388, 1556,
	389, 1556,
	390, 1556,
	391, 1556,
	392, 1556,
	393, 1556,
	394, 1556,
	395, 1556,
	396, 1556,
	397, 1556,
	398, 1556,
	399, 1556,
	400, 1556,
	402, 1556,
	403, 1556,
	404, 1556,
	405, 1556,
	406, 1556,
	407, 1556,
	408, 1556,
	409, 1556,
	410, 1556,
	411, 1556,
	412, 1556,
	413, 1556,
	414, 1556,
	415, 1556,
	416, 1556,
	418, 1556,
	419, 1556,
	420, 1556,
	422, 1556,
	423, 1556,
	424, 1556,
	425, 1556,
	426, 1556,
	427, 1556,
	428, 1556,
	429, 1556,
	430, 1556,
	431, 1556,
	432, 1556,
	433, 1556,
	434, 1556,
	435, 1556,
	437, 1556,
	439, 1556,
	440, 1556,
	441, 1556,
	447, 1556,
	448, 1556,
	449, 1556,
	451, 1556,
	452, 1556,
	453, 1556,
	454, 1556,
	455, 1556,
	456, 1556,
	457, 1556,
	458, 1556,
	459, 1556,
	460, 1556,
	461, 1556,
	463, 1556,
	464, 1556,
	465, 1556,
	466, 1556,
	467, 1556,
	469, 1556,
	470, 1556,
	471, 1556,
	472, 1556,
	473, 1556,
	474, 1556,
	475, 1556,
	477, 1556,
	478, 1556,
	479, 1556,
	480, 1556,
	481, 1556,
	482, 1556,
	483, 1556,
	484, 1556,
	485, 1556,
	486, 1556,
	487, 1556,
	488, 1556,
	489, 1556,
	490, 1556,
	491, 1556,
	493, 1556,
	494, 1556,
	495, 1556,
	496, 1556,
	497, 1556,
	498, 1556,
	500, 1556,
	501, 1556,
	502, 1556,
	503, 1556,
	504, 1556,
	505, 1556,
	506, 1556,
	508, 1556,
	509, 1556,
	510, 1556,
	511, 1556,
	512, 1556,
	513, 1556,
	514, 1556,
	515, 1556,
	517, 1556,
	519, 1556,
	520, 1556,
	521, 1556,
	522, 1556,
	523, 1556,
	524, 1556,
	525, 1556,
	526, 1556,
	527, 1556,
	528, 1556,
	529, 1556,
	530, 1556,
	531, 1556,
	532, 1556,
	533, 1556,
	534, 1556,
	535, 1556,
	536, 1556,
	537, 1556,
	538, 1556,
	539, 1556,
	541, 1556,
	542, 1556,
	544, 1556,
	545, 1556,
	547, 1556,
	548, 1556,
	549, 1556,
	550, 1556,
	551, 1556,
	552, 1556,
	554, 1556,
	555, 1556,
	557, 1556,
	558, 1556,
	559, 1556,
	560, 1556,
	561, 1556,
	563, 1556,
	565, 1556,
	566, 1556,
	567, 1556,
	568, 1556,
	569, 1556,
	570, 1556,
	571, 1556,
	572, 1556,
	574, 1556,
	575, 1556,
	576, 1556,
	577, 1556,
	578, 1556,
	579, 1556,
	580, 1556,
	583, 1556,
	584, 1556,
	585, 1556,
	586, 1556,
	587, 1556,
	588, 1556,
	589, 1556,
	590, 1556,
	592, 1556,
	595, 1556,
	596, 1556,
	597, 1556,
	598, 1556,
	599, 1556,
	600, 1556,
	602, 1556,
	603, 1556,
	604, 1556,
	605, 1556,
	606, 1556,
	607, 1556,
	608, 1556,
	609, 1556,
	610, 1556,
	615, 1556,
	616, 1556,
	617, 1556,
	618, 1556,
	619, 1556,
	620, 1556,
	-2, 0,
	-1, 1797,
	1, 666,
	652, 666,
	654, 666,
	656, 666,
	659, 666,
	-2, 1803,
	-1, 1800,
	4, 3077,
	11, 3077,
	12, 3077,
	14, 3077,
	15, 3077,
	16, 3077,
	17, 3077,
	18, 3077,
	19, 3077,
	21, 3077,
	22, 3077,
	23, 3077,
	24, 3077,
	25, 3077,
	26, 3077,
	27, 3077,
	28, 3077,
	30, 3077,
	31, 3077,
	34, 3077,
	35, 3077,
	37, 3077,
	39, 3077,
	41, 3077,
	43, 3077,
	44, 3077,
	45, 3077,
	47, 3077,
	48, 3077,
	49, 3077,
	50, 3077,
	51, 3077,
	52, 3077,
	53, 3077,
	54, 3077,
	55, 3077,
	57, 3077,
	58, 3077,
	59, 3077,
	60, 3077,
	62, 3077,
	63, 3077,
	64, 3077,
	65, 3077,
	66, 3077,
	67, 3077,
	68, 3077,
	69, 3077,
	72, 3077,
	73, 3077,
	74, 3077,
	75, 3077,
	76, 3077,
	78, 3077,
	79, 3077,
	80, 3077,
	81, 3077,
	84, 3077,
	85, 3077,
	86, 3077,
	87, 3077,
	88, 3077,
	89, 3077,
	90, 3077,
	91, 3077,
	92, 3077,
	94, 3077,
	95, 3077,
	96, 3077,
	97, 3077,
	98, 3077,
	100, 3077,
	101, 3077,
	102, 3077,
	103, 3077,
	104, 3077,
	105, 3077,
	106, 3077,
	107, 3077,
	108, 3077,
	110, 3077,
	111, 3077,
	112, 3077,
	113, 3077,
	114, 3077,
	115, 3077,
	116, 3077,
	124, 3077,
	125, 3077,
	126, 3077,
	127, 3077,
	128, 3077,
	130, 3077,
	131, 3077,
	132, 3077,
	133, 3077,
	135, 3077,
	136, 3077,
	137, 3077,
	138, 3077,
	140, 3077,
	141, 3077,
	142, 3077,
	144, 3077,
	145, 3077,
	146, 3077,
	149, 3077,
	150, 3077,
	151, 3077,
	153, 3077,
	154, 3077,
	155, 3077,
	157, 3077,
	158, 3077,
	159, 3077,
	161, 3077,
	162, 3077,
	163, 3077,
	164, 3077,
	165, 3077,
	166, 3077,
	167, 3077,
	168, 3077,
	169, 3077,
	170, 3077,
	171, 3077,
	172, 3077,
	173, 3077,
	174, 3077,
	175, 3077,
	176, 3077,
	177, 3077,
	178, 3077,
	182, 3077,
	183, 3077,
	184, 3077,
	185, 3077,
	186, 3077,
	187, 3077,
	188, 3077,
	189, 3077,
	192, 3077,
	193, 3077,
	195, 3077,
	196, 3077,
	197, 3077,
	199, 3077,
	200, 3077,
	202, 3077,
	203, 3077,
	204, 3077,
	205, 3077,
	206, 3077,
	207, 3077,
	208, 3077,
	209, 3077,
	210, 3077,
	211, 3077,
	212, 3077,
	213, 3077,
	214, 3077,
	215, 3077,
	216, 3077,
	218, 3077,
	219, 3077,
	221, 3077,
	222, 3077,
	224, 3077,
	225, 3077,
	226, 3077,
	227, 3077,
	228, 3077,
	229, 3077,
	230, 3077,
	231, 3077,
	232, 3077,
	233, 3077,
	234, 3077,
	235, 3077,
	236, 3077,
	237, 3077,
	238, 3077,
	239, 3077,
	240, 3077,
	241, 3077,
	242, 3077,
	243, 3077,
	244, 3077,
	246, 3077,
	247, 3077,
	249, 3077,
	250, 3077,
	251, 3077,
	253, 3077,
	254, 3077,
	255, 3077,
	256, 3077,
	257, 3077,
	258, 3077,
	259, 3077,
	261, 3077,
	263, 3077,
	264, 3077,
	265, 3077,
	266, 3077,
	267, 3077,
	268, 3077,
	269, 3077,
	270, 3077,
	271, 3077,
	272, 3077,
	273, 3077,
	275, 3077,
	276, 3077,
	277, 3077,
	278, 3077,
	279, 3077,
	280, 3077,
	281, 3077,
	282, 3077,
	284, 3077,
	285, 3077,
	286, 3077,
	288, 3077,
	289, 3077,
	290, 3077,
	291, 3077,
	292, 3077,
	293, 3077,
	294, 3077,
	296, 3077,
	297, 3077,
	298, 3077,
	299, 3077,
	300, 3077,
	301, 3077,
	302, 3077,
	305, 3077,
	306, 3077,
	307, 3077,
	308, 3077,
	309, 3077,
	310, 3077,
	311, 3077,
	312, 3077,
	313, 3077,
	314, 3077,
	315, 3077,
	316, 3077,
	317, 3077,
	318, 3077,
	319, 3077,
	320, 3077,
	321, 3077,
	322, 3077,
	323, 3077,
	324, 3077,
	325, 3077,
	326, 3077,
	327, 3077,
	328, 3077,
	329, 3077,
	330, 3077,
	331, 3077,
	332, 3077,
	334, 3077,
	335, 3077,
	336, 3077,
	337, 3077,
	338, 3077,
	339, 3077,
	340, 3077,
	341, 3077,
	342, 3077,
	343, 3077,
	344, 3077,
	345, 3077,
	346, 3077,
	347, 3077,
	348, 3077,
	349, 3077,
	350, 3077,
	351, 3077,
	352, 3077,
	354, 3077,
	355, 3077,
	358, 3077,
	359, 3077,
	360, 3077,
	361, 3077,
	362, 3077,
	364, 3077,
	365, 3077,
	366, 3077,
	367, 3077,
	368, 3077,
	371, 3077,
	373, 3077,
	376, 3077,
	377, 3077,
	378, 3077,
	379, 3077,
	381, 3077,
	382, 3077,
	383, 3077,
	385, 3077,
	387, 3077,
	388, 3077,
	389, 3077,
	390, 3077,
	391, 3077,
	392, 3077,
	393, 3077,
	394, 3077,
	395, 3077,
	396, 3077,
	397, 3077,
	398, 3077,
	399, 3077,
	400, 3077,
	402, 3077,
	403, 3077,
	404, 3077,
	405, 3077,
	406, 3077,
	407, 3077,
	408, 3077,
	409, 3077,
	410, 3077,
	411, 3077,
	412, 3077,
	413, 3077,
	414, 3077,
	415, 3077,
	416, 3077,
	418, 3077,
	419, 3077,
	420, 3077,
	422, 3077,
	423, 3077,
	424, 3077,
	425, 3077,
	426, 3077,
	427, 3077,
	428, 3077,
	429, 3077,
	430, 3077,
	431, 3077,
	432, 3077,
	433, 3077,
	434, 3077,
	435, 3077,
	437, 3077,
	439, 3077,
	440, 3077,
	441, 3077,
	447, 3077,
	448, 3077,
	449, 3077,
	450, 3077,
	451, 3077,
	452, 3077,
	453, 3077,
	454, 3077,
	455, 3077,
	456, 3077,
	457, 3077,
	458, 3077,
	459, 3077,
	460, 3077,
	461, 3077,
	463, 3077,
	464, 3077,
	465, 3077,
	466, 3077,
	467, 3077,
	468, 3077,
	469, 3077,
	470, 3077,
	471, 3077,
	472, 3077,
	473, 3077,
	474, 3077,
	475, 3077,
	476, 3077,
	477, 3077,
	478, 3077,
	479, 3077,
	480, 3077,
	481, 3077,
	482, 3077,
	483, 3077,
	484, 3077,
	485, 3077,
	486, 3077,
	487, 3077,
	488, 3077,
	489, 3077,
	490, 3077,
	491, 3077,
	493, 3077,
	494, 3077,
	495, 3077,
	496, 3077,
	497, 3077,
	498, 3077,
	500, 3077,
	501, 3077,
	502, 3077,
	503, 3077,
	504, 3077,
	505, 3077,
	506, 3077,
	507, 3077,
	508, 3077,
	509, 3077,
	510, 3077,
	511, 3077,
	512, 3077,
	513, 3077,
	514, 3077,
	515, 3077,
	517, 3077,
	519, 3077,
	520, 3077,
	521, 3077,
	522, 3077,
	523, 3077,
	524, 3077,
	525, 3077,
	526, 3077,
	527, 3077,
	528, 3077,
	529, 3077,
	530, 3077,
	531, 3077,
	532, 3077,
	533, 3077,
	534, 3077,
	535, 3077,
	536, 3077,
	537, 3077,
	538, 3077,
	539, 3077,
	541, 3077,
	542, 3077,
	543, 3077,
	544, 3077,
	545, 3077,
	547, 3077,
	548, 3077,
	549, 3077,
	550, 3077,
	551, 3077,
	552, 3077,
	554, 3077,
	555, 3077,
	557, 3077,
	558, 3077,
	559, 3077,
	560, 3077,
	561, 3077,
	563, 3077,
	565, 3077,
	566, 3077,
	567, 3077,
	568, 3077,
	569, 3077,
	570, 3077,
	571, 3077,
	572, 3077,
	574, 3077,
	575, 3077,
	576, 3077,
	577, 3077,
	578, 3077,
	579, 3077,
	580, 3077,
	583, 3077,
	584, 3077,
	585, 3077,
	586, 3077,
	587, 3077,
	588, 3077,
	589, 3077,
	590, 3077,
	592, 3077,
	595, 3077,
	596, 3077,
	597, 3077,
	598, 3077,
	599, 3077,
	600, 3077,
	602, 3077,
	603, 3077,
	604, 3077,
	605, 3077,
	606, 3077,
	607, 3077,
	608, 3077,
	609, 3077,
	610, 3077,
	615, 3077,
	616, 3077,
	617, 3077,
	618, 3077,
	619, 3077,
	620, 3077,
	621, 3077,
	623, 3077,
	633, 3077,
	634, 3077,
	635, 3077,
	636, 3077,
	637, 3077,
	638, 3077,
	640, 3077,
	641, 3077,
	642, 3077,
	643, 3077,
	644, 3077,
	645, 3077,
	646, 3077,
	647, 3077,
	648, 3077,
	651, 3077,
	654, 3077,
	655, 3077,
	657, 3077,
	658, 3077,
	-2, 0,
	-1, 1805,
	201, 2926,
	562, 2926,
	635, 2926,
	655, 2926,
	-2, 0,
	-1, 1853,
	201, 1031,
	-2, 2916,
	-1, 1854,
	201, 1032,
	-2, 2701,
	-1, 1855,
	201, 1033,
	-2, 2868,
	-1, 1860,
	424, 1083,
	498, 1083,
	545, 1083,
	567, 1083,
	-2, 0,
	-1, 1871,
	1, 1628,
	239, 1628,
	652, 1628,
	654, 1628,
	656, 1628,
	659, 1628,
	-2, 0,
	-1, 1888,
	1, 1078,
	652, 1078,
	654, 1078,
	656, 1078,
	659, 1078,
	-2, 0,
	-1, 1889,
	1, 1122,
	652, 1122,
	654, 1122,
	656, 1122,
	659, 1122,
	-2, 0,
	-1, 1890,
	1, 1130,
	652, 1130,
	654, 1130,
	656, 1130,
	659, 1130,
	-2, 0,
	-1, 1893,
	1, 1087,
	652, 1087,
	654, 1087,
	656, 1087,
	659, 1087,
	-2, 0,
	-1, 1895,
	1, 1093,
	652, 1093,
	654, 1093,
	656, 1093,
	659, 1093,
	-2, 0,
	-1, 1898,
	1, 1089,
	652, 1089,
	654, 1089,
	656, 1089,
	659, 1089,
	-2, 0,
	-1, 1903,
	1, 1103,
	652, 1103,
	654, 1103,
	656, 1103,
	659, 1103,
	-2, 0,
	-1, 1938,
	1, 2906,
	652, 2906,
	654, 2906,
	655, 2906,
	656, 2906,
	659, 2906,
	-2, 0,
	-1, 1942,
	1, 1182,
	652, 1182,
	654, 1182,
	656, 1182,
	659, 1182,
	-2, 0,
	-1, 1962,
	181, 1846,
	194, 1846,
	295, 1846,
	369, 1846,
	-2, 1784,
	-1, 2064,
	160, 1805,
	181, 1805,
	194, 1805,
	260, 1805,
	295, 1805,
	369, 1805,
	380, 1805,
	581, 1805,
	-2, 2256,
	-1, 2125,
	654, 2431,
	-2, 0,
	-1, 2161,
	160, 1805,
	181, 1805,
	194, 1805,
	260, 1805,
	295, 1805,
	369, 1805,
	380, 1805,
	581, 1805,
	-2, 1938,
	-1, 2200,
	655, 2575,
	658, 2575,
	-2, 1209,
	-1, 2201,
	655, 2577,
	658, 2577,
	-2, 1210,
	-1, 2202,
	655, 2576,
	658, 2576,
	-2, 1211,
	-1, 2203,
	658, 2499,
	-2, 1212,
	-1, 2225,
	653, 2079,
	-2, 2067,
	-1, 2257,
	201, 2923,
	655, 2923,
	658, 2923,
	-2, 0,
	-1, 2303,
	1, 839,
	656, 839,
	659, 839,
	-2, 1689,
	-1, 2480,
	239, 291,
	-2, 2583,
	-1, 2481,
	239, 292,
	-2, 355,
	-1, 2597,
	1, 1080,
	652, 1080,
	654, 1080,
	656, 1080,
	659, 1080,
	-2, 0,
	-1, 2598,
	1, 1124,
	652, 1124,
	654, 1124,
	656, 1124,
	659, 1124,
	-2, 0,
	-1, 2599,
	1, 1132,
	652, 1132,
	654, 1132,
	656, 1132,
	659, 1132,
	-2, 0,
	-1, 2600,
	1, 1184,
	652, 1184,
	654, 1184,
	656, 1184,
	659, 1184,
	-2, 0,
	-1, 2641,
	1, 1105,
	652, 1105,
	654, 1105,
	656, 1105,
	659, 1105,
	-2, 0,
	-1, 2664,
	1, 1167,
	652, 1167,
	654, 1167,
	656, 1167,
	659, 1167,
	-2, 0,
	-1, 2712,
	474, 1873,
	475, 1873,
	-2, 2112,
	-1, 2745,
	14, 0,
	15, 0,
	16, 0,
	633, 0,
	634, 0,
	635, 0,
	-2, 2132,
	-1, 2746,
	14, 0,
	15, 0,
	16, 0,
	633, 0,
	634, 0,
	635, 0,
	-2, 2133,
	-1, 2747,
	101, 0,
	275, 0,
	276, 0,
	637, 0,
	638, 0,
	-2, 2134,
	-1, 2748,
	101, 0,
	275, 0,
	276, 0,
	637, 0,
	638, 0,
	-2, 2135,
	-1, 2749,
	101, 0,
	275, 0,
	276, 0,
	637, 0,
	638, 0,
	-2, 2136,
	-1, 2750,
	101, 0,
	275, 0,
	276, 0,
	637, 0,
	638, 0,
	-2, 2137,
	-1, 2751,
	101, 0,
	275, 0,
	276, 0,
	637, 0,
	638, 0,
	-2, 2138,
	-1, 2752,
	14, 0,
	15, 0,
	16, 0,
	633, 0,
	634, 0,
	635, 0,
	-2, 2139,
	-1, 2764,
	14, 0,
	15, 0,
	16, 0,
	633, 0,
	634, 0,
	635, 0,
	-2, 2151,
	-1, 2765,
	14, 0,
	15, 0,
	16, 0,
	633, 0,
	634, 0,
	635, 0,
	-2, 2152,
	-1, 2766,
	14, 0,
	15, 0,
	16, 0,
	633, 0,
	634, 0,
	635, 0,
	-2, 2153,
	-1, 2770,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2160,
	-1, 2776,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2164,
	-1, 2778,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2172,
	-1, 2779,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2173,
	-1, 2780,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2174,
	-1, 2781,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2175,
	-1, 2955,
	5, 2587,
	201, 2442,
	653, 2584,
	-2, 2575,
	-1, 2956,
	201, 2443,
	-2, 3008,
	-1, 2957,
	201, 2444,
	-2, 2795,
	-1, 2958,
	201, 2445,
	-2, 2665,
	-1, 2959,
	201, 2446,
	-2, 2729,
	-1, 2960,
	201, 2447,
	-2, 2780,
	-1, 2961,
	201, 2448,
	-2, 2919,
	-1, 2962,
	201, 2449,
	-2, 2239,
	-1, 3054,
	1, 1939,
	2, 1939,
	113, 1939,
	160, 1939,
	181, 1939,
	194, 1939,
	202, 1939,
	220, 1939,
	223, 1939,
	253, 1939,
	260, 1939,
	272, 1939,
	291, 1939,
	295, 1939,
	335, 1939,
	369, 1939,
	374, 1939,
	380, 1939,
	462, 1939,
	468, 1939,
	581, 1939,
	593, 1939,
	612, 1939,
	613, 1939,
	614, 1939,
	624, 1939,
	652, 1939,
	654, 1939,
	656, 1939,
	658, 1939,
	659, 1939,
	-2, 1938,
	-1, 3067,
	653, 2556,
	-2, 2570,
	-1, 3069,
	1, 372,
	612, 372,
	659, 372,
	-2, 1832,
	-1, 3104,
	653, 2078,
	-2, 2068,
	-1, 3327,
	1, 1531,
	456, 1485,
	500, 1485,
	627, 1485,
	632, 1485,
	652, 1531,
	654, 1531,
	656, 1531,
	659, 1531,
	-2, 1832,
	-1, 3511,
	375, 1876,
	-2, 3066,
	-1, 3512,
	375, 1877,
	-2, 2903,
	-1, 3516,
	474, 2510,
	475, 2510,
	-2, 2237,
	-1, 3517,
	474, 2514,
	475, 2514,
	-2, 2238,
	-1, 3518,
	474, 2511,
	475, 2511,
	-2, 2237,
	-1, 3519,
	474, 2515,
	475, 2515,
	-2, 2238,
	-1, 3533,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2162,
	-1, 3534,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2166,
	-1, 3540,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2168,
	-1, 3773,
	1, 834,
	652, 834,
	654, 834,
	656, 834,
	659, 834,
	-2, 1689,
	-1, 3960,
	38, 2587,
	134, 2587,
	635, 2587,
	651, 2587,
	654, 2587,
	655, 2587,
	658, 2587,
	-2, 2584,
	-1, 3961,
	38, 2588,
	134, 2588,
	635, 2588,
	651, 2588,
	654, 2588,
	655, 2588,
	658, 2588,
	-2, 2585,
	-1, 3992,
	46, 2547,
	-2, 1265,
	-1, 3997,
	1, 1531,
	652, 1531,
	654, 1531,
	656, 1531,
	659, 1531,
	-2, 1832,
	-1, 4107,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2170,
	-1, 4114,
	266, 0,
	268, 0,
	358, 0,
	-2, 2189,
	-1, 4182,
	14, 0,
	15, 0,
	16, 0,
	633, 0,
	634, 0,
	635, 0,
	-2, 2218,
	-1, 4183,
	14, 0,
	15, 0,
	16, 0,
	633, 0,
	634, 0,
	635, 0,
	-2, 2219,
	-1, 4184,
	14, 0,
	15, 0,
	16, 0,
	633, 0,
	634, 0,
	635, 0,
	-2, 2220,
	-1, 4188,
	14, 0,
	15, 0,
	16, 0,
	633, 0,
	634, 0,
	635, 0,
	-2, 2224,
	-1, 4189,
	14, 0,
	15, 0,
	16, 0,
	633, 0,
	634, 0,
	635, 0,
	-2, 2225,
	-1, 4190,
	14, 0,
	15, 0,
	16, 0,
	633, 0,
	634, 0,
	635, 0,
	-2, 2226,
	-1, 4238,
	653, 2557,
	-2, 2571,
	-1, 4469,
	655, 3184,
	-2, 1758,
	-1, 4528,
	266, 0,
	268, 0,
	358, 0,
	-2, 2190,
	-1, 4531,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2193,
	-1, 4532,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2195,
	-1, 4657,
	655, 2572,
	-2, 1566,
	-1, 4827,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2194,
	-1, 4828,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2196,
	-1, 4839,
	266, 0,
	-2, 2229,
	-1, 5039,
	266, 0,
	-2, 2230,
	-1, 5285,
	54, 0,
	235, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 3029,
}

const sqlPrivate = 57344

const sqlLast = 155392

var sqlAct = [...]int16{
	303, 5493, 5200, 5511, 5426, 3671, 3281, 5199, 1473, 3402,
	5090, 5348, 3251, 5364, 1013, 10, 5332, 5082, 5297, 5284,
	1209, 197, 3979, 1012, 6, 5271, 5440, 4901, 5153, 4,
	5254, 5135, 4653, 1470, 5214, 4511, 3978, 5190, 5298, 5211,
	5007, 2477, 5299, 5373, 1529, 4984, 1670, 2323, 2363, 4441,
	2520, 4971, 5231, 4951, 5295, 4147, 4785, 4780, 5043, 4774,
	4743, 4709, 4099, 4848, 3739, 5283, 4815, 4906, 2722, 3371,
	2167, 1382, 3800, 4015, 4461, 1465, 2334, 1393, 4453, 5120,
	3803, 2272, 4990, 789, 1463, 4366, 936, 3525, 4654, 2569,
	2571, 4634, 2793, 4009, 3178, 3422, 4790, 3953, 2987, 3177,
	3864, 2212, 1372, 4397, 2732, 2546, 1823, 4424, 4399, 3806,
	4844, 3937, 3963, 1971, 864, 936, 1550, 4044, 4042, 3792,
	2372, 3391, 3968, 3359, 2723, 3967, 1201, 197, 3386, 1257,
	3787, 3789, 3388, 3970, 2533, 3949, 3930, 3929, 3788, 3266,
	4241, 3677, 2567, 3686, 801, 3081, 3694, 3724, 1643, 3717,
	3654, 4510, 3417, 4567, 3403, 3453, 1016, 1821, 3675, 2466,
	2136, 3334, 2401, 5349, 2464, 2453, 3951, 3282, 2384, 3952,
	3047, 2196, 4208, 3827, 3653, 1695, 2729, 2111, 5044, 2285,
	2042, 2871, 2072, 2806, 3509, 3416, 1760, 297, 2517, 3049,
	296, 1696, 1468, 2873, 1007, 3046, 931, 1373, 2431, 860,
	3296, 2451, 2443, 1868, 1262, 2424, 2465, 2351, 3372, 2355,
	1512, 1544, 1267, 2283, 2984, 3027, 1442, 2156, 1456, 3086,
	2862, 2790, 2333, 2330, 2711, 1531, 2137, 2694, 3082, 2692,
	837, 1798, 3396, 1763, 1756, 2516, 1087, 3202, 1672, 2446,
	3203, 3163, 1411, 45, 2153, 776, 5494, 5154, 3971, 799,
	1499, 2865, 3036, 880, 123, 2106, 1376, 2146, 1355, 2843,
	2997, 938, 2917, 1453, 1390, 2951, 1972, 1230, 207, 2056,
	208, 845, 1973, 942, 2474, 2693, 945, 937, 1903, 1888,
	1796, 856, 2695, 1789, 5365, 986, 127, 1527, 1212, 2455,
	938, 113, 1651, 5427, 1243, 820, 794, 50, 49, 1524,
	47, 790, 942, 803, 38, 945, 937, 1725, 36, 34,
	1378, 1353, 3563, 1978, 1543, 926, 1953, 1706, 1108, 4222,
	3557, 2274, 4223, 3673, 5503, 5523, 2274, 873, 876, 3026,
	987, 5514, 3740, 5293, 4874, 3908, 2274, 2274, 1894, 2274,
	2274, 5501, 4867, 3624, 3625, 3026, 3642, 3643, 3644, 5500,
	5462, 5460, 5394, 3026, 4905, 4905, 2486, 5350, 5323, 5321,
	5318, 5351, 3026, 3026, 5319, 4871, 4526, 4870, 5315, 4024,
	5281, 1700, 5316, 5280, 2486, 5279, 2295, 2486, 5269, 3427,
	5267, 5258, 4905, 5257, 4905, 4905, 1833, 4905, 3624, 3625,
	5209, 5175, 5168, 5167, 4905, 3095, 3026, 3026, 5158, 4866,
	1699, 4767, 2486, 1258, 5134, 1370, 5131, 5112, 2486, 5041,
	4905, 4726, 5021, 3095, 1508, 4986, 4486, 4924, 1720, 4292,
	1205, 2486, 4923, 4912, 3639, 4911, 2486, 2486, 4904, 4905,
	4855, 4829, 4905, 4800, 2486, 3095, 4768, 3427, 2292, 4704,
	3908, 4601, 1194, 3026, 4025, 1356, 1356, 4681, 2568, 4530,
	4477, 3026, 2521, 3095, 4037, 1988, 1989, 1508, 2021, 2022,
	2023, 2032, 2033, 2034, 1206, 4471, 1185, 4421, 1184, 4037,
	4323, 4422, 4291, 4233, 4324, 3758, 4292, 4234, 2025, 2019,
	4231, 3734, 4215, 1205, 4232, 2295, 3026, 1991, 4131, 4127,
	4036, 4212, 2486, 3026, 4037, 2292, 3364, 3670, 2038, 1757,
	3753, 3026, 3665, 1814, 3664, 3615, 3026, 3119, 3026, 3616,
	3613, 1714, 3090, 3605, 3614, 3908, 2044, 3606, 3603, 3959,
	3572, 1200, 3026, 3574, 3630, 1990, 3573, 3026, 3426, 3413,
	1708, 2486, 3427, 2556, 1988, 1989, 2010, 3412, 3142, 3094,
	3079, 2556, 3026, 3095, 3026, 2007, 3071, 3025, 1408, 2555,
	2486, 3026, 2999, 2556, 2295, 1418, 2295, 1359, 2019, 1360,
	3524, 3026, 5176, 261, 106, 5045, 1991, 5036, 1357, 3630,
	5024, 3427, 2868, 4212, 2998, 4778, 4726, 2292, 1708, 2292,
	4682, 4486, 4423, 4411, 3258, 2377, 3162, 2309, 2485, 3153,
	2273, 2289, 3364, 3276, 3087, 2044, 2132, 1409, 3646, 1693,
	4341, 4102, 4026, 2295, 1990, 4071, 2154, 1988, 1989, 2436,
	2021, 2022, 2023, 2032, 2033, 2034, 1870, 263, 3063, 3062,
	3061, 3060, 4027, 4792, 3059, 1361, 2013, 2014, 2015, 2016,
	1358, 2019, 1193, 261, 1192, 1191, 1996, 1190, 1189, 1991,
	1188, 3640, 5308, 1187, 1409, 1183, 1182, 1719, 1181, 1180,
	2038, 1179, 1178, 1177, 1176, 1175, 1174, 3479, 5027, 1173,
	1172, 1171, 1170, 1707, 1169, 1168, 1167, 1388, 2044, 262,
	1166, 2869, 1165, 3624, 3625, 1164, 1151, 1990, 1085, 2029,
	1084, 1083, 1082, 2039, 1081, 255, 3640, 263, 2010, 1080,
	2018, 2020, 1079, 1078, 256, 1708, 4585, 2007, 3026, 1077,
	1076, 1075, 1074, 1073, 1988, 1989, 1072, 1071, 1070, 1069,
	2035, 2275, 2036, 1068, 1067, 1996, 2275, 1066, 1065, 2005,
	2006, 2633, 2041, 1064, 209, 1063, 2275, 2275, 1062, 2275,
	2275, 1061, 1060, 1059, 1058, 1057, 1991, 1056, 2027, 262,
	1713, 1055, 1054, 1053, 1052, 1051, 1050, 1049, 1038, 1037,
	1036, 1031, 1030, 2011, 1023, 1022, 1021, 1006, 2870, 4542,
	2867, 3562, 1005, 1004, 962, 961, 960, 2041, 959, 2018,
	2020, 958, 949, 948, 1990, 947, 946, 908, 2013, 2014,
	2015, 2016, 907, 871, 870, 869, 851, 291, 1996, 4266,
	2292, 2292, 290, 289, 209, 288, 287, 5307, 286, 1008,
	285, 284, 2037, 283, 282, 281, 280, 279, 3641, 278,
	277, 276, 275, 274, 273, 272, 271, 270, 269, 268,
	2900, 267, 2292, 2026, 2292, 266, 265, 84, 261, 1011,
	1010, 2029, 2011, 264, 2041, 2039, 4227, 1837, 1475, 1267,
	4075, 4038, 2018, 2020, 1818, 1481, 85, 1208, 3720, 4794,
	3585, 3668, 3568, 3641, 3630, 1708, 1699, 3170, 2998, 3559,
	3456, 3381, 3344, 2114, 90, 3099, 1267, 1267, 1267, 3068,
	2113, 2005, 2006, 2157, 2114, 1410, 261, 3170, 3053, 2898,
	2684, 2113, 263, 2884, 261, 1996, 2336, 2882, 3399, 1420,
	2027, 2294, 5048, 2180, 2017, 3364, 3669, 2083, 166, 1954,
	2117, 4024, 5025, 1702, 1985, 2011, 99, 5304, 261, 1520,
	2295, 2112, 1553, 2041, 1392, 3129, 1267, 5282, 5266, 5139,
	2012, 4434, 1267, 1675, 1267, 2273, 2292, 1475, 2289, 2687,
	263, 2872, 1409, 5033, 262, 1684, 3624, 3625, 263, 4896,
	1265, 4843, 1516, 1517, 1518, 1264, 4798, 1896, 1014, 1503,
	255, 2030, 1267, 2536, 1267, 4777, 1267, 2292, 4609, 256,
	4565, 55, 263, 122, 1675, 3636, 3637, 3638, 2074, 106,
	119, 3640, 3635, 3633, 3634, 3626, 3627, 3628, 3629, 3631,
	3632, 4564, 262, 4558, 4557, 4556, 2041, 2043, 1475, 209,
	262, 4549, 1503, 261, 3624, 3625, 1765, 4548, 255, 2012,
	4546, 261, 1661, 4541, 1988, 1989, 255, 256, 2081, 2998,
	1675, 1697, 1409, 4538, 262, 256, 4537, 1675, 3633, 3634,
	3626, 3627, 3628, 3629, 3631, 3632, 1267, 4420, 1267, 4410,
	255, 197, 197, 1675, 4270, 107, 1991, 209, 1241, 256,
	4329, 4269, 1267, 2076, 1267, 209, 2017, 263, 1447, 1450,
	4268, 4237, 2041, 4203, 4202, 263, 4201, 4123, 1495, 4118,
	3168, 2866, 3715, 3661, 1460, 2028, 2043, 3652, 3623, 209,
	1369, 1497, 2012, 3620, 1990, 1770, 1773, 2002, 2003, 2009,
	2031, 2008, 2004, 1480, 2001, 1999, 2000, 1992, 1993, 1994,
	1995, 1997, 1998, 1675, 3619, 3108, 1656, 3617, 4552, 262,
	3624, 3625, 4551, 2030, 3612, 3611, 1792, 262, 1546, 3610,
	1640, 1645, 3607, 1267, 3604, 255, 1267, 3630, 1682, 3584,
	1988, 1989, 3567, 255, 256, 3560, 3558, 942, 4793, 2493,
	945, 3383, 256, 1648, 3414, 1523, 3054, 1489, 3641, 2043,
	2855, 1985, 1984, 2074, 2019, 2075, 4339, 2073, 5518, 5448,
	5447, 5363, 1991, 261, 209, 2491, 5361, 1394, 4149, 1694,
	5201, 4435, 209, 2001, 1999, 2000, 1992, 1993, 1994, 1995,
	1997, 1998, 5118, 1534, 1535, 3630, 3745, 5102, 1758, 5098,
	5097, 2044, 5096, 1526, 5076, 1996, 5075, 1536, 1537, 5073,
	1990, 1678, 5047, 3666, 111, 5046, 1705, 5019, 1712, 2796,
	1718, 2010, 1838, 4435, 1385, 1801, 1803, 263, 3167, 1384,
	2007, 261, 1776, 5005, 5002, 5001, 4982, 2028, 1267, 1267,
	1267, 1267, 1267, 1267, 1267, 1267, 4981, 4920, 3167, 2002,
	2003, 2009, 2031, 2008, 2004, 4891, 2001, 1999, 2000, 1992,
	1993, 1994, 1995, 1997, 1998, 1503, 261, 4841, 1799, 1790,
	4824, 1267, 4823, 205, 4763, 114, 4759, 1267, 118, 262,
	4756, 4727, 4584, 4563, 1206, 263, 4487, 4327, 4524, 4326,
	1812, 4307, 1817, 4306, 4304, 255, 3167, 4218, 4206, 4113,
	2061, 3630, 5028, 4039, 256, 4001, 1831, 3991, 1836, 261,
	3888, 2013, 2014, 2015, 2016, 3838, 3805, 1015, 3747, 3589,
	263, 1996, 1386, 166, 3634, 3626, 3627, 3628, 3629, 3631,
	3632, 1963, 3588, 3583, 209, 2041, 3549, 262, 3358, 2063,
	3356, 1912, 2802, 3195, 2120, 1843, 2119, 261, 2118, 2115,
	2107, 2105, 3106, 255, 261, 261, 3105, 261, 1994, 1995,
	1997, 1998, 256, 263, 1813, 3065, 3097, 3058, 3024, 2880,
	1959, 2060, 262, 2179, 1895, 2018, 2020, 3382, 2135, 2129,
	1832, 2128, 2127, 1267, 1267, 1267, 2126, 2125, 255, 1267,
	2124, 171, 209, 2123, 2122, 2121, 1390, 256, 1390, 2102,
	2101, 263, 2100, 2041, 2005, 2006, 2099, 211, 263, 263,
	2098, 263, 2097, 1553, 2096, 262, 2095, 2094, 3640, 2093,
	197, 2092, 2091, 2090, 2089, 1267, 2088, 3398, 2202, 1475,
	2087, 255, 2076, 1861, 2062, 2059, 2230, 2202, 2011, 1475,
	256, 1986, 1475, 1675, 206, 2054, 1488, 1415, 1897, 210,
	1404, 5050, 1964, 262, 2134, 5049, 4766, 4605, 4534, 4265,
	262, 262, 2208, 262, 4230, 4221, 3571, 3056, 1795, 255,
	1009, 4868, 2259, 4607, 4264, 2262, 255, 255, 256, 255,
	2075, 3743, 1955, 2057, 4030, 256, 256, 2143, 256, 1530,
	1960, 1530, 2899, 3624, 3625, 1988, 1989, 1968, 1185, 2041,
	1184, 2190, 2175, 1475, 1967, 1530, 2329, 1513, 209, 1267,
	1528, 4684, 3252, 3841, 2116, 209, 209, 1962, 209, 2041,
	5439, 1515, 3712, 2195, 1530, 1206, 5106, 1991, 1530, 5099,
	4797, 4732, 5300, 1267, 4731, 4730, 2297, 1981, 1982, 2164,
	5390, 1553, 4729, 4728, 2140, 2141, 5026, 1530, 4683, 2279,
	4412, 2897, 2281, 4587, 4494, 2883, 4493, 4492, 2286, 2881,
	4491, 4490, 2288, 4489, 1356, 1990, 4488, 2291, 4293, 2366,
	4225, 4224, 4041, 2321, 2320, 4040, 2327, 1530, 2329, 2017,
	3221, 3912, 3910, 2108, 2109, 3641, 3909, 2537, 3626, 3627,
	3628, 3629, 3631, 3632, 1514, 5388, 4438, 1508, 5296, 2189,
	2157, 4991, 1503, 2205, 4357, 2012, 1508, 2301, 2253, 2185,
	4895, 2414, 2205, 2114, 4100, 942, 2165, 1957, 945, 2203,
	2113, 2300, 3609, 2187, 942, 3608, 3531, 945, 2203, 3206,
	1860, 1511, 4322, 1162, 2184, 3807, 2085, 2315, 2155, 2097,
	4428, 5069, 1795, 2171, 3981, 1913, 3980, 2385, 3628, 3629,
	3631, 3632, 1206, 5068, 2162, 3294, 1992, 1993, 1994, 1995,
	1997, 1998, 1508, 1869, 4287, 2097, 4288, 2521, 4985, 5329,
	4775, 3878, 2043, 2389, 5069, 3423, 2082, 3938, 4716, 2433,
	1870, 3673, 2468, 2277, 1163, 1509, 2133, 4409, 4363, 2467,
	4354, 4332, 4067, 2588, 3771, 2654, 2565, 2174, 2173, 2501,
	2172, 2863, 4845, 2324, 2170, 5305, 2159, 2868, 2169, 2168,
	4668, 4151, 1675, 1675, 2377, 3577, 4915, 3104, 4665, 2130,
	2110, 4887, 3998, 1553, 2303, 2529, 2209, 1769, 1689, 1484,
	1446, 5320, 3273, 2386, 5317, 4697, 4694, 3204, 4020, 3270,
	3268, 1368, 4298, 5091, 1794, 4781, 1847, 5208, 3254, 1675,
	2420, 3455, 3626, 3627, 3628, 3629, 3631, 3632, 3336, 3810,
	4317, 3395, 1826, 3921, 2447, 1000, 2008, 2004, 2299, 2001,
	1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 1675, 5306,
	5392, 5391, 2413, 5431, 4918, 4914, 2183, 2412, 2375, 2409,
	4893, 2418, 4094, 3775, 1987, 4946, 1211, 2428, 2341, 1388,
	2342, 1388, 2664, 2423, 4670, 2661, 2869, 4376, 4965, 1739,
	2349, 2350, 1160, 1158, 2423, 1505, 2423, 1732, 2478, 2483,
	1910, 3143, 2188, 1675, 1156, 1675, 2322, 1675, 906, 3777,
	2326, 5513, 5107, 3166, 903, 1691, 4939, 2647, 2645, 4926,
	3744, 4649, 5370, 4719, 1911, 1675, 1675, 2343, 2344, 3164,
	2390, 1892, 1147, 3180, 2347, 2348, 4718, 4374, 4373, 1675,
	4365, 2371, 2304, 4347, 2702, 4346, 2662, 4344, 1515, 1498,
	2325, 1675, 2383, 4343, 1675, 1675, 1675, 1210, 2560, 4642,
	2316, 1001, 4331, 4375, 3166, 4290, 4289, 3927, 3926, 3880,
	2448, 3733, 3582, 2870, 3581, 2867, 2663, 3580, 2202, 3579,
	3164, 942, 1510, 3535, 945, 3292, 1792, 2472, 2548, 3291,
	2548, 3275, 2421, 2549, 2470, 2471, 2406, 3264, 1794, 3256,
	1267, 2391, 2392, 2589, 3245, 2598, 3244, 2700, 3233, 1515,
	3232, 2525, 1909, 2484, 3231, 3211, 4643, 4301, 1845, 3210,
	4664, 1514, 843, 3171, 3080, 2777, 2210, 1961, 2387, 843,
	2530, 2913, 2912, 2405, 2734, 2213, 2543, 5022, 4666, 1267,
	3840, 4916, 2402, 2419, 1269, 1506, 4888, 2131, 998, 2427,
	997, 1782, 1891, 1781, 3183, 1507, 1840, 2586, 1780, 3098,
	1779, 3392, 4822, 4615, 1743, 2457, 2563, 1432, 2457, 3208,
	2456, 2460, 2593, 2456, 2599, 1267, 2388, 1267, 4068, 1509,
	3150, 2551, 1514, 2573, 1267, 2673, 1509, 1267, 3807, 2230,
	2230, 1553, 5432, 1267, 1267, 1267, 1267, 1267, 1267, 1267,
	1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267,
	1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267,
	1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 2504,
	1267, 4413, 1267, 1267, 1267, 1267, 2498, 2553, 2540, 2422,
	2686, 1799, 3876, 1799, 2468, 2394, 2872, 2376, 2521, 2618,
	2422, 5371, 2422, 2205, 2532, 3113, 2676, 1206, 1267, 1206,
	2580, 5434, 1267, 1267, 2605, 942, 1204, 2545, 945, 2203,
	1267, 1734, 2701, 2519, 1267, 2579, 1267, 1267, 3084, 2373,
	2691, 1841, 2682, 2557, 1553, 2558, 2704, 1489, 1153, 2416,
	1267, 1267, 1267, 1267, 2584, 2792, 1267, 1267, 1267, 1267,
	1267, 1267, 1267, 1267, 1532, 1533, 1532, 1533, 3112, 1505,
	3632, 2393, 1998, 5084, 3227, 1692, 1505, 2369, 1952, 900,
	2331, 2332, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267,
	1267, 3085, 1267, 3225, 4685, 4626, 1267, 1751, 4638, 1532,
	1533, 2597, 2634, 1532, 1533, 4639, 2608, 2702, 1390, 3243,
	1508, 1862, 2374, 2699, 2863, 1553, 4644, 3236, 3430, 2792,
	2844, 2845, 1532, 1533, 1390, 5435, 1203, 4956, 2145, 1735,
	3474, 842, 4667, 3182, 2844, 2860, 2866, 2675, 842, 3070,
	1267, 1553, 4964, 2370, 2641, 2606, 1923, 3234, 3194, 1892,
	1003, 1002, 2331, 2332, 2652, 2395, 1510, 1908, 2728, 4641,
	2716, 2908, 2715, 1510, 1929, 5391, 1927, 4625, 3238, 2727,
	2700, 1475, 3507, 3522, 5302, 1956, 2639, 2602, 4645, 2449,
	2954, 2954, 2968, 3877, 2844, 4662, 1487, 2988, 2990, 3272,
	1966, 5466, 197, 2688, 2996, 3092, 4970, 1870, 2703, 2690,
	898, 2808, 2696, 2175, 3091, 5086, 2689, 1185, 4080, 2719,
	1185, 1185, 2720, 2721, 3237, 1870, 4079, 2149, 2859, 1506,
	4821, 1858, 1475, 1889, 3271, 3774, 1506, 3207, 5433, 1507,
	2800, 3269, 3267, 2596, 3083, 3487, 1507, 2798, 3066, 3146,
	3624, 3625, 3476, 2672, 3235, 5437, 1205, 5129, 3193, 3033,
	1764, 3990, 4328, 844, 3041, 3118, 1475, 1475, 2461, 2698,
	844, 2910, 3148, 2550, 3137, 2164, 2911, 2450, 2152, 2914,
	1891, 2915, 2916, 5341, 1206, 5443, 1385, 1846, 1385, 5495,
	2872, 1384, 1356, 1384, 1206, 2804, 4314, 2147, 1206, 1047,
	3138, 3111, 1890, 5059, 2437, 2857, 3780, 1553, 3181, 2444,
	4717, 4140, 3115, 3165, 5121, 3149, 2150, 2377, 4137, 4345,
	1762, 4389, 4342, 4274, 4273, 3858, 904, 904, 5122, 3124,
	3521, 3055, 3032, 3849, 4640, 3128, 4259, 3147, 1155, 3135,
	3331, 3040, 904, 3045, 3132, 2701, 3051, 3052, 904, 3139,
	2646, 2644, 4258, 2950, 1742, 2979, 2230, 1431, 2963, 2458,
	2148, 2994, 942, 5123, 942, 945, 3490, 945, 1503, 2992,
	3110, 3022, 3023, 3038, 3039, 5303, 3034, 4650, 4651, 4072,
	3100, 2788, 3933, 4390, 1386, 3925, 1386, 3859, 1206, 3874,
	2162, 2375, 2116, 3274, 3230, 3850, 3088, 3209, 5403, 3688,
	3157, 788, 3332, 2459, 3140, 4138, 4957, 1553, 1905, 2398,
	2683, 3624, 3625, 2786, 5418, 942, 2356, 4660, 945, 4955,
	5417, 2357, 4312, 1675, 2380, 3078, 2699, 4953, 783, 4073,
	2438, 3630, 4388, 5125, 1508, 4663, 3857, 2490, 2489, 5468,
	1475, 1508, 5378, 1924, 3848, 2674, 4516, 899, 3327, 3172,
	3107, 3330, 4515, 2604, 5172, 3134, 3934, 1202, 5124, 3514,
	3515, 1267, 1267, 3123, 1267, 2108, 2109, 3126, 5333, 3127,
	1842, 2399, 5436, 3117, 3931, 4402, 3131, 5126, 2730, 2731,
	4952, 3141, 1988, 1989, 2872, 4400, 2381, 3169, 2774, 3133,
	5301, 4737, 3639, 2151, 3546, 1475, 4017, 1768, 3367, 3483,
	2356, 3250, 3794, 3370, 901, 2357, 2019, 4018, 897, 5085,
	4954, 2463, 3489, 1950, 1991, 3228, 1312, 2274, 3872, 4649,
	2397, 1388, 3213, 5273, 4402, 5274, 3544, 1675, 1764, 3144,
	5185, 4879, 3873, 3871, 4400, 2379, 3198, 1388, 3870, 1675,
	3867, 1675, 2358, 2044, 3156, 3486, 197, 1675, 3640, 3089,
	3212, 3253, 1990, 1260, 5114, 5092, 5441, 4642, 1675, 1675,
	2362, 4635, 3421, 3537, 3229, 2434, 2782, 3158, 3159, 3185,
	3188, 3160, 3161, 2462, 4404, 3175, 3420, 3241, 2872, 4633,
	1039, 3379, 3246, 1921, 1475, 3265, 1475, 3286, 3776, 4637,
	2783, 3339, 3630, 1925, 4661, 4017, 3341, 2784, 3293, 3433,
	3434, 2789, 1154, 3328, 3329, 3822, 1871, 1040, 1267, 4403,
	841, 3441, 3442, 3443, 4643, 2434, 1690, 3457, 3687, 3458,
	3406, 3248, 3891, 4404, 3240, 3239, 2358, 2791, 1413, 2041,
	3255, 3342, 3418, 4753, 3374, 3262, 2417, 3828, 5377, 2103,
	3741, 2359, 2364, 942, 2362, 3424, 945, 3219, 3220, 3222,
	3223, 3224, 3226, 3279, 3280, 3278, 1024, 2640, 4403, 5170,
	4636, 2415, 3459, 1996, 3488, 3440, 3821, 2434, 2441, 2772,
	2376, 3916, 2430, 2775, 3069, 5442, 3337, 4512, 1267, 3541,
	1922, 5356, 2367, 1029, 1267, 1267, 3428, 4834, 3415, 2601,
	4817, 5357, 5401, 3435, 3830, 3436, 1928, 1486, 3425, 1267,
	1926, 1965, 2429, 3345, 3431, 5219, 3348, 5171, 3350, 3640,
	3542, 4698, 3408, 1048, 3547, 3641, 5444, 2018, 2020, 2149,
	3410, 3363, 2458, 5464, 3932, 2359, 2364, 3795, 2771, 2799,
	2439, 2360, 1857, 1859, 4595, 3166, 3378, 2145, 809, 2854,
	2425, 4596, 1267, 1267, 2053, 2595, 3587, 3037, 1267, 4418,
	5469, 3186, 3401, 5127, 3050, 1205, 3451, 4398, 3411, 5128,
	3397, 1267, 1267, 3397, 3829, 1799, 2459, 1267, 1267, 3409,
	2152, 4313, 4153, 1267, 1216, 2374, 3390, 3448, 4722, 2440,
	2011, 5450, 4765, 4501, 4604, 2367, 4260, 1419, 1417, 3035,
	2041, 4517, 3285, 3464, 3450, 3466, 4401, 3468, 4096, 3470,
	3471, 3505, 784, 5136, 4594, 1876, 2426, 2785, 2150, 3465,
	3337, 3467, 5409, 3469, 5339, 2360, 3463, 2787, 1267, 1267,
	1267, 5225, 3480, 3492, 1267, 3494, 2149, 3249, 5152, 5004,
	4721, 4720, 4459, 4005, 1267, 3756, 4638, 3077, 3538, 4816,
	2515, 2142, 3782, 4639, 1416, 4401, 3472, 2365, 1041, 1042,
	1407, 1267, 775, 4433, 4644, 3502, 4947, 3362, 5376, 1976,
	2651, 2041, 1975, 4513, 3834, 3495, 3513, 2718, 3497, 2367,
	4754, 2378, 2317, 5474, 4561, 3214, 3641, 2152, 5334, 3635,
	3633, 3634, 3626, 3627, 3628, 3629, 3631, 3632, 3504, 3503,
	5453, 3783, 1398, 785, 3725, 5408, 2147, 4641, 5340, 1975,
	4192, 2716, 3508, 2715, 3919, 3523, 4913, 2275, 1400, 3920,
	4862, 5013, 1970, 3801, 5066, 2150, 4645, 3565, 3566, 4460,
	3543, 3530, 3569, 4369, 1025, 1026, 3832, 4348, 4299, 4297,
	3545, 2365, 4006, 3996, 2708, 2314, 1395, 3797, 3380, 3373,
	3360, 2773, 3561, 1267, 1267, 1267, 1267, 2012, 786, 2544,
	787, 2538, 1267, 1267, 1267, 950, 5355, 1267, 2531, 2148,
	2523, 2500, 2497, 3289, 4136, 3215, 3536, 850, 1138, 1267,
	1390, 1553, 5137, 1736, 1423, 3833, 1974, 4207, 5191, 4097,
	3170, 1975, 957, 1401, 5155, 2151, 2653, 2361, 2310, 3028,
	4818, 4998, 5344, 1198, 4462, 1267, 4786, 1267, 3680, 3681,
	4283, 3357, 4518, 1844, 1434, 1138, 1390, 4977, 4975, 4054,
	4890, 3813, 1402, 1974, 2043, 3809, 4220, 2312, 3808, 3528,
	3506, 1206, 2585, 4052, 1553, 4254, 3685, 3684, 2577, 3031,
	1198, 1899, 1898, 4045, 2566, 2495, 1390, 1893, 3076, 1553,
	3635, 3633, 3634, 3626, 3627, 3628, 3629, 3631, 3632, 3075,
	1976, 1475, 3576, 5410, 3074, 3663, 3073, 1399, 1385, 3072,
	1043, 1044, 4640, 1384, 2313, 1774, 2230, 4408, 5342, 3187,
	1553, 2361, 3030, 1788, 1385, 1755, 1203, 3029, 2340, 1384,
	1475, 1775, 5485, 3692, 3732, 2709, 2053, 1976, 5452, 1786,
	1475, 1139, 2151, 3682, 4562, 1974, 4519, 3705, 3759, 3714,
	1046, 5079, 5473, 4744, 3191, 4650, 4651, 3718, 4902, 4193,
	4429, 4305, 1267, 3751, 1992, 1993, 1994, 1995, 1997, 1998,
	4194, 2542, 4056, 3941, 1267, 5398, 4294, 4877, 1139, 4875,
	4979, 2454, 3454, 3335, 4069, 2366, 1027, 1028, 889, 4064,
	3755, 4047, 1475, 1757, 3754, 3736, 3735, 3690, 2230, 3429,
	3796, 3340, 3338, 3216, 3217, 2570, 1386, 4046, 2467, 1850,
	4898, 5197, 4885, 3719, 5080, 1267, 3658, 3659, 3660, 3892,
	3757, 2366, 1386, 4897, 4620, 3761, 890, 1877, 3763, 3764,
	4619, 1475, 5411, 3767, 5205, 3768, 5138, 3769, 3772, 3846,
	2970, 3727, 3728, 3729, 3730, 3674, 3570, 5343, 3711, 3723,
	3778, 5188, 1475, 1503, 1475, 4997, 3691, 4568, 3704, 4978,
	3861, 3703, 3863, 4886, 4284, 4055, 4209, 3706, 3707, 2879,
	3689, 4903, 4865, 951, 952, 4261, 1947, 1267, 1267, 5227,
	1949, 2433, 2668, 3784, 3785, 1553, 3879, 3812, 2433, 1946,
	3817, 5402, 3709, 3819, 3710, 942, 1475, 1944, 945, 1144,
	1143, 5400, 3726, 5322, 3902, 3811, 4043, 5198, 3815, 1917,
	5081, 5110, 3918, 1475, 5100, 4873, 1915, 3798, 1887, 3748,
	3749, 3914, 3750, 1885, 4840, 4612, 849, 3737, 4560, 3765,
	4407, 1883, 1881, 1879, 4279, 1873, 1144, 1143, 5294, 1867,
	3655, 1865, 1784, 2339, 1396, 4112, 4065, 3825, 1140, 3845,
	3907, 4295, 4062, 3881, 3752, 3618, 3548, 3868, 1475, 1675,
	3361, 1675, 3762, 3263, 3766, 1553, 3847, 3257, 3205, 3109,
	3860, 2681, 936, 1675, 1675, 3773, 2677, 3961, 2587, 2576,
	2224, 2561, 2261, 1787, 2182, 1140, 3917, 2178, 3894, 4054,
	3896, 3935, 3781, 3900, 1951, 2452, 1825, 3906, 1475, 1785,
	4959, 3862, 4618, 4052, 2643, 1397, 3997, 2610, 3843, 2476,
	1045, 3656, 4091, 4045, 3901, 4090, 1390, 4082, 1970, 3478,
	4013, 3477, 3438, 1388, 3889, 4011, 3831, 954, 953, 2697,
	1904, 3913, 2613, 2496, 3986, 2260, 1675, 3839, 4053, 4048,
	4049, 4050, 4051, 3852, 2258, 3893, 3696, 2086, 1675, 1839,
	1675, 1352, 2878, 197, 197, 3989, 4703, 3856, 4779, 1388,
	4699, 4356, 4355, 3835, 3836, 3936, 3837, 3939, 4680, 5187,
	5374, 4784, 3995, 4708, 2670, 4693, 4631, 3884, 3966, 1948,
	4057, 2669, 4630, 1141, 3875, 4033, 4458, 4261, 1945, 1388,
	4004, 3890, 4133, 5369, 5278, 4022, 1943, 4448, 4372, 3903,
	955, 956, 4056, 4010, 4350, 4320, 3958, 1553, 1916, 3911,
	1553, 4070, 3923, 1142, 3241, 1914, 3915, 1886, 3418, 4318,
	1141, 4047, 1884, 3885, 3886, 902, 3887, 3418, 4296, 3853,
	1882, 1880, 1878, 3854, 1872, 3855, 4000, 4046, 1866, 4007,
	1864, 1783, 3994, 3982, 4060, 1267, 3393, 938, 3385, 3697,
	1142, 3928, 1267, 1267, 3924, 3377, 1267, 1267, 1267, 942,
	1267, 3213, 945, 937, 3369, 3922, 3354, 3352, 3943, 1267,
	2230, 3333, 1146, 3987, 4014, 3130, 3993, 1225, 1267, 3125,
	2494, 2492, 3992, 1267, 2469, 2435, 2396, 2382, 4058, 1553,
	2368, 2296, 1145, 2293, 4063, 4055, 2642, 2290, 1267, 2609,
	2287, 2475, 3695, 3702, 4019, 905, 1553, 4061, 2282, 1146,
	4021, 2280, 2276, 4028, 2267, 1979, 2230, 2230, 1267, 1267,
	3904, 1267, 1267, 1267, 2194, 2444, 4088, 4031, 4032, 1145,
	1252, 124, 4012, 3526, 5392, 3742, 2318, 2306, 2307, 1267,
	3701, 5078, 2188, 1267, 3498, 2230, 2230, 1267, 1267, 1267,
	1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267,
	1267, 1267, 1267, 1267, 1267, 1267, 1267, 3499, 1267, 4098,
	1365, 4115, 3496, 1206, 3326, 5260, 1267, 1267, 2230, 4165,
	2680, 4166, 5146, 1267, 4799, 4715, 4617, 2356, 3419, 4076,
	4089, 4077, 2357, 4078, 1267, 3779, 2335, 1366, 1741, 1157,
	1159, 5015, 3166, 933, 3166, 1390, 1390, 197, 3192, 1267,
	4205, 4125, 4126, 4095, 5008, 1728, 1422, 3804, 3164, 4470,
	3189, 2377, 1941, 1942, 2600, 1455, 4086, 2637, 2632, 5259,
	2678, 2541, 1454, 1980, 2607, 4092, 3527, 124, 4093, 4671,
	4710, 1553, 3290, 1197, 1988, 1989, 3905, 5035, 4239, 1863,
	878, 4900, 4569, 1525, 1475, 1475, 3698, 3699, 3700, 4547,
	4122, 4120, 1988, 1989, 3196, 3826, 3197, 2305, 4053, 4048,
	4049, 4050, 4051, 1475, 1475, 3218, 4132, 2202, 2679, 1475,
	1983, 4204, 4139, 4141, 4142, 1482, 4148, 4256, 4257, 1421,
	5386, 1522, 4155, 5330, 1991, 292, 3351, 4143, 1267, 3197,
	4368, 4445, 4226, 2524, 1493, 4163, 4271, 4272, 3270, 4164,
	4057, 3268, 4280, 2358, 1990, 1367, 4168, 4255, 1033, 1388,
	4162, 4170, 1455, 1455, 4196, 4367, 1267, 895, 1186, 881,
	881, 2362, 1990, 3277, 5406, 3259, 3261, 3201, 4211, 3199,
	1207, 1920, 5196, 5177, 5144, 5140, 4216, 4217, 772, 4197,
	3260, 3200, 5077, 4999, 4996, 4878, 4812, 4456, 4447, 1267,
	1267, 4432, 4236, 3999, 4281, 3400, 3366, 3353, 4282, 2995,
	2302, 2211, 5438, 4213, 4214, 4083, 4899, 3919, 3247, 1688,
	1687, 1681, 3920, 1199, 3738, 2454, 5472, 1699, 301, 3624,
	3625, 1988, 1989, 3919, 1374, 2346, 3152, 4539, 3920, 5142,
	4228, 1267, 1267, 5405, 5163, 4352, 2345, 3151, 1699, 1267,
	1849, 1698, 2359, 2364, 2874, 1699, 1848, 4319, 4300, 4321,
	4263, 3481, 2909, 2346, 2345, 1919, 4229, 5337, 1918, 4455,
	1675, 1675, 5000, 1675, 4940, 4712, 4707, 4706, 4597, 4593,
	4592, 4535, 1675, 4509, 4262, 4144, 3898, 1475, 4275, 3895,
	3484, 2080, 2205, 2224, 2224, 4386, 2079, 4333, 3501, 2685,
	1385, 4267, 5457, 5419, 942, 1384, 5264, 945, 2203, 5181,
	5180, 5179, 3961, 2230, 5109, 4337, 5108, 5054, 4381, 5051,
	4973, 4930, 2227, 4338, 4340, 4869, 4864, 2230, 4863, 4861,
	4860, 4858, 4761, 4736, 4669, 4606, 1385, 4591, 4371, 4370,
	4358, 1384, 2360, 4590, 4482, 4476, 4419, 4364, 4316, 4308,
	4003, 1267, 4002, 3818, 3760, 3485, 3475, 4330, 4444, 2218,
	4325, 3447, 3446, 3445, 3444, 3384, 1385, 3355, 3190, 4394,
	3121, 1384, 1675, 3102, 3101, 4391, 4392, 2803, 1267, 4380,
	2671, 2638, 2631, 4463, 2630, 3213, 1390, 1267, 2629, 4472,
	2628, 2354, 2627, 2539, 2510, 1675, 2367, 2509, 1386, 2508,
	1675, 1675, 1675, 2507, 4425, 4385, 2506, 2505, 2270, 4415,
	4417, 2269, 4406, 2268, 2266, 2193, 4440, 2192, 4464, 1940,
	1939, 1874, 4387, 1675, 1750, 1675, 1749, 1748, 1747, 2213,
	1675, 4243, 1553, 4439, 1386, 1746, 4377, 3286, 1745, 4396,
	1229, 3958, 4405, 1744, 1740, 1738, 4479, 4384, 1388, 1388,
	4467, 1737, 1665, 2352, 1664, 1663, 4395, 1542, 2365, 1541,
	1540, 1539, 4427, 1553, 1386, 1538, 1267, 1267, 1485, 4431,
	1441, 1440, 1267, 1267, 2230, 2730, 4156, 1267, 1267, 4416,
	1267, 4414, 1439, 1438, 3406, 1267, 1437, 1436, 4244, 1435,
	4483, 1433, 1428, 4450, 1427, 4452, 1267, 3418, 1426, 1425,
	4466, 1424, 2353, 4446, 2730, 4171, 1347, 2308, 1161, 1152,
	5083, 4443, 1267, 4648, 4495, 4647, 4245, 4646, 4242, 4498,
	2667, 2518, 4449, 105, 1733, 98, 2442, 4253, 4315, 4497,
	5331, 5451, 4465, 4251, 5481, 2502, 4503, 4200, 4468, 4473,
	5236, 5230, 5229, 5115, 4474, 3950, 3948, 3947, 5336, 4520,
	4481, 4969, 4505, 4480, 967, 4811, 1114, 5226, 5113, 1723,
	982, 5207, 3820, 3295, 4496, 2612, 1875, 4993, 2614, 4252,
	3713, 3057, 1275, 1390, 4248, 4529, 5169, 4543, 4533, 3586,
	5042, 1390, 4499, 4833, 2877, 1553, 1553, 197, 1553, 4506,
	4566, 2084, 3667, 100, 1251, 1390, 1297, 4752, 2361, 4249,
	4751, 4514, 4521, 4451, 4632, 4302, 1675, 1675, 3969, 4748,
	4747, 2215, 2217, 1215, 1556, 3001, 3003, 5272, 2319, 5463,
	2328, 3103, 2953, 1274, 299, 299, 299, 1553, 778, 779,
	1271, 795, 778, 795, 807, 2219, 2221, 848, 1273, 1272,
	1475, 868, 2220, 2104, 1270, 4508, 875, 875, 875, 875,
	2214, 4454, 3988, 3404, 1267, 4029, 1793, 1791, 299, 1116,
	2797, 2861, 3575, 4582, 2077, 1390, 3718, 1390, 1231, 4500,
	1253, 2858, 1414, 4616, 1242, 3693, 3672, 4016, 4235, 4559,
	1020, 4599, 4600, 2707, 992, 3621, 2864, 299, 1403, 2976,
	2224, 2969, 1475, 2965, 4602, 4603, 1385, 3770, 3394, 4658,
	4679, 1384, 1553, 1958, 1475, 4847, 2055, 1475, 3405, 4610,
	4611, 1519, 4688, 4614, 4570, 4691, 1235, 2795, 2068, 3553,
	2717, 4573, 4575, 1267, 4577, 4579, 1553, 4571, 4572, 4576,
	4624, 4023, 3716, 3096, 5253, 4152, 4655, 4246, 4655, 3482,
	2514, 4586, 1364, 1363, 4583, 4247, 1412, 1362, 5213, 4621,
	4622, 5210, 2432, 4755, 3964, 3965, 4627, 2311, 3145, 2807,
	3983, 4673, 4598, 1247, 3460, 3461, 1659, 2658, 1675, 1675,
	4084, 3678, 3961, 1267, 1267, 2230, 4430, 2230, 4672, 4629,
	1752, 4907, 4613, 1259, 2040, 3322, 3321, 5072, 1504, 1388,
	1502, 4623, 1501, 1500, 1386, 5428, 3288, 2445, 4311, 4310,
	4250, 4309, 260, 3520, 1977, 1969, 1475, 257, 259, 4678,
	124, 4695, 258, 4696, 4769, 3824, 4674, 4240, 3722, 1553,
	4714, 1851, 4687, 5328, 1675, 4690, 4335, 3940, 778, 778,
	27, 882, 4711, 883, 4713, 4787, 299, 884, 3155, 4689,
	2338, 1680, 1521, 4286, 26, 25, 3804, 24, 23, 1675,
	1675, 1675, 1675, 1675, 1675, 1675, 4692, 128, 4734, 48,
	29, 28, 5, 22, 170, 4705, 168, 145, 4725, 165,
	4788, 164, 4741, 1553, 4742, 4735, 4770, 4733, 137, 163,
	162, 161, 4745, 160, 159, 1267, 1267, 1267, 4773, 167,
	4776, 158, 4724, 4723, 157, 2227, 2227, 152, 156, 155,
	154, 3958, 153, 1553, 151, 149, 150, 4738, 1267, 4750,
	144, 1267, 1267, 148, 4819, 147, 4746, 4757, 146, 143,
	4764, 1267, 4758, 124, 2230, 124, 4762, 124, 142, 1267,
	1267, 141, 2218, 2218, 140, 139, 138, 136, 169, 135,
	4791, 134, 212, 4772, 133, 132, 1553, 4789, 1675, 131,
	4574, 130, 4810, 129, 861, 862, 4804, 67, 4782, 4796,
	4808, 66, 125, 126, 4801, 4701, 4802, 21, 46, 4825,
	16, 71, 72, 1475, 20, 15, 1388, 41, 103, 117,
	1207, 124, 124, 116, 1388, 1385, 1385, 115, 42, 4820,
	1384, 1384, 112, 2213, 40, 19, 1553, 124, 1388, 124,
	18, 17, 4813, 110, 1267, 109, 4872, 108, 39, 4856,
	37, 4857, 13, 124, 11, 124, 43, 1267, 2166, 14,
	7, 202, 201, 4830, 204, 4842, 1267, 200, 203, 102,
	199, 2230, 4836, 104, 198, 101, 4760, 35, 12, 4659,
	193, 1267, 4853, 4854, 1267, 4989, 4884, 4437, 93, 196,
	195, 4771, 194, 192, 191, 190, 94, 91, 4675, 4676,
	189, 1267, 97, 96, 1267, 188, 92, 95, 1388, 33,
	1388, 1553, 4881, 8, 4882, 4795, 70, 9, 3044, 1475,
	4814, 124, 4066, 1386, 1386, 4910, 120, 4949, 121, 1675,
	1267, 44, 1675, 1675, 1229, 1229, 1229, 89, 88, 87,
	4883, 86, 32, 69, 31, 185, 2366, 236, 235, 234,
	4889, 233, 232, 4880, 4921, 4922, 231, 1390, 230, 229,
	4929, 224, 228, 226, 225, 227, 223, 251, 250, 249,
	248, 247, 246, 245, 239, 4958, 4945, 238, 244, 243,
	1637, 2712, 242, 241, 240, 1553, 237, 254, 1675, 4980,
	82, 4941, 4972, 4943, 4932, 4944, 222, 4927, 221, 5009,
	220, 4988, 218, 4976, 214, 217, 219, 4931, 2066, 216,
	215, 213, 2071, 253, 252, 4942, 83, 183, 184, 2482,
	1186, 81, 182, 181, 1267, 1267, 180, 179, 4655, 178,
	177, 4961, 176, 80, 5010, 4960, 187, 4948, 4966, 4967,
	186, 1267, 2230, 2058, 30, 2, 1, 4968, 0, 5018,
	4995, 5020, 0, 4974, 4950, 4992, 0, 0, 295, 0,
	0, 2064, 4876, 3966, 5012, 2070, 0, 1475, 1475, 0,
	2548, 1475, 1475, 4994, 1475, 1475, 4987, 0, 0, 0,
	0, 0, 0, 5011, 0, 0, 0, 0, 0, 0,
	5017, 0, 1267, 5016, 1267, 0, 1267, 0, 0, 0,
	5052, 5053, 0, 0, 5055, 5056, 1390, 5057, 5058, 5023,
	4791, 0, 0, 5067, 0, 0, 0, 4935, 0, 1267,
	0, 1390, 5031, 5032, 5006, 0, 0, 0, 0, 2971,
	0, 0, 2227, 0, 0, 5065, 0, 0, 0, 0,
	0, 0, 0, 5040, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5095, 0, 0, 0, 0, 0, 0,
	5034, 0, 0, 0, 0, 0, 1385, 0, 0, 2218,
	2230, 1384, 0, 0, 5064, 0, 5063, 4655, 5060, 0,
	0, 5094, 1390, 1390, 0, 0, 2158, 0, 2161, 0,
	124, 0, 4655, 1405, 5087, 5088, 0, 0, 0, 5143,
	5119, 0, 5030, 1390, 795, 0, 1390, 0, 5117, 0,
	1675, 0, 0, 0, 5132, 5133, 0, 0, 795, 0,
	1675, 0, 0, 0, 0, 0, 5103, 5104, 0, 0,
	1430, 5105, 0, 0, 0, 5149, 1267, 1267, 5151, 0,
	2224, 0, 299, 5111, 299, 299, 1267, 1459, 299, 1469,
	0, 0, 0, 4655, 4655, 0, 5156, 0, 0, 5130,
	1483, 0, 0, 0, 1386, 0, 4933, 5116, 868, 4934,
	0, 868, 5141, 0, 4655, 0, 0, 4655, 0, 4992,
	5148, 0, 0, 2213, 0, 1196, 5157, 1138, 0, 0,
	5160, 5164, 0, 5162, 875, 0, 5159, 0, 0, 1267,
	1267, 0, 0, 1267, 0, 5174, 0, 1675, 1475, 5178,
	5161, 1475, 1198, 5204, 0, 0, 0, 5182, 5183, 0,
	0, 0, 2224, 299, 0, 299, 299, 1459, 0, 299,
	299, 4983, 5212, 5215, 5173, 5184, 5186, 0, 1469, 0,
	0, 5223, 5256, 0, 5224, 5194, 5195, 0, 0, 5252,
	0, 5202, 299, 1385, 1701, 0, 5228, 5203, 1384, 0,
	1388, 1385, 1197, 0, 5277, 5014, 1384, 5221, 5275, 0,
	1721, 1267, 1267, 1267, 0, 1385, 5217, 0, 0, 1730,
	1384, 5101, 0, 0, 0, 0, 0, 0, 0, 0,
	4919, 0, 0, 1988, 1989, 0, 1754, 5216, 1469, 0,
	5261, 5220, 0, 299, 299, 0, 1459, 5265, 5268, 1267,
	1139, 0, 0, 5222, 5276, 0, 0, 2019, 5255, 0,
	5314, 0, 0, 0, 0, 1991, 0, 5309, 868, 0,
	299, 299, 0, 5292, 1675, 5291, 0, 5289, 5290, 0,
	5145, 2403, 1819, 5147, 0, 1385, 2408, 1385, 0, 0,
	1384, 1386, 1384, 1827, 2044, 0, 0, 0, 1020, 1386,
	5311, 1637, 0, 1990, 2366, 0, 5354, 0, 5353, 0,
	0, 0, 0, 1386, 5352, 0, 0, 0, 5360, 5327,
	5338, 0, 0, 5335, 5312, 5366, 1267, 5362, 5325, 0,
	0, 0, 2327, 2327, 1475, 5345, 5346, 0, 0, 0,
	0, 2224, 0, 5324, 0, 5375, 5326, 0, 5359, 1388,
	4972, 0, 2377, 5358, 0, 5393, 0, 5368, 5385, 0,
	5367, 2410, 0, 0, 1388, 0, 0, 5383, 0, 0,
	5372, 0, 0, 5381, 5382, 1267, 0, 5396, 5389, 299,
	0, 5387, 0, 1386, 5384, 1386, 0, 0, 0, 0,
	5395, 0, 5212, 0, 5399, 5215, 5397, 0, 0, 0,
	5414, 2213, 1390, 0, 1390, 299, 0, 2404, 1144, 1143,
	5424, 5415, 5404, 5412, 1996, 0, 0, 5416, 5422, 0,
	0, 1229, 5413, 0, 5262, 1388, 1388, 0, 5263, 1637,
	0, 5421, 0, 0, 5423, 5420, 5425, 5430, 5165, 0,
	5166, 0, 0, 1475, 0, 0, 1388, 0, 0, 1388,
	0, 0, 0, 1207, 5446, 1207, 0, 1140, 0, 5445,
	0, 0, 5456, 5455, 0, 0, 0, 0, 2018, 2020,
	5459, 0, 0, 4655, 0, 4655, 5449, 5454, 0, 1267,
	1267, 0, 0, 5467, 0, 0, 0, 5461, 1267, 1267,
	0, 5255, 5458, 0, 0, 0, 5465, 5479, 5470, 0,
	5486, 0, 0, 0, 0, 0, 10, 5491, 5484, 0,
	5488, 5490, 197, 5499, 5475, 6, 5498, 5496, 5487, 5497,
	5492, 5483, 5489, 0, 0, 0, 0, 5502, 0, 0,
	0, 2011, 0, 5504, 2224, 5505, 0, 1475, 0, 0,
	5507, 0, 5509, 5512, 5510, 5508, 0, 0, 5506, 124,
	0, 5517, 3510, 0, 5515, 0, 0, 0, 0, 1267,
	0, 0, 5520, 0, 0, 5522, 5512, 5524, 0, 0,
	5516, 5478, 0, 3406, 0, 0, 0, 0, 5519, 0,
	2224, 2224, 0, 0, 0, 0, 5476, 5477, 0, 0,
	0, 0, 1141, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3406, 778, 0, 2224,
	2224, 1637, 2041, 5310, 0, 0, 0, 0, 0, 0,
	1195, 0, 1142, 0, 0, 0, 0, 0, 299, 1186,
	299, 0, 1186, 1186, 299, 2971, 2971, 0, 0, 0,
	0, 0, 2224, 0, 0, 2400, 0, 1701, 1459, 1469,
	299, 2801, 299, 2191, 0, 0, 2415, 5521, 0, 0,
	299, 0, 795, 0, 0, 0, 0, 2066, 0, 299,
	1551, 0, 0, 2417, 0, 0, 0, 0, 0, 0,
	0, 1146, 2227, 0, 0, 0, 0, 2271, 0, 0,
	2794, 0, 3624, 3625, 0, 3642, 3643, 3644, 2012, 299,
	0, 1145, 0, 0, 0, 0, 299, 2411, 0, 0,
	1207, 0, 2414, 0, 0, 4525, 0, 0, 0, 2218,
	2064, 0, 1680, 0, 2064, 0, 0, 0, 0, 1680,
	0, 0, 0, 0, 1464, 0, 0, 1385, 0, 868,
	0, 0, 1384, 0, 0, 0, 2819, 2820, 2821, 2838,
	2839, 2840, 0, 0, 0, 0, 2407, 0, 0, 0,
	0, 0, 0, 0, 2227, 2043, 0, 2841, 0, 0,
	0, 0, 0, 3639, 0, 0, 0, 875, 5429, 875,
	0, 0, 1668, 0, 0, 0, 0, 0, 0, 875,
	875, 0, 0, 0, 2416, 0, 0, 0, 1374, 0,
	0, 2218, 0, 0, 2044, 1388, 0, 1388, 0, 0,
	0, 0, 1646, 0, 2161, 1660, 1464, 2971, 2971, 2971,
	2971, 0, 0, 1726, 2831, 0, 0, 0, 0, 0,
	0, 0, 0, 2827, 0, 1386, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 1999, 2000, 1992, 1993, 1994, 1995, 1997,
	1998, 0, 0, 3630, 0, 0, 1807, 0, 0, 0,
	0, 0, 0, 2413, 0, 0, 1385, 0, 2412, 1464,
	1464, 1384, 1822, 0, 0, 1229, 0, 0, 0, 1637,
	0, 1385, 0, 0, 0, 0, 1384, 0, 0, 0,
	0, 0, 0, 0, 2832, 2833, 2834, 2835, 0, 0,
	0, 0, 0, 0, 2826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2224, 2224, 0, 0,
	0, 0, 299, 2227, 0, 0, 299, 3646, 0, 0,
	0, 2224, 1852, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1385, 1385, 0, 0, 0, 1384, 1384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2218, 0, 0, 1385, 1386, 299, 1385, 0, 1384, 0,
	3640, 1384, 1637, 0, 0, 0, 0, 0, 0, 1386,
	0, 0, 0, 0, 299, 0, 0, 2836, 2837, 0,
	0, 0, 0, 0, 0, 299, 0, 0, 0, 0,
	0, 0, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 0,
	299, 2829, 0, 0, 778, 0, 299, 0, 0, 0,
	0, 3550, 3551, 0, 0, 0, 0, 0, 868, 0,
	1386, 1386, 1020, 1637, 0, 0, 0, 0, 0, 0,
	0, 2041, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1386, 0, 0, 1386, 0, 0, 0, 0, 1637,
	0, 0, 0, 0, 1459, 299, 0, 0, 2224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	868, 0, 0, 0, 0, 0, 0, 299, 0, 0,
	0, 0, 0, 0, 0, 2611, 0, 0, 0, 0,
	299, 299, 0, 299, 0, 299, 2227, 299, 0, 299,
	124, 0, 0, 124, 0, 124, 0, 0, 0, 0,
	0, 2181, 0, 0, 0, 0, 0, 3641, 0, 0,
	0, 0, 0, 0, 2648, 0, 0, 2649, 0, 2650,
	0, 0, 0, 2218, 0, 0, 0, 0, 0, 0,
	0, 0, 2227, 2227, 299, 299, 299, 299, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	124, 0, 0, 0, 0, 0, 124, 0, 2830, 0,
	0, 2227, 2227, 0, 848, 0, 0, 0, 868, 2218,
	2218, 0, 0, 0, 0, 0, 0, 0, 0, 1988,
	1989, 0, 0, 3648, 3649, 3650, 3651, 0, 0, 0,
	0, 0, 0, 0, 2227, 1637, 0, 0, 2218, 2218,
	0, 0, 0, 2019, 0, 0, 0, 0, 0, 0,
	0, 1991, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2043, 0, 0, 0, 2337,
	0, 2218, 2264, 124, 0, 0, 0, 0, 0, 0,
	2044, 0, 0, 0, 0, 0, 0, 0, 1660, 1990,
	0, 0, 0, 0, 0, 1680, 0, 0, 0, 0,
	0, 0, 0, 2809, 3636, 3637, 3638, 0, 0, 0,
	0, 3635, 3633, 3634, 3626, 3627, 3628, 3629, 3631, 3632,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1385, 0, 1385, 1637, 0, 1384, 0, 1384,
	0, 0, 1660, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2816, 2817, 2818, 2842, 2828,
	2822, 0, 2824, 2825, 2823, 2810, 2811, 2812, 2813, 2814,
	2815, 2971, 2971, 0, 0, 778, 0, 0, 1680, 1680,
	0, 0, 0, 0, 0, 0, 2224, 0, 0, 2224,
	299, 2224, 0, 0, 0, 0, 0, 0, 0, 778,
	1996, 0, 0, 0, 0, 0, 299, 0, 778, 0,
	0, 0, 0, 0, 0, 0, 2794, 0, 0, 0,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1386, 0, 1386, 0, 0, 0, 0, 2064, 0, 0,
	299, 1469, 0, 0, 0, 0, 0, 299, 0, 299,
	1701, 2487, 0, 0, 2018, 2020, 0, 0, 0, 0,
	0, 2971, 2971, 2971, 2971, 2971, 2971, 2971, 2971, 2971,
	2971, 2971, 2971, 2971, 2971, 2971, 2971, 2971, 2971, 2971,
	2971, 0, 2971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 1469, 0,
	299, 795, 0, 795, 0, 0, 0, 0, 0, 0,
	3120, 0, 0, 0, 0, 0, 299, 2011, 0, 299,
	0, 0, 0, 299, 0, 299, 0, 0, 2227, 2227,
	1459, 0, 299, 299, 0, 1469, 1469, 3136, 2224, 0,
	0, 0, 299, 2227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1680, 1680, 1680, 1680, 0, 2218, 2218, 0, 0, 0,
	0, 0, 1988, 1989, 0, 0, 0, 0, 1726, 0,
	2218, 0, 0, 0, 0, 0, 875, 875, 0, 84,
	875, 875, 0, 0, 0, 0, 2019, 0, 2041, 3179,
	0, 0, 0, 0, 1991, 0, 0, 2522, 85, 0,
	0, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2503, 0, 0, 0, 299, 90, 1229, 0, 0,
	0, 0, 0, 2044, 0, 0, 0, 0, 0, 299,
	1374, 0, 1990, 0, 0, 2224, 0, 0, 0, 0,
	868, 2528, 0, 2010, 0, 868, 2559, 0, 0, 0,
	0, 0, 2007, 0, 0, 0, 0, 0, 99, 0,
	5232, 0, 0, 0, 2572, 2574, 1374, 0, 299, 0,
	0, 0, 0, 0, 2012, 0, 0, 0, 2578, 0,
	2227, 0, 3283, 1701, 0, 0, 0, 5237, 0, 0,
	0, 0, 0, 2590, 2591, 2592, 0, 0, 0, 0,
	1014, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4111, 0, 0, 55, 0, 122, 0, 2218, 299, 3343,
	0, 106, 119, 0, 0, 0, 0, 0, 5247, 2733,
	0, 0, 0, 2013, 2014, 2015, 2016, 0, 0, 0,
	0, 2043, 0, 1996, 0, 0, 0, 0, 1701, 0,
	0, 299, 0, 0, 3283, 0, 0, 0, 0, 0,
	0, 0, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3389, 0, 0, 0, 4108, 4109, 0,
	0, 0, 0, 3179, 0, 778, 0, 107, 0, 0,
	0, 0, 0, 0, 1020, 3179, 5243, 2018, 2020, 0,
	0, 0, 0, 0, 0, 0, 2224, 0, 0, 0,
	0, 0, 0, 2659, 2660, 0, 0, 299, 0, 0,
	0, 0, 2875, 0, 0, 0, 2005, 2006, 0, 0,
	124, 124, 0, 124, 0, 0, 0, 299, 1459, 299,
	2000, 1992, 1993, 1994, 1995, 1997, 1998, 0, 0, 3462,
	299, 0, 0, 1459, 0, 1459, 0, 1459, 5240, 0,
	2011, 0, 0, 0, 0, 0, 0, 4172, 4173, 4174,
	4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184,
	4185, 4186, 4187, 4188, 4189, 4190, 4191, 0, 4195, 1637,
	124, 124, 0, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 5233, 0, 0, 299, 299, 299, 299, 1459,
	0, 5245, 1459, 0, 0, 299, 0, 0, 0, 3067,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2224, 0, 0, 0, 0, 0,
	0, 2041, 1637, 0, 0, 0, 111, 0, 0, 0,
	1380, 299, 0, 0, 0, 0, 0, 1637, 0, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5246, 2227, 0,
	0, 2227, 0, 2227, 1222, 0, 0, 0, 1637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2017, 294, 294, 774, 205, 0, 114, 0, 0,
	118, 0, 5251, 0, 0, 2218, 0, 0, 2218, 0,
	2218, 0, 0, 0, 0, 0, 1374, 2012, 0, 1207,
	1229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 1229, 124, 124, 0, 0, 0, 0, 1015,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3154, 1464, 0, 0, 0,
	0, 0, 0, 0, 0, 5238, 0, 1701, 0, 0,
	0, 0, 0, 0, 2043, 263, 5248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5244, 0, 1680, 1680, 0, 0, 0, 0,
	0, 5250, 0, 171, 0, 0, 0, 0, 0, 0,
	2227, 0, 0, 1464, 0, 0, 0, 0, 0, 211,
	0, 0, 0, 5241, 0, 0, 0, 262, 0, 0,
	5239, 0, 0, 1637, 0, 0, 0, 0, 5249, 0,
	0, 0, 0, 255, 0, 0, 0, 2218, 1464, 1464,
	0, 0, 256, 0, 0, 0, 206, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 2008, 2004,
	5234, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998,
	0, 0, 209, 0, 1680, 1680, 1680, 1680, 1680, 1680,
	1680, 1680, 1680, 1680, 1680, 1680, 1680, 1680, 1680, 1680,
	1680, 1680, 1680, 1680, 0, 1680, 0, 0, 0, 84,
	5242, 0, 299, 1637, 5235, 0, 0, 2227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1988, 1989, 0, 0, 90, 0, 299, 0,
	0, 0, 0, 778, 2218, 1646, 0, 0, 778, 0,
	0, 778, 0, 0, 778, 778, 2019, 0, 0, 0,
	778, 0, 3287, 0, 1991, 0, 0, 124, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 99, 0,
	299, 0, 0, 0, 1660, 1374, 1374, 0, 0, 0,
	299, 1988, 1989, 2044, 0, 0, 0, 2032, 2033, 2034,
	0, 0, 1990, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2010, 0, 2019, 0, 0, 0, 795,
	1014, 0, 0, 1991, 0, 0, 0, 0, 299, 0,
	0, 0, 299, 299, 2038, 122, 0, 0, 0, 0,
	0, 106, 119, 0, 0, 1637, 0, 0, 1637, 0,
	0, 0, 2044, 0, 0, 2971, 0, 0, 0, 3624,
	3625, 1990, 3642, 3643, 3644, 0, 3179, 3179, 299, 0,
	3790, 3793, 2010, 0, 0, 0, 0, 3179, 2227, 2191,
	0, 2007, 4117, 0, 0, 0, 3432, 0, 3179, 2191,
	0, 3179, 2191, 0, 0, 2191, 0, 3439, 3790, 0,
	0, 0, 0, 2013, 2014, 2015, 2016, 107, 0, 0,
	299, 299, 3793, 1996, 299, 2218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1637, 0, 0,
	0, 0, 0, 3793, 0, 299, 0, 3866, 2971, 3866,
	3639, 0, 0, 0, 1637, 0, 0, 0, 1459, 0,
	0, 0, 0, 0, 0, 1660, 0, 0, 0, 0,
	0, 0, 2013, 2014, 2015, 2016, 1464, 2018, 2020, 0,
	0, 3179, 1996, 3179, 0, 3899, 3179, 3793, 0, 0,
	3179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3793, 0, 0, 868, 0, 0,
	0, 0, 0, 0, 0, 0, 2227, 0, 0, 0,
	0, 0, 0, 0, 0, 2029, 0, 0, 0, 2039,
	0, 0, 1660, 0, 1660, 0, 2018, 2020, 0, 1459,
	2011, 0, 0, 0, 0, 0, 299, 0, 0, 0,
	3630, 0, 0, 2218, 0, 3093, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 2005, 2006, 3946, 0, 0,
	3962, 3179, 0, 0, 299, 0, 111, 0, 0, 0,
	0, 0, 1469, 0, 2027, 0, 0, 0, 0, 1637,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 2011,
	0, 0, 0, 3389, 0, 0, 1459, 0, 299, 0,
	124, 3179, 0, 778, 0, 0, 0, 0, 0, 0,
	3179, 2041, 0, 0, 3646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 1374, 114, 0, 0,
	118, 0, 0, 0, 0, 2971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3640, 0, 4074,
	0, 261, 0, 0, 0, 0, 124, 0, 0, 1015,
	2041, 2017, 0, 0, 0, 166, 0, 0, 0, 1988,
	1989, 0, 4081, 0, 0, 0, 1701, 0, 2971, 0,
	1459, 299, 0, 299, 0, 0, 0, 2012, 0, 1459,
	0, 0, 1459, 2019, 0, 0, 0, 0, 0, 3679,
	0, 1991, 0, 2971, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2017, 299, 0, 0, 0, 0, 0, 0, 2041, 0,
	2044, 0, 0, 171, 0, 0, 0, 0, 0, 1990,
	1445, 0, 1445, 1445, 0, 0, 2012, 0, 0, 211,
	2010, 0, 3708, 0, 2043, 0, 0, 262, 0, 2007,
	0, 4839, 0, 0, 0, 0, 0, 3721, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 2030, 0, 0,
	4150, 0, 256, 0, 0, 0, 206, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 124, 3746, 0,
	0, 0, 0, 1374, 0, 0, 0, 0, 0, 0,
	0, 1374, 209, 2043, 3641, 0, 0, 4106, 0, 0,
	0, 1548, 0, 0, 0, 0, 0, 1658, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2013, 2014, 2015, 2016, 4892, 0, 0, 0, 0, 0,
	1996, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 778, 778, 2018, 2020, 2031, 2008, 2004, 0,
	2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 0,
	1637, 0, 0, 0, 0, 0, 0, 0, 1808, 1809,
	0, 0, 0, 2005, 2006, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	0, 1637, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2011, 1660, 1660,
	0, 3636, 3637, 3638, 0, 0, 0, 0, 3635, 3633,
	3634, 3626, 3627, 3628, 3629, 3631, 3632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 868, 0, 0, 0, 1930, 124, 0,
	0, 5039, 0, 3721, 0, 0, 0, 1660, 2041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4349, 0, 124, 4351, 0, 0, 4353, 0, 0, 0,
	0, 2528, 3866, 1637, 1637, 0, 1637, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 0, 0,
	0, 0, 0, 0, 5071, 0, 0, 0, 1680, 0,
	0, 3283, 0, 0, 0, 0, 0, 0, 2017, 0,
	0, 0, 0, 0, 0, 1637, 0, 0, 3793, 5093,
	299, 0, 0, 0, 795, 795, 1469, 0, 0, 0,
	0, 0, 0, 0, 2012, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3944, 3945, 0, 0, 0, 0, 0, 2024,
	0, 0, 0, 0, 0, 299, 3389, 0, 0, 3389,
	2191, 0, 0, 1988, 1989, 299, 0, 0, 0, 0,
	0, 1680, 4442, 0, 3283, 4085, 0, 299, 1551, 0,
	1637, 299, 0, 299, 0, 0, 0, 2019, 299, 0,
	0, 2043, 0, 0, 0, 1991, 0, 0, 0, 124,
	0, 0, 0, 0, 1637, 4035, 0, 3179, 299, 0,
	0, 0, 0, 0, 1464, 0, 0, 4059, 0, 1020,
	3179, 0, 0, 0, 2044, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2010, 0, 0, 0, 0, 0,
	0, 299, 0, 2007, 0, 3793, 0, 4129, 3136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4145, 0, 0, 0, 0, 0,
	0, 0, 2176, 0, 0, 2008, 2004, 0, 2001, 1999,
	2000, 1992, 1993, 1994, 1995, 1997, 1998, 1637, 2186, 0,
	1658, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4105, 0, 0, 0, 0, 0, 0, 0, 1660,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4544, 0, 2013, 2014, 2015, 2016, 0, 0,
	0, 0, 0, 0, 1996, 0, 0, 1445, 0, 0,
	0, 1637, 0, 0, 1658, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1680, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2794, 0,
	0, 1637, 0, 0, 0, 0, 0, 3624, 3625, 0,
	3642, 3643, 3644, 0, 0, 299, 0, 0, 2018, 2020,
	0, 1701, 0, 299, 0, 0, 0, 0, 0, 4238,
	0, 0, 0, 2024, 0, 0, 0, 299, 0, 0,
	0, 1680, 0, 0, 1637, 0, 0, 2005, 2006, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1469, 1469, 0, 0, 0, 1680, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1469, 1469, 0, 299,
	1469, 2011, 0, 0, 0, 0, 0, 0, 3639, 0,
	0, 0, 3179, 3179, 1637, 3790, 0, 0, 3866, 3179,
	0, 0, 1988, 1989, 0, 0, 0, 4657, 0, 4657,
	1701, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3179, 0, 2191, 0, 0, 2019, 3790, 0, 1701,
	1701, 299, 3793, 0, 1991, 0, 0, 0, 124, 0,
	0, 0, 1229, 0, 0, 3793, 0, 299, 3793, 0,
	299, 0, 0, 3866, 0, 3866, 0, 0, 0, 0,
	0, 0, 2041, 2044, 0, 0, 0, 0, 0, 1637,
	0, 0, 1990, 0, 0, 3179, 0, 3179, 299, 0,
	0, 0, 0, 2010, 0, 0, 0, 0, 3630, 0,
	0, 0, 2007, 0, 0, 0, 0, 124, 0, 0,
	124, 0, 0, 0, 0, 2024, 0, 0, 0, 0,
	3624, 3625, 0, 3642, 3643, 3644, 0, 0, 0, 0,
	0, 2024, 2017, 0, 0, 3179, 3179, 0, 0, 0,
	0, 3389, 3389, 4116, 0, 0, 0, 0, 3790, 0,
	0, 0, 0, 1637, 0, 0, 0, 0, 2012, 0,
	3539, 299, 0, 0, 0, 0, 0, 0, 2024, 0,
	0, 0, 299, 0, 2024, 0, 0, 0, 0, 0,
	2024, 0, 2512, 2013, 2014, 2015, 2016, 0, 0, 0,
	0, 0, 0, 1996, 0, 0, 0, 0, 0, 0,
	2535, 3639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3640, 2547, 0, 2547, 0,
	0, 0, 0, 0, 2554, 2043, 0, 0, 0, 4378,
	4379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4382, 0, 2144, 0, 0, 0, 2018, 2020, 0,
	0, 124, 0, 1464, 0, 124, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2582, 0, 2024, 2005, 2006, 0, 0,
	2024, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2024, 2603, 2041, 0, 0, 2024,
	0, 3630, 0, 0, 0, 0, 0, 0, 0, 2619,
	2011, 2621, 0, 2623, 0, 2625, 0, 2626, 0, 2008,
	2004, 0, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997,
	1998, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3179, 2191, 0, 2191, 0, 0, 4442,
	0, 0, 0, 2528, 4478, 0, 0, 0, 299, 2572,
	4484, 4485, 2655, 2656, 2657, 2024, 0, 0, 4908, 0,
	4908, 2024, 0, 0, 0, 3646, 0, 0, 0, 0,
	0, 0, 3641, 0, 0, 0, 0, 0, 0, 0,
	0, 2041, 0, 0, 0, 868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3866, 1701, 0, 0,
	1701, 1459, 0, 0, 0, 0, 0, 0, 3640, 0,
	0, 84, 0, 0, 0, 0, 0, 0, 0, 0,
	3793, 0, 299, 0, 0, 0, 909, 0, 0, 0,
	85, 0, 0, 0, 0, 0, 4581, 0, 0, 0,
	0, 2017, 0, 0, 0, 1214, 0, 0, 90, 0,
	0, 0, 920, 0, 0, 0, 4442, 0, 1229, 4657,
	0, 0, 1701, 0, 0, 0, 3179, 2012, 0, 0,
	299, 0, 0, 922, 0, 4608, 0, 0, 0, 0,
	0, 0, 0, 0, 5003, 0, 0, 0, 0, 2041,
	99, 0, 0, 0, 0, 0, 1701, 921, 0, 0,
	2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2024, 0, 0, 0, 299, 299, 0, 0, 0, 3636,
	3637, 3638, 1014, 2024, 2043, 0, 3635, 3633, 3634, 3626,
	3627, 3628, 3629, 3631, 3632, 55, 0, 122, 4150, 0,
	0, 914, 124, 106, 119, 4588, 4589, 0, 930, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 919, 0, 3641, 0, 0, 0, 2975,
	3866, 5062, 0, 0, 0, 0, 0, 0, 4442, 0,
	0, 0, 0, 2024, 0, 0, 0, 0, 3064, 2024,
	0, 0, 0, 0, 0, 0, 0, 0, 4657, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 107,
	0, 0, 0, 4657, 0, 1464, 0, 918, 2008, 2004,
	0, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998,
	0, 0, 0, 0, 843, 0, 0, 0, 0, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 916, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4657, 4657, 0, 0, 0, 0,
	0, 0, 0, 0, 3122, 0, 2528, 1445, 0, 0,
	0, 1445, 0, 1445, 0, 4657, 0, 299, 4657, 0,
	0, 0, 0, 0, 0, 0, 0, 2572, 2191, 0,
	2535, 1551, 0, 0, 1464, 0, 0, 0, 0, 1701,
	0, 1701, 3636, 3637, 3638, 929, 0, 0, 0, 3635,
	3633, 3634, 3626, 3627, 3628, 3629, 3631, 3632, 0, 0,
	0, 4831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5192, 0, 111, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4908, 0, 4831, 299, 0, 0, 4803, 0,
	4805, 4806, 4807, 0, 4809, 0, 0, 0, 0, 0,
	0, 84, 0, 0, 0, 0, 0, 0, 911, 0,
	0, 3179, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 0, 0, 0, 205, 0, 114,
	0, 0, 118, 0, 2733, 0, 0, 0, 90, 0,
	0, 915, 0, 0, 0, 299, 1658, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1988, 1989, 0, 261, 0, 0, 0, 0, 0, 4150,
	0, 1015, 0, 0, 0, 0, 0, 166, 0, 0,
	99, 0, 0, 842, 2019, 0, 0, 4859, 0, 0,
	0, 0, 1991, 0, 1701, 0, 0, 0, 0, 925,
	0, 0, 0, 0, 0, 0, 0, 913, 0, 2733,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 2044, 1014, 0, 0, 0, 0, 0, 0, 3365,
	1990, 0, 0, 0, 0, 55, 0, 122, 0, 0,
	2535, 2010, 5347, 106, 119, 171, 0, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	910, 211, 0, 0, 0, 0, 923, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 4442, 0, 0,
	917, 0, 0, 0, 256, 3437, 0, 0, 206, 0,
	0, 0, 0, 210, 0, 844, 0, 0, 3532, 107,
	0, 0, 0, 0, 0, 3449, 912, 3452, 0, 0,
	0, 0, 0, 0, 1804, 0, 0, 0, 4962, 0,
	0, 2013, 2014, 2015, 2016, 3624, 3625, 0, 3642, 3643,
	3644, 1996, 927, 928, 3179, 924, 0, 0, 0, 0,
	0, 0, 0, 0, 4657, 0, 4657, 0, 0, 1701,
	0, 0, 1478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3624, 3625, 0, 3642, 3643, 3644, 0, 0,
	2024, 0, 0, 3491, 1658, 3493, 1658, 0, 0, 1214,
	1214, 1214, 0, 3500, 0, 2018, 2020, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2024, 0, 0, 0, 0, 0, 3639, 0, 0, 0,
	0, 0, 0, 0, 2005, 2006, 3179, 0, 0, 1445,
	0, 0, 0, 0, 0, 0, 0, 3529, 0, 1650,
	0, 0, 0, 3283, 0, 1666, 0, 0, 0, 0,
	0, 2024, 0, 3639, 0, 2024, 0, 0, 2011, 3179,
	0, 1660, 0, 0, 0, 0, 0, 0, 111, 2024,
	0, 0, 0, 3283, 0, 1703, 0, 1709, 0, 1715,
	2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
	2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
	2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
	2024, 2024, 2024, 2024, 2024, 2024, 3630, 0, 0, 0,
	0, 2024, 0, 2024, 2024, 2024, 2024, 205, 0, 114,
	0, 0, 118, 0, 0, 2975, 2975, 0, 0, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	2024, 1815, 0, 3630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 1829, 0, 1834, 0, 0,
	0, 1015, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 1464, 0, 0, 0, 0,
	3646, 0, 0, 0, 1988, 1989, 0, 0, 0, 2017,
	3647, 2024, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 2019, 2572,
	0, 0, 0, 0, 0, 2012, 1991, 3646, 0, 0,
	0, 2024, 0, 3640, 2024, 0, 1900, 2024, 0, 1906,
	2024, 0, 0, 0, 0, 171, 2024, 2024, 2024, 2024,
	2024, 2024, 2024, 0, 0, 2044, 0, 0, 0, 0,
	0, 211, 0, 0, 1990, 0, 0, 0, 0, 262,
	3640, 0, 0, 0, 0, 2010, 0, 0, 0, 0,
	0, 0, 0, 0, 2007, 255, 0, 0, 0, 0,
	0, 0, 2043, 0, 256, 0, 0, 0, 206, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 2024, 0, 2041, 3645, 0, 2975, 2975, 2975,
	2975, 0, 0, 2024, 1802, 2024, 0, 0, 0, 0,
	2024, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 0,
	0, 2041, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2013, 2014, 2015, 2016, 0,
	0, 0, 0, 0, 2065, 1996, 0, 0, 0, 0,
	2078, 0, 0, 0, 0, 0, 2008, 2004, 3731, 2001,
	1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 0, 0,
	3641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1988, 1989, 0, 2021, 2022, 2023, 2032, 2033, 2034, 2946,
	2947, 2948, 2949, 2942, 2943, 2944, 2945, 0, 0, 2018,
	2020, 0, 0, 2025, 2019, 0, 1445, 3641, 0, 0,
	1658, 1658, 1991, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 0, 0, 0, 0, 2005, 2006,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 3786, 0, 0, 0,
	1990, 0, 0, 0, 0, 0, 2138, 2138, 2138, 0,
	0, 2010, 2011, 0, 0, 0, 0, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 0, 0, 2922, 2923,
	2924, 2925, 0, 0, 0, 0, 0, 0, 3842, 3844,
	0, 0, 2535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2934, 2935, 2936, 2937, 2930, 2931, 2932, 2933,
	2938, 2939, 2940, 2941, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3636, 3637, 3638,
	0, 0, 0, 0, 3635, 3633, 3634, 3626, 3627, 3628,
	3629, 3631, 3632, 2041, 0, 0, 0, 0, 0, 0,
	0, 2013, 2014, 2015, 2016, 0, 0, 0, 0, 0,
	0, 1996, 0, 0, 3636, 3637, 3638, 0, 0, 0,
	0, 3635, 3633, 3634, 3626, 3627, 3628, 3629, 3631, 3632,
	0, 0, 0, 0, 0, 0, 2918, 2919, 2920, 2921,
	2926, 2927, 2928, 2929, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2017, 2029, 0, 1214, 0, 2039, 0,
	0, 0, 0, 0, 0, 2018, 2020, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2012,
	0, 0, 1263, 0, 0, 2035, 0, 2036, 0, 0,
	0, 0, 3984, 0, 2005, 2006, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2024, 2024, 2027, 2024, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2011, 0,
	0, 0, 0, 0, 298, 298, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2043, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 943, 0,
	0, 0, 0, 0, 0, 0, 0, 2037, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 943, 2026, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4087,
	0, 1658, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2024, 0,
	2008, 2004, 0, 2001, 1999, 2000, 1992, 1993, 1994, 1995,
	1997, 1998, 0, 0, 0, 0, 0, 0, 0, 4101,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2017,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2012, 0, 0, 2024, 2024,
	0, 2975, 2975, 0, 0, 2024, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3645, 3645, 0, 0, 2024,
	2024, 0, 0, 0, 0, 0, 2030, 0, 0, 2024,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2024, 0, 0, 1387, 0, 0, 0,
	0, 0, 0, 0, 0, 2024, 0, 0, 0, 0,
	0, 0, 2043, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2975, 2975, 2975, 2975, 2975, 2975, 2975, 2975, 2975,
	2975, 2975, 2975, 2975, 2975, 2975, 2975, 2975, 2975, 2975,
	2975, 0, 2975, 3645, 3645, 3645, 3645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2028, 0, 0, 2635, 0, 0, 0, 0, 2024, 0,
	0, 0, 2002, 2003, 2009, 2031, 2008, 2004, 0, 2001,
	1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 0, 0,
	0, 0, 0, 3599, 0, 0, 0, 3600, 0, 0,
	0, 0, 2665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2706, 0,
	2710, 0, 0, 0, 0, 0, 0, 2724, 0, 0,
	1214, 0, 0, 0, 0, 0, 2735, 2736, 2737, 2738,
	2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748,
	2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758,
	2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768,
	2769, 2770, 0, 2776, 0, 2778, 2779, 2780, 2781, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2024, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2805, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2065, 0, 0, 0, 2856, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2886, 2889, 2892, 2895, 0, 0, 2901,
	2902, 2903, 2904, 2905, 2906, 2907, 0, 2024, 2024, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2535, 0,
	0, 0, 0, 0, 0, 0, 0, 2967, 175, 2978,
	2980, 2985, 0, 0, 0, 0, 0, 84, 0, 52,
	51, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	78, 0, 0, 4426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4436, 90, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 73, 0, 0, 0, 2535,
	0, 2535, 54, 0, 173, 0, 4457, 0, 0, 3313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 53, 0, 0, 99, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3303, 3301, 0, 0, 0, 0, 0,
	0, 3305, 3307, 3297, 56, 74, 0, 0, 0, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 63, 4502,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 55, 0, 122, 0, 0, 0, 0, 0, 106,
	119, 0, 0, 0, 0, 3323, 0, 0, 75, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 58, 0, 0, 0, 2024, 2024,
	0, 0, 2024, 3645, 3645, 2024, 0, 0, 0, 2024,
	0, 0, 0, 0, 0, 107, 2024, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2024,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 298, 298, 0, 0, 298, 0,
	0, 0, 2024, 2024, 2024, 2024, 2024, 0, 0, 0,
	0, 0, 2024, 0, 2024, 0, 0, 3645, 3645, 3645,
	3645, 3645, 3645, 3645, 3645, 3645, 3645, 3645, 3645, 3645,
	3645, 3645, 3645, 3645, 3645, 3645, 3645, 0, 0, 0,
	3645, 0, 0, 2024, 2024, 0, 76, 0, 0, 0,
	0, 0, 0, 0, 0, 2024, 0, 3299, 0, 0,
	0, 0, 0, 0, 2024, 0, 0, 0, 3315, 0,
	0, 0, 0, 298, 0, 298, 298, 0, 0, 298,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3314, 3304, 3302, 3306, 3308, 3298, 3300, 3316,
	3318, 0, 943, 0, 0, 0, 0, 0, 0, 0,
	3310, 3312, 3320, 0, 3346, 3347, 0, 3349, 0, 0,
	0, 0, 0, 0, 111, 0, 0, 0, 0, 0,
	2024, 0, 0, 0, 0, 0, 0, 0, 0, 4677,
	0, 0, 59, 0, 0, 0, 0, 3324, 2024, 0,
	0, 1299, 0, 298, 298, 2535, 0, 0, 0, 62,
	0, 0, 0, 0, 65, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 0, 2024,
	298, 298, 64, 205, 0, 114, 0, 0, 118, 0,
	0, 0, 0, 0, 60, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 2024, 2024, 61, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 68, 84, 0,
	0, 0, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 0, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 2535,
	0, 3473, 0, 0, 0, 90, 0, 0, 0, 0,
	4783, 0, 3317, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 99, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 211, 0, 0,
	2024, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2045, 2046, 0,
	0, 255, 0, 0, 0, 0, 3325, 0, 0, 1014,
	256, 0, 1214, 0, 206, 3309, 3311, 3319, 0, 210,
	0, 0, 0, 0, 122, 0, 0, 2024, 2024, 0,
	106, 119, 2024, 2024, 0, 0, 2024, 2024, 0, 0,
	209, 2024, 0, 3, 0, 2024, 0, 0, 0, 0,
	2024, 0, 0, 0, 0, 3533, 3534, 0, 0, 0,
	0, 3540, 0, 0, 0, 2975, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1391, 0, 0, 0, 0,
	3554, 3555, 0, 0, 0, 0, 2856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 0, 0, 0, 0, 4894, 0, 0, 0,
	84, 0, 52, 51, 0, 0, 0, 0, 0, 0,
	0, 3564, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 0, 0, 3578, 2975, 0,
	0, 0, 0, 0, 0, 0, 0, 90, 0, 0,
	0, 0, 0, 0, 3590, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 54, 0, 173, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2535, 0, 0, 0, 0, 0, 53, 0, 2160, 99,
	1387, 0, 0, 0, 298, 0, 0, 2024, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 2160, 298, 0, 0, 0, 0, 56, 74, 0,
	943, 0, 0, 0, 0, 0, 57, 0, 2547, 943,
	0, 63, 0, 0, 2024, 2024, 5482, 0, 0, 0,
	0, 0, 0, 0, 55, 111, 122, 0, 0, 0,
	0, 0, 106, 119, 0, 2985, 2985, 2985, 0, 298,
	0, 75, 0, 0, 0, 0, 298, 0, 0, 0,
	0, 0, 2138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5029, 1658, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 58, 0, 0,
	3683, 0, 0, 0, 205, 0, 114, 0, 0, 118,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 2024, 2024, 2024, 0, 0, 0, 0, 0, 0,
	0, 0, 2024, 2024, 3645, 2975, 0, 0, 0, 0,
	261, 2024, 0, 0, 2024, 0, 0, 0, 1015, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3645, 2975, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 76,
	0, 0, 0, 0, 2024, 0, 0, 0, 0, 0,
	0, 0, 2024, 2975, 0, 1214, 0, 0, 0, 0,
	2024, 0, 171, 0, 0, 0, 0, 1214, 0, 0,
	0, 2024, 0, 2024, 0, 0, 0, 0, 211, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2024, 0,
	0, 0, 255, 0, 0, 5150, 0, 0, 3823, 0,
	0, 256, 0, 0, 0, 206, 0, 111, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 0, 0, 0, 0,
	0, 209, 298, 0, 0, 0, 943, 0, 0, 0,
	0, 0, 62, 0, 0, 0, 0, 65, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	3882, 3883, 0, 0, 3645, 64, 205, 0, 114, 0,
	0, 118, 0, 5334, 0, 298, 0, 60, 0, 0,
	0, 174, 0, 5206, 0, 0, 0, 0, 0, 61,
	0, 0, 0, 0, 298, 2024, 3645, 0, 0, 2024,
	0, 0, 261, 0, 0, 298, 0, 0, 0, 0,
	68, 0, 298, 0, 0, 0, 166, 0, 3645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	298, 0, 0, 172, 0, 0, 298, 0, 0, 0,
	0, 0, 0, 5270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 0, 0, 0, 0, 0, 298, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	943, 298, 0, 298, 255, 298, 0, 298, 0, 298,
	0, 0, 0, 256, 0, 0, 0, 206, 0, 0,
	0, 0, 210, 1391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1391, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 298, 298, 298, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2024, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2724, 0,
	0, 0, 0, 0, 0, 4103, 4104, 0, 2024, 4107,
	0, 1391, 0, 4110, 0, 0, 0, 0, 1391, 0,
	0, 0, 4114, 0, 0, 0, 0, 0, 0, 0,
	0, 4121, 0, 0, 1391, 0, 3683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4157, 4158, 0, 4159, 4160, 4161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4167, 0, 1391, 0, 4169, 0, 0, 0,
	0, 0, 2024, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4198,
	4199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4210, 1988, 1989,
	0, 2021, 2022, 2023, 2032, 2033, 2034, 0, 0, 0,
	1387, 0, 4219, 0, 0, 0, 2024, 0, 0, 0,
	0, 2025, 2019, 0, 0, 0, 1387, 0, 0, 0,
	1991, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 2038, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2044,
	298, 0, 0, 0, 0, 0, 0, 943, 1990, 943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	0, 0, 0, 0, 0, 0, 0, 0, 2007, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 0,
	943, 0, 0, 0, 0, 0, 0, 0, 0, 4303,
	0, 0, 0, 0, 0, 0, 298, 0, 0, 298,
	0, 0, 0, 298, 0, 298, 0, 0, 0, 0,
	0, 0, 298, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 4334, 0, 0, 0, 0, 0, 2013,
	2014, 2015, 2016, 0, 0, 0, 0, 0, 0, 1996,
	0, 0, 0, 0, 0, 0, 0, 1988, 1989, 0,
	2021, 2022, 2023, 2032, 2033, 2034, 0, 0, 0, 0,
	0, 0, 0, 0, 4359, 4360, 0, 0, 0, 0,
	2025, 2019, 0, 0, 0, 0, 0, 0, 0, 1991,
	0, 0, 2029, 0, 0, 0, 2039, 1391, 0, 1391,
	2038, 298, 0, 2018, 2020, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1391, 298, 0, 0, 2044, 0,
	0, 0, 0, 2035, 0, 2036, 0, 1990, 0, 298,
	0, 0, 2005, 2006, 0, 0, 0, 2231, 2010, 0,
	0, 0, 0, 0, 1391, 0, 0, 2007, 0, 0,
	0, 2027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2011, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2138, 0, 0, 0, 2037, 0, 0, 943, 0,
	4475, 0, 0, 0, 0, 0, 0, 0, 2013, 2014,
	2015, 2016, 0, 0, 0, 0, 2026, 0, 1996, 0,
	0, 0, 1391, 0, 0, 0, 0, 2041, 0, 0,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2029, 0, 0, 0, 2039, 0, 0, 0, 0,
	0, 0, 2018, 2020, 0, 0, 0, 0, 0, 4522,
	4523, 0, 0, 0, 0, 4527, 4528, 2017, 0, 0,
	4531, 4532, 2035, 0, 2036, 0, 0, 298, 4536, 0,
	0, 2005, 2006, 0, 0, 0, 0, 0, 0, 4540,
	0, 0, 0, 2012, 0, 0, 0, 298, 0, 298,
	2027, 0, 0, 0, 0, 4545, 0, 0, 0, 0,
	298, 0, 0, 0, 0, 2011, 0, 0, 0, 0,
	0, 0, 0, 0, 2030, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2043, 0, 0, 0, 2037, 298, 298, 298, 298, 0,
	0, 0, 0, 1391, 1391, 298, 0, 0, 0, 0,
	298, 0, 0, 0, 1391, 2026, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1391, 298, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2028, 1391,
	0, 0, 0, 0, 0, 0, 0, 1214, 0, 0,
	2002, 2003, 2009, 2031, 2008, 2004, 2017, 2001, 1999, 2000,
	1992, 1993, 1994, 1995, 1997, 1998, 0, 0, 0, 0,
	0, 2852, 0, 0, 0, 2853, 0, 0, 0, 0,
	0, 0, 2012, 0, 1391, 0, 1391, 0, 1391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1391, 1391, 0, 0,
	0, 0, 0, 2030, 0, 0, 4702, 0, 0, 0,
	1391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1391, 0, 0, 1391, 1391, 1391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2043,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4739, 4740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2028, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2002,
	2003, 2009, 2031, 2008, 2004, 0, 2001, 1999, 2000, 1992,
	1993, 1994, 1995, 1997, 1998, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4550, 0, 0, 0, 0, 0,
	2231, 2231, 1391, 0, 0, 0, 0, 0, 4826, 4827,
	4828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1387, 0, 0, 0, 0, 0, 0, 0,
	0, 2724, 0, 0, 4837, 4838, 3002, 0, 0, 0,
	0, 0, 0, 1988, 1989, 0, 2021, 2022, 2023, 2032,
	2033, 2034, 4846, 4849, 0, 0, 0, 0, 1387, 0,
	0, 0, 0, 0, 0, 0, 2025, 2019, 0, 0,
	0, 3000, 0, 0, 0, 1991, 3004, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 0, 2160, 0,
	0, 0, 0, 0, 0, 1391, 0, 0, 3005, 0,
	298, 0, 0, 0, 2044, 0, 0, 0, 0, 0,
	943, 0, 0, 1990, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2010, 0, 0, 0, 0, 0,
	0, 0, 0, 2007, 0, 0, 0, 0, 0, 3006,
	4909, 0, 0, 0, 0, 0, 0, 0, 298, 4917,
	0, 0, 298, 298, 0, 0, 0, 0, 0, 1391,
	0, 0, 0, 0, 4925, 0, 1391, 1214, 3007, 0,
	0, 0, 0, 0, 0, 1391, 0, 0, 0, 0,
	0, 0, 0, 0, 4936, 0, 0, 4938, 298, 0,
	0, 0, 1391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3008, 0, 0,
	0, 0, 0, 4963, 2013, 2014, 2015, 2016, 0, 0,
	0, 0, 0, 0, 1996, 0, 0, 0, 0, 0,
	298, 298, 0, 0, 298, 0, 0, 0, 0, 0,
	0, 2160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2029, 0, 3009,
	0, 2039, 0, 0, 0, 0, 0, 0, 2018, 2020,
	0, 0, 0, 0, 0, 0, 0, 3010, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3011, 2035, 0,
	2036, 0, 0, 828, 0, 0, 0, 2005, 2006, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3012, 0, 811, 0, 2027, 0, 0, 812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2011, 0, 0, 0, 0, 0, 0, 1391, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 813, 0, 943, 5070, 0, 0, 0, 5074,
	0, 0, 0, 814, 298, 0, 0, 0, 0, 0,
	2037, 0, 0, 0, 0, 0, 0, 2231, 0, 0,
	0, 0, 0, 0, 0, 815, 0, 0, 298, 0,
	0, 2026, 0, 0, 0, 0, 0, 0, 1387, 0,
	0, 0, 2041, 3013, 0, 0, 0, 0, 834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1391, 0,
	816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 817, 810, 0, 0, 0,
	0, 0, 2017, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3014, 3015, 0, 0, 818,
	0, 0, 0, 0, 819, 0, 0, 0, 2012, 0,
	0, 298, 0, 298, 0, 0, 0, 0, 0, 0,
	2724, 843, 0, 3016, 0, 0, 0, 0, 0, 4849,
	0, 0, 0, 3021, 0, 0, 0, 0, 0, 2030,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 833,
	0, 298, 0, 0, 3017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1391, 3018,
	0, 0, 0, 0, 0, 2043, 0, 0, 0, 0,
	1391, 0, 1391, 1214, 0, 0, 0, 0, 1391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1391,
	1391, 3019, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 830, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3020, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2028, 5288, 5288, 5288, 0, 0, 0,
	0, 0, 0, 0, 0, 2002, 2003, 2009, 2031, 2008,
	2004, 0, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997,
	1998, 0, 0, 0, 0, 0, 0, 0, 0, 840,
	0, 821, 5313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1387, 1387, 0,
	1988, 1989, 0, 2021, 2022, 2023, 2032, 2033, 2034, 0,
	0, 0, 841, 0, 822, 0, 0, 0, 0, 0,
	0, 0, 0, 2025, 2019, 0, 0, 0, 0, 0,
	0, 0, 1991, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5288,
	842, 2044, 0, 0, 0, 0, 0, 0, 823, 943,
	1990, 0, 0, 838, 839, 0, 836, 0, 0, 0,
	0, 2010, 0, 0, 831, 0, 0, 824, 0, 0,
	2007, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 825, 0, 832, 0, 0,
	0, 0, 0, 0, 0, 0, 826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 827, 0, 0, 0, 0, 835, 0, 0,
	0, 2013, 2014, 2015, 2016, 0, 0, 0, 0, 0,
	0, 1996, 844, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 0,
	0, 0, 5288, 5471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2029, 0, 0, 0, 2039, 0,
	0, 0, 0, 0, 0, 2018, 2020, 0, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2035, 0, 2036, 0, 0,
	0, 0, 0, 0, 2005, 2006, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2027, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 0, 2011, 0,
	0, 1391, 1391, 0, 0, 0, 0, 298, 0, 0,
	0, 298, 0, 298, 0, 0, 0, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1391, 1387, 828,
	0, 0, 0, 0, 0, 0, 0, 2037, 0, 0,
	0, 0, 0, 0, 0, 1391, 0, 0, 1276, 0,
	811, 0, 0, 0, 0, 812, 0, 1391, 2026, 0,
	1391, 0, 0, 0, 0, 0, 0, 0, 0, 2041,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2231, 0, 0,
	0, 1391, 0, 0, 0, 0, 0, 0, 813, 0,
	300, 300, 300, 0, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 0, 0, 0, 0, 0, 1988, 1989,
	0, 2021, 2022, 2023, 2032, 2033, 2034, 0, 0, 2017,
	0, 815, 0, 0, 300, 0, 0, 0, 0, 0,
	0, 2025, 2019, 0, 0, 0, 0, 0, 0, 0,
	1991, 0, 0, 0, 834, 2012, 0, 0, 0, 0,
	0, 2038, 0, 300, 0, 0, 0, 0, 0, 2231,
	0, 0, 0, 0, 0, 0, 816, 0, 0, 2044,
	0, 0, 0, 0, 0, 0, 2030, 0, 1990, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	0, 817, 810, 0, 0, 0, 0, 0, 2007, 0,
	0, 0, 0, 0, 0, 1387, 0, 0, 0, 0,
	0, 0, 2043, 1387, 0, 818, 0, 0, 0, 0,
	819, 0, 0, 0, 0, 0, 0, 2160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 843, 0, 0,
	0, 0, 0, 0, 0, 0, 1391, 304, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 833, 0, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2013,
	2014, 2015, 2016, 0, 0, 0, 0, 0, 0, 1996,
	2028, 0, 0, 0, 0, 0, 0, 2160, 0, 2160,
	0, 0, 2002, 2003, 2009, 2031, 2008, 2004, 0, 2001,
	1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 0, 0,
	1391, 298, 1391, 0, 0, 0, 1391, 4119, 830, 0,
	0, 0, 2029, 935, 1391, 1391, 2039, 298, 0, 0,
	298, 0, 0, 2018, 2020, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 935, 2035, 0, 2036, 0, 0, 298, 0,
	0, 0, 2005, 2006, 0, 0, 0, 1391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2027, 0, 0, 0, 0, 0, 1391, 0, 0,
	0, 0, 0, 0, 0, 0, 2011, 821, 0, 1391,
	0, 1391, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 841, 0,
	822, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1391, 0,
	0, 1391, 0, 0, 0, 0, 2026, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 842, 2041, 0, 0,
	0, 0, 0, 0, 823, 0, 0, 0, 0, 838,
	839, 0, 836, 0, 0, 0, 0, 0, 0, 0,
	831, 0, 0, 824, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2017, 0, 0,
	1391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 825, 0, 832, 0, 0, 0, 1391, 0, 0,
	0, 0, 826, 2012, 0, 0, 0, 2231, 2231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 827, 0,
	0, 0, 0, 835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2030, 0, 2231, 2231, 844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 2231,
	2043, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1391, 1391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 0, 0, 0, 0, 2028, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2002, 2003, 2009, 2031, 2008, 2004, 0, 2001, 1999, 2000,
	1992, 1993, 1994, 1995, 1997, 1998, 0, 0, 0, 2160,
	0, 0, 0, 0, 0, 3602, 0, 0, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	300, 300, 0, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1391, 1391, 0, 1391, 0, 0, 0, 2160, 0,
	0, 0, 0, 1391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2231, 0, 0, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 2231, 300,
	1557, 300, 300, 0, 0, 300, 300, 0, 0, 0,
	0, 1557, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2160, 2160, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1391, 0, 2160, 0, 298, 2160, 0,
	0, 0, 1557, 0, 0, 0, 0, 1391, 0, 0,
	0, 0, 0, 0, 0, 0, 1391, 0, 0, 0,
	0, 1391, 1391, 1391, 0, 0, 0, 0, 0, 300,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1391, 0, 1391, 0, 1557, 0,
	0, 1391, 0, 1391, 0, 1557, 300, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1557, 1988, 1989, 0, 2021, 2022, 2023, 2032, 2033,
	2034, 0, 0, 1268, 1391, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2231, 2019, 0, 0, 0,
	0, 0, 0, 0, 1991, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2038, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1557, 0, 2044, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 2010, 0, 0, 0, 0, 0, 1554,
	0, 0, 2007, 0, 0, 300, 0, 0, 0, 0,
	1676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 0, 1391, 0, 0, 0, 0, 0,
	0, 0, 1391, 0, 0, 0, 1391, 1391, 0, 1391,
	0, 1676, 0, 0, 0, 0, 1391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1391, 1391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2013, 2014, 2015, 2016, 0, 1391, 0,
	0, 0, 0, 1996, 0, 0, 0, 1676, 0, 0,
	0, 0, 0, 0, 1676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1676, 0, 0, 0, 0, 0, 1391, 0, 1391, 0,
	0, 0, 0, 0, 0, 0, 2029, 0, 0, 0,
	2039, 0, 0, 0, 0, 0, 0, 2018, 2020, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1391, 0, 0, 0, 2035, 0, 2036,
	0, 0, 0, 0, 0, 0, 2005, 2006, 0, 0,
	1676, 0, 0, 0, 0, 0, 0, 1391, 0, 0,
	0, 0, 0, 0, 2160, 2027, 2160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2011, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1391,
	1391, 0, 0, 0, 0, 0, 2231, 0, 2231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2037,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1557, 0, 0, 0, 0, 300, 300, 300, 0,
	1391, 0, 0, 0, 0, 1391, 300, 0, 0, 0,
	0, 2041, 0, 0, 0, 300, 0, 0, 0, 0,
	0, 1557, 0, 0, 0, 0, 0, 0, 0, 0,
	1391, 1391, 1391, 1391, 1391, 1391, 1391, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 300, 0, 1391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2017, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2012, 0, 0,
	0, 0, 0, 0, 0, 2231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1557,
	0, 0, 0, 0, 0, 0, 0, 1391, 2030, 1391,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2043, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1554, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2231, 0, 0, 2201, 0, 0, 0, 0,
	0, 0, 0, 0, 2201, 0, 0, 0, 0, 0,
	1676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1391, 0, 2002, 2003, 2009, 2031, 2008, 2004,
	0, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998,
	1391, 0, 0, 1391, 1391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	1557, 1557, 300, 0, 0, 0, 0, 0, 1391, 0,
	0, 1557, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1988, 1989, 0,
	2021, 2022, 2023, 2032, 2033, 2034, 1391, 1557, 1554, 1391,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2019, 0, 0, 0, 0, 0, 0, 0, 1991,
	300, 0, 0, 0, 0, 0, 1557, 0, 0, 0,
	2038, 300, 0, 0, 0, 0, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2044, 0,
	0, 0, 0, 2231, 300, 0, 300, 1990, 0, 0,
	0, 0, 300, 0, 0, 0, 0, 0, 2010, 0,
	0, 1557, 0, 1557, 0, 1557, 0, 2007, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1557, 1557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1557, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 1391, 0, 1557,
	0, 0, 1557, 1557, 1557, 0, 0, 0, 0, 0,
	0, 0, 1391, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 300, 0, 300,
	0, 300, 0, 300, 0, 300, 0, 0, 2013, 2014,
	2015, 2016, 0, 0, 0, 0, 0, 0, 1996, 1676,
	1676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1554, 2231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1391, 1391, 0, 0, 0, 0, 0,
	300, 300, 300, 300, 300, 0, 1676, 0, 0, 0,
	0, 2029, 0, 0, 1391, 2039, 0, 1391, 0, 0,
	0, 1391, 2018, 2020, 0, 1555, 0, 0, 0, 0,
	0, 1391, 0, 0, 0, 1676, 1677, 0, 0, 0,
	0, 0, 2035, 0, 2036, 0, 0, 0, 0, 0,
	0, 2005, 2006, 0, 0, 0, 0, 0, 0, 1557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 1677, 0, 0,
	1676, 0, 1676, 0, 1676, 2011, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1676, 1676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1676, 0, 1391, 0,
	0, 0, 0, 1677, 0, 0, 0, 0, 1676, 0,
	1677, 1676, 1676, 1676, 2037, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1677, 0, 0, 0,
	0, 0, 1557, 0, 0, 2201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1677, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1557, 0, 0, 2017, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1391, 300, 0, 0, 1557,
	0, 0, 2012, 0, 1988, 1989, 0, 2021, 2022, 2023,
	2032, 2033, 2034, 0, 0, 0, 300, 0, 1554, 0,
	0, 0, 0, 300, 0, 300, 0, 2025, 2019, 0,
	0, 0, 0, 2030, 0, 0, 1991, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2038, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2044, 0, 0, 0, 2043,
	0, 0, 0, 300, 1990, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 2010, 0, 0, 0, 0,
	0, 0, 300, 0, 2007, 300, 0, 0, 0, 300,
	0, 300, 0, 0, 0, 0, 0, 0, 300, 300,
	0, 1554, 0, 0, 0, 0, 0, 0, 300, 0,
	0, 0, 0, 1391, 0, 1391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2028, 0, 0,
	0, 0, 0, 0, 0, 1557, 0, 0, 0, 2002,
	2003, 2009, 2031, 2008, 2004, 0, 2001, 1999, 2000, 1992,
	1993, 1994, 1995, 1997, 1998, 2013, 2014, 2015, 2016, 0,
	0, 0, 1554, 0, 0, 1996, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 1554, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2029, 0,
	0, 0, 2039, 0, 0, 0, 0, 0, 0, 2018,
	2020, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 1557, 1555, 0, 0, 2035,
	0, 2036, 0, 0, 0, 0, 0, 0, 2005, 2006,
	0, 1557, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1677, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2011, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	0, 2037, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1554, 0, 0, 0, 0, 0,
	0, 0, 2026, 0, 0, 1557, 0, 0, 0, 0,
	0, 0, 0, 2041, 1555, 0, 0, 1557, 0, 1557,
	0, 0, 0, 0, 0, 1557, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 0, 1557, 1557, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 2017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1554, 0, 0, 0, 0, 2012,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 300, 300, 300, 0, 0, 0, 0, 0,
	2030, 300, 0, 0, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2043, 300, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1677, 1677, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1555, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1676, 0, 0, 0, 0, 0,
	0, 0, 1677, 0, 0, 0, 1676, 0, 1676, 0,
	0, 0, 0, 0, 1676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2028, 1676, 1676, 0, 0, 0,
	0, 1677, 0, 0, 0, 0, 2002, 2003, 2009, 2031,
	2008, 2004, 0, 2001, 1999, 2000, 1992, 1993, 1994, 1995,
	1997, 1998, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1677, 0, 1677, 0,
	1677, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1677, 1677,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1677, 1988, 1989, 0, 2021, 2022, 2023, 2032,
	2033, 2034, 0, 0, 1677, 0, 0, 1677, 1677, 1677,
	0, 0, 0, 0, 0, 0, 2025, 2019, 0, 0,
	0, 0, 0, 0, 0, 1991, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2044, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2010, 0, 0, 0, 0, 0,
	0, 0, 0, 2007, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1555, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1557, 0, 2013, 2014, 2015, 2016, 0, 0,
	0, 0, 0, 0, 1996, 0, 0, 1557, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1557, 0,
	0, 0, 0, 0, 0, 0, 0, 2029, 0, 0,
	0, 2039, 0, 0, 0, 0, 0, 0, 2018, 2020,
	0, 0, 0, 0, 300, 0, 0, 1555, 300, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 2035, 0,
	2036, 0, 0, 0, 0, 0, 0, 2005, 2006, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 2027, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2011, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1555, 0,
	0, 0, 0, 0, 0, 0, 300, 300, 1554, 0,
	300, 0, 0, 0, 0, 0, 0, 300, 0, 0,
	0, 0, 965, 0, 1555, 0, 0, 0, 0, 0,
	2037, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 968, 0, 0, 0, 0, 969, 0,
	0, 2026, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1554, 2041, 1557, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1554, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 970, 0, 984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 971,
	0, 0, 2017, 0, 972, 0, 0, 0, 0, 0,
	0, 0, 300, 0, 0, 0, 0, 1557, 0, 1557,
	0, 0, 0, 1557, 0, 0, 0, 993, 2012, 0,
	300, 1557, 1557, 0, 973, 1557, 0, 0, 0, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 991,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2030,
	1555, 0, 0, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 966, 964, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1557, 2043, 0, 0, 974, 0,
	0, 0, 0, 0, 0, 0, 1557, 0, 1557, 0,
	0, 0, 0, 0, 0, 995, 0, 0, 0, 0,
	843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1554, 0, 0, 0, 0, 0, 0, 0,
	1555, 0, 0, 0, 0, 1557, 0, 300, 1557, 300,
	0, 0, 0, 2028, 0, 0, 1677, 0, 0, 0,
	0, 0, 0, 0, 0, 2002, 2003, 2009, 2031, 2008,
	2004, 0, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997,
	1998, 994, 0, 0, 0, 0, 0, 300, 0, 0,
	3598, 989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1676, 0, 1676, 0,
	0, 0, 1554, 0, 0, 0, 0, 0, 0, 935,
	1676, 1676, 0, 0, 0, 0, 0, 1557, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 988,
	1677, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	975, 0, 1677, 0, 1677, 0, 0, 0, 0, 0,
	1677, 0, 0, 1676, 0, 0, 0, 0, 0, 0,
	0, 1677, 1677, 0, 0, 1676, 0, 1676, 0, 0,
	0, 0, 0, 976, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1988, 1989,
	0, 2021, 2022, 2023, 2032, 2033, 2034, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 842,
	0, 2025, 2019, 0, 1554, 0, 0, 1554, 0, 0,
	1991, 0, 963, 0, 0, 985, 0, 0, 0, 0,
	0, 2038, 0, 0, 0, 0, 977, 0, 0, 1557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2044,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 0, 0, 0, 983, 0, 0, 0, 2010,
	0, 0, 0, 0, 0, 300, 0, 0, 2007, 0,
	0, 0, 0, 0, 978, 0, 0, 0, 979, 998,
	0, 997, 0, 0, 0, 980, 1554, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 981, 0, 1554, 0, 0, 990, 0, 0, 0,
	0, 0, 999, 0, 996, 0, 0, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2013,
	2014, 2015, 2016, 0, 0, 0, 0, 0, 0, 1996,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2029, 300, 0, 0, 2039, 0, 0, 0,
	0, 0, 0, 2018, 2020, 0, 0, 0, 1557, 1557,
	0, 1557, 0, 0, 0, 0, 0, 0, 0, 0,
	1557, 0, 0, 2035, 0, 2036, 300, 0, 1554, 0,
	0, 0, 2005, 2006, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1557, 2027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2201, 0, 2011, 0, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 0, 0, 300, 0, 300,
	0, 0, 0, 0, 300, 0, 0, 0, 0, 0,
	1557, 0, 0, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1557, 0, 0, 2026, 0, 1557, 1557,
	1557, 0, 0, 0, 1555, 0, 0, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1557, 0, 1557, 0, 0, 0, 300, 1557, 0,
	1557, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1555, 0, 0,
	0, 1557, 0, 0, 0, 0, 0, 2017, 0, 0,
	0, 0, 1555, 0, 0, 0, 0, 1676, 1676, 0,
	1676, 0, 0, 0, 0, 0, 0, 0, 0, 1676,
	0, 0, 0, 2012, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1555, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2030, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2043, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1676,
	0, 0, 0, 1557, 1557, 0, 1557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1676, 0, 1557, 1557, 0, 1676, 1676, 1676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1557, 0, 0, 0, 0,
	1676, 0, 1676, 0, 0, 300, 0, 1676, 2028, 1554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2002, 2003, 2009, 2031, 2008, 2004, 0, 2001, 1999, 2000,
	1992, 1993, 1994, 1995, 1997, 1998, 0, 0, 1555, 0,
	1554, 0, 0, 0, 0, 3597, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1557, 0, 0, 300, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 1677, 0, 1677, 0, 0, 0, 1555, 0,
	0, 0, 0, 0, 0, 0, 1677, 1677, 0, 0,
	0, 0, 0, 0, 0, 0, 1557, 1557, 0, 0,
	1557, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1554, 1554, 0, 1554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 0,
	0, 0, 0, 1676, 1676, 0, 0, 1557, 300, 1677,
	0, 0, 1557, 0, 0, 0, 0, 0, 0, 0,
	0, 1677, 0, 1677, 1554, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1557, 1557, 1557,
	1557, 1557, 1557, 1557, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1557, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1555, 0, 0, 1555, 0, 0, 0, 0, 0, 0,
	0, 1557, 0, 0, 0, 0, 0, 0, 0, 1554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1557, 0, 1557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1555, 0, 0, 1676, 1676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1555,
	0, 0, 0, 0, 1557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 0, 0, 0, 0,
	0, 1988, 1989, 0, 2021, 2022, 2023, 2032, 2033, 2034,
	0, 0, 0, 0, 0, 0, 1554, 0, 0, 0,
	0, 1676, 0, 0, 2025, 2019, 0, 0, 0, 0,
	0, 0, 0, 1991, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2038, 0, 1676, 1676, 1676, 1676,
	1676, 1676, 1676, 0, 0, 0, 0, 0, 0, 1557,
	0, 0, 2044, 0, 0, 0, 0, 0, 300, 0,
	1554, 1990, 0, 0, 0, 0, 0, 1557, 0, 0,
	1557, 1557, 2010, 0, 0, 0, 0, 0, 0, 0,
	0, 2007, 0, 0, 0, 0, 0, 0, 0, 0,
	1554, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1555, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1557, 0, 0, 1557, 0, 0, 0,
	0, 0, 0, 1554, 0, 1676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 300, 2013, 2014, 2015, 2016, 0, 0, 0, 0,
	0, 0, 1996, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2029, 0, 0, 0, 2039,
	0, 0, 0, 0, 0, 0, 2018, 2020, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2035, 0, 2036, 0,
	0, 0, 0, 0, 0, 2005, 2006, 0, 1554, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2027, 0, 1676, 0, 0, 1676,
	1676, 0, 0, 0, 0, 300, 0, 0, 0, 2011,
	0, 0, 0, 1677, 1677, 0, 1677, 0, 0, 0,
	0, 0, 0, 0, 0, 1677, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1554, 0, 0, 1676, 0, 0, 2037, 0,
	0, 0, 0, 300, 0, 0, 0, 0, 1557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1557, 2026,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1677, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1677, 0,
	0, 0, 0, 1677, 1677, 1677, 0, 0, 0, 0,
	2017, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1557, 1677, 0, 1677, 0,
	0, 0, 0, 1677, 0, 1555, 2012, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1555, 2030, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1988, 1989, 0, 2021, 2022, 2023, 2032,
	2033, 2034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2043, 0, 0, 2025, 2019, 0, 0,
	0, 0, 0, 0, 0, 1991, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1676, 0, 0,
	0, 0, 0, 0, 2044, 0, 0, 1676, 0, 0,
	0, 0, 1557, 1990, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2010, 0, 0, 0, 0, 0,
	0, 0, 0, 2007, 0, 0, 0, 0, 0, 0,
	0, 2028, 0, 0, 0, 0, 0, 0, 1555, 1555,
	0, 1555, 0, 2002, 2003, 2009, 2031, 2008, 2004, 0,
	2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 1677,
	1677, 0, 0, 0, 0, 0, 0, 0, 3596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1555, 0, 0, 0, 1676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2013, 2014, 2015, 2016, 0, 0,
	0, 0, 0, 0, 1996, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1555, 0, 2029, 1086, 0,
	1138, 2039, 0, 0, 0, 0, 0, 0, 2018, 2020,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1555,
	0, 0, 0, 0, 0, 1094, 0, 0, 2035, 0,
	2036, 0, 0, 0, 0, 0, 0, 2005, 2006, 0,
	0, 0, 0, 1109, 0, 1092, 1091, 0, 0, 0,
	0, 1676, 0, 0, 0, 0, 2027, 0, 0, 0,
	0, 1677, 1677, 0, 0, 0, 0, 0, 0, 1111,
	0, 2011, 0, 0, 0, 1093, 0, 0, 0, 0,
	1096, 0, 0, 0, 0, 1150, 0, 1121, 0, 0,
	0, 0, 0, 0, 0, 1106, 1107, 0, 0, 0,
	0, 0, 0, 0, 0, 1126, 0, 0, 0, 0,
	0, 0, 1555, 0, 0, 0, 0, 1677, 0, 0,
	2037, 0, 0, 1139, 1098, 0, 0, 0, 0, 0,
	1099, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2026, 1677, 1677, 1677, 1677, 1677, 1677, 1677, 0,
	0, 0, 2041, 0, 1100, 0, 0, 0, 0, 0,
	0, 0, 0, 1136, 0, 0, 1555, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1555, 0, 1137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2017, 0, 1102, 0, 0, 0, 0, 0,
	0, 0, 0, 1090, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2012, 1555,
	0, 1677, 0, 0, 1103, 1104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1112, 1110, 0, 2030,
	0, 0, 0, 0, 1105, 0, 0, 0, 1122, 0,
	0, 1144, 1143, 0, 0, 0, 0, 0, 0, 1555,
	0, 0, 0, 0, 0, 0, 0, 1147, 1135, 0,
	0, 0, 0, 0, 0, 2043, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1555, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1677, 2028, 0, 1677, 1677, 0, 0, 0,
	0, 1097, 0, 0, 1149, 2002, 2003, 2009, 2031, 2008,
	2004, 0, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997,
	1998, 0, 0, 0, 0, 0, 0, 0, 1095, 0,
	2853, 0, 0, 1130, 1131, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1133, 1555, 0,
	0, 1677, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1141, 1128, 0, 0, 0,
	0, 0, 0, 0, 1148, 1123, 0, 0, 1115, 1113,
	0, 0, 1118, 0, 0, 0, 0, 0, 0, 0,
	1119, 0, 0, 1088, 0, 1142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1134, 0, 0, 1132, 0, 1120, 0, 0,
	0, 0, 0, 1117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1146, 0, 0, 0, 0, 0,
	0, 0, 1124, 0, 1125, 0, 0, 0, 0, 0,
	0, 0, 0, 1101, 1145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1129, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1677, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1677, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 1558, 316, 317, 1559, 1560, 1561, 0,
	1562, 718, 1563, 1564, 1565, 318, 1566, 319, 320, 321,
	1330, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	1677, 329, 721, 330, 722, 1567, 723, 331, 332, 333,
	334, 335, 336, 337, 1568, 1569, 0, 338, 724, 725,
	726, 1570, 339, 340, 727, 1571, 1638, 1572, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 1573, 350, 351,
	352, 349, 353, 1574, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 1575, 362, 363, 364, 1331, 365, 366,
	367, 1576, 1577, 1579, 1578, 1580, 1581, 1582, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 1583, 378,
	380, 374, 376, 1584, 379, 377, 381, 1585, 382, 383,
	384, 1586, 1587, 385, 386, 387, 1588, 388, 389, 390,
	1589, 391, 392, 393, 1590, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 1591, 305, 1592, 0, 1677, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 1593, 413,
	414, 415, 1594, 416, 417, 1595, 1332, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 1596, 430, 736, 1597, 737, 431, 1598, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 1334,
	439, 440, 441, 1599, 442, 443, 444, 445, 446, 0,
	0, 0, 306, 447, 448, 449, 1600, 1333, 741, 450,
	532, 451, 742, 743, 1601, 744, 1602, 452, 453, 455,
	1335, 745, 1336, 454, 456, 457, 1337, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 1603, 465, 467,
	466, 1604, 469, 746, 468, 1338, 470, 471, 1339, 1605,
	472, 473, 474, 475, 476, 477, 480, 1606, 1607, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 1340,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 1341, 524, 512,
	1608, 307, 1342, 526, 527, 528, 529, 1609, 747, 530,
	748, 533, 534, 1610, 0, 535, 0, 536, 1611, 1612,
	538, 539, 540, 1613, 1614, 541, 542, 749, 1343, 543,
	1344, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 1615, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 1616, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	1617, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 1618, 602, 603, 601,
	604, 605, 1345, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 1619, 631, 632, 630,
	633, 634, 635, 1620, 636, 757, 637, 617, 618, 638,
	639, 1346, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 1621, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 1622, 668, 669, 0, 663, 654,
	1623, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	1624, 678, 761, 762, 763, 764, 1625, 690, 1626, 679,
	681, 682, 683, 684, 765, 685, 766, 1627, 686, 687,
	688, 689, 680, 691, 692, 1628, 1629, 693, 694, 696,
	698, 699, 695, 697, 700, 1630, 701, 1631, 0, 702,
	703, 704, 767, 768, 769, 1632, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 1633, 1634, 1635, 1636, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1552, 0,
	0, 0, 0, 0, 0, 3042, 0, 0, 0, 0,
	0, 0, 0, 0, 3043, 308, 309, 311, 310, 312,
	313, 314, 315, 1558, 316, 317, 1559, 1560, 1561, 0,
	1562, 718, 1563, 1564, 1565, 318, 1566, 319, 320, 321,
	1330, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 1567, 723, 331, 332, 333,
	334, 335, 336, 337, 1568, 1569, 0, 338, 724, 725,
	726, 1570, 339, 340, 727, 1571, 1638, 1572, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 1573, 350, 351,
	352, 349, 353, 1574, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 1575, 362, 363, 364, 1331, 365, 366,
	367, 1576, 1577, 1579, 1578, 1580, 1581, 1582, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 1583, 378,
	380, 374, 376, 1584, 379, 377, 381, 1585, 382, 383,
	384, 1586, 1587, 385, 386, 387, 1588, 388, 389, 390,
	1589, 391, 392, 393, 1590, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 1591, 305, 1592, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 1593, 413,
	414, 415, 1594, 416, 417, 1595, 1332, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 1596, 430, 736, 1597, 737, 431, 1598, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 1334,
	439, 440, 441, 1599, 442, 443, 444, 445, 446, 0,
	0, 0, 306, 447, 448, 449, 1600, 1333, 741, 450,
	532, 451, 742, 743, 1601, 744, 1602, 452, 453, 455,
	1335, 745, 1336, 454, 456, 457, 1337, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 1603, 465, 467,
	466, 1604, 469, 746, 468, 1338, 470, 471, 1339, 1605,
	472, 473, 474, 475, 476, 477, 480, 1606, 1607, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 1340,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 1341, 524, 512,
	1608, 307, 1342, 526, 527, 528, 529, 1609, 747, 530,
	748, 533, 534, 1610, 0, 535, 0, 536, 1611, 1612,
	538, 539, 540, 1613, 1614, 541, 542, 749, 1343, 543,
	1344, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 1615, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 1616, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	1617, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 1618, 602, 603, 601,
	604, 605, 1345, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 1619, 631, 632, 630,
	633, 634, 635, 1620, 636, 757, 637, 617, 618, 638,
	639, 1346, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 1621, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 1622, 668, 669, 0, 663, 654,
	1623, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	1624, 678, 761, 762, 763, 764, 1625, 690, 1626, 679,
	681, 682, 683, 684, 765, 685, 766, 1627, 686, 687,
	688, 689, 680, 691, 692, 1628, 1629, 693, 694, 696,
	698, 699, 695, 697, 700, 1630, 701, 1631, 0, 702,
	703, 704, 767, 768, 769, 1632, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 1633, 1634, 1635, 1636, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1552, 0, 0, 0, 4128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4130, 308, 309, 311, 310, 312, 313, 314, 315,
	1558, 316, 317, 1559, 1560, 1561, 0, 1562, 718, 1563,
	1564, 1565, 318, 1566, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 1567, 723, 331, 332, 333, 334, 335, 336,
	337, 1568, 1569, 0, 338, 724, 725, 726, 1570, 339,
	340, 727, 1571, 1638, 1572, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 1573, 350, 351, 352, 349, 353,
	1574, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	1575, 362, 363, 364, 1331, 365, 366, 367, 1576, 1577,
	1579, 1578, 1580, 1581, 1582, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 1583, 378, 380, 374, 376,
	1584, 379, 377, 381, 1585, 382, 383, 384, 1586, 1587,
	385, 386, 387, 1588, 388, 389, 390, 1589, 391, 392,
	393, 1590, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	1591, 305, 1592, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 1593, 413, 414, 415, 1594,
	416, 417, 1595, 1332, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 1596, 430,
	736, 1597, 737, 431, 1598, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 1334, 439, 440, 441,
	1599, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 1600, 1333, 741, 450, 532, 451, 742,
	743, 1601, 744, 1602, 452, 453, 455, 1335, 745, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 1603, 465, 467, 466, 1604, 469,
	746, 468, 1338, 470, 471, 1339, 1605, 472, 473, 474,
	475, 476, 477, 480, 1606, 1607, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 1608, 307, 1342,
	526, 527, 528, 529, 1609, 747, 530, 748, 533, 534,
	1610, 0, 535, 0, 536, 1611, 1612, 538, 539, 540,
	1613, 1614, 541, 542, 749, 1343, 543, 1344, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 1615, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 1616, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 1617, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 1618, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 1619, 631, 632, 630, 633, 634, 635,
	1620, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 1621,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 1622, 668, 669, 0, 663, 654, 1623, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 1624, 678, 761,
	762, 763, 764, 1625, 690, 1626, 679, 681, 682, 683,
	684, 765, 685, 766, 1627, 686, 687, 688, 689, 680,
	691, 692, 1628, 1629, 693, 694, 696, 698, 699, 695,
	697, 700, 1630, 701, 1631, 0, 702, 703, 704, 767,
	768, 769, 1632, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 1633, 1634, 1635, 1636, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4580, 308, 309, 311, 310, 312, 313, 314,
	315, 1558, 316, 317, 1559, 1560, 1561, 0, 1562, 718,
	1563, 1564, 1565, 318, 1566, 319, 320, 321, 1330, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 1567, 723, 331, 332, 333, 334, 335,
	336, 337, 1568, 1569, 0, 338, 724, 725, 726, 1570,
	339, 340, 727, 1571, 1638, 1572, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 1573, 350, 351, 352, 349,
	353, 1574, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 1575, 362, 363, 364, 1331, 365, 366, 367, 1576,
	1577, 1579, 1578, 1580, 1581, 1582, 368, 369, 370, 371,
	372, 0, 373, 375, 728, 729, 1583, 378, 380, 374,
	376, 1584, 379, 377, 381, 1585, 382, 383, 384, 1586,
	1587, 385, 386, 387, 1588, 388, 389, 390, 1589, 391,
	392, 393, 1590, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 731, 732,
	408, 1591, 305, 1592, 0, 0, 0, 0, 409, 410,
	411, 733, 0, 0, 0, 412, 1593, 413, 414, 415,
	1594, 416, 417, 1595, 1332, 418, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 1596,
	430, 736, 1597, 737, 431, 1598, 432, 433, 434, 435,
	436, 437, 438, 738, 739, 740, 531, 1334, 439, 440,
	441, 1599, 442, 443, 444, 445, 446, 0, 0, 0,
	306, 447, 448, 449, 1600, 1333, 741, 450, 532, 451,
	742, 743, 1601, 744, 1602, 452, 453, 455, 1335, 745,
	1336, 454, 456, 457, 1337, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 1603, 465, 467, 466, 1604,
	469, 746, 468, 1338, 470, 471, 1339, 1605, 472, 473,
	474, 475, 476, 477, 480, 1606, 1607, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 1340, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 1341, 524, 512, 1608, 307,
	1342, 526, 527, 528, 529, 1609, 747, 530, 748, 533,
	534, 1610, 0, 535, 0, 536, 1611, 1612, 538, 539,
	540, 1613, 1614, 541, 542, 749, 1343, 543, 1344, 750,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 1615, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 753, 564, 754, 565, 566, 1616,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 1617, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 1618, 602, 603, 601, 604, 605,
	1345, 606, 607, 608, 609, 610, 756, 611, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 1619, 631, 632, 630, 633, 634,
	635, 1620, 636, 757, 637, 617, 618, 638, 639, 1346,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	1621, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 760, 664, 665,
	666, 667, 1622, 668, 669, 0, 663, 654, 1623, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 1624, 678,
	761, 762, 763, 764, 1625, 690, 1626, 679, 681, 682,
	683, 684, 765, 685, 766, 1627, 686, 687, 688, 689,
	680, 691, 692, 1628, 1629, 693, 694, 696, 698, 699,
	695, 697, 700, 1630, 701, 1631, 0, 702, 703, 704,
	767, 768, 769, 1632, 706, 705, 707, 708, 709, 770,
	710, 711, 712, 1633, 1634, 1635, 1636, 713, 714, 771,
	715, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4578, 308, 309, 311, 310, 312, 313,
	314, 315, 1558, 316, 317, 1559, 1560, 1561, 0, 1562,
	718, 1563, 1564, 1565, 318, 1566, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 1567, 723, 331, 332, 333, 334,
	335, 336, 337, 1568, 1569, 0, 338, 724, 725, 726,
	1570, 339, 340, 727, 1571, 1638, 1572, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 1573, 350, 351, 352,
	349, 353, 1574, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 1575, 362, 363, 364, 1331, 365, 366, 367,
	1576, 1577, 1579, 1578, 1580, 1581, 1582, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 1583, 378, 380,
	374, 376, 1584, 379, 377, 381, 1585, 382, 383, 384,
	1586, 1587, 385, 386, 387, 1588, 388, 389, 390, 1589,
	391, 392, 393, 1590, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 1591, 305, 1592, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 1593, 413, 414,
	415, 1594, 416, 417, 1595, 1332, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	1596, 430, 736, 1597, 737, 431, 1598, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 1334, 439,
	440, 441, 1599, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 1600, 1333, 741, 450, 532,
	451, 742, 743, 1601, 744, 1602, 452, 453, 455, 1335,
	745, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 1603, 465, 467, 466,
	1604, 469, 746, 468, 1338, 470, 471, 1339, 1605, 472,
	473, 474, 475, 476, 477, 480, 1606, 1607, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 1608,
	307, 1342, 526, 527, 528, 529, 1609, 747, 530, 748,
	533, 534, 1610, 0, 535, 0, 536, 1611, 1612, 538,
	539, 540, 1613, 1614, 541, 542, 749, 1343, 543, 1344,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 1615, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	1616, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 1617,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 1618, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 1619, 631, 632, 630, 633,
	634, 635, 1620, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 1621, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 1622, 668, 669, 0, 663, 654, 1623,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 1624,
	678, 761, 762, 763, 764, 1625, 690, 1626, 679, 681,
	682, 683, 684, 765, 685, 766, 1627, 686, 687, 688,
	689, 680, 691, 692, 1628, 1629, 693, 694, 696, 698,
	699, 695, 697, 700, 1630, 701, 1631, 0, 702, 703,
	704, 767, 768, 769, 1632, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 1633, 1634, 1635, 1636, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 1552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4832, 308,
	309, 311, 310, 312, 313, 314, 315, 1558, 316, 317,
	1559, 1560, 1561, 0, 1562, 718, 1563, 1564, 1565, 318,
	1566, 319, 320, 321, 1330, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 1567,
	723, 331, 332, 333, 334, 335, 336, 337, 1568, 1569,
	0, 338, 724, 725, 726, 1570, 339, 340, 727, 1571,
	1638, 1572, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 1573, 350, 351, 352, 349, 353, 1574, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 1575, 362, 363,
	364, 1331, 365, 366, 367, 1576, 1577, 1579, 1578, 1580,
	1581, 1582, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 1583, 378, 380, 374, 376, 1584, 379, 377,
	381, 1585, 382, 383, 384, 1586, 1587, 385, 386, 387,
	1588, 388, 389, 390, 1589, 391, 392, 393, 1590, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 1591, 305, 1592,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 1593, 413, 414, 415, 1594, 416, 417, 1595,
	1332, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 1596, 430, 736, 1597, 737,
	431, 1598, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 1334, 439, 440, 441, 1599, 442, 443,
	444, 445, 446, 0, 0, 0, 306, 447, 448, 449,
	1600, 1333, 741, 450, 532, 451, 742, 743, 1601, 744,
	1602, 452, 453, 455, 1335, 745, 1336, 454, 456, 457,
	1337, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 1603, 465, 467, 466, 1604, 469, 746, 468, 1338,
	470, 471, 1339, 1605, 472, 473, 474, 475, 476, 477,
	480, 1606, 1607, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 1340, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 1341, 524, 512, 1608, 307, 1342, 526, 527, 528,
	529, 1609, 747, 530, 748, 533, 534, 1610, 0, 535,
	0, 536, 1611, 1612, 538, 539, 540, 1613, 1614, 541,
	542, 749, 1343, 543, 1344, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 1615,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 1616, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 1617, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	1618, 602, 603, 601, 604, 605, 1345, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	1619, 631, 632, 630, 633, 634, 635, 1620, 636, 757,
	637, 617, 618, 638, 639, 1346, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 1621, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 1622, 668,
	669, 0, 663, 654, 1623, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 1624, 678, 761, 762, 763, 764,
	1625, 690, 1626, 679, 681, 682, 683, 684, 765, 685,
	766, 1627, 686, 687, 688, 689, 680, 691, 692, 1628,
	1629, 693, 694, 696, 698, 699, 695, 697, 700, 1630,
	701, 1631, 0, 702, 703, 704, 767, 768, 769, 1632,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 1633,
	1634, 1635, 1636, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 1552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4686, 308, 309, 311, 310, 312, 313,
	314, 315, 1558, 316, 317, 1559, 1560, 1561, 0, 1562,
	718, 1563, 1564, 1565, 318, 1566, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 1567, 723, 331, 332, 333, 334,
	335, 336, 337, 1568, 1569, 0, 338, 724, 725, 726,
	1570, 339, 340, 727, 1571, 1638, 1572, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 1573, 350, 351, 352,
	349, 353, 1574, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 1575, 362, 363, 364, 1331, 365, 366, 367,
	1576, 1577, 1579, 1578, 1580, 1581, 1582, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 1583, 378, 380,
	374, 376, 1584, 379, 377, 381, 1585, 382, 383, 384,
	1586, 1587, 385, 386, 387, 1588, 388, 389, 390, 1589,
	391, 392, 393, 1590, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 1591, 305, 1592, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 1593, 413, 414,
	415, 1594, 416, 417, 1595, 1332, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	1596, 430, 736, 1597, 737, 431, 1598, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 1334, 439,
	440, 441, 1599, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 1600, 1333, 741, 450, 532,
	451, 742, 743, 1601, 744, 1602, 452, 453, 455, 1335,
	745, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 1603, 465, 467, 466,
	1604, 469, 746, 468, 1338, 470, 471, 1339, 1605, 472,
	473, 474, 475, 476, 477, 480, 1606, 1607, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 1608,
	307, 1342, 526, 527, 528, 529, 1609, 747, 530, 748,
	533, 534, 1610, 0, 535, 0, 536, 1611, 1612, 538,
	539, 540, 1613, 1614, 541, 542, 749, 1343, 543, 1344,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 1615, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	1616, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 1617,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 1618, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 1619, 631, 632, 630, 633,
	634, 635, 1620, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 1621, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 1622, 668, 669, 0, 663, 654, 1623,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 1624,
	678, 761, 762, 763, 764, 1625, 690, 1626, 679, 681,
	682, 683, 684, 765, 685, 766, 1627, 686, 687, 688,
	689, 680, 691, 692, 1628, 1629, 693, 694, 696, 698,
	699, 695, 697, 700, 1630, 701, 1631, 0, 702, 703,
	704, 767, 768, 769, 1632, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 1633, 1634, 1635, 1636, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 1552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4504, 308,
	309, 311, 310, 312, 313, 314, 315, 1558, 316, 317,
	1559, 1560, 1561, 0, 1562, 718, 1563, 1564, 1565, 318,
	1566, 319, 320, 321, 1330, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 1567,
	723, 331, 332, 333, 334, 335, 336, 337, 1568, 1569,
	0, 338, 724, 725, 726, 1570, 339, 340, 727, 1571,
	1638, 1572, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 1573, 350, 351, 352, 349, 353, 1574, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 1575, 362, 363,
	364, 1331, 365, 366, 367, 1576, 1577, 1579, 1578, 1580,
	1581, 1582, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 1583, 378, 380, 374, 376, 1584, 379, 377,
	381, 1585, 382, 383, 384, 1586, 1587, 385, 386, 387,
	1588, 388, 389, 390, 1589, 391, 392, 393, 1590, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 1591, 305, 1592,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 1593, 413, 414, 415, 1594, 416, 417, 1595,
	1332, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 1596, 430, 736, 1597, 737,
	431, 1598, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 1334, 439, 440, 441, 1599, 442, 443,
	444, 445, 446, 0, 0, 0, 306, 447, 448, 449,
	1600, 1333, 741, 450, 532, 451, 742, 743, 1601, 744,
	1602, 452, 453, 455, 1335, 745, 1336, 454, 456, 457,
	1337, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 1603, 465, 467, 466, 1604, 469, 746, 468, 1338,
	470, 471, 1339, 1605, 472, 473, 474, 475, 476, 477,
	480, 1606, 1607, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 1340, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 1341, 524, 512, 1608, 307, 1342, 526, 527, 528,
	529, 1609, 747, 530, 748, 533, 534, 1610, 0, 535,
	0, 536, 1611, 1612, 538, 539, 540, 1613, 1614, 541,
	542, 749, 1343, 543, 1344, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 1615,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 1616, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 1617, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	1618, 602, 603, 601, 604, 605, 1345, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	1619, 631, 632, 630, 633, 634, 635, 1620, 636, 757,
	637, 617, 618, 638, 639, 1346, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 1621, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 1622, 668,
	669, 0, 663, 654, 1623, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 1624, 678, 761, 762, 763, 764,
	1625, 690, 1626, 679, 681, 682, 683, 684, 765, 685,
	766, 1627, 686, 687, 688, 689, 680, 691, 692, 1628,
	1629, 693, 694, 696, 698, 699, 695, 697, 700, 1630,
	701, 1631, 0, 702, 703, 704, 767, 768, 769, 1632,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 1633,
	1634, 1635, 1636, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 1552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4146, 308, 309, 311, 310, 312, 313,
	314, 315, 1558, 316, 317, 1559, 1560, 1561, 0, 1562,
	718, 1563, 1564, 1565, 318, 1566, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 1567, 723, 331, 332, 333, 334,
	335, 336, 337, 1568, 1569, 0, 338, 724, 725, 726,
	1570, 339, 340, 727, 1571, 1638, 1572, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 1573, 350, 351, 352,
	349, 353, 1574, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 1575, 362, 363, 364, 1331, 365, 366, 367,
	1576, 1577, 1579, 1578, 1580, 1581, 1582, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 1583, 378, 380,
	374, 376, 1584, 379, 377, 381, 1585, 382, 383, 384,
	1586, 1587, 385, 386, 387, 1588, 388, 389, 390, 1589,
	391, 392, 393, 1590, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 1591, 305, 1592, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 1593, 413, 414,
	415, 1594, 416, 417, 1595, 1332, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	1596, 430, 736, 1597, 737, 431, 1598, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 1334, 439,
	440, 441, 1599, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 1600, 1333, 741, 450, 532,
	451, 742, 743, 1601, 744, 1602, 452, 453, 455, 1335,
	745, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 1603, 465, 467, 466,
	1604, 469, 746, 468, 1338, 470, 471, 1339, 1605, 472,
	473, 474, 475, 476, 477, 480, 1606, 1607, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 1608,
	307, 1342, 526, 527, 528, 529, 1609, 747, 530, 748,
	533, 534, 1610, 0, 535, 0, 536, 1611, 1612, 538,
	539, 540, 1613, 1614, 541, 542, 749, 1343, 543, 1344,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 1615, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	1616, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 1617,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 1618, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 1619, 631, 632, 630, 633,
	634, 635, 1620, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 1621, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 1622, 668, 669, 0, 663, 654, 1623,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 1624,
	678, 761, 762, 763, 764, 1625, 690, 1626, 679, 681,
	682, 683, 684, 765, 685, 766, 1627, 686, 687, 688,
	689, 680, 691, 692, 1628, 1629, 693, 694, 696, 698,
	699, 695, 697, 700, 1630, 701, 1631, 0, 702, 703,
	704, 767, 768, 769, 1632, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 1633, 1634, 1635, 1636, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 1552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3942, 308,
	309, 311, 310, 312, 313, 314, 315, 1558, 316, 317,
	1559, 1560, 1561, 0, 1562, 718, 1563, 1564, 1565, 318,
	1566, 319, 320, 321, 1330, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 1567,
	723, 331, 332, 333, 334, 335, 336, 337, 1568, 1569,
	0, 338, 724, 725, 726, 1570, 339, 340, 727, 1571,
	1638, 1572, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 1573, 350, 351, 352, 349, 353, 1574, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 1575, 362, 363,
	364, 1331, 365, 366, 367, 1576, 1577, 1579, 1578, 1580,
	1581, 1582, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 1583, 378, 380, 374, 376, 1584, 379, 377,
	381, 1585, 382, 383, 384, 1586, 1587, 385, 386, 387,
	1588, 388, 389, 390, 1589, 391, 392, 393, 1590, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 1591, 305, 1592,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 1593, 413, 414, 415, 1594, 416, 417, 1595,
	1332, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 1596, 430, 736, 1597, 737,
	431, 1598, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 1334, 439, 440, 441, 1599, 442, 443,
	444, 445, 446, 0, 0, 0, 306, 447, 448, 449,
	1600, 1333, 741, 450, 532, 451, 742, 743, 1601, 744,
	1602, 452, 453, 455, 1335, 745, 1336, 454, 456, 457,
	1337, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 1603, 465, 467, 466, 1604, 469, 746, 468, 1338,
	470, 471, 1339, 1605, 472, 473, 474, 475, 476, 477,
	480, 1606, 1607, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 1340, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 1341, 524, 512, 1608, 307, 1342, 526, 527, 528,
	529, 1609, 747, 530, 748, 533, 534, 1610, 0, 535,
	0, 536, 1611, 1612, 538, 539, 540, 1613, 1614, 541,
	542, 749, 1343, 543, 1344, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 1615,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 1616, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 1617, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	1618, 602, 603, 601, 604, 605, 1345, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	1619, 631, 632, 630, 633, 634, 635, 1620, 636, 757,
	637, 617, 618, 638, 639, 1346, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 1621, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 1622, 668,
	669, 0, 663, 654, 1623, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 1624, 678, 761, 762, 763, 764,
	1625, 690, 1626, 679, 681, 682, 683, 684, 765, 685,
	766, 1627, 686, 687, 688, 689, 680, 691, 692, 1628,
	1629, 693, 694, 696, 698, 699, 695, 697, 700, 1630,
	701, 1631, 0, 702, 703, 704, 767, 768, 769, 1632,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 1633,
	1634, 1635, 1636, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 1552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2876, 308, 309, 311, 310, 312, 313,
	314, 315, 1558, 316, 317, 1559, 1560, 1561, 0, 1562,
	718, 1563, 1564, 1565, 318, 1566, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 1567, 723, 331, 332, 333, 334,
	335, 336, 337, 1568, 1569, 0, 338, 724, 725, 726,
	1570, 339, 340, 727, 1571, 1638, 1572, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 1573, 350, 351, 352,
	349, 353, 1574, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 1575, 362, 363, 364, 1331, 365, 366, 367,
	1576, 1577, 1579, 1578, 1580, 1581, 1582, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 1583, 378, 380,
	374, 376, 1584, 379, 377, 381, 1585, 382, 383, 384,
	1586, 1587, 385, 386, 387, 1588, 388, 389, 390, 1589,
	391, 392, 393, 1590, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 1591, 305, 1592, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 1593, 413, 414,
	415, 1594, 416, 417, 1595, 1332, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	1596, 430, 736, 1597, 737, 431, 1598, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 1334, 439,
	440, 441, 1599, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 1600, 1333, 741, 450, 532,
	451, 742, 743, 1601, 744, 1602, 452, 453, 455, 1335,
	745, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 1603, 465, 467, 466,
	1604, 469, 746, 468, 1338, 470, 471, 1339, 1605, 472,
	473, 474, 475, 476, 477, 480, 1606, 1607, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 1608,
	307, 1342, 526, 527, 528, 529, 1609, 747, 530, 748,
	533, 534, 1610, 0, 535, 0, 536, 1611, 1612, 538,
	539, 540, 1613, 1614, 541, 542, 749, 1343, 543, 1344,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 1615, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	1616, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 1617,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 1618, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 1619, 631, 632, 630, 633,
	634, 635, 1620, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 1621, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 1622, 668, 669, 0, 663, 654, 1623,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 1624,
	678, 761, 762, 763, 764, 1625, 690, 1626, 679, 681,
	682, 683, 684, 765, 685, 766, 1627, 686, 687, 688,
	689, 680, 691, 692, 1628, 1629, 693, 694, 696, 698,
	699, 695, 697, 700, 1630, 701, 1631, 0, 702, 703,
	704, 767, 768, 769, 1632, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 1633, 1634, 1635, 1636, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	1549, 0, 1552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2488, 308,
	309, 311, 310, 312, 313, 314, 315, 1558, 316, 317,
	1559, 1560, 1561, 0, 1562, 718, 1563, 1564, 1565, 318,
	1566, 319, 320, 321, 1330, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 1567,
	723, 331, 332, 333, 334, 335, 336, 337, 1568, 1569,
	0, 338, 724, 725, 726, 1570, 339, 340, 727, 1571,
	1638, 1572, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 1573, 350, 351, 352, 349, 353, 1574, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 1575, 362, 363,
	364, 1331, 365, 366, 367, 1576, 1577, 1579, 1578, 1580,
	1581, 1582, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 1583, 378, 380, 374, 376, 1584, 379, 377,
	381, 1585, 382, 383, 384, 1586, 1587, 385, 386, 387,
	1588, 388, 389, 390, 1589, 391, 392, 393, 1590, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 1591, 305, 1592,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 1593, 413, 414, 415, 1594, 416, 417, 1595,
	1332, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 1596, 430, 736, 1597, 737,
	431, 1598, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 1334, 439, 440, 441, 1599, 442, 443,
	444, 445, 446, 0, 0, 0, 306, 447, 448, 449,
	1600, 1333, 741, 450, 532, 451, 742, 743, 1601, 744,
	1602, 452, 453, 455, 1335, 745, 1336, 454, 456, 457,
	1337, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 1603, 465, 467, 466, 1604, 469, 746, 468, 1338,
	470, 471, 1339, 1605, 472, 473, 474, 475, 476, 477,
	480, 1606, 1607, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 1340, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 1341, 524, 512, 1608, 307, 1342, 526, 527, 528,
	529, 1609, 747, 530, 748, 533, 534, 1610, 0, 535,
	0, 536, 1611, 1612, 538, 539, 540, 1613, 1614, 541,
	542, 749, 1343, 543, 1344, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 1615,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 1616, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 1617, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	1618, 602, 603, 601, 604, 605, 1345, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	1619, 631, 632, 630, 633, 634, 635, 1620, 636, 757,
	637, 617, 618, 638, 639, 1346, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 1621, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 1622, 668,
	669, 0, 663, 654, 1623, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 1624, 678, 761, 762, 763, 764,
	1625, 690, 1626, 679, 681, 682, 683, 684, 765, 685,
	766, 1627, 686, 687, 688, 689, 680, 691, 692, 1628,
	1629, 693, 694, 696, 698, 699, 695, 697, 700, 1630,
	701, 1631, 0, 702, 703, 704, 767, 768, 769, 1632,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 1633,
	1634, 1635, 1636, 713, 714, 771, 715, 716, 717, 1552,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 1558, 316, 317, 1559, 1560, 1561,
	0, 1562, 718, 1563, 1564, 1565, 318, 1566, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 1567, 723, 331, 332,
	333, 334, 335, 336, 337, 1568, 1569, 0, 338, 724,
	725, 726, 1570, 339, 340, 727, 1571, 1638, 1572, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 1573, 350,
	351, 352, 349, 353, 1574, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 1575, 362, 363, 364, 1331, 365,
	366, 367, 1576, 1577, 1579, 1578, 1580, 1581, 1582, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 1583,
	378, 380, 374, 376, 1584, 379, 377, 381, 1585, 382,
	383, 384, 1586, 1587, 385, 386, 387, 1588, 388, 389,
	390, 1589, 391, 392, 393, 1590, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 731, 732, 408, 1591, 305, 1592, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 1593,
	413, 414, 415, 1594, 416, 417, 1595, 1332, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 1596, 430, 736, 1597, 737, 431, 1598, 432,
	433, 434, 435, 436, 437, 438, 738, 739, 740, 531,
	1334, 439, 440, 441, 1599, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 1600, 1333, 741,
	450, 532, 451, 742, 743, 1601, 744, 1602, 452, 453,
	455, 1335, 745, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 1603, 465,
	467, 466, 1604, 469, 746, 468, 1338, 470, 471, 1339,
	1605, 472, 473, 474, 475, 476, 477, 480, 1606, 1607,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 1608, 307, 1342, 526, 527, 528, 529, 1609, 747,
	530, 748, 533, 534, 1610, 0, 535, 0, 536, 1611,
	1612, 538, 539, 540, 1613, 1614, 541, 542, 749, 1343,
	543, 1344, 750, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 1615, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 753, 564, 754,
	565, 566, 1616, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 1617, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 1618, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 756,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 1619, 631, 632,
	630, 633, 634, 635, 1620, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 1621, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	760, 664, 665, 666, 667, 1622, 668, 669, 0, 663,
	654, 1623, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 1624, 678, 761, 762, 763, 764, 1625, 690, 1626,
	679, 681, 682, 683, 684, 765, 685, 766, 1627, 686,
	687, 688, 689, 680, 691, 692, 1628, 1629, 693, 694,
	696, 698, 699, 695, 697, 700, 1630, 701, 1631, 0,
	702, 703, 704, 767, 768, 769, 1632, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 1633, 1634, 1635, 1636,
	713, 714, 771, 715, 716, 717, 2851, 0, 1266, 1238,
	1239, 1240, 1236, 1237, 1249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 2848, 316, 317, 0, 0, 0, 0,
	0, 1290, 1254, 0, 0, 318, 0, 319, 320, 321,
	1330, 322, 323, 324, 325, 326, 327, 328, 719, 1303,
	0, 329, 1310, 330, 1309, 0, 1320, 331, 332, 333,
	334, 335, 336, 337, 1256, 1289, 1221, 338, 1350, 1351,
	726, 0, 339, 340, 1296, 0, 1277, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 1331, 365, 366,
	367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368, 369,
	370, 371, 372, 1313, 373, 375, 1307, 1306, 1226, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 2849, 0, 385, 1298, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 1232, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	1321, 1322, 408, 1245, 305, 0, 0, 0, 0, 0,
	409, 410, 411, 1305, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 1332, 418, 419, 420,
	1318, 1319, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 1328, 0, 1255, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 1291, 1292, 1295, 531, 1334,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 306, 447, 448, 449, 0, 1333, 741, 450,
	532, 451, 1300, 1301, 0, 1261, 0, 452, 453, 455,
	1335, 1293, 1336, 454, 456, 457, 1337, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 1329, 468, 1338, 470, 471, 1339, 0,
	472, 473, 474, 475, 476, 477, 480, 1284, 1283, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 1340,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 1341, 524, 512,
	1223, 307, 1342, 526, 527, 528, 529, 1246, 1294, 530,
	1308, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 1343, 543,
	1344, 1323, 544, 545, 1233, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 1324, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 1304, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 1345, 606, 607, 608, 609, 610, 1234, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 1287, 636, 757, 637, 617, 618, 638,
	639, 1346, 640, 641, 642, 643, 644, 645, 646, 1302,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 1349, 657, 658, 659, 660, 1325,
	664, 665, 666, 667, 0, 668, 669, 1220, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 1314, 1315, 1316, 1317, 0, 690, 0, 679,
	681, 682, 683, 684, 1326, 685, 1327, 1244, 686, 687,
	688, 689, 680, 691, 692, 0, 1227, 693, 694, 696,
	698, 699, 695, 697, 700, 1288, 701, 0, 0, 702,
	703, 704, 767, 1311, 1348, 2847, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 0, 0, 0, 0, 713,
	714, 771, 715, 716, 717, 1224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1219, 0, 0, 0, 0, 0, 0, 1217, 1218, 2850,
	0, 0, 0, 0, 0, 0, 0, 1250, 2846, 0,
	1208, 1248, 1266, 1238, 1239, 1240, 1236, 1237, 1249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 0, 1290, 1254, 0, 0, 318,
	0, 319, 320, 321, 1330, 322, 323, 324, 325, 326,
	327, 328, 719, 1303, 0, 329, 1310, 330, 1309, 0,
	1320, 331, 332, 333, 334, 335, 336, 337, 1256, 1289,
	1221, 338, 1350, 1351, 726, 0, 339, 340, 1296, 0,
	1277, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 1331, 365, 366, 367, 1280, 1278, 1279, 1286, 1282,
	1281, 1285, 368, 369, 370, 371, 372, 1313, 373, 375,
	1307, 1306, 1226, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 1298, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 1232, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 1321, 1322, 408, 1245, 305, 0,
	0, 0, 0, 0, 409, 410, 411, 1305, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	1332, 418, 419, 420, 1318, 1319, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 1328, 0, 1255,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 1291,
	1292, 1295, 531, 1334, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 306, 447, 448, 449,
	0, 1333, 741, 450, 532, 451, 1300, 1301, 0, 1261,
	0, 452, 453, 455, 1335, 1293, 1336, 454, 456, 457,
	1337, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 1329, 468, 1338,
	470, 471, 1339, 0, 472, 473, 474, 475, 476, 477,
	480, 1284, 1283, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 1340, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 1341, 524, 512, 1223, 307, 1342, 526, 527, 528,
	529, 1246, 1294, 530, 1308, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 1343, 543, 1344, 1323, 544, 545, 1233, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	1324, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 1304, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 1345, 606, 607, 608,
	609, 610, 1234, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	261, 631, 632, 630, 633, 634, 635, 1287, 636, 757,
	637, 617, 618, 638, 639, 1346, 640, 641, 642, 643,
	644, 645, 646, 1302, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 1349, 657,
	658, 659, 660, 1325, 664, 665, 666, 667, 0, 668,
	669, 1220, 663, 654, 263, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 1314, 1315, 1316, 1317,
	0, 690, 0, 679, 681, 682, 683, 684, 1326, 685,
	1327, 1244, 686, 687, 688, 689, 680, 691, 692, 0,
	1227, 693, 694, 696, 698, 699, 695, 697, 700, 1288,
	701, 0, 0, 702, 703, 704, 1800, 1311, 1348, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 0,
	0, 0, 255, 713, 714, 771, 715, 716, 717, 1224,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1219, 0, 0, 0, 0, 0,
	0, 1217, 1218, 1266, 1238, 1239, 1240, 1236, 1237, 1249,
	0, 2069, 2067, 0, 0, 1248, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 1290, 1254, 0, 0,
	318, 0, 319, 320, 321, 1330, 322, 323, 324, 325,
	326, 327, 328, 719, 1303, 0, 329, 1310, 330, 1309,
	0, 1320, 331, 332, 333, 334, 335, 336, 337, 1256,
	1289, 1221, 338, 1350, 1351, 726, 0, 339, 340, 1296,
	0, 1277, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 1331, 365, 366, 367, 1280, 1278, 1279, 1286,
	1282, 1281, 1285, 368, 369, 370, 371, 372, 1313, 373,
	375, 1307, 1306, 1226, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 1298,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 1232, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 1321, 1322, 408, 1245, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 1305, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 1332, 418, 419, 420, 1318, 1319, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 1328, 0,
	1255, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1291, 1292, 1295, 531, 1334, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 1333, 741, 450, 532, 451, 1300, 1301, 0,
	1261, 0, 452, 453, 455, 1335, 1293, 1336, 454, 456,
	457, 1337, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 1329, 468,
	1338, 470, 471, 1339, 0, 472, 473, 474, 475, 476,
	477, 480, 1284, 1283, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 1340, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 1341, 524, 512, 1223, 307, 1342, 526, 527,
	528, 529, 1246, 1294, 530, 1308, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 1343, 543, 1344, 1323, 544, 545, 1233,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 1324, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 1304,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 1345, 606, 607,
	608, 609, 610, 1234, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 261, 631, 632, 630, 633, 634, 635, 1287, 636,
	757, 637, 617, 618, 638, 639, 1346, 640, 641, 642,
	643, 644, 645, 646, 1302, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 1349,
	657, 658, 659, 660, 1325, 664, 665, 666, 667, 0,
	668, 669, 1220, 663, 654, 263, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 1314, 1315, 1316,
	1317, 0, 690, 0, 679, 681, 682, 683, 684, 1326,
	685, 1327, 1244, 686, 687, 688, 689, 680, 691, 692,
	0, 1227, 693, 694, 696, 698, 699, 695, 697, 700,
	1288, 701, 0, 0, 702, 703, 704, 1800, 1311, 1348,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	0, 0, 0, 255, 713, 714, 771, 715, 716, 717,
	1224, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1219, 0, 0, 0, 0,
	0, 0, 1217, 1218, 1266, 1238, 1239, 1240, 1236, 1237,
	1249, 0, 2069, 3552, 0, 0, 1248, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 1290, 1254, 0,
	0, 318, 0, 319, 320, 321, 1330, 322, 323, 324,
	325, 326, 327, 328, 719, 1303, 0, 329, 1310, 330,
	1309, 0, 1320, 331, 332, 333, 334, 335, 336, 337,
	1256, 1289, 1221, 338, 1350, 1351, 726, 0, 339, 340,
	1296, 0, 1277, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 1331, 365, 366, 367, 1280, 1278, 1279,
	1286, 1282, 1281, 1285, 368, 369, 370, 371, 372, 1313,
	373, 375, 1307, 1306, 1226, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	1298, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 1232, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 1321, 1322, 408, 1245,
	305, 0, 0, 0, 0, 0, 409, 410, 411, 1305,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 1332, 418, 419, 420, 1318, 1319, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 1328,
	0, 1255, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 1291, 1292, 1295, 531, 1334, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 306, 447,
	448, 449, 0, 1333, 741, 450, 532, 451, 1300, 1301,
	0, 1261, 0, 452, 453, 455, 1335, 1293, 1336, 454,
	456, 457, 1337, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 1329,
	468, 1338, 470, 471, 1339, 0, 472, 473, 474, 475,
	476, 477, 480, 1284, 1283, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 1340, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 1341, 524, 512, 1223, 307, 1342, 526,
	527, 528, 529, 1246, 1294, 530, 1308, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 1343, 543, 1344, 1323, 544, 545,
	1233, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 1324, 564, 754, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	1304, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 1345, 606,
	607, 608, 609, 610, 1234, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 261, 631, 632, 630, 633, 634, 635, 1287,
	636, 757, 637, 617, 618, 638, 639, 1346, 640, 641,
	642, 643, 644, 645, 646, 1302, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	1349, 657, 658, 659, 660, 1325, 664, 665, 666, 667,
	0, 668, 669, 1220, 663, 654, 263, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 1314, 1315,
	1316, 1317, 0, 690, 0, 679, 681, 682, 683, 684,
	1326, 685, 1327, 1244, 686, 687, 688, 689, 680, 691,
	692, 0, 1227, 693, 694, 696, 698, 699, 695, 697,
	700, 1288, 701, 0, 0, 702, 703, 704, 1800, 1311,
	1348, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 0, 0, 0, 255, 713, 714, 771, 715, 716,
	717, 1224, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1219, 0, 0, 0,
	0, 0, 0, 1217, 1218, 1266, 1238, 1239, 1240, 1236,
	1237, 1249, 0, 2069, 2067, 0, 0, 1248, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 1290, 1254,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 1303, 0, 329, 1310,
	330, 1309, 2981, 1320, 331, 332, 333, 334, 335, 336,
	337, 1256, 1289, 1221, 338, 1350, 1351, 726, 0, 339,
	340, 1296, 0, 1277, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 1280, 1278,
	1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371, 372,
	1313, 373, 375, 1307, 1306, 1226, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 1298, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 1232, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 1321, 1322, 408,
	1245, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	1305, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 2986, 1332, 418, 419, 420, 1318, 1319, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	1328, 0, 1255, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1291, 1292, 1295, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 1300,
	1301, 0, 1261, 0, 452, 453, 455, 1335, 1293, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 2982, 469,
	1329, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 1284, 1283, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 1223, 307, 1342,
	526, 527, 528, 529, 1246, 1294, 530, 1308, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 1323, 544,
	545, 1233, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 1324, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 1304, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 1234, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1287, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 1302, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 1349, 657, 658, 659, 660, 1325, 664, 665, 666,
	667, 0, 668, 669, 1220, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 1314,
	1315, 1316, 1317, 0, 690, 2983, 679, 681, 682, 683,
	684, 1326, 685, 1327, 1244, 686, 687, 688, 689, 680,
	691, 692, 0, 1227, 693, 694, 696, 698, 699, 695,
	697, 700, 1288, 701, 0, 0, 702, 703, 704, 767,
	1311, 1348, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 0, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 1224, 0, 0, 0, 0, 2896, 0, 1266,
	1238, 1239, 1240, 1236, 1237, 1249, 0, 1219, 0, 0,
	0, 0, 0, 0, 1217, 1218, 308, 309, 311, 310,
	312, 313, 314, 315, 1250, 316, 317, 0, 1248, 0,
	0, 0, 1290, 1254, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	1303, 0, 329, 1310, 330, 1309, 0, 1320, 331, 332,
	333, 334, 335, 336, 337, 1256, 1289, 1221, 338, 1350,
	1351, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 1313, 373, 375, 1307, 1306, 1226,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 1298, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 1232, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 1245, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 1305, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 1318, 1319, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 1255, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1291, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 1300, 1301, 0, 1261, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 1223, 307, 1342, 526, 527, 528, 529, 1246, 1294,
	530, 1308, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 1233, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 1304, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 1234,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	1302, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 1349, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 1220, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 1314, 1315, 1316, 1317, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 1244, 686,
	687, 688, 689, 680, 691, 692, 0, 1227, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 767, 1311, 1348, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 1224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1219, 0, 0, 0, 0, 0, 0, 1217, 1218,
	0, 0, 0, 0, 0, 0, 0, 0, 1250, 2894,
	0, 2893, 1248, 1266, 1238, 1239, 1240, 1236, 1237, 1249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 1290, 1254, 0, 0,
	318, 0, 319, 320, 321, 1330, 322, 323, 324, 325,
	326, 327, 328, 719, 1303, 0, 329, 1310, 330, 1309,
	0, 1320, 331, 332, 333, 334, 335, 336, 337, 1256,
	1289, 1221, 338, 1350, 1351, 726, 0, 339, 340, 1296,
	0, 1277, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 1331, 365, 366, 367, 1280, 1278, 1279, 1286,
	1282, 1281, 1285, 368, 369, 370, 371, 372, 1313, 373,
	375, 1307, 1306, 1226, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 1298,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 1232, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 1321, 1322, 408, 1245, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 1305, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 1332, 418, 419, 420, 1318, 1319, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 1328, 0,
	1255, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1291, 1292, 1295, 531, 1334, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 1333, 741, 450, 532, 451, 1300, 1301, 0,
	1261, 0, 452, 453, 455, 1335, 1293, 1336, 454, 456,
	457, 1337, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 1329, 468,
	1338, 470, 471, 1339, 0, 472, 473, 474, 475, 476,
	477, 480, 1284, 1283, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 1340, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 1341, 524, 512, 1223, 307, 1342, 526, 527,
	528, 529, 1246, 1294, 530, 1308, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 1343, 543, 1344, 1323, 544, 545, 1233,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 1324, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 1304,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 1345, 606, 607,
	608, 609, 610, 1234, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 1287, 636,
	757, 637, 617, 618, 638, 639, 1346, 640, 641, 642,
	643, 644, 645, 646, 1302, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 1349,
	657, 658, 659, 660, 1325, 664, 665, 666, 667, 0,
	668, 669, 1220, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 1314, 1315, 1316,
	1317, 0, 690, 0, 679, 681, 682, 683, 684, 1326,
	685, 1327, 1244, 686, 687, 688, 689, 680, 691, 692,
	0, 1227, 693, 694, 696, 698, 699, 695, 697, 700,
	1288, 701, 0, 0, 702, 703, 704, 767, 1311, 1348,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	0, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	1224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1219, 0, 0, 0, 0,
	0, 0, 1217, 1218, 0, 0, 0, 0, 0, 0,
	0, 0, 1250, 2891, 0, 2890, 1248, 1266, 1238, 1239,
	1240, 1236, 1237, 1249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	1290, 1254, 0, 0, 318, 0, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 1303, 0,
	329, 1310, 330, 1309, 0, 1320, 331, 332, 333, 334,
	335, 336, 337, 1256, 1289, 1221, 338, 1350, 1351, 726,
	0, 339, 340, 1296, 0, 1277, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 1331, 365, 366, 367,
	1280, 1278, 1279, 1286, 1282, 1281, 1285, 368, 369, 370,
	371, 372, 1313, 373, 375, 1307, 1306, 1226, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 1298, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 1232, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 1321,
	1322, 408, 1245, 305, 0, 0, 0, 0, 0, 409,
	410, 411, 1305, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 1332, 418, 419, 420, 1318,
	1319, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 1328, 0, 1255, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 1291, 1292, 1295, 531, 1334, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 0, 1333, 741, 450, 532,
	451, 1300, 1301, 0, 1261, 0, 452, 453, 455, 1335,
	1293, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 1329, 468, 1338, 470, 471, 1339, 0, 472,
	473, 474, 475, 476, 477, 480, 1284, 1283, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 1223,
	307, 1342, 526, 527, 528, 529, 1246, 1294, 530, 1308,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 1343, 543, 1344,
	1323, 544, 545, 1233, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 1324, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 1304, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 1234, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 1287, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 1302, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 1349, 657, 658, 659, 660, 1325, 664,
	665, 666, 667, 0, 668, 669, 1220, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 1314, 1315, 1316, 1317, 0, 690, 0, 679, 681,
	682, 683, 684, 1326, 685, 1327, 1244, 686, 687, 688,
	689, 680, 691, 692, 0, 1227, 693, 694, 696, 698,
	699, 695, 697, 700, 1288, 701, 0, 0, 702, 703,
	704, 767, 1311, 1348, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 0, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 1224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1219,
	0, 0, 0, 0, 0, 0, 1217, 1218, 0, 0,
	0, 0, 0, 0, 0, 0, 1250, 2888, 0, 2887,
	1248, 1266, 1238, 1239, 1240, 1236, 1237, 1249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 0, 1290, 1254, 0, 0, 318, 0,
	319, 320, 321, 1330, 322, 323, 324, 325, 326, 327,
	328, 719, 1303, 0, 329, 1310, 330, 1309, 0, 1320,
	331, 332, 333, 334, 335, 336, 337, 1256, 1289, 1221,
	338, 1350, 1351, 726, 0, 339, 340, 1296, 0, 1277,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	1331, 365, 366, 367, 1280, 1278, 1279, 1286, 1282, 1281,
	1285, 368, 369, 370, 371, 372, 1313, 373, 375, 1307,
	1306, 1226, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 1298, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	1232, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 1321, 1322, 408, 1245, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 1305, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 1332,
	418, 419, 420, 1318, 1319, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 1328, 0, 1255, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 1291, 1292,
	1295, 531, 1334, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	1333, 741, 450, 532, 451, 1300, 1301, 0, 1261, 0,
	452, 453, 455, 1335, 1293, 1336, 454, 456, 457, 1337,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 1329, 468, 1338, 470,
	471, 1339, 0, 472, 473, 474, 475, 476, 477, 480,
	1284, 1283, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 1340, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	1341, 524, 512, 1223, 307, 1342, 526, 527, 528, 529,
	1246, 1294, 530, 1308, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 1343, 543, 1344, 1323, 544, 545, 1233, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 1324,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 1304, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 1345, 606, 607, 608, 609,
	610, 1234, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 1287, 636, 757, 637,
	617, 618, 638, 639, 1346, 640, 641, 642, 643, 644,
	645, 646, 1302, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 1349, 657, 658,
	659, 660, 1325, 664, 665, 666, 667, 0, 668, 669,
	1220, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 1314, 1315, 1316, 1317, 0,
	690, 0, 679, 681, 682, 683, 684, 1326, 685, 1327,
	1244, 686, 687, 688, 689, 680, 691, 692, 0, 1227,
	693, 694, 696, 698, 699, 695, 697, 700, 1288, 701,
	0, 0, 702, 703, 704, 767, 1311, 1348, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 0, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 1224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1219, 0, 0, 0, 0, 0, 0,
	1217, 1218, 0, 0, 0, 0, 0, 0, 0, 0,
	1250, 2885, 0, 1902, 1248, 1266, 1238, 1239, 1240, 1236,
	1237, 1249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 1290, 1254,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 1303, 0, 329, 1310,
	330, 1309, 0, 1320, 331, 332, 333, 334, 335, 336,
	337, 1256, 1289, 1221, 338, 1350, 1351, 726, 0, 339,
	340, 1296, 0, 1277, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 1280, 1278,
	1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371, 372,
	1313, 373, 375, 1307, 1306, 1226, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 1298, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 1232, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 1321, 1322, 408,
	1245, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	1305, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 1318, 1319, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	1328, 0, 1255, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1291, 1292, 1295, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 1300,
	1301, 0, 1261, 0, 452, 453, 455, 1335, 1293, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	1329, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 1284, 1283, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 1223, 307, 1342,
	526, 527, 528, 529, 1246, 1294, 530, 1308, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 1323, 544,
	545, 1233, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 1324, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 1304, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 1234, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1287, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 1302, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 1349, 657, 658, 659, 660, 1325, 664, 665, 666,
	667, 0, 668, 669, 1220, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 1314,
	1315, 1316, 1317, 0, 690, 0, 679, 681, 682, 683,
	684, 1326, 685, 1327, 1244, 686, 687, 688, 689, 680,
	691, 692, 0, 1227, 693, 694, 696, 698, 699, 695,
	697, 700, 1288, 701, 0, 0, 702, 703, 704, 767,
	1311, 1348, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 1901, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 1224, 0, 0, 0, 0, 1213, 0, 1266,
	1238, 1239, 1240, 1236, 1237, 1249, 0, 1219, 0, 0,
	0, 0, 0, 0, 1217, 1218, 308, 309, 311, 310,
	312, 313, 314, 315, 1250, 316, 317, 0, 1248, 0,
	0, 0, 1290, 1254, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	1303, 0, 329, 1310, 330, 1309, 0, 1320, 331, 332,
	333, 334, 335, 336, 337, 1256, 1289, 1221, 338, 1350,
	1351, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 1313, 373, 375, 1307, 1306, 1226,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 1298, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 1232, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 1245, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 1305, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 1318, 1319, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 1255, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1291, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 1300, 1301, 0, 1261, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 1223, 307, 1342, 526, 527, 528, 529, 1246, 1294,
	530, 1308, 533, 534, 0, 0, 535, 0, 536, 1228,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 1233, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 1304, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 1234,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	1302, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 1349, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 1220, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 1314, 1315, 1316, 1317, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 1244, 686,
	687, 688, 689, 680, 691, 692, 0, 1227, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 767, 1311, 1348, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 1224, 0, 0, 0,
	0, 0, 0, 1266, 1238, 1239, 1240, 1236, 1237, 1249,
	0, 1219, 0, 0, 0, 0, 0, 0, 1217, 1218,
	308, 309, 311, 310, 312, 313, 314, 315, 1250, 316,
	317, 0, 1248, 0, 0, 0, 1290, 1254, 0, 0,
	318, 0, 319, 320, 321, 1330, 322, 323, 324, 325,
	326, 327, 328, 719, 1303, 0, 329, 1310, 330, 1309,
	0, 1320, 331, 332, 333, 334, 335, 336, 337, 1256,
	1289, 1221, 338, 1350, 1351, 726, 0, 339, 340, 1296,
	0, 1277, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 5218, 360, 361, 0, 362,
	363, 364, 1331, 365, 366, 367, 1280, 1278, 1279, 1286,
	1282, 1281, 1285, 368, 369, 370, 371, 372, 1313, 373,
	375, 1307, 1306, 1226, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 1298,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 1232, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 1321, 1322, 408, 1245, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 1305, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 1332, 418, 419, 420, 1318, 1319, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 1328, 0,
	1255, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1291, 1292, 1295, 531, 1334, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 1333, 741, 450, 532, 451, 1300, 1301, 0,
	1261, 0, 452, 453, 455, 1335, 1293, 1336, 454, 456,
	457, 1337, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 1329, 468,
	1338, 470, 471, 1339, 0, 472, 473, 474, 475, 476,
	477, 480, 1284, 1283, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 1340, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 1341, 524, 512, 1223, 307, 1342, 526, 527,
	528, 529, 1246, 1294, 530, 1308, 533, 534, 0, 0,
	535, 0, 536, 1228, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 1343, 543, 1344, 1323, 544, 545, 1233,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 1324, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 1304,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 1345, 606, 607,
	608, 609, 610, 1234, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 1287, 636,
	757, 637, 617, 618, 638, 639, 1346, 640, 641, 642,
	643, 644, 645, 646, 1302, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 1349,
	657, 658, 659, 660, 1325, 664, 665, 666, 667, 0,
	668, 669, 1220, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 1314, 1315, 1316,
	1317, 0, 690, 0, 679, 681, 682, 683, 684, 1326,
	685, 1327, 1244, 686, 687, 688, 689, 680, 691, 692,
	0, 1227, 693, 694, 696, 698, 699, 695, 697, 700,
	1288, 701, 0, 0, 702, 703, 704, 767, 1311, 1348,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	0, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	1224, 0, 0, 0, 0, 0, 0, 1266, 1238, 1239,
	1240, 1236, 1237, 1249, 0, 1219, 0, 0, 0, 0,
	0, 0, 1217, 1218, 308, 309, 311, 310, 312, 313,
	314, 315, 1250, 316, 317, 0, 1248, 0, 0, 0,
	1290, 1254, 0, 0, 318, 0, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 1303, 0,
	329, 1310, 330, 1309, 0, 1320, 331, 332, 333, 334,
	335, 336, 337, 1256, 1289, 1221, 338, 1350, 1351, 726,
	0, 339, 340, 1296, 0, 1277, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 1331, 365, 366, 367,
	1280, 1278, 1279, 1286, 1282, 1281, 1285, 368, 369, 370,
	371, 372, 1313, 373, 375, 1307, 1306, 1226, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 1298, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 1232, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 1321,
	1322, 408, 1245, 305, 0, 0, 0, 0, 0, 409,
	410, 411, 1305, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 1332, 418, 419, 420, 1318,
	1319, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 1328, 0, 1255, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 1291, 1292, 1295, 531, 1334, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 2726, 447, 448, 449, 0, 1333, 741, 450, 532,
	451, 1300, 1301, 0, 1261, 0, 452, 453, 455, 1335,
	1293, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 1329, 468, 1338, 470, 471, 1339, 0, 472,
	473, 474, 475, 476, 477, 480, 1284, 1283, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 1223,
	307, 1342, 526, 527, 528, 529, 1246, 1294, 530, 1308,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 1343, 543, 1344,
	1323, 544, 545, 1233, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 1324, 564, 754, 565, 566,
	2725, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 1304, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 1234, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 1287, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 1302, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 1349, 657, 658, 659, 660, 1325, 664,
	665, 666, 667, 0, 668, 669, 1220, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 1314, 1315, 1316, 1317, 0, 690, 0, 679, 681,
	682, 683, 684, 1326, 685, 1327, 1244, 686, 687, 688,
	689, 680, 691, 692, 0, 1227, 693, 694, 696, 698,
	699, 695, 697, 700, 1288, 701, 0, 0, 702, 703,
	704, 767, 1311, 1348, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 0, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 1224, 0, 0, 0, 0, 0,
	0, 1266, 1238, 1239, 1240, 1236, 1237, 1249, 0, 1219,
	0, 0, 0, 0, 0, 0, 1217, 1218, 308, 309,
	311, 310, 312, 313, 314, 315, 1250, 316, 317, 0,
	1248, 0, 0, 0, 1290, 1254, 0, 0, 318, 0,
	319, 320, 321, 1330, 322, 323, 324, 325, 326, 327,
	328, 719, 1303, 0, 329, 1310, 330, 1309, 0, 1320,
	331, 332, 333, 334, 335, 336, 337, 1256, 1289, 1221,
	338, 1350, 1351, 726, 0, 339, 340, 1296, 0, 1277,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 4928, 360, 361, 0, 362, 363, 364,
	1331, 365, 366, 367, 1280, 1278, 1279, 1286, 1282, 1281,
	1285, 368, 369, 370, 371, 372, 1313, 373, 375, 1307,
	1306, 1226, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 1298, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	1232, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 1321, 1322, 408, 1245, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 1305, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 1332,
	418, 419, 420, 1318, 1319, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 1328, 0, 1255, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 1291, 1292,
	1295, 531, 1334, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	1333, 741, 450, 532, 451, 1300, 1301, 0, 1261, 0,
	452, 453, 455, 1335, 1293, 1336, 454, 456, 457, 1337,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 1329, 468, 1338, 470,
	471, 1339, 0, 472, 473, 474, 475, 476, 477, 480,
	1284, 1283, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 1340, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	1341, 524, 512, 1223, 307, 1342, 526, 527, 528, 529,
	1246, 1294, 530, 1308, 533, 534, 0, 0, 535, 0,
	536, 1228, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 1343, 543, 1344, 1323, 544, 545, 1233, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 1324,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 1304, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 1345, 606, 607, 608, 609,
	610, 1234, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 1287, 636, 757, 637,
	617, 618, 638, 639, 1346, 640, 641, 642, 643, 644,
	645, 646, 1302, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 1349, 657, 658,
	659, 660, 1325, 664, 665, 666, 667, 0, 668, 669,
	1220, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 1314, 1315, 1316, 1317, 0,
	690, 0, 679, 681, 682, 683, 684, 1326, 685, 1327,
	1244, 686, 687, 688, 689, 680, 691, 692, 0, 1227,
	693, 694, 696, 698, 699, 695, 697, 700, 1288, 701,
	0, 0, 702, 703, 704, 767, 1311, 1348, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 0, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 1224, 0,
	0, 0, 0, 0, 0, 1266, 1238, 1239, 1240, 1236,
	1237, 1249, 0, 1219, 0, 0, 0, 0, 0, 0,
	1217, 1218, 308, 309, 311, 310, 312, 313, 314, 315,
	1250, 316, 317, 0, 1248, 0, 0, 0, 1290, 1254,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 1303, 0, 329, 1310,
	330, 1309, 0, 1320, 331, 332, 333, 334, 335, 336,
	337, 1256, 1289, 1221, 338, 1350, 1351, 726, 0, 339,
	340, 1296, 0, 1277, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 1280, 1278,
	1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371, 372,
	1313, 373, 375, 1307, 1306, 1226, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 1298, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 1232, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 1321, 1322, 408,
	1245, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	1305, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 1318, 1319, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	1328, 0, 1255, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1291, 1292, 1295, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 1300,
	1301, 0, 1261, 0, 452, 453, 455, 1335, 1293, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	1329, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 1284, 1283, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 1223, 307, 1342,
	526, 527, 528, 529, 1246, 1294, 530, 1308, 533, 534,
	0, 0, 535, 0, 536, 1228, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 1323, 544,
	545, 1233, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 1324, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 1304, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 1234, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1287, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 1302, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 1349, 657, 658, 659, 660, 1325, 664, 665, 666,
	667, 0, 668, 669, 1220, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 1314,
	1315, 1316, 1317, 0, 690, 0, 679, 681, 682, 683,
	684, 1326, 685, 1327, 1244, 686, 687, 688, 689, 680,
	691, 692, 0, 1227, 693, 694, 696, 698, 699, 695,
	697, 700, 1288, 701, 0, 0, 702, 703, 704, 767,
	1311, 1348, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 0, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 1224, 0, 0, 0, 0, 0, 0, 1266,
	1238, 1239, 1240, 1236, 1237, 1249, 0, 1219, 0, 0,
	0, 0, 0, 0, 1217, 1218, 308, 309, 311, 310,
	312, 313, 314, 315, 1250, 316, 317, 0, 1248, 0,
	0, 0, 1290, 1254, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	1303, 0, 329, 1310, 330, 1309, 0, 1320, 331, 332,
	333, 334, 335, 336, 337, 1256, 1289, 1221, 338, 1350,
	1351, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 1313, 373, 375, 1307, 1306, 1226,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 1298, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 1232, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 1245, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 1305, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 1318, 1319, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 1255, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1291, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 1300, 1301, 0, 1261, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 1223, 4469, 1342, 526, 527, 528, 529, 1246, 1294,
	530, 1308, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 1233, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 1304, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 1234,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	1302, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 1349, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 1220, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 1314, 1315, 1316, 1317, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 1244, 686,
	687, 688, 689, 680, 691, 692, 0, 1227, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 767, 1311, 1348, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 1224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1219, 0, 0, 0, 0, 0, 0, 1217, 1218,
	2139, 1266, 1238, 1239, 1240, 1236, 1237, 1249, 1250, 0,
	0, 0, 1248, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 0, 1290, 1254, 0, 0, 318, 0,
	319, 320, 321, 1330, 322, 323, 324, 325, 326, 327,
	328, 719, 1303, 0, 329, 1310, 330, 1309, 0, 1320,
	331, 332, 333, 334, 335, 336, 337, 1256, 1289, 1221,
	338, 1350, 1351, 726, 0, 339, 340, 1296, 0, 1277,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	1331, 365, 366, 367, 1280, 1278, 1279, 1286, 1282, 1281,
	1285, 368, 369, 370, 371, 372, 1313, 373, 375, 1307,
	1306, 1226, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 1298, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	1232, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 1321, 1322, 408, 1245, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 1305, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 1332,
	418, 419, 420, 1318, 1319, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 1328, 0, 1255, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 1291, 1292,
	1295, 531, 1334, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	1333, 741, 450, 532, 451, 1300, 1301, 0, 1261, 0,
	452, 453, 455, 1335, 1293, 1336, 454, 456, 457, 1337,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 1329, 468, 1338, 470,
	471, 1339, 0, 472, 473, 474, 475, 476, 477, 480,
	1284, 1283, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 1340, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	1341, 524, 512, 1223, 307, 1342, 526, 527, 528, 529,
	1246, 1294, 530, 1308, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 1343, 543, 1344, 1323, 544, 545, 1233, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 1324,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 1304, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 1345, 606, 607, 608, 609,
	610, 1234, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 1287, 636, 757, 637,
	617, 618, 638, 639, 1346, 640, 641, 642, 643, 644,
	645, 646, 1302, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 1349, 657, 658,
	659, 660, 1325, 664, 665, 666, 667, 0, 668, 669,
	1220, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 1314, 1315, 1316, 1317, 0,
	690, 0, 679, 681, 682, 683, 684, 1326, 685, 1327,
	1244, 686, 687, 688, 689, 680, 691, 692, 0, 1227,
	693, 694, 696, 698, 699, 695, 697, 700, 1288, 701,
	0, 0, 702, 703, 704, 767, 1311, 1348, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 0, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 1224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1219, 0, 0, 0, 0, 0, 0,
	1217, 1218, 2139, 1266, 1238, 1239, 1240, 1236, 1237, 1249,
	1250, 0, 0, 0, 1248, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 1290, 1254, 0, 0,
	318, 0, 319, 320, 321, 1330, 322, 323, 324, 325,
	326, 327, 328, 719, 1303, 0, 329, 1310, 330, 1309,
	0, 1320, 331, 332, 333, 334, 335, 336, 337, 1256,
	1289, 1221, 338, 1350, 1351, 726, 0, 339, 340, 1296,
	0, 1277, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 1331, 365, 366, 367, 1280, 1278, 1279, 1286,
	1282, 1281, 1285, 368, 369, 370, 371, 372, 1313, 373,
	375, 1307, 1306, 1226, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 1298,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 1232, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 1321, 1322, 408, 1245, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 1305, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 1332, 418, 419, 420, 1318, 1319, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 1328, 0,
	1255, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1291, 1292, 1295, 531, 1334, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 1333, 741, 450, 532, 451, 1300, 1301, 0,
	1261, 0, 452, 453, 455, 1335, 1293, 1336, 454, 456,
	457, 1337, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 1329, 468,
	1338, 470, 471, 1339, 0, 472, 473, 474, 475, 476,
	477, 480, 1284, 1283, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 1340, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 1341, 524, 512, 1223, 307, 1342, 526, 527,
	528, 529, 1246, 1294, 530, 1308, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 1343, 543, 1344, 1323, 544, 545, 1233,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 1324, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 1304,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 1345, 606, 607,
	608, 609, 610, 1234, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 1287, 636,
	757, 637, 617, 618, 638, 639, 1346, 640, 641, 642,
	643, 644, 645, 646, 1302, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 1349,
	657, 658, 659, 660, 1325, 664, 665, 666, 667, 0,
	668, 669, 1220, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 1314, 1315, 1316,
	1317, 0, 690, 0, 679, 681, 682, 683, 684, 1326,
	685, 1327, 1244, 686, 687, 688, 689, 680, 691, 692,
	0, 1227, 693, 694, 696, 698, 699, 695, 697, 700,
	1288, 701, 0, 0, 702, 703, 704, 767, 1311, 1348,
	4124, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	0, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	1224, 0, 0, 0, 0, 0, 0, 1266, 1238, 1239,
	1240, 1236, 1237, 1249, 0, 1219, 0, 0, 0, 0,
	0, 0, 1217, 1218, 308, 309, 311, 310, 312, 313,
	314, 315, 1250, 316, 317, 0, 1248, 0, 0, 0,
	1290, 1254, 0, 0, 318, 0, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 1303, 0,
	329, 1310, 330, 1309, 0, 1320, 331, 332, 333, 334,
	335, 336, 337, 1256, 1289, 1221, 338, 1350, 1351, 726,
	0, 339, 340, 1296, 0, 1277, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 1331, 365, 366, 367,
	1280, 1278, 1279, 1286, 1282, 1281, 1285, 368, 369, 370,
	371, 372, 1313, 373, 375, 1307, 1306, 1226, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 1298, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 1232, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 1321,
	1322, 408, 1245, 305, 0, 0, 0, 0, 0, 409,
	410, 411, 1305, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 2986, 1332, 418, 419, 420, 1318,
	1319, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 1328, 0, 1255, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 1291, 1292, 1295, 531, 1334, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 0, 1333, 741, 450, 532,
	451, 1300, 1301, 0, 1261, 0, 452, 453, 455, 1335,
	1293, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 1329, 468, 1338, 470, 471, 1339, 0, 472,
	473, 474, 475, 476, 477, 480, 1284, 1283, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 1223,
	307, 1342, 526, 527, 528, 529, 1246, 1294, 530, 1308,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 1343, 543, 1344,
	1323, 544, 545, 1233, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 1324, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 1304, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 1234, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 1287, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 1302, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 1349, 657, 658, 659, 660, 1325, 664,
	665, 666, 667, 0, 668, 669, 1220, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 1314, 1315, 1316, 1317, 0, 690, 0, 679, 681,
	682, 683, 684, 1326, 685, 1327, 1244, 686, 687, 688,
	689, 680, 691, 692, 0, 1227, 693, 694, 696, 698,
	699, 695, 697, 700, 1288, 701, 0, 0, 702, 703,
	704, 767, 1311, 1348, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 0, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 1224, 0, 0, 0, 0, 0,
	0, 1266, 1238, 1239, 1240, 1236, 1237, 1249, 0, 1219,
	0, 0, 0, 0, 0, 0, 1217, 1218, 308, 309,
	311, 310, 312, 313, 314, 315, 1250, 316, 317, 0,
	1248, 0, 0, 0, 1290, 1254, 0, 0, 318, 0,
	319, 320, 321, 1330, 322, 323, 324, 325, 326, 327,
	328, 719, 1303, 0, 329, 1310, 330, 1309, 0, 1320,
	331, 332, 333, 334, 335, 336, 337, 1256, 1289, 1221,
	338, 1350, 1351, 726, 0, 339, 340, 1296, 0, 1277,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	1331, 365, 366, 367, 1280, 1278, 1279, 1286, 1282, 1281,
	1285, 368, 369, 370, 371, 372, 1313, 373, 375, 1307,
	1306, 1226, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 1298, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	1232, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 1321, 1322, 408, 1245, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 1305, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 1332,
	418, 419, 420, 1318, 1319, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 1328, 0, 1255, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 1291, 1292,
	1295, 531, 1334, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	1333, 741, 450, 532, 451, 1300, 1301, 0, 1261, 0,
	452, 453, 455, 1335, 1293, 1336, 454, 456, 457, 1337,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 1329, 468, 1338, 470,
	471, 1339, 0, 472, 473, 474, 475, 476, 477, 480,
	1284, 1283, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 1340, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	1341, 524, 512, 1223, 307, 1342, 526, 527, 528, 529,
	1246, 1294, 530, 1308, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 1343, 543, 1344, 1323, 544, 545, 1233, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 1324,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 1304, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 1345, 606, 607, 608, 609,
	610, 1234, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 1287, 636, 757, 637,
	617, 618, 638, 639, 1346, 640, 641, 642, 643, 644,
	645, 646, 1302, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 1349, 657, 658,
	659, 660, 1325, 664, 665, 666, 667, 0, 668, 669,
	1220, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 1314, 1315, 1316, 1317, 0,
	690, 0, 679, 681, 682, 683, 684, 1326, 685, 1327,
	1244, 686, 687, 688, 689, 680, 691, 692, 0, 1227,
	693, 694, 696, 698, 699, 695, 697, 700, 1288, 701,
	0, 0, 702, 703, 704, 767, 1311, 1348, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 0, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 1224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1219, 0, 0, 0, 0, 0, 0,
	1217, 1218, 0, 0, 0, 0, 0, 0, 0, 0,
	1250, 2067, 0, 2991, 1248, 1266, 1238, 1239, 1240, 1236,
	1237, 1249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 1290, 1254,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 1303, 0, 329, 1310,
	330, 1309, 0, 1320, 331, 332, 333, 334, 335, 336,
	337, 1256, 1289, 1221, 338, 1350, 1351, 726, 0, 339,
	340, 1296, 0, 1277, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 1280, 1278,
	1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371, 372,
	1313, 373, 375, 1307, 1306, 1226, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 1298, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 1232, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 1321, 1322, 408,
	1245, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	1305, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 1318, 1319, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	1328, 0, 1255, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1291, 1292, 1295, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 1300,
	1301, 0, 1261, 0, 452, 453, 455, 1335, 1293, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	1329, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 1284, 1283, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 1223, 307, 1342,
	526, 527, 528, 529, 1246, 1294, 530, 1308, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 1323, 544,
	545, 1233, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 1324, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 1304, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 1234, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1287, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 1302, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 1349, 657, 658, 659, 660, 1325, 664, 665, 666,
	667, 0, 668, 669, 1220, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 1314,
	1315, 1316, 1317, 0, 690, 0, 679, 681, 682, 683,
	684, 1326, 685, 1327, 1244, 686, 687, 688, 689, 680,
	691, 692, 0, 1227, 693, 694, 696, 698, 699, 695,
	697, 700, 1288, 701, 0, 0, 702, 703, 704, 767,
	1311, 1348, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 0, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 1224, 0, 0, 0, 0, 2989, 0, 1266,
	1238, 1239, 1240, 1236, 1237, 1249, 0, 1219, 0, 0,
	0, 0, 0, 0, 1217, 1218, 308, 309, 311, 310,
	312, 313, 314, 315, 1250, 316, 317, 0, 1248, 0,
	0, 0, 1290, 1254, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	1303, 0, 329, 1310, 330, 1309, 0, 1320, 331, 332,
	333, 334, 335, 336, 337, 1256, 1289, 1221, 338, 1350,
	1351, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 1313, 373, 375, 1307, 1306, 1226,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 1298, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 1232, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 1245, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 1305, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 1318, 1319, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 1255, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1291, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 1300, 1301, 0, 1261, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 1223, 307, 1342, 526, 527, 528, 529, 1246, 1294,
	530, 1308, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 1233, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 1304, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 1234,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	1302, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 1349, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 1220, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 1314, 1315, 1316, 1317, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 1244, 686,
	687, 688, 689, 680, 691, 692, 0, 1227, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 767, 1311, 1348, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 1224, 0, 0, 0,
	0, 2977, 0, 1266, 1238, 1239, 1240, 1236, 1237, 1249,
	0, 1219, 0, 0, 0, 0, 0, 0, 1217, 1218,
	308, 309, 311, 310, 312, 313, 314, 315, 1250, 316,
	317, 0, 1248, 0, 0, 0, 1290, 1254, 0, 0,
	318, 0, 319, 320, 321, 1330, 322, 323, 324, 325,
	326, 327, 328, 719, 1303, 0, 329, 1310, 330, 1309,
	0, 1320, 331, 332, 333, 334, 335, 336, 337, 1256,
	1289, 1221, 338, 1350, 1351, 726, 0, 339, 340, 1296,
	0, 1277, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 1331, 365, 366, 367, 1280, 1278, 1279, 1286,
	1282, 1281, 1285, 368, 369, 370, 371, 372, 1313, 373,
	375, 1307, 1306, 1226, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 1298,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 1232, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 1321, 1322, 408, 1245, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 1305, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 1332, 418, 419, 420, 1318, 1319, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 1328, 0,
	1255, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1291, 1292, 1295, 531, 1334, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 1333, 741, 450, 532, 451, 1300, 1301, 0,
	1261, 0, 452, 453, 455, 1335, 1293, 1336, 454, 456,
	457, 1337, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 1329, 468,
	1338, 470, 471, 1339, 0, 472, 473, 474, 475, 476,
	477, 480, 1284, 1283, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 1340, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 1341, 524, 512, 1223, 307, 1342, 526, 527,
	528, 529, 1246, 1294, 530, 1308, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 1343, 543, 1344, 1323, 544, 545, 1233,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 1324, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 1304,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 1345, 606, 607,
	608, 609, 610, 1234, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 1287, 636,
	757, 637, 617, 618, 638, 639, 1346, 640, 641, 642,
	643, 644, 645, 646, 1302, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 1349,
	657, 658, 659, 660, 1325, 664, 665, 666, 667, 0,
	668, 669, 1220, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 1314, 1315, 1316,
	1317, 0, 690, 0, 679, 681, 682, 683, 684, 1326,
	685, 1327, 1244, 686, 687, 688, 689, 680, 691, 692,
	0, 1227, 693, 694, 696, 698, 699, 695, 697, 700,
	1288, 701, 0, 0, 702, 703, 704, 767, 1311, 1348,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	0, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	1224, 0, 0, 0, 0, 2966, 0, 1266, 1238, 1239,
	1240, 1236, 1237, 1249, 0, 1219, 0, 0, 0, 0,
	0, 0, 1217, 1218, 308, 309, 311, 310, 312, 313,
	314, 315, 1250, 316, 317, 0, 1248, 0, 0, 0,
	1290, 1254, 0, 0, 318, 0, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 1303, 0,
	329, 1310, 330, 1309, 0, 1320, 331, 332, 333, 334,
	335, 336, 337, 1256, 1289, 1221, 338, 1350, 1351, 726,
	0, 339, 340, 1296, 0, 1277, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 1331, 365, 366, 367,
	1280, 1278, 1279, 1286, 1282, 1281, 1285, 368, 369, 370,
	371, 372, 1313, 373, 375, 1307, 1306, 1226, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 1298, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 1232, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 1321,
	1322, 408, 1245, 305, 0, 0, 0, 0, 0, 409,
	410, 411, 1305, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 1332, 418, 419, 420, 1318,
	1319, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 1328, 0, 1255, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 1291, 1292, 1295, 531, 1334, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 0, 1333, 741, 450, 532,
	451, 1300, 1301, 0, 1261, 0, 452, 453, 455, 1335,
	1293, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 1329, 468, 1338, 470, 471, 1339, 0, 472,
	473, 474, 475, 476, 477, 480, 1284, 1283, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 1223,
	307, 1342, 526, 527, 528, 529, 1246, 1294, 530, 1308,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 1343, 543, 1344,
	1323, 544, 545, 1233, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 1324, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 1304, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 1234, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 1287, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 1302, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 1349, 657, 658, 659, 660, 1325, 664,
	665, 666, 667, 0, 668, 669, 1220, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 1314, 1315, 1316, 1317, 0, 690, 0, 679, 681,
	682, 683, 684, 1326, 685, 1327, 1244, 686, 687, 688,
	689, 680, 691, 692, 0, 1227, 693, 694, 696, 698,
	699, 695, 697, 700, 1288, 701, 0, 0, 702, 703,
	704, 767, 1311, 1348, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 0, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 1224, 0, 0, 0, 0, 2964,
	0, 2955, 2962, 1239, 1240, 1236, 1237, 1249, 0, 1219,
	0, 0, 0, 0, 0, 0, 1217, 1218, 308, 309,
	311, 310, 312, 313, 314, 315, 1250, 316, 317, 0,
	1248, 0, 0, 0, 1290, 1254, 0, 0, 318, 0,
	319, 320, 321, 1330, 322, 323, 324, 325, 326, 327,
	328, 719, 1303, 0, 329, 1310, 330, 1309, 0, 1320,
	331, 332, 333, 334, 335, 336, 337, 1256, 1289, 1221,
	338, 1350, 1351, 726, 0, 339, 340, 1296, 0, 1277,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	1331, 365, 366, 367, 1280, 1278, 1279, 1286, 1282, 1281,
	1285, 368, 369, 370, 371, 372, 1313, 2958, 375, 1307,
	1306, 1226, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 1298, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	1232, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 1321, 1322, 408, 1245, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 1305, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 1332,
	418, 419, 420, 1318, 1319, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 1328, 0, 1255, 431,
	0, 432, 433, 434, 435, 436, 2959, 438, 1291, 1292,
	1295, 531, 1334, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	1333, 741, 450, 532, 451, 1300, 1301, 0, 1261, 0,
	452, 453, 455, 1335, 1293, 1336, 454, 456, 457, 1337,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 1329, 468, 1338, 470,
	471, 1339, 0, 472, 473, 474, 475, 476, 477, 480,
	1284, 1283, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 2960, 490, 2957, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 1340, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	1341, 524, 512, 1223, 307, 1342, 526, 527, 528, 529,
	1246, 1294, 530, 1308, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 1343, 543, 1344, 1323, 544, 545, 1233, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 1324,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 1304, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 1345, 606, 607, 608, 609,
	610, 1234, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 2961, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 1287, 636, 757, 637,
	617, 618, 638, 639, 1346, 640, 641, 642, 643, 644,
	645, 646, 1302, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 1349, 657, 658,
	659, 660, 1325, 664, 665, 666, 667, 0, 668, 669,
	1220, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 1314, 1315, 1316, 1317, 0,
	690, 0, 679, 681, 682, 683, 684, 1326, 685, 1327,
	1244, 686, 687, 688, 689, 680, 691, 692, 0, 1227,
	693, 694, 696, 698, 699, 695, 697, 700, 1288, 701,
	0, 0, 702, 703, 704, 767, 1311, 1348, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 0, 0,
	0, 0, 713, 714, 771, 715, 2956, 717, 1224, 0,
	0, 0, 0, 2952, 0, 2955, 2962, 1239, 1240, 1236,
	1237, 1249, 0, 1219, 0, 0, 0, 0, 0, 0,
	1217, 1218, 308, 309, 311, 310, 312, 313, 314, 315,
	1250, 316, 317, 0, 1248, 0, 0, 0, 1290, 1254,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 1303, 0, 329, 1310,
	330, 1309, 0, 1320, 331, 332, 333, 334, 335, 336,
	337, 1256, 1289, 1221, 338, 1350, 1351, 726, 0, 339,
	340, 1296, 0, 1277, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 1280, 1278,
	1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371, 372,
	1313, 2958, 375, 1307, 1306, 1226, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 1298, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 1232, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 1321, 1322, 408,
	1245, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	1305, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 1318, 1319, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	1328, 0, 1255, 431, 0, 432, 433, 434, 435, 436,
	2959, 438, 1291, 1292, 1295, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 1300,
	1301, 0, 1261, 0, 452, 453, 455, 1335, 1293, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	1329, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 1284, 1283, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 2960, 490, 2957,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 1223, 307, 1342,
	526, 527, 528, 529, 1246, 1294, 530, 1308, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 1323, 544,
	545, 1233, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 1324, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 1304, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 1234, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	2961, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1287, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 1302, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 1349, 657, 658, 659, 660, 1325, 664, 665, 666,
	667, 0, 668, 669, 1220, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 1314,
	1315, 1316, 1317, 0, 690, 0, 679, 681, 682, 683,
	684, 1326, 685, 1327, 1244, 686, 687, 688, 689, 680,
	691, 692, 0, 1227, 693, 694, 696, 698, 699, 695,
	697, 700, 1288, 701, 0, 0, 702, 703, 704, 767,
	1311, 1348, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 0, 0, 0, 0, 713, 714, 771, 715,
	2956, 717, 1224, 0, 0, 0, 0, 0, 0, 1266,
	1238, 1239, 1240, 1236, 1237, 1249, 0, 1219, 0, 0,
	0, 0, 0, 0, 1217, 1218, 308, 309, 311, 310,
	312, 313, 314, 315, 1250, 316, 317, 0, 1248, 0,
	0, 0, 1290, 1254, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	1303, 0, 329, 1310, 330, 1309, 0, 1320, 331, 332,
	333, 334, 335, 336, 337, 1256, 1289, 1221, 338, 1350,
	1351, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 1313, 373, 375, 1307, 1306, 1226,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 1298, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 1232, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 1245, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 1305, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 1318, 1319, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 1255, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1291, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 1300, 1301, 0, 1261, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 1223, 307, 1342, 526, 527, 528, 529, 1246, 1294,
	530, 1308, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 1233, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 1304, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 1234,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	1302, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 1349, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 1220, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 1314, 1315, 1316, 1317, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 1244, 686,
	687, 688, 689, 680, 691, 692, 0, 1227, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 767, 1311, 1348, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 1224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1219, 0, 0, 0, 0, 0, 0, 1217, 1218,
	0, 0, 0, 0, 0, 0, 2075, 0, 1250, 0,
	0, 0, 1248, 1266, 1238, 1239, 1240, 1236, 1237, 1249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 2705, 316,
	317, 0, 0, 0, 0, 0, 1290, 1254, 0, 0,
	318, 0, 319, 320, 321, 1330, 322, 323, 324, 325,
	326, 327, 328, 719, 1303, 0, 329, 1310, 330, 1309,
	0, 1320, 331, 332, 333, 334, 335, 336, 337, 1256,
	1289, 1221, 338, 1350, 1351, 726, 0, 339, 340, 1296,
	0, 1277, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 1331, 365, 366, 367, 1280, 1278, 1279, 1286,
	1282, 1281, 1285, 368, 369, 370, 371, 372, 1313, 373,
	375, 1307, 1306, 1226, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 1298,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 1232, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 1321, 1322, 408, 1245, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 1305, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 1332, 418, 419, 420, 1318, 1319, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 1328, 0,
	1255, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1291, 1292, 1295, 531, 1334, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 1333, 741, 450, 532, 451, 1300, 1301, 0,
	1261, 0, 452, 453, 455, 1335, 1293, 1336, 454, 456,
	457, 1337, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 1329, 468,
	1338, 470, 471, 1339, 0, 472, 473, 474, 475, 476,
	477, 480, 1284, 1283, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 1340, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 1341, 524, 512, 1223, 307, 1342, 526, 527,
	528, 529, 1246, 1294, 530, 1308, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 1343, 543, 1344, 1323, 544, 545, 1233,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 1324, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 1304,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 1345, 606, 607,
	608, 609, 610, 1234, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 1287, 636,
	757, 637, 617, 618, 638, 639, 1346, 640, 641, 642,
	643, 644, 645, 646, 1302, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 1349,
	657, 658, 659, 660, 1325, 664, 665, 666, 667, 0,
	668, 669, 1220, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 1314, 1315, 1316,
	1317, 0, 690, 0, 679, 681, 682, 683, 684, 1326,
	685, 1327, 1244, 686, 687, 688, 689, 680, 691, 692,
	0, 1227, 693, 694, 696, 698, 699, 695, 697, 700,
	1288, 701, 0, 0, 702, 703, 704, 767, 1311, 1348,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	0, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	1224, 0, 0, 0, 0, 2666, 0, 1266, 1238, 1239,
	1240, 1236, 1237, 1249, 0, 1219, 0, 0, 0, 0,
	0, 0, 1217, 1218, 308, 309, 311, 310, 312, 313,
	314, 315, 1250, 316, 317, 0, 1248, 0, 0, 0,
	1290, 1254, 0, 0, 318, 0, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 1303, 0,
	329, 1310, 330, 1309, 0, 1320, 331, 332, 333, 334,
	335, 336, 337, 1256, 1289, 1221, 338, 1350, 1351, 726,
	0, 339, 340, 1296, 0, 1277, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 1331, 365, 366, 367,
	1280, 1278, 1279, 1286, 1282, 1281, 1285, 368, 369, 370,
	371, 372, 1313, 373, 375, 1307, 1306, 1226, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 1298, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 1232, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 1321,
	1322, 408, 1245, 305, 0, 0, 0, 0, 0, 409,
	410, 411, 1305, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 1332, 418, 419, 420, 1318,
	1319, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 1328, 0, 1255, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 1291, 1292, 1295, 531, 1334, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 0, 1333, 741, 450, 532,
	451, 1300, 1301, 0, 1261, 0, 452, 453, 455, 1335,
	1293, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 1329, 468, 1338, 470, 471, 1339, 0, 472,
	473, 474, 475, 476, 477, 480, 1284, 1283, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 1223,
	307, 1342, 526, 527, 528, 529, 1246, 1294, 530, 1308,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 1343, 543, 1344,
	1323, 544, 545, 1233, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 1324, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 1304, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 1234, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 1287, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 1302, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 1349, 657, 658, 659, 660, 1325, 664,
	665, 666, 667, 0, 668, 669, 1220, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 1314, 1315, 1316, 1317, 0, 690, 0, 679, 681,
	682, 683, 684, 1326, 685, 1327, 1244, 686, 687, 688,
	689, 680, 691, 692, 0, 1227, 693, 694, 696, 698,
	699, 695, 697, 700, 1288, 701, 0, 0, 702, 703,
	704, 767, 1311, 1348, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 0, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 1224, 0, 0, 0, 0, 2636,
	0, 1266, 1238, 1239, 1240, 1236, 1237, 1249, 0, 1219,
	0, 0, 0, 0, 0, 0, 1217, 1218, 308, 309,
	311, 310, 312, 313, 314, 315, 1250, 316, 317, 0,
	1248, 0, 0, 0, 1290, 1254, 0, 0, 318, 0,
	319, 320, 321, 1330, 322, 323, 324, 325, 326, 327,
	328, 719, 1303, 0, 329, 1310, 330, 1309, 0, 1320,
	331, 332, 333, 334, 335, 336, 337, 1256, 1289, 1221,
	338, 1350, 1351, 726, 0, 339, 340, 1296, 0, 1277,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	1331, 365, 366, 367, 1280, 1278, 1279, 1286, 1282, 1281,
	1285, 368, 369, 370, 371, 372, 1313, 373, 375, 1307,
	1306, 1226, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 1298, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	1232, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 1321, 1322, 408, 1245, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 1305, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 1332,
	418, 419, 420, 1318, 1319, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 1328, 0, 1255, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 1291, 1292,
	1295, 531, 1334, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	1333, 741, 450, 532, 451, 1300, 1301, 0, 1261, 0,
	452, 453, 455, 1335, 1293, 1336, 454, 456, 457, 1337,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 1329, 468, 1338, 470,
	471, 1339, 0, 472, 473, 474, 475, 476, 477, 480,
	1284, 1283, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 1340, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	1341, 524, 512, 1223, 307, 1342, 526, 527, 528, 529,
	1246, 1294, 530, 1308, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 1343, 543, 1344, 1323, 544, 545, 1233, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 1324,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 1304, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 1345, 606, 607, 608, 609,
	610, 1234, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 1287, 636, 757, 637,
	617, 618, 638, 639, 1346, 640, 641, 642, 643, 644,
	645, 646, 1302, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 1349, 657, 658,
	659, 660, 1325, 664, 665, 666, 667, 0, 668, 669,
	1220, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 1314, 1315, 1316, 1317, 0,
	690, 0, 679, 681, 682, 683, 684, 1326, 685, 1327,
	1244, 686, 687, 688, 689, 680, 691, 692, 0, 1227,
	693, 694, 696, 698, 699, 695, 697, 700, 1288, 701,
	0, 0, 702, 703, 704, 767, 1311, 1348, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 0, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 1224, 0,
	0, 0, 0, 1907, 0, 1266, 1238, 1239, 1240, 1236,
	1237, 1249, 0, 1219, 0, 0, 0, 0, 0, 0,
	1217, 1218, 308, 309, 311, 310, 312, 313, 314, 315,
	1250, 316, 317, 0, 1248, 0, 0, 0, 1290, 1254,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 1303, 0, 329, 1310,
	330, 1309, 0, 1320, 331, 332, 333, 334, 335, 336,
	337, 1256, 1289, 1221, 338, 1350, 1351, 726, 0, 339,
	340, 1296, 0, 1277, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 1280, 1278,
	1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371, 372,
	1313, 373, 375, 1307, 1306, 1226, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 1298, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 1232, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 1321, 1322, 408,
	1245, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	1305, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 1318, 1319, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	1328, 0, 1255, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1291, 1292, 1295, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 1300,
	1301, 0, 1261, 0, 452, 453, 455, 1335, 1293, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	1329, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 1284, 1283, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 1223, 307, 1342,
	526, 527, 528, 529, 1246, 1294, 530, 1308, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 1323, 544,
	545, 1233, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 1324, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 1304, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 1234, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1287, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 1302, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 1349, 657, 658, 659, 660, 1325, 664, 665, 666,
	667, 0, 668, 669, 1220, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 1314,
	1315, 1316, 1317, 0, 690, 0, 679, 681, 682, 683,
	684, 1326, 685, 1327, 1244, 686, 687, 688, 689, 680,
	691, 692, 0, 1227, 693, 694, 696, 698, 699, 695,
	697, 700, 1288, 701, 0, 0, 702, 703, 704, 767,
	1311, 1348, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 0, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 1224, 0, 0, 0, 0, 1835, 0, 1266,
	1238, 1239, 1240, 1236, 1237, 1249, 0, 1219, 0, 0,
	0, 0, 0, 0, 1217, 1218, 308, 309, 311, 310,
	312, 313, 314, 315, 1250, 316, 317, 0, 1248, 0,
	0, 0, 1290, 1254, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	1303, 0, 329, 1310, 330, 1309, 0, 1320, 331, 332,
	333, 334, 335, 336, 337, 1256, 1289, 1221, 338, 1350,
	1351, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 1313, 373, 375, 1307, 1306, 1226,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 1298, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 1232, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 1245, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 1305, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 1318, 1319, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 1255, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1291, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 1300, 1301, 0, 1261, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 1223, 307, 1342, 526, 527, 528, 529, 1246, 1294,
	530, 1308, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 1233, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 1304, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 1234,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	1302, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 1349, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 1220, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 1314, 1315, 1316, 1317, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 1244, 686,
	687, 688, 689, 680, 691, 692, 0, 1227, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 767, 1311, 1348, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 1224, 0, 0, 0,
	0, 1830, 0, 1266, 1238, 1239, 1240, 1236, 1237, 1249,
	0, 1219, 0, 0, 0, 0, 0, 0, 1217, 1218,
	308, 309, 311, 310, 312, 313, 314, 315, 1250, 316,
	317, 0, 1248, 0, 0, 0, 1290, 1254, 0, 0,
	318, 0, 319, 320, 321, 1330, 322, 323, 324, 325,
	326, 327, 328, 719, 1303, 0, 329, 1310, 330, 1309,
	0, 1320, 331, 332, 333, 334, 335, 336, 337, 1256,
	1289, 1221, 338, 1350, 1351, 726, 0, 339, 340, 1296,
	0, 1277, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 1331, 365, 366, 367, 1280, 1278, 1279, 1286,
	1282, 1281, 1285, 368, 369, 370, 371, 372, 1313, 373,
	375, 1307, 1306, 1226, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 1298,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 1232, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 1321, 1322, 408, 1245, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 1305, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 1332, 418, 419, 420, 1318, 1319, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 1328, 0,
	1255, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1291, 1292, 1295, 531, 1334, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 1333, 741, 450, 532, 451, 1300, 1301, 0,
	1261, 0, 452, 453, 455, 1335, 1293, 1336, 454, 456,
	457, 1337, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 1329, 468,
	1338, 470, 471, 1339, 0, 472, 473, 474, 475, 476,
	477, 480, 1284, 1283, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 1340, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 1341, 524, 512, 1223, 307, 1342, 526, 527,
	528, 529, 1246, 1294, 530, 1308, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 1343, 543, 1344, 1323, 544, 545, 1233,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 1324, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 1304,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 1345, 606, 607,
	608, 609, 610, 1234, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 1287, 636,
	757, 637, 617, 618, 638, 639, 1346, 640, 641, 642,
	643, 644, 645, 646, 1302, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 1349,
	657, 658, 659, 660, 1325, 664, 665, 666, 667, 0,
	668, 669, 1220, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 1314, 1315, 1316,
	1317, 0, 690, 0, 679, 681, 682, 683, 684, 1326,
	685, 1327, 1244, 686, 687, 688, 689, 680, 691, 692,
	0, 1227, 693, 694, 696, 698, 699, 695, 697, 700,
	1288, 701, 0, 0, 702, 703, 704, 767, 1311, 1348,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	0, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	1224, 0, 0, 0, 0, 1816, 0, 1266, 1238, 1239,
	1240, 1236, 1237, 1249, 0, 1219, 0, 0, 0, 0,
	0, 0, 1217, 1218, 308, 309, 311, 310, 312, 313,
	314, 315, 1250, 316, 317, 0, 1248, 0, 0, 0,
	1290, 1254, 0, 0, 318, 0, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 1303, 0,
	329, 1310, 330, 1309, 0, 1320, 331, 332, 333, 334,
	335, 336, 337, 1256, 1289, 1221, 338, 1350, 1351, 726,
	0, 339, 340, 1296, 0, 1277, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 1331, 365, 366, 367,
	1280, 1278, 1279, 1286, 1282, 1281, 1285, 368, 369, 370,
	371, 372, 1313, 373, 375, 1307, 1306, 1226, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 1298, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 1232, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 1321,
	1322, 408, 1245, 305, 0, 0, 0, 0, 0, 409,
	410, 411, 1305, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 1332, 418, 419, 420, 1318,
	1319, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 1328, 0, 1255, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 1291, 1292, 1295, 531, 1334, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 0, 1333, 741, 450, 532,
	451, 1300, 1301, 0, 1261, 0, 452, 453, 455, 1335,
	1293, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 1329, 468, 1338, 470, 471, 1339, 0, 472,
	473, 474, 475, 476, 477, 480, 1284, 1283, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 1223,
	307, 1342, 526, 527, 528, 529, 1246, 1294, 530, 1308,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 1343, 543, 1344,
	1323, 544, 545, 1233, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 1324, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 1304, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 1234, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 1287, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 1302, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 1349, 657, 658, 659, 660, 1325, 664,
	665, 666, 667, 0, 668, 669, 1220, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 1314, 1315, 1316, 1317, 0, 690, 0, 679, 681,
	682, 683, 684, 1326, 685, 1327, 1244, 686, 687, 688,
	689, 680, 691, 692, 0, 1227, 693, 694, 696, 698,
	699, 695, 697, 700, 1288, 701, 0, 0, 702, 703,
	704, 767, 1311, 1348, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 0, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 1224, 0, 0, 0, 0, 1811,
	0, 1266, 1238, 1239, 1240, 1236, 1237, 1249, 0, 1219,
	0, 0, 0, 0, 0, 0, 1217, 1218, 308, 309,
	311, 310, 312, 313, 314, 315, 1250, 316, 317, 0,
	1248, 0, 0, 0, 1290, 1254, 0, 0, 318, 0,
	319, 320, 321, 1330, 322, 323, 324, 325, 326, 327,
	328, 719, 1303, 0, 329, 1310, 330, 1309, 0, 1320,
	331, 332, 333, 334, 335, 336, 337, 1256, 1289, 1221,
	338, 1350, 1351, 726, 0, 339, 340, 1296, 0, 1277,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	1331, 365, 366, 367, 1280, 1278, 1279, 1286, 1282, 1281,
	1285, 368, 369, 370, 371, 372, 1313, 373, 375, 1307,
	1306, 1226, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 1298, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	1232, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 1321, 1322, 408, 1245, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 1305, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 1332,
	418, 419, 420, 1318, 1319, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 1328, 0, 1255, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 1291, 1292,
	1295, 531, 1334, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	1333, 741, 450, 532, 451, 1300, 1301, 0, 1261, 0,
	452, 453, 455, 1335, 1293, 1336, 454, 456, 457, 1337,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 1329, 468, 1338, 470,
	471, 1339, 0, 472, 473, 474, 475, 476, 477, 480,
	1284, 1283, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 1340, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	1341, 524, 512, 1223, 307, 1342, 526, 527, 528, 529,
	1246, 1294, 530, 1308, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 1343, 543, 1344, 1323, 544, 545, 1233, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 1324,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 1304, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 1345, 606, 607, 608, 609,
	610, 1234, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 1287, 636, 757, 637,
	617, 618, 638, 639, 1346, 640, 641, 642, 643, 644,
	645, 646, 1302, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 1349, 657, 658,
	659, 660, 1325, 664, 665, 666, 667, 0, 668, 669,
	1220, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 1314, 1315, 1316, 1317, 0,
	690, 0, 679, 681, 682, 683, 684, 1326, 685, 1327,
	1244, 686, 687, 688, 689, 680, 691, 692, 0, 1227,
	693, 694, 696, 698, 699, 695, 697, 700, 1288, 701,
	0, 0, 702, 703, 704, 767, 1311, 1348, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 0, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 1224, 0,
	0, 0, 0, 1717, 0, 1266, 1238, 1239, 1240, 1236,
	1237, 1249, 0, 1219, 0, 0, 0, 0, 0, 0,
	1217, 1218, 308, 309, 311, 310, 312, 313, 314, 315,
	1250, 316, 317, 0, 1248, 0, 0, 0, 1290, 1254,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 1303, 0, 329, 1310,
	330, 1309, 0, 1320, 331, 332, 333, 334, 335, 336,
	337, 1256, 1289, 1221, 338, 1350, 1351, 726, 0, 339,
	340, 1296, 0, 1277, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 1280, 1278,
	1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371, 372,
	1313, 373, 375, 1307, 1306, 1226, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 1298, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 1232, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 1321, 1322, 408,
	1245, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	1305, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 1318, 1319, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	1328, 0, 1255, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1716, 1292, 1295, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 1300,
	1301, 0, 1261, 0, 452, 453, 455, 1335, 1293, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	1329, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 1284, 1283, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 1223, 307, 1342,
	526, 527, 528, 529, 1246, 1294, 530, 1308, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 1323, 544,
	545, 1233, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 1324, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 1304, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 1234, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1287, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 1302, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 1349, 657, 658, 659, 660, 1325, 664, 665, 666,
	667, 0, 668, 669, 1220, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 1314,
	1315, 1316, 1317, 0, 690, 0, 679, 681, 682, 683,
	684, 1326, 685, 1327, 1244, 686, 687, 688, 689, 680,
	691, 692, 0, 1227, 693, 694, 696, 698, 699, 695,
	697, 700, 1288, 701, 0, 0, 702, 703, 704, 767,
	1311, 1348, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 0, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 1224, 0, 0, 0, 0, 1711, 0, 1266,
	1238, 1239, 1240, 1236, 1237, 1249, 0, 1219, 0, 0,
	0, 0, 0, 0, 1217, 1218, 308, 309, 311, 310,
	312, 313, 314, 315, 1250, 316, 317, 0, 1248, 0,
	0, 0, 1290, 1254, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	1303, 0, 329, 1310, 330, 1309, 0, 1320, 331, 332,
	333, 334, 335, 336, 337, 1256, 1289, 1221, 338, 1350,
	1351, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 1313, 373, 375, 1307, 1306, 1226,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 1298, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 1232, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 1245, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 1305, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 1318, 1319, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 1255, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1710, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 1300, 1301, 0, 1261, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 1223, 307, 1342, 526, 527, 528, 529, 1246, 1294,
	530, 1308, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 1233, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 1304, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 1234,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	1302, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 1349, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 1220, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 1314, 1315, 1316, 1317, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 1244, 686,
	687, 688, 689, 680, 691, 692, 0, 1227, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 767, 1311, 1348, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 1224, 0, 0, 0,
	0, 1704, 0, 1266, 1238, 1239, 1240, 1236, 1237, 1249,
	0, 1219, 0, 0, 0, 0, 0, 0, 1217, 1218,
	308, 309, 311, 310, 312, 313, 314, 315, 1250, 316,
	317, 0, 1248, 0, 0, 0, 1290, 1254, 0, 0,
	318, 0, 319, 320, 321, 1330, 322, 323, 324, 325,
	326, 327, 328, 719, 1303, 0, 329, 1310, 330, 1309,
	0, 1320, 331, 332, 333, 334, 335, 336, 337, 1256,
	1289, 1221, 338, 1350, 1351, 726, 0, 339, 340, 1296,
	0, 1277, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 1331, 365, 366, 367, 1280, 1278, 1279, 1286,
	1282, 1281, 1285, 368, 369, 370, 371, 372, 1313, 373,
	375, 1307, 1306, 1226, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 1298,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 1232, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 1321, 1322, 408, 1245, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 1305, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 1332, 418, 419, 420, 1318, 1319, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 1328, 0,
	1255, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1291, 1292, 1295, 531, 1334, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 1333, 741, 450, 532, 451, 1300, 1301, 0,
	1261, 0, 452, 453, 455, 1335, 1293, 1336, 454, 456,
	457, 1337, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 1329, 468,
	1338, 470, 471, 1339, 0, 472, 473, 474, 475, 476,
	477, 480, 1284, 1283, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 1340, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 1341, 524, 512, 1223, 307, 1342, 526, 527,
	528, 529, 1246, 1294, 530, 1308, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 1343, 543, 1344, 1323, 544, 545, 1233,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 1324, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 1304,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 1345, 606, 607,
	608, 609, 610, 1234, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 1287, 636,
	757, 637, 617, 618, 638, 639, 1346, 640, 641, 642,
	643, 644, 645, 646, 1302, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 1349,
	657, 658, 659, 660, 1325, 664, 665, 666, 667, 0,
	668, 669, 1220, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 1314, 1315, 1316,
	1317, 0, 690, 0, 679, 681, 682, 683, 684, 1326,
	685, 1327, 1244, 686, 687, 688, 689, 680, 691, 692,
	0, 1227, 693, 694, 696, 698, 699, 695, 697, 700,
	1288, 701, 0, 0, 702, 703, 704, 767, 1311, 1348,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	0, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	1224, 0, 0, 0, 0, 1667, 0, 1266, 1238, 1239,
	1240, 1236, 1237, 1249, 0, 1219, 0, 0, 0, 0,
	0, 0, 1217, 1218, 308, 309, 311, 310, 312, 313,
	314, 315, 1250, 316, 317, 0, 1248, 0, 0, 0,
	1290, 1254, 0, 0, 318, 0, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 1303, 0,
	329, 1310, 330, 1309, 0, 1320, 331, 332, 333, 334,
	335, 336, 337, 1256, 1289, 1221, 338, 1350, 1351, 726,
	0, 339, 340, 1296, 0, 1277, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 1331, 365, 366, 367,
	1280, 1278, 1279, 1286, 1282, 1281, 1285, 368, 369, 370,
	371, 372, 1313, 373, 375, 1307, 1306, 1226, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 1298, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 1232, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 1321,
	1322, 408, 1245, 305, 0, 0, 0, 0, 0, 409,
	410, 411, 1305, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 1332, 418, 419, 420, 1318,
	1319, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 1328, 0, 1255, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 1291, 1292, 1295, 531, 1334, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 0, 1333, 741, 450, 532,
	451, 1300, 1301, 0, 1261, 0, 452, 453, 455, 1335,
	1293, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 1329, 468, 1338, 470, 471, 1339, 0, 472,
	473, 474, 475, 476, 477, 480, 1284, 1283, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 1223,
	307, 1342, 526, 527, 528, 529, 1246, 1294, 530, 1308,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 1343, 543, 1344,
	1323, 544, 545, 1233, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 1324, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 1304, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 1234, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 1287, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 1302, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 1349, 657, 658, 659, 660, 1325, 664,
	665, 666, 667, 0, 668, 669, 1220, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 1314, 1315, 1316, 1317, 0, 690, 0, 679, 681,
	682, 683, 684, 1326, 685, 1327, 1244, 686, 687, 688,
	689, 680, 691, 692, 0, 1227, 693, 694, 696, 698,
	699, 695, 697, 700, 1288, 701, 0, 0, 702, 703,
	704, 767, 1311, 1348, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 0, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 1224, 0, 0, 0, 0, 1649,
	0, 1266, 1238, 1239, 1240, 1236, 1237, 1249, 0, 1219,
	0, 0, 0, 0, 0, 0, 1217, 1218, 308, 309,
	311, 310, 312, 313, 314, 315, 1250, 316, 317, 0,
	1248, 0, 0, 0, 1290, 1254, 0, 0, 318, 0,
	319, 320, 321, 1330, 322, 323, 324, 325, 326, 327,
	328, 719, 1303, 0, 329, 1310, 330, 1309, 0, 1320,
	331, 332, 333, 334, 335, 336, 337, 1256, 1289, 1221,
	338, 1350, 1351, 726, 0, 339, 340, 1296, 0, 1277,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	1331, 365, 366, 367, 1280, 1278, 1279, 1286, 1282, 1281,
	1285, 368, 369, 370, 371, 372, 1313, 373, 375, 1307,
	1306, 1226, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 1298, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	1232, 396, 397, 398, 400, 402, 399, 1653, 403, 404,
	405, 406, 407, 1321, 1322, 408, 1245, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 1305, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 1332,
	418, 419, 420, 1318, 1319, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 1328, 0, 1255, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 1291, 1292,
	1295, 531, 1334, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	1333, 741, 450, 532, 451, 1300, 1301, 0, 1261, 0,
	452, 453, 455, 1335, 1293, 1336, 454, 456, 457, 1337,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 1329, 468, 1338, 470,
	471, 1339, 0, 472, 473, 474, 475, 476, 477, 480,
	1284, 1283, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 1340, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	1341, 524, 512, 1223, 307, 1342, 526, 527, 528, 529,
	1246, 1294, 530, 1308, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 1343, 543, 1344, 1323, 544, 545, 1233, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 1324,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 1304, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 1654, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 1345, 606, 607, 608, 609,
	610, 1234, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 1287, 636, 757, 637,
	617, 618, 638, 639, 1346, 640, 641, 642, 643, 644,
	645, 646, 1302, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 1349, 657, 658,
	659, 660, 1325, 664, 665, 666, 667, 0, 668, 669,
	1220, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 1652, 677, 0, 678, 1314, 1315, 1316, 1317, 0,
	690, 0, 679, 681, 682, 683, 684, 1326, 685, 1327,
	1244, 686, 687, 688, 689, 680, 691, 692, 0, 1227,
	693, 694, 696, 698, 699, 695, 697, 700, 1288, 701,
	0, 0, 702, 703, 704, 767, 1311, 1348, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 0, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 1224, 0,
	0, 0, 0, 1479, 0, 1266, 1238, 1239, 1240, 1236,
	1237, 1249, 0, 1219, 0, 0, 0, 0, 0, 0,
	1217, 1218, 308, 309, 311, 310, 312, 313, 314, 315,
	1250, 316, 317, 0, 1248, 0, 0, 0, 1290, 1254,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 1303, 0, 329, 1310,
	330, 1309, 0, 1320, 331, 332, 333, 334, 335, 336,
	337, 1256, 1289, 1221, 338, 1350, 1351, 726, 0, 339,
	340, 1296, 0, 1277, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 1280, 1278,
	1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371, 372,
	1313, 373, 375, 1307, 1306, 1226, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 1298, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 1232, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 1321, 1322, 408,
	1245, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	1305, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 1318, 1319, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	1328, 0, 1255, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1291, 1292, 1295, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 1300,
	1301, 0, 1261, 0, 452, 453, 455, 1335, 1293, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	1329, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 1284, 1283, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 1223, 307, 1342,
	526, 527, 528, 529, 1246, 1294, 530, 1308, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 1323, 544,
	545, 1233, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 1324, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 1304, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 1234, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1287, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 1302, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 1349, 657, 658, 659, 660, 1325, 664, 665, 666,
	667, 0, 668, 669, 1220, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 1314,
	1315, 1316, 1317, 0, 690, 0, 679, 681, 682, 683,
	684, 1326, 685, 1327, 1244, 686, 687, 688, 689, 680,
	691, 692, 0, 1227, 693, 694, 696, 698, 699, 695,
	697, 700, 1288, 701, 0, 0, 702, 703, 704, 767,
	1311, 1348, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 0, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 1224, 0, 0, 0, 0, 0, 0, 1266,
	1238, 1239, 1240, 1236, 1237, 1249, 0, 1219, 0, 0,
	0, 0, 0, 0, 1217, 1218, 308, 309, 311, 310,
	312, 313, 314, 315, 1250, 316, 317, 0, 1248, 0,
	0, 0, 1290, 1254, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	1303, 0, 329, 1310, 330, 1309, 0, 1320, 331, 332,
	333, 334, 335, 336, 337, 1256, 1289, 1221, 338, 1350,
	1351, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 1313, 373, 375, 1307, 1306, 1226,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 1298, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 1232, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 1245, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 1305, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 1318, 1319, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 1255, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1291, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 1300, 1301, 0, 1261, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 1223, 307, 1342, 526, 527, 528, 529, 1246, 1294,
	530, 1308, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 1233, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 1304, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 1234,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	1302, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 1349, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 1220, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 1314, 1315, 1316, 1317, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 1244, 686,
	687, 688, 689, 680, 691, 692, 0, 1227, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 767, 1311, 1348, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 1224, 0, 0, 0,
	0, 0, 0, 1266, 1238, 1239, 1240, 1236, 1237, 1249,
	0, 1219, 0, 0, 0, 0, 0, 0, 1217, 1218,
	308, 309, 311, 310, 312, 313, 314, 315, 1250, 316,
	317, 0, 1248, 0, 0, 0, 1290, 1254, 0, 0,
	318, 0, 319, 320, 321, 1330, 322, 323, 324, 325,
	326, 327, 328, 719, 1303, 0, 329, 1310, 330, 1309,
	0, 1320, 331, 332, 333, 334, 335, 336, 337, 1256,
	1289, 1221, 338, 1350, 1351, 726, 0, 339, 340, 1296,
	0, 1277, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 1331, 365, 366, 5287, 1280, 1278, 1279, 1286,
	1282, 1281, 1285, 368, 369, 370, 371, 372, 1313, 373,
	375, 1307, 1306, 1226, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 1298,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 1232, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 1321, 1322, 408, 1245, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 1305, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 1332, 418, 419, 420, 1318, 1319, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 1328, 0,
	1255, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1291, 1292, 1295, 531, 1334, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 1333, 741, 450, 532, 451, 1300, 1301, 0,
	1261, 0, 452, 453, 455, 1335, 1293, 1336, 454, 456,
	457, 1337, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 1329, 468,
	1338, 470, 471, 1339, 0, 472, 473, 474, 475, 476,
	477, 480, 1284, 1283, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 1340, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 1341, 524, 512, 1223, 307, 1342, 526, 527,
	528, 529, 1246, 1294, 530, 1308, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 1343, 543, 1344, 1323, 544, 545, 1233,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 1324, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 1304,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 1345, 606, 607,
	608, 609, 610, 1234, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 1287, 636,
	757, 637, 617, 618, 638, 639, 1346, 640, 641, 642,
	643, 644, 645, 646, 1302, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 1349,
	657, 658, 659, 660, 1325, 664, 665, 666, 667, 0,
	668, 669, 1220, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 1314, 1315, 1316,
	1317, 0, 690, 0, 679, 681, 682, 683, 684, 1326,
	685, 1327, 1244, 686, 687, 688, 689, 680, 5286, 692,
	0, 1227, 693, 694, 696, 698, 699, 695, 697, 700,
	1288, 701, 0, 0, 702, 703, 704, 767, 1311, 1348,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	0, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	1224, 0, 0, 0, 0, 0, 0, 1266, 1238, 1239,
	1240, 1236, 1237, 1249, 0, 1219, 0, 0, 0, 0,
	0, 0, 1217, 1218, 308, 309, 311, 310, 312, 313,
	314, 315, 1250, 316, 317, 0, 1248, 0, 0, 0,
	1290, 1254, 0, 0, 318, 0, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 5285, 1303, 0,
	329, 1310, 330, 1309, 0, 1320, 331, 332, 333, 334,
	335, 336, 337, 1256, 1289, 1221, 338, 1350, 1351, 726,
	0, 339, 340, 1296, 0, 1277, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 1331, 365, 366, 5287,
	1280, 1278, 1279, 1286, 1282, 1281, 1285, 368, 369, 370,
	371, 372, 1313, 373, 375, 1307, 1306, 1226, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 1298, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 1232, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 1321,
	1322, 408, 1245, 305, 0, 0, 0, 0, 0, 409,
	410, 411, 1305, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 1332, 418, 419, 420, 1318,
	1319, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 1328, 0, 1255, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 1291, 1292, 1295, 531, 1334, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 0, 1333, 741, 450, 532,
	451, 1300, 1301, 0, 1261, 0, 452, 453, 455, 1335,
	1293, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 1329, 468, 1338, 470, 471, 1339, 0, 472,
	473, 474, 475, 476, 477, 480, 1284, 1283, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 1223,
	307, 1342, 526, 527, 528, 529, 1246, 1294, 530, 1308,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 1343, 543, 1344,
	1323, 544, 545, 1233, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 1324, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 1304, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 1234, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 1287, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 1302, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 1349, 657, 658, 659, 660, 1325, 664,
	665, 666, 667, 0, 668, 669, 1220, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 1314, 1315, 1316, 1317, 0, 690, 0, 679, 681,
	682, 683, 684, 1326, 685, 1327, 1244, 686, 687, 688,
	689, 680, 5286, 692, 0, 1227, 693, 694, 696, 698,
	699, 695, 697, 700, 1288, 701, 0, 0, 702, 703,
	704, 767, 1311, 1348, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 0, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 1224, 0, 0, 0, 0, 0,
	0, 1266, 1238, 1239, 1240, 1236, 1237, 1249, 0, 1219,
	0, 0, 0, 0, 0, 0, 1217, 1218, 308, 309,
	311, 310, 312, 313, 314, 315, 1250, 316, 317, 0,
	1248, 0, 0, 0, 1290, 1254, 0, 0, 318, 0,
	319, 320, 321, 1330, 322, 323, 324, 325, 326, 327,
	328, 719, 1303, 0, 329, 1310, 330, 1309, 0, 1320,
	331, 332, 333, 334, 335, 336, 337, 1256, 1289, 1221,
	338, 1350, 1351, 726, 0, 339, 340, 1296, 0, 1277,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	1331, 365, 4851, 367, 1280, 1278, 1279, 1286, 1282, 1281,
	1285, 368, 369, 370, 371, 372, 1313, 373, 375, 1307,
	1306, 1226, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 1298, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	1232, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 1321, 1322, 408, 1245, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 1305, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 1332,
	418, 419, 420, 1318, 1319, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 1328, 0, 4852, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 1291, 1292,
	1295, 531, 1334, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	1333, 741, 450, 532, 451, 1300, 1301, 0, 1261, 0,
	452, 453, 455, 1335, 1293, 1336, 454, 456, 457, 1337,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 1329, 468, 1338, 470,
	471, 1339, 0, 472, 473, 474, 475, 476, 477, 480,
	1284, 1283, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 1340, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	1341, 524, 512, 1223, 307, 1342, 526, 527, 528, 529,
	1246, 1294, 530, 1308, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 1343, 543, 1344, 1323, 544, 545, 1233, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 1324,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 1304, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 1345, 606, 607, 608, 4850,
	610, 1234, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 1287, 636, 757, 637,
	617, 618, 638, 639, 1346, 640, 641, 642, 643, 644,
	645, 646, 1302, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 1349, 657, 658,
	659, 660, 1325, 664, 665, 666, 667, 0, 668, 669,
	1220, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 1314, 1315, 1316, 1317, 0,
	690, 0, 679, 681, 682, 683, 684, 1326, 685, 1327,
	1244, 686, 687, 688, 689, 680, 691, 692, 0, 1227,
	693, 694, 696, 698, 699, 695, 697, 700, 1288, 701,
	0, 0, 702, 703, 704, 767, 1311, 1348, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 0, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 1224, 0,
	0, 0, 0, 0, 0, 1266, 1238, 1239, 1240, 3518,
	3519, 1249, 0, 1219, 0, 0, 0, 0, 0, 0,
	1217, 1218, 308, 309, 311, 310, 312, 313, 314, 315,
	1250, 316, 317, 0, 1248, 0, 0, 0, 1290, 1254,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 1303, 0, 329, 1310,
	330, 1309, 0, 1320, 331, 332, 333, 334, 335, 336,
	337, 1256, 1289, 1221, 338, 1350, 1351, 726, 0, 339,
	340, 1296, 0, 1277, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 1280, 1278,
	1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371, 372,
	1313, 373, 375, 1307, 1306, 1226, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 1298, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 1232, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 1321, 1322, 408,
	1245, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	1305, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 1318, 1319, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	1328, 0, 1255, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1291, 1292, 1295, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 1300,
	1301, 0, 1261, 0, 452, 453, 455, 1335, 1293, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	1329, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 1284, 1283, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 1223, 307, 1342,
	526, 527, 528, 529, 1246, 1294, 530, 1308, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 1323, 544,
	545, 1233, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 1324, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 1304, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 1234, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1287, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 1302, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 1349, 657, 658, 659, 660, 1325, 664, 665, 666,
	667, 0, 668, 669, 1220, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 1314,
	1315, 1316, 1317, 0, 690, 0, 679, 681, 682, 683,
	684, 1326, 685, 1327, 1244, 686, 687, 688, 689, 680,
	691, 692, 0, 1227, 693, 694, 696, 698, 699, 695,
	697, 700, 1288, 701, 0, 0, 702, 703, 704, 767,
	1311, 1348, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 0, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 1224, 0, 0, 0, 0, 0, 0, 1266,
	1238, 1239, 1240, 3516, 3517, 1249, 0, 1219, 0, 0,
	0, 0, 0, 0, 1217, 1218, 308, 309, 311, 310,
	312, 313, 314, 315, 1250, 316, 317, 0, 1248, 0,
	0, 0, 1290, 1254, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	1303, 0, 329, 1310, 330, 1309, 0, 1320, 331, 332,
	333, 334, 335, 336, 337, 1256, 1289, 1221, 338, 1350,
	1351, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 1313, 373, 375, 1307, 1306, 1226,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 1298, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 1232, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 1245, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 1305, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 1318, 1319, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 1255, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1291, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 1300, 1301, 0, 1261, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 1223, 307, 1342, 526, 527, 528, 529, 1246, 1294,
	530, 1308, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 1233, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 1304, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 1234,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	1302, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 1349, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 1220, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 1314, 1315, 1316, 1317, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 1244, 686,
	687, 688, 689, 680, 691, 692, 0, 1227, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 767, 1311, 1348, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 1224, 0, 0, 0,
	0, 0, 0, 1266, 1238, 1239, 1240, 1236, 1237, 1249,
	0, 1219, 0, 0, 0, 0, 0, 0, 1217, 1218,
	308, 309, 311, 310, 312, 313, 314, 315, 1250, 316,
	317, 0, 1248, 0, 0, 0, 1290, 1254, 0, 0,
	318, 0, 319, 320, 321, 1330, 322, 323, 324, 325,
	326, 327, 328, 719, 1303, 0, 329, 1310, 330, 1309,
	0, 1320, 331, 332, 333, 334, 335, 336, 337, 1256,
	1289, 1221, 338, 1350, 1351, 726, 0, 339, 340, 1296,
	0, 1277, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 1331, 365, 366, 367, 1280, 1278, 1279, 1286,
	1282, 1281, 1285, 368, 369, 370, 371, 372, 1313, 373,
	375, 1307, 1306, 1226, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 1298,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 1232, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 1321, 1322, 408, 1245, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 1305, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 1332, 418, 419, 420, 1318, 1319, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 1328, 0,
	1255, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1291, 1292, 1295, 531, 1334, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 1333, 741, 450, 532, 451, 1300, 1301, 0,
	1261, 0, 452, 453, 455, 1335, 1293, 1336, 454, 456,
	457, 1337, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 1329, 468,
	1338, 470, 471, 1339, 0, 472, 473, 474, 475, 476,
	477, 480, 1284, 1283, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 1340, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 1341, 524, 512, 1223, 307, 1342, 526, 527,
	528, 529, 1246, 1294, 530, 1308, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 1343, 543, 1344, 1323, 544, 545, 1233,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 1324, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 1304,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 1345, 606, 607,
	608, 609, 610, 1234, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 1287, 636,
	757, 637, 617, 618, 638, 639, 1346, 640, 641, 642,
	643, 644, 645, 646, 1302, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 1349,
	657, 658, 659, 660, 1325, 664, 665, 666, 667, 0,
	668, 669, 1220, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 1314, 1315, 1316,
	1317, 0, 690, 0, 679, 681, 682, 683, 684, 1326,
	685, 1327, 1244, 686, 687, 688, 689, 680, 691, 692,
	0, 1227, 693, 694, 696, 698, 699, 695, 697, 700,
	1288, 701, 0, 0, 702, 703, 704, 767, 1311, 1348,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	0, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	1224, 0, 0, 0, 0, 0, 0, 1266, 1238, 1239,
	1240, 1236, 1237, 1249, 0, 1219, 0, 0, 0, 0,
	0, 0, 2713, 2714, 308, 309, 311, 310, 312, 313,
	314, 315, 1250, 316, 317, 0, 1248, 0, 0, 0,
	1290, 1254, 0, 0, 318, 0, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 1303, 0,
	329, 1310, 330, 1309, 0, 1320, 331, 332, 333, 334,
	335, 336, 337, 1256, 1289, 0, 338, 1350, 1351, 726,
	0, 339, 340, 1296, 0, 1277, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 1331, 365, 366, 367,
	1280, 1278, 1279, 1286, 1282, 1281, 1285, 368, 369, 370,
	371, 372, 1313, 373, 375, 1307, 1306, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 1298, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 1232, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 1321,
	1322, 408, 1245, 305, 0, 0, 0, 0, 0, 409,
	410, 411, 1305, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 1332, 418, 419, 420, 1318,
	1319, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 1328, 0, 1255, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 1291, 1292, 1295, 531, 1334, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 0, 1333, 741, 450, 532,
	451, 1300, 1301, 0, 1261, 0, 452, 453, 455, 1335,
	1293, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 1329, 468, 1338, 470, 471, 1339, 0, 472,
	473, 474, 475, 476, 477, 480, 1284, 1283, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 0,
	307, 1342, 526, 527, 528, 529, 1246, 1294, 530, 1308,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 1343, 543, 1344,
	1323, 544, 545, 1233, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 1324, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 1304, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 1234, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 1287, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 1302, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 1349, 657, 658, 659, 660, 1325, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 1314, 1315, 1316, 1317, 0, 690, 0, 679, 681,
	682, 683, 684, 1326, 685, 1327, 1244, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 1288, 701, 0, 0, 702, 703,
	704, 767, 1311, 1348, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 0, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 1266, 1238, 1239, 1240, 1236, 1237, 1249, 0, 2974,
	0, 0, 0, 0, 0, 0, 2972, 2973, 308, 309,
	311, 310, 312, 313, 314, 315, 1250, 316, 317, 0,
	1248, 0, 0, 0, 1290, 1254, 0, 0, 318, 0,
	319, 320, 321, 1330, 322, 323, 324, 325, 326, 327,
	328, 719, 1303, 0, 329, 1310, 330, 1309, 0, 1320,
	331, 332, 333, 334, 335, 336, 337, 1256, 1289, 0,
	338, 1350, 1351, 726, 0, 339, 340, 1296, 0, 1277,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	1331, 365, 366, 367, 1280, 1278, 1279, 1286, 1282, 1281,
	1285, 368, 369, 370, 371, 372, 1313, 373, 375, 1307,
	1306, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 1298, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	1232, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 1321, 1322, 408, 1245, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 1305, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 1332,
	418, 419, 420, 1318, 1319, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 1328, 0, 1255, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 1291, 1292,
	1295, 531, 1334, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	1333, 741, 450, 532, 451, 1300, 1301, 0, 1261, 0,
	452, 453, 455, 1335, 1293, 1336, 454, 456, 457, 1337,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 1329, 468, 1338, 470,
	471, 1339, 0, 472, 473, 474, 475, 476, 477, 480,
	1284, 1283, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 1340, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	1341, 524, 512, 0, 307, 1342, 526, 527, 528, 529,
	1246, 1294, 530, 1308, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 1343, 543, 1344, 1323, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 1324,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 1304, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 1345, 606, 607, 608, 609,
	610, 3511, 3512, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 1287, 636, 757, 637,
	617, 618, 638, 639, 1346, 640, 641, 642, 643, 644,
	645, 646, 1302, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 1349, 657, 658,
	659, 660, 1325, 664, 665, 666, 667, 0, 668, 669,
	0, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 1314, 1315, 1316, 1317, 0,
	690, 0, 679, 681, 682, 683, 684, 1326, 685, 1327,
	1244, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 1288, 701,
	0, 0, 702, 703, 704, 767, 1311, 1348, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 0, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 1266, 1238, 1239, 1240, 1236,
	1237, 1249, 0, 0, 0, 0, 0, 0, 0, 0,
	2331, 2332, 308, 309, 311, 310, 312, 313, 314, 315,
	1250, 316, 317, 0, 1248, 0, 0, 0, 1290, 1254,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 0, 1303, 0, 329, 1310,
	330, 1309, 0, 1320, 331, 332, 333, 334, 335, 336,
	337, 1256, 1289, 1221, 338, 1350, 1351, 726, 0, 339,
	340, 1296, 0, 1277, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 5287, 1280, 1278,
	1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371, 372,
	1313, 373, 375, 1307, 1306, 1226, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 1298, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 1232, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 1321, 1322, 408,
	1245, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	1305, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 1318, 1319, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	1328, 0, 1255, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1291, 1292, 1295, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 1300,
	1301, 0, 1261, 0, 452, 453, 455, 0, 1293, 0,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	1329, 468, 1338, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 1284, 1283, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 1223, 307, 0,
	526, 527, 528, 529, 1246, 1294, 530, 1308, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 1323, 544,
	545, 1233, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 1324, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 1304, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 1234, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1287, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 1302, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 1349, 657, 658, 659, 660, 1325, 664, 665, 666,
	667, 0, 668, 669, 1220, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 1314,
	1315, 1316, 1317, 0, 690, 0, 679, 681, 682, 683,
	684, 1326, 685, 1327, 1244, 686, 687, 688, 689, 680,
	5286, 692, 0, 1227, 693, 694, 696, 698, 699, 695,
	697, 700, 1288, 701, 0, 0, 702, 703, 704, 767,
	1311, 1348, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 0, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 2993, 0, 1266,
	1238, 1239, 1240, 1236, 1237, 1249, 0, 0, 0, 0,
	0, 0, 0, 0, 1217, 1218, 308, 309, 311, 310,
	312, 313, 314, 315, 1250, 316, 317, 0, 1248, 0,
	0, 0, 1290, 1254, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	1303, 0, 329, 1310, 330, 1309, 0, 1320, 331, 332,
	333, 334, 335, 336, 337, 0, 1289, 0, 338, 1350,
	1351, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 1313, 373, 375, 1307, 1306, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 1298, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 1245, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 1305, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 1318, 1319, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 1255, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1291, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 1300, 1301, 0, 1261, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 0, 307, 1342, 526, 527, 528, 529, 1246, 1294,
	530, 1308, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 1304, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 1234,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	1302, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 1349, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 1314, 1315, 1316, 1317, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 1244, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 767, 1311, 1348, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 0, 0, 1679, 0,
	1266, 1238, 1239, 1240, 1236, 1237, 1249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 309, 311,
	310, 312, 313, 314, 315, 0, 316, 317, 1250, 0,
	0, 0, 1248, 1290, 1254, 0, 0, 318, 0, 319,
	320, 321, 1330, 322, 323, 324, 325, 326, 327, 328,
	719, 1303, 0, 329, 1310, 330, 1309, 0, 1320, 331,
	332, 333, 334, 335, 336, 337, 0, 1289, 0, 338,
	1350, 1351, 726, 0, 339, 340, 1296, 0, 1277, 0,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	350, 351, 352, 349, 353, 0, 354, 0, 355, 356,
	357, 358, 359, 360, 361, 0, 362, 363, 364, 1331,
	365, 366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285,
	368, 369, 370, 371, 372, 1313, 373, 375, 1307, 1306,
	0, 378, 380, 374, 376, 0, 379, 377, 381, 0,
	382, 383, 384, 0, 0, 385, 1298, 387, 0, 388,
	389, 390, 0, 391, 392, 393, 0, 394, 395, 730,
	396, 397, 398, 400, 402, 399, 401, 403, 404, 405,
	406, 407, 1321, 1322, 408, 1245, 305, 0, 0, 0,
	0, 0, 409, 410, 411, 1305, 0, 0, 0, 412,
	0, 413, 414, 415, 0, 416, 417, 0, 1332, 418,
	419, 420, 1318, 1319, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 0, 430, 1328, 0, 1255, 431, 0,
	432, 433, 434, 435, 436, 437, 438, 1291, 1292, 1295,
	531, 1334, 439, 440, 441, 0, 442, 443, 444, 445,
	446, 0, 0, 0, 306, 447, 448, 449, 0, 1333,
	741, 450, 532, 451, 1300, 1301, 0, 1261, 0, 452,
	453, 455, 1335, 1293, 1336, 454, 456, 457, 1337, 458,
	0, 0, 0, 459, 460, 461, 462, 463, 464, 0,
	465, 467, 466, 0, 469, 1329, 468, 1338, 470, 471,
	1339, 0, 472, 473, 474, 475, 476, 477, 480, 1284,
	1283, 478, 479, 481, 482, 0, 483, 484, 486, 489,
	485, 487, 488, 490, 503, 504, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 506, 0,
	505, 1340, 507, 508, 509, 510, 511, 518, 520, 521,
	516, 517, 519, 522, 523, 525, 513, 514, 515, 1341,
	524, 512, 0, 307, 1342, 526, 527, 528, 529, 1246,
	1294, 530, 1308, 533, 534, 0, 0, 535, 0, 536,
	0, 0, 538, 539, 540, 0, 0, 541, 542, 749,
	1343, 543, 1344, 1323, 544, 545, 537, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 0, 556, 557,
	751, 558, 559, 560, 752, 561, 562, 563, 1324, 564,
	754, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 575, 576, 577, 1304, 578, 579, 581,
	580, 582, 0, 583, 0, 584, 585, 586, 0, 0,
	0, 0, 0, 587, 588, 590, 0, 591, 592, 593,
	594, 589, 595, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 1345, 606, 607, 608, 609, 610,
	1234, 611, 0, 612, 613, 620, 621, 622, 614, 615,
	616, 623, 624, 625, 626, 627, 629, 628, 0, 631,
	632, 630, 633, 634, 635, 1287, 636, 757, 637, 617,
	618, 638, 639, 1346, 640, 641, 642, 643, 644, 645,
	646, 1302, 0, 647, 0, 648, 649, 650, 651, 652,
	653, 655, 619, 656, 661, 662, 1349, 657, 658, 659,
	660, 1325, 664, 665, 666, 667, 0, 668, 669, 0,
	663, 654, 0, 670, 671, 672, 673, 674, 675, 0,
	676, 677, 0, 678, 1314, 1315, 1316, 1317, 0, 690,
	0, 679, 681, 682, 683, 684, 1326, 685, 1327, 1244,
	686, 687, 688, 689, 680, 691, 692, 0, 0, 693,
	694, 696, 698, 699, 695, 697, 700, 1288, 701, 0,
	0, 702, 703, 704, 767, 1311, 1348, 0, 706, 705,
	707, 708, 709, 770, 710, 711, 712, 0, 0, 0,
	0, 713, 714, 771, 715, 716, 717, 1208, 0, 1389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 1250,
	0, 0, 1290, 1248, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 1289, 0, 338, 724,
	725, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 0, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1291, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 1375, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 0, 307, 1342, 526, 527, 528, 529, 0, 1294,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	1381, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 756,
	1383, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 261, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 263, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 1800, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 255,
	713, 714, 771, 715, 716, 717, 1389, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 0, 316, 317, 0, 0, 1379, 0, 2163, 1290,
	0, 0, 0, 318, 0, 319, 320, 321, 1330, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 0, 723, 331, 332, 333, 334, 335,
	336, 337, 0, 1289, 0, 338, 724, 725, 726, 0,
	339, 340, 1296, 0, 1277, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 1331, 365, 366, 367, 1280,
	1278, 1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371,
	372, 0, 373, 375, 728, 729, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 1321, 1322,
	408, 0, 305, 0, 0, 0, 0, 0, 409, 410,
	411, 733, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 1332, 418, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 1328, 0, 737, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 1291, 1292, 1295, 531, 1334, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	306, 447, 448, 449, 0, 1333, 741, 450, 532, 451,
	742, 743, 0, 744, 0, 452, 453, 455, 1335, 1293,
	1336, 454, 456, 457, 1337, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 1375, 465, 467, 466, 0,
	469, 1329, 468, 1338, 470, 471, 1339, 0, 472, 473,
	474, 475, 476, 477, 480, 1284, 1283, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 1340, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 1341, 524, 512, 0, 307,
	1342, 526, 527, 528, 529, 0, 1294, 530, 748, 533,
	534, 0, 0, 535, 0, 536, 0, 1381, 538, 539,
	540, 0, 0, 541, 542, 749, 1343, 543, 1344, 1323,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 1324, 564, 754, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	1345, 606, 607, 608, 609, 610, 756, 1383, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 261, 631, 632, 630, 633, 634,
	635, 1287, 636, 757, 637, 617, 618, 638, 639, 1346,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 1325, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 263, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	761, 762, 763, 764, 0, 690, 0, 679, 681, 682,
	683, 684, 1326, 685, 1327, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 1288, 701, 0, 0, 702, 703, 704,
	1800, 768, 769, 0, 706, 705, 707, 708, 709, 770,
	710, 711, 712, 0, 0, 0, 255, 713, 714, 771,
	715, 716, 717, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3676, 0, 1389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1379, 0, 2163, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 0,
	0, 0, 1290, 0, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 1289, 0, 338, 724,
	725, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 0, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1291, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 1375, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 0, 307, 1342, 526, 527, 528, 529, 0, 1294,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	1381, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 756,
	1383, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 1371, 0, 1389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 1379, 0, 1377, 0,
	0, 1290, 0, 0, 0, 318, 0, 319, 320, 321,
	1330, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 1289, 0, 338, 724, 725,
	726, 0, 339, 340, 1296, 0, 1277, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 1331, 365, 366,
	367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	1321, 1322, 408, 0, 305, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 1332, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 1328, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 1291, 1292, 1295, 531, 1334,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 306, 447, 448, 449, 0, 1333, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	1335, 1293, 1336, 454, 456, 457, 1337, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 1375, 465, 467,
	466, 0, 469, 1329, 468, 1338, 470, 471, 1339, 0,
	472, 473, 474, 475, 476, 477, 480, 1284, 1283, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 1340,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 1341, 524, 512,
	0, 307, 1342, 526, 527, 528, 529, 0, 1294, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 1381,
	538, 539, 540, 0, 0, 541, 542, 749, 1343, 543,
	1344, 1323, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 1324, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 1345, 606, 607, 608, 609, 610, 756, 1383,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 1287, 636, 757, 637, 617, 618, 638,
	639, 1346, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 1325,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 1326, 685, 1327, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 1288, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 0, 0, 0, 0, 713,
	714, 771, 715, 716, 717, 1389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 1379, 0, 1377, 1290, 0,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 1289, 0, 338, 724, 725, 726, 0, 339,
	340, 1296, 0, 1277, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 1280, 1278,
	1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 1321, 1322, 408,
	0, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	1328, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1291, 1292, 1295, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 1335, 1293, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 1375, 465, 467, 466, 0, 469,
	1329, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 1284, 1283, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 0, 307, 1342,
	526, 527, 528, 529, 0, 1294, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 1381, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 1323, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 1324, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 756, 1383, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1287, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 1325, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 1326, 685, 1327, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 1288, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 0, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 1389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 1379, 0, 1377, 1290, 0, 0, 0, 318,
	0, 319, 320, 321, 1330, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 1289,
	0, 338, 724, 725, 726, 0, 339, 340, 1296, 0,
	1277, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 1331, 365, 366, 367, 1280, 1278, 1279, 1286, 1282,
	1281, 1285, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 1321, 1322, 408, 0, 305, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	1332, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 1328, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 1291,
	1292, 1295, 531, 1334, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 306, 447, 448, 449,
	0, 1333, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 1335, 1293, 1336, 454, 456, 457,
	1337, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 1329, 468, 1338,
	470, 471, 1339, 0, 472, 473, 474, 475, 476, 477,
	480, 1284, 1283, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 1340, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 1341, 524, 512, 0, 307, 1342, 526, 527, 528,
	529, 0, 1294, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 1343, 543, 1344, 1323, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	1324, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 1345, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 1287, 636, 757,
	637, 617, 618, 638, 639, 1346, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 1325, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 1326, 685,
	1327, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 1288,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 0,
	0, 0, 0, 713, 714, 771, 715, 716, 717, 1389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 0,
	0, 4656, 1290, 0, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 1289, 0, 338, 724,
	725, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 0, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1291, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 0, 307, 1342, 526, 527, 528, 529, 0, 1294,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 756,
	1383, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 302, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 2819, 2820, 2821, 2838,
	2839, 2840, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 0, 316, 317, 0, 0, 0, 2841, 0, 718,
	0, 0, 0, 318, 0, 319, 320, 321, 2059, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 0, 723, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 2044, 338, 724, 725, 726, 0,
	339, 340, 727, 0, 0, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 2831, 0, 350, 351, 352, 349,
	353, 0, 354, 2827, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 371,
	372, 0, 373, 375, 728, 729, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 731, 732,
	408, 0, 0, 0, 2832, 2833, 2834, 2835, 409, 410,
	411, 733, 0, 0, 2826, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 0, 418, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 736, 0, 737, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 738, 739, 740, 531, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	0, 447, 448, 449, 0, 0, 741, 450, 532, 451,
	742, 743, 0, 744, 0, 452, 453, 455, 0, 745,
	0, 454, 456, 457, 0, 458, 0, 2836, 2837, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 746, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 2829, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 0, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 0, 524, 512, 0, 0,
	0, 526, 527, 528, 529, 0, 747, 530, 748, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 749, 0, 543, 0, 750,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 753, 564, 754, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	0, 606, 607, 608, 609, 610, 756, 611, 2830, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 631, 632, 630, 633, 634,
	635, 0, 636, 757, 637, 617, 618, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 760, 664, 665,
	666, 667, 0, 668, 669, 2043, 663, 654, 0, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	761, 762, 763, 764, 0, 690, 0, 679, 681, 682,
	683, 684, 765, 685, 766, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	767, 768, 769, 0, 706, 705, 707, 708, 709, 770,
	710, 711, 712, 0, 0, 0, 0, 713, 714, 771,
	715, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1208, 0, 1674, 2816, 2817, 2818, 2842, 2828,
	2822, 0, 2824, 2825, 2823, 2810, 2811, 2812, 2813, 2814,
	2815, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 1330, 322, 323, 324,
	325, 326, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 1638, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 1331, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	305, 0, 0, 0, 0, 0, 409, 410, 411, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 1332, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 738, 739, 740, 531, 1334, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 0, 447,
	448, 449, 0, 1333, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 1335, 745, 1336, 454,
	456, 457, 1337, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 746,
	468, 1338, 470, 471, 1339, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 1340, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 1341, 524, 512, 0, 0, 1342, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 1343, 543, 1344, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 1345, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 261, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 1346, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 263, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 1800, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 0, 0, 0, 255, 713, 714, 771, 715, 716,
	717, 0, 1797, 256, 1674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 209, 0, 0, 0, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 1330, 322, 323, 324,
	325, 326, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 1638, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 1331, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	305, 0, 0, 0, 0, 0, 409, 410, 411, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 1332, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 738, 739, 740, 531, 1334, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 0, 447,
	448, 449, 0, 1333, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 1335, 745, 1336, 454,
	456, 457, 1337, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 746,
	468, 1338, 470, 471, 1339, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 1340, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 1341, 524, 512, 0, 0, 1342, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 1343, 543, 1344, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 1345, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 261, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 1346, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 263, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 1800, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 0, 0, 0, 255, 713, 714, 771, 715, 716,
	717, 1674, 1673, 256, 0, 0, 0, 1671, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 209, 718, 0, 0, 0, 318, 0,
	319, 320, 321, 1330, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 1638,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	1331, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 371, 372, 0, 373, 375, 728,
	729, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 1332,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 738, 739,
	740, 531, 1334, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 0, 447, 448, 449, 0,
	1333, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 1335, 745, 1336, 454, 456, 457, 1337,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 1338, 470,
	471, 1339, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 1340, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	1341, 524, 512, 0, 0, 1342, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 1343, 543, 1344, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 1345, 606, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 1346, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 669,
	0, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 0, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 1674, 1673,
	0, 0, 0, 0, 1671, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	1824, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	1330, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 1638, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 1331, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 305, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 1332, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 1334,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 1333, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	1335, 745, 1336, 454, 456, 457, 1337, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 1338, 470, 471, 1339, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 1340,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 1341, 524, 512,
	0, 0, 1342, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 1343, 543,
	1344, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 1345, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 1346, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 0, 0, 0, 0, 713,
	714, 771, 715, 716, 717, 1674, 1673, 0, 0, 0,
	0, 1671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 4034, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 1638, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 0,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 1335, 745, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 0, 0, 1342,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 2575, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 0, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 1674, 2480, 0, 0, 0, 0, 2481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 1824, 718, 0, 0, 0, 318,
	0, 319, 320, 321, 1330, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	1638, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 1331, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 305, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	1332, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 1334, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 0, 447, 448, 449,
	0, 1333, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 1335, 745, 1336, 454, 456, 457,
	1337, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 2479, 467, 466, 0, 469, 746, 468, 1338,
	470, 471, 1339, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 1340, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 1341, 524, 512, 0, 0, 1342, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 1343, 543, 1344, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 1345, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 1346, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 0,
	0, 0, 0, 713, 714, 771, 715, 716, 717, 1674,
	1673, 0, 0, 0, 0, 1671, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 0,
	0, 1824, 718, 0, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 0, 0, 338, 724,
	725, 726, 0, 339, 340, 727, 0, 1638, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 731, 732, 408, 0, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 736, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 738, 739, 740, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 0, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 1335, 745, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 746, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 0, 0,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 0, 0, 1342, 526, 527, 528, 529, 0, 747,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 750, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 753, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 756,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 0, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	760, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 765, 685, 766, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 0, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 1208, 0, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 1806, 0,
	0, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 0, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 261, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	263, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 1800, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 302, 0, 0, 255, 713,
	714, 771, 715, 716, 717, 0, 0, 256, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 209, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 307, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 302, 3284, 0, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 318,
	0, 319, 320, 321, 2177, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	0, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	0, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 0, 447, 448, 449,
	0, 0, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 0, 745, 0, 454, 456, 457,
	0, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 0, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 0, 524, 512, 0, 0, 0, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 0, 543, 0, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 0, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 302,
	0, 0, 0, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 318, 0, 319, 320,
	321, 5480, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 0, 0, 338, 724,
	725, 726, 0, 339, 340, 727, 0, 0, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 0, 365,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 731, 732, 408, 0, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 0, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 736, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 738, 739, 740, 531,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 0, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 0, 745, 0, 454, 456, 457, 0, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 746, 468, 0, 470, 471, 0,
	0, 472, 473, 474, 475, 476, 477, 480, 0, 0,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	0, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 0, 524,
	512, 0, 307, 0, 526, 527, 528, 529, 0, 747,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 0,
	543, 0, 750, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 753, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 0, 606, 607, 608, 609, 610, 756,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 0, 636, 757, 637, 617, 618,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	760, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 765, 685, 766, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 0, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 302, 0,
	713, 714, 771, 715, 716, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 318, 1794, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 305, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 306, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 307, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 0, 0, 302, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 318, 3985, 319, 320, 321, 0,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 0, 723, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 724, 725, 726,
	0, 339, 340, 727, 0, 0, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 0, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 736, 0, 737, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 0, 447, 448, 449, 0, 0, 741, 450, 532,
	451, 742, 743, 0, 744, 0, 452, 453, 455, 0,
	745, 0, 454, 456, 457, 0, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 746, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 0, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 0, 524, 512, 0,
	0, 0, 526, 527, 528, 529, 0, 747, 530, 748,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 0, 543, 0,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 0, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 0, 636, 757, 637, 617, 618, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 761, 762, 763, 764, 0, 690, 0, 679, 681,
	682, 683, 684, 765, 685, 766, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 767, 768, 769, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 0, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 3960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 3407, 0, 0, 0,
	0, 318, 0, 319, 320, 321, 1330, 322, 323, 324,
	325, 326, 327, 328, 0, 2235, 0, 329, 2225, 330,
	2241, 0, 2248, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 2251, 2252, 0, 0, 339, 340,
	0, 0, 1638, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 1331, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 1313,
	373, 375, 2239, 2238, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	1298, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 0, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 0, 0, 408, 0,
	305, 0, 0, 0, 0, 0, 409, 410, 411, 2237,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 1332, 418, 419, 420, 2246, 2247, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 0,
	0, 0, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 0, 0, 0, 531, 1334, 439, 440, 441, 3954,
	442, 443, 444, 445, 446, 0, 0, 0, 0, 447,
	448, 449, 0, 1333, 3956, 450, 532, 451, 2232, 2233,
	0, 2228, 0, 452, 453, 455, 1335, 0, 1336, 454,
	456, 457, 1337, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 0,
	468, 1338, 470, 471, 1339, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 1340, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 1341, 524, 512, 0, 0, 1342, 526,
	527, 528, 529, 0, 0, 530, 2240, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 3955, 1343, 543, 1344, 0, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 2222, 558, 559, 560, 2223, 561,
	562, 563, 0, 564, 0, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	2236, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 1345, 606,
	607, 608, 609, 610, 0, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 0, 631, 632, 630, 633, 634, 635, 0,
	636, 0, 637, 617, 618, 638, 639, 1346, 640, 641,
	642, 643, 644, 645, 646, 2234, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	2250, 657, 658, 659, 660, 0, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 2242, 2243,
	2244, 2245, 0, 690, 0, 679, 681, 682, 683, 684,
	0, 685, 0, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 0, 2226,
	2249, 3957, 706, 705, 707, 708, 709, 0, 710, 711,
	712, 0, 0, 0, 0, 713, 714, 0, 715, 716,
	717, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 0, 718, 0, 0, 2216, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	0, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 371, 372, 0, 373, 375, 728,
	729, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 0,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 738, 739,
	740, 531, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 0, 447, 448, 449, 0,
	0, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 0, 745, 0, 454, 456, 457, 0,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 0, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	0, 524, 512, 0, 0, 0, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 0, 543, 0, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 0, 606, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 669,
	0, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 302, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	4149, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 0, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 0, 0, 0, 0, 713,
	714, 771, 715, 716, 717, 1389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 2562, 1290, 0,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 1289, 0, 338, 724, 725, 726, 0, 339,
	340, 1296, 0, 1277, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 1280, 1278,
	1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 1321, 1322, 408,
	0, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	1328, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1291, 1292, 1295, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 1335, 1293, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	1329, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 1284, 1283, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 0, 307, 1342,
	526, 527, 528, 529, 0, 1294, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 1323, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 1324, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1287, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 1325, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 1326, 685, 1327, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 1288, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 2229, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 319, 320, 321, 1330, 322, 323, 324, 325, 326,
	327, 328, 0, 2235, 0, 329, 2225, 330, 2241, 0,
	2248, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 2251, 2252, 0, 0, 339, 340, 0, 0,
	1638, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 1331, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 1313, 373, 375,
	2239, 2238, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 1298, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 0, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 411, 2237, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	1332, 418, 419, 420, 2246, 2247, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 0, 0, 0,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 0,
	0, 0, 531, 1334, 439, 440, 441, 3954, 442, 443,
	444, 445, 446, 0, 0, 0, 0, 447, 448, 449,
	0, 1333, 3956, 450, 532, 451, 2232, 2233, 0, 2228,
	0, 452, 453, 455, 1335, 0, 1336, 454, 456, 457,
	1337, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 0, 468, 1338,
	470, 471, 1339, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 1340, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 1341, 524, 512, 0, 0, 1342, 526, 527, 528,
	529, 0, 0, 530, 2240, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 3955, 1343, 543, 1344, 0, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 2222, 558, 559, 560, 2223, 561, 562, 563,
	0, 564, 0, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 2236, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 1345, 606, 607, 608,
	609, 610, 0, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 0,
	637, 617, 618, 638, 639, 1346, 640, 641, 642, 643,
	644, 645, 646, 2234, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 2250, 657,
	658, 659, 660, 0, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 2242, 2243, 2244, 2245,
	0, 690, 0, 679, 681, 682, 683, 684, 0, 685,
	0, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 0, 2226, 2249, 3957,
	706, 705, 707, 708, 709, 0, 710, 711, 712, 0,
	0, 0, 0, 713, 714, 0, 715, 716, 717, 1035,
	0, 934, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 0, 718, 2216, 0, 0, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	0, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 941, 372, 0, 373, 375, 728,
	729, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 1032, 0,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 738, 739,
	740, 531, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	0, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 0, 745, 0, 454, 456, 457, 0,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 0, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	0, 524, 512, 0, 307, 0, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 0, 543, 0, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 0, 606, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 1034,
	0, 663, 654, 939, 670, 671, 672, 673, 674, 940,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 2200, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 4278, 316, 317, 0, 0, 0, 0,
	0, 718, 944, 0, 0, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 2207, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 305, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 306, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 307, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 4277,
	624, 625, 626, 627, 629, 628, 0, 2204, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	2206, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	4276, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 2200, 0, 0, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	2256, 316, 317, 0, 0, 0, 0, 0, 718, 944,
	0, 0, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 2207, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 307, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 2255, 624, 625, 626,
	627, 629, 628, 0, 2257, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 2206, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 2254, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 2200, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 2199, 316, 317,
	0, 0, 0, 0, 0, 718, 944, 0, 0, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	0, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 2207, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 305, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	0, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 306, 447, 448, 449,
	0, 0, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 0, 745, 0, 454, 456, 457,
	0, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 0, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 0, 524, 512, 0, 307, 0, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 0, 543, 0, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 0, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 2198, 624, 625, 626, 627, 629, 628,
	0, 2204, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 2206, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 2197, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 932,
	0, 934, 0, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 944, 718, 0, 0, 0, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	0, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 941, 372, 0, 373, 375, 728,
	729, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 0,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 738, 739,
	740, 531, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	0, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 0, 745, 0, 454, 456, 457, 0,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 0, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	0, 524, 512, 0, 307, 0, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 0, 543, 0, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 0, 606, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 669,
	0, 663, 654, 939, 670, 671, 672, 673, 674, 940,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 3960, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 0, 944, 0, 0, 318, 0, 319, 320, 321,
	1330, 322, 323, 324, 325, 326, 327, 328, 0, 2235,
	0, 329, 2225, 330, 2241, 0, 2248, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 2251, 2252,
	0, 0, 339, 340, 0, 0, 1638, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 1331, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 1313, 373, 375, 2239, 2238, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 1298, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 0, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	0, 0, 408, 0, 305, 0, 0, 0, 0, 0,
	409, 410, 411, 2237, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 1332, 418, 419, 420,
	2246, 2247, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 0, 0, 0, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 0, 0, 0, 531, 1334,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 1333, 0, 450,
	532, 451, 2232, 2233, 0, 2228, 0, 452, 453, 455,
	1335, 0, 1336, 454, 456, 457, 1337, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 0, 468, 1338, 470, 471, 1339, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 1340,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 1341, 524, 512,
	0, 0, 1342, 526, 527, 528, 529, 0, 0, 530,
	2240, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 0, 1343, 543,
	1344, 0, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 2222, 558,
	559, 560, 2223, 561, 562, 563, 0, 564, 0, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 2236, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 1345, 606, 607, 608, 609, 610, 0, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 0, 637, 617, 618, 638,
	639, 1346, 640, 641, 642, 643, 644, 645, 646, 2234,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 2250, 657, 658, 659, 660, 0,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 2242, 2243, 2244, 2245, 0, 690, 0, 679,
	681, 682, 683, 684, 0, 685, 0, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 0, 2226, 2249, 0, 706, 705, 707, 708,
	709, 0, 710, 711, 712, 0, 0, 0, 0, 713,
	714, 0, 715, 716, 717, 934, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 2216, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 941, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 307, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 939, 670, 671,
	672, 673, 674, 940, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 3114, 0, 302, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 944, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	325, 326, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 0, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	305, 0, 0, 0, 0, 0, 409, 410, 411, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 0, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 738, 739, 740, 531, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 306, 447,
	448, 449, 0, 0, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 0, 745, 0, 454,
	456, 457, 0, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 746,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 0, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 0, 524, 512, 0, 307, 0, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 0, 543, 0, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 0, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 0, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 767, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 2200, 0, 0, 0, 713, 714, 771, 715, 716,
	717, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 0, 718, 944, 0, 0, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	0, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 2207, 372, 0, 373, 375, 728,
	729, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 0,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 738, 739,
	740, 531, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	0, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 0, 745, 0, 454, 456, 457, 0,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 0, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	0, 524, 512, 0, 307, 0, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 0, 543, 0, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 0, 2615, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 2616, 624, 625, 626, 627, 629, 628, 0,
	2204, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 669,
	0, 663, 654, 2206, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 2617, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 2229, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 0, 944, 0, 0, 318, 0, 319, 320, 321,
	1330, 322, 323, 324, 325, 326, 327, 328, 0, 2235,
	0, 329, 2225, 330, 2241, 0, 2248, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 2251, 2252,
	0, 0, 339, 340, 0, 0, 1638, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 1331, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 1313, 373, 375, 2239, 2238, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 1298, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 0, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 411, 2237, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 1332, 418, 419, 420,
	2246, 2247, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 0, 0, 0, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 0, 0, 0, 531, 1334,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 1333, 0, 450,
	532, 451, 2232, 2233, 0, 2228, 0, 452, 453, 455,
	1335, 0, 1336, 454, 456, 457, 1337, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 0, 468, 1338, 470, 471, 1339, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 1340,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 1341, 524, 512,
	0, 0, 1342, 526, 527, 528, 529, 0, 0, 530,
	2240, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 0, 1343, 543,
	1344, 0, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 2222, 558,
	559, 560, 2223, 561, 562, 563, 0, 564, 0, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 2236, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 1345, 606, 607, 608, 609, 610, 0, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 0, 637, 617, 618, 638,
	639, 1346, 640, 641, 642, 643, 644, 645, 646, 2234,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 2250, 657, 658, 659, 660, 0,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 2242, 2243, 2244, 2245, 0, 690, 0, 679,
	681, 682, 683, 684, 0, 685, 0, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 0, 2226, 2249, 0, 706, 705, 707, 708,
	709, 0, 710, 711, 712, 0, 0, 0, 0, 713,
	714, 0, 715, 716, 717, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 2216, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 307, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 302, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 0, 718, 944, 0, 0, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	0, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	0, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 0, 447, 448, 449,
	0, 0, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 0, 745, 0, 454, 456, 457,
	0, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 0, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 0, 524, 512, 0, 0, 0, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 0, 543, 0, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 0, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 0,
	0, 0, 0, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 1674, 1673, 0,
	0, 0, 0, 1671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4507, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 318, 0, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 0, 723, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 724, 725, 726,
	0, 339, 340, 727, 0, 1638, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 1331, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 0, 305, 0, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 1332, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 736, 0, 737, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 1334, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 0, 447, 448, 449, 0, 1333, 741, 450, 532,
	451, 742, 743, 0, 744, 0, 452, 453, 455, 1335,
	745, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 746, 468, 1338, 470, 471, 1339, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 0,
	0, 1342, 526, 527, 528, 529, 4383, 747, 530, 748,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 1343, 543, 1344,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 0, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 761, 762, 763, 764, 0, 690, 0, 679, 681,
	682, 683, 684, 765, 685, 766, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 767, 768, 769, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 0, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 2499, 0, 1674, 1673, 0, 0,
	0, 0, 1671, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 0, 316, 317, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 318, 0, 319, 320, 321, 1330, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 0, 723, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 724, 725, 726, 0,
	339, 340, 727, 0, 1638, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 1331, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 371,
	372, 0, 373, 375, 728, 729, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 731, 732,
	408, 0, 305, 0, 0, 0, 0, 0, 409, 410,
	411, 733, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 1332, 418, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 736, 0, 737, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 1727, 739, 740, 531, 1334, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	0, 447, 448, 449, 0, 1333, 741, 450, 532, 451,
	742, 743, 0, 744, 0, 452, 453, 455, 1335, 745,
	1336, 454, 456, 457, 1337, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 746, 468, 1338, 470, 471, 1339, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 1340, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 1341, 524, 512, 0, 0,
	1342, 526, 527, 528, 529, 0, 747, 530, 748, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 749, 1343, 543, 1344, 750,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 753, 564, 754, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	1345, 606, 607, 608, 609, 610, 756, 611, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 631, 632, 630, 633, 634,
	635, 0, 636, 757, 637, 617, 618, 638, 639, 1346,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 760, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 0, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	761, 762, 763, 764, 0, 690, 0, 679, 681, 682,
	683, 684, 765, 685, 766, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	767, 768, 769, 0, 706, 705, 707, 708, 709, 770,
	710, 711, 712, 0, 0, 0, 0, 713, 714, 771,
	715, 716, 717, 2265, 0, 1674, 1673, 0, 0, 0,
	0, 1671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 1638, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 0,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 1335, 745, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 0, 0, 1342,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 0, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 1856, 0, 1674, 1673, 0, 0, 0, 0,
	1671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 1330, 322, 323, 324,
	325, 326, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 1638, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 1331, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	305, 0, 0, 0, 0, 0, 1854, 410, 411, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 1332, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 738, 739, 740, 531, 1334, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 0, 447,
	448, 449, 0, 1333, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 1335, 745, 1336, 454,
	456, 457, 1337, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 746,
	468, 1338, 470, 471, 1339, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 1340, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 1341, 524, 512, 0, 0, 1342, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 1343, 543, 1344, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 1855, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 1345, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 1853, 625, 626, 627,
	629, 628, 0, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 1346, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 767, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 0, 0, 0, 0, 713, 714, 771, 715, 716,
	717, 1724, 0, 1674, 1673, 0, 0, 0, 0, 1671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	318, 0, 319, 320, 321, 1330, 322, 323, 324, 325,
	326, 327, 328, 719, 720, 0, 329, 721, 330, 722,
	0, 723, 331, 332, 333, 334, 335, 336, 337, 0,
	0, 0, 338, 724, 725, 726, 0, 339, 340, 727,
	0, 1638, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 1331, 365, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 371, 372, 0, 373,
	375, 728, 729, 0, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 730, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 731, 732, 408, 0, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 733, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 1332, 418, 419, 420, 734, 735, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 736, 0,
	737, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1727, 739, 740, 531, 1334, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 0, 447, 448,
	449, 0, 1333, 741, 450, 532, 451, 742, 743, 0,
	744, 0, 452, 453, 455, 1335, 745, 1336, 454, 456,
	457, 1337, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 746, 468,
	1338, 470, 471, 1339, 0, 472, 473, 474, 475, 476,
	477, 480, 0, 0, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 1340, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 1341, 524, 512, 0, 0, 1342, 526, 527,
	528, 529, 0, 747, 530, 748, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 1343, 543, 1344, 750, 544, 545, 537,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 753, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 755,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 1345, 606, 607,
	608, 609, 610, 756, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 0, 636,
	757, 637, 617, 618, 638, 639, 1346, 640, 641, 642,
	643, 644, 645, 646, 758, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 759,
	657, 658, 659, 660, 760, 664, 665, 666, 667, 0,
	668, 669, 0, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 761, 762, 763,
	764, 0, 690, 0, 679, 681, 682, 683, 684, 765,
	685, 766, 0, 686, 687, 688, 689, 680, 691, 692,
	0, 0, 693, 694, 696, 698, 699, 695, 697, 700,
	0, 701, 0, 0, 702, 703, 704, 767, 768, 769,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	0, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	1669, 0, 1674, 1673, 0, 0, 0, 0, 1671, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 318,
	0, 319, 320, 321, 1330, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	1638, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 1331, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 305, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	1332, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 1334, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 0, 447, 448, 449,
	0, 1333, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 1335, 745, 1336, 454, 456, 457,
	1337, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 1338,
	470, 471, 1339, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 1340, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 1341, 524, 512, 0, 0, 1342, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 1343, 543, 1344, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 1345, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 1346, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 0,
	0, 0, 0, 713, 714, 771, 715, 716, 717, 1674,
	1673, 0, 0, 0, 0, 1671, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 0, 0, 338, 724,
	725, 726, 0, 339, 340, 727, 0, 1638, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 731, 732, 408, 0, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 736, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 738, 739, 740, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 0, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 1335, 745, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 746, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 0, 0,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 0, 0, 1342, 526, 527, 528, 529, 0, 747,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 750, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 753, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 756,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 0, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	760, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 765, 685, 766, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 0, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 1674, 1673, 0, 0,
	713, 714, 771, 715, 716, 717, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 0, 316, 317, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 318, 0, 319, 320, 321, 1330, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 0, 723, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 724, 725, 726, 0,
	339, 340, 727, 0, 1638, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 1331, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 371,
	372, 0, 373, 375, 728, 729, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 731, 732,
	408, 0, 305, 0, 0, 0, 0, 0, 409, 410,
	411, 733, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 1332, 418, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 736, 0, 737, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 738, 739, 740, 531, 1334, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	0, 447, 448, 449, 0, 1333, 741, 450, 532, 451,
	742, 743, 0, 744, 0, 452, 453, 455, 1335, 745,
	1336, 454, 456, 457, 1337, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 746, 468, 1338, 470, 471, 1339, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 1340, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 1341, 524, 512, 0, 0,
	1342, 526, 527, 528, 529, 0, 747, 530, 748, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 749, 1343, 543, 1344, 750,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 753, 564, 754, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	1345, 606, 607, 608, 609, 610, 756, 611, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 631, 632, 630, 633, 634,
	635, 0, 636, 757, 637, 617, 618, 638, 639, 1346,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 760, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 0, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	761, 762, 763, 764, 0, 690, 0, 679, 681, 682,
	683, 684, 765, 685, 766, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	767, 768, 769, 0, 706, 705, 707, 708, 709, 770,
	710, 711, 712, 1674, 0, 0, 0, 713, 714, 771,
	715, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	318, 0, 319, 320, 321, 1330, 322, 323, 324, 325,
	326, 327, 328, 719, 720, 0, 329, 721, 330, 722,
	0, 723, 331, 332, 333, 334, 335, 336, 337, 0,
	0, 0, 338, 724, 725, 726, 0, 339, 340, 727,
	0, 1638, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 1331, 365, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 371, 372, 0, 373,
	375, 728, 729, 0, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 730, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 731, 732, 408, 0, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 733, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 1332, 418, 419, 420, 734, 735, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 736, 0,
	737, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	738, 739, 740, 531, 1334, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 0, 447, 448,
	449, 0, 1333, 741, 450, 532, 451, 742, 743, 0,
	744, 0, 452, 453, 455, 1335, 745, 1336, 454, 456,
	457, 1337, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 746, 468,
	1338, 470, 471, 1339, 0, 472, 473, 474, 475, 476,
	477, 480, 0, 0, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 1340, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 1341, 524, 512, 0, 0, 1342, 526, 527,
	528, 529, 0, 747, 530, 748, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 1343, 543, 1344, 750, 544, 545, 537,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 753, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 755,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 1345, 606, 607,
	608, 609, 610, 756, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 0, 636,
	757, 637, 617, 618, 638, 639, 1346, 640, 641, 642,
	643, 644, 645, 646, 758, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 759,
	657, 658, 659, 660, 760, 664, 665, 666, 667, 0,
	668, 669, 0, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 761, 762, 763,
	764, 0, 690, 0, 679, 681, 682, 683, 684, 765,
	685, 766, 0, 686, 687, 688, 689, 680, 691, 692,
	0, 0, 693, 694, 696, 698, 699, 695, 697, 700,
	0, 701, 0, 0, 702, 703, 704, 767, 768, 769,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	302, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	0, 0, 0, 0, 0, 0, 0, 308, 309, 311,
	310, 312, 313, 314, 315, 0, 316, 317, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 325, 326, 327, 328,
	719, 720, 0, 329, 721, 330, 722, 0, 723, 331,
	332, 333, 334, 335, 336, 337, 0, 0, 0, 338,
	724, 725, 726, 3180, 339, 340, 727, 0, 0, 0,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	350, 351, 352, 349, 353, 3977, 354, 0, 355, 356,
	357, 358, 359, 360, 361, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 371, 372, 0, 373, 375, 728, 729,
	0, 378, 380, 374, 376, 0, 379, 377, 381, 0,
	382, 383, 384, 0, 0, 385, 386, 387, 0, 388,
	389, 390, 0, 391, 392, 393, 0, 3184, 395, 730,
	396, 397, 398, 400, 402, 399, 401, 403, 404, 405,
	406, 407, 731, 732, 408, 0, 3976, 0, 0, 0,
	0, 0, 409, 410, 411, 733, 0, 0, 0, 412,
	0, 413, 414, 415, 3183, 416, 417, 0, 0, 418,
	419, 420, 734, 735, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 0, 430, 736, 0, 737, 431, 0,
	432, 433, 434, 435, 436, 437, 438, 738, 739, 740,
	531, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	446, 0, 0, 0, 3973, 447, 448, 449, 0, 0,
	741, 450, 532, 451, 742, 743, 0, 744, 0, 452,
	3975, 455, 0, 745, 0, 454, 456, 457, 0, 458,
	0, 0, 0, 459, 460, 461, 462, 463, 464, 0,
	465, 467, 466, 0, 469, 746, 468, 0, 470, 471,
	3972, 0, 472, 473, 474, 475, 476, 477, 480, 0,
	0, 478, 479, 481, 482, 0, 483, 484, 486, 489,
	485, 487, 488, 490, 503, 504, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 506, 0,
	505, 0, 507, 508, 509, 510, 511, 518, 520, 521,
	516, 517, 519, 522, 523, 525, 513, 514, 515, 0,
	524, 512, 0, 0, 0, 526, 527, 528, 529, 0,
	747, 530, 748, 533, 534, 0, 0, 535, 0, 536,
	0, 0, 538, 539, 540, 0, 0, 541, 542, 749,
	0, 543, 0, 750, 544, 545, 537, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 0, 556, 557,
	751, 558, 559, 560, 752, 561, 562, 563, 753, 564,
	754, 565, 566, 3182, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 575, 576, 577, 755, 578, 579, 581,
	580, 582, 0, 583, 0, 584, 585, 586, 0, 0,
	0, 0, 0, 587, 588, 590, 0, 591, 592, 593,
	594, 589, 595, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 0, 606, 607, 608, 609, 610,
	756, 611, 0, 612, 613, 620, 621, 622, 614, 615,
	616, 623, 624, 625, 626, 627, 629, 628, 0, 631,
	632, 630, 633, 634, 635, 0, 636, 757, 637, 617,
	618, 638, 639, 0, 640, 641, 642, 643, 644, 645,
	646, 758, 0, 647, 0, 648, 649, 650, 651, 652,
	653, 655, 619, 656, 661, 662, 759, 657, 658, 659,
	660, 760, 664, 665, 666, 667, 0, 668, 669, 0,
	663, 654, 0, 670, 671, 672, 673, 674, 675, 0,
	676, 677, 0, 678, 761, 762, 763, 764, 0, 690,
	0, 679, 681, 682, 683, 684, 765, 685, 766, 0,
	686, 687, 688, 689, 680, 691, 692, 0, 3974, 693,
	694, 696, 698, 699, 695, 697, 700, 0, 701, 0,
	0, 702, 703, 704, 767, 768, 769, 0, 706, 705,
	707, 708, 709, 770, 710, 711, 712, 302, 0, 0,
	0, 713, 714, 771, 715, 716, 717, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 0, 723, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 724, 725, 726,
	3180, 339, 340, 727, 0, 0, 3174, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 3176, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 3184, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 0, 413, 414,
	415, 3183, 416, 417, 0, 0, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 736, 0, 737, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 3173, 739, 740, 531, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 0, 447, 448, 449, 0, 0, 741, 450, 532,
	451, 742, 743, 0, 744, 0, 452, 453, 455, 0,
	745, 0, 454, 456, 457, 0, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 746, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 0, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 0, 524, 512, 0,
	0, 0, 526, 527, 528, 529, 0, 747, 530, 748,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 0, 543, 0,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	3182, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 0, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 0, 636, 757, 637, 617, 618, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 761, 762, 763, 764, 0, 690, 0, 679, 681,
	682, 683, 684, 765, 685, 766, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 3181, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 767, 768, 769, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 1937, 0, 302, 0, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 1936, 316, 317, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 0, 723, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 724, 725, 726, 0,
	339, 340, 727, 0, 0, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 1934,
	372, 0, 373, 375, 728, 729, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 731, 732,
	408, 0, 305, 0, 0, 0, 0, 0, 409, 410,
	411, 733, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 0, 1935, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 736, 0, 737, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 738, 739, 740, 531, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	306, 447, 448, 449, 0, 0, 741, 450, 532, 451,
	742, 743, 0, 744, 0, 452, 453, 455, 0, 745,
	0, 454, 456, 457, 0, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 746, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 0, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 0, 524, 512, 0, 307,
	0, 526, 527, 528, 529, 0, 747, 530, 748, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 749, 0, 543, 0, 750,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 753, 564, 754, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	0, 606, 607, 608, 609, 610, 756, 611, 0, 612,
	613, 620, 621, 622, 1938, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 1933, 632, 630, 633, 634,
	635, 0, 636, 757, 637, 617, 618, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 760, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 1931, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	761, 762, 763, 764, 0, 690, 0, 679, 681, 682,
	683, 684, 765, 685, 766, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	767, 768, 769, 0, 1932, 705, 707, 708, 709, 770,
	710, 711, 712, 1642, 0, 302, 0, 713, 714, 771,
	715, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1644, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 307, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 1381, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 1639, 0, 302, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	325, 326, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 0, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	305, 0, 0, 0, 0, 0, 409, 410, 411, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 0, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 1641, 739, 740, 531, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 306, 447,
	448, 449, 0, 0, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 0, 745, 0, 454,
	456, 457, 0, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 746,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 0, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 0, 524, 512, 0, 307, 0, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 1381, 538, 539, 540, 0,
	0, 541, 542, 749, 0, 543, 0, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 0, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 0, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 767, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 1545, 0, 302, 0, 713, 714, 771, 715, 716,
	717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 325,
	326, 327, 328, 719, 720, 0, 329, 721, 330, 722,
	0, 723, 331, 332, 333, 334, 335, 336, 337, 0,
	0, 0, 338, 724, 725, 726, 0, 339, 340, 727,
	0, 0, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 0, 365, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 371, 372, 0, 373,
	375, 728, 729, 0, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 730, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 731, 732, 408, 0, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 733, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 0, 418, 419, 420, 734, 735, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 736, 0,
	737, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1547, 739, 740, 531, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 0, 741, 450, 532, 451, 742, 743, 0,
	744, 0, 452, 453, 455, 0, 745, 0, 454, 456,
	457, 0, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 746, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 475, 476,
	477, 480, 0, 0, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 0, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 0, 524, 512, 0, 307, 0, 526, 527,
	528, 529, 0, 747, 530, 748, 533, 534, 0, 0,
	535, 0, 536, 0, 1381, 538, 539, 540, 0, 0,
	541, 542, 749, 0, 543, 0, 750, 544, 545, 537,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 753, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 755,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 0, 606, 607,
	608, 609, 610, 756, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 0, 636,
	757, 637, 617, 618, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 758, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 759,
	657, 658, 659, 660, 760, 664, 665, 666, 667, 0,
	668, 669, 0, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 761, 762, 763,
	764, 0, 690, 0, 679, 681, 682, 683, 684, 765,
	685, 766, 0, 686, 687, 688, 689, 680, 691, 692,
	0, 0, 693, 694, 696, 698, 699, 695, 697, 700,
	0, 701, 0, 0, 702, 703, 704, 767, 768, 769,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	806, 0, 302, 0, 713, 714, 771, 715, 716, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 804, 314, 315, 793, 316, 317,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	0, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 796, 362, 363,
	364, 0, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	0, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 802, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 0, 447, 448, 449,
	0, 0, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 0, 745, 0, 454, 456, 457,
	0, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 0, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 0, 524, 512, 0, 0, 0, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 0, 543, 0, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 0, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	798, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	805, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 792,
	0, 302, 0, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 793, 316, 317, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 796, 362, 363, 364,
	0, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 371, 372, 0, 373, 375, 728,
	729, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 0,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 797, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 738, 739,
	740, 531, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 0, 447, 448, 449, 0,
	0, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 0, 745, 0, 454, 456, 457, 0,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 0, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	0, 524, 512, 0, 0, 0, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 0, 543, 0, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 0, 606, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 798,
	631, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 791,
	0, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 302, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 793, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 796, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 797, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 0, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 798, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 302, 0, 0, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	793, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	796, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 4393, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 0,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 0, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 798, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 302, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	0, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 305, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	0, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 306, 447, 448, 449,
	0, 0, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 0, 745, 0, 454, 456, 457,
	0, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 0, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 0, 524, 512, 0, 307, 0, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 1381, 538, 539, 540, 0, 0, 541,
	542, 749, 0, 543, 0, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 0, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 302,
	0, 0, 0, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 0, 0, 338, 724,
	725, 726, 0, 339, 340, 727, 0, 0, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 0, 365,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 731, 732, 408, 0, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 0, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 736, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 738, 739, 740, 531,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 0, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 0, 745, 0, 454, 456, 457, 0, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 746, 468, 0, 470, 471, 0,
	0, 472, 473, 474, 475, 476, 477, 480, 0, 0,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	0, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 3851, 524,
	512, 0, 307, 0, 526, 527, 528, 529, 0, 747,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 0,
	543, 0, 750, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 753, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 0, 606, 607, 608, 609, 610, 756,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 0, 636, 757, 637, 617, 618,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	760, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 765, 685, 766, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 0, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 3376, 0, 302, 0,
	713, 714, 771, 715, 716, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 305, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 3375, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 306, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 307, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 302, 0, 0, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	793, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	796, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 797, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 0,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 0, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 798, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 3116, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 2583, 0, 302, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	325, 326, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 0, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	305, 0, 0, 0, 0, 0, 409, 410, 411, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 0, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 738, 739, 740, 531, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 306, 447,
	448, 449, 0, 0, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 0, 745, 0, 454,
	456, 457, 0, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 746,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 0, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 0, 524, 512, 0, 307, 0, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 0, 543, 0, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 0, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 0, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 767, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 2527, 0, 302, 0, 713, 714, 771, 715, 716,
	717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 325,
	326, 327, 328, 719, 720, 0, 329, 721, 330, 722,
	0, 723, 331, 332, 333, 334, 335, 336, 337, 0,
	0, 0, 338, 724, 725, 726, 0, 339, 340, 727,
	0, 0, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 0, 365, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 371, 372, 0, 373,
	375, 728, 729, 0, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 730, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 731, 732, 408, 0, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 733, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 0, 418, 419, 420, 734, 735, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 736, 0,
	737, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	2526, 739, 740, 531, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 0, 741, 450, 532, 451, 742, 743, 0,
	744, 0, 452, 453, 455, 0, 745, 0, 454, 456,
	457, 0, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 746, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 475, 476,
	477, 480, 0, 0, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 0, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 0, 524, 512, 0, 307, 0, 526, 527,
	528, 529, 0, 747, 530, 748, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 0, 543, 0, 750, 544, 545, 537,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 753, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 755,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 0, 606, 607,
	608, 609, 610, 756, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 0, 636,
	757, 637, 617, 618, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 758, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 759,
	657, 658, 659, 660, 760, 664, 665, 666, 667, 0,
	668, 669, 0, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 761, 762, 763,
	764, 0, 690, 0, 679, 681, 682, 683, 684, 765,
	685, 766, 0, 686, 687, 688, 689, 680, 691, 692,
	0, 0, 693, 694, 696, 698, 699, 695, 697, 700,
	0, 701, 0, 0, 702, 703, 704, 767, 768, 769,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	2511, 0, 302, 0, 713, 714, 771, 715, 716, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	0, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 305, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	0, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 2513,
	739, 740, 531, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 306, 447, 448, 449,
	0, 0, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 0, 745, 0, 454, 456, 457,
	0, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 0, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 0, 524, 512, 0, 307, 0, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 0, 543, 0, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 0, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 302,
	0, 0, 0, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 0, 0, 338, 724,
	725, 726, 0, 339, 340, 727, 0, 0, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 0, 365,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 731, 732, 408, 0, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 0, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 736, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 2473, 739, 740, 531,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 0, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 0, 745, 0, 454, 456, 457, 0, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 746, 468, 0, 470, 471, 0,
	0, 472, 473, 474, 475, 476, 477, 480, 0, 0,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	0, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 0, 524,
	512, 0, 307, 0, 526, 527, 528, 529, 0, 747,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	1381, 538, 539, 540, 0, 0, 541, 542, 749, 0,
	543, 0, 750, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 753, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 0, 606, 607, 608, 609, 610, 756,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 0, 636, 757, 637, 617, 618,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	760, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 765, 685, 766, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 0, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 1772, 0, 302, 0,
	713, 714, 771, 715, 716, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 305, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 1771, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 306, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 307, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 1662, 0, 302, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 0, 723, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 724, 725, 726,
	0, 339, 340, 727, 0, 0, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 0, 305, 0, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 0, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 736, 0, 737, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 0, 0, 741, 450, 532,
	451, 742, 743, 0, 744, 0, 452, 453, 455, 0,
	745, 0, 454, 456, 457, 0, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 746, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 0, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 0, 524, 512, 0,
	307, 0, 526, 527, 528, 529, 0, 747, 530, 748,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 0, 543, 0,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 0, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 0, 636, 757, 637, 617, 618, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 761, 762, 763, 764, 0, 690, 0, 679, 681,
	682, 683, 684, 765, 685, 766, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 767, 768, 769, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 1655, 0, 302, 0, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 0, 316, 317, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 0, 723, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 724, 725, 726, 0,
	339, 340, 727, 0, 0, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 371,
	372, 0, 373, 375, 728, 729, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 731, 732,
	408, 0, 305, 0, 0, 0, 0, 0, 409, 410,
	411, 733, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 0, 418, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 736, 0, 737, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 1657, 739, 740, 531, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	306, 447, 448, 449, 0, 0, 741, 450, 532, 451,
	742, 743, 0, 744, 0, 452, 453, 455, 0, 745,
	0, 454, 456, 457, 0, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 746, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 0, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 0, 524, 512, 0, 307,
	0, 526, 527, 528, 529, 0, 747, 530, 748, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 749, 0, 543, 0, 750,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 753, 564, 754, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	0, 606, 607, 608, 609, 610, 756, 611, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 631, 632, 630, 633, 634,
	635, 0, 636, 757, 637, 617, 618, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 760, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 0, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	761, 762, 763, 764, 0, 690, 0, 679, 681, 682,
	683, 684, 765, 685, 766, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	767, 768, 769, 0, 706, 705, 707, 708, 709, 770,
	710, 711, 712, 1462, 0, 302, 0, 713, 714, 771,
	715, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1461, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 307, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 1452, 0, 302, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	325, 326, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 0, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	305, 0, 0, 0, 0, 0, 409, 410, 411, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 0, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 1451, 739, 740, 531, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 306, 447,
	448, 449, 0, 0, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 0, 745, 0, 454,
	456, 457, 0, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 746,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 0, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 0, 524, 512, 0, 307, 0, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 0, 543, 0, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 0, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 0, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 767, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 1449, 0, 302, 0, 713, 714, 771, 715, 716,
	717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 325,
	326, 327, 328, 719, 720, 0, 329, 721, 330, 722,
	0, 723, 331, 332, 333, 334, 335, 336, 337, 0,
	0, 0, 338, 724, 725, 726, 0, 339, 340, 727,
	0, 0, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 0, 365, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 371, 372, 0, 373,
	375, 728, 729, 0, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 730, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 731, 732, 408, 0, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 733, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 0, 418, 419, 420, 734, 735, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 736, 0,
	737, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1448, 739, 740, 531, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 0, 741, 450, 532, 451, 742, 743, 0,
	744, 0, 452, 453, 455, 0, 745, 0, 454, 456,
	457, 0, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 746, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 475, 476,
	477, 480, 0, 0, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 0, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 0, 524, 512, 0, 307, 0, 526, 527,
	528, 529, 0, 747, 530, 748, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 0, 543, 0, 750, 544, 545, 537,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 753, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 755,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 0, 606, 607,
	608, 609, 610, 756, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 0, 636,
	757, 637, 617, 618, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 758, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 759,
	657, 658, 659, 660, 760, 664, 665, 666, 667, 0,
	668, 669, 0, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 761, 762, 763,
	764, 0, 690, 0, 679, 681, 682, 683, 684, 765,
	685, 766, 0, 686, 687, 688, 689, 680, 691, 692,
	0, 0, 693, 694, 696, 698, 699, 695, 697, 700,
	0, 701, 0, 0, 702, 703, 704, 767, 768, 769,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	1444, 0, 302, 0, 713, 714, 771, 715, 716, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	0, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 305, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	0, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 1443,
	739, 740, 531, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 306, 447, 448, 449,
	0, 0, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 0, 745, 0, 454, 456, 457,
	0, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 0, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 0, 524, 512, 0, 307, 0, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 0, 543, 0, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 0, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 773,
	0, 302, 0, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	0, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 371, 372, 0, 373, 375, 728,
	729, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 0,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 738, 739,
	740, 531, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	0, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 0, 745, 0, 454, 456, 457, 0,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 0, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	0, 524, 512, 0, 307, 0, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 0, 543, 0, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 0, 606, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 669,
	0, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 293, 0,
	302, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 309, 311,
	310, 312, 313, 314, 315, 0, 316, 317, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 325, 326, 327, 328,
	719, 720, 0, 329, 721, 330, 722, 0, 723, 331,
	332, 333, 334, 335, 336, 337, 0, 0, 0, 338,
	724, 725, 726, 0, 339, 340, 727, 0, 0, 0,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	350, 351, 352, 349, 353, 0, 354, 0, 355, 356,
	357, 358, 359, 360, 361, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 371, 372, 0, 373, 375, 728, 729,
	0, 378, 380, 374, 376, 0, 379, 377, 381, 0,
	382, 383, 384, 0, 0, 385, 386, 387, 0, 388,
	389, 390, 0, 391, 392, 393, 0, 394, 395, 730,
	396, 397, 398, 400, 402, 399, 401, 403, 404, 405,
	406, 407, 731, 732, 408, 0, 305, 0, 0, 0,
	0, 0, 409, 410, 411, 733, 0, 0, 0, 412,
	0, 413, 414, 415, 0, 416, 417, 0, 0, 418,
	419, 420, 734, 735, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 0, 430, 736, 0, 737, 431, 0,
	432, 433, 434, 435, 436, 437, 438, 738, 739, 740,
	531, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	446, 0, 0, 0, 306, 447, 448, 449, 0, 0,
	741, 450, 532, 451, 742, 743, 0, 744, 0, 452,
	453, 455, 0, 745, 0, 454, 456, 457, 0, 458,
	0, 0, 0, 459, 460, 461, 462, 463, 464, 0,
	465, 467, 466, 0, 469, 746, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 475, 476, 477, 480, 0,
	0, 478, 479, 481, 482, 0, 483, 484, 486, 489,
	485, 487, 488, 490, 503, 504, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 506, 0,
	505, 0, 507, 508, 509, 510, 511, 518, 520, 521,
	516, 517, 519, 522, 523, 525, 513, 514, 515, 0,
	524, 512, 0, 307, 0, 526, 527, 528, 529, 0,
	747, 530, 748, 533, 534, 0, 0, 535, 0, 536,
	0, 0, 538, 539, 540, 0, 0, 541, 542, 749,
	0, 543, 0, 750, 544, 545, 537, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 0, 556, 557,
	751, 558, 559, 560, 752, 561, 562, 563, 753, 564,
	754, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 575, 576, 577, 755, 578, 579, 581,
	580, 582, 0, 583, 0, 584, 585, 586, 0, 0,
	0, 0, 0, 587, 588, 590, 0, 591, 592, 593,
	594, 589, 595, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 0, 606, 607, 608, 609, 610,
	756, 611, 0, 612, 613, 620, 621, 622, 614, 615,
	616, 623, 624, 625, 626, 627, 629, 628, 0, 631,
	632, 630, 633, 634, 635, 0, 636, 757, 637, 617,
	618, 638, 639, 0, 640, 641, 642, 643, 644, 645,
	646, 758, 0, 647, 0, 648, 649, 650, 651, 652,
	653, 655, 619, 656, 661, 662, 759, 657, 658, 659,
	660, 760, 664, 665, 666, 667, 0, 668, 669, 0,
	663, 654, 0, 670, 671, 672, 673, 674, 675, 0,
	676, 677, 0, 678, 761, 762, 763, 764, 0, 690,
	0, 679, 681, 682, 683, 684, 765, 685, 766, 0,
	686, 687, 688, 689, 680, 691, 692, 0, 0, 693,
	694, 696, 698, 699, 695, 697, 700, 0, 701, 0,
	0, 702, 703, 704, 767, 768, 769, 0, 706, 705,
	707, 708, 709, 770, 710, 711, 712, 302, 0, 0,
	0, 713, 714, 771, 715, 716, 717, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 0, 723, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 724, 725, 726,
	0, 339, 340, 727, 0, 0, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 0, 305, 0, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 0, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 736, 0, 737, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 0, 0, 741, 450, 532,
	451, 742, 743, 0, 744, 0, 452, 453, 455, 0,
	745, 0, 454, 456, 457, 0, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 746, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 0, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 0, 524, 512, 0,
	307, 0, 526, 527, 528, 529, 0, 747, 530, 748,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 0, 543, 0,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 0, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 0, 636, 757, 637, 617, 618, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 761, 762, 763, 764, 0, 690, 0, 679, 681,
	682, 683, 684, 765, 685, 766, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 767, 768, 769, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 302, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	325, 326, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 0, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 796,
	362, 363, 364, 0, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 411, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 0, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 797, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 738, 739, 740, 531, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 0, 447,
	448, 449, 0, 0, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 0, 745, 0, 454,
	456, 457, 0, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 746,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 0, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 0, 524, 512, 0, 0, 0, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 0, 543, 0, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 0, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 798, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 767, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 302, 0, 0, 0, 713, 714, 771, 715, 716,
	717, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	0, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 2624, 372, 0, 373, 375, 728,
	729, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 0,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 738, 739,
	740, 531, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	0, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 0, 745, 0, 454, 456, 457, 0,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 0, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	0, 524, 512, 0, 307, 0, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 0, 543, 0, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 0, 606, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 669,
	0, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 302, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 2622, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 305, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 306, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 307, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 302, 0, 0, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 2620, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 307, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 302, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	0, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 305, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	0, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 2534,
	739, 740, 531, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 306, 447, 448, 449,
	0, 0, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 0, 745, 0, 454, 456, 457,
	0, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 0, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 0, 524, 512, 0, 307, 0, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 0, 543, 0, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 0, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 302,
	0, 0, 0, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 0, 0, 338, 724,
	725, 726, 0, 339, 340, 727, 0, 0, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 0, 365,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 731, 732, 408, 0, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 0, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 736, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 2284, 739, 740, 531,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 0, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 0, 745, 0, 454, 456, 457, 0, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 746, 468, 0, 470, 471, 0,
	0, 472, 473, 474, 475, 476, 477, 480, 0, 0,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	0, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 0, 524,
	512, 0, 307, 0, 526, 527, 528, 529, 0, 747,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 0,
	543, 0, 750, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 753, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 0, 606, 607, 608, 609, 610, 756,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 0, 636, 757, 637, 617, 618,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	760, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 765, 685, 766, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 0, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 302, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 0, 316, 317, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 0, 723, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 724, 725, 726, 0,
	339, 340, 727, 0, 0, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 371,
	372, 0, 373, 375, 728, 729, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 731, 732,
	408, 0, 305, 0, 0, 0, 0, 0, 409, 410,
	411, 733, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 0, 418, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 736, 0, 737, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 2278, 739, 740, 531, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	306, 447, 448, 449, 0, 0, 741, 450, 532, 451,
	742, 743, 0, 744, 0, 452, 453, 455, 0, 745,
	0, 454, 456, 457, 0, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 746, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 0, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 0, 524, 512, 0, 307,
	0, 526, 527, 528, 529, 0, 747, 530, 748, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 749, 0, 543, 0, 750,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 753, 564, 754, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	0, 606, 607, 608, 609, 610, 756, 611, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 631, 632, 630, 633, 634,
	635, 0, 636, 757, 637, 617, 618, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 760, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 0, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	761, 762, 763, 764, 0, 690, 0, 679, 681, 682,
	683, 684, 765, 685, 766, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	767, 768, 769, 0, 706, 705, 707, 708, 709, 770,
	710, 711, 712, 1019, 0, 302, 0, 713, 714, 771,
	715, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 0,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 1018, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 0, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 1017, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 896, 0, 302, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 885, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	325, 894, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 0, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 887, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 893,
	417, 889, 0, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 738, 739, 740, 531, 0, 439, 440, 441, 890,
	442, 443, 444, 445, 446, 0, 0, 0, 0, 447,
	448, 449, 0, 0, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 0, 745, 0, 454,
	456, 457, 0, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 888, 0, 465, 467, 466, 0, 469, 746,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 0, 507, 508, 509, 891,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 0, 524, 512, 0, 0, 0, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 0, 543, 0, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 0, 892, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 886, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 0, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 0, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 767, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 879, 0, 302, 0, 713, 714, 771, 715, 716,
	717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 885, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 325,
	894, 327, 328, 719, 720, 0, 329, 721, 330, 722,
	0, 723, 331, 332, 333, 334, 335, 336, 337, 0,
	0, 0, 338, 724, 725, 726, 0, 339, 340, 727,
	0, 0, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 0, 365, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 371, 372, 0, 373,
	375, 728, 729, 0, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 730, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 731, 732, 408, 0, 0,
	0, 0, 0, 0, 0, 409, 410, 887, 733, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 893, 417,
	889, 0, 418, 419, 420, 734, 735, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 736, 0,
	737, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	738, 739, 740, 531, 0, 439, 440, 441, 890, 442,
	443, 444, 445, 446, 0, 0, 0, 0, 447, 448,
	449, 0, 0, 741, 450, 532, 451, 742, 743, 0,
	744, 0, 452, 453, 455, 0, 745, 0, 454, 456,
	457, 0, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 888, 0, 465, 467, 466, 0, 469, 746, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 475, 476,
	477, 480, 0, 0, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 0, 507, 508, 509, 891, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 0, 524, 512, 0, 0, 0, 526, 527,
	528, 529, 0, 747, 530, 748, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 0, 543, 0, 750, 544, 545, 537,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 753, 564, 754, 565, 566, 0, 892, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 755,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 886, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 0, 606, 607,
	608, 609, 610, 756, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 0, 636,
	757, 637, 617, 618, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 758, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 759,
	657, 658, 659, 660, 760, 664, 665, 666, 667, 0,
	668, 669, 0, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 761, 762, 763,
	764, 0, 690, 0, 679, 681, 682, 683, 684, 765,
	685, 766, 0, 686, 687, 688, 689, 680, 691, 692,
	0, 0, 693, 694, 696, 698, 699, 695, 697, 700,
	0, 701, 0, 0, 702, 703, 704, 767, 768, 769,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	302, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	0, 0, 0, 0, 0, 0, 0, 308, 309, 311,
	310, 312, 313, 314, 315, 0, 316, 317, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 325, 326, 327, 328,
	719, 720, 0, 329, 721, 330, 722, 0, 723, 331,
	332, 333, 334, 335, 336, 337, 0, 0, 0, 338,
	724, 725, 726, 0, 339, 340, 727, 0, 0, 0,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	350, 351, 352, 349, 353, 0, 354, 0, 355, 356,
	357, 358, 359, 360, 361, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 371, 372, 0, 373, 375, 728, 729,
	0, 378, 380, 374, 376, 0, 379, 377, 381, 0,
	382, 383, 384, 0, 0, 385, 386, 387, 0, 388,
	389, 390, 0, 391, 392, 393, 0, 394, 395, 730,
	396, 397, 398, 400, 402, 399, 401, 403, 404, 405,
	406, 407, 731, 732, 408, 0, 3976, 0, 0, 0,
	0, 0, 409, 410, 411, 733, 0, 0, 0, 412,
	0, 413, 414, 415, 0, 416, 417, 0, 0, 418,
	419, 420, 734, 735, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 0, 430, 736, 0, 737, 431, 0,
	432, 433, 434, 435, 436, 437, 438, 738, 739, 740,
	531, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	446, 0, 0, 0, 0, 447, 448, 449, 0, 0,
	741, 450, 532, 451, 742, 743, 0, 744, 0, 452,
	453, 455, 0, 745, 0, 454, 456, 457, 0, 458,
	0, 0, 0, 459, 460, 461, 462, 463, 464, 0,
	465, 467, 466, 0, 469, 746, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 475, 476, 477, 480, 0,
	0, 478, 479, 481, 482, 0, 483, 484, 486, 489,
	485, 487, 488, 490, 503, 504, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 506, 0,
	505, 0, 507, 508, 509, 510, 511, 518, 520, 521,
	516, 517, 519, 522, 523, 525, 513, 514, 515, 0,
	524, 512, 0, 0, 0, 526, 527, 528, 529, 0,
	747, 530, 748, 533, 534, 0, 0, 535, 0, 536,
	0, 0, 538, 539, 540, 0, 0, 541, 542, 749,
	0, 543, 0, 750, 544, 545, 537, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 0, 556, 557,
	751, 558, 559, 560, 752, 561, 562, 563, 753, 564,
	754, 565, 566, 4749, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 575, 576, 577, 755, 578, 579, 581,
	580, 582, 0, 583, 0, 584, 585, 586, 0, 0,
	0, 0, 0, 587, 588, 590, 0, 591, 592, 593,
	594, 589, 595, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 0, 606, 607, 608, 609, 610,
	756, 611, 0, 612, 613, 620, 621, 622, 614, 615,
	616, 623, 624, 625, 626, 627, 629, 628, 0, 631,
	632, 630, 633, 634, 635, 0, 636, 757, 637, 617,
	618, 638, 639, 0, 640, 641, 642, 643, 644, 645,
	646, 758, 0, 647, 0, 648, 649, 650, 651, 652,
	653, 655, 619, 656, 661, 662, 759, 657, 658, 659,
	660, 760, 664, 665, 666, 667, 0, 668, 669, 0,
	663, 654, 0, 670, 671, 672, 673, 674, 675, 0,
	676, 677, 0, 678, 761, 762, 763, 764, 0, 690,
	0, 679, 681, 682, 683, 684, 765, 685, 766, 0,
	686, 687, 688, 689, 680, 691, 692, 0, 0, 693,
	694, 696, 698, 699, 695, 697, 700, 0, 701, 0,
	0, 702, 703, 704, 767, 768, 769, 0, 706, 705,
	707, 708, 709, 770, 710, 711, 712, 1490, 0, 302,
	0, 713, 714, 771, 715, 716, 717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 318, 0, 319, 320,
	321, 1493, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 0, 0, 338, 724,
	725, 1491, 0, 339, 340, 727, 0, 0, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 0, 365,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 731, 732, 408, 0, 0, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 0, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 736, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 738, 739, 740, 531,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 0, 447, 448, 449, 0, 0, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 0, 745, 0, 454, 456, 457, 0, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 746, 468, 0, 470, 471, 0,
	0, 472, 473, 474, 475, 476, 477, 480, 0, 0,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 867,
	0, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 0, 524,
	512, 0, 0, 0, 526, 527, 528, 529, 0, 747,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 0,
	543, 0, 750, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 753, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 0, 866, 607, 608, 609, 610, 756,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	865, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 1494, 635, 0, 636, 757, 637, 617, 618,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	760, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 863, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 765, 685, 766, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 0, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 1490, 0, 302, 0,
	713, 714, 771, 715, 716, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	1493, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	1491, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 867, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 0, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 866, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 865,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 1494, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 863, 762, 763, 764, 0, 690, 0, 679,
	1492, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 874, 0, 302, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 872, 316, 317, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 0, 723, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 724, 725, 726,
	0, 339, 340, 727, 0, 0, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 0, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 736, 0, 737, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 0, 447, 448, 449, 0, 0, 741, 450, 532,
	451, 742, 743, 0, 744, 0, 452, 453, 455, 0,
	745, 0, 454, 456, 457, 0, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 746, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 0, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 0, 524, 512, 0,
	0, 0, 526, 527, 528, 529, 0, 747, 530, 748,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 0, 543, 0,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 0, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 0, 636, 757, 637, 617, 618, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 761, 762, 763, 764, 0, 690, 0, 679, 681,
	682, 683, 684, 765, 685, 766, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 767, 768, 769, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 782, 0, 302, 0, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 781, 316, 317, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 0, 723, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 724, 725, 726, 0,
	339, 340, 727, 0, 0, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 371,
	372, 0, 373, 375, 728, 729, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 731, 732,
	408, 0, 0, 0, 0, 0, 0, 0, 409, 410,
	411, 733, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 0, 418, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 736, 0, 737, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 738, 739, 740, 531, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	0, 447, 448, 449, 0, 0, 741, 450, 532, 451,
	742, 743, 0, 744, 0, 452, 453, 455, 0, 745,
	0, 454, 456, 457, 0, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 746, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 0, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 0, 524, 512, 0, 0,
	0, 526, 527, 528, 529, 0, 747, 530, 748, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 749, 0, 543, 0, 750,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 753, 564, 754, 780, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	0, 606, 607, 608, 609, 610, 756, 611, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 631, 632, 630, 633, 634,
	635, 0, 636, 757, 637, 617, 618, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 760, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 0, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	761, 762, 763, 764, 0, 690, 0, 679, 681, 682,
	683, 684, 765, 685, 766, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	767, 768, 769, 0, 706, 705, 707, 708, 709, 770,
	710, 711, 712, 302, 3284, 0, 0, 713, 714, 771,
	715, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 325,
	326, 327, 328, 719, 720, 0, 329, 721, 330, 722,
	0, 723, 331, 332, 333, 334, 335, 336, 337, 0,
	0, 0, 338, 724, 725, 726, 0, 339, 340, 727,
	0, 0, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 0, 365, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 371, 372, 0, 373,
	375, 728, 729, 0, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 730, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 731, 732, 408, 0, 0,
	0, 0, 0, 0, 0, 409, 410, 411, 733, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 0, 418, 419, 420, 734, 735, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 736, 0,
	737, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	738, 739, 740, 531, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 0, 447, 448,
	449, 0, 0, 741, 450, 532, 451, 742, 743, 0,
	744, 0, 452, 453, 455, 0, 745, 0, 454, 456,
	457, 0, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 746, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 475, 476,
	477, 480, 0, 0, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 0, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 0, 524, 512, 0, 0, 0, 526, 527,
	528, 529, 0, 747, 530, 748, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 0, 543, 0, 750, 544, 545, 537,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 753, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 755,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 0, 606, 607,
	608, 609, 610, 756, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 0, 636,
	757, 637, 617, 618, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 758, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 759,
	657, 658, 659, 660, 760, 664, 665, 666, 667, 0,
	668, 669, 0, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 761, 762, 763,
	764, 0, 690, 0, 679, 681, 682, 683, 684, 765,
	685, 766, 0, 686, 687, 688, 689, 680, 691, 692,
	0, 0, 693, 694, 696, 698, 699, 695, 697, 700,
	0, 701, 0, 0, 702, 703, 704, 767, 768, 769,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	302, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	0, 0, 0, 0, 0, 0, 0, 308, 309, 311,
	310, 312, 313, 314, 315, 0, 316, 317, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 325, 326, 327, 328,
	719, 720, 0, 329, 721, 330, 722, 0, 723, 331,
	332, 333, 334, 335, 336, 337, 0, 0, 0, 338,
	724, 725, 726, 0, 339, 340, 727, 0, 0, 0,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	350, 351, 352, 349, 353, 0, 354, 0, 355, 356,
	357, 358, 359, 360, 361, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 371, 372, 0, 373, 375, 728, 729,
	0, 378, 380, 374, 376, 0, 379, 377, 381, 0,
	382, 383, 384, 0, 0, 385, 386, 387, 0, 388,
	389, 390, 0, 391, 392, 393, 0, 394, 395, 730,
	396, 397, 398, 400, 402, 399, 401, 403, 404, 405,
	406, 407, 731, 732, 408, 0, 0, 0, 0, 0,
	0, 0, 409, 410, 411, 733, 0, 0, 0, 412,
	0, 413, 414, 415, 0, 416, 417, 0, 0, 418,
	419, 420, 734, 735, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 0, 430, 736, 0, 737, 431, 0,
	432, 433, 434, 435, 436, 437, 438, 738, 739, 740,
	531, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	446, 0, 0, 0, 0, 447, 448, 449, 0, 0,
	741, 450, 532, 451, 742, 743, 0, 744, 0, 452,
	453, 455, 0, 745, 0, 454, 456, 457, 0, 458,
	0, 0, 0, 459, 460, 461, 462, 463, 464, 0,
	465, 467, 466, 0, 469, 746, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 475, 476, 477, 480, 0,
	0, 478, 479, 481, 482, 0, 483, 484, 486, 489,
	485, 487, 488, 490, 503, 504, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 506, 0,
	505, 0, 507, 508, 509, 510, 511, 518, 520, 521,
	516, 517, 519, 522, 523, 525, 513, 514, 515, 0,
	524, 512, 0, 0, 0, 526, 527, 528, 529, 0,
	747, 530, 748, 533, 534, 0, 0, 535, 0, 536,
	0, 0, 538, 539, 540, 0, 0, 541, 542, 749,
	0, 543, 0, 750, 544, 545, 537, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 0, 556, 557,
	751, 558, 559, 560, 752, 561, 562, 563, 753, 564,
	754, 565, 566, 5061, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 575, 576, 577, 755, 578, 579, 581,
	580, 582, 0, 583, 0, 584, 585, 586, 0, 0,
	0, 0, 0, 587, 588, 590, 0, 591, 592, 593,
	594, 589, 595, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 0, 606, 607, 608, 609, 610,
	756, 611, 0, 612, 613, 620, 621, 622, 614, 615,
	616, 623, 624, 625, 626, 627, 629, 628, 0, 631,
	632, 630, 633, 634, 635, 0, 636, 757, 637, 617,
	618, 638, 639, 0, 640, 641, 642, 643, 644, 645,
	646, 758, 0, 647, 0, 648, 649, 650, 651, 652,
	653, 655, 619, 656, 661, 662, 759, 657, 658, 659,
	660, 760, 664, 665, 666, 667, 0, 668, 669, 0,
	663, 654, 0, 670, 671, 672, 673, 674, 675, 0,
	676, 677, 0, 678, 761, 762, 763, 764, 0, 690,
	0, 679, 681, 682, 683, 684, 765, 685, 766, 0,
	686, 687, 688, 689, 680, 691, 692, 0, 0, 693,
	694, 696, 698, 699, 695, 697, 700, 0, 701, 0,
	0, 702, 703, 704, 767, 768, 769, 0, 706, 705,
	707, 708, 709, 770, 710, 711, 712, 302, 3791, 0,
	0, 713, 714, 771, 715, 716, 717, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 0, 723, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 724, 725, 726,
	0, 339, 340, 727, 0, 0, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 0, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 736, 0, 737, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 0, 447, 448, 449, 0, 0, 741, 450, 532,
	451, 742, 743, 0, 744, 0, 452, 453, 455, 0,
	745, 0, 454, 456, 457, 0, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 746, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 0, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 0, 524, 512, 0,
	0, 0, 526, 527, 528, 529, 0, 747, 530, 748,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 0, 543, 0,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 0, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 0, 636, 757, 637, 617, 618, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 761, 762, 763, 764, 0, 690, 0, 679, 681,
	682, 683, 684, 765, 685, 766, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 767, 768, 769, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 302, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	325, 326, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 0, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 411, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 0, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 738, 739, 740, 531, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 0, 447,
	448, 449, 0, 0, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 0, 745, 0, 454,
	456, 457, 0, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 746,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 0, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 0, 524, 512, 0, 0, 0, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 0, 543, 0, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 4628, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 0, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 0, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 767, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 302, 0, 0, 0, 713, 714, 771, 715, 716,
	717, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	0, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 371, 372, 0, 373, 375, 728,
	729, 4336, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 0,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 738, 739,
	740, 531, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 0, 447, 448, 449, 0,
	0, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 0, 745, 0, 454, 456, 457, 0,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 0, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	0, 524, 512, 0, 0, 0, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 0, 543, 0, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 0, 606, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 669,
	0, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 302, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 3048, 0, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 0, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 302, 3284, 0, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 0,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 0, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 3368,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 302, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	0, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	0, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 0, 447, 448, 449,
	0, 0, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 0, 745, 0, 454, 456, 457,
	0, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 0, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 0, 524, 512, 0, 0, 0, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 0, 543, 0, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 2417, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 0, 866, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 865, 624, 625, 626, 627, 3242, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 863, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 302,
	0, 0, 0, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 2594, 316, 317, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 0, 0, 338, 724,
	725, 726, 0, 339, 340, 727, 0, 0, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 0, 365,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 731, 732, 408, 0, 0, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 0, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 736, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 738, 739, 740, 531,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 0, 447, 448, 449, 0, 0, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 0, 745, 0, 454, 456, 457, 0, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 746, 468, 0, 470, 471, 0,
	0, 472, 473, 474, 475, 476, 477, 480, 0, 0,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	0, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 0, 524,
	512, 0, 0, 0, 526, 527, 528, 529, 0, 747,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 0,
	543, 0, 750, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 753, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 0, 606, 607, 608, 609, 610, 756,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 0, 636, 757, 637, 617, 618,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	760, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 765, 685, 766, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 0, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 2581, 0, 302, 0,
	713, 714, 771, 715, 716, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 0, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 1828, 0, 302, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 0, 723, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 724, 725, 726,
	0, 339, 340, 727, 0, 0, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 0, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 736, 0, 737, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 0, 447, 448, 449, 0, 0, 741, 450, 532,
	451, 742, 743, 0, 744, 0, 452, 453, 455, 0,
	745, 0, 454, 456, 457, 0, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 746, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 0, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 0, 524, 512, 0,
	0, 0, 526, 527, 528, 529, 0, 747, 530, 748,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 0, 543, 0,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 0, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 0, 636, 757, 637, 617, 618, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 761, 762, 763, 764, 0, 690, 0, 679, 681,
	682, 683, 684, 765, 685, 766, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 767, 768, 769, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 1820, 0, 302, 0, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 0, 316, 317, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 0, 723, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 724, 725, 726, 0,
	339, 340, 727, 0, 0, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 371,
	372, 0, 373, 375, 728, 729, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 731, 732,
	408, 0, 0, 0, 0, 0, 0, 0, 409, 410,
	411, 733, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 0, 418, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 736, 0, 737, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 738, 739, 740, 531, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	0, 447, 448, 449, 0, 0, 741, 450, 532, 451,
	742, 743, 0, 744, 0, 452, 453, 455, 0, 745,
	0, 454, 456, 457, 0, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 746, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 0, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 0, 524, 512, 0, 0,
	0, 526, 527, 528, 529, 0, 747, 530, 748, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 749, 0, 543, 0, 750,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 753, 564, 754, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	0, 606, 607, 608, 609, 610, 756, 611, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 631, 632, 630, 633, 634,
	635, 0, 636, 757, 637, 617, 618, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 760, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 0, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	761, 762, 763, 764, 0, 690, 0, 679, 681, 682,
	683, 684, 765, 685, 766, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	767, 768, 769, 0, 706, 705, 707, 708, 709, 770,
	710, 711, 712, 857, 0, 302, 0, 713, 714, 771,
	715, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	853, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 0,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 858, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 867, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 0, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	866, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 865, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 1805, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 863,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 1778, 0, 302, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	325, 326, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 0, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 411, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 0, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 1777, 739, 740, 531, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 0, 447,
	448, 449, 0, 0, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 0, 745, 0, 454,
	456, 457, 0, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 746,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 0, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 0, 524, 512, 0, 0, 0, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 0, 543, 0, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 0, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 0, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 767, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 1761, 0, 302, 0, 713, 714, 771, 715, 716,
	717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 325,
	326, 327, 328, 719, 720, 0, 329, 721, 330, 722,
	0, 723, 331, 332, 333, 334, 335, 336, 337, 0,
	0, 0, 338, 724, 725, 726, 0, 339, 340, 727,
	0, 0, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 0, 365, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 371, 372, 0, 373,
	375, 728, 729, 0, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 730, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 731, 732, 408, 0, 0,
	0, 0, 0, 0, 0, 409, 410, 411, 733, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 0, 418, 419, 420, 734, 735, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 736, 0,
	737, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1759, 739, 740, 531, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 0, 447, 448,
	449, 0, 0, 741, 450, 532, 451, 742, 743, 0,
	744, 0, 452, 453, 455, 0, 745, 0, 454, 456,
	457, 0, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 746, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 475, 476,
	477, 480, 0, 0, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 0, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 0, 524, 512, 0, 0, 0, 526, 527,
	528, 529, 0, 747, 530, 748, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 0, 543, 0, 750, 544, 545, 537,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 753, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 755,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 0, 606, 607,
	608, 609, 610, 756, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 0, 636,
	757, 637, 617, 618, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 758, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 759,
	657, 658, 659, 660, 760, 664, 665, 666, 667, 0,
	668, 669, 0, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 761, 762, 763,
	764, 0, 690, 0, 679, 681, 682, 683, 684, 765,
	685, 766, 0, 686, 687, 688, 689, 680, 691, 692,
	0, 0, 693, 694, 696, 698, 699, 695, 697, 700,
	0, 701, 0, 0, 702, 703, 704, 767, 768, 769,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	1753, 0, 302, 0, 713, 714, 771, 715, 716, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	0, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	0, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 0, 447, 448, 449,
	0, 0, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 0, 745, 0, 454, 456, 457,
	0, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 0, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 0, 524, 512, 0, 0, 0, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 0, 543, 0, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 0, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 1731,
	0, 302, 0, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	0, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 371, 372, 0, 373, 375, 728,
	729, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 0,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 1729, 739,
	740, 531, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 0, 447, 448, 449, 0,
	0, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 0, 745, 0, 454, 456, 457, 0,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 0, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	0, 524, 512, 0, 0, 0, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 0, 543, 0, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 0, 606, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 669,
	0, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 1722, 0,
	302, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 309, 311,
	310, 312, 313, 314, 315, 0, 316, 317, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 325, 326, 327, 328,
	719, 720, 0, 329, 721, 330, 722, 0, 723, 331,
	332, 333, 334, 335, 336, 337, 0, 0, 0, 338,
	724, 725, 726, 0, 339, 340, 727, 0, 0, 0,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	350, 351, 352, 349, 353, 0, 354, 0, 355, 356,
	357, 358, 359, 360, 361, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 371, 372, 0, 373, 375, 728, 729,
	0, 378, 380, 374, 376, 0, 379, 377, 381, 0,
	382, 383, 384, 0, 0, 385, 386, 387, 0, 388,
	389, 390, 0, 391, 392, 393, 0, 394, 395, 730,
	396, 397, 398, 400, 402, 399, 401, 403, 404, 405,
	406, 407, 731, 732, 408, 0, 0, 0, 0, 0,
	0, 0, 409, 410, 411, 733, 0, 0, 0, 412,
	0, 413, 414, 415, 0, 416, 417, 0, 0, 418,
	419, 420, 734, 735, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 0, 430, 736, 0, 737, 431, 0,
	432, 433, 434, 435, 436, 437, 438, 738, 739, 740,
	531, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	446, 0, 0, 0, 0, 447, 448, 449, 0, 0,
	741, 450, 532, 451, 742, 743, 0, 744, 0, 452,
	453, 455, 0, 745, 0, 454, 456, 457, 0, 458,
	0, 0, 0, 459, 460, 461, 462, 463, 464, 0,
	465, 467, 466, 0, 469, 746, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 475, 476, 477, 480, 0,
	0, 478, 479, 481, 482, 0, 483, 484, 486, 489,
	485, 487, 488, 490, 503, 504, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 506, 0,
	505, 0, 507, 508, 509, 510, 511, 518, 520, 521,
	516, 517, 519, 522, 523, 525, 513, 514, 515, 0,
	524, 512, 0, 0, 0, 526, 527, 528, 529, 0,
	747, 530, 748, 533, 534, 0, 0, 535, 0, 536,
	0, 0, 538, 539, 540, 0, 0, 541, 542, 749,
	0, 543, 0, 750, 544, 545, 537, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 0, 556, 557,
	751, 558, 559, 560, 752, 561, 562, 563, 753, 564,
	754, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 575, 576, 577, 755, 578, 579, 581,
	580, 582, 0, 583, 0, 584, 585, 586, 0, 0,
	0, 0, 0, 587, 588, 590, 0, 591, 592, 593,
	594, 589, 595, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 0, 606, 607, 608, 609, 610,
	756, 611, 0, 612, 613, 620, 621, 622, 614, 615,
	616, 623, 624, 625, 626, 627, 629, 628, 0, 631,
	632, 630, 633, 634, 635, 0, 636, 757, 637, 617,
	618, 638, 639, 0, 640, 641, 642, 643, 644, 645,
	646, 758, 0, 647, 0, 648, 649, 650, 651, 652,
	653, 655, 619, 656, 661, 662, 759, 657, 658, 659,
	660, 760, 664, 665, 666, 667, 0, 668, 669, 0,
	663, 654, 0, 670, 671, 672, 673, 674, 675, 0,
	676, 677, 0, 678, 761, 762, 763, 764, 0, 690,
	0, 679, 681, 682, 683, 684, 765, 685, 766, 0,
	686, 687, 688, 689, 680, 691, 692, 0, 0, 693,
	694, 696, 698, 699, 695, 697, 700, 0, 701, 0,
	0, 702, 703, 704, 767, 768, 769, 0, 706, 705,
	707, 708, 709, 770, 710, 711, 712, 1683, 0, 302,
	0, 713, 714, 771, 715, 716, 717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 0, 0, 338, 724,
	725, 726, 0, 339, 340, 727, 0, 0, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 0, 365,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 731, 732, 408, 0, 0, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 0, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 736, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 738, 739, 740, 531,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 0, 447, 448, 449, 0, 0, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 0, 745, 0, 454, 456, 457, 0, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 746, 468, 0, 470, 471, 0,
	0, 472, 473, 474, 475, 476, 477, 480, 0, 0,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	0, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 0, 524,
	512, 0, 0, 0, 526, 527, 528, 529, 0, 747,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 0,
	543, 0, 750, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 753, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 0, 606, 607, 608, 609, 610, 756,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 0, 636, 757, 637, 617, 618,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	760, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 765, 685, 766, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 0, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 1647, 0, 302, 0,
	713, 714, 771, 715, 716, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 0, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 1496, 0, 302, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 0, 723, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 724, 725, 726,
	0, 339, 340, 727, 0, 0, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 0, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 736, 0, 737, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 0, 447, 448, 449, 0, 0, 741, 450, 532,
	451, 742, 743, 0, 744, 0, 452, 453, 455, 0,
	745, 0, 454, 456, 457, 0, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 746, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 0, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 0, 524, 512, 0,
	0, 0, 526, 527, 528, 529, 0, 747, 530, 748,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 0, 543, 0,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 0, 866, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 865, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 0, 636, 757, 637, 617, 618, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 863, 762, 763, 764, 0, 690, 0, 679, 681,
	682, 683, 684, 765, 685, 766, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 767, 768, 769, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 1467, 0, 302, 0, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 0, 316, 317, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 0, 723, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 724, 725, 726, 0,
	339, 340, 727, 0, 0, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 371,
	372, 0, 373, 375, 728, 729, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 731, 732,
	408, 0, 0, 0, 0, 0, 0, 0, 409, 410,
	411, 733, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 0, 418, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 736, 0, 737, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 1466, 739, 740, 531, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	0, 447, 448, 449, 0, 0, 741, 450, 532, 451,
	742, 743, 0, 744, 0, 452, 453, 455, 0, 745,
	0, 454, 456, 457, 0, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 746, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 0, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 0, 524, 512, 0, 0,
	0, 526, 527, 528, 529, 0, 747, 530, 748, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 749, 0, 543, 0, 750,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 753, 564, 754, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	0, 606, 607, 608, 609, 610, 756, 611, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 631, 632, 630, 633, 634,
	635, 0, 636, 757, 637, 617, 618, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 760, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 0, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	761, 762, 763, 764, 0, 690, 0, 679, 681, 682,
	683, 684, 765, 685, 766, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	767, 768, 769, 0, 706, 705, 707, 708, 709, 770,
	710, 711, 712, 1458, 0, 302, 0, 713, 714, 771,
	715, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1457, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 0,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 0, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 302, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 1406, 316, 317,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	0, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	0, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 0, 447, 448, 449,
	0, 0, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 0, 745, 0, 454, 456, 457,
	0, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 0, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 0, 524, 512, 0, 0, 0, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 0, 543, 0, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 0, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 877,
	0, 302, 0, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	0, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 371, 372, 0, 373, 375, 728,
	729, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 0,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 738, 739,
	740, 531, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 0, 447, 448, 449, 0,
	0, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 0, 745, 0, 454, 456, 457, 0,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 0, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	0, 524, 512, 0, 0, 0, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 0, 543, 0, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 0, 606, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 669,
	0, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 857, 0,
	302, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 309, 311,
	310, 312, 313, 314, 315, 0, 316, 317, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 325, 326, 327, 328,
	719, 720, 0, 329, 721, 330, 722, 0, 723, 331,
	332, 333, 334, 335, 336, 337, 0, 0, 0, 338,
	724, 725, 726, 0, 339, 853, 727, 0, 0, 0,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	350, 351, 352, 349, 353, 0, 852, 0, 355, 356,
	357, 358, 359, 360, 361, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 371, 372, 0, 373, 375, 728, 729,
	0, 378, 380, 374, 376, 0, 379, 377, 381, 0,
	382, 383, 384, 0, 0, 385, 386, 387, 0, 388,
	389, 390, 0, 391, 392, 393, 0, 394, 395, 730,
	396, 397, 398, 400, 402, 399, 401, 403, 404, 405,
	406, 407, 731, 732, 408, 0, 0, 0, 0, 0,
	0, 0, 409, 410, 411, 733, 0, 0, 0, 412,
	0, 413, 414, 415, 0, 416, 417, 0, 0, 418,
	419, 420, 734, 735, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 0, 430, 736, 0, 737, 431, 0,
	432, 433, 434, 435, 436, 437, 438, 738, 739, 740,
	531, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	446, 0, 0, 0, 0, 447, 448, 449, 0, 0,
	741, 450, 532, 451, 742, 743, 0, 744, 0, 452,
	453, 455, 0, 745, 0, 454, 456, 457, 0, 458,
	0, 0, 0, 459, 460, 461, 462, 463, 464, 0,
	465, 467, 466, 0, 469, 746, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 475, 476, 858, 480, 0,
	0, 478, 479, 481, 482, 0, 483, 484, 486, 489,
	485, 487, 488, 490, 503, 504, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 506, 0,
	867, 0, 507, 508, 509, 510, 511, 518, 520, 521,
	516, 517, 519, 522, 523, 525, 513, 514, 515, 0,
	524, 512, 0, 0, 0, 526, 527, 528, 529, 0,
	747, 530, 748, 533, 534, 0, 0, 535, 0, 536,
	0, 0, 538, 539, 540, 0, 0, 541, 542, 749,
	0, 543, 0, 750, 544, 545, 537, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 0, 556, 557,
	751, 558, 559, 560, 752, 561, 562, 563, 753, 564,
	754, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 575, 576, 577, 755, 578, 579, 581,
	580, 582, 0, 583, 0, 584, 585, 586, 0, 0,
	0, 0, 0, 587, 588, 590, 0, 591, 592, 593,
	594, 589, 595, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 0, 866, 607, 608, 609, 610,
	854, 611, 0, 612, 613, 620, 621, 622, 614, 615,
	616, 865, 624, 625, 626, 627, 629, 628, 0, 631,
	632, 630, 633, 855, 635, 0, 636, 757, 637, 617,
	618, 638, 639, 0, 640, 641, 642, 643, 644, 645,
	646, 758, 0, 647, 0, 648, 649, 650, 651, 652,
	653, 655, 619, 656, 661, 662, 759, 657, 658, 659,
	660, 760, 664, 665, 666, 667, 0, 668, 669, 0,
	663, 654, 0, 670, 671, 672, 673, 674, 675, 0,
	676, 677, 0, 678, 863, 762, 763, 764, 0, 690,
	0, 679, 859, 682, 683, 684, 765, 685, 766, 0,
	686, 687, 688, 689, 680, 691, 692, 0, 0, 693,
	694, 696, 698, 699, 695, 697, 700, 0, 701, 0,
	0, 702, 703, 704, 767, 768, 769, 0, 706, 705,
	707, 708, 709, 770, 710, 711, 712, 846, 0, 302,
	0, 713, 714, 771, 715, 716, 717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 0, 0, 338, 724,
	725, 726, 0, 339, 340, 727, 0, 0, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 0, 365,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 731, 732, 408, 0, 0, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 0, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 736, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 738, 739, 740, 531,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 0, 447, 448, 449, 0, 0, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 0, 745, 0, 454, 456, 457, 0, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 746, 468, 0, 470, 471, 0,
	0, 472, 473, 474, 475, 476, 477, 480, 0, 0,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	0, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 0, 524,
	512, 0, 0, 0, 526, 527, 528, 529, 0, 747,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 0,
	543, 0, 750, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 753, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 0, 606, 607, 608, 609, 610, 756,
	611, 0, 612, 613, 847, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 0, 636, 757, 637, 617, 618,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	760, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 765, 685, 766, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 0, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 808, 0, 302, 0,
	713, 714, 771, 715, 716, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 0, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 800, 0, 302, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 0, 723, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 724, 725, 726,
	0, 339, 340, 727, 0, 0, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 0, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 736, 0, 737, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 0, 447, 448, 449, 0, 0, 741, 450, 532,
	451, 742, 743, 0, 744, 0, 452, 453, 455, 0,
	745, 0, 454, 456, 457, 0, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 746, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 0, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 0, 524, 512, 0,
	0, 0, 526, 527, 528, 529, 0, 747, 530, 748,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 0, 543, 0,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 0, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 0, 636, 757, 637, 617, 618, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 761, 762, 763, 764, 0, 690, 0, 679, 681,
	682, 683, 684, 765, 685, 766, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 767, 768, 769, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 777, 0, 302, 0, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 0, 316, 317, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 0, 723, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 724, 725, 726, 0,
	339, 340, 727, 0, 0, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 371,
	372, 0, 373, 375, 728, 729, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 731, 732,
	408, 0, 0, 0, 0, 0, 0, 0, 409, 410,
	411, 733, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 0, 418, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 736, 0, 737, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 738, 739, 740, 531, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	0, 447, 448, 449, 0, 0, 741, 450, 532, 451,
	742, 743, 0, 744, 0, 452, 453, 455, 0, 745,
	0, 454, 456, 457, 0, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 746, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 0, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 0, 524, 512, 0, 0,
	0, 526, 527, 528, 529, 0, 747, 530, 748, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 749, 0, 543, 0, 750,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 753, 564, 754, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	0, 606, 607, 608, 609, 610, 756, 611, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 631, 632, 630, 633, 634,
	635, 0, 636, 757, 637, 617, 618, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 760, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 0, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	761, 762, 763, 764, 0, 690, 0, 679, 681, 682,
	683, 684, 765, 685, 766, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	767, 768, 769, 0, 706, 705, 707, 708, 709, 770,
	710, 711, 712, 302, 0, 0, 0, 713, 714, 771,
	715, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 325,
	326, 327, 328, 719, 720, 0, 329, 721, 330, 722,
	0, 723, 331, 332, 333, 334, 335, 336, 337, 0,
	0, 0, 338, 724, 725, 726, 0, 339, 340, 727,
	0, 0, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 0, 365, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 371, 372, 0, 373,
	375, 728, 729, 0, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 730, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 731, 732, 408, 0, 0,
	0, 0, 0, 0, 0, 409, 410, 411, 733, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 0, 418, 419, 420, 734, 735, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 736, 0,
	737, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	738, 739, 740, 531, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 0, 447, 448,
	449, 0, 0, 741, 450, 532, 451, 742, 743, 0,
	744, 0, 452, 453, 455, 0, 745, 0, 454, 456,
	457, 0, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 746, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 475, 476,
	477, 480, 0, 0, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 0, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 0, 524, 512, 0, 0, 0, 526, 527,
	528, 529, 0, 747, 530, 748, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 0, 543, 0, 750, 544, 545, 537,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 753, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 755,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 0, 606, 607,
	608, 609, 610, 756, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 0, 636,
	757, 637, 617, 618, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 758, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 759,
	657, 658, 659, 660, 760, 664, 665, 666, 667, 0,
	668, 669, 0, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 761, 762, 763,
	764, 0, 690, 0, 679, 681, 682, 683, 684, 765,
	685, 766, 0, 686, 687, 688, 689, 680, 691, 692,
	0, 0, 693, 694, 696, 698, 699, 695, 697, 700,
	0, 701, 0, 0, 702, 703, 704, 767, 768, 769,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	302, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	0, 0, 0, 0, 0, 0, 0, 308, 309, 311,
	310, 312, 313, 314, 315, 0, 316, 317, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 325, 326, 327, 328,
	719, 720, 0, 329, 721, 330, 722, 0, 723, 331,
	332, 333, 334, 335, 336, 337, 0, 0, 0, 338,
	724, 725, 726, 0, 339, 340, 727, 0, 0, 0,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	350, 351, 352, 349, 353, 0, 354, 0, 355, 356,
	357, 358, 359, 360, 361, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 371, 372, 0, 373, 375, 728, 729,
	0, 378, 380, 374, 376, 0, 379, 377, 381, 0,
	382, 383, 384, 0, 0, 385, 386, 387, 0, 388,
	389, 390, 0, 391, 392, 393, 0, 394, 395, 730,
	396, 397, 398, 400, 402, 399, 401, 403, 404, 405,
	406, 407, 731, 732, 408, 0, 0, 0, 0, 0,
	0, 0, 409, 410, 411, 733, 0, 0, 0, 412,
	0, 413, 414, 415, 0, 416, 417, 0, 0, 418,
	419, 420, 734, 735, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 0, 430, 736, 0, 737, 431, 0,
	432, 433, 434, 435, 436, 437, 438, 4008, 739, 740,
	531, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	446, 0, 0, 0, 0, 447, 448, 449, 0, 0,
	741, 450, 532, 451, 742, 743, 0, 744, 0, 452,
	453, 455, 0, 745, 0, 454, 456, 457, 0, 458,
	0, 0, 0, 459, 460, 461, 462, 463, 464, 0,
	465, 467, 466, 0, 469, 746, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 475, 476, 477, 480, 0,
	0, 478, 479, 481, 482, 0, 483, 484, 486, 489,
	485, 487, 488, 490, 503, 504, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 506, 0,
	505, 0, 507, 508, 509, 510, 511, 518, 520, 521,
	516, 517, 519, 522, 523, 525, 513, 514, 515, 0,
	524, 512, 0, 0, 0, 526, 527, 528, 529, 0,
	747, 530, 748, 533, 534, 0, 0, 535, 0, 536,
	0, 0, 538, 539, 540, 0, 0, 541, 542, 749,
	0, 543, 0, 750, 544, 545, 537, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 0, 556, 557,
	751, 558, 559, 560, 752, 561, 562, 563, 753, 564,
	754, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 575, 576, 577, 755, 578, 579, 581,
	580, 582, 0, 583, 0, 584, 585, 586, 0, 0,
	0, 0, 0, 587, 588, 590, 0, 591, 592, 593,
	594, 589, 595, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 0, 606, 607, 608, 609, 610,
	756, 611, 0, 612, 613, 620, 621, 622, 614, 615,
	616, 623, 624, 625, 626, 627, 629, 628, 0, 631,
	632, 630, 633, 634, 635, 0, 636, 757, 637, 617,
	618, 638, 639, 0, 640, 641, 642, 643, 644, 645,
	646, 758, 0, 647, 0, 648, 649, 650, 651, 652,
	653, 655, 619, 656, 661, 662, 759, 657, 658, 659,
	660, 760, 664, 665, 666, 667, 0, 668, 669, 0,
	663, 654, 0, 670, 671, 672, 673, 674, 675, 0,
	676, 677, 0, 678, 761, 762, 763, 764, 0, 690,
	0, 679, 681, 682, 683, 684, 765, 685, 766, 0,
	686, 687, 688, 689, 680, 691, 692, 0, 0, 693,
	694, 696, 698, 699, 695, 697, 700, 0, 701, 0,
	0, 702, 703, 704, 767, 768, 769, 0, 706, 705,
	707, 708, 709, 770, 710, 711, 712, 302, 0, 0,
	0, 713, 714, 771, 715, 716, 717, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 0, 723, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 724, 725, 726,
	0, 339, 340, 727, 0, 0, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 0, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 736, 0, 737, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 0, 447, 448, 449, 0, 0, 741, 450, 532,
	451, 742, 743, 0, 744, 0, 452, 453, 455, 0,
	745, 0, 454, 456, 457, 0, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 746, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 0, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 0, 524, 512, 0,
	0, 0, 526, 527, 528, 529, 0, 747, 530, 748,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 0, 543, 0,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 0, 866, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 865, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 0, 636, 757, 637, 617, 618, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 863, 762, 763, 764, 0, 690, 0, 679, 681,
	682, 683, 684, 765, 685, 766, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 767, 768, 769, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 302, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	325, 326, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 0, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 411, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 0, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 3897, 739, 740, 531, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 0, 447,
	448, 449, 0, 0, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 0, 745, 0, 454,
	456, 457, 0, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 746,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 0, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 0, 524, 512, 0, 0, 0, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 0, 543, 0, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 0, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 0, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 767, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 302, 0, 0, 0, 713, 714, 771, 715, 716,
	717, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	0, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 371, 372, 0, 373, 375, 728,
	729, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 0,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 3869, 739,
	740, 531, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 0, 447, 448, 449, 0,
	0, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 0, 745, 0, 454, 456, 457, 0,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 0, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	0, 524, 512, 0, 0, 0, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 0, 543, 0, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 0, 606, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 669,
	0, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 302, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 3865, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 0, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 302, 0, 0, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 3816, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 0,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 0, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 302, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	0, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	0, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 3814,
	739, 740, 531, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 0, 447, 448, 449,
	0, 0, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 0, 745, 0, 454, 456, 457,
	0, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 0, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 0, 524, 512, 0, 0, 0, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 0, 543, 0, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 0, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 302,
	0, 0, 0, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 0, 0, 338, 724,
	725, 726, 0, 339, 340, 727, 0, 0, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 0, 365,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 731, 732, 408, 0, 0, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 0, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 736, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 3802, 739, 740, 531,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 0, 447, 448, 449, 0, 0, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 0, 745, 0, 454, 456, 457, 0, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 746, 468, 0, 470, 471, 0,
	0, 472, 473, 474, 475, 476, 477, 480, 0, 0,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	0, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 0, 524,
	512, 0, 0, 0, 526, 527, 528, 529, 0, 747,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 0,
	543, 0, 750, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 753, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 0, 606, 607, 608, 609, 610, 756,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 0, 636, 757, 637, 617, 618,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	760, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 765, 685, 766, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 0, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 302, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 0, 316, 317, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 0, 723, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 724, 725, 726, 0,
	339, 340, 727, 0, 0, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 371,
	372, 0, 373, 375, 728, 729, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 731, 732,
	408, 0, 0, 0, 0, 0, 0, 0, 409, 410,
	411, 733, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 0, 418, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 736, 0, 737, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 3799, 739, 740, 531, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	0, 447, 448, 449, 0, 0, 741, 450, 532, 451,
	742, 743, 0, 744, 0, 452, 453, 455, 0, 745,
	0, 454, 456, 457, 0, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 746, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 0, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 0, 524, 512, 0, 0,
	0, 526, 527, 528, 529, 0, 747, 530, 748, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 749, 0, 543, 0, 750,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 753, 564, 754, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	0, 606, 607, 608, 609, 610, 756, 611, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 631, 632, 630, 633, 634,
	635, 0, 636, 757, 637, 617, 618, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 760, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 0, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	761, 762, 763, 764, 0, 690, 0, 679, 681, 682,
	683, 684, 765, 685, 766, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	767, 768, 769, 0, 706, 705, 707, 708, 709, 770,
	710, 711, 712, 302, 0, 0, 0, 713, 714, 771,
	715, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 325,
	326, 327, 328, 719, 720, 0, 329, 721, 330, 722,
	0, 723, 331, 332, 333, 334, 335, 336, 337, 0,
	0, 0, 338, 724, 725, 726, 0, 339, 340, 727,
	0, 0, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 0, 365, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 371, 372, 0, 373,
	375, 728, 729, 0, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 730, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 731, 732, 408, 0, 0,
	0, 0, 0, 0, 0, 409, 410, 411, 733, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 0, 418, 419, 420, 734, 735, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 736, 0,
	737, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	3387, 739, 740, 531, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 0, 447, 448,
	449, 0, 0, 741, 450, 532, 451, 742, 743, 0,
	744, 0, 452, 453, 455, 0, 745, 0, 454, 456,
	457, 0, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 746, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 475, 476,
	477, 480, 0, 0, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 0, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 0, 524, 512, 0, 0, 0, 526, 527,
	528, 529, 0, 747, 530, 748, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 0, 543, 0, 750, 544, 545, 537,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 753, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 755,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 0, 606, 607,
	608, 609, 610, 756, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 0, 636,
	757, 637, 617, 618, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 758, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 759,
	657, 658, 659, 660, 760, 664, 665, 666, 667, 0,
	668, 669, 0, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 761, 762, 763,
	764, 0, 690, 0, 679, 681, 682, 683, 684, 765,
	685, 766, 0, 686, 687, 688, 689, 680, 691, 692,
	0, 0, 693, 694, 696, 698, 699, 695, 697, 700,
	0, 701, 0, 0, 702, 703, 704, 767, 768, 769,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	302, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	0, 0, 0, 0, 0, 0, 0, 308, 309, 311,
	310, 312, 313, 314, 315, 0, 316, 317, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 325, 326, 327, 328,
	719, 720, 0, 329, 721, 330, 722, 0, 723, 331,
	332, 333, 334, 335, 336, 337, 0, 0, 0, 338,
	724, 725, 726, 0, 339, 340, 727, 0, 0, 0,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	350, 351, 352, 349, 353, 0, 354, 0, 355, 356,
	357, 358, 359, 360, 361, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 371, 372, 0, 373, 375, 728, 729,
	0, 378, 380, 374, 376, 0, 379, 377, 381, 0,
	382, 383, 384, 0, 0, 385, 386, 387, 0, 388,
	389, 390, 0, 391, 392, 393, 0, 394, 395, 730,
	396, 397, 398, 400, 402, 399, 401, 403, 404, 405,
	406, 407, 731, 732, 408, 0, 0, 0, 0, 0,
	0, 0, 409, 410, 411, 733, 0, 0, 0, 412,
	0, 413, 414, 415, 0, 416, 417, 0, 0, 418,
	419, 420, 734, 735, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 0, 430, 736, 0, 737, 431, 0,
	432, 433, 434, 435, 436, 437, 438, 738, 739, 740,
	531, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	446, 0, 0, 0, 0, 447, 448, 449, 0, 0,
	741, 450, 532, 451, 742, 743, 0, 744, 0, 452,
	453, 455, 0, 745, 0, 454, 456, 457, 0, 458,
	0, 0, 0, 459, 460, 461, 462, 463, 464, 0,
	465, 467, 466, 0, 469, 746, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 475, 476, 477, 480, 0,
	0, 478, 479, 481, 482, 0, 483, 484, 486, 489,
	485, 487, 488, 490, 503, 504, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 506, 0,
	505, 0, 507, 508, 509, 510, 511, 518, 520, 521,
	516, 517, 519, 522, 523, 525, 513, 514, 515, 0,
	524, 512, 0, 0, 0, 526, 527, 528, 529, 0,
	747, 530, 748, 533, 534, 0, 0, 535, 0, 536,
	0, 0, 538, 539, 540, 0, 0, 541, 542, 749,
	0, 543, 0, 750, 544, 545, 537, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 0, 556, 557,
	751, 558, 559, 560, 752, 561, 562, 563, 753, 564,
	754, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 575, 576, 577, 755, 578, 579, 581,
	580, 582, 0, 583, 0, 584, 585, 586, 0, 0,
	0, 0, 0, 587, 588, 590, 0, 591, 592, 593,
	594, 589, 595, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 0, 606, 607, 608, 609, 610,
	756, 611, 0, 612, 613, 847, 621, 622, 614, 615,
	616, 623, 624, 625, 626, 627, 629, 628, 0, 631,
	632, 630, 633, 634, 635, 0, 636, 757, 637, 617,
	618, 638, 639, 0, 640, 641, 642, 643, 644, 645,
	646, 758, 0, 647, 0, 648, 649, 650, 651, 652,
	653, 655, 619, 656, 661, 662, 759, 657, 658, 659,
	660, 760, 664, 665, 666, 667, 0, 668, 669, 0,
	663, 654, 0, 670, 671, 672, 673, 674, 675, 0,
	676, 677, 0, 678, 761, 762, 763, 764, 0, 690,
	0, 679, 681, 682, 683, 684, 765, 685, 766, 0,
	686, 687, 688, 689, 680, 691, 692, 0, 0, 693,
	694, 696, 698, 699, 695, 697, 700, 0, 701, 0,
	0, 702, 703, 704, 767, 768, 769, 0, 706, 705,
	707, 708, 709, 770, 710, 711, 712, 302, 0, 0,
	0, 713, 714, 771, 715, 716, 717, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	718, 0, 2552, 0, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 0, 723, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 724, 725, 726,
	0, 339, 340, 727, 0, 0, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 0, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 736, 0, 737, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 0, 447, 448, 449, 0, 0, 741, 450, 532,
	451, 742, 743, 0, 744, 0, 452, 453, 455, 0,
	745, 0, 454, 456, 457, 0, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 746, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 0, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 0, 524, 512, 0,
	0, 0, 526, 527, 528, 529, 0, 747, 530, 748,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 0, 543, 0,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 0, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 0, 0, 757, 637, 617, 618, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 761, 762, 763, 764, 0, 690, 0, 679, 681,
	682, 683, 684, 765, 685, 766, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 767, 768, 769, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 302, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	325, 326, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 0, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 411, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 0, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 1429, 739, 740, 531, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 0, 447,
	448, 449, 0, 0, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 0, 745, 0, 454,
	456, 457, 0, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 746,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 0, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 0, 524, 512, 0, 0, 0, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 0, 543, 0, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 0, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 0, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 767, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 302, 0, 0, 0, 713, 714, 771, 715, 716,
	717, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	0, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 371, 372, 0, 373, 375, 728,
	729, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 0,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 738, 739,
	740, 531, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 0, 447, 448, 449, 0,
	0, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 0, 745, 0, 454, 456, 457, 0,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 0, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	0, 524, 512, 0, 0, 0, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 0, 543, 0, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	1354, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 0, 606, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 669,
	0, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 302, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 0, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 0, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 0, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 0, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 0,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 1767, 0, 1474, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 0,
	329, 0, 330, 0, 0, 0, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 0, 0, 0,
	0, 339, 340, 0, 0, 0, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 1476, 368, 369, 370,
	371, 372, 0, 373, 375, 0, 0, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 0, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 411, 0, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 0, 418, 419, 420, 0,
	0, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 1766, 0, 0, 531, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 0, 447, 448, 449, 0, 0, 0, 450, 532,
	451, 0, 0, 0, 0, 0, 452, 453, 455, 0,
	0, 0, 454, 456, 457, 0, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 0, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 0, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 0, 524, 512, 0,
	0, 0, 526, 527, 528, 529, 0, 0, 530, 0,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 0, 0, 543, 0,
	0, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 0, 558, 559,
	560, 0, 561, 562, 563, 0, 564, 0, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 0, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 0, 606, 607, 608, 609, 610, 0, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 1477, 636, 0, 637, 617, 618, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 0, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 0, 657, 658, 659, 660, 0, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 0, 0, 0, 0, 0, 690, 0, 679, 681,
	682, 683, 684, 0, 685, 0, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 0, 0, 0, 0, 706, 705, 707, 708, 709,
	0, 710, 711, 712, 1686, 0, 1474, 0, 713, 714,
	0, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 0, 316, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 325, 326, 327, 328, 0, 0, 0, 329,
	0, 330, 0, 0, 0, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 0, 0, 0, 0,
	339, 340, 0, 0, 0, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 1476, 368, 369, 370, 371,
	372, 0, 373, 375, 0, 0, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 0, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 409, 410,
	411, 0, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 0, 418, 419, 420, 0, 0,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 0, 0, 0, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 1685, 0, 0, 531, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	0, 447, 448, 449, 0, 0, 0, 450, 532, 451,
	0, 0, 0, 0, 0, 452, 453, 455, 0, 0,
	0, 454, 456, 457, 0, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 0, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 0, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 0, 524, 512, 0, 0,
	0, 526, 527, 528, 529, 0, 0, 530, 0, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 0, 0, 543, 0, 0,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 0, 558, 559, 560,
	0, 561, 562, 563, 0, 564, 0, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	0, 606, 607, 608, 609, 610, 0, 611, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 631, 632, 630, 633, 634,
	635, 1477, 636, 0, 637, 617, 618, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 0, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 0, 657, 658, 659, 660, 0, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 0, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	0, 0, 0, 0, 0, 690, 0, 679, 681, 682,
	683, 684, 0, 685, 0, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	0, 0, 0, 0, 706, 705, 707, 708, 709, 0,
	710, 711, 712, 1472, 0, 1474, 0, 713, 714, 0,
	715, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 0, 0, 0, 329, 0,
	330, 0, 0, 0, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 0, 0, 0, 0, 339,
	340, 0, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 1476, 368, 369, 370, 371, 372,
	0, 373, 375, 0, 0, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 0, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 411,
	0, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 0, 0, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1471, 0, 0, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 0,
	447, 448, 449, 0, 0, 0, 450, 532, 451, 0,
	0, 0, 0, 0, 452, 453, 455, 0, 0, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	0, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 0, 0,
	526, 527, 528, 529, 0, 0, 530, 0, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 0, 0, 543, 0, 0, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 0, 558, 559, 560, 0,
	561, 562, 563, 0, 564, 0, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 0, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 0, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1477, 636, 0, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 0, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 0, 657, 658, 659, 660, 0, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 0,
	0, 0, 0, 0, 690, 0, 679, 681, 682, 683,
	684, 0, 685, 0, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 0,
	0, 0, 0, 706, 705, 707, 708, 709, 0, 710,
	711, 712, 2298, 0, 1474, 0, 713, 714, 0, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	325, 326, 327, 328, 0, 0, 0, 329, 0, 330,
	0, 0, 0, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 0, 0, 0, 0, 339, 340,
	0, 0, 0, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 1476, 368, 369, 370, 371, 372, 0,
	373, 375, 0, 0, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 0, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 411, 0,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 0, 418, 419, 420, 0, 0, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 0,
	0, 0, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 0, 0, 0, 531, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 0, 447,
	448, 449, 0, 0, 0, 450, 532, 451, 0, 0,
	0, 0, 0, 452, 453, 455, 0, 0, 0, 454,
	456, 457, 0, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 0,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 0, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 0, 524, 512, 0, 0, 0, 526,
	527, 528, 529, 0, 0, 530, 0, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 0, 0, 543, 0, 0, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 0, 558, 559, 560, 0, 561,
	562, 563, 0, 564, 0, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 0, 606,
	607, 608, 609, 610, 0, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 0, 631, 632, 630, 633, 634, 635, 1477,
	636, 0, 637, 617, 618, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 0, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	0, 657, 658, 659, 660, 0, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 0, 0,
	0, 0, 0, 690, 0, 679, 681, 682, 683, 684,
	0, 685, 0, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 0, 0,
	0, 0, 706, 705, 707, 708, 709, 0, 710, 711,
	712, 2263, 0, 1474, 0, 713, 714, 0, 715, 716,
	717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 0, 329, 0, 330, 0,
	0, 0, 331, 332, 333, 334, 335, 336, 337, 0,
	0, 0, 338, 0, 0, 0, 0, 339, 340, 0,
	0, 0, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 0, 365, 366, 367, 0, 0, 0, 0,
	0, 0, 1476, 368, 369, 370, 371, 372, 0, 373,
	375, 0, 0, 0, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 0, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 409, 410, 411, 0, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 0, 418, 419, 420, 0, 0, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 0, 0,
	0, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	0, 0, 0, 531, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 0, 447, 448,
	449, 0, 0, 0, 450, 532, 451, 0, 0, 0,
	0, 0, 452, 453, 455, 0, 0, 0, 454, 456,
	457, 0, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 0, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 475, 476,
	477, 480, 0, 0, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 0, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 0, 524, 512, 0, 0, 0, 526, 527,
	528, 529, 0, 0, 530, 0, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 0, 0, 543, 0, 0, 544, 545, 537,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 0, 558, 559, 560, 0, 561, 562,
	563, 0, 564, 0, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 0, 606, 607,
	608, 609, 610, 0, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 1477, 636,
	0, 637, 617, 618, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 0, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 0,
	657, 658, 659, 660, 0, 664, 665, 666, 667, 0,
	668, 669, 0, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 0, 0, 0,
	0, 0, 690, 0, 679, 681, 682, 683, 684, 0,
	685, 0, 0, 686, 687, 688, 689, 680, 691, 692,
	0, 0, 693, 694, 696, 698, 699, 695, 697, 700,
	0, 701, 0, 0, 702, 703, 704, 0, 0, 0,
	0, 706, 705, 707, 708, 709, 1474, 710, 711, 712,
	0, 0, 0, 0, 713, 714, 0, 715, 716, 717,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 0, 316, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 325, 326, 327, 328, 0, 0, 0, 329,
	0, 330, 0, 0, 0, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 0, 0, 0, 0,
	339, 340, 0, 0, 0, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 1476, 368, 369, 370, 371,
	372, 0, 373, 375, 0, 0, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 0, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 409, 410,
	411, 0, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 0, 418, 419, 420, 0, 0,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 0, 0, 0, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 0, 0, 0, 531, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	0, 447, 448, 449, 0, 0, 0, 450, 532, 451,
	0, 0, 0, 0, 0, 452, 453, 455, 0, 0,
	0, 454, 456, 457, 0, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 0, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 0, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 0, 524, 512, 0, 0,
	0, 526, 527, 528, 529, 0, 0, 530, 0, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 0, 0, 543, 0, 0,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 0, 558, 559, 560,
	0, 561, 562, 563, 0, 564, 0, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	0, 606, 607, 608, 609, 610, 0, 611, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 631, 632, 630, 633, 634,
	635, 1477, 636, 0, 637, 617, 618, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 0, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 0, 657, 658, 659, 660, 0, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 0, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	0, 0, 0, 0, 0, 690, 0, 679, 681, 682,
	683, 684, 0, 685, 0, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	0, 0, 0, 0, 706, 705, 707, 708, 709, 0,
	710, 711, 712, 0, 0, 0, 0, 713, 714, 0,
	715, 716, 717, 1988, 1989, 0, 2021, 2022, 2023, 2032,
	2033, 2034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2025, 2019, 0, 0,
	0, 0, 0, 0, 0, 1991, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 1988, 1989, 0,
	2021, 2022, 2023, 2032, 2033, 2034, 0, 0, 0, 0,
	0, 0, 0, 0, 2044, 0, 0, 0, 0, 0,
	2025, 2019, 0, 1990, 0, 0, 0, 0, 0, 1991,
	0, 0, 0, 0, 2010, 0, 0, 0, 0, 0,
	2038, 1988, 1989, 2007, 2021, 2022, 2023, 2032, 2033, 2034,
	0, 0, 0, 0, 0, 0, 0, 0, 2044, 0,
	0, 0, 0, 0, 2025, 2019, 0, 1990, 0, 0,
	0, 0, 0, 1991, 0, 0, 0, 0, 2010, 0,
	0, 0, 0, 0, 2038, 0, 0, 2007, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2044, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2010, 0, 2013, 2014, 2015, 2016, 0, 0,
	0, 2007, 0, 0, 1996, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2013, 2014,
	2015, 2016, 0, 0, 0, 0, 0, 2029, 1996, 0,
	0, 2039, 0, 0, 0, 0, 0, 0, 2018, 2020,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2035, 0,
	2036, 0, 2013, 2014, 2015, 2016, 0, 2005, 2006, 0,
	0, 2029, 1996, 0, 0, 2039, 0, 0, 0, 0,
	0, 0, 2018, 2020, 0, 0, 2027, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2011, 2035, 0, 2036, 0, 0, 0, 0, 0,
	0, 2005, 2006, 0, 0, 2029, 0, 1988, 1989, 2039,
	2021, 2022, 2023, 2032, 2033, 2034, 2018, 2020, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2019, 0, 0, 0, 2011, 2035, 0, 2036, 1991,
	2037, 0, 0, 0, 0, 2005, 2006, 0, 0, 0,
	2038, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2026, 0, 0, 2027, 0, 0, 0, 2044, 0,
	0, 0, 2041, 0, 0, 0, 0, 1990, 0, 2011,
	0, 0, 0, 0, 2037, 0, 0, 0, 2010, 0,
	0, 0, 0, 0, 0, 0, 0, 2007, 0, 0,
	0, 0, 0, 0, 0, 2026, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2037, 0,
	0, 0, 2017, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2026,
	0, 0, 0, 0, 0, 0, 0, 0, 2012, 0,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2017, 0, 2013, 2014,
	2015, 2016, 0, 0, 0, 0, 0, 0, 1996, 2030,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2012, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2017, 0, 0, 0, 0, 2043, 0, 0, 0, 0,
	0, 2029, 0, 2030, 0, 2039, 0, 0, 0, 0,
	0, 0, 2018, 2020, 0, 0, 2012, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2035, 0, 2036, 0, 0, 0, 0, 2043,
	0, 2005, 2006, 0, 0, 0, 0, 2030, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2028, 0, 2011, 0, 0, 0, 0,
	0, 0, 0, 2043, 0, 2002, 2003, 2009, 2031, 2008,
	2004, 0, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997,
	1998, 0, 0, 0, 0, 0, 5193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2028, 0, 0,
	0, 0, 0, 0, 2037, 0, 0, 0, 0, 2002,
	2003, 2009, 2031, 2008, 2004, 0, 2001, 1999, 2000, 1992,
	1993, 1994, 1995, 1997, 1998, 2026, 0, 0, 0, 0,
	5189, 0, 0, 0, 0, 0, 2041, 0, 0, 0,
	0, 2028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2002, 2003, 2009, 2031, 2008, 2004, 0,
	2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 0,
	0, 0, 0, 0, 5089, 1988, 1989, 0, 2021, 2022,
	2023, 2032, 2033, 2034, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2017, 0, 2025, 2019,
	0, 0, 0, 0, 0, 0, 0, 1991, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 0,
	0, 0, 2012, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2044, 0, 0, 0,
	0, 0, 0, 1988, 1989, 1990, 2021, 2022, 2023, 2032,
	2033, 2034, 0, 2030, 0, 0, 2010, 0, 0, 0,
	0, 0, 0, 0, 0, 2007, 2025, 2019, 0, 0,
	0, 0, 0, 0, 0, 1991, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 0, 0, 2043,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2044, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2010, 0, 0, 0, 0, 0,
	0, 0, 0, 2007, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2013, 2014, 2015, 2016,
	0, 0, 0, 0, 0, 0, 1996, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2028, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2002,
	2003, 2009, 2031, 2008, 2004, 0, 2001, 1999, 2000, 1992,
	1993, 1994, 1995, 1997, 1998, 0, 0, 0, 0, 2029,
	5038, 0, 0, 2039, 0, 0, 0, 0, 0, 0,
	2018, 2020, 0, 0, 2013, 2014, 2015, 2016, 0, 0,
	0, 0, 0, 0, 1996, 0, 0, 0, 0, 0,
	2035, 0, 2036, 0, 0, 0, 0, 0, 0, 2005,
	2006, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2027, 0,
	0, 0, 0, 0, 0, 0, 0, 2029, 0, 0,
	0, 2039, 0, 2011, 0, 0, 0, 0, 2018, 2020,
	0, 1988, 1989, 0, 2021, 2022, 2023, 2032, 2033, 2034,
	0, 0, 0, 0, 0, 0, 0, 0, 2035, 0,
	2036, 0, 0, 0, 2025, 2019, 0, 2005, 2006, 0,
	0, 0, 0, 1991, 0, 0, 0, 0, 0, 0,
	0, 0, 2037, 0, 2038, 0, 2027, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2011, 2044, 2026, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 2041, 0, 0, 0, 0, 0,
	1988, 1989, 2010, 2021, 2022, 2023, 2032, 2033, 2034, 0,
	0, 2007, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2025, 2019, 0, 0, 0, 0, 0,
	2037, 0, 1991, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 0, 0, 0, 0, 0, 0,
	0, 2026, 0, 0, 2017, 0, 0, 0, 0, 0,
	0, 2044, 2041, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2012, 2010, 0, 0, 0, 0, 0, 0, 0, 0,
	2007, 0, 2013, 2014, 2015, 2016, 0, 0, 0, 0,
	0, 0, 1996, 0, 0, 0, 0, 0, 0, 0,
	0, 2030, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2017, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2029, 0, 2043, 2012, 2039,
	0, 0, 0, 0, 0, 0, 2018, 2020, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2013, 2014, 2015, 2016, 0, 2035, 0, 2036, 2030,
	0, 1996, 0, 0, 0, 2005, 2006, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2043, 0, 0, 0, 2011,
	0, 0, 0, 0, 2029, 2028, 0, 0, 2039, 0,
	0, 0, 0, 0, 0, 2018, 2020, 2002, 2003, 2009,
	2031, 2008, 2004, 0, 2001, 1999, 2000, 1992, 1993, 1994,
	1995, 1997, 1998, 0, 0, 2035, 0, 2036, 5037, 0,
	0, 0, 0, 0, 2005, 2006, 0, 0, 2037, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2027, 0, 0, 0, 0, 0, 2026,
	0, 0, 0, 2028, 0, 0, 0, 0, 2011, 0,
	2041, 0, 0, 0, 0, 2002, 2003, 2009, 2031, 2008,
	2004, 0, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997,
	1998, 0, 0, 0, 0, 0, 4835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2037, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2017, 0, 0, 0, 0, 0, 0, 0, 2026, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2041,
	0, 0, 0, 0, 0, 0, 2012, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2030, 1988, 1989,
	0, 2021, 2022, 2023, 2032, 2033, 2034, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2017,
	0, 2025, 2019, 0, 0, 0, 0, 0, 0, 0,
	1991, 0, 0, 2043, 0, 0, 0, 0, 0, 0,
	0, 2038, 0, 0, 0, 2012, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2044,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 0, 0, 0, 0, 2030, 0, 0, 2010,
	0, 0, 0, 0, 0, 0, 1988, 1989, 2007, 2021,
	2022, 2023, 2032, 2033, 2034, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2025,
	2019, 2028, 2043, 0, 0, 0, 0, 0, 1991, 0,
	0, 0, 0, 2002, 2003, 2009, 2031, 2008, 2004, 2038,
	2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 0,
	0, 0, 0, 0, 4652, 0, 0, 2044, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2010, 0, 2013,
	2014, 2015, 2016, 0, 0, 0, 2007, 0, 0, 1996,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2028, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2002, 2003, 2009, 2031, 2008, 2004, 0, 2001,
	1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 0, 0,
	0, 0, 2029, 4555, 0, 0, 2039, 0, 0, 0,
	0, 0, 0, 2018, 2020, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2035, 0, 2036, 0, 2013, 2014, 2015,
	2016, 0, 2005, 2006, 0, 0, 0, 1996, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2011, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2029, 0, 1988, 1989, 2039, 2021, 2022, 2023, 2032, 2033,
	2034, 2018, 2020, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2025, 2019, 0, 0, 0,
	0, 2035, 0, 2036, 1991, 2037, 0, 0, 0, 0,
	2005, 2006, 0, 0, 0, 2038, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2026, 0, 0, 2027,
	0, 0, 0, 2044, 0, 0, 0, 2041, 0, 0,
	0, 0, 1990, 0, 2011, 0, 0, 0, 0, 0,
	0, 0, 0, 2010, 0, 0, 0, 0, 0, 0,
	0, 0, 2007, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2037, 0, 0, 0, 2017, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2026, 0, 0, 0, 0, 0,
	0, 0, 0, 2012, 0, 2041, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2013, 2014, 2015, 2016, 0, 0, 0,
	0, 0, 0, 1996, 2030, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1988, 1989, 0, 2021, 2022, 2023, 2032, 2033, 2034,
	0, 0, 0, 0, 0, 2017, 0, 0, 0, 0,
	2043, 0, 0, 0, 2025, 2019, 2029, 0, 0, 0,
	2039, 0, 0, 1991, 0, 0, 0, 2018, 2020, 0,
	0, 2012, 0, 0, 2038, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2035, 0, 2036,
	0, 0, 2044, 0, 0, 0, 2005, 2006, 0, 0,
	0, 1990, 2030, 1988, 1989, 0, 2021, 2022, 2023, 2032,
	2033, 2034, 2010, 0, 0, 2027, 0, 0, 0, 0,
	0, 2007, 0, 0, 0, 0, 2025, 2019, 2028, 0,
	2011, 0, 0, 0, 0, 1991, 0, 0, 2043, 0,
	2002, 2003, 2009, 2031, 2008, 2004, 2038, 2001, 1999, 2000,
	1992, 1993, 1994, 1995, 1997, 1998, 0, 0, 0, 0,
	0, 4554, 0, 0, 2044, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 0, 0, 2037,
	0, 0, 0, 0, 2010, 0, 0, 0, 0, 0,
	0, 0, 0, 2007, 0, 0, 0, 0, 0, 0,
	2026, 0, 2013, 2014, 2015, 2016, 0, 0, 0, 0,
	0, 2041, 1996, 0, 0, 0, 2028, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2002, 2003,
	2009, 2031, 2008, 2004, 0, 2001, 1999, 2000, 1992, 1993,
	1994, 1995, 1997, 1998, 0, 0, 0, 0, 0, 4553,
	0, 0, 0, 0, 0, 2029, 0, 0, 0, 2039,
	0, 0, 0, 0, 0, 0, 2018, 2020, 0, 0,
	0, 2017, 0, 0, 2013, 2014, 2015, 2016, 0, 0,
	0, 0, 0, 0, 1996, 0, 2035, 0, 2036, 0,
	0, 0, 0, 0, 0, 2005, 2006, 2012, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1988, 1989, 2027, 2021, 2022, 2023, 2032, 2033,
	2034, 0, 0, 0, 0, 0, 0, 2029, 2030, 2011,
	0, 2039, 0, 0, 0, 2025, 2019, 0, 2018, 2020,
	0, 0, 0, 0, 1991, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2038, 0, 0, 2035, 0,
	2036, 0, 0, 0, 2043, 0, 0, 2005, 2006, 0,
	0, 0, 0, 2044, 0, 0, 0, 0, 2037, 0,
	0, 0, 1990, 0, 0, 0, 2027, 0, 0, 0,
	0, 0, 0, 2010, 0, 0, 0, 0, 0, 2026,
	0, 2011, 2007, 0, 0, 0, 0, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	2037, 0, 0, 0, 2002, 2003, 2009, 2031, 2008, 2004,
	0, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998,
	2017, 2026, 0, 0, 0, 4154, 0, 0, 0, 0,
	0, 0, 2041, 2013, 2014, 2015, 2016, 0, 0, 0,
	0, 0, 0, 1996, 0, 0, 2012, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2030, 0, 0,
	0, 0, 0, 0, 0, 0, 2029, 0, 0, 0,
	2039, 0, 2017, 0, 0, 0, 0, 2018, 2020, 0,
	1988, 1989, 0, 2021, 2022, 2023, 2032, 2033, 2034, 0,
	0, 0, 0, 2043, 0, 0, 0, 2035, 2012, 2036,
	0, 0, 0, 2025, 2019, 0, 2005, 2006, 0, 0,
	0, 0, 1991, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 0, 2027, 0, 0, 0, 2030,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2011, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2010, 0, 0, 0, 2043, 0, 0, 0, 0,
	2007, 2028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2002, 2003, 2009, 2031, 2008, 2004, 2037,
	2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 0,
	0, 0, 0, 0, 3594, 0, 0, 0, 0, 0,
	2026, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2041, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2028, 0, 0, 0, 0, 0, 0,
	0, 2013, 2014, 2015, 2016, 2002, 2003, 2009, 2031, 2008,
	2004, 1996, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997,
	1998, 0, 0, 0, 0, 0, 3593, 0, 0, 0,
	0, 2017, 0, 0, 0, 0, 0, 0, 0, 1988,
	1989, 0, 2021, 2022, 2023, 2032, 2033, 2034, 0, 0,
	0, 0, 0, 0, 2029, 0, 0, 2012, 2039, 0,
	0, 0, 2025, 2019, 0, 2018, 2020, 0, 0, 0,
	0, 1991, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 0, 0, 2035, 0, 2036, 2030, 0,
	0, 0, 0, 0, 2005, 2006, 0, 0, 0, 0,
	2044, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 1988, 1989, 2027, 2021, 2022, 2023, 2032, 2033, 2034,
	2010, 0, 0, 0, 2043, 2447, 0, 0, 2011, 2007,
	0, 0, 0, 0, 2025, 2019, 0, 0, 0, 0,
	0, 0, 0, 1991, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2038, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2044, 0, 0, 0, 0, 2037, 0, 0,
	0, 1990, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2010, 0, 0, 0, 0, 0, 2026, 0,
	0, 2007, 2028, 0, 0, 0, 0, 0, 0, 2041,
	2013, 2014, 2015, 2016, 2002, 2003, 2009, 2031, 2008, 2004,
	1996, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998,
	0, 0, 0, 0, 0, 3592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2029, 0, 0, 0, 2039, 0, 2017,
	0, 0, 0, 0, 2018, 2020, 0, 0, 0, 0,
	0, 0, 2013, 2014, 2015, 2016, 0, 0, 0, 0,
	0, 0, 1996, 0, 2035, 2012, 2036, 0, 0, 0,
	0, 0, 0, 2005, 2006, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2027, 0, 0, 0, 2030, 0, 0, 0,
	0, 0, 0, 0, 0, 2029, 0, 2011, 0, 2039,
	0, 0, 0, 0, 0, 0, 2018, 2020, 0, 1988,
	1989, 0, 2021, 2022, 2023, 2032, 2033, 2034, 0, 0,
	0, 0, 2043, 0, 0, 0, 2035, 0, 2036, 0,
	0, 0, 2025, 2019, 0, 2005, 2006, 0, 0, 0,
	0, 1991, 0, 0, 0, 0, 2037, 0, 0, 0,
	0, 0, 2038, 0, 2027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2026, 0, 2011,
	2044, 0, 0, 0, 0, 0, 0, 0, 2041, 1990,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2010, 0, 0, 0, 2377, 0, 0, 0, 0, 2007,
	2028, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2002, 2003, 2009, 2031, 2008, 2004, 2037, 2001,
	1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 0, 0,
	0, 0, 0, 3591, 0, 0, 0, 0, 2017, 2026,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2012, 0, 0, 0, 2375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2013, 2014, 2015, 2016, 0, 0, 0, 0, 0, 0,
	1996, 0, 0, 0, 0, 2030, 0, 0, 1988, 1989,
	0, 2021, 2022, 2023, 2032, 2033, 2034, 0, 0, 0,
	2017, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2025, 2019, 0, 0, 0, 0, 0, 0, 0,
	1991, 2043, 0, 2029, 0, 0, 2012, 2039, 0, 0,
	0, 2038, 0, 0, 2018, 2020, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2044,
	2449, 0, 0, 0, 2035, 0, 2036, 2030, 1990, 0,
	0, 0, 0, 2005, 2006, 0, 0, 0, 0, 2010,
	0, 0, 0, 0, 0, 0, 0, 0, 2007, 0,
	0, 0, 2027, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2043, 0, 0, 0, 2011, 0, 2028,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2002, 2003, 2009, 2031, 2008, 2004, 0, 2001, 1999,
	2000, 1992, 1993, 1994, 1995, 1997, 1998, 0, 0, 0,
	3556, 0, 0, 0, 0, 0, 0, 0, 2450, 0,
	0, 0, 0, 0, 0, 0, 2037, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2013,
	2014, 2015, 2016, 0, 0, 0, 0, 2026, 0, 1996,
	5380, 2028, 0, 0, 0, 0, 0, 0, 2041, 0,
	0, 0, 0, 2002, 2003, 2009, 2031, 2008, 2004, 0,
	2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2029, 0, 0, 0, 2039, 0, 0, 0,
	0, 0, 0, 2018, 2020, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2376, 2017, 0,
	0, 0, 0, 2035, 0, 2036, 0, 0, 0, 0,
	0, 0, 2005, 2006, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2012, 0, 0, 0, 0, 1988,
	1989, 2027, 2021, 2022, 2023, 2032, 2033, 2034, 0, 0,
	0, 0, 0, 0, 0, 0, 2011, 0, 0, 0,
	0, 0, 2025, 2019, 0, 2030, 0, 0, 0, 0,
	0, 1991, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2044, 2043, 0, 0, 0, 2037, 0, 0, 0, 1990,
	0, 0, 2374, 0, 0, 0, 0, 0, 0, 0,
	2010, 0, 0, 0, 0, 0, 2026, 0, 0, 2007,
	0, 0, 0, 0, 0, 0, 0, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2028,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2002, 2003, 2009, 2031, 2008, 2004, 2017, 2001, 1999,
	2000, 1992, 1993, 1994, 1995, 1997, 1998, 0, 0, 0,
	2013, 2014, 2015, 2016, 0, 0, 0, 0, 0, 0,
	1996, 0, 3656, 2012, 0, 0, 0, 0, 0, 3655,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2030, 0, 0, 0, 0, 0,
	0, 0, 0, 2029, 0, 0, 0, 2039, 0, 0,
	0, 0, 0, 0, 2018, 2020, 0, 1988, 1989, 0,
	2021, 2022, 2023, 2032, 2033, 2034, 0, 0, 0, 0,
	2043, 0, 0, 0, 2035, 0, 2036, 0, 0, 0,
	2025, 2019, 0, 2005, 2006, 0, 3526, 0, 0, 1991,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2038, 0, 2027, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2011, 2044, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2010, 0,
	0, 0, 0, 0, 0, 0, 0, 2007, 2028, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2002, 2003, 2009, 2031, 2008, 2004, 2037, 2001, 1999, 2000,
	1992, 1993, 1994, 1995, 1997, 1998, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2026, 0, 3527,
	0, 0, 0, 0, 0, 0, 0, 0, 2041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2013, 2014,
	2015, 2016, 0, 0, 0, 0, 1988, 1989, 1996, 2021,
	2022, 2023, 2032, 2033, 2034, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2017, 2025,
	2019, 0, 0, 0, 0, 0, 0, 0, 1991, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2038,
	0, 2029, 0, 0, 2012, 2039, 0, 0, 0, 0,
	0, 0, 2018, 2020, 0, 0, 0, 2044, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 0, 2035, 0, 2036, 2030, 0, 2010, 0, 0,
	0, 2005, 2006, 0, 0, 0, 2007, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2043, 0, 0, 0, 2011, 0, 1988, 1989, 0,
	2021, 2022, 2023, 2032, 2033, 2034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2019, 0, 0, 0, 0, 0, 0, 0, 1991,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2038, 0, 0, 0, 2037, 0, 0, 2013, 2014, 2015,
	2016, 0, 0, 0, 0, 0, 0, 1996, 2044, 4937,
	0, 0, 0, 0, 0, 2026, 0, 1990, 0, 2028,
	0, 0, 0, 0, 0, 0, 2041, 0, 2010, 0,
	0, 2002, 2003, 2009, 2031, 2008, 2004, 2007, 2001, 1999,
	2000, 1992, 1993, 1994, 1995, 1997, 1998, 0, 0, 0,
	2029, 0, 0, 0, 2039, 0, 0, 0, 0, 0,
	0, 2018, 2020, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2035, 0, 2036, 0, 0, 2017, 0, 0, 0,
	2005, 2006, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2027,
	0, 0, 2012, 0, 0, 0, 0, 0, 2013, 2014,
	2015, 2016, 0, 0, 2011, 0, 1988, 1989, 1996, 2021,
	2022, 2023, 2032, 2033, 2034, 0, 0, 0, 0, 0,
	0, 0, 0, 2030, 0, 0, 0, 0, 0, 2025,
	2019, 0, 0, 0, 0, 0, 0, 0, 1991, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2038,
	0, 2029, 0, 2037, 0, 2039, 0, 0, 0, 2043,
	0, 0, 2018, 2020, 0, 0, 0, 2044, 0, 0,
	0, 0, 0, 0, 2026, 0, 1990, 0, 0, 0,
	0, 0, 2035, 0, 2036, 2041, 0, 2010, 0, 0,
	0, 2005, 2006, 0, 0, 0, 2007, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2011, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2028, 0, 0,
	0, 0, 0, 0, 0, 2017, 0, 0, 0, 2002,
	2003, 2009, 2031, 2008, 2004, 0, 2001, 1999, 2000, 1992,
	1993, 1994, 1995, 1997, 1998, 0, 0, 0, 0, 0,
	0, 2012, 0, 0, 2037, 0, 0, 2013, 2014, 2015,
	2016, 0, 0, 0, 0, 0, 0, 1996, 0, 0,
	0, 0, 0, 0, 0, 2026, 1205, 0, 0, 0,
	0, 0, 2030, 0, 0, 0, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2029, 0, 0, 0, 2039, 0, 0, 0, 2043, 0,
	0, 2018, 2020, 0, 1988, 1989, 0, 2021, 2022, 2023,
	2032, 2033, 2034, 0, 0, 0, 0, 0, 0, 0,
	0, 2035, 0, 2036, 0, 0, 2017, 2025, 2019, 0,
	2005, 2006, 0, 0, 0, 0, 1991, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2038, 0, 2027,
	0, 0, 2012, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2011, 2044, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 2028, 0, 0, 0,
	0, 0, 0, 2030, 0, 2010, 0, 0, 2002, 2003,
	2009, 2031, 2008, 2004, 2007, 2001, 1999, 2000, 1992, 1993,
	1994, 1995, 1997, 1998, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2037, 0, 0, 0, 0, 0, 2043,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2026, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2041, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2013, 2014, 2015, 2016, 0,
	0, 0, 0, 1988, 1989, 1996, 2021, 2022, 2023, 2032,
	2033, 2034, 0, 0, 0, 0, 0, 2028, 0, 0,
	0, 0, 0, 0, 0, 2017, 2025, 2019, 0, 2002,
	2003, 2009, 2031, 2008, 2004, 1991, 2001, 1999, 2000, 1992,
	1993, 1994, 1995, 1997, 1998, 0, 2038, 0, 2029, 0,
	0, 2012, 2039, 0, 0, 0, 0, 0, 0, 2018,
	2020, 0, 0, 0, 2044, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 0, 0, 2035,
	0, 2036, 2030, 0, 2010, 0, 0, 0, 2005, 2006,
	0, 0, 0, 2007, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2043, 0,
	0, 0, 2011, 0, 1988, 1989, 0, 2021, 2022, 2023,
	2032, 2033, 2034, 0, 0, 0, 0, 4700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2025, 2019, 0,
	0, 0, 0, 0, 0, 0, 1991, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2038, 0, 0,
	0, 2037, 0, 0, 2013, 2014, 2015, 2016, 0, 0,
	0, 0, 0, 0, 1996, 2044, 4361, 0, 0, 0,
	0, 0, 2026, 0, 1990, 0, 2028, 0, 0, 0,
	0, 0, 0, 2041, 0, 2010, 0, 0, 2002, 2003,
	2009, 2031, 2008, 2004, 2007, 2001, 1999, 2000, 1992, 1993,
	1994, 1995, 1997, 1998, 0, 0, 0, 2029, 0, 0,
	0, 2039, 0, 0, 0, 0, 0, 0, 2018, 2020,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2035, 0,
	2036, 0, 0, 2017, 0, 0, 0, 2005, 2006, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2027, 0, 0, 2012,
	0, 0, 0, 0, 0, 2013, 2014, 2015, 2016, 0,
	0, 2011, 0, 1988, 1989, 1996, 2021, 2022, 2023, 2032,
	2033, 2034, 0, 0, 0, 0, 0, 0, 0, 0,
	2030, 0, 0, 0, 0, 0, 2025, 2019, 0, 0,
	0, 0, 0, 0, 0, 1991, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 0, 2029, 0,
	2037, 0, 2039, 0, 0, 0, 2043, 0, 0, 2018,
	2020, 0, 0, 0, 2044, 0, 0, 0, 0, 0,
	0, 2026, 0, 1990, 0, 4362, 0, 0, 0, 2035,
	0, 2036, 2041, 0, 2010, 0, 0, 0, 2005, 2006,
	0, 0, 0, 2007, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2011, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2028, 0, 0, 0, 0, 0,
	0, 0, 2017, 0, 0, 0, 2002, 2003, 2009, 2031,
	2008, 2004, 0, 2001, 1999, 2000, 1992, 1993, 1994, 1995,
	1997, 1998, 0, 0, 0, 0, 0, 0, 2012, 0,
	0, 2037, 0, 0, 2013, 2014, 2015, 2016, 0, 0,
	0, 0, 0, 0, 1996, 0, 0, 0, 0, 0,
	0, 0, 2026, 3662, 0, 0, 0, 0, 0, 2030,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2029, 0, 0,
	0, 2039, 0, 0, 0, 2043, 0, 0, 2018, 2020,
	0, 1988, 1989, 0, 2021, 2022, 2023, 2032, 2033, 2034,
	0, 0, 0, 0, 0, 0, 0, 0, 2035, 0,
	2036, 0, 0, 2017, 2025, 2019, 0, 2005, 2006, 3657,
	0, 0, 0, 1991, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2038, 0, 2027, 0, 0, 2012,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2011, 2044, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 2028, 0, 0, 0, 0, 0, 0,
	2030, 0, 2010, 0, 0, 2002, 2003, 2009, 2031, 2008,
	2004, 2007, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997,
	1998, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2037, 0, 0, 0, 0, 0, 2043, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4135,
	0, 2026, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2041, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2013, 2014, 2015, 2016, 0, 0, 0, 0,
	1988, 1989, 1996, 2021, 2022, 2023, 2032, 2033, 2034, 0,
	0, 0, 0, 0, 2028, 0, 0, 0, 0, 0,
	0, 0, 2017, 2025, 2019, 0, 2002, 2003, 2009, 2031,
	2008, 2004, 1991, 2001, 1999, 2000, 1992, 1993, 1994, 1995,
	1997, 1998, 0, 2038, 0, 2029, 0, 0, 2012, 2039,
	0, 0, 0, 0, 0, 0, 2018, 2020, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 0, 2035, 0, 2036, 2030,
	0, 2010, 0, 0, 0, 2005, 2006, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2043, 0, 0, 0, 2011,
	0, 1988, 1989, 0, 2021, 2022, 2023, 2032, 2033, 2034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2025, 2019, 0, 0, 0, 3595,
	0, 0, 0, 1991, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2038, 0, 0, 0, 2037, 0,
	0, 2013, 2014, 2015, 2016, 0, 0, 0, 0, 0,
	0, 1996, 2044, 0, 0, 0, 0, 0, 0, 2026,
	0, 1990, 0, 2028, 0, 0, 0, 0, 0, 0,
	2041, 0, 2010, 0, 0, 2002, 2003, 2009, 2031, 2008,
	2004, 2007, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997,
	1998, 0, 0, 0, 2029, 0, 0, 0, 2039, 0,
	0, 0, 0, 0, 0, 2018, 2020, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2035, 0, 2036, 0, 0,
	2017, 0, 0, 0, 2005, 2006, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2027, 0, 0, 2012, 0, 0, 0,
	0, 0, 2013, 2014, 2015, 2016, 0, 0, 2011, 0,
	0, 0, 1996, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2030, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2029, 0, 2037, 0, 2039,
	0, 0, 0, 2043, 0, 0, 2018, 2020, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2026, 0,
	0, 0, 0, 0, 0, 0, 2035, 0, 2036, 2041,
	0, 0, 0, 0, 0, 2005, 2006, 0, 0, 0,
	3622, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2011,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2028, 0, 0, 0, 0, 0, 0, 0, 2017,
	0, 0, 0, 2002, 2003, 2009, 2031, 2008, 2004, 0,
	2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 0,
	0, 0, 0, 0, 0, 2012, 0, 0, 2037, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2026,
	0, 0, 0, 0, 0, 0, 2030, 0, 0, 0,
	2041, 0, 0, 0, 1988, 1989, 0, 2021, 2022, 2023,
	2032, 2033, 2034, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2025, 2019, 0,
	0, 0, 2043, 0, 0, 0, 1991, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2038, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2017, 0, 0, 0, 0, 2044, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2010, 2012, 0, 0, 0,
	0, 0, 0, 0, 2007, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2028, 0, 0, 0, 0, 0, 0, 2030, 0, 0,
	0, 0, 2002, 2003, 2009, 2031, 2008, 2004, 0, 2001,
	1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2043, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2013, 2014, 2015, 2016, 0,
	0, 0, 0, 0, 0, 1996, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2029, 0,
	0, 2028, 2039, 0, 0, 0, 0, 0, 0, 2018,
	2020, 0, 0, 2002, 2003, 2009, 2031, 2008, 2004, 0,
	2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 2035,
	0, 2036, 0, 0, 0, 0, 0, 0, 2005, 2006,
	0, 0, 0, 0, 1988, 1989, 0, 2021, 2022, 2023,
	2032, 2033, 2034, 0, 0, 0, 0, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2025, 2019, 0,
	0, 0, 2011, 0, 0, 0, 1991, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2038, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2044, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 2010, 0, 0, 0, 0,
	0, 0, 0, 0, 2007, 0, 0, 0, 0, 0,
	0, 0, 2026, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2017, 0, 2013, 2014, 2015, 2016, 0,
	0, 0, 0, 0, 0, 1996, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2012,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2029, 0,
	2030, 0, 2039, 0, 0, 0, 0, 0, 0, 2018,
	2020, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2035,
	0, 2036, 0, 0, 0, 0, 2043, 0, 2005, 2006,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2011, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2564, 0, 0,
	0, 0, 0, 0, 2028, 0, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 2002, 2003, 2009, 2031,
	2008, 2004, 0, 2001, 1999, 2000, 1992, 1993, 1994, 1995,
	1997, 1998, 2026, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2012,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2030, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2043, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2028, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2002, 2003, 2009, 2031,
	2008, 2004, 0, 2001, 1999, 2000, 1992, 1993, 1994, 1995,
	1997, 1998,
}

var sqlPact = [...]int32{
	10847, -1000, -1000, -1000, -1000, -1000, -1000, 177, -1000, -1000,
	170, 169, 165, 163, 162, 161, 160, 159, 158, 157,
	156, -1000, -1000, 155, 154, 153, 151, -1000, 150, 149,
	-1000, 148, -1000, -1000, 147, -1000, 145, 144, 142, -1000,
	-1000, 140, -1000, 139, -1000, -1000, -1000, -1000, 137, 136,
	131, 106616, 106007, 107223, 2508, 134592, 116342, 2429, 95057, 133983,
	94448, 133374, 2380, 13561, 132765, 2995, 130, -1000, 132156, 129,
	128, 127, -1000, 115733, 131547, 113299, 112690, 1992, 1812, 1806,
	-1000, 126, 121, -1000, 8934, 80367, 120, 119, 117, 116,
	2983, 115, -1000, 112, 110, -1000, 109, 108, -1000, 17550,
	1604, -1000, 107, 106, 101, -1000, 797, 112081, 100, 99,
	98, 2684, 96, 95, 77937, 94, 93, 92, 2608, 3128,
	-1000, -1000, 2256, -1000, -1000, 91, 90, 89, 88, 87,
	86, 85, 81, 79, 78, 77, 76, 75, -1000, 72,
	69, 67, 62, 61, -1000, 58, 57, 53, -1000, 52,
	-1000, 51, 50, 47, 46, 45, 44, 43, 37, 36,
	33, 28, 26, 25, 24, 22, 19716, -1000, -1000, 20,
	-1000, 2086, 1802, 1791, 1790, 1047, 19, 16, 14, 10,
	9, 8, 6, 5, 4, 3, 0, -1, -2, -3,
	-4, -5, -7, -8, -10, -11, -1000, 141, -13, -16,
	-18, -19, -21, -22, -24, 5083, 3834, -1000, 1906, 845,
	1279, 35015, 3237, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 143697, 135199, -26, -99, -31,
	-1000, 3648, 1068, 63804, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 259, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 504, 2839, 777, -1000, -1000, -1000,
	130938, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2506,
	-14, 95664, -1000, 2238, -1000, -1000, -1000, -1000, -1000, 774,
	-1000, 2500, 2441, 354, 2440, 95664, -1000, -1000, -1000, 3705,
	3598, 2689, 4139, 4137, 4136, 4132, 4130, 143090, 1841, 4129,
	2753, 4127, 4125, 4124, 4121, 4120, 4109, 4108, -1000, 105398,
	1108, 104789, 104180, 3710, 130331, 103571, 129722, 146131, 53831, 843,
	3701, -1000, -1000, -1000, -1000, -1000, -1000, 135199, -1000, 1107,
	-1000, -1000, 4106, 2224, 773, 115124, -1000, -1000, 129113, 1847,
	-1000, -1000, -1000, 991, 1286, 37511, 37511, 37511, 254, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3714, -1000, -1000, -1000,
	-1000, 135199, 2967, 2967, 1461, 1463, 1463, 2967, 2967, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 4103, 4099, 4098,
	4097, 4095, 1526, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	93839, 27338, 93230, 92621, 128504, 53207, 102962, 102353, 4093, 4092,
	4090, 52583, 88358, 61316, 3832, 127895, 145522, 3831, 3830, 1106,
	2226, 1553, -1000, -1000, -1000, -1000, -1000, -1000, -59, 84031,
	3887, 135199, -1000, 248, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 51959, 661, 51335, 509, 50711, 416, 127286, -1000, -1000,
	-1000, -1000, -1000, 87739, 3597, -1000, 126677, 1594, 2688, 4089,
	4083, 1218, 4082, 3574, 1838, 4081, 4076, 4073, 4066, 4065,
	4064, 4062, 1591, 126068, 2911, 125459, 1857, 144913, 2074, 1105,
	101744, 107223, 2847, 124850, 1409, 1402, -1000, -1000, -1000, -1000,
	3320, 3117, 3101, 1247, -1000, -1000, -1000, -1000, -1000, 67510,
	9291, 8891, -1000, -1000, 14307, 124241, 70595, 107223, 107223, -1000,
	-1000, -1000, -1000, -1000, -1000, 50087, 501, 49463, 842, 123632,
	-1000, -1000, 68127, 3175, 1150, -1000, -1000, -1000, -1000, -1000,
	123023, 48839, 384, 48215, 835, 135199, -1000, 3235, 1954, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3031, 1724,
	3888, 2950, 87120, 2259, 1531, 3650, 3319, 3317, 1641, 2216,
	3313, 4059, 2833, 3311, 3310, 3309, 3301, 3296, 1765, 2796,
	336, 2791, 34391, 3216, 1955, 47591, 1632, 1623, 3294, 3287,
	3903, 3778, 2188, 2184, 2204, 2202, 92012, 4058, 4057, 3608,
	3275, 3267, 3040, 3258, 2102, -1000, 3173, 1572, 244, -1000,
	-1000, -1000, -1000, -1000, -1000, 244, 1595, -1000, -1000, -1000,
	-1000, -1000, 96878, -1000, -1000, 1526, -1000, -1000, -1000, 1365,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1906, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2994, -1000, 2228, -1000, -1000,
	-1000, 2748, 3566, 3566, 3566, 3696, 488, 487, -1000, 141,
	939, 1196, -1000, -1000, 154743, -1000, -1000, 54455, 54455, 54455,
	54455, 54455, 54455, 54455, 54455, 2388, -1000, 772, -1000, -1000,
	812, -1000, 762, 698, 627, -1000, -1000, -1000, -1000, -1000,
	-1000, 761, -1000, -1000, -1000, -1000, -1000, -1000, 3859, -1000,
	30510, -1000, -1000, -1000, 494, 759, 54455, -1000, -1000, 3931,
	3926, 1003, -1000, 242, 1001, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3233, 757, 753,
	-1000, 751, 750, 749, 748, 746, -1000, 744, -1000, 743,
	741, 739, 737, 733, 729, 727, 726, -1000, 2255, -1000,
	-1000, -1000, -1000, -1000, -1000, 678, 677, 677, 677, -1000,
	1097, -1000, -1000, -1000, 258, 676, 247, 675, 673, 671,
	-1000, 722, 721, 720, 717, 714, 713, 709, 708, 706,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1096, -1000, -1000,
	-1000, -1000, 1395, -62, 135199, -1000, 504, -62, -1000, -1000,
	705, -1000, 38777, 38777, 38777, -1000, -1000, 2497, 54455, -1000,
	2654, -1000, -51, -51, 957, 65655, -1000, 62552, 957, 392,
	837, 71821, -1000, 3166, -1000, -1000, 700, 238, -1000, -1000,
	-1000, -1000, 27955, 3163, 135199, 135199, 135199, 107223, 107223, 107223,
	135199, 4055, 4053, 3458, 54455, -1000, -1000, 79758, 147952, 107830,
	1364, -61, -1000, -1000, 3812, 83414, 79151, 3230, 147952, 3221,
	3161, 147349, 86501, 4052, -1000, -1000, -1000, -1000, -1000, 3431,
	4051, 4049, 4046, -1000, 135199, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 267, 3429, -1000, -1000, 111472, 267, 3428, -1000,
	267, 3425, -1000, 110865, -1000, -1000, 2478, 3417, -1000, -1000,
	270, 3414, -1000, -1000, -1000, 268, 3410, -1000, -1000, 236,
	-104, 3408, -1000, -1000, -1000, -1000, -1000, -1000, 154743, -1000,
	-1000, -1000, 146740, -1000, 3612, -1000, 135199, -1000, 54455, -1000,
	-1000, 3811, 1840, 3613, 3738, -1000, -1000, -71, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2725, 2739, 1242, 2535, -1000,
	3477, 1549, 37511, 3560, -1000, -1000, -1000, -1000, -1000, 231,
	27955, 3067, -1000, -1000, 135199, -1000, 135199, 2967, 2967, -1000,
	-1000, -1000, 3896, 3895, 2967, 2967, 135199, 135199, -1000, -1000,
	-1000, -1000, -1000, -1000, -71, -1000, 3642, 3407, 1598, -1000,
	2534, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2065, 3404, -1000, 1588, 3403, 2050, -1000, -1000, 5216, -1000,
	151648, 1442, -1000, -1000, -1000, -1000, 2251, 3402, -48, -1000,
	-1000, 2309, -1000, -1000, -1000, -1000, 151410, -1000, 3136, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1933, -1000,
	-1000, 2296, 2152, -1000, 1430, 3401, -1000, 2949, 2949, 101135,
	3387, 69978, 68127, 84031, -70, -1000, -1000, -1000, -1000, -1000,
	-127, -1000, 26713, 154743, -1000, -1000, -1000, -1000, 1985, 154743,
	992, -1000, -1000, 3398, -1000, 154743, 966, -1000, -1000, 3397,
	-1000, 2794, -1000, 3219, -1000, -1000, -1000, 2636, 85882, 2635,
	1065, -1000, 107223, 2219, 4045, -1000, 4044, -1000, -1000, 4041,
	-1000, 4037, 4035, 4032, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 100528, 2496, -1000, -1000, 1527, 1033, 88975, -1000, 2634,
	3737, -1000, 99919, 1103, -1000, 1048, 2632, -1000, 1399, 110258,
	914, 2625, -1000, 4031, 3709, 2903, 1048, 2623, -1000, -1000,
	-1000, -1000, -1000, 1073, -1000, 73035, -1000, 73035, -1000, 1803,
	-1000, 142483, -51, 107223, 3859, -1000, -105, -1000, -1000, -1000,
	1068, -1000, 66890, -1000, 66890, 114515, 88975, 1033, 3160, 76094,
	154473, -1000, 1062, -1000, -1000, 154743, -1000, -1000, -1000, 2793,
	-1000, -210, 2946, -1000, 88975, 69361, 3158, 2787, -1000, 154743,
	-1000, -1000, -1000, -1000, 154743, -1000, -1000, -1000, 88975, 1527,
	-1000, 122414, 99310, -1000, -1000, 1548, 2779, -1000, -1000, -1000,
	68127, 3157, 1434, 88975, 88975, 88975, -1000, 121805, -1000, -1000,
	2271, 1407, 3609, 2215, 107223, -1000, 1937, -1000, -1000, -1000,
	3629, 3385, 135199, -1000, -1000, 3218, -1000, 82807, 109651, -1000,
	109044, -1000, 108437, -1000, 107223, -1000, 107223, -1000, 4030, 4028,
	4026, -1000, -1000, 4022, -1000, 4020, 3618, -1000, 719, 46967,
	154743, 3617, -1000, 4019, 2167, 3216, 154743, -1000, 3382, 1816,
	1815, 135199, -1000, -1000, 135199, -1000, 135199, -1000, -1000, -1000,
	2521, 1669, -1000, -1000, 2723, -1000, -1000, -1000, 1061, -1000,
	-1000, 107223, 107223, 107223, 107223, 107223, 1299, -1000, 46343, -1000,
	-1000, 3260, 4018, 1737, -1000, 1929, -1000, 3155, 3631, -1000,
	3150, 1536, 1960, 225, 3935, 225, -1000, -1000, 271, -1000,
	-1000, 141876, -1000, 2748, -1000, 135199, -1000, 2711, 3204, 3215,
	1870, 2520, 2830, -1000, 45719, 2776, 58199, 2530, 141, -1000,
	-1000, 141, 141, 36263, -1000, -1000, 37511, 939, 83414, 83414,
	27955, 1376, 54455, 54455, 54455, 54455, 54455, 54455, 54455, 54455,
	54455, 54455, 54455, 54455, 54455, 54455, 54455, 54455, 54455, 54455,
	54455, 54455, 54455, 54455, 54455, 54455, 54455, 54455, 54455, 54455,
	54455, 54455, 54455, 54455, 54455, 54455, 54455, 54455, 2464, 54455,
	1363, 54455, 54455, 54455, 54455, 2264, -1000, -1000, 2117, 546,
	2241, 698, -1000, -1000, -1000, 3860, 3860, 3860, 993, 993,
	993, 15351, 15351, 669, 4015, 812, -1000, 54455, -1000, 71,
	66262, 54455, 28574, -1000, 487, 12407, 2730, -1000, 486, 29228,
	-1000, -1000, -1000, 30510, 627, 45065, 54455, 1070, 154743, -1000,
	-1000, 1557, 3886, 26088, 3245, 3029, 696, 885, 881, 33737,
	33083, 32429, 31775, 877, 818, 54455, 54455, 54455, 54455, 54455,
	54455, 54455, 54455, -1000, -1000, 3894, -1000, 3886, -1000, -1000,
	-1000, -1000, 3886, 1374, 1373, 3886, -1000, 3886, 3886, 9832,
	9832, 44441, 43817, 43193, 58823, 42569, 54455, 31151, 41945, 41321,
	-1000, 60695, 135199, -62, 3810, 54455, 351, -1000, 13292, -1000,
	351, 351, 695, -107, 154743, 2795, 2795, 64421, 2547, 2393,
	2393, 2393, -1000, 957, 20424, 957, 119984, 2403, 957, 957,
	223, 250, 482, 61935, 2654, 119984, 795, 694, -32, -35,
	-36, -1000, -1000, -37, -38, -1000, -1000, 107223, 692, 28574,
	27955, 214, 2177, -108, 2823, 2820, 2818, 2813, -1000, 2802,
	2493, -1000, -1000, -1000, 1980, -114, 1362, 107223, 135199, 1584,
	-1000, -1000, -1000, -1000, 84031, -64, 84031, 135199, -102, -1000,
	147952, 7179, -115, -1000, 1308, 210, 3886, -1000, -1000, -1000,
	-1000, -1000, 4012, 4011, -1000, 1094, 683, 679, 442, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 678, 677, 677,
	677, -1000, 258, 676, 247, 675, 673, 671, -1000, -1000,
	-1000, -1000, -1000, 3148, 107223, 135199, 1561, 82200, 98701, -104,
	107830, 147952, -55, -1000, -1000, -1000, -1000, 135199, -1000, -1000,
	-1000, 4008, -1000, 107223, -1000, -1000, 107223, 267, 3396, -1000,
	107223, -1000, 107223, 257, 3392, -1000, -1000, 135199, -1000, 107223,
	107223, -1000, 135199, 135199, 135199, 147952, 147952, 252, -1000, 107223,
	939, -116, 1235, -71, -1000, -1000, -1000, -1000, 1526, -1000,
	1850, -1000, -1000, -1000, -1000, -1000, -1000, 1438, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1003, -1000, -1000, -1000,
	-1000, 3878, 3867, -69, -1000, -1000, 27955, -1000, 2090, -1000,
	-1000, -1000, -1000, 135199, 135199, -1000, -1000, 135199, 135199, -1000,
	-1000, -72, 1781, 575, 1361, -1000, 91403, 2682, 3601, 4006,
	2884, 3589, 1788, -1000, 1663, 670, -1000, 3715, 96878, 3776,
	3788, 1429, -1000, 3147, -1000, -1000, -1000, 989, 1721, 1942,
	1357, 1353, 96878, 1588, -1000, 83414, -1000, 2870, 3691, 1463,
	1496, 1463, 1463, 1519, 1500, -1000, 96878, 1939, 1352, 1348,
	1346, -1000, -1000, 1748, 1718, -1000, -1000, 121198, 1613, -1000,
	1344, 1342, 136413, 3829, 2994, 2397, 857, 2142, -1000, 1440,
	1337, 3146, -1000, -1000, -74, 3772, 3787, 1429, -1000, 3142,
	1335, -1000, -1000, -1000, 3682, 107223, 27955, 1675, 1674, 1667,
	1938, 1329, -65, -1000, 3768, 1719, -1000, 1527, 1527, 116949,
	135199, 3840, 88975, -1000, 2655, -1000, -1000, -1000, 3644, 3643,
	-1000, -1000, 1327, 1323, -1000, 1135, 10871, 3527, -1000, 147952,
	1135, 1135, 1981, 3388, 2924, 1709, -1000, 2943, 953, 2942,
	-1000, -1000, -1000, 953, -70, 84031, 135199, 207, -1000, 71,
	54455, 54455, 71, 54455, 71, -1000, 3727, 3384, 3808, -1000,
	3383, 4005, 667, -1000, 2750, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 665, 2614, 3139, 135199, 237, -1000, 107223, -1000,
	3807, 120591, -1000, 3381, 147952, 1588, 2613, -1000, -1000, 98094,
	-1000, 3372, 2125, 504, 2612, -1000, 704, 4003, 3365, -1000,
	141269, -1000, 3612, 1411, 3363, 1148, 754, 3806, -1000, 754,
	74253, -1000, 135199, -1000, -51, 6529, 90189, -117, -125, 480,
	-1000, 135199, 135199, 3542, 2175, 2161, -1000, 1041, 68127, -1000,
	68127, -126, -1000, -210, 2940, 1630, 68127, -1000, 1033, -162,
	953, -1000, 953, -1000, 107223, 3208, -1000, 88975, 68127, -1000,
	1033, 1033, 1033, -1000, -1000, -1000, -1000, 4002, 4001, 4000,
	3999, -1000, -1000, 1046, 107223, 135199, 107223, -1000, 2923, 1702,
	-1000, 205, -1000, 147952, -1000, 147952, 135199, 107223, -1000, 1046,
	135199, 1046, 135199, 1046, 135199, 1046, 1046, -1000, -1000, -1000,
	-1000, -1000, 71, -1000, -1000, 154743, -1000, 54455, -1000, -1000,
	1645, 3994, 1785, -1000, 3207, -1000, 3205, -1000, 2, -1000,
	-1000, 3893, 2067, -1000, 3925, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3993, 154743, -1000, 2148, -1000, -1000,
	-1000, -1000, 107223, 107223, 107223, 107223, 135199, 3525, -1000, 135199,
	3496, 3520, 107223, -1000, 3934, -1000, -1000, 96878, -1000, 2711,
	3204, -1000, -1000, -1000, -1000, -1000, -1000, 1567, 2456, -1000,
	2773, -1000, 1707, -1000, -1000, -1000, 154743, 59447, -1000, -1000,
	154743, 2015, -1000, 57575, 56951, -1000, -1000, 1851, 107223, 2846,
	-1000, 2846, -98, -1000, 152356, 2772, 107223, -69, 37511, -1000,
	-1000, -1000, -1000, -1000, 986, 693, 693, 1464, 1464, 1464,
	1464, 3731, 6178, 2501, 5182, 7290, 7290, 7231, 7231, 7231,
	7231, 7231, 7290, 523, 993, 993, 523, 523, 523, 523,
	523, 993, 993, 993, 7290, 7290, 7290, 993, 15351, 16036,
	9369, 54455, 54455, 1321, 2053, 546, 8501, 54455, 9803, 9803,
	9803, 9803, -1000, 2377, -1000, -1000, -1000, -1000, 3135, 663,
	58823, 58823, -1000, -1000, -1000, -1000, 29869, 54455, -1000, -1000,
	-1000, -1000, 40667, -1000, -1000, 151338, -342, 472, -1000, 204,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 471, -97, 103, -1000, 54455, 54455, 54455,
	468, -1000, 197, 54455, 135199, -1000, 19482, 794, -132, -1000,
	-131, 1543, -1000, 54455, -1000, -1000, 1317, -1000, 1315, 1312,
	1310, -1000, 660, 465, -1000, 195, -1000, 2391, 659, 646,
	54455, -1000, -1000, -1000, -1000, -1000, 151129, -1000, -1000, 150891,
	-1000, -1000, 150682, -1000, -1000, 150610, -1000, -1000, -1000, -1000,
	-1000, 154090, 18970, 17987, 17202, 10019, 16503, 14387, -136, 460,
	-141, 458, 985, 982, 455, 451, 450, -144, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-149, 443, -1000, 3134, -97, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 440, -1000, 419, -1000, 153969, -97, 414,
	9581, -1000, 58823, 58823, 58823, 58823, 413, -1000, 152118, -1000,
	153790, 40043, 40043, 40043, 409, 153552, 54455, -97, -150, -1000,
	-152, -1000, -1000, -1000, -1000, 540, -157, 1049, 38777, 63185,
	27955, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1049, 1049, 54455, -1000, 54455, 2785, -1000, -1000,
	-1000, -1000, 2784, 2055, 2795, 64421, -1000, -1000, -1000, -1000,
	119984, -1000, 3859, 3386, -1000, 119984, -1000, -1000, 135199, 504,
	-1000, 119984, 119984, 27955, 957, -1000, 957, 119984, 848, -1000,
	-1000, -1000, -1000, -1000, 408, 76711, 103, 193, 27955, 1048,
	-1000, -1000, 2919, 2919, 2919, 2919, 2919, 107223, -1000, -1000,
	147952, 1309, -67, -81, 2937, 2936, -70, 84031, -70, -127,
	3838, -282, -1000, 2268, -1000, 83414, -1000, 810, 1168, 27955,
	-1000, -1000, -1000, 645, -1000, 3886, 3886, -1000, 3886, 147952,
	3133, 299, 2935, 2931, -1000, 2491, 95664, 274, -104, 147952,
	3992, -1000, -1000, 267, -1000, 107223, 267, 267, -1000, 107223,
	107223, 2478, -1000, 270, -1000, 268, -1000, -1000, -104, -1000,
	1060, 37511, -1000, 1526, -1000, -1000, 1685, -1000, 2189, -1000,
	1251, -1000, -1000, 37511, -1000, 3551, -1000, 1852, -1000, -1000,
	-1000, -1000, 2421, 135199, 135199, 107223, -1000, 118163, 135199, -1000,
	2317, 147952, -1000, 2611, 140662, 2587, 140055, 83414, -1000, -1000,
	643, 999, 2771, 2768, 1146, 135199, 135199, 2764, 139448, 138841,
	-1000, 3991, 135199, 2267, 54455, 118163, 3681, 2367, 2505, 71,
	71, -1000, 71, -1000, -1000, 642, 1347, 107223, 107223, 135199,
	147952, 107223, 1974, -1000, -1000, -1000, -1000, -1000, 97485, -1000,
	-1000, 1463, -1000, -1000, -1000, 1463, -1000, 1463, 1588, 1966,
	135199, 147952, 107223, 147952, 138234, 2131, 137627, 2129, 2124, -1000,
	-1000, -1000, 2109, 2123, 1934, 135199, -1000, -1000, -1000, -1000,
	-1000, 1603, -1000, 857, 1307, 3132, 54455, 54455, 2303, 71,
	71, -1000, 71, 637, 27955, 2201, -1000, 3194, 135199, 3924,
	137020, 3921, 135199, 135199, 135199, 147952, 3575, 135199, -1000, -162,
	-66, -143, -1000, 931, 927, -127, -1000, 3840, -1000, 926,
	2224, 135199, 147952, -1000, 136413, 10871, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2305, 2929, 1154, 135199, 1430, -1000, -1000,
	1930, 1306, 1305, 96878, 2287, 1927, 2016, 147952, 68127, 1043,
	68127, 2910, -1000, -1000, 25463, -1000, 154743, 154743, -1000, 154743,
	-1000, 81591, 88975, 88975, 135199, -1000, 74870, 135199, 90796, 1010,
	3360, 73644, -127, 1033, 1527, 3255, 1799, -143, 634, 135199,
	-1000, -1000, 1588, 3359, 504, 2607, -1000, 147952, 1100, 3804,
	3353, 632, 3990, 3988, -1000, 107223, 2489, 2606, -1000, -1000,
	135806, 3330, 857, 135199, 1049, 64421, 2163, -1000, 71214, 1120,
	135199, 2064, 243, -1000, -1000, -1000, -33, 135199, -1000, 819,
	-1000, -1000, 6529, 6529, 1033, 68744, -164, -1000, 186, 630,
	920, 917, -1000, 2908, -1000, -210, -1000, 88975, 1041, 68127,
	3131, -210, 2930, 3125, -1000, -1000, 1058, -1000, 1432, 2925,
	1033, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -52, -1000, 1924, 1989, 135199, -104, -104, -79,
	-1000, -1000, 185, -67, -1000, 1046, -1000, 1046, -1000, 1046,
	-1000, -1000, -1000, 154743, -1000, -1000, -1000, 1759, 1751, 135199,
	-1000, 3203, -1000, 135199, -1000, -1000, 27955, 135199, 107223, 27955,
	107223, 3201, 3198, -1000, -1000, -1000, 135199, -1000, -1000, 135199,
	-1000, -1000, -1000, -1000, -1000, -1000, 1186, -1000, 2015, 2453,
	-1000, 627, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2704, -1000, -68, 36263, 972, -1000, -1000, 107223, -56,
	-69, 54455, 54455, 8182, 7678, 54455, 58823, 58823, -1000, 54455,
	6531, -1000, -1000, -1000, -1000, -1000, 3124, 626, 54455, 83414,
	8609, 7358, -1000, 405, 13959, 523, -1000, 54455, -1000, 5692,
	-1000, 403, 39419, -1000, 152656, 40, -165, -1000, 21064, -97,
	-166, -1000, -1000, 809, -1000, 3316, -1000, 54455, 153373, 2676,
	2119, 2025, 1831, 3886, 3920, 24838, -1000, 75487, 1079, 2422,
	150411, -1000, -1000, -1000, -1000, 83414, 83414, 54455, 54455, -1000,
	54455, 54455, 54455, -1000, -1000, -1000, 3886, 977, -1000, -1000,
	-1000, 977, -1000, -1000, 1463, -1000, 1463, -1000, 54455, -1000,
	-1000, 3119, 54455, -1000, 83414, 83414, 58823, 58823, 58823, 58823,
	58823, 58823, 58823, 58823, 58823, 58823, 58823, 58823, 58823, 58823,
	58823, 58823, 58823, 58823, 58823, 58823, 2783, 58823, 3858, 3858,
	3858, 925, -1000, 3197, 3119, 54455, 54455, 83414, 402, 400,
	399, -1000, 54455, -97, -1000, -1000, 11318, 625, -1000, 2696,
	-1000, 3026, -1000, 54455, -1000, -167, -1000, 2654, -1000, -1000,
	3026, 3026, -172, 154743, 64421, 64421, -1000, 624, 54455, 2774,
	-1000, -1000, 793, -339, -1000, 916, -1000, -1000, -1000, -1000,
	-1000, -1000, 915, -1000, 504, -1000, -1000, -1000, 181, 119984,
	119984, 792, -1000, -174, -1000, -1000, -181, -1000, 3803, 397,
	27955, -1000, 1049, 4014, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2789, -282, 147952, 147952, 1897, 1881, -70, 2439, -1000,
	3038, 3919, -1000, 3892, 803, 787, 134, 3886, 396, 387,
	380, -104, 147952, 147952, 1869, 1868, 78544, 3113, 147952, -1000,
	-1000, -1000, 267, -1000, -1000, -1000, 257, -1000, -1000, -1000,
	-1000, 2904, -1000, -71, -1000, -1000, -1000, 54455, -1000, 1030,
	-1000, -1000, 3599, 623, 1304, 1303, -1000, -182, -1000, 913,
	-1000, -1000, -1000, -1000, -1000, 3092, -1000, 3345, -1000, 2603,
	-1000, 1127, 2602, 1756, -1000, 54455, 621, 2893, 620, 618,
	3987, 2301, 3986, 1147, 3336, 2478, 3322, 2478, -1000, -1000,
	-1000, 994, -1000, 154743, -184, -1000, 2367, -1000, 616, 614,
	-1000, -72, 1730, 555, 1300, 1057, -1000, -1000, 54455, 54455,
	119377, -1000, 489, 3605, -57, -1000, -1000, -1000, 1867, 1291,
	1285, -1000, -1000, -1000, -1000, -1000, 1588, 1864, 1283, 1281,
	-1000, -1000, -1000, -1000, -1000, 2601, -1000, 135199, -1000, 3321,
	135199, -1000, 857, 135199, 1056, -1000, 3264, 3263, 964, 135199,
	54455, 54455, 153252, 153073, -1000, 1054, -1000, -1000, 54455, -1000,
	-74, 1278, 3753, 2597, 107223, -1000, 2478, 3315, 1276, -1000,
	1275, -1000, -1000, -1000, 3746, 3743, 1287, -1000, 116949, 88975,
	88975, 3840, 68127, -1000, -1000, -1000, 3868, -1000, -1000, -1000,
	-1000, 85263, -1000, -1000, 1135, 135199, 147952, 107223, 1962, -1000,
	-1000, 95664, 96271, 135199, 2924, -104, 953, -1000, 2409, 953,
	1043, 3109, -1000, 2835, -1000, -1000, 1053, 375, -75, -1000,
	1396, 80974, 77318, -1000, 2396, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3984, 373, -187, -76, 83414, -1000, -1000, -1000,
	-1000, 2587, 107223, 135199, 1372, 2892, 135199, 135199, 3802, -1000,
	2512, 550, 107223, 962, -1000, 3859, -1000, -1000, -1000, 135199,
	38777, 116949, -1000, 3735, 107223, 3799, 3314, 1048, 107223, 71,
	107223, 3904, -1000, -1000, 3798, 107223, 3303, 2488, 2593, 2738,
	857, 89582, 1048, 2405, -85, -1000, 2064, 38135, 3602, -189,
	-1000, -1000, -1000, 1049, 74253, 64421, 54455, 3983, -204, -1000,
	-1000, -1000, -1000, -1000, 88975, 1033, 135199, 135199, 3982, 88975,
	88975, 88975, -77, 613, -1000, 911, 908, 906, -1000, -1000,
	-1000, -1000, -1000, -1000, 905, 902, 901, 899, 1041, -1000,
	-1000, -210, 68127, 1041, 68127, 71, -1000, 2435, 107223, 68127,
	-1000, 24213, 135199, 2923, -1000, 84638, -1000, -1000, -1000, -1000,
	-1000, 1046, 3918, -127, -1000, -1000, -1000, 2313, 2526, 2313,
	2008, 2002, -1000, -1000, -1000, 2446, -1000, -1000, -1000, -1000,
	2844, 3573, 27955, 3713, 9803, 54455, 54455, 1109, 5641, 332,
	9803, 54455, 54455, 83414, 596, -205, 54455, 54455, -1000, 54455,
	786, 154743, -1000, 3916, 54455, 362, 359, -1000, -1000, -1000,
	3869, -1000, -1000, -1000, 154743, 54455, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 349, -1000, 104, -1000, -1000, -1000, 144304,
	-1000, 54455, 346, 3675, -1000, 343, 337, 12596, 444, 150185,
	150097, 149679, 331, -1000, -1000, 330, 329, 154743, 3197, 154743,
	-1000, -1000, 983, 983, 1462, 1462, 1462, 1462, 3858, 662,
	1089, 377, 2430, 2430, 2430, 2269, 925, 925, 2430, 2430,
	2430, 925, 3107, 2757, 610, 9544, -1000, -1000, 154743, 154743,
	327, -1000, -1000, -1000, -97, 306, 11318, -1000, 3014, 3668,
	154743, -1000, 64421, 3014, 3014, -1000, -1000, 2055, 135199, 154743,
	64421, -1000, 3386, -1000, 22332, 21701, -1000, 27955, -1000, -1000,
	-1000, -1000, 3859, -1000, 76711, -1000, 609, -1000, 41, -1000,
	4014, -1000, 898, -1000, -1000, 88975, 88975, 3981, 3975, -1000,
	3915, 3914, 2408, 3913, 2919, -1000, -282, -173, 135199, 135199,
	-1000, 2437, -1000, 785, 3973, 802, 27955, 304, -1000, -1000,
	-1000, -104, -104, 135199, 135199, 3104, 107223, 135199, 1416, 147952,
	-104, -1000, -1000, -1000, 3540, 154743, 3188, 2982, 2976, 135199,
	135199, -1000, 118163, 37511, 1661, 118770, 135199, 3299, -1000, 3293,
	-1000, 1146, 2510, 149600, 65038, -1000, 65038, 135199, -1000, -1000,
	-1000, -1000, 2091, 1564, 3972, 1208, -1000, 3635, 135199, -1000,
	135199, -1000, -1000, -1000, 118163, -1000, 135199, 135199, 107223, 135199,
	-1000, 147952, 3277, -207, 154743, -78, -1000, 893, -1000, 1489,
	-1000, 23588, 135199, 147952, 107223, 135199, 147952, 107223, 3292, 1118,
	135199, -1000, 135199, 1117, 2349, -1000, -1000, 3262, -1000, 154743,
	152835, 71, 54455, 3265, -215, 27955, -1000, 3912, 3911, 3290,
	3639, -1000, 135199, 3910, 135199, 107223, 3539, -1000, -1000, -1000,
	1044, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1855, 1274,
	1261, 2487, 2486, 2431, -79, 2287, 1043, -82, 608, -1000,
	888, 887, 880, 879, 876, 1043, -1000, 88975, 68127, 3971,
	2057, 74870, 54455, 54455, 83414, -1000, 83414, -1000, -1000, -1000,
	2883, -1000, 113906, 90796, 2483, -1000, -1000, 607, 135199, 135199,
	603, -1000, 71, -1000, 3970, 118163, 601, -1000, 2434, -1000,
	784, -1000, -1000, 200, -218, 147952, 1588, 71, 107223, -1000,
	504, 1036, 504, 301, -83, -1000, 3281, 1132, 27955, 107223,
	3288, 2741, 857, 89582, -1000, 1411, 2830, -1000, -84, -1000,
	475, 71, 2405, -1000, -85, 154743, -1000, 875, 292, -1000,
	3538, -1000, -1000, -221, -1000, -1000, 3238, 3238, 88975, 68127,
	88975, 88975, 88975, 68127, 88975, -1000, 1041, 3797, -1000, -210,
	-1000, 2621, -1000, 1033, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 27955, 1714, -1000, 599, 597, -1000, -1000, -1000,
	-1000, 3573, 9803, 9803, 54455, 54455, 54455, 9803, 596, -223,
	-1000, 9803, 9803, -97, -1000, -1000, 152656, -1000, -1000, -1000,
	154743, -1000, 22963, 2323, -1000, 149362, -1000, 36263, -1000, -1000,
	54455, 54455, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	58823, 3103, 594, 83414, -1000, -1000, 287, 1069, 54455, 56327,
	2654, 1069, 1069, -1000, -224, -1000, -1000, -1000, 3859, -1000,
	3859, 41, -1000, -1000, 3969, 27955, -1000, 88975, -1000, -1000,
	-1000, -1000, -1000, 3968, 3967, 2577, 3966, 3964, -1000, -1000,
	-1000, 3250, -163, -220, -1000, 800, -1000, 3963, -1000, -1000,
	166, 164, 147952, 3094, 133, 2920, -104, -1000, 71, -1000,
	-1000, -1000, -1000, -1000, -1000, 2918, 3796, -1000, 2122, -1000,
	135199, 135199, -1000, 135199, -1000, 27955, 135199, 3012, 1338, -1000,
	999, 2763, 582, 58823, 1184, 107223, 937, 2973, 2960, -1000,
	3825, 3667, 2999, -226, -1000, 135199, 54455, 135199, -229, -231,
	2573, -1000, -1000, 1179, 1333, 54455, 1178, -1000, -1000, -1000,
	83414, 574, 2478, 2478, -1000, -232, -237, -1000, -1000, -1000,
	54455, 1257, 135199, 36887, -1000, 3959, 3605, -1000, -1000, -1000,
	-1000, -1000, -1000, 135199, 135199, -1000, -1000, 135199, 135199, -1000,
	54455, -1000, 152535, 54455, 1254, -1000, -1000, -1000, 3909, 2478,
	27955, 2478, -1000, 2478, 3639, 1199, 2513, 135199, 147952, 107223,
	1963, 1963, 3186, -1000, -1000, -1000, 2360, 2360, 88975, 54455,
	1609, 68127, 68127, -1000, -87, 1043, -1000, 1735, -1000, 154743,
	154743, -1000, -1000, 2318, 3958, -1000, -1000, -1000, -1000, 2761,
	-1000, -1000, -1000, 135199, 2760, 2998, 65038, 573, 563, 135199,
	1034, -1000, -239, 90796, 1010, 1018, -1000, 73035, -1000, -1000,
	-1000, -1000, 504, 3795, -1000, 2895, 3794, -1000, 3907, 562,
	561, 135199, 2485, 560, 27955, 3596, 857, 89582, -1000, 3330,
	2064, -1000, 2584, 135199, 3582, -1000, 2830, 546, 1033, 544,
	1033, -1000, -242, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1385, 1041, -88, -1000, 873, 629, -1000, -1000,
	-1000, 107223, 107223, 54455, 54455, -1000, 9803, 9803, 9803, -1000,
	279, -1000, -1000, 2405, 3663, -1000, -91, 149294, 148876, 8406,
	58823, 83414, -245, -1000, -1000, 135199, 154743, -93, -1000, 154743,
	542, 539, 390, -1000, -1000, -1000, 783, 779, -1000, -1000,
	-1000, -1000, 3957, -1000, -1000, -1000, 147952, 147952, 3955, -1000,
	147952, 147952, -104, 147952, 147952, 1848, -1000, 117556, 135199, -1000,
	-1000, 1756, 1782, -1000, -1000, 135199, 2588, -1000, -1000, -1000,
	1040, 54455, 9544, 58823, 536, 54455, -1000, 533, 531, 3793,
	3487, -1000, 2879, 3054, 2005, 65038, -1000, 3573, -1000, 148650,
	-1000, 1130, 2149, -1000, -1000, -1000, -1000, 154743, 58823, 3639,
	65038, -1000, -1000, 529, 527, 154743, 526, 874, 3093, -1000,
	-1000, -1000, -1000, -127, -127, -1000, 154743, 71, 154743, 524,
	3753, -1000, -1000, -1000, -1000, 2478, 107223, 871, -1000, -1000,
	-1000, 1250, -1000, -1000, -1000, -1000, 3954, 3952, 3090, 95664,
	-1000, -247, -1000, 154743, -1000, -1000, -1000, -1000, 2150, 83414,
	-1000, 1010, -1000, -1000, 2483, 519, -1000, 1007, 2258, 2258,
	-248, 65038, 65038, -250, 2459, 2876, -1000, 265, 3786, 1018,
	-1000, 3870, -1000, 1049, -1000, 3785, 71, 3536, -1000, 71,
	-1000, 3904, 65038, -1000, 107223, 65038, 2484, 2249, 2719, 89582,
	-1000, 2738, -1000, -1000, -256, 135199, 2064, -1000, -1000, 88975,
	-1000, -1000, 3880, -1000, 2621, -1000, 135199, -1000, 135199, -1000,
	-1000, -261, -262, -1000, 2262, 54455, 36263, -1000, -1000, 8406,
	-263, -1000, -96, -1000, 3784, 56327, 3949, 3948, 3947, -1000,
	-1000, -1000, -282, -282, -1000, -104, -104, -104, -104, 135199,
	-1000, 2121, -1000, 2587, -1000, -1000, 3286, -1000, 3007, 508,
	148606, 9544, 2698, 135199, 148562, 1588, 1588, -1000, 3783, 3051,
	-1000, -1000, 2303, 507, -1000, -1000, -1000, -1000, 972, 135199,
	1007, 2990, 107223, 9544, 1134, -264, 2313, 2313, 54455, 35639,
	2343, -1000, 54455, -1000, -1000, 3639, 68127, 147952, -1000, -1000,
	147952, 2477, -1000, 3057, 3868, 6601, -1000, 2459, 135199, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1130, -271, -273, -1000, -1000, 3622, -1000, 3529, 2883,
	71, -1000, -1000, -1000, 71, -1000, 3944, 1036, 264, -274,
	1132, -276, 107223, 2114, -1000, 857, -1000, 2741, 1049, 3326,
	-1000, -279, -1000, -1000, -1000, -281, -284, -1000, -1000, 263,
	55703, 55703, 55703, -97, -98, -1000, 135199, 505, -1000, -1000,
	-1000, -1000, -1000, -1000, 132, -1000, -1000, 3138, 955, -1000,
	882, 2012, 253, 1152, 143, -12, -1000, -1000, -1000, 2999,
	-1000, 135199, -1000, -1000, -1000, 955, 504, -1000, 54455, 1130,
	-286, -1000, 1116, -294, -1000, 1113, -295, -1000, 3082, -1000,
	-296, 2478, -1000, -282, 252, 1963, 1035, 3724, -1000, 2445,
	6601, -1000, 3902, 89582, -1000, -1000, -1000, 2470, 2565, -1000,
	-1000, -1000, -1000, 1822, 2962, -1000, 2732, 1477, 1477, 135199,
	-1000, -1000, 2708, -297, -1000, -1000, 2005, 1130, 2303, 2570,
	-1000, 2318, 1034, -1000, -1000, -1000, -1000, 1130, 503, 2005,
	498, 1551, 857, -1000, -1000, 1463, 3596, 3325, 1465, 1033,
	-1000, -1000, -1000, 3289, -1000, 60071, 2475, 1998, 151837, 3289,
	3289, -1000, -1000, 147952, 135199, 1007, 3711, -1000, 945, 890,
	1619, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1049,
	-302, -1000, 2698, 154743, 1007, -1000, 2313, 2916, -1000, 2313,
	3080, -1000, 2330, -1000, -1000, -1000, -1000, 3070, -1000, 1946,
	3852, -1000, -1000, 3770, 54455, -1000, -1000, -1000, -1000, 2562,
	2468, 2947, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1007, 135199, 2303, 2005, 1007, 1975, 1969, 3941, 1010, 2459,
	2005, 65038, 2303, 65038, 2291, -1000, 135199, -1000, 2249, 1406,
	-1000, 1768, -1000, -1000, 1945, 3818, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -104, -1000, -1000, 865, -1000, 3473, -1000,
	1175, 2246, 2246, -1000, -1000, 882, -1000, -1000, 497, -1000,
	496, -1000, 147952, 2433, -1000, -1000, -1000, 154743, 2863, 2557,
	-1000, -1000, -1000, -1000, 1007, 2303, 1049, -1000, 3940, -1000,
	2459, -1000, 2303, -303, 1007, -304, 2364, -1000, -1000, -127,
	2114, -1000, 1731, 74253, 1995, -1000, -1000, 2398, 55079, 54455,
	-1000, 3842, -1000, -1000, 2769, -1000, 2999, 54455, 54455, 252,
	72428, 11550, -1000, 2857, 1049, 1007, -1000, -1000, 2708, 1007,
	1130, 1049, 2005, 1829, 857, 1551, 74253, -289, -1000, -1000,
	-1000, 154743, -1000, -1000, -1000, -1000, -305, -313, -1000, -143,
	116949, -335, -1000, -1000, -1000, -1000, -1000, 1049, -1000, 1049,
	2005, -1000, 2303, -1000, -1000, 2109, 147952, 2291, -289, -1000,
	2303, 1249, -323, -1000, -1000, -1000, 2303, 1007, -1000, 1829,
	-1000, -1000, -1000, 495, -1000, 1007, 1049, -1000, 54455, 1049,
	-1000, -329, -1000, 2303, -1000,
}

var sqlPgo = [...]int16{
	0, 4846, 4845, 29, 4844, 4840, 4836, 4833, 4832, 4830,
	4829, 4827, 4826, 4823, 4822, 4821, 162, 4818, 4817, 4816,
	4814, 4813, 4811, 4810, 4809, 4806, 4805, 4804, 4802, 4800,
	4798, 4796, 4790, 4787, 4786, 4784, 4783, 4782, 4779, 4778,
	4777, 4774, 4773, 4772, 4771, 4770, 4769, 4768, 4767, 4766,
	4765, 4764, 4763, 4762, 4761, 4759, 4758, 4756, 4752, 4751,
	4749, 4748, 4747, 4745, 4744, 4743, 4742, 4741, 4739, 4738,
	4737, 4731, 4728, 4726, 4722, 4720, 66, 4717, 4716, 4713,
	4709, 4707, 4706, 4705, 4703, 4702, 4700, 4697, 4696, 4695,
	4694, 4693, 4692, 4690, 4689, 4688, 4687, 4685, 82, 4680,
	309, 4678, 4677, 4675, 4674, 4673, 4670, 4669, 4668, 4667,
	4664, 4662, 4661, 4660, 308, 4659, 23, 194, 4658, 4656,
	14, 4654, 4652, 304, 4650, 4648, 4647, 4645, 4643, 317,
	4641, 4640, 4635, 4634, 4632, 291, 4628, 4627, 4623, 4619,
	4618, 4617, 106, 157, 4615, 4614, 243, 4612, 4611, 4610,
	4608, 4607, 4603, 4602, 286, 289, 4601, 4597, 4595, 281,
	199, 4594, 300, 4593, 4591, 4589, 4585, 4584, 4582, 4581,
	4579, 4578, 4577, 4576, 4575, 4574, 4571, 4568, 4559, 4558,
	4555, 4553, 4550, 4546, 4545, 4544, 4542, 4540, 4539, 4538,
	4537, 4534, 4531, 4529, 4524, 4523, 4521, 4520, 4519, 4518,
	4511, 4509, 4507, 4506, 4504, 279, 236, 147, 4503, 4502,
	4501, 4500, 4499, 298, 297, 4497, 4488, 4487, 4485, 4484,
	3730, 4483, 4482, 4480, 4478, 4477, 4473, 4471, 4470, 4467,
	167, 6, 50, 4466, 4463, 111, 108, 103, 95, 117,
	118, 4461, 4458, 140, 4457, 156, 131, 4455, 138, 130,
	36, 22, 254, 270, 3610, 268, 4452, 4448, 4447, 282,
	227, 4445, 272, 4444, 4443, 4442, 4441, 4439, 4438, 87,
	62, 239, 4437, 4436, 165, 201, 209, 207, 198, 205,
	81, 72, 121, 93, 74, 56, 25, 100, 247, 28,
	246, 1, 4, 293, 4435, 284, 13, 163, 11, 40,
	4433, 4432, 4430, 4428, 4212, 132, 4427, 296, 271, 200,
	4426, 4425, 4424, 1038, 4423, 4421, 61, 253, 218, 139,
	128, 99, 152, 4420, 178, 206, 49, 4416, 189, 80,
	4411, 4410, 116, 104, 10282, 6930, 4407, 4406, 148, 84,
	134, 4858, 190, 187, 228, 119, 155, 192, 186, 4405,
	75, 4404, 175, 191, 204, 403, 4403, 105, 4400, 3775,
	179, 213, 180, 6964, 4399, 4398, 4397, 112, 4395, 123,
	4394, 4393, 79, 31, 3, 2, 173, 51, 48, 7,
	4392, 35, 151, 60, 39, 4391, 34, 4388, 4387, 4386,
	4383, 59, 4382, 77, 185, 4380, 4379, 312, 4375, 126,
	68, 32, 4374, 371, 242, 4373, 260, 158, 4372, 4371,
	219, 216, 4360, 98, 259, 4359, 4358, 4357, 4356, 4351,
	316, 160, 9, 154, 4348, 4346, 172, 4345, 63, 275,
	229, 4343, 73, 4338, 4337, 208, 69, 168, 313, 203,
	252, 143, 257, 215, 265, 4333, 4331, 4329, 214, 4328,
	4326, 251, 181, 4325, 4324, 263, 318, 109, 57, 113,
	266, 96, 224, 184, 4323, 232, 4318, 4317, 314, 211,
	250, 54, 10, 17, 122, 125, 4316, 5, 269, 183,
	244, 146, 4315, 8743, 3220, 2804, 267, 4314, 174, 150,
	92, 153, 182, 294, 101, 4312, 4311, 3557, 4310, 4308,
	4304, 4302, 220, 4301, 4300, 47, 170, 195, 217, 4299,
	124, 88, 67, 30, 141, 102, 310, 149, 256, 197,
	283, 4297, 4296, 4295, 226, 4293, 89, 142, 234, 4292,
	231, 280, 78, 4291, 519, 4290, 176, 2583, 85, 177,
	4284, 255, 4283, 4282, 4279, 4278, 4276, 4275, 4270, 2546,
	262, 4263, 4262, 4261, 44, 225, 4260, 223, 193, 287,
	70, 76, 222, 114, 4718, 129, 1944, 238, 46, 8,
	4259, 33, 4258, 4819, 90, 4257, 0, 15373, 11271, 14328,
	4256, 4255, 14537, 4254, 3868, 4253, 4252, 4251, 248, 94,
	4250, 4249, 4248, 133, 4245, 107, 4244, 4240, 91, 4237,
	37, 18, 26, 42, 38, 945, 940, 4236, 4234, 71,
	159, 20, 4233, 311, 258, 4232, 4231, 4224, 4223, 110,
	4220, 58, 4219, 55, 4217, 4216, 65, 19, 43, 4211,
	4210, 235, 188, 3683, 196, 171, 4208, 145, 4207, 4206,
	4205, 83, 164, 4203, 4202, 292, 237, 240, 120, 4201,
	285, 4200, 230, 4199, 4198, 41, 4197, 4196, 278, 137,
	136, 64, 274, 161, 53, 4195, 4194, 4191, 169, 4188,
	4187, 4186, 135, 4185, 4183, 97, 4182, 4181, 52, 4180,
	166, 4175, 16, 4174, 4171, 4170, 307, 210, 241, 4168,
	4166, 202, 4165, 4164, 295, 4163, 4161, 3733, 299, 4160,
	45, 4157, 4155, 4153, 27, 4150, 4149, 233, 3505, 4148,
	4147, 12, 4146, 221,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 8, 8, 8, 8, 8,
	8, 8, 8, 8, 8, 8, 14, 14, 10, 10,
	10, 10, 11, 11, 11, 11, 11, 60, 60, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 41, 43, 42, 36, 36,
	37, 37, 38, 39, 39, 44, 46, 45, 47, 48,
	13, 13, 13, 9, 9, 9, 9, 9, 9, 9,
	9, 22, 22, 49, 49, 23, 23, 51, 51, 24,
	24, 52, 52, 645, 645, 645, 646, 646, 647, 647,
	647, 27, 54, 20, 21, 21, 21, 21, 648, 648,
	648, 648, 40, 28, 55, 33, 33, 33, 33, 33,
	233, 233, 233, 233, 26, 26, 50, 50, 277, 277,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	644, 644, 279, 279, 278, 266, 266, 267, 267, 268,
	268, 649, 649, 280, 280, 280, 281, 281, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 538, 538,
	538, 569, 569, 569, 569, 571, 571, 690, 690, 691,
	691, 691, 691, 691, 145, 145, 434, 434, 434, 64,
	64, 64, 64, 64, 634, 634, 235, 235, 235, 237,
	237, 236, 236, 236, 236, 236, 236, 236, 236, 88,
	88, 655, 655, 654, 686, 686, 653, 653, 656, 656,
	656, 234, 234, 234, 85, 85, 105, 105, 141, 141,
	141, 141, 141, 141, 141, 141, 142, 142, 143, 143,
	665, 665, 665, 238, 238, 238, 240, 240, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 245, 19, 19, 19, 124, 124, 124, 124, 124,
	124, 124, 119, 119, 573, 573, 574, 574, 229, 229,
	230, 230, 230, 230, 231, 231, 232, 232, 232, 79,
	79, 242, 242, 244, 244, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 67, 67,
	67, 67, 67, 68, 68, 68, 68, 68, 68, 69,
	69, 69, 69, 69, 69, 70, 70, 77, 77, 77,
	77, 77, 77, 77, 77, 207, 207, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 84, 84, 84, 84, 84, 94, 666, 666, 667,
	667, 681, 670, 670, 671, 671, 672, 672, 672, 673,
	673, 673, 673, 673, 680, 680, 680, 680, 680, 675,
	674, 676, 676, 677, 677, 678, 678, 678, 678, 678,
	679, 679, 679, 679, 679, 679, 679, 679, 679, 679,
	679, 679, 679, 679, 679, 679, 679, 669, 682, 683,
	683, 684, 684, 685, 685, 685, 692, 692, 692, 692,
	692, 692, 692, 692, 692, 692, 692, 692, 692, 692,
	692, 692, 692, 693, 693, 694, 694, 695, 695, 695,
	695, 695, 695, 695, 695, 695, 695, 695, 695, 695,
	695, 695, 695, 695, 695, 695, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 95, 95, 395, 395, 358, 358,
	96, 96, 96, 97, 97, 98, 98, 81, 81, 81,
	631, 631, 632, 638, 696, 696, 529, 529, 528, 528,
	100, 100, 433, 433, 101, 101, 101, 101, 101, 101,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 103,
	103, 103, 103, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 111, 111, 111, 111, 111, 112, 112,
	112, 109, 109, 109, 106, 106, 106, 104, 104, 104,
	110, 110, 110, 637, 344, 344, 108, 108, 108, 107,
	107, 107, 411, 411, 113, 113, 113, 113, 359, 114,
	114, 114, 114, 114, 114, 114, 114, 117, 117, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 531, 531, 5, 5, 272, 272, 271, 271,
	271, 271, 6, 6, 6, 275, 275, 274, 273, 115,
	115, 115, 495, 495, 120, 120, 120, 449, 449, 121,
	121, 121, 121, 121, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 144, 144, 641,
	641, 404, 404, 307, 307, 307, 307, 133, 133, 133,
	133, 134, 134, 134, 134, 135, 135, 215, 215, 151,
	151, 151, 151, 150, 150, 150, 150, 150, 150, 150,
	150, 71, 71, 71, 72, 72, 73, 73, 74, 74,
	75, 75, 76, 76, 76, 76, 76, 154, 154, 32,
	32, 32, 32, 155, 155, 687, 687, 157, 153, 153,
	153, 153, 153, 153, 153, 152, 152, 156, 156, 156,
	156, 158, 160, 160, 160, 160, 160, 159, 159, 159,
	159, 159, 161, 161, 563, 563, 419, 419, 561, 561,
	585, 585, 562, 562, 365, 365, 365, 365, 365, 366,
	366, 366, 572, 572, 572, 572, 572, 572, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 216, 216, 216, 217, 217, 222,
	222, 223, 223, 223, 224, 224, 224, 221, 221, 221,
	218, 218, 219, 219, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 227, 227, 225, 225, 226, 226,
	698, 698, 697, 697, 228, 228, 228, 228, 228, 188,
	188, 188, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 420, 420, 191, 191, 191,
	175, 175, 163, 163, 163, 163, 163, 163, 163, 163,
	241, 241, 241, 241, 168, 168, 168, 168, 168, 168,
	168, 168, 169, 169, 169, 164, 164, 177, 177, 177,
	177, 177, 170, 170, 171, 171, 171, 172, 172, 172,
	172, 199, 199, 174, 174, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 165, 165, 165, 165, 179, 179,
	179, 179, 456, 456, 456, 205, 205, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 202, 202, 202, 202, 202, 202, 657,
	657, 658, 658, 658, 195, 195, 195, 195, 195, 195,
	509, 509, 189, 189, 189, 189, 194, 194, 194, 194,
	197, 197, 197, 197, 439, 439, 186, 186, 186, 187,
	187, 187, 192, 192, 204, 193, 396, 396, 190, 190,
	196, 196, 196, 196, 198, 198, 198, 166, 166, 166,
	166, 166, 166, 166, 166, 166, 166, 167, 167, 167,
	167, 200, 200, 185, 185, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 699, 699, 181, 181,
	181, 180, 180, 180, 180, 183, 183, 184, 184, 184,
	184, 184, 184, 184, 182, 173, 203, 639, 639, 635,
	635, 635, 635, 635, 635, 635, 635, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 636, 636, 636, 636,
	636, 640, 640, 125, 125, 125, 125, 125, 125, 125,
	136, 136, 136, 136, 136, 136, 136, 139, 139, 126,
	126, 126, 126, 126, 126, 126, 129, 129, 127, 127,
	127, 127, 128, 128, 89, 89, 89, 89, 89, 18,
	18, 18, 90, 90, 298, 298, 250, 250, 250, 383,
	383, 251, 251, 373, 373, 373, 373, 246, 246, 247,
	247, 248, 249, 249, 91, 91, 700, 700, 700, 650,
	650, 650, 651, 651, 651, 651, 651, 651, 367, 367,
	368, 368, 475, 475, 475, 475, 475, 371, 371, 371,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 381,
	382, 382, 374, 374, 380, 379, 379, 378, 378, 377,
	377, 375, 376, 376, 376, 385, 385, 384, 387, 387,
	386, 474, 594, 594, 596, 596, 596, 596, 596, 596,
	596, 598, 598, 598, 598, 598, 598, 598, 598, 598,
	598, 598, 598, 598, 598, 598, 598, 598, 457, 457,
	701, 701, 702, 703, 592, 592, 592, 593, 588, 588,
	589, 589, 589, 589, 589, 369, 369, 370, 370, 370,
	370, 590, 591, 402, 402, 513, 595, 595, 597, 597,
	599, 704, 704, 704, 704, 704, 704, 705, 705, 705,
	473, 473, 472, 472, 471, 471, 393, 393, 600, 600,
	600, 600, 601, 601, 601, 601, 601, 604, 603, 602,
	602, 602, 602, 602, 93, 93, 93, 436, 436, 435,
	435, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 212,
	212, 310, 310, 310, 87, 87, 87, 15, 15, 15,
	15, 15, 15, 15, 325, 325, 16, 16, 16, 16,
	652, 652, 652, 92, 92, 92, 92, 92, 92, 391,
	391, 391, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 643, 643,
	642, 642, 311, 311, 707, 707, 99, 99, 99, 99,
	99, 99, 99, 99, 532, 532, 533, 533, 86, 86,
	86, 86, 86, 458, 458, 455, 455, 454, 454, 401,
	401, 511, 511, 511, 512, 315, 315, 316, 316, 269,
	269, 269, 35, 34, 25, 25, 29, 29, 30, 30,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 31,
	31, 57, 57, 57, 57, 58, 58, 58, 58, 61,
	61, 62, 62, 56, 56, 56, 56, 59, 59, 53,
	53, 63, 63, 63, 63, 63, 659, 661, 661, 660,
	660, 664, 664, 664, 664, 664, 664, 662, 662, 346,
	346, 663, 663, 688, 688, 689, 689, 132, 132, 137,
	137, 137, 137, 137, 138, 138, 138, 138, 140, 140,
	140, 140, 149, 149, 208, 208, 208, 208, 208, 208,
	208, 65, 65, 78, 78, 147, 709, 709, 709, 148,
	148, 148, 209, 209, 209, 209, 210, 210, 211, 211,
	708, 708, 308, 308, 468, 468, 469, 469, 710, 710,
	470, 470, 470, 470, 470, 301, 300, 302, 302, 303,
	303, 83, 83, 83, 289, 289, 288, 291, 291, 290,
	292, 292, 293, 293, 286, 286, 575, 575, 295, 295,
	295, 296, 296, 282, 282, 283, 283, 284, 284, 285,
	285, 299, 299, 570, 570, 711, 711, 123, 123, 123,
	214, 214, 357, 357, 357, 465, 465, 465, 394, 394,
	322, 322, 467, 467, 467, 467, 467, 432, 432, 432,
	213, 213, 409, 409, 422, 422, 423, 423, 525, 525,
	424, 130, 130, 131, 131, 146, 146, 254, 254, 252,
	252, 252, 252, 252, 252, 252, 252, 259, 259, 260,
	260, 261, 261, 262, 263, 263, 263, 263, 412, 412,
	264, 264, 264, 253, 253, 253, 255, 255, 255, 255,
	255, 255, 255, 258, 258, 258, 258, 265, 265, 265,
	257, 257, 611, 611, 611, 613, 613, 615, 615, 614,
	614, 610, 610, 612, 612, 706, 706, 438, 438, 438,
	390, 392, 388, 388, 389, 389, 399, 399, 397, 398,
	398, 400, 400, 510, 510, 510, 270, 270, 270, 429,
	429, 429, 429, 430, 430, 461, 461, 459, 459, 459,
	459, 460, 460, 462, 462, 462, 463, 463, 464, 464,
	426, 426, 427, 427, 428, 428, 428, 428, 491, 491,
	256, 256, 256, 406, 406, 406, 407, 407, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 482,
	482, 480, 480, 480, 480, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 515, 516, 516, 408, 408, 517,
	466, 466, 629, 629, 629, 630, 630, 508, 508, 518,
	518, 518, 518, 518, 518, 506, 506, 507, 507, 526,
	527, 527, 442, 442, 442, 442, 440, 440, 443, 443,
	443, 443, 443, 441, 441, 519, 519, 519, 519, 431,
	431, 520, 520, 520, 520, 521, 522, 522, 523, 523,
	476, 477, 477, 534, 534, 534, 534, 536, 405, 405,
	405, 405, 405, 587, 586, 586, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 550, 550, 550, 550, 550,
	550, 550, 550, 550, 550, 550, 550, 550, 550, 550,
	550, 550, 550, 550, 550, 550, 550, 550, 550, 550,
	550, 550, 550, 550, 550, 550, 550, 551, 551, 551,
	551, 551, 551, 551, 537, 537, 537, 537, 537, 541,
	541, 541, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 542, 542, 547, 547, 548, 548, 548,
	543, 544, 549, 549, 549, 549, 712, 712, 553, 553,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 539,
	539, 539, 546, 546, 546, 451, 451, 451, 451, 451,
	451, 451, 451, 451, 451, 451, 451, 451, 450, 450,
	452, 452, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 485, 485, 485, 485, 486, 486, 486,
	486, 486, 486, 486, 486, 486, 486, 486, 486, 486,
	486, 486, 486, 486, 486, 486, 486, 486, 486, 486,
	486, 486, 605, 605, 605, 605, 605, 605, 605, 605,
	487, 487, 608, 608, 609, 609, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 606,
	606, 606, 606, 606, 606, 606, 606, 606, 606, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 616, 616, 617,
	617, 619, 619, 620, 620, 621, 622, 622, 622, 623,
	624, 624, 618, 618, 625, 625, 625, 625, 626, 626,
	627, 627, 627, 627, 627, 628, 628, 628, 628, 628,
	497, 497, 498, 498, 504, 504, 504, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 364, 364, 363, 312, 312, 312, 312, 312,
	312, 417, 417, 415, 415, 415, 418, 418, 416, 416,
	414, 414, 413, 413, 494, 494, 492, 492, 496, 496,
	444, 444, 552, 552, 552, 552, 552, 552, 552, 552,
	445, 445, 445, 453, 446, 446, 447, 447, 447, 447,
	447, 488, 489, 448, 448, 448, 490, 490, 499, 503,
	503, 502, 501, 501, 500, 500, 478, 478, 479, 479,
	425, 425, 713, 713, 421, 421, 524, 524, 524, 524,
	581, 581, 361, 361, 410, 410, 360, 360, 352, 352,
	353, 353, 353, 353, 403, 403, 505, 505, 554, 554,
	555, 555, 556, 556, 557, 557, 558, 559, 560, 493,
	493, 333, 332, 319, 320, 331, 330, 329, 318, 321,
	326, 327, 328, 323, 324, 340, 339, 338, 287, 294,
	345, 347, 347, 350, 350, 351, 349, 348, 348, 335,
	336, 337, 530, 317, 354, 354, 355, 355, 355, 356,
	356, 356, 356, 313, 313, 314, 314, 341, 341, 342,
	343, 343, 334, 334, 334, 304, 304, 304, 305, 305,
	306, 306, 568, 568, 565, 565, 565, 566, 566, 566,
	668, 567, 567, 567, 567, 564, 564, 564, 564, 564,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 577, 577, 578, 578, 578, 578, 578, 578,
	578, 578, 578, 578, 578, 578, 578, 578, 578, 578,
	578, 578, 579, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 584, 584,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 3, 4, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 6, 4, 4, 6, 9,
	6, 8, 4, 4, 5, 9, 7, 9, 5, 6,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 6, 4, 6, 6, 9, 6, 9, 6,
	5, 6, 5, 1, 1, 1, 1, 1, 1, 0,
	1, 6, 6, 4, 8, 7, 10, 9, 4, 4,
	4, 3, 4, 4, 4, 7, 7, 9, 8, 9,
	5, 3, 5, 7, 4, 12, 4, 12, 1, 3,
	5, 5, 2, 5, 3, 6, 4, 4, 4, 6,
	5, 6, 5, 6, 4, 8, 3, 8, 4, 2,
	3, 10, 3, 6, 4, 3, 1, 3, 4, 4,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 3, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 3, 1, 3, 3, 3, 3, 12,
	3, 1, 1, 2, 1, 4, 1, 0, 3, 3,
	0, 4, 6, 0, 6, 4, 4, 4, 5, 7,
	6, 8, 7, 9, 8, 2, 1, 3, 1, 3,
	3, 3, 0, 2, 5, 0, 1, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 1, 3, 3, 3, 6, 4, 9, 7, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 7,
	5, 2, 0, 1, 2, 3, 1, 1, 2, 2,
	2, 2, 1, 2, 3, 3, 4, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 4, 3, 6, 6, 6,
	6, 6, 8, 4, 4, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 6, 3, 8, 5, 3, 12, 2, 0, 1,
	0, 1, 1, 0, 1, 3, 1, 3, 3, 3,
	3, 2, 2, 1, 1, 1, 1, 2, 1, 1,
	1, 1, 0, 1, 2, 2, 2, 1, 1, 1,
	4, 5, 1, 1, 1, 1, 3, 3, 2, 2,
	1, 2, 2, 2, 2, 1, 1, 1, 2, 1,
	1, 3, 0, 1, 4, 0, 4, 3, 3, 4,
	3, 4, 4, 4, 7, 3, 3, 4, 3, 3,
	3, 3, 3, 1, 0, 1, 0, 4, 3, 3,
	3, 3, 3, 6, 4, 4, 4, 3, 5, 3,
	3, 3, 3, 3, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 2, 1,
	2, 1, 2, 1, 7, 3, 2, 0, 1, 3,
	3, 1, 0, 1, 2, 2, 1, 6, 10, 5,
	1, 3, 3, 1, 1, 0, 2, 0, 2, 0,
	9, 3, 2, 0, 2, 2, 2, 2, 2, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 3,
	5, 3, 1, 3, 2, 2, 2, 2, 1, 2,
	2, 5, 3, 3, 6, 6, 3, 1, 1, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 4, 3, 1, 2, 3, 2,
	2, 2, 4, 6, 3, 1, 2, 2, 7, 5,
	7, 2, 3, 0, 3, 5, 2, 3, 0, 2,
	3, 2, 3, 2, 7, 4, 7, 8, 8, 9,
	11, 11, 6, 2, 6, 9, 4, 7, 7, 10,
	7, 10, 10, 10, 13, 5, 8, 5, 2, 2,
	1, 1, 3, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 2, 2, 4, 3, 2, 2, 1,
	2, 1, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 4,
	4, 3, 4, 1, 1, 1, 1, 5, 4, 5,
	3, 3, 2, 2, 6, 3, 3, 3, 3, 4,
	4, 3, 1, 3, 3, 2, 2, 1, 3, 3,
	3, 1, 2, 1, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 2, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 1,
	1, 1, 2, 1, 2, 2, 2, 9, 2, 1,
	0, 1, 1, 0, 1, 2, 0, 2, 2, 0,
	2, 2, 2, 2, 1, 2, 3, 3, 4, 4,
	4, 4, 3, 3, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 3, 3, 3, 2,
	3, 3, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 3, 5, 7, 3,
	3, 3, 4, 8, 6, 4, 5, 5, 5, 3,
	0, 1, 1, 1, 4, 4, 3, 4, 4, 3,
	4, 4, 1, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 5, 7, 4, 2, 6, 4,
	3, 2, 3, 4, 3, 5, 3, 6, 5, 6,
	3, 5, 6, 3, 5, 3, 5, 3, 3, 4,
	4, 5, 0, 1, 1, 1, 1, 3, 2, 3,
	4, 3, 4, 3, 5, 3, 4, 4, 3, 4,
	5, 3, 4, 3, 4, 4, 5, 3, 3, 1,
	1, 0, 2, 3, 5, 4, 6, 4, 6, 4,
	1, 0, 3, 4, 4, 5, 7, 5, 3, 3,
	3, 4, 4, 5, 2, 0, 4, 2, 3, 4,
	2, 3, 3, 3, 7, 5, 2, 0, 3, 3,
	4, 3, 3, 3, 5, 3, 3, 3, 4, 4,
	4, 4, 4, 4, 4, 4, 3, 4, 5, 4,
	4, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 4, 3, 4, 4, 5, 1, 1, 10, 10,
	3, 5, 5, 5, 3, 5, 6, 4, 4, 5,
	5, 2, 6, 3, 2, 5, 4, 2, 0, 1,
	1, 1, 1, 2, 3, 2, 2, 1, 1, 1,
	1, 3, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 2, 4, 3, 3,
	7, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 3, 3, 6, 5, 8, 3, 6,
	6, 3, 12, 15, 1, 0, 1, 2, 3, 0,
	2, 0, 4, 0, 4, 5, 4, 1, 1, 1,
	3, 3, 1, 3, 10, 13, 0, 2, 3, 1,
	1, 0, 1, 2, 2, 2, 2, 1, 1, 0,
	1, 3, 1, 1, 1, 2, 3, 3, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 0, 1, 0, 1, 1, 0, 1, 4, 1,
	0, 3, 7, 7, 1, 1, 3, 7, 1, 3,
	11, 3, 2, 0, 3, 1, 2, 2, 3, 2,
	6, 2, 1, 2, 2, 3, 6, 4, 2, 3,
	5, 5, 5, 2, 5, 5, 2, 2, 2, 0,
	1, 1, 3, 4, 10, 11, 9, 5, 3, 1,
	5, 9, 7, 11, 3, 3, 0, 2, 4, 3,
	3, 1, 6, 1, 3, 1, 2, 0, 1, 2,
	3, 0, 1, 3, 3, 2, 2, 1, 1, 1,
	4, 0, 3, 0, 4, 0, 3, 0, 2, 2,
	2, 0, 1, 1, 2, 2, 0, 3, 3, 2,
	1, 1, 2, 2, 5, 8, 4, 1, 0, 1,
	2, 2, 1, 2, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 2, 3, 1, 2, 3, 1, 4,
	2, 3, 2, 2, 4, 7, 3, 4, 6, 5,
	7, 5, 5, 3, 3, 0, 2, 2, 2, 2,
	1, 1, 1, 8, 10, 11, 8, 11, 5, 4,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 3, 0, 1, 8, 11, 3, 6,
	6, 5, 3, 4, 1, 0, 1, 3, 16, 19,
	15, 18, 4, 2, 0, 1, 0, 1, 0, 1,
	3, 2, 4, 2, 3, 1, 0, 2, 0, 1,
	1, 0, 9, 6, 6, 8, 6, 8, 5, 7,
	2, 6, 7, 4, 4, 5, 2, 4, 6, 6,
	8, 6, 7, 8, 9, 6, 7, 8, 9, 6,
	8, 6, 8, 6, 7, 8, 9, 6, 8, 6,
	8, 6, 6, 8, 8, 4, 7, 3, 0, 7,
	10, 1, 1, 1, 1, 2, 2, 3, 0, 3,
	0, 3, 0, 1, 0, 2, 0, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 1, 2, 1, 2, 1, 2,
	1, 3, 2, 2, 2, 2, 1, 1, 0, 2,
	4, 2, 1, 2, 1, 2, 3, 2, 2, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 2, 3, 2, 2, 1,
	2, 15, 17, 3, 1, 0, 4, 1, 0, 4,
	1, 0, 2, 2, 3, 0, 1, 1, 4, 4,
	5, 1, 0, 3, 0, 3, 0, 3, 0, 3,
	0, 4, 0, 3, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 4, 8, 11, 7, 10, 2, 2, 0,
	10, 3, 2, 0, 1, 3, 1, 1, 3, 3,
	5, 6, 4, 5, 4, 1, 1, 3, 3, 1,
	2, 4, 4, 2, 3, 5, 5, 1, 3, 1,
	0, 1, 2, 3, 2, 4, 2, 3, 0, 2,
	0, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 8, 8, 8, 2, 4, 4, 4,
	2, 2, 2, 2, 3, 1, 3, 1, 2, 6,
	7, 1, 0, 1, 0, 1, 0, 1, 1, 0,
	1, 5, 1, 0, 1, 0, 1, 0, 3, 3,
	5, 1, 3, 3, 4, 5, 2, 2, 0, 2,
	2, 1, 1, 1, 0, 1, 0, 2, 2, 5,
	4, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 3, 1, 3, 3, 3, 2, 0,
	4, 2, 5, 3, 2, 0, 1, 3, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 1,
	3, 2, 4, 4, 0, 4, 4, 3, 4, 1,
	5, 3, 4, 5, 5, 1, 5, 1, 3, 2,
	0, 3, 0, 2, 3, 1, 3, 2, 0, 3,
	5, 6, 4, 6, 4, 3, 2, 1, 0, 5,
	1, 0, 2, 2, 2, 1, 1, 0, 1, 1,
	1, 1, 0, 4, 2, 1, 2, 2, 4, 1,
	3, 1, 2, 3, 2, 4, 1, 0, 1, 0,
	2, 1, 0, 2, 5, 7, 2, 1, 2, 4,
	3, 5, 0, 1, 3, 5, 1, 2, 1, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 6, 6, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 3, 0, 5, 4, 1, 2, 1,
	4, 1, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 2, 5, 1, 4, 2, 5, 1, 4, 3,
	3, 0, 1, 2, 4, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 1, 0,
	1, 4, 1, 3, 3, 3, 5, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 3, 3, 2, 2,
	3, 5, 4, 6, 3, 5, 4, 6, 4, 6,
	5, 7, 3, 3, 3, 3, 3, 4, 3, 2,
	4, 2, 3, 3, 4, 3, 4, 3, 4, 5,
	6, 6, 7, 6, 7, 6, 7, 3, 4, 4,
	1, 3, 1, 3, 3, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 5,
	6, 6, 7, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 6, 1, 1, 1, 1, 1, 1, 2,
	1, 5, 5, 6, 3, 1, 1, 1, 2, 2,
	2, 4, 3, 5, 6, 8, 6, 5, 4, 3,
	2, 2, 4, 1, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 6, 6,
	8, 8, 6, 4, 6, 6, 6, 4, 1, 3,
	3, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 3, 3, 4,
	3, 4, 3, 4, 3, 4, 4, 3, 6, 5,
	5, 5, 4, 4, 3, 4, 3, 5, 0, 5,
	0, 2, 0, 1, 3, 3, 2, 2, 0, 6,
	1, 0, 3, 0, 3, 3, 3, 0, 1, 4,
	2, 2, 2, 2, 2, 3, 2, 2, 3, 0,
	4, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 7, 1,
	7, 5, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 0,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 656, -3, -209, -116, -113, -79, -77,
	-120, -121, -101, -122, -115, -144, -149, -130, -131, -132,
	-145, -151, -208, -216, -217, -218, -219, -228, -210, -211,
	-4, -64, -66, -80, -100, -102, -114, -124, -123, -125,
	-133, -141, -136, -119, -71, -146, -150, -162, -212, -213,
	-214, 33, 32, 106, 85, 164, 137, 146, 217, 415,
	467, 479, 432, 151, 455, 437, -156, -157, 500, -65,
	-78, -148, -147, 78, 138, 181, 319, 447, 53, 156,
	-7, -15, -32, -19, 30, 49, -67, -68, -69, -70,
	67, -87, -82, -95, -88, -81, -84, -85, -692, 109,
	-612, -103, -107, -140, -105, -695, 172, 238, -126, -127,
	-128, 397, -134, -135, 458, -137, -138, -139, 461, 173,
	-73, -72, 166, -252, -254, -153, -152, -154, -215, -163,
	-164, -165, -166, -167, -169, -170, -172, -199, -173, -174,
	-175, -176, -177, -178, -182, -202, -179, -180, -181, -184,
	-183, -185, -190, -186, -187, -188, -189, -191, -192, -194,
	-195, -196, -197, -198, -200, -201, 506, -193, -203, -171,
	-204, 574, 523, 87, 471, 21, -8, -9, -10, -11,
	-12, -13, -14, -18, -17, -63, -5, -6, -83, -86,
	-89, -90, -91, -99, -92, -93, -94, -611, -104, -106,
	-109, -111, -112, -108, -110, 456, 627, -255, -253, 653,
	632, 590, -168, -22, -27, -23, -24, -26, -28, -25,
	-29, -30, -31, -49, -54, -51, -52, -50, -53, -55,
	-56, -57, -58, -59, -60, -61, -62, -34, -40, -41,
	-35, -36, -37, -38, -39, -42, -43, -44, -45, -46,
	-47, -48, -20, -21, -33, 614, 623, -258, -256, -257,
	-265, 492, 598, 546, 656, 656, 656, 656, 656, 656,
	656, 656, 656, 656, 656, 656, 656, 656, 656, 656,
	656, 656, 656, 656, 656, 656, 656, 656, 656, 656,
	656, 656, -359, 2, -335, -341, -342, -343, -334, -304,
	-579, -584, 4, -576, -582, 180, 248, 357, 21, 22,
	24, 23, 25, 26, 27, 28, 30, 31, 41, 43,
	44, 45, 47, 48, 49, 50, 51, 52, 53, 57,
	59, 63, 64, 65, 66, 67, 68, 69, 73, 78,
	79, 84, 85, 86, 87, 88, 89, 90, 91, 97,
	94, 95, 96, 98, 100, 102, 103, 104, 105, 106,
	107, 108, 110, 111, 112, 114, 115, 116, 124, 125,
	126, 127, 128, 130, 137, 131, 138, 141, 135, 140,
	136, 142, 144, 145, 146, 149, 150, 151, 153, 154,
	155, 157, 158, 159, 161, 162, 164, 165, 166, 169,
	167, 170, 168, 171, 172, 173, 174, 175, 178, 186,
	187, 188, 193, 195, 196, 197, 199, 200, 203, 204,
	205, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	218, 222, 224, 225, 226, 227, 228, 229, 230, 236,
	237, 238, 240, 241, 242, 243, 244, 249, 250, 251,
	255, 257, 263, 264, 269, 265, 270, 271, 273, 277,
	278, 279, 280, 281, 282, 284, 286, 285, 290, 288,
	292, 293, 296, 297, 298, 299, 300, 301, 305, 306,
	302, 307, 308, 310, 311, 314, 312, 315, 316, 313,
	317, 320, 321, 322, 323, 324, 325, 326, 327, 328,
	329, 330, 331, 318, 319, 334, 332, 336, 337, 338,
	339, 340, 355, 350, 351, 352, 344, 345, 341, 346,
	342, 343, 347, 348, 354, 349, 359, 360, 361, 362,
	365, 234, 256, 367, 368, 371, 373, 390, 376, 377,
	378, 381, 382, 385, 388, 389, 391, 392, 393, 394,
	395, 396, 397, 398, 399, 400, 402, 403, 405, 406,
	407, 409, 410, 411, 413, 415, 416, 418, 419, 420,
	422, 423, 424, 425, 426, 427, 428, 429, 431, 432,
	434, 433, 435, 437, 439, 440, 441, 447, 448, 455,
	449, 451, 452, 453, 454, 456, 457, 458, 459, 460,
	461, 465, 463, 464, 466, 467, 469, 470, 471, 472,
	473, 475, 477, 478, 482, 483, 484, 503, 504, 526,
	479, 480, 481, 485, 486, 487, 488, 489, 491, 490,
	495, 493, 494, 496, 497, 498, 500, 502, 505, 506,
	508, 509, 510, 511, 512, 513, 514, 517, 519, 520,
	521, 522, 523, 524, 545, 525, 527, 531, 532, 533,
	534, 528, 529, 544, 536, 537, 538, 539, 541, 542,
	547, 548, 549, 550, 551, 552, 554, 555, 557, 565,
	578, 566, 567, 568, 569, 571, 574, 575, 576, 577,
	563, 579, 580, 583, 584, 588, 585, 589, 586, 587,
	590, 592, 595, 596, 597, 603, 602, 604, 605, 606,
	608, 609, 610, 615, 616, 618, 619, 620, 37, 54,
	55, 58, 60, 62, 74, 75, 76, 80, 132, 133,
	163, 176, 177, 189, 206, 207, 219, 221, 231, 232,
	233, 254, 258, 259, 261, 267, 289, 364, 366, 383,
	387, 404, 408, 412, 414, 430, 474, 501, 515, 530,
	535, 558, 559, 560, 561, 570, 572, 598, 599, 600,
	607, 617, -359, 2, -335, 374, -328, 2, -304, -304,
	415, 29, 2, 29, 403, 494, 549, 551, 2, -641,
	-404, 542, 2, 29, -307, -304, 109, 217, 492, -328,
	2, -641, 217, -404, 26, 542, 2, -304, 2, 388,
	175, 23, 28, 71, 82, 104, 149, 174, 198, 203,
	-694, 390, 423, 477, 496, 544, 555, 571, 2, 602,
	311, 493, 546, 248, 127, 576, 485, -652, 482, 483,
	388, 421, 469, 220, 591, -308, 2, 479, -304, 311,
	2, 656, 100, 79, 474, 497, -159, 2, 301, 566,
	-160, -161, -158, 558, -563, 485, 469, 334, -304, 656,
	656, 656, 29, -317, 2, -304, -317, 2, -220, 2,
	-317, -697, -227, -226, -225, 22, 448, 188, 282, 201,
	239, 339, 418, 199, 51, -220, 2, 546, 248, 485,
	127, 542, -708, 2, 566, -708, 2, 656, 656, 2,
	546, 394, 602, 493, 127, 427, 248, 576, 203, 149,
	28, 73, 49, 552, 631, 485, -652, 628, 629, 311,
	134, -634, 2, -633, 4, -582, -576, -353, -352, 546,
	552, 127, -343, -334, 645, -342, 656, 656, 656, 656,
	2, 270, 271, 425, 424, 497, 498, 29, 656, 656,
	656, 656, 656, 482, 175, 2, 174, -666, 23, 28,
	71, 99, 104, 134, 198, 390, 423, 496, 544, 548,
	555, 571, -651, 525, 73, 485, -650, -652, 379, 311,
	576, 149, -454, 127, 301, 215, 584, 551, 549, 582,
	141, 257, 587, 586, 656, 656, 656, -117, 2, 653,
	33, 32, -116, -120, 151, 500, -245, 546, 262, 2,
	-304, 656, 656, 656, 2, 270, 271, 482, 483, 29,
	656, 656, 201, -633, 542, 2, 656, 656, 656, 2,
	29, 270, 271, 482, 483, 262, 2, 73, 487, 656,
	656, 656, 656, 656, 656, 656, 656, 656, 656, 656,
	656, 656, 656, 656, 656, 656, 656, 656, 656, 656,
	656, 656, 656, 656, 656, 656, 656, 656, 656, 656,
	656, 656, 656, 656, 656, 656, 2, -206, 497, 525,
	227, 50, 49, 79, 29, 422, 84, 395, 128, 134,
	158, 577, 218, 248, 249, 278, 99, 100, -456, 47,
	271, 73, 270, 483, -657, 482, -509, 547, 486, 494,
	541, 91, 282, 479, 566, 568, 109, 592, 470, 620,
	427, 428, 539, 441, 536, 302, 167, 202, 4, 127,
	334, 469, 499, 286, 285, 578, 558, 301, 478, 398,
	89, 656, -706, 2, 546, 566, 2, -708, 2, -708,
	2, -709, 566, 617, 656, 656, 656, 656, 656, 656,
	656, 656, 656, 656, 656, 656, 656, 656, 656, 656,
	656, 656, 656, 656, -253, -255, -254, 656, 656, 656,
	656, 656, 656, 656, -206, 497, 2, 79, 29, 29,
	-397, -399, 581, 260, 160, 380, -252, -254, 2, -611,
	578, 497, -561, 2, -483, -585, -485, 643, 644, 636,
	543, 72, -363, 356, 621, -497, 134, 582, 374, -584,
	-486, -499, 163, 390, 474, -418, 8, 9, 5, 6,
	7, -313, -487, -493, 573, 179, 363, -356, 657, 10,
	653, -608, -254, -498, 38, 221, 70, -565, -355, -314,
	-537, 261, -354, -334, -605, -606, 4, -576, -577, -566,
	-540, -548, -544, -545, -551, -304, -579, 82, 118, 119,
	117, 122, 121, 304, 303, 123, 120, 499, 591, 71,
	37, 231, 232, 267, 364, 233, 80, -607, 150, -578,
	258, 259, 515, 55, 430, 189, 133, 132, 366, 60,
	58, 599, -549, 129, 558, 559, 560, 561, 206, 207,
	62, 176, 177, 387, 412, 535, 570, 572, 219, 289,
	46, 113, 202, 253, 235, 266, 268, 272, 291, 294,
	335, 353, 358, 384, 386, 468, 507, -712, 600, 530,
	74, 75, 194, -613, 433, -614, -328, -613, 656, 656,
	658, 656, -388, -390, -392, 2, 29, 147, 653, 2,
	-514, 2, -515, -519, -254, 283, -518, 653, -516, 651,
	-335, 375, -609, 475, -605, -606, -313, -334, -355, 4,
	-576, -578, 655, -393, 653, 127, 485, 546, 83, 248,
	99, 174, 203, -449, 653, -304, 29, 374, 562, 658,
	-641, -404, -389, 420, -495, 653, 374, 377, 201, 377,
	-641, 64, 98, 315, 2, 2, 2, 2, 2, 231,
	-304, 546, 126, 2, 281, 2, 2, 2, 2, 2,
	2, 2, -411, 231, 2, -335, 602, -411, 231, 2,
	-411, 231, 2, -455, 2, 93, -318, 231, 2, -304,
	-344, 231, 2, -339, -341, -350, 231, 2, -347, -304,
	-571, 231, 2, -569, 4, -576, 123, 499, -483, 2,
	-146, 2, 64, -304, 602, 2, 503, 2, 653, -159,
	2, 76, 566, 46, 497, -160, 2, -469, 2, -470,
	-300, -301, -302, -526, -303, 269, 419, 429, 624, 139,
	356, 620, -687, 201, 635, 562, -561, -561, -561, -419,
	655, -222, 57, -317, -698, -697, -698, -559, 29, -554,
	8, -555, 643, 644, -559, -559, -698, -698, 2, 2,
	2, 2, 2, -468, -469, 2, -519, 231, -335, 2,
	-332, -564, 4, -576, -582, -577, -583, -579, 29, 32,
	33, 34, 36, 38, 39, 40, 42, 61, 70, 71,
	77, 81, 83, 93, 99, 109, 117, 118, 120, 119,
	121, 122, 123, 134, 139, 143, 147, 148, 152, 156,
	160, 179, 181, 194, 198, 201, 217, 220, 223, 239,
	252, 260, 262, 283, 287, 295, 303, 304, 356, 363,
	369, 374, 375, 379, 380, 401, 417, 436, 462, 492,
	499, 518, 540, 546, 556, 562, 564, 573, 581, 582,
	591, 593, 601, 611, 612, 613, 614, -584, 82, 2,
	-519, 231, 2, -338, 231, -519, -341, 2, -318, 2,
	-483, -645, 554, 170, 449, 2, -360, 231, -335, -337,
	-341, -339, 2, 2, 2, 2, -483, 2, -573, 2,
	-568, 10, -567, 5, 4, -576, -582, -577, -486, 2,
	-497, 29, -347, 2, -569, 231, 2, 29, 29, 602,
	420, 262, 562, 658, -410, -352, -353, -560, 4, 8,
	-403, -304, 655, -483, 2, -146, -129, 2, 194, -483,
	231, 2, -146, 231, 2, -483, 231, 2, -146, 231,
	2, -304, 2, -653, 2, -686, -573, 231, 98, 231,
	-304, 2, 203, -693, 477, 575, 315, 2, 2, 571,
	2, 104, 546, 126, 2, 2, 2, 2, 2, 2,
	2, 546, -323, 2, -304, 194, -528, 262, -347, 231,
	-348, 2, 493, -707, 433, -569, 231, 2, 453, 602,
	-339, 231, 2, -339, 248, 264, -318, 231, 2, 551,
	549, 551, 549, 201, 2, 262, 2, 262, 2, -520,
	2, -521, -515, -522, 651, 375, -531, 2, -530, -567,
	598, -117, 653, -117, 653, 497, 653, -573, -335, -335,
	-483, 2, -146, -129, 2, -483, 2, -146, 2, -304,
	2, -143, -573, -142, 653, 201, 592, -304, 2, -483,
	2, -146, -129, 2, -483, 2, -146, 2, -245, 194,
	2, 127, 546, -206, 2, 194, 593, 2, 8, 2,
	239, -241, -573, 486, 186, 428, 2, 503, 2, 504,
	79, -456, 620, 79, 201, 2, 201, 2, -439, 2,
	614, 420, 201, 2, 2, -639, 2, 374, 201, 2,
	201, 2, 201, 2, 201, 2, 201, 2, -205, 498,
	567, 545, 424, 271, 2, -146, 611, -129, 271, 270,
	-483, 611, 2, -658, 194, 483, -483, 2, 565, 280,
	168, 201, -439, 2, 201, 2, 201, 2, 5, 2,
	43, 425, 526, 2, 269, 419, 526, 2, 524, 2,
	-335, 546, 602, 493, 127, 203, 29, 2, 482, 2,
	2, 94, 95, 201, 2, 201, 2, 216, 201, 2,
	441, 201, 546, -420, 655, -420, 620, 2, -431, -519,
	-468, 562, -397, -399, -206, 503, 2, -259, -429, -261,
	194, -459, -460, -262, 295, 181, 369, -263, -438, 29,
	147, -438, -438, 64, 654, 654, -687, 578, 11, 12,
	81, 43, 643, 644, 645, 646, 192, 647, 648, 641,
	642, 640, 633, 634, 638, 275, 276, 101, 637, 635,
	92, 309, 476, 182, 183, 184, 185, 450, 246, 35,
	247, 14, 15, 16, -363, 34, 379, 294, 621, 235,
	507, 636, 17, 18, 19, 266, 268, 358, 54, 239,
	-312, 390, -362, 543, 72, -483, -483, -483, -483, -483,
	-483, -483, -483, 386, 653, -425, -478, 651, -254, 653,
	653, 653, 653, -560, -254, -483, -497, 654, -416, 653,
	-254, -497, -492, 653, 474, 651, 653, -500, -483, 5,
	5, 5, 653, 655, -616, 615, 194, 653, 653, 653,
	653, 653, 653, 653, 653, 653, 653, 653, 653, 653,
	653, 653, 653, 414, -542, 653, -541, 653, -541, -541,
	603, -539, 653, 623, 616, 653, -539, 653, 653, 653,
	653, 653, 653, 653, 653, 653, 653, 653, 653, 653,
	603, 552, 658, -613, -393, 653, -421, -524, -483, 645,
	-421, -421, 374, -413, -483, 113, -442, 272, 335, 202,
	291, 468, 253, -480, 657, -480, -508, 623, -254, -516,
	-334, -254, -518, 653, -514, -508, -118, -560, -100, -114,
	-123, -146, -162, -213, -214, 645, -335, 653, 201, 653,
	655, -564, 201, -403, -318, -347, -335, -354, -355, -360,
	-329, -304, 2, 2, 146, -413, -635, 576, 485, 29,
	4, -582, -576, -353, 493, -352, 546, 127, -571, -307,
	562, 39, -494, -534, -535, -587, 657, -586, -537, -547,
	-543, -546, 404, 408, -566, 58, 599, -549, 261, 4,
	-576, -578, 258, 259, 515, 55, 430, 189, 133, 132,
	366, 60, 558, 559, 560, 561, 206, 207, 62, 600,
	530, 74, 75, -635, 576, 485, 29, 493, 194, -571,
	194, 201, -571, 2, -573, 2, 2, 163, 2, 2,
	2, -304, -280, 658, 69, 459, 163, -411, 231, -280,
	163, -280, 163, -361, 231, -360, -280, 163, -280, 658,
	163, -280, 658, 163, 655, 658, 163, -571, 2, -455,
	-563, -413, 39, -469, 2, 134, 4, 5, -710, 658,
	293, -366, 308, 355, 226, 375, 618, 367, 139, -572,
	5, 4, -493, -505, 134, 301, 261, -554, -556, 9,
	-557, 643, 644, -562, -561, 116, 655, -564, -223, 256,
	41, -317, -317, -698, -698, 8, 8, -698, -698, -317,
	-317, -277, 451, 500, 389, -276, 25, 30, 151, 250,
	340, 596, 169, -378, 251, 456, -375, 394, 163, 519,
	585, -645, -648, 481, 554, 170, 449, 96, 367, 500,
	389, 451, 163, -435, -437, 39, 125, 340, 388, 65,
	242, 313, 314, 523, 457, 607, 163, 500, 389, 451,
	389, -16, -293, 25, 151, -295, -288, 500, 30, -648,
	105, 451, 632, 627, 456, 400, 538, 417, -648, -645,
	288, -647, 610, 354, -279, 519, 585, -645, -648, 481,
	451, -278, -380, -375, 394, 163, 657, 25, 151, 451,
	500, 389, -690, -691, 30, -272, -271, 25, 151, 500,
	588, -275, 239, -274, 25, -155, -135, -154, 456, 500,
	-155, 2, 451, 389, -642, -325, -610, 239, 614, 163,
	-325, -325, -519, 231, -662, 194, 2, -655, -142, 284,
	5, 10, -573, -142, -410, 658, 658, -564, 645, 483,
	482, 163, 163, 163, 163, 271, 194, 356, -686, 2,
	356, 614, -681, -341, -694, 2, 2, 2, 2, 2,
	2, 2, -335, 231, -395, 374, -631, -632, -696, 546,
	-232, 614, -573, 356, 46, -338, 231, 2, -341, 602,
	-642, 356, -650, -340, 231, -335, 39, 653, 356, 2,
	-455, 2, 248, -610, 356, -520, -357, -335, -515, -357,
	500, -328, 39, -480, -335, 654, 658, -531, -531, -573,
	-232, 201, 653, -245, 614, 614, 271, -527, 658, -526,
	239, -574, -573, -143, -573, 454, 201, 271, -573, -631,
	-318, 2, -335, 2, 546, 273, -142, 201, 239, -232,
	-573, -573, -573, -563, 29, 504, 2, -205, 498, 567,
	95, 504, 2, -335, 546, 127, 248, 85, -662, 194,
	2, -304, -640, 194, -636, 469, 485, 576, -635, -335,
	127, -335, 127, -335, 127, -335, -335, 2, 2, 2,
	2, 2, 90, 2, -146, -483, 2, 90, 2, 49,
	520, -658, 194, 2, 565, 2, 565, 2, -304, -304,
	-304, 369, 525, 293, 614, -335, -335, -335, -336, -341,
	-341, 486, 547, 577, 483, -483, 2, -699, 2, 201,
	194, 2, 546, 248, 546, 248, 127, 201, 79, 127,
	29, 201, 546, 480, 655, 4, -280, 658, -308, -259,
	-429, -563, -430, -429, -260, -259, -262, 194, 429, 586,
	340, 505, 277, -460, -459, 29, -483, -464, 188, 339,
	-483, -462, -485, 643, 644, -555, -557, -412, 367, -253,
	-253, -253, -400, -510, -483, 417, 248, -562, -687, -536,
	-534, -534, -333, -564, 558, -483, -483, -483, -483, -483,
	-483, -483, -483, -483, -483, -483, -483, -483, -483, -483,
	-483, -483, -483, -483, -483, -483, -483, -483, -483, -483,
	-483, -483, -483, -483, -483, -483, -483, -483, -483, -483,
	-483, 294, 235, 507, 54, 239, -483, 562, -483, -483,
	-483, -483, 332, 356, 363, 573, 179, 583, 147, 367,
	-713, 540, 42, -490, -254, -417, 653, -504, 36, 518,
	29, -497, 653, 2, -478, -483, -479, -364, -362, -304,
	643, 644, 645, 646, 647, 648, 633, 634, 635, 14,
	15, 16, 638, 642, 640, 641, 192, 101, 637, 309,
	476, 92, 182, 183, 184, 185, 275, 276, 17, 18,
	19, 35, 636, -414, -413, -413, 654, 601, 29, 147,
	645, 2, 654, 658, 39, 654, -483, -414, -496, -492,
	-413, -503, -502, 611, -450, -451, 619, 318, 130, 229,
	316, -452, 489, -558, 8, -564, 645, -617, 187, 220,
	653, 654, 2, 654, 2, 654, -483, 2, 654, -483,
	2, 654, -483, 2, 654, -483, 2, 654, 2, 654,
	2, -483, -483, -483, -483, -483, -483, -483, -413, 8,
	-558, -558, 558, 558, -558, -558, -558, -550, 404, 405,
	406, 407, 296, 297, 298, 299, 408, 409, 410, 411,
	324, 325, 326, 327, 320, 321, 322, 323, 328, 329,
	330, 331, 211, 212, 213, 214, 207, 208, 209, 210,
	-550, -444, 2, -552, -413, 4, 619, 318, 130, 229,
	316, 489, 5, -444, 2, -445, 2, -483, -413, -446,
	-484, -485, 643, 644, 636, -363, -447, 2, -483, -414,
	-483, 61, 287, 564, -448, -483, 201, -413, -413, 2,
	-413, 2, -486, 2, -614, 39, -413, -406, 658, 201,
	39, -581, 4, -580, 44, 66, 107, 136, 175, 237,
	255, 265, 290, 391, 463, 464, 491, 522, 537, 569,
	609, 501, -406, -406, 653, 654, 658, -443, 224, 312,
	307, 264, -443, -514, -442, 272, -440, 384, -440, -440,
	-508, -319, 651, 660, -564, -508, -507, -506, 39, -328,
	381, -508, -508, 655, 654, -507, 652, -629, 653, 656,
	656, 656, 656, 656, -335, 653, -413, -564, 655, 527,
	2, 654, 266, 266, 266, 266, 266, 374, 475, 654,
	562, -637, -344, -350, 494, 547, -410, 658, -410, -403,
	614, -571, -116, 376, 654, 658, -405, 38, 651, 655,
	-558, 2, 2, -553, 603, 653, 653, -451, 653, 201,
	-637, -350, 547, 494, 2, -641, 542, -404, -571, 562,
	-304, 2, -335, -411, -280, 163, -411, -411, -280, 658,
	163, -318, -339, -344, -347, -350, -304, -569, -571, -280,
	-340, -687, 654, 566, -470, -365, 429, 517, 452, 495,
	542, 9, 9, 658, -564, -224, 484, 340, -317, -317,
	-317, -317, 658, -688, 99, 562, 83, 653, 485, -297,
	302, 562, -474, 231, 83, -588, 99, -321, -589, -304,
	77, 582, 417, 198, 161, -688, 99, 417, -688, 99,
	2, 250, 99, 500, 525, 653, 29, 64, -519, 43,
	43, 29, -646, -647, 288, 201, 620, 546, 248, 485,
	562, 562, -519, -437, -534, 125, 313, 314, 64, -559,
	-559, 64, -559, -559, -559, 614, -559, 614, -338, -519,
	485, 562, 562, 562, 439, 536, 439, 536, 490, -288,
	-290, -160, 490, 536, 562, 562, -160, 29, -206, 460,
	134, -711, 635, 439, 288, -647, 562, 201, 658, 43,
	43, 29, -646, 201, 562, -360, -319, 597, 45, 597,
	45, 597, 562, 45, 485, 562, 658, 45, -271, -631,
	-631, -231, -230, -304, 5, -403, -274, -573, -273, 338,
	79, 562, 562, -16, 500, -643, -309, 112, 346, 306,
	347, 103, 343, 102, 342, 110, 344, 111, 345, 604,
	359, 605, 360, 68, 341, 317, 348, 521, 349, 606,
	361, -310, -311, 154, 396, 595, 127, -569, -16, -16,
	500, 389, 451, 163, -663, 239, 29, -652, 239, -527,
	239, -527, -352, -304, 655, -146, -483, -483, -146, -483,
	-146, 49, 163, 39, 163, 2, 653, 281, 653, -369,
	356, 201, -403, -528, 658, -335, 39, -231, 378, 163,
	-569, -436, -435, 356, -340, 231, 2, 163, -707, -393,
	356, 157, 653, 427, 2, 163, -320, 231, -305, -304,
	-455, -282, 550, 163, -433, 593, -465, -146, 653, 134,
	39, -465, -422, -423, -525, -424, -321, 653, -328, -480,
	-117, -530, 654, 654, 654, -245, -394, -322, -321, 126,
	431, 431, -238, 614, -142, -143, 654, 658, -527, 239,
	528, -143, -573, -232, -232, -527, -527, -335, 194, -573,
	-142, -232, -232, -232, 2, 2, 2, 2, -439, -335,
	-318, -360, -335, -346, 239, 29, 655, -571, -571, -350,
	-351, -349, -304, -344, -439, -318, -439, -318, -439, -318,
	-439, -439, -146, -483, 525, 2, 497, 194, 194, 655,
	-439, 8, -396, 462, 5, 2, 427, 127, 546, 394,
	248, -335, -360, -335, -360, -318, 127, -318, 128, 127,
	-335, 4, -519, -430, -260, 375, 277, 505, -462, -463,
	-485, 474, 475, -463, 474, 475, 8, 9, 8, 9,
	-264, 509, 362, -411, 658, -269, 40, 143, 277, -335,
	-562, 620, 159, -483, -483, 562, -713, 540, -490, 159,
	-483, 332, 363, 573, 179, 583, 147, 367, 201, 653,
	-484, -484, 654, -415, -483, -483, 652, 662, 654, 655,
	654, -399, 658, -397, -483, -413, -413, 654, 655, -413,
	-403, 652, 652, 658, 654, -501, -502, 152, -483, 562,
	562, 562, 562, 653, 654, 655, -622, 385, 653, 653,
	-483, 654, 654, 654, 654, 39, 658, 658, 658, 654,
	658, 658, 658, 654, 654, 654, 658, 654, 620, 620,
	654, 654, 654, 654, 658, 654, 658, 654, 201, 654,
	654, -453, 401, 654, 11, 12, 643, 644, 645, 646,
	192, 647, 648, 641, 642, 640, 633, 634, 635, 92,
	309, 476, 14, 15, 16, -363, 266, 239, -484, -484,
	-484, -484, 654, -488, -489, 201, 194, 39, -448, -448,
	-448, 654, 201, -413, 654, 654, 653, -615, 311, 356,
	654, -477, -476, 612, -524, -407, 2, -514, -330, -564,
	-477, -477, -413, -483, 272, 272, -441, 593, 374, -443,
	-514, -507, -560, -482, -481, 196, 40, 143, 350, 351,
	352, 234, 197, -507, -328, -393, -507, -507, -564, -508,
	-508, -506, 654, -630, -560, 654, -408, -517, -609, -399,
	655, -564, -242, -610, -207, 5, 363, -207, -207, -207,
	-207, -335, -571, 562, 562, 239, 239, -410, 26, -661,
	614, 402, -534, 651, 652, 8, -564, 653, -558, -558,
	-558, -571, 201, 201, 239, 239, 374, -641, 201, -569,
	2, -280, -411, -280, -280, -360, -361, -280, -280, -280,
	-434, 614, -561, -469, 580, 88, 429, 558, -561, 124,
	484, -276, 451, 500, -321, -321, -335, -249, -248, -246,
	-304, 5, -345, -304, 215, 440, -569, 356, -474, 231,
	-281, 356, 231, -329, -534, 653, -457, 616, 277, 277,
	593, -321, -329, 277, 231, -321, 231, -329, 2, -329,
	-644, 429, 368, -483, -247, -246, 64, -376, 300, 427,
	357, -277, 451, 500, 389, -146, -146, -146, 653, -687,
	593, 146, -335, -360, -335, -345, -569, -340, 500, 389,
	451, 353, -354, -559, -559, -559, -435, 500, 389, 451,
	-345, -569, -338, -569, -287, 231, -304, 439, -287, 231,
	439, 439, 439, 439, 485, -318, 439, 620, 48, -711,
	562, 201, -483, -483, -278, -146, -146, -146, 653, -319,
	-279, 451, 5, 231, -321, 5, -321, 231, 5, -304,
	-321, -345, -569, -691, 25, 151, -321, -232, 658, 635,
	635, -275, 635, -345, -569, -309, 396, -655, 363, 5,
	10, 589, -318, -642, -325, 485, 562, 562, -519, -659,
	-660, 217, 467, 485, 470, -571, -142, -235, 614, -142,
	-229, 243, 645, -634, -573, -573, -304, -670, -671, -672,
	-673, -680, -668, -675, 239, 383, 254, 601, -565, -534,
	4, -576, -304, -367, -370, -368, -321, -475, -474, -592,
	-593, -588, 294, 248, 582, 264, 180, 99, -250, -251,
	616, 614, 163, -358, -335, 651, -232, -632, -529, 180,
	492, 653, -347, -348, 163, -393, 356, -569, 602, 39,
	163, 653, 2, 2, -339, 374, 356, -320, 231, -283,
	153, -711, -318, -477, -407, -432, -467, 462, 374, -394,
	598, -328, -432, -409, 658, 201, 635, 655, -394, -523,
	645, -117, -117, -232, 653, -573, 654, 658, 655, 653,
	635, 635, -240, 378, -239, 155, 279, 263, 511, 512,
	513, 514, 145, 510, 131, 337, 244, 552, -527, -573,
	-238, -143, 201, -527, 239, 201, -74, 614, 546, 239,
	-232, 657, 485, 470, -304, 655, -439, -439, -439, 497,
	497, -304, 194, -403, -331, -564, -318, -335, -332, -360,
	194, 194, -318, -318, 586, -463, 375, 305, -510, -270,
	622, -335, 657, -483, -483, 159, 159, -483, -484, -484,
	-483, 159, 201, 653, -483, -494, 34, 34, 654, 658,
	-479, -483, -362, 654, 601, -399, -399, 654, 645, -564,
	657, 654, -492, 156, -483, 556, 318, 229, 316, -452,
	316, -452, -452, -558, 5, -564, 645, -623, -324, 653,
	-304, 612, -398, 380, 654, -536, -534, -483, -483, -483,
	-483, -483, -558, -539, -539, -554, -554, -483, -488, -483,
	-536, -534, -484, -484, -484, -484, -484, -484, -484, -484,
	-484, -484, -484, -484, -484, -484, -484, -484, -484, -484,
	-484, -484, 147, 356, 367, -484, -489, -488, -483, -483,
	-534, 654, 654, 654, -413, -116, 653, 311, -426, 220,
	-483, -527, 658, -426, -426, 654, -514, -514, 653, -483,
	272, 652, 658, 661, 635, 635, -393, 655, -506, -507,
	652, 654, 658, 654, 658, -466, 39, 654, -564, -477,
	-244, -243, 144, 57, 114, 142, 363, 371, 200, 225,
	426, 159, 195, 153, 266, -661, -571, -571, 485, 485,
	377, 217, 5, 8, 651, 652, 655, -558, 654, 654,
	654, -571, -571, 485, 485, -635, 576, 485, 29, 201,
	-571, -280, -280, 126, 340, -483, -221, 614, 616, 562,
	562, 654, 658, 635, 64, 239, 163, 356, 595, 356,
	-589, 161, -594, -483, 653, 248, 653, 653, 2, -266,
	-267, -268, 151, 500, 25, -689, 2, 593, 163, -280,
	163, -280, 618, 654, 658, -376, 653, 653, 562, 485,
	-297, 562, 614, -413, -483, -233, 134, -563, -648, 657,
	-648, 657, 485, 562, 562, 485, 562, 562, 356, -304,
	163, -304, -711, -304, 614, 178, 178, 620, -287, -483,
	-483, 194, 562, 614, -413, 562, -538, 52, 27, 356,
	-339, -280, 163, 562, 562, 576, 500, -230, -573, -573,
	-142, -655, -573, 363, -16, -345, -569, -340, 500, 389,
	451, -641, -641, 217, -350, -663, -527, -237, 378, -236,
	155, 466, 145, 279, 244, -527, -235, 201, 262, 614,
	654, 658, 134, 635, -668, -675, -680, -675, 383, 2,
	654, 654, 658, 658, -595, -281, -335, -320, 248, 248,
	-327, -305, 39, 371, 371, 653, -335, -96, 614, -526,
	-560, -326, -304, -421, -231, 46, -338, 39, 163, -642,
	-340, -146, -340, -532, -533, 5, 39, -335, 163, 374,
	356, -284, 286, -711, -568, -610, -399, -432, -421, 357,
	97, 654, -477, -423, -407, -483, 2, 654, -573, -232,
	-245, -322, 2, -574, -573, -573, 658, 653, 635, 635,
	635, 635, 635, 635, 635, -238, -527, -142, -238, -143,
	-146, 378, -335, -142, 645, -345, -346, 645, -439, 5,
	-382, -381, 394, 367, -382, 474, 474, 375, 188, 282,
	-269, -319, -483, -483, 159, 34, 34, -483, -483, -494,
	654, -483, -483, -413, 652, 5, -483, 654, 654, 8,
	-483, 654, 655, -624, -304, -483, 654, 64, 654, 654,
	658, 658, 654, 654, 654, 654, 654, 654, 654, -489,
	201, 147, 367, 653, 654, 654, -116, -491, 223, 64,
	-514, -491, -491, -441, -403, -514, -481, -319, 651, -319,
	651, -564, -560, -517, 653, 655, -243, 635, -573, -573,
	2, 2, 5, 5, 426, 356, 363, 5, -207, -661,
	-661, 614, -350, -350, 377, 652, 2, 651, -564, 654,
	-350, -350, 201, -637, -350, 547, -571, 126, 194, 228,
	228, -321, -321, -248, -561, 546, 474, -287, 417, -474,
	163, 163, -596, 99, -598, 81, 180, 109, 356, 363,
	582, 417, 77, 134, 374, 436, -701, -702, -703, 39,
	625, 626, 654, -401, -511, -609, 653, -304, -401, -403,
	356, 533, 134, 374, 356, 134, 374, 608, 126, 2,
	576, 84, -321, -329, -246, -403, -403, -335, -345, -569,
	171, 654, 658, 635, 2, 645, 645, -345, -569, -340,
	-345, -569, -338, 163, 598, -287, -287, 598, 392, 178,
	562, -146, -483, 171, 654, -319, 5, 5, 163, -316,
	81, -321, 5, -321, -339, 126, 614, 485, 562, 562,
	374, 374, 377, -659, -660, -235, 658, 653, 635, 635,
	635, 635, 635, -235, -574, -142, 2, 464, -672, -483,
	-483, -675, -675, -383, 250, -321, -593, -590, -591, 417,
	-475, -597, -599, 180, 417, -371, 653, -320, -305, 653,
	-146, 2, -249, 653, -369, 378, 652, 201, 654, -569,
	-436, -146, -340, -393, -391, 614, -393, 654, 658, 157,
	-458, 593, -319, -335, 163, -285, 285, -711, -568, -282,
	-461, -459, 148, 653, 374, -146, -399, 635, 654, 126,
	654, -239, -240, -573, -142, -573, -573, -573, -142, -573,
	-238, -665, 39, -527, -75, -76, 248, 99, 399, -232,
	-332, 546, 248, 653, 653, -269, -483, -483, -483, 654,
	-399, -564, 645, -618, 394, 654, -510, -483, -483, -484,
	201, 653, -494, 654, -619, 613, -483, -427, -428, -483,
	472, 115, 221, -619, -619, 654, -560, -560, 2, -573,
	2, 2, 363, 2, 2, 2, 562, 562, 651, 2,
	201, 201, -571, 201, 201, 239, -146, 239, 39, 439,
	-474, -329, -329, -333, -326, 180, 231, 363, 608, -457,
	277, 653, -484, 586, -335, 653, 2, 230, 230, 31,
	64, -704, 139, 252, 654, 658, -512, -315, -304, -483,
	-512, 654, 654, 363, 586, 363, 608, -483, 586, -534,
	653, -280, -280, 654, 654, -483, 562, -563, 106, -561,
	2, -648, -287, -403, -403, -318, -483, 194, -483, 562,
	5, -280, -333, -280, -280, -316, 576, 373, -345, -569,
	-340, -664, 547, 494, 577, 486, 204, 473, -664, 194,
	-236, -237, -573, -483, 573, 179, -142, -142, -235, -667,
	501, -377, -378, 2, -595, 277, -326, 277, 241, 162,
	-401, 653, 653, -403, -700, 614, 654, -367, -250, -97,
	-98, 563, -526, -638, -357, -393, 39, 340, 126, 39,
	5, 653, 653, -304, 374, 653, -319, -299, 98, -711,
	-568, -283, -432, 357, -403, 99, -461, -490, -232, 653,
	-232, 654, 552, -238, 658, 29, 653, 29, 653, -335,
	-360, -413, -413, 654, -399, 64, 658, 654, 654, -484,
	-494, 654, -620, -621, -324, 658, 653, 653, 502, 652,
	652, 2, -571, -571, 2, -571, -571, -571, -571, 485,
	-287, 417, -304, -589, -598, -326, 356, -251, 593, 614,
	-483, -484, -306, 653, -483, 653, 653, 39, 134, 252,
	140, 236, -473, -705, 108, 534, 240, -511, -269, 654,
	-472, 593, 436, -484, -316, -401, 653, 653, 653, 635,
	201, -146, 653, -538, -280, -339, 635, 562, 2, 2,
	201, -641, 654, -654, 434, -674, -675, -250, 653, -251,
	-372, 86, 100, 135, 230, 205, 249, 525, 531, 29,
	-372, 654, -401, -401, 654, -373, 374, 126, 340, 654,
	39, -98, 9, -477, 39, -146, 126, -146, -532, -401,
	-335, -401, 374, -289, -288, 295, -568, -284, 654, -329,
	-432, -574, -560, 4, -76, -403, -403, 654, 654, -625,
	427, 475, 222, -413, -400, 654, 658, 39, -428, 2,
	2, 2, -661, -661, -350, 439, -281, 163, 224, 654,
	-600, 310, -304, 654, -436, -436, 39, 140, 236, -379,
	-375, 653, -270, -512, -251, 224, -335, -649, 593, 654,
	-385, -384, -381, -387, -386, -381, -413, -561, 106, 392,
	-413, -316, -142, -571, -571, 374, -656, 202, -655, -676,
	-677, -678, 39, 281, 569, 613, -679, 66, 464, 529,
	237, 522, 609, 175, 491, 290, 356, 107, 475, 537,
	500, 391, -373, -402, -513, -321, -472, 654, 654, 87,
	126, -383, -146, -146, 2, -391, 654, 654, -458, 654,
	-335, -286, -575, 439, 441, -711, -285, -477, 148, 654,
	654, 654, 654, -626, -627, 54, 579, 116, -483, -626,
	-626, -621, -623, 201, 180, -471, 623, -601, -604, -603,
	630, 508, 202, 393, 654, 533, 607, 654, 654, -704,
	-403, -471, -393, -483, -472, 654, 658, 598, 654, 658,
	598, 654, 201, 654, -280, -661, -280, -664, -234, 614,
	49, -685, -682, 53, 463, -678, -669, 5, -568, 374,
	363, 491, 136, 265, 290, -505, -505, -304, -298, -297,
	654, 658, -473, -472, -379, 416, 141, 151, -377, -700,
	-472, 653, -473, 653, -296, -295, -711, -554, -299, 148,
	357, 586, -232, -628, 161, -627, 413, 193, 474, 413,
	193, -628, -628, -571, -326, -251, 59, -603, 630, -604,
	630, 586, 141, -477, 654, -600, -251, -384, 239, -386,
	201, 392, 201, 482, -655, 31, 44, -483, 363, 374,
	136, 265, -251, -513, -379, -473, -251, 475, 475, 2,
	-250, -373, -473, -401, -379, -401, -292, -293, -294, -403,
	-289, 357, 586, 500, 116, 220, 557, 340, 34, 635,
	-602, 340, 459, 69, 500, -602, -601, 653, 653, -571,
	378, -684, 255, 363, -251, -379, -477, 2, -373, -379,
	654, -251, 654, -570, 389, -286, 500, -422, 474, 382,
	-627, -483, 24, 363, 134, -704, -413, -413, -280, -231,
	653, -683, 156, -3, -682, 255, -477, -251, -298, -251,
	-472, -477, -473, -291, -290, 490, -711, -296, -422, -477,
	654, 654, -231, 659, -477, -477, -473, -379, -569, -292,
	-477, -374, -375, 562, 654, -379, -251, -291, 653, -251,
	-477, -413, -477, 654, -374,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 1672, 1674,
	669, 670, 672, 673, 674, 676, 677, 679, 681, 683,
	684, 685, 687, 688, 690, 691, 692, 693, 694, 696,
	698, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 789, 791, 0, 1654,
	1656, 1658, 1660, 0, 0, -2, -2, 0, -2, -2,
	44, 45, 47, 49, 0, -2, 389, 391, 393, 395,
	0, 427, 429, 430, 432, 434, 435, 437, 439, -2,
	0, 600, 601, 603, 605, 607, -2, 0, 1233, 1235,
	1237, 0, 777, 779, 0, 1240, 1242, 1244, 0, 0,
	801, 802, 0, 1775, -2, 793, 795, 797, 799, 878,
	880, 882, 884, 886, 888, 890, 892, 894, 896, 897,
	899, 901, 903, 905, 907, 908, 910, 912, 914, 915,
	917, 918, 920, 922, 924, 926, 928, 930, 932, 934,
	936, 938, 940, 942, 944, 946, -2, 949, 950, 951,
	953, -2, 0, -2, -2, 1668, 51, 53, 55, 57,
	59, 61, 63, 65, 67, 69, 71, 73, 546, 548,
	550, 552, 554, 557, 559, 561, 563, 1833, 609, 611,
	613, 615, 617, 619, 621, 0, 0, -2, 1847, 0,
	0, 0, 1042, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 133, 134, 135, 136, 137, 138, 139,
	88, 89, 90, 92, 93, 94, 95, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 130, 131, 86, 0, 0, 1806, 1808, 1810,
	1812, -2, 0, 0, 8, 12, 14, 16, 18, 20,
	22, 24, 26, 28, 30, 32, 36, 38, 40, 42,
	1673, 1675, 671, 675, 678, 680, 682, 686, 689, 695,
	697, 699, 654, 655, 658, 2549, 2567, 2568, 2569, 2572,
	2573, 2574, 2575, 2576, 2577, 3102, 3183, 3184, 2600, 2601,
	2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611,
	2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621,
	2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631,
	2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641,
	2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651,
	2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661,
	2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671,
	2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681,
	2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691,
	2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701,
	2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711,
	2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721,
	2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731,
	2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741,
	2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751,
	2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761,
	2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771,
	2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781,
	2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791,
	2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801,
	2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811,
	2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821,
	2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831,
	2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841,
	2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851,
	2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861,
	2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871,
	2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881,
	2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891,
	2892, 2893, 2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901,
	2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911,
	2912, 2913, 2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921,
	2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929, 2930, 2931,
	2932, 2933, 2934, 2935, 2936, 2937, 2938, 2939, 2940, 2941,
	2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949, 2950, 2951,
	2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959, 2960, 2961,
	2962, 2963, 2964, 2965, 2966, 2967, 2968, 2969, 2970, 2971,
	2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979, 2980, 2981,
	2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991,
	2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999, 3000, 3001,
	3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 3028, 3029,
	3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038, 3039,
	3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048, 3049,
	3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058, 3059,
	3060, 3061, 3062, 3063, 3064, 3065, 3066, 3067, 3068, 3069,
	3070, 3071, 3072, 3073, 3074, 3075, 3076, 3077, 3078, 3079,
	3080, 3081, 656, 657, 1427, 0, 738, 736, 2532, 739,
	2857, 741, 743, 594, 595, 596, 597, 598, 599, 0,
	770, 2961, 753, 1845, 771, 773, 774, 775, 776, 733,
	731, 0, 775, 770, 2605, 2961, 768, 1652, 1653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 608, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 525, 1490, 1491, 1492, 1637, 1638, 2912, 1683, 0,
	265, 790, -2, -2, 3066, -2, 832, 833, -2, -2,
	847, 851, 842, 3071, 0, 2915, 2898, -2, 854, 1655,
	1657, 1659, 954, 955, 956, 2553, 960, 958, 970, 971,
	974, 0, 991, -2, 0, 2601, 2880, -2, -2, 992,
	993, -2, -2, -2, -2, 972, 973, 0, 0, 0,
	0, 0, 1685, 1677, 1680, 1678, 1679, 46, 48, 50,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 275, -2, -2, -2, -2, 0, 0,
	2967, 2663, 2500, 2569, 2503, 2498, 390, 392, 394, 396,
	397, 0, 0, 0, 0, 0, 0, 0, 428, 431,
	433, 436, 438, -2, 0, 440, 0, 524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 589, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1307, 1299, 1300, 1557,
	0, 0, 0, -2, 602, 604, 606, 659, 660, 0,
	1834, 1834, 667, 668, -2, 0, 0, 0, 0, 351,
	341, 1234, 1236, 1238, 1239, 0, 0, 0, 0, 0,
	778, 780, 0, 0, 2961, 315, 1241, 1243, 1245, 1246,
	0, 0, 0, 0, 0, 0, 353, 0, 0, 794,
	796, 798, 800, 879, 881, 883, 885, 887, 889, 891,
	893, 895, 898, 900, 902, 904, 906, 909, 911, 913,
	916, 919, 921, 923, 925, 927, 929, 931, 933, 935,
	937, 939, 941, 943, 945, 947, 948, 999, 0, 0,
	0, 0, -2, -2, -2, 0, 0, 0, -2, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 1111, 0, 0, 0, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, -2, 0, 1204, 0, 0, 1002, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 0, 1084, 1109, 1110,
	1120, 952, 0, 1470, 1835, 1685, 1662, 1663, 1664, 1669,
	1671, 1665, 1666, 1667, 52, 54, 56, 58, 60, 62,
	64, 66, 68, 70, 72, 74, 547, 549, 551, 553,
	555, 558, 560, 562, -2, 1804, 1805, 610, 612, 614,
	616, 618, 620, 622, 781, 0, 784, 0, 1004, 783,
	-2, 0, 1839, 1839, 1839, 0, 0, 1805, 1803, 0,
	0, 0, 787, 788, 858, 859, 2112, 0, 0, 0,
	0, 0, 0, 0, 0, 2372, 2200, 0, 860, -2,
	2233, 2235, 3040, 2829, 3066, 2371, 2237, 2238, 2239, 2240,
	2241, 0, 2243, 2244, 2245, 2246, 2247, 2248, 0, 2250,
	0, 2255, 2256, 2257, 0, 3047, 2475, 2563, -2, 0,
	0, 3054, 2559, 0, 2338, 2273, -2, -2, 2586, 2565,
	2044, 2045, 2046, 2047, 2048, -2, -2, 3085, 2277, 2278,
	2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 0,
	3028, 3048, 3049, 3055, 3057, 3050, 3037, 2298, 2678, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 2071, 2080, -2, -2, -2, -2, -2, -2,
	-2, 3041, 3042, 3060, 3063, 3070, 3075, 3076, 3046, 3056,
	3084, 3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093, 3094,
	3095, 3096, 3097, 3098, 3099, 3100, 3101, 2072, -2, -2,
	-2, -2, 0, 1822, 2873, 1825, 1427, 1823, 1807, 1809,
	0, 1811, 0, 0, 0, 1816, 1842, 1840, 0, 1891,
	1820, 1821, 1914, 1914, 1938, 0, 1919, 0, 1938, 1834,
	1965, 0, 1925, 2903, 2274, 2275, 0, 2569, 2564, -2,
	-2, 3082, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 734, 0, 740, 742, 0, 0, 0,
	0, 770, 769, 1844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 528, 529, 530, 531, 532, 3048,
	0, 0, 0, 537, 0, 539, 540, 541, 542, 543,
	544, 545, 235, 3048, 627, 652, 0, 235, 3048, 630,
	235, 3048, 633, 0, 636, 1555, 235, 3048, 639, 2528,
	235, 3048, 642, 644, 2536, 235, 3048, 648, 2543, 2541,
	649, 0, 651, 255, 251, 252, 253, 254, 1648, 1649,
	1650, 1651, 0, 1682, 1556, 792, 0, 818, 0, 830,
	831, 3036, -2, 0, 2926, 835, 836, -2, 838, 1686,
	1690, 1691, 1692, 1693, 1694, 0, 0, 0, 0, 1699,
	0, 0, 0, 0, 825, 826, 845, 846, 852, 855,
	0, 963, 959, 975, 0, 990, 0, 991, 991, 2517,
	2508, 2509, 0, 0, 991, 991, 0, 0, 994, 995,
	996, 997, 998, 1676, -2, 85, 0, 3048, 1965, 87,
	0, 2522, 2595, 2596, 2597, 2598, 2599, 3083, 3103, 3104,
	3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114,
	3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123, 3124,
	3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134,
	3135, 3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144,
	3145, 3146, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154,
	3155, 3156, 3157, 3158, 3159, 3160, 3161, 3162, 3163, 3164,
	3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173, 3174,
	3175, 3176, 3177, 3178, 3179, 3180, 3181, 3182, 3085, 91,
	0, 3048, 96, 0, 3048, 0, -2, 114, 0, 132,
	0, 159, -2, -2, -2, 140, 0, 3048, 0, 2497,
	-2, 0, 247, 342, 343, 344, 0, 715, 0, 724,
	354, 355, 2582, 2583, 2591, 2592, 2593, 2594, 0, 821,
	2372, 0, 0, 1271, -2, 0, 1483, 1485, 1485, 0,
	-2, 0, 0, 0, 1222, 2494, 2499, 1223, 1224, 2518,
	1225, 2504, 0, 398, 399, 400, 401, 402, 0, 403,
	3048, 405, 406, 0, 408, 409, 3048, 411, 412, 0,
	414, 0, 416, 0, 290, 296, 294, 3048, 0, 3048,
	442, 445, 0, 526, 0, 523, 0, 507, 508, 0,
	510, 0, 0, 0, 515, 516, 518, 519, 520, 521,
	522, 0, 567, 565, 2533, 585, 368, 0, -2, 3048,
	0, 1268, 0, 0, 1535, -2, 0, 1476, -2, 0,
	1542, 3048, 1538, 0, -2, 0, 1832, 3048, 1703, 1303,
	1304, 1305, 1306, 1977, 591, 0, 1739, 0, 1741, 0,
	1761, 1971, 1914, 0, 0, 1976, 0, -2, 712, 2552,
	-2, 662, 0, 663, 0, -2, 0, 368, 0, 0,
	1249, 1251, 1252, 1254, 1255, 1258, 1259, 1260, 1261, 0,
	1263, 1951, 316, 318, 0, 0, 0, 0, 1248, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 0, 585,
	803, 0, 0, 1000, 1001, 0, 0, 1019, 1020, 1021,
	0, 0, 368, -2, -2, -2, 1029, 0, 1036, 1039,
	-2, 0, 0, 0, 0, 1046, 0, 1051, 1052, 1053,
	0, -2, 0, 1060, 1062, 1232, 1064, 0, 0, 1066,
	0, 1070, 0, 1073, 0, 1075, 0, 1077, -2, -2,
	-2, 1085, 1086, -2, 1091, -2, 0, 1095, -2, 0,
	1098, 0, 1101, -2, 0, 1111, 1107, 1108, 0, 0,
	0, 0, 1128, 1129, 0, 1138, 0, 1141, 1142, 1143,
	0, 0, 1148, 1149, 0, 1151, 1152, 1153, 1155, 1156,
	1157, 0, 2998, 2923, 2663, 2710, 0, 1166, -2, 1172,
	1174, 0, -2, 0, 1190, 0, 1194, 0, 0, 1203,
	0, 0, 0, 1003, 0, 1012, 1013, 1014, 235, 1969,
	1661, 0, -2, 0, 782, 0, 786, 1864, 1790, 1787,
	0, 1861, 1862, 1791, 0, 0, 0, 1798, 0, 1837,
	1838, 0, 0, 0, 1777, 1778, 0, 0, 0, 0,
	0, 0, 2377, 2378, 2379, 2380, 2393, 2381, 2382, 2392,
	2390, 2391, 2383, 2384, 2389, 2403, 2404, 2394, 2395, 2385,
	2398, 2396, 2397, 2399, 2400, 2401, 2402, 0, 0, 2408,
	0, 2386, 2387, 2388, 2416, 0, 0, 2417, 0, 2419,
	0, 2409, 2405, 2406, 2407, 0, 2179, 2181, 2483, 0,
	0, 0, 2415, 2410, 2411, 2117, 2118, 2119, 2120, 2121,
	2154, 2158, 2159, 0, 0, 2234, 2480, 2479, 2236, 0,
	0, 2431, 0, 2249, -2, 0, 2372, 2426, 0, 0,
	2258, 2259, 2260, 0, 0, 2431, 0, 0, 2474, 2270,
	2271, 2109, 0, 0, 2340, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2058, 2057, 0, 2059, 0, 2060, 2061,
	2068, 2081, 0, 0, 0, 0, 2085, 0, 0, 0,
	0, 0, 0, 0, 2455, -2, 0, 0, 0, 0,
	2073, 0, 0, 1824, 0, 0, 1895, 2484, 2488, 2489,
	1895, 1895, 0, 0, 2432, 1962, 1962, 0, 0, 1957,
	1957, 1957, 1955, 1938, 0, 1938, 1948, 0, 1938, 1938,
	0, -2, 1919, 0, 0, 1948, 0, 1932, 700, 702,
	704, 706, 707, 708, 710, 1966, 1967, 0, 0, 0,
	0, 2570, 0, 0, 0, 0, 0, 0, 2555, 0,
	0, 2527, 423, 424, 0, 0, 0, 2980, 2915, 0,
	-2, -2, -2, -2, 2923, 0, 0, 2663, 745, 772,
	0, 1834, 0, 2434, 1992, 1996, 0, 1998, 1999, 2000,
	2001, 2002, 0, 0, 1993, -2, 2069, 2071, 2092, 2587,
	2588, 2589, 2052, 2053, 2054, 2055, 2056, 2064, 2051, 2051,
	2051, 2062, 2091, 2083, 2091, 2087, 2037, 2038, 2039, 2074,
	2075, 2076, 2077, 0, 2980, 2915, 0, -2, 0, 756,
	0, 0, 0, 1772, 306, 307, 527, 0, 534, 535,
	536, 0, 623, 0, 233, 234, 0, 235, 3048, 628,
	0, 631, 0, 235, 3048, 2492, 637, 0, 640, 0,
	0, 646, 0, 0, 0, 0, 0, 235, 1774, 0,
	0, 0, 0, -2, 840, 848, 849, 850, 0, 1688,
	0, 1695, 869, 870, 871, 1697, 1698, 0, 1700, 843,
	872, 873, 874, 875, 876, 877, 0, 2506, 2507, 2512,
	2513, 0, 0, 841, 862, 844, 0, 856, 966, 961,
	962, 976, 977, 0, 0, 2510, 2511, 0, 0, 982,
	983, 141, 1634, 0, 0, 188, 0, 1634, 1634, 0,
	0, 0, 0, 216, 0, 0, 1337, 0, 0, 0,
	0, 159, 173, 184, 153, 154, 155, 0, 0, 0,
	0, 0, 0, 97, 1449, 0, 1452, 0, 0, 0,
	0, 0, 0, 0, 1465, 1468, 0, 0, 0, 0,
	0, 116, 117, 0, 0, 122, 123, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 1736, 0, 163, 159,
	0, 0, 158, 160, 143, 0, 0, 159, 174, 186,
	0, 222, 224, 1334, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 257, 0, 714, 716, 585, 585, 0,
	0, 722, 0, 725, 0, 819, 823, 824, 0, 0,
	820, 822, 0, 0, 1477, 0, 0, 0, 1831, 0,
	0, 0, 0, 3048, 1632, 0, 1615, 0, 1951, 2757,
	-2, -2, 316, 1951, 1221, 0, 0, 2570, 2502, 0,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 305,
	0, 0, 0, 451, 0, 517, 506, 509, 511, 512,
	513, 556, 1396, 3048, 0, 0, 589, 580, 0, 584,
	0, 0, 588, 0, 0, 1448, 3048, 1446, 2537, 0,
	1474, 0, 1534, 1427, 3048, 2535, 0, 0, 0, 1543,
	2579, 1552, 1556, 1724, 0, 593, 0, 1742, 1744, 0,
	0, 1972, 0, 1974, 1914, 1834, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 1262, 325, 0, 1950,
	0, 0, 356, 1951, 316, 2886, 0, 1247, 368, 368,
	1951, 805, 1951, 807, 0, 0, 1022, 0, 0, 1025,
	368, 368, 368, 1034, 1035, 1037, 1038, -2, -2, -2,
	-2, 1040, 1041, 1135, 0, 0, 0, 1134, 1630, 0,
	1056, 1059, 1063, 0, 1207, 2898, 2915, 2980, 1230, 1135,
	2663, 1135, 2663, 1135, 2663, 1135, 1135, 1079, 1123, 1131,
	1090, 1097, 0, 1092, 1096, 1099, 1102, 0, 1104, 1112,
	0, -2, 0, 1115, 0, 1117, 0, 1119, 1135, 1136,
	1139, 0, 1147, 1150, 0, 1158, 1159, 1160, 1161, 2550,
	1162, 1163, 1164, 1165, -2, 1169, 1170, 0, 1181, 1186,
	1187, 1183, 0, 0, 0, 0, 0, 0, 1197, 1198,
	0, 0, 0, 1206, 0, 1015, 1469, 0, 1670, 1864,
	1790, 785, 1781, 1863, 1782, 1789, 1792, 0, 0, 1794,
	0, 1796, 0, 1859, 1860, 1867, 1868, 0, 1878, 1879,
	1871, 0, -2, 0, 0, 1874, 1875, 1800, 0, 1817,
	1818, 1819, 1848, 1851, 1571, 0, 3183, 828, 0, 2113,
	1987, 2114, 2115, 2521, 0, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, -2, -2, -2, -2, -2,
	-2, -2, -2, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2149, 2150, -2, -2, -2, 2155, 2156, 2157,
	-2, 2418, 2420, 0, 2483, 0, -2, 0, -2, -2,
	-2, -2, 2176, 0, 2178, 2183, 2185, 2187, 0, 0,
	0, 0, 2482, 2197, 2466, 2467, 0, 0, 2374, 2375,
	2376, 2182, 0, 2201, 2481, 2478, 0, 0, 2412, 0,
	2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386,
	2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396,
	2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 0, 2430, 1847, 2262, 0, 0, 0,
	0, 2269, 2254, 2428, 0, 2427, 0, 0, 0, 2438,
	0, 2473, 2469, 0, 2519, 2108, 2095, 2096, 2097, 2098,
	2099, 2100, 2110, 0, 2516, 2556, 2562, 2348, 0, 0,
	0, 2299, 2300, 2301, 2302, 2303, 0, 2305, 2306, 0,
	2308, 2309, 0, 2311, 2312, 0, 2314, 2315, 2316, 2317,
	2318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2005, 2006,
	2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016,
	2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026,
	2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036,
	0, 0, 2320, 0, 2441, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 2322, 0, 2324, 2432, 2452, 0,
	0, 2202, 0, 0, 0, 0, 0, 2327, 2432, 2460,
	0, 0, 0, 0, 0, 2432, 0, 2465, 0, 2334,
	0, 2336, 1043, 1044, 1826, 0, 0, 1982, 0, 0,
	0, 2487, 2490, 2491, 3010, 3011, 3012, 3013, 3014, 3015,
	3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025,
	3026, 3027, 1982, 1982, 0, 1890, 0, 0, 1958, 1959,
	1960, 1961, 0, 0, 1962, 0, 1952, 1956, 1953, 1954,
	1948, 1911, 0, 0, 2523, 1948, 1917, 1947, 0, 1427,
	1937, 1948, 1948, 0, -2, 1921, 1938, 0, 0, 701,
	703, 705, 709, 711, 0, 0, 1847, -2, 0, -2,
	370, 1426, 0, 0, 0, 0, 0, 0, 735, 737,
	0, 0, 643, 0, 0, 0, 1213, 0, 1215, 1216,
	0, 1618, 729, 0, 732, 0, 1983, 1986, 0, 0,
	1997, 2003, 2004, 0, -2, 0, 0, 2093, 0, 0,
	0, 0, 0, 0, 767, 0, 2961, 0, 765, 0,
	0, 538, 653, 235, 625, 0, 235, 235, 634, 0,
	0, 235, 645, 235, 2544, 235, 2542, 256, 650, 1773,
	268, 0, 827, 0, 1687, 1696, 0, 866, 0, 868,
	0, 2514, 2515, 0, 857, 0, 964, 0, 978, 979,
	980, 981, 0, 0, 0, 0, 1633, 0, 0, 1578,
	0, 0, 192, 3048, 0, 237, 0, 0, 1389, 2529,
	0, 1379, 0, 0, 2686, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 0, 156, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 1450, 1451, 1453, 1460, 1462, 0, 1456,
	1457, 0, 1459, 1461, 1463, 0, 1466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	128, 1486, 2921, 0, 0, 0, 1487, 1488, 1489, 1712,
	1713, 0, 1735, 1736, 0, 0, 0, 0, 0, 0,
	0, 152, 0, 0, 0, 0, 2496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 717, 368,
	719, 720, 364, 361, 363, 721, 726, 0, 727, 0,
	0, 0, 0, 1479, 0, 1530, 1528, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 0, 0, 0, 0, -2, 1481, 1482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 359, 2495, 2505, 0, 1256, 1257, 404, 407, 410,
	413, 274, 0, 0, 0, 444, 453, 0, 1309, 1281,
	0, 0, 566, 368, 585, 587, 0, 366, 2832, 2548,
	1266, 1444, 1447, 0, 1427, 3048, 1498, 0, 0, 0,
	0, 0, 0, 0, 1541, 0, 0, 3048, 2524, 2578,
	2579, 1726, 1736, 0, 1982, 0, 1759, 1745, 0, 0,
	0, 1759, 1763, 1764, 1766, 1767, 0, 0, 1973, 1979,
	661, 713, 1834, 1834, 368, 0, 0, 1748, 1750, 0,
	0, 0, 308, 0, 319, 1951, 317, 0, 325, 0,
	0, 1951, 316, 0, 579, 804, 809, 1017, 0, 0,
	368, 1026, 1027, 1028, 1081, 1125, 1133, 1185, 1045, 1047,
	1048, 1049, 0, 1054, 0, 0, 0, 1231, 1226, 1227,
	1228, 2545, 2541, 1229, 1065, 1135, 1068, 1135, 1071, 1135,
	1074, 1076, 1094, 1100, 1113, 1106, 1114, 0, 0, 0,
	1127, 0, 1145, 0, 1154, 1168, 0, 0, 0, 0,
	0, 0, 0, 1191, 1192, 1193, 1195, 1200, 1199, 0,
	1205, 1016, 1970, 1785, 1786, 1788, 0, 1797, 0, 0,
	1873, -2, -2, 1872, 1876, 1877, -2, -2, -2, -2,
	1793, 0, 1802, 1799, 0, 1858, 1569, 1570, 0, 0,
	829, 0, 0, -2, -2, 0, 0, 0, 2198, 0,
	-2, 2177, 2180, 2184, 2186, 2188, 0, 0, 0, 0,
	0, 0, 2421, 0, 2423, 2199, 2476, 2479, 2414, 0,
	2370, 0, 0, 1846, 1847, 1847, 0, 2268, 0, 2429,
	0, 2436, 2437, 0, 2261, 0, 2470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2272, 0, 0, 0,
	0, 2304, 2307, 2310, 2313, 0, 0, 0, 0, 2293,
	0, 0, 0, 2297, 2063, 2049, 0, 2091, 2089, 2090,
	2084, 2091, 2088, 2041, 0, 2040, 0, 2319, 0, 2321,
	2323, 0, 0, 2325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2205, 2206,
	2207, 2227, 2326, 2458, 2459, 0, 0, 0, 0, 0,
	0, 2332, 0, 2464, 2333, 2335, 1834, 0, 1827, 0,
	1892, 1881, 1981, 0, 2485, 1951, 1894, 1896, 2486, 2526,
	1881, 1881, 0, 2433, 0, 0, 1942, 0, 0, 0,
	1944, 1915, 0, 0, 1909, 0, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1916, 1427, 1946, 1918, 1922, 2556, 0,
	1948, 0, 1933, 0, 1935, 1968, 0, 1927, 1930, 0,
	0, 2571, 1982, 0, 417, 425, 426, 418, 419, 420,
	421, 0, 1618, 0, 0, 0, 0, 1214, 0, 752,
	0, 0, 2435, 0, 1988, 0, 1994, 0, 0, 0,
	0, 754, 0, 0, 0, 0, 0, 0, 0, 1771,
	533, 624, 235, 629, 632, 2493, 235, 638, 641, 647,
	264, 0, 817, -2, 864, 865, 867, 0, 863, 969,
	965, 189, 1634, 0, 0, 0, 1574, 0, 1292, 0,
	1287, 1288, 1576, 2540, 1580, 1586, 1589, 0, 194, 3048,
	206, 0, 3048, 0, 1353, 0, 0, 0, 0, 0,
	0, 1636, 0, 0, 3048, 235, 3048, 235, 210, 212,
	215, 0, 221, 217, 0, 1289, 0, 1341, 0, 0,
	1344, 142, 1634, 0, 0, 145, 149, 161, 0, 0,
	0, 171, 0, 0, 0, 1591, 1595, 1603, 0, 0,
	0, 1454, 1455, 1458, 1464, 1467, 98, 0, 0, 0,
	1599, 1601, 1607, 115, 118, 3048, 2538, 0, 120, 3048,
	0, 129, 1736, 0, 0, 1573, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 147, 151, 162, 0, 1609,
	144, 0, 250, 0, 0, 240, 235, 3048, 0, 242,
	0, 243, 244, 258, 0, 0, 0, 718, 0, 0,
	0, 723, 0, 1269, 1270, 1529, 0, 1472, 1473, 291,
	292, 0, 1484, 1478, 0, 0, 0, 0, 0, 1611,
	1612, 0, 0, 0, 1632, 1627, 1951, 270, 0, 1951,
	278, 0, 2501, 0, 295, 304, 441, 0, 452, 454,
	456, 0, 0, 463, 464, 465, 466, 468, 2590, 469,
	-2, -2, 0, 0, 0, 1308, 1407, 1310, 1312, 1313,
	1314, 237, 0, 2579, 1379, 2745, 2579, 0, 0, 1276,
	0, 0, 0, 572, 568, 0, 577, 581, 582, 0,
	0, 0, -2, 0, 0, 0, 0, -2, 0, 0,
	0, 1545, 1539, 1540, 0, 0, 0, 0, 3048, 1728,
	1736, 0, 1832, 1847, 592, 1737, 1759, 0, 0, 0,
	1747, 1743, 1740, 1982, 0, 0, 0, 0, 0, 1975,
	1978, 664, 665, 345, 0, 368, 0, 0, 0, 0,
	0, 0, 323, 0, 326, 0, 0, 0, 331, 332,
	333, 334, 335, 336, 0, 0, 0, 0, 325, 357,
	310, 1951, 0, 325, 0, 0, 806, 0, 0, 0,
	1024, 0, 0, 1630, 1058, 0, 1067, 1069, 1072, 1116,
	1118, 1135, 0, 1146, 1175, 2525, 1176, 1331, 0, 1331,
	0, 0, 1196, 1202, 1795, 0, 1870, 1801, 1852, 1853,
	0, 1571, 0, 2116, 2161, 0, 0, -2, 0, 0,
	2165, 0, 0, 0, -2, 0, 0, 0, 2422, 2424,
	0, 2478, 2413, 2263, 0, 0, 0, 2267, 2251, 2252,
	0, 2373, 2439, 2468, 2472, 0, 2101, 2102, 2103, 2104,
	2105, 2106, 2107, 0, 2520, 2557, 2561, 2346, 2347, 2351,
	2534, 0, 0, 0, 2276, 0, 0, 0, 0, 0,
	0, 0, 0, 2082, 2086, 0, 0, 2440, 2451, 2453,
	2203, 2204, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215,
	2216, 2217, -2, -2, -2, 2221, 2222, 2223, -2, -2,
	-2, 2228, 0, 0, 0, 2454, 2456, 2457, 2461, 2462,
	0, 2329, 2330, 2331, 2463, 0, 1834, 1828, 1889, 0,
	1980, 1893, 0, 1889, 1889, 1841, 1940, 0, 0, 1964,
	0, 1912, 0, 1913, 0, 0, 1945, 0, 1920, 1923,
	1924, 1934, 0, 1926, 0, 1929, 0, 2263, -2, 369,
	371, 373, 0, 376, 377, 0, 0, 0, 0, 382,
	0, 0, 0, 0, 0, 744, 1618, 1618, 0, 0,
	746, 0, 730, 0, 0, 1990, 0, 0, 2066, 2070,
	2094, 758, 760, 0, 0, 0, 2980, 2915, 0, 0,
	757, 626, 635, 266, 0, 1949, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 236, 0,
	1388, 0, 1351, 0, 0, 1378, 0, 0, 1394, 196,
	197, 198, 0, 0, 0, 0, 208, 0, 0, 204,
	0, 214, 220, 219, 0, 1338, 0, 0, 0, 0,
	1579, 0, 0, 0, 168, 169, 170, 0, 175, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 1718, 1719, 0, 1706, 165,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	1568, 260, 0, 0, 0, 0, 0, 365, 360, 362,
	0, 1471, 1532, 1533, 1480, 1592, 1596, 1604, 0, 0,
	0, 0, 0, 775, 1631, 0, 278, 276, 0, 279,
	0, 282, 284, 0, 0, 278, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 462, 0, 461, 467, 514,
	1279, 1395, 0, 0, 1397, 1315, 1319, 0, 2579, 2579,
	0, 2531, 0, 1277, 0, 0, 1396, 564, 0, 571,
	0, 586, 2530, 0, 0, 0, 1448, 0, 0, 1475,
	1427, 1501, 1427, 0, 1544, 1546, 0, 1554, 0, 0,
	0, 1730, 1736, 0, 1723, 1724, 1866, 1738, 1757, -2,
	0, 0, 1847, 1765, 1762, 1768, 1769, 0, 0, 348,
	0, 1749, 1751, 0, 1250, 1253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 325, 322, 312, 1951,
	352, 0, 1018, 368, 1050, 1629, 1055, 2546, 1126, 1144,
	1177, 1330, 0, 0, 1179, 0, 0, 1869, 1856, 1857,
	1854, 1571, 2163, 2167, 0, 0, 0, 2169, -2, 0,
	2191, -2, -2, 2425, 2477, 2242, 1847, 2264, 2266, 2253,
	2471, 2111, 0, 2353, 2350, 0, 2337, 0, 2288, 2289,
	0, 0, 2292, 2294, 2295, 2296, 2050, 2043, 2042, 2450,
	0, 0, 0, 0, 2328, 1829, 0, 2342, 0, 0,
	1897, 2342, 2342, 1941, 0, 1943, 1910, 1898, 0, 1907,
	0, 2557, 1936, 1928, 0, 0, 374, 0, 378, 379,
	380, 381, 383, 0, 0, 0, 0, 0, 422, 747,
	748, 0, 0, 0, 1617, 1984, 1989, 0, 1995, 2065,
	0, 0, 0, 0, 0, 0, 766, 267, 0, 967,
	968, 190, 191, 1293, 1291, 1583, 1587, 1584, 0, 193,
	0, 0, 1352, 0, 1355, 0, 0, 0, 0, 1362,
	1379, 0, 0, 0, 0, 0, 0, 1381, 0, 1380,
	0, 0, 1411, 0, 1559, 1566, 0, -2, 0, 0,
	0, 200, 226, 0, 0, 0, 0, 229, 1635, 202,
	0, 0, 235, 235, 1290, 0, 0, 1575, 1577, 1590,
	0, 0, 0, 0, 178, 0, 0, 1593, 1597, 1605,
	1600, 1602, 1608, 0, 0, 121, 1709, 0, 0, 1720,
	0, 164, 0, 0, 0, 1610, 248, 249, 0, 235,
	0, 235, 241, 235, 1568, 0, 0, 0, 0, 0,
	0, 0, 0, 1613, 1614, 269, 0, 0, 0, 0,
	0, 0, 0, 271, 358, 278, 443, 450, 455, 457,
	458, 459, 460, 1340, 0, 1407, 1399, 1400, 1401, 0,
	1311, 1406, 1408, 0, 0, 1316, 0, 0, 0, 0,
	1296, 1278, 0, 1309, 1281, 0, 569, 0, 367, 1267,
	1445, 1493, 1427, 0, 1496, 0, 0, 1536, 0, 0,
	0, 0, 0, 0, 0, 1732, 1736, 0, 1725, 1726,
	1759, 1865, 0, 0, 0, 1746, 1866, 0, 368, 0,
	368, 327, 0, 328, 329, 330, 337, 338, 339, 340,
	311, 314, 0, 325, 808, 810, 0, 0, 816, 1023,
	1329, 0, 0, 0, 0, 1855, 2171, -2, -2, 2192,
	0, 2558, 2560, 1847, 0, 2339, 1849, 0, 0, -2,
	0, 0, 0, 1830, 1813, 0, 1888, 1880, 1882, 1884,
	2901, 2658, 3047, 1814, 1815, 1963, 0, 0, 1931, 375,
	384, 385, 0, 387, 388, 749, 0, 0, 0, 1991,
	0, 0, 755, 0, 0, 0, 957, 0, 0, 1585,
	195, 0, 0, 1356, 1357, 1359, 0, 1361, 1363, 1364,
	1281, 0, 1368, 0, 2581, 0, 1373, 1376, 1377, 0,
	0, 1390, 1412, 0, 1421, 0, 1561, 1571, 1565, 0,
	1563, 1423, 0, 199, 228, 201, 230, 225, 0, 1568,
	0, 203, 213, 0, 0, 146, 0, 0, 2651, 181,
	179, 177, 119, 125, 127, 1572, 167, 0, 148, 0,
	250, 259, 1567, 261, 245, 235, 0, 0, 1594, 1598,
	1606, 0, 1621, 1622, 1623, 1624, 0, 0, 0, 0,
	280, 0, 281, 283, 285, 286, 287, 288, 0, 0,
	449, 1281, 1339, 1280, 1398, 0, 1409, 1281, 0, 0,
	0, 0, 0, 0, 1283, 0, 1282, 0, 0, 570,
	573, 0, 576, 1982, 583, 0, 0, 0, 1500, 0,
	1547, 1545, 0, 1553, 0, 0, 0, 1705, 0, 0,
	1727, 1728, 590, 1752, 0, 0, 1759, 1770, 347, 0,
	350, 324, 0, 313, 0, 812, 0, 814, 0, 1178,
	1180, 0, 0, 2265, 2357, 0, 0, 2290, 2291, -2,
	0, 2231, 2341, 2343, 0, 0, 0, 0, 0, 1899,
	1908, 386, 1618, 1618, 1985, 762, 763, 759, 761, 0,
	1581, 0, 1588, 237, 1354, 1358, 0, 1365, 0, 0,
	0, 1369, 1431, 0, 0, 1448, 1448, 1382, 0, 0,
	1415, 1416, 1336, 0, 1417, 1418, 1419, 1560, 1858, 1566,
	1281, 0, 0, 227, 232, 0, 0, 0, 0, 0,
	0, 166, 0, 239, 262, 1568, 0, 0, 1625, 1626,
	0, 0, 277, 300, 0, 472, 470, 1283, 0, 1410,
	1317, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1318, 1423, 0, 0, 1387, 1294, 0, 1297, 0, 1279,
	0, 574, 575, 578, 0, 1494, 0, 1501, 0, 0,
	1554, 0, 0, 1715, 1704, 1736, 1729, 1730, 1982, 0,
	1760, 0, 320, 321, 811, 0, 0, 1188, 1189, 0,
	0, 0, 0, 2352, 1850, 2232, 0, 0, 1883, 1885,
	1886, 1887, 750, 751, 0, 1582, 207, 0, 1425, 1367,
	1436, 0, 0, 0, 0, 0, 1383, 1413, 1414, 1411,
	1335, 0, 1564, 1562, 1392, 1425, 1427, 205, 0, 1423,
	0, 1345, 0, 0, 1348, 0, 0, 182, 2651, 180,
	0, 235, 728, 1618, 235, 0, 303, 0, 293, 505,
	471, 473, 0, 0, 477, 478, 479, 0, 0, 482,
	483, 484, 485, 0, 0, 490, 0, 0, 0, 0,
	495, 496, 1275, 0, 1403, 1405, 1421, 1423, 1336, 0,
	1298, 1340, 1296, 1495, 1499, 1497, 1537, 1423, 0, 1421,
	0, 1722, 1736, 1716, 1717, 0, 1732, 0, 0, 368,
	813, 815, 2349, 2369, 2358, -2, 2983, 2659, 0, 2369,
	2369, 2344, 2345, 0, 0, 1281, 0, 1370, 1432, 1433,
	0, 1428, 1429, 1430, 2580, 1371, 1372, 1374, 1375, 1982,
	0, 1422, 1431, 231, 1281, 1342, 0, 0, 1343, 0,
	0, 185, 0, 187, 263, 1616, 1619, 0, 289, 0,
	0, 446, 503, 0, 0, 474, 475, 497, 476, 0,
	0, 0, 488, 489, 491, 492, 493, 494, 1272, 1274,
	1281, 0, 1336, 1421, 1281, 0, 0, 0, 1281, 1283,
	1421, 0, 1336, 0, 1711, 1721, 0, 1731, 1705, 0,
	1755, 0, 349, 2354, 0, 0, 2360, 2361, 2362, 2363,
	2364, 2355, 2356, 764, 1360, 1366, 0, 1434, 0, 1435,
	0, 0, 0, 1391, 1420, 1436, 211, 1346, 0, 1349,
	0, 183, 0, 0, 298, 299, 502, 498, 0, 0,
	486, 487, 1402, 1404, 1281, 1336, 1982, 1284, 0, 1286,
	1283, 1295, 1336, 0, 1281, 0, 1734, 1710, 1714, 2539,
	1715, 1753, 0, 0, 0, 2366, 2367, 0, 0, 0,
	1437, 0, 1440, 1441, 0, 1438, 1411, 0, 0, 235,
	0, 1834, 480, 0, 1982, 1281, 1386, 1285, 1275, 1281,
	1423, 1982, 1421, 1708, 1736, 1722, 0, 1982, 2365, 2368,
	2359, 1424, 1439, 1442, 1443, 1393, 0, 0, 1620, 301,
	0, 0, 504, 499, 500, 481, 1384, 1982, 1273, 1982,
	1421, 1550, 1336, 1701, 1707, 0, 0, 1711, 1982, 1756,
	1333, 0, 0, 501, 1385, 1548, 1336, 1281, 1733, 1708,
	1754, 1347, 1332, 0, 302, 1281, 1982, 1702, 0, 1982,
	1551, 0, 1549, 1333, 1350,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 641, 3, 647, 642, 3,
	653, 654, 645, 643, 658, 644, 655, 646, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 662, 659,
	633, 635, 634, 638, 657, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 651, 3, 652, 648, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 660, 640, 661, 636,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 632,
	57975, 637, 57976, 639, 57977, 649, 57978, 650, 57979, 656,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1623
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1628
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1632
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1638
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1641
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1642
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1643
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1644
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1645
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1646
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1647
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1648
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1649
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1650
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1651
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1654
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1655
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1656
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1657
		{
			return helpWith(sqllex, "MOVE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1665
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1666
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1668
		{
			return helpWith(sqllex, "ALTER")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1671
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1672
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1673
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1674
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1675
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1676
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1677
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1678
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1679
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1680
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1681
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1682
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1743
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 87:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1769
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1783
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1803
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1807
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1850
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1861
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1873
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1883
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1890
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1900
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1917
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1926
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1933
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1943
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1953
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1962
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1972
		{
			sqlVAL.union.val = &tree.AlterDatabaseSecondaryRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SecondaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1981
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2009
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2041
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2049
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2065
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2074
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2085
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2089
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2095
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2103
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2113
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2117
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2129
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 159:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2139
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2150
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2162
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2183
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 164:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2203
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2223
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2232
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2245
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2254
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2265
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2273
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2284
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 175:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2294
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 176:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2304
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 177:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2313
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2324
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 179:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2330
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 180:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2338
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2342
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2346
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 183:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2356
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2361
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2372
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2376
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2382
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2386
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2398
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2408
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2428
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2443
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2452
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2457
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2466
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2478
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2496
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2506
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2509
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2515
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 211:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2537
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2567
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2574
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2588
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2592
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2596
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2602
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2610
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = nil
		}
	case 227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2620
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = nil
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2630
		{
			sqlVAL.union.val = true
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2634
		{
			sqlVAL.union.val = false
		}
	case 231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2640
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2644
		{
			sqlVAL.union.val = nil
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2651
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2655
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2659
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2669
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 238:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2694
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2705
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2716
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2725
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2735
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2744
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2753
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2762
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2766
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2769
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2780
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2793
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2800
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2807
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2813
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2821
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2846
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2853
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2857
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2861
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2865
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 269:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2908
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2920
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2930
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2941
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2950
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2954
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2958
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2966
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2970
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2974
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2981
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: tree.MakeDBool(true)}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3002
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: sqlDollar[3].union.expr()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3006
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3010
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3014
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(false)}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3018
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3115
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3120
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3124
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3144
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3150
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3167
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3171
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3177
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3181
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = nil
		}
	case 304:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3202
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3208
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3219
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3224
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3259
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3268
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3287
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3297
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.backupTargetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsTenant: sqlDollar[8].union.asTenantClause(),
			}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3323
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3331
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3337
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3341
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3348
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3356
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3363
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3374
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3378
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3389
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3406
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3410
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3430
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3434
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3438
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3442
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3452
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3458
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3462
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3466
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3493
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3498
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3502
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3508
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3513
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3518
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3522
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3539
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3542
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3546
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3550
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3558
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3562
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3572
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3590
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3596
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3600
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3606
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 367:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3610
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = nil
		}
	case 369:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3626
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3640
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3660
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3676
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3688
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3692
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3700
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3704
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3708
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3712
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3716
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3720
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3728
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3729
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3730
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3731
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3732
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3742
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3750
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3752
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3756
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3759
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3769
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3778
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3786
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3788
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3792
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3795
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3824
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3828
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3831
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3839
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3842
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3846
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3850
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3854
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3858
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3871
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3876
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3879
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3880
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3884
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3889
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3901
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3903
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3904
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3906
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3907
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3908
		{
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3909
		{
			return helpWith(sqllex, "CREATE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3916
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3919
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3923
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3926
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3929
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3934
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Args:        sqlDollar[6].union.functionArgs(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3951
		{
			sqlVAL.union.val = true
		}
	case 448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3952
		{
			sqlVAL.union.val = false
		}
	case 449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = true
		}
	case 450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3956
		{
			sqlVAL.union.val = false
		}
	case 452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3962
		{
			sqlVAL.union.val = sqlDollar[1].union.functionArgs()
		}
	case 453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3963
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3966
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3968
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3975
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3981
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3989
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionArgClass(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4005
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4013
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4020
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4028
		{
			sqlVAL.union.val = tree.FunctionArgIn
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4029
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4030
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4031
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4032
		{
			return unimplemented(sqllex, "create function with 'VARIADIC' argument class")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4041
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4042
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4045
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4047
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4053
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4057
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4064
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4065
		{
			return unimplemented(sqllex, "create window function")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4067
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4073
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 481:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4077
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4081
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4085
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4093
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4097
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4101
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4105
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4109
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4113
		{
			sqlVAL.union.val = tree.FunctionLeakproof(true)
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4117
		{
			sqlVAL.union.val = tree.FunctionLeakproof(false)
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4121
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4135
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4136
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4143
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4155
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4171
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4177
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4182
		{
			return unimplemented(sqllex, "create access method")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4183
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4184
		{
			return unimplemented(sqllex, "create cast")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4185
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4186
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4187
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4188
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4189
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4190
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4191
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4192
		{
			return unimplemented(sqllex, "create publication")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4193
		{
			return unimplemented(sqllex, "create rule")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4194
		{
			return unimplemented(sqllex, "create server")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4195
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4196
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4197
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4198
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4201
		{
		}
	case 524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4202
		{
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4205
		{
		}
	case 526:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4206
		{
		}
	case 527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4209
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4210
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4211
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4212
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4213
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4214
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4215
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4216
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4217
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4218
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4219
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4220
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4221
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4222
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4223
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4224
		{
			return unimplemented(sqllex, "drop server")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4225
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4226
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4227
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4230
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4231
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4232
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4233
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4236
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4238
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4250
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4258
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4266
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4276
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4285
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4298
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4308
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4319
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4331
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4355
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4373
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4383
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4404
		{
		}
	case 585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4406
		{
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4410
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.str = ""
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4420
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4424
		{

			sqlVAL.union.val = nil
		}
	case 590:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4438
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4448
		{
			return helpWith(sqllex, "DELETE")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4451
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4452
		{
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4463
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4464
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4465
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4466
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4467
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4476
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4477
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4478
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4479
		{
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4480
		{
			return helpWith(sqllex, "DROP")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4483
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4484
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4485
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4486
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4487
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4488
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4489
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4497
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4501
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4514
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4522
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4534
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4537
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4552
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4577
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4585
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4593
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4600
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4607
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4615
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4622
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4626
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4636
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 646:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4645
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4653
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4660
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4668
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4672
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4675
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4679
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4684
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4697
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4702
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4704
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4709
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4713
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4736
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4743
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4745
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4753
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4761
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4769
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4777
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4788
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4796
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4799
		{
			return helpWith(sqllex, "DELETE")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4801
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4802
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4803
		{
			return helpWith(sqllex, "INSERT")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4806
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4808
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4811
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4816
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4817
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4818
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4823
		{
			return helpWith(sqllex, "DELETE")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4824
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4825
		{
			return helpWith(sqllex, "INSERT")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4827
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4831
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4832
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4836
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4840
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4856
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4860
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4864
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4871
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4910
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4917
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4928
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4932
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4946
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4959
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4967
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4975
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4983
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5000
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5008
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5012
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5016
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5026
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5038
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5041
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5064
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5072
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5076
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5080
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5091
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5095
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5119
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5129
		{
			return helpWith(sqllex, "GRANT")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5152
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5156
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5160
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5164
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5168
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5172
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5176
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5187
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5198
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5210
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5222
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5234
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5244
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[6].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:       sqlDollar[8].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5255
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5258
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5264
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5268
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5296
		{
			return helpWith(sqllex, "RESET")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5297
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5313
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5316
		{
			return helpWith(sqllex, "RESET")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5327
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5341
		{
			return helpWith(sqllex, "USE")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5345
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5346
		{
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5347
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5351
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5352
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5353
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5354
		{
			return helpWith(sqllex, "USE")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5370
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5385
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5388
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5414
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 809:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5422
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5446
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5454
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5465
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5468
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5478
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5486
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5493
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5494
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5524
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5530
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5539
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5544
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5547
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5561
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5566
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5586
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5588
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5591
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5607
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5611
		{
			return unimplemented(sqllex, "set from current")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5615
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5620
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5629
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5634
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5638
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5650
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5655
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5662
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5683
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5714
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5718
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5722
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5726
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5730
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5736
		{
			sqlVAL.union.val = tree.Low
		}
	case 870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5740
		{
			sqlVAL.union.val = tree.Normal
		}
	case 871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5744
		{
			sqlVAL.union.val = tree.High
		}
	case 872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5759
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5763
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5768
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5772
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5788
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5789
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5790
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5791
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5792
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5793
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5794
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5795
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5796
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5798
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5799
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5800
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5801
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5802
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5804
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5805
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5806
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5808
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5810
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5811
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5812
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5813
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5814
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5815
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5816
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5817
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5818
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5819
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5820
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5821
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5822
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5823
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5824
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5825
		{
			return helpWith(sqllex, "SHOW")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5828
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5837
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5843
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5848
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5858
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5868
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = true
		}
	case 960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5876
		{
			sqlVAL.union.val = false
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5886
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 963:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5890
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5896
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5910
		{
			sqlVAL.union.val = true
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5914
		{
			sqlVAL.union.val = false
		}
	case 969:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5918
		{
			sqlVAL.union.val = false
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5928
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5933
		{
			return helpWith(sqllex, "FETCH")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5941
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5946
		{
			return helpWith(sqllex, "MOVE")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5957
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5971
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5978
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5985
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5997
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6005
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6028
		{
			sqlVAL.union.val = int64(1)
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6029
		{
			sqlVAL.union.val = int64(-1)
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6032
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = int64(1)
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6036
		{
			sqlVAL.union.val = int64(1)
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = int64(-1)
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6040
		{
		}
	case 991:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6041
		{
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6044
		{
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6045
		{
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6049
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6054
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6059
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6064
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6069
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6081
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.str = "client_encoding"
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6101
		{
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6103
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.str = "timezone"
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6109
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6113
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6137
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6141
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6152
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6160
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6174
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6224
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6252
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6259
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6261
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6264
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6266
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6270
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6273
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6277
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6279
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6293
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6304
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6312
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6316
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6327
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6338
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6356
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6367
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6377
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6386
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6393
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6396
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6409
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6417
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6428
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6441
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6443
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6447
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6450
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6461
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6466
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6477
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6482
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6486
		{
			sqlVAL.union.val = true
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6488
		{
			sqlVAL.union.val = true
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = false
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6518
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6519
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6520
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6522
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6530
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6534
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6537
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6539
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6547
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6563
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6564
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6580
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6588
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6596
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6614
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6629
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6632
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6634
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6637
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6639
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6643
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.union.val = true
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = false
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6658
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6660
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6663
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6671
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6681
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6691
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6694
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6701
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6704
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6709
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = true
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6713
		{
			sqlVAL.union.val = false
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6720
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6727
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6741
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6748
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6752
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6756
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6766
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6777
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6788
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6791
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6799
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6804
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6809
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6813
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6824
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6827
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6839
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6843
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6848
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6853
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6858
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6863
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6876
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6880
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6883
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6896
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6901
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6912
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6920
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6923
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6941
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6949
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6957
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6964
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6970
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6975
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6980
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6984
		{
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6993
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7007
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7016
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7025
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7028
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7063
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7094
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7104
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7111
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7117
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7252
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7299
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7304
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7308
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7336
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7341
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7347
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7355
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7397
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7410
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7411
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7412
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7413
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7423
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7424
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7425
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7426
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7434
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7437
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7465
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7471
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7478
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7502
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7510
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7518
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7526
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7529
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7551
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7558
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7565
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7593
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7629
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7644
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7661
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7672
		{

			sqlVAL.union.val = nil
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7678
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7684
		{
			sqlVAL.str = ""
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7688
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7694
		{
			sqlVAL.union.val = nil
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7707
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7711
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7715
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7725
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7729
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7735
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7741
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7745
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7751
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7764
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7778
		{
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7779
		{
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7780
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7798
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7799
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7800
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7804
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7805
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7807
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7808
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7813
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7819
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7829
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7835
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7861
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7872
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7873
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7875
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7877
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7878
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7879
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7885
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.str = ""
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7941
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7953
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7977
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7997
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8017
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8054
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8098
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8124
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8134
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8138
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8159
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8169
		{

			sqlVAL.union.val = true
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8174
		{
			sqlVAL.union.val = false
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8179
		{
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8183
		{
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8186
		{
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8202
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8216
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8229
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8241
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8246
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8271
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8283
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8294
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8301
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8305
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8311
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8321
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8332
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8336
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8377
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8381
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8397
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8404
		{
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8405
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8406
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8407
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8408
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8409
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8449
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8453
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8483
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8487
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8491
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8495
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8508
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8512
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8520
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8532
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8544
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8548
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8552
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8576
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8585
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8593
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8600
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8604
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8622
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8632
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8634
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8636
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8638
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8641
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8643
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8644
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8646
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8649
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8651
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8665
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8669
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8689
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8693
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8696
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8711
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8715
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8719
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8723
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8727
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8730
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8738
		{
			sqlVAL.str = ""
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8750
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8757
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8761
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.union.val = true
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8773
		{

			sqlVAL.union.val = true
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.union.val = false
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8790
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8804
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8816
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8828
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8839
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8850
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8854
		{
			sqlVAL.union.val = false
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8858
		{
			sqlVAL.union.val = true
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = true
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8872
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8876
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8880
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8920
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8940
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8944
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8956
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8960
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8968
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8972
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8982
		{
			sqlVAL.union.val = nil
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8988
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8992
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8997
		{
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8998
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9023
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9025
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9027
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9029
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9031
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9033
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9037
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9041
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9047
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9068
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:9085
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:9103
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:9119
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9135
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9139
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = false
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9160
		{
			sqlVAL.union.val = true
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = false
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = true
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = false
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9180
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9184
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9193
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9199
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9205
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9213
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9231
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9232
		{
			sqlVAL.str = ""
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.str = ""
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9240
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9266
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9272
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9286
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9294
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9302
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9337
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9344
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9405
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9486
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9497
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9503
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9515
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9521
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9535
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9541
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9553
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9565
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9583
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9600
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = true
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = false
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9648
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9652
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9656
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9660
		{
			sqlVAL.union.val = privilege.Functions
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9664
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9673
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.str = ""
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9699
		{
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9700
		{
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9703
		{
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9704
		{
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9715
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9733
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9742
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9763
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9771
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9792
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9800
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9811
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9815
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9816
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9817
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9836
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9849
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9853
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9858
		{
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9859
		{
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9860
		{
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9870
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9877
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9883
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9884
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9891
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9895
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9898
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9902
		{
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9903
		{
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9911
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9931
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9944
		{
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9946
		{
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9950
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9973
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9979
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:10009
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
				SecondaryRegion: tree.Name(sqlDollar[15].str),
			}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
				SecondaryRegion: tree.Name(sqlDollar[17].str),
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10042
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.str = ""
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10052
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.str = ""
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10077
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10082
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10099
		{

		}
	case 1718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10106
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10110
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10114
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10123
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10129
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.str = ""
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.str = ""
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10153
		{
			sqlVAL.str = ""
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10163
		{
			sqlVAL.str = ""
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10169
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10183
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10194
		{
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10195
		{
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10224
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10242
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10246
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10255
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10280
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10304
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10349
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10387
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10419
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10440
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10455
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10537
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10541
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10549
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10585
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10588
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10589
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10599
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10634
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10635
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10636
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10697
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10710
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10734
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10741
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10753
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10757
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10762
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = true
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = false
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10810
		{
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10811
		{
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = nil
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10824
		{
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10825
		{
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = true
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.union.val = false
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10837
		{
			sqlVAL.union.val = false
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10843
		{
			sqlVAL.union.val = true
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10849
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10854
		{
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10855
		{
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10858
		{
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10859
		{
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10863
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10867
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10879
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10883
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10890
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10900
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10912
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10917
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10943
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10963
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10972
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10976
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11009
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11031
		{
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11032
		{
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11035
		{
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11036
		{
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11062
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11070
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11071
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11072
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11076
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11102
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11104
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11119
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11141
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11146
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11151
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11162
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11172
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11188
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11200
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11215
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11219
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11227
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11261
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11271
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11281
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11298
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11306
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11317
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11347
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11358
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11380
		{
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11382
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11385
		{
			sqlVAL.union.val = nil
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11387
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11391
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11395
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11401
		{
			sqlVAL.union.val = true
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11405
		{
			sqlVAL.union.val = false
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11425
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11429
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11437
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11441
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11451
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11455
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11475
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.str = tree.AstFull
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.str = tree.AstRight
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11493
		{
			sqlVAL.str = tree.AstInner
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11499
		{
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11500
		{
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11524
		{
			sqlVAL.str = tree.AstHash
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11536
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11540
		{
			sqlVAL.str = ""
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11557
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11563
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11564
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11565
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11569
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11574
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11588
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11592
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11598
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11604
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11614
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11624
		{
			sqlVAL.union.val = true
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11628
		{
			sqlVAL.union.val = false
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11634
		{
			sqlVAL.union.val = true
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11638
		{
			sqlVAL.union.val = false
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11651
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11663
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11676
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11684
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11685
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11695
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11702
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11703
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11705
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11713
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11714
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11726
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11733
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11742
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11782
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11787
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11794
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11795
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11799
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11800
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11802
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11803
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11804
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11805
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11806
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11809
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11810
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11811
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11812
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11813
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11814
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11815
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11817
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11818
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11819
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11820
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11821
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11823
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11824
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11826
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11827
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11828
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11832
		{
			sqlVAL.union.val = types.Geography
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11836
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11844
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11852
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11878
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11886
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = nil
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11901
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11905
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11909
		{
			sqlVAL.union.val = types.Int2
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11913
		{
			sqlVAL.union.val = types.Int
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11917
		{
			sqlVAL.union.val = types.Float4
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11921
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11925
		{
			sqlVAL.union.val = types.Float
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11929
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11937
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11945
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = types.Bool
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11959
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11972
		{
			sqlVAL.union.val = types.Float
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11978
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11984
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12000
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12006
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12018
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12028
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12032
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12036
		{
			sqlVAL.union.val = types.String
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12045
		{
			sqlVAL.union.val = true
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12046
		{
			sqlVAL.union.val = false
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12051
		{
			sqlVAL.union.val = types.Date
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12055
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12063
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12075
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12077
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12086
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12094
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12107
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12111
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12121
		{
			sqlVAL.union.val = true
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12122
		{
			sqlVAL.union.val = false
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12123
		{
			sqlVAL.union.val = false
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12127
		{
			sqlVAL.union.val = types.Interval
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12131
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12135
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12162
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12170
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12178
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12186
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12192
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12219
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12225
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12234
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12240
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12250
		{
			sqlVAL.union.val = nil
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12256
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12264
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12301
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12305
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12309
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12313
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12324
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12329
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12333
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12337
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12341
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12345
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12357
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12361
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12365
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12369
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12373
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12377
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12381
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12385
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12389
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12393
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12397
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12401
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12405
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12409
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12413
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12417
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12421
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12425
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12429
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12433
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12437
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12441
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12445
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12449
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12453
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12457
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12461
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12465
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12469
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12473
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12481
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12491
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12495
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12499
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12503
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12507
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12511
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12515
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12519
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12523
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12527
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12531
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12535
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12539
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12543
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12547
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12551
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12555
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12559
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12563
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12567
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12571
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12587
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12591
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12595
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12599
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12603
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12620
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12632
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12636
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12640
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12644
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12648
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12652
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12656
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12660
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12664
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12668
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12672
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12676
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12680
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12697
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12702
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12714
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12718
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12722
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12726
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12730
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12734
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12738
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12742
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12746
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12750
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12754
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12758
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12762
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12766
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12770
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12774
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12778
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12782
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12786
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12790
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12794
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12798
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12802
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12806
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12810
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12818
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12828
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12832
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12836
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12840
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12854
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12862
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12898
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12902
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12906
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12910
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12914
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12919
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12921
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12925
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12929
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12933
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12937
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12941
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12945
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12954
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12961
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12965
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12969
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12979
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12984
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12988
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12992
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12996
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13000
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13003
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13007
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13011
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13014
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13015
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13017
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13023
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13027
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13030
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13039
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13092
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13105
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13117
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13126
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13127
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13132
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13136
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13140
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13146
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13150
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13154
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13158
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13162
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13166
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13172
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13176
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13180
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13184
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13188
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13192
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13196
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13200
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13204
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13208
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13212
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13216
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13220
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13227
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13230
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13232
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13235
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13237
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13241
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13244
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13246
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13250
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13253
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13255
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13259
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13262
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13264
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13268
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13271
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13273
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13276
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13278
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13281
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13283
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13286
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13288
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13291
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13293
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13296
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13298
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13302
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13305
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13306
		{
			return unimplemented(sqllex, "treat")
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13308
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13312
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13316
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13320
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13324
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13327
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13329
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13332
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13338
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13342
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13348
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13352
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13359
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13363
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13369
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13373
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13379
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13387
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13391
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13395
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13402
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13422
		{
			sqlVAL.str = ""
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13428
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13432
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13438
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13446
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13454
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13462
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13468
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13481
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13509
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13513
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13517
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13521
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13528
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13537
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13541
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13545
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13549
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13554
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13567
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13571
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13578
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13590
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13594
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13598
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13614
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13615
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13616
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13617
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13618
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13619
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13620
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13621
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13622
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13623
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13624
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13625
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13627
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13628
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13629
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13630
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13631
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13632
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13633
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13634
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13635
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13636
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13637
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13638
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13639
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13640
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13641
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13642
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13643
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13644
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13645
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13646
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13647
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13648
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13649
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13654
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13670
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13677
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13678
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13679
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13680
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13703
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13707
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13713
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13717
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13721
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13732
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13736
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13742
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13746
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13753
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13759
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13763
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13769
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13773
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13779
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13783
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13789
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13793
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13799
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13803
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13826
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13830
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13834
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13840
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13847
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13851
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13868
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13872
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13876
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13880
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13884
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13890
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13896
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13902
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13906
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13910
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13916
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13928
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13935
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13939
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13945
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13951
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13955
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13962
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13968
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13972
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13979
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13985
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13989
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13994
		{
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13995
		{
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13999
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14003
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14009
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14018
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14022
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14026
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14038
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14042
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14048
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14052
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14071
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14079
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14102
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14111
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2501:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14115
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14119
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14123
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14129
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14133
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14148
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14152
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14164
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14168
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14177
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14188
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14197
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14205
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2520:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14222
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14307
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14315
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14319
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14325
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14329
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14335
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14341
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2548:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14348
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14375
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14382
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2557:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14386
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2558:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14390
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2560:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14404
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2561:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14408
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14412
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14425
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14434
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14452
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14465
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2571:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14472
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14497
		{
			sqlVAL.str = ""
		}
	case 2580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14503
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14507
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
