// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionArgs() tree.FuncArgs {
	return u.val.(tree.FuncArgs)
}
func (u *sqlSymUnion) functionArg() tree.FuncArg {
	return u.val.(tree.FuncArg)
}
func (u *sqlSymUnion) functionArgClass() tree.FuncArgClass {
	return u.val.(tree.FuncArgClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}

//line sql-gen.y:958
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15105

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 5,
	-2, 1814,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 63,
	281, 512,
	-2, 0,
	-1, 75,
	8, 970,
	29, 970,
	642, 970,
	643, 970,
	-2, 0,
	-1, 76,
	8, 970,
	29, 970,
	642, 970,
	643, 970,
	-2, 0,
	-1, 78,
	1, 1664,
	139, 1664,
	269, 1664,
	356, 1664,
	419, 1664,
	429, 1664,
	623, 1664,
	655, 1664,
	-2, 0,
	-1, 79,
	1, 1664,
	655, 1664,
	-2, 0,
	-1, 85,
	262, 270,
	561, 270,
	-2, 0,
	-1, 98,
	203, 434,
	248, 1541,
	264, 1541,
	281, 434,
	421, 434,
	433, 1284,
	477, 434,
	492, 1284,
	545, 1284,
	574, 434,
	601, 1284,
	-2, 0,
	-1, 104,
	141, 1814,
	257, 1814,
	585, 1814,
	586, 1814,
	-2, 0,
	-1, 122,
	160, 1785,
	181, 1785,
	194, 1785,
	260, 1785,
	295, 1785,
	369, 1785,
	380, 1785,
	580, 1785,
	-2, 1756,
	-1, 164,
	168, 1104,
	280, 1104,
	424, 1065,
	497, 1065,
	544, 1065,
	564, 1104,
	566, 1065,
	-2, 0,
	-1, 169,
	4, 1816,
	21, 1816,
	22, 1816,
	23, 1816,
	24, 1816,
	25, 1816,
	26, 1816,
	27, 1816,
	28, 1816,
	30, 1816,
	31, 1816,
	37, 1816,
	41, 1816,
	43, 1816,
	44, 1816,
	45, 1816,
	47, 1816,
	48, 1816,
	49, 1816,
	50, 1816,
	51, 1816,
	52, 1816,
	53, 1816,
	54, 1816,
	55, 1816,
	57, 1816,
	58, 1816,
	59, 1816,
	60, 1816,
	62, 1816,
	63, 1816,
	64, 1816,
	65, 1816,
	66, 1816,
	67, 1816,
	68, 1816,
	69, 1816,
	73, 1816,
	74, 1816,
	75, 1816,
	76, 1816,
	78, 1816,
	79, 1816,
	80, 1816,
	84, 1816,
	85, 1816,
	86, 1816,
	87, 1816,
	88, 1816,
	89, 1816,
	90, 1816,
	91, 1816,
	94, 1816,
	95, 1816,
	96, 1816,
	97, 1816,
	98, 1816,
	100, 1816,
	102, 1816,
	103, 1816,
	104, 1816,
	105, 1816,
	106, 1816,
	107, 1816,
	108, 1816,
	110, 1816,
	111, 1816,
	112, 1816,
	114, 1816,
	115, 1816,
	116, 1816,
	124, 1816,
	125, 1816,
	126, 1816,
	127, 1816,
	128, 1816,
	130, 1816,
	131, 1816,
	132, 1816,
	133, 1816,
	135, 1816,
	136, 1816,
	137, 1816,
	138, 1816,
	140, 1816,
	141, 1816,
	142, 1816,
	144, 1816,
	145, 1816,
	146, 1816,
	149, 1816,
	150, 1816,
	151, 1816,
	153, 1816,
	154, 1816,
	155, 1816,
	157, 1816,
	158, 1816,
	159, 1816,
	161, 1816,
	162, 1816,
	163, 1816,
	164, 1816,
	165, 1816,
	166, 1816,
	167, 1816,
	168, 1816,
	169, 1816,
	170, 1816,
	171, 1816,
	172, 1816,
	173, 1816,
	174, 1816,
	175, 1816,
	176, 1816,
	177, 1816,
	178, 1816,
	180, 1816,
	186, 1816,
	187, 1816,
	188, 1816,
	189, 1816,
	193, 1816,
	195, 1816,
	196, 1816,
	197, 1816,
	199, 1816,
	200, 1816,
	203, 1816,
	204, 1816,
	205, 1816,
	206, 1816,
	207, 1816,
	208, 1816,
	209, 1816,
	210, 1816,
	211, 1816,
	212, 1816,
	213, 1816,
	214, 1816,
	215, 1816,
	216, 1816,
	218, 1816,
	219, 1816,
	221, 1816,
	222, 1816,
	224, 1816,
	225, 1816,
	226, 1816,
	227, 1816,
	228, 1816,
	229, 1816,
	230, 1816,
	231, 1816,
	232, 1816,
	233, 1816,
	234, 1816,
	236, 1816,
	237, 1816,
	238, 1816,
	240, 1816,
	241, 1816,
	242, 1816,
	243, 1816,
	244, 1816,
	248, 1816,
	249, 1816,
	250, 1816,
	251, 1816,
	254, 1816,
	255, 1816,
	256, 1816,
	257, 1816,
	258, 1816,
	259, 1816,
	261, 1816,
	263, 1816,
	264, 1816,
	265, 1816,
	267, 1816,
	269, 1816,
	270, 1816,
	271, 1816,
	273, 1816,
	277, 1816,
	278, 1816,
	279, 1816,
	280, 1816,
	281, 1816,
	282, 1816,
	284, 1816,
	285, 1816,
	286, 1816,
	288, 1816,
	289, 1816,
	290, 1816,
	292, 1816,
	293, 1816,
	296, 1816,
	297, 1816,
	298, 1816,
	299, 1816,
	300, 1816,
	301, 1816,
	302, 1816,
	305, 1816,
	306, 1816,
	307, 1816,
	308, 1816,
	310, 1816,
	311, 1816,
	312, 1816,
	313, 1816,
	314, 1816,
	315, 1816,
	316, 1816,
	317, 1816,
	318, 1816,
	319, 1816,
	320, 1816,
	321, 1816,
	322, 1816,
	323, 1816,
	324, 1816,
	325, 1816,
	326, 1816,
	327, 1816,
	328, 1816,
	329, 1816,
	330, 1816,
	331, 1816,
	332, 1816,
	334, 1816,
	336, 1816,
	337, 1816,
	338, 1816,
	339, 1816,
	340, 1816,
	341, 1816,
	342, 1816,
	343, 1816,
	344, 1816,
	345, 1816,
	346, 1816,
	347, 1816,
	348, 1816,
	349, 1816,
	350, 1816,
	351, 1816,
	352, 1816,
	354, 1816,
	355, 1816,
	357, 1816,
	359, 1816,
	360, 1816,
	361, 1816,
	362, 1816,
	364, 1816,
	365, 1816,
	366, 1816,
	367, 1816,
	368, 1816,
	371, 1816,
	373, 1816,
	375, 1816,
	376, 1816,
	377, 1816,
	378, 1816,
	381, 1816,
	382, 1816,
	383, 1816,
	385, 1816,
	387, 1816,
	388, 1816,
	389, 1816,
	390, 1816,
	391, 1816,
	392, 1816,
	393, 1816,
	394, 1816,
	395, 1816,
	396, 1816,
	397, 1816,
	398, 1816,
	399, 1816,
	400, 1816,
	402, 1816,
	403, 1816,
	404, 1816,
	405, 1816,
	406, 1816,
	407, 1816,
	408, 1816,
	409, 1816,
	410, 1816,
	411, 1816,
	412, 1816,
	413, 1816,
	414, 1816,
	415, 1816,
	416, 1816,
	418, 1816,
	419, 1816,
	420, 1816,
	422, 1816,
	423, 1816,
	424, 1816,
	425, 1816,
	426, 1816,
	427, 1816,
	428, 1816,
	429, 1816,
	430, 1816,
	431, 1816,
	432, 1816,
	433, 1816,
	434, 1816,
	435, 1816,
	437, 1816,
	439, 1816,
	440, 1816,
	441, 1816,
	447, 1816,
	448, 1816,
	449, 1816,
	451, 1816,
	452, 1816,
	453, 1816,
	454, 1816,
	455, 1816,
	456, 1816,
	457, 1816,
	458, 1816,
	459, 1816,
	460, 1816,
	461, 1816,
	463, 1816,
	464, 1816,
	465, 1816,
	466, 1816,
	467, 1816,
	469, 1816,
	470, 1816,
	471, 1816,
	472, 1816,
	473, 1816,
	474, 1816,
	475, 1816,
	477, 1816,
	478, 1816,
	479, 1816,
	480, 1816,
	481, 1816,
	482, 1816,
	483, 1816,
	484, 1816,
	485, 1816,
	486, 1816,
	487, 1816,
	488, 1816,
	489, 1816,
	490, 1816,
	492, 1816,
	493, 1816,
	494, 1816,
	495, 1816,
	496, 1816,
	497, 1816,
	499, 1816,
	500, 1816,
	501, 1816,
	502, 1816,
	503, 1816,
	504, 1816,
	505, 1816,
	507, 1816,
	508, 1816,
	509, 1816,
	510, 1816,
	511, 1816,
	512, 1816,
	513, 1816,
	514, 1816,
	516, 1816,
	518, 1816,
	519, 1816,
	520, 1816,
	521, 1816,
	522, 1816,
	523, 1816,
	524, 1816,
	525, 1816,
	526, 1816,
	527, 1816,
	528, 1816,
	529, 1816,
	530, 1816,
	531, 1816,
	532, 1816,
	533, 1816,
	534, 1816,
	535, 1816,
	536, 1816,
	537, 1816,
	538, 1816,
	540, 1816,
	541, 1816,
	543, 1816,
	544, 1816,
	546, 1816,
	547, 1816,
	548, 1816,
	549, 1816,
	550, 1816,
	551, 1816,
	553, 1816,
	554, 1816,
	556, 1816,
	557, 1816,
	558, 1816,
	559, 1816,
	560, 1816,
	562, 1816,
	564, 1816,
	565, 1816,
	566, 1816,
	567, 1816,
	568, 1816,
	569, 1816,
	570, 1816,
	571, 1816,
	573, 1816,
	574, 1816,
	575, 1816,
	576, 1816,
	577, 1816,
	578, 1816,
	579, 1816,
	582, 1816,
	583, 1816,
	584, 1816,
	585, 1816,
	586, 1816,
	587, 1816,
	588, 1816,
	589, 1816,
	591, 1816,
	594, 1816,
	595, 1816,
	596, 1816,
	597, 1816,
	598, 1816,
	599, 1816,
	601, 1816,
	602, 1816,
	603, 1816,
	604, 1816,
	605, 1816,
	606, 1816,
	607, 1816,
	608, 1816,
	609, 1816,
	614, 1816,
	615, 1816,
	616, 1816,
	617, 1816,
	618, 1816,
	619, 1816,
	-2, 0,
	-1, 171,
	1, 1664,
	655, 1664,
	658, 1664,
	-2, 0,
	-1, 172,
	1, 1664,
	561, 1664,
	655, 1664,
	658, 1664,
	-2, 0,
	-1, 205,
	160, 1784,
	181, 1784,
	194, 1784,
	260, 1784,
	295, 1784,
	369, 1784,
	380, 1784,
	580, 1784,
	-2, 1759,
	-1, 257,
	4, 1823,
	5, 1823,
	6, 1823,
	7, 1823,
	8, 1823,
	9, 1823,
	10, 1823,
	21, 1823,
	22, 1823,
	23, 1823,
	24, 1823,
	25, 1823,
	26, 1823,
	27, 1823,
	28, 1823,
	30, 1823,
	31, 1823,
	37, 1823,
	38, 1823,
	41, 1823,
	43, 1823,
	44, 1823,
	45, 1823,
	46, 1823,
	47, 1823,
	48, 1823,
	49, 1823,
	50, 1823,
	51, 1823,
	52, 1823,
	53, 1823,
	54, 1823,
	55, 1823,
	57, 1823,
	58, 1823,
	59, 1823,
	60, 1823,
	62, 1823,
	63, 1823,
	64, 1823,
	65, 1823,
	66, 1823,
	67, 1823,
	68, 1823,
	69, 1823,
	70, 1823,
	71, 1823,
	72, 1823,
	73, 1823,
	74, 1823,
	75, 1823,
	76, 1823,
	78, 1823,
	79, 1823,
	80, 1823,
	82, 1823,
	84, 1823,
	85, 1823,
	86, 1823,
	87, 1823,
	88, 1823,
	89, 1823,
	90, 1823,
	91, 1823,
	94, 1823,
	95, 1823,
	96, 1823,
	97, 1823,
	98, 1823,
	100, 1823,
	102, 1823,
	103, 1823,
	104, 1823,
	105, 1823,
	106, 1823,
	107, 1823,
	108, 1823,
	110, 1823,
	111, 1823,
	112, 1823,
	113, 1823,
	114, 1823,
	115, 1823,
	116, 1823,
	117, 1823,
	118, 1823,
	119, 1823,
	120, 1823,
	121, 1823,
	122, 1823,
	123, 1823,
	124, 1823,
	125, 1823,
	126, 1823,
	127, 1823,
	128, 1823,
	129, 1823,
	130, 1823,
	131, 1823,
	132, 1823,
	133, 1823,
	134, 1823,
	135, 1823,
	136, 1823,
	137, 1823,
	138, 1823,
	140, 1823,
	141, 1823,
	142, 1823,
	144, 1823,
	145, 1823,
	146, 1823,
	149, 1823,
	150, 1823,
	151, 1823,
	153, 1823,
	154, 1823,
	155, 1823,
	157, 1823,
	158, 1823,
	159, 1823,
	161, 1823,
	162, 1823,
	163, 1823,
	164, 1823,
	165, 1823,
	166, 1823,
	167, 1823,
	168, 1823,
	169, 1823,
	170, 1823,
	171, 1823,
	172, 1823,
	173, 1823,
	174, 1823,
	175, 1823,
	176, 1823,
	177, 1823,
	178, 1823,
	179, 1823,
	180, 1823,
	186, 1823,
	187, 1823,
	188, 1823,
	189, 1823,
	193, 1823,
	195, 1823,
	196, 1823,
	197, 1823,
	199, 1823,
	200, 1823,
	202, 1823,
	203, 1823,
	204, 1823,
	205, 1823,
	206, 1823,
	207, 1823,
	208, 1823,
	209, 1823,
	210, 1823,
	211, 1823,
	212, 1823,
	213, 1823,
	214, 1823,
	215, 1823,
	216, 1823,
	218, 1823,
	219, 1823,
	221, 1823,
	222, 1823,
	224, 1823,
	225, 1823,
	226, 1823,
	227, 1823,
	228, 1823,
	229, 1823,
	230, 1823,
	231, 1823,
	232, 1823,
	233, 1823,
	234, 1823,
	235, 1823,
	236, 1823,
	237, 1823,
	238, 1823,
	240, 1823,
	241, 1823,
	242, 1823,
	243, 1823,
	244, 1823,
	248, 1823,
	249, 1823,
	250, 1823,
	251, 1823,
	253, 1823,
	254, 1823,
	255, 1823,
	256, 1823,
	257, 1823,
	258, 1823,
	259, 1823,
	261, 1823,
	263, 1823,
	264, 1823,
	265, 1823,
	266, 1823,
	267, 1823,
	268, 1823,
	269, 1823,
	270, 1823,
	271, 1823,
	272, 1823,
	273, 1823,
	277, 1823,
	278, 1823,
	279, 1823,
	280, 1823,
	281, 1823,
	282, 1823,
	284, 1823,
	285, 1823,
	286, 1823,
	288, 1823,
	289, 1823,
	290, 1823,
	291, 1823,
	292, 1823,
	293, 1823,
	294, 1823,
	296, 1823,
	297, 1823,
	298, 1823,
	299, 1823,
	300, 1823,
	301, 1823,
	302, 1823,
	303, 1823,
	304, 1823,
	305, 1823,
	306, 1823,
	307, 1823,
	308, 1823,
	310, 1823,
	311, 1823,
	312, 1823,
	313, 1823,
	314, 1823,
	315, 1823,
	316, 1823,
	317, 1823,
	318, 1823,
	319, 1823,
	320, 1823,
	321, 1823,
	322, 1823,
	323, 1823,
	324, 1823,
	325, 1823,
	326, 1823,
	327, 1823,
	328, 1823,
	329, 1823,
	330, 1823,
	331, 1823,
	332, 1823,
	334, 1823,
	335, 1823,
	336, 1823,
	337, 1823,
	338, 1823,
	339, 1823,
	340, 1823,
	341, 1823,
	342, 1823,
	343, 1823,
	344, 1823,
	345, 1823,
	346, 1823,
	347, 1823,
	348, 1823,
	349, 1823,
	350, 1823,
	351, 1823,
	352, 1823,
	353, 1823,
	354, 1823,
	355, 1823,
	356, 1823,
	357, 1823,
	358, 1823,
	359, 1823,
	360, 1823,
	361, 1823,
	362, 1823,
	363, 1823,
	364, 1823,
	365, 1823,
	366, 1823,
	367, 1823,
	368, 1823,
	371, 1823,
	373, 1823,
	376, 1823,
	377, 1823,
	378, 1823,
	381, 1823,
	382, 1823,
	383, 1823,
	384, 1823,
	385, 1823,
	386, 1823,
	387, 1823,
	388, 1823,
	389, 1823,
	390, 1823,
	391, 1823,
	392, 1823,
	393, 1823,
	394, 1823,
	395, 1823,
	396, 1823,
	397, 1823,
	398, 1823,
	399, 1823,
	400, 1823,
	402, 1823,
	403, 1823,
	404, 1823,
	405, 1823,
	406, 1823,
	407, 1823,
	408, 1823,
	409, 1823,
	410, 1823,
	411, 1823,
	412, 1823,
	413, 1823,
	414, 1823,
	415, 1823,
	416, 1823,
	418, 1823,
	419, 1823,
	420, 1823,
	422, 1823,
	423, 1823,
	424, 1823,
	425, 1823,
	426, 1823,
	427, 1823,
	428, 1823,
	429, 1823,
	430, 1823,
	431, 1823,
	432, 1823,
	433, 1823,
	434, 1823,
	435, 1823,
	437, 1823,
	439, 1823,
	440, 1823,
	441, 1823,
	447, 1823,
	448, 1823,
	449, 1823,
	451, 1823,
	452, 1823,
	453, 1823,
	454, 1823,
	455, 1823,
	456, 1823,
	457, 1823,
	458, 1823,
	459, 1823,
	460, 1823,
	461, 1823,
	463, 1823,
	464, 1823,
	465, 1823,
	466, 1823,
	467, 1823,
	468, 1823,
	469, 1823,
	470, 1823,
	471, 1823,
	472, 1823,
	473, 1823,
	474, 1823,
	475, 1823,
	477, 1823,
	478, 1823,
	479, 1823,
	480, 1823,
	481, 1823,
	482, 1823,
	483, 1823,
	484, 1823,
	485, 1823,
	486, 1823,
	487, 1823,
	488, 1823,
	489, 1823,
	490, 1823,
	492, 1823,
	493, 1823,
	494, 1823,
	495, 1823,
	496, 1823,
	497, 1823,
	498, 1823,
	499, 1823,
	500, 1823,
	501, 1823,
	502, 1823,
	503, 1823,
	504, 1823,
	505, 1823,
	506, 1823,
	507, 1823,
	508, 1823,
	509, 1823,
	510, 1823,
	511, 1823,
	512, 1823,
	513, 1823,
	514, 1823,
	516, 1823,
	518, 1823,
	519, 1823,
	520, 1823,
	521, 1823,
	522, 1823,
	523, 1823,
	524, 1823,
	525, 1823,
	526, 1823,
	527, 1823,
	528, 1823,
	529, 1823,
	530, 1823,
	531, 1823,
	532, 1823,
	533, 1823,
	534, 1823,
	535, 1823,
	536, 1823,
	537, 1823,
	538, 1823,
	540, 1823,
	541, 1823,
	542, 1823,
	543, 1823,
	544, 1823,
	546, 1823,
	547, 1823,
	548, 1823,
	549, 1823,
	550, 1823,
	551, 1823,
	553, 1823,
	554, 1823,
	556, 1823,
	557, 1823,
	558, 1823,
	559, 1823,
	560, 1823,
	562, 1823,
	564, 1823,
	565, 1823,
	566, 1823,
	567, 1823,
	568, 1823,
	569, 1823,
	570, 1823,
	571, 1823,
	572, 1823,
	573, 1823,
	574, 1823,
	575, 1823,
	576, 1823,
	577, 1823,
	578, 1823,
	579, 1823,
	581, 1823,
	582, 1823,
	583, 1823,
	584, 1823,
	585, 1823,
	586, 1823,
	587, 1823,
	588, 1823,
	589, 1823,
	590, 1823,
	591, 1823,
	594, 1823,
	595, 1823,
	596, 1823,
	597, 1823,
	598, 1823,
	599, 1823,
	601, 1823,
	602, 1823,
	603, 1823,
	604, 1823,
	605, 1823,
	606, 1823,
	607, 1823,
	608, 1823,
	609, 1823,
	614, 1823,
	615, 1823,
	616, 1823,
	617, 1823,
	618, 1823,
	619, 1823,
	620, 1823,
	635, 1823,
	642, 1823,
	643, 1823,
	644, 1823,
	652, 1823,
	656, 1823,
	-2, 0,
	-1, 827,
	4, 1539,
	21, 1539,
	22, 1539,
	23, 1539,
	24, 1539,
	25, 1539,
	26, 1539,
	27, 1539,
	28, 1539,
	30, 1539,
	31, 1539,
	37, 1539,
	41, 1539,
	43, 1539,
	44, 1539,
	45, 1539,
	47, 1539,
	48, 1539,
	49, 1539,
	50, 1539,
	51, 1539,
	52, 1539,
	53, 1539,
	54, 1539,
	55, 1539,
	57, 1539,
	58, 1539,
	59, 1539,
	60, 1539,
	62, 1539,
	63, 1539,
	64, 1539,
	65, 1539,
	66, 1539,
	67, 1539,
	68, 1539,
	69, 1539,
	73, 1539,
	74, 1539,
	75, 1539,
	76, 1539,
	78, 1539,
	79, 1539,
	80, 1539,
	84, 1539,
	85, 1539,
	86, 1539,
	87, 1539,
	88, 1539,
	89, 1539,
	90, 1539,
	91, 1539,
	94, 1539,
	95, 1539,
	96, 1539,
	97, 1539,
	98, 1539,
	100, 1539,
	102, 1539,
	103, 1539,
	104, 1539,
	105, 1539,
	106, 1539,
	107, 1539,
	108, 1539,
	110, 1539,
	111, 1539,
	112, 1539,
	114, 1539,
	115, 1539,
	116, 1539,
	124, 1539,
	125, 1539,
	126, 1539,
	127, 1539,
	128, 1539,
	130, 1539,
	131, 1539,
	132, 1539,
	133, 1539,
	135, 1539,
	136, 1539,
	137, 1539,
	138, 1539,
	140, 1539,
	141, 1539,
	142, 1539,
	144, 1539,
	145, 1539,
	146, 1539,
	149, 1539,
	150, 1539,
	151, 1539,
	153, 1539,
	154, 1539,
	155, 1539,
	157, 1539,
	158, 1539,
	159, 1539,
	161, 1539,
	162, 1539,
	163, 1539,
	164, 1539,
	165, 1539,
	166, 1539,
	167, 1539,
	168, 1539,
	169, 1539,
	170, 1539,
	171, 1539,
	172, 1539,
	173, 1539,
	174, 1539,
	175, 1539,
	176, 1539,
	177, 1539,
	178, 1539,
	180, 1539,
	186, 1539,
	187, 1539,
	188, 1539,
	189, 1539,
	193, 1539,
	195, 1539,
	196, 1539,
	197, 1539,
	199, 1539,
	200, 1539,
	203, 1539,
	204, 1539,
	205, 1539,
	206, 1539,
	207, 1539,
	208, 1539,
	209, 1539,
	210, 1539,
	211, 1539,
	212, 1539,
	213, 1539,
	214, 1539,
	215, 1539,
	216, 1539,
	218, 1539,
	219, 1539,
	221, 1539,
	222, 1539,
	224, 1539,
	225, 1539,
	226, 1539,
	227, 1539,
	228, 1539,
	229, 1539,
	230, 1539,
	231, 1539,
	232, 1539,
	233, 1539,
	234, 1539,
	236, 1539,
	237, 1539,
	238, 1539,
	240, 1539,
	241, 1539,
	242, 1539,
	243, 1539,
	244, 1539,
	248, 1539,
	249, 1539,
	250, 1539,
	251, 1539,
	254, 1539,
	255, 1539,
	256, 1539,
	257, 1539,
	258, 1539,
	259, 1539,
	261, 1539,
	263, 1539,
	264, 1539,
	265, 1539,
	267, 1539,
	269, 1539,
	270, 1539,
	271, 1539,
	273, 1539,
	277, 1539,
	278, 1539,
	279, 1539,
	280, 1539,
	281, 1539,
	282, 1539,
	284, 1539,
	285, 1539,
	286, 1539,
	288, 1539,
	289, 1539,
	290, 1539,
	292, 1539,
	293, 1539,
	296, 1539,
	297, 1539,
	298, 1539,
	299, 1539,
	300, 1539,
	301, 1539,
	302, 1539,
	305, 1539,
	306, 1539,
	307, 1539,
	308, 1539,
	310, 1539,
	311, 1539,
	312, 1539,
	313, 1539,
	314, 1539,
	315, 1539,
	316, 1539,
	317, 1539,
	318, 1539,
	319, 1539,
	320, 1539,
	321, 1539,
	322, 1539,
	323, 1539,
	324, 1539,
	325, 1539,
	326, 1539,
	327, 1539,
	328, 1539,
	329, 1539,
	330, 1539,
	331, 1539,
	332, 1539,
	334, 1539,
	336, 1539,
	337, 1539,
	338, 1539,
	339, 1539,
	340, 1539,
	341, 1539,
	342, 1539,
	343, 1539,
	344, 1539,
	345, 1539,
	346, 1539,
	347, 1539,
	348, 1539,
	349, 1539,
	350, 1539,
	351, 1539,
	352, 1539,
	354, 1539,
	355, 1539,
	357, 1539,
	359, 1539,
	360, 1539,
	361, 1539,
	362, 1539,
	364, 1539,
	365, 1539,
	366, 1539,
	367, 1539,
	368, 1539,
	371, 1539,
	373, 1539,
	376, 1539,
	377, 1539,
	378, 1539,
	381, 1539,
	382, 1539,
	383, 1539,
	385, 1539,
	387, 1539,
	388, 1539,
	389, 1539,
	390, 1539,
	391, 1539,
	392, 1539,
	393, 1539,
	394, 1539,
	395, 1539,
	396, 1539,
	397, 1539,
	398, 1539,
	399, 1539,
	400, 1539,
	402, 1539,
	403, 1539,
	404, 1539,
	405, 1539,
	406, 1539,
	407, 1539,
	408, 1539,
	409, 1539,
	410, 1539,
	411, 1539,
	412, 1539,
	413, 1539,
	414, 1539,
	415, 1539,
	416, 1539,
	418, 1539,
	419, 1539,
	420, 1539,
	422, 1539,
	423, 1539,
	424, 1539,
	425, 1539,
	426, 1539,
	427, 1539,
	428, 1539,
	429, 1539,
	430, 1539,
	431, 1539,
	432, 1539,
	433, 1539,
	434, 1539,
	435, 1539,
	437, 1539,
	439, 1539,
	440, 1539,
	441, 1539,
	447, 1539,
	448, 1539,
	449, 1539,
	451, 1539,
	452, 1539,
	453, 1539,
	454, 1539,
	455, 1539,
	456, 1539,
	457, 1539,
	458, 1539,
	459, 1539,
	460, 1539,
	461, 1539,
	463, 1539,
	464, 1539,
	465, 1539,
	466, 1539,
	467, 1539,
	469, 1539,
	470, 1539,
	471, 1539,
	472, 1539,
	473, 1539,
	474, 1539,
	475, 1539,
	477, 1539,
	478, 1539,
	479, 1539,
	480, 1539,
	481, 1539,
	482, 1539,
	483, 1539,
	484, 1539,
	485, 1539,
	486, 1539,
	487, 1539,
	488, 1539,
	489, 1539,
	490, 1539,
	492, 1539,
	493, 1539,
	494, 1539,
	495, 1539,
	496, 1539,
	497, 1539,
	499, 1539,
	500, 1539,
	501, 1539,
	502, 1539,
	503, 1539,
	504, 1539,
	505, 1539,
	507, 1539,
	508, 1539,
	509, 1539,
	510, 1539,
	511, 1539,
	512, 1539,
	513, 1539,
	514, 1539,
	516, 1539,
	518, 1539,
	519, 1539,
	520, 1539,
	521, 1539,
	522, 1539,
	523, 1539,
	524, 1539,
	525, 1539,
	526, 1539,
	527, 1539,
	528, 1539,
	529, 1539,
	530, 1539,
	531, 1539,
	532, 1539,
	533, 1539,
	534, 1539,
	535, 1539,
	536, 1539,
	537, 1539,
	538, 1539,
	540, 1539,
	541, 1539,
	543, 1539,
	544, 1539,
	546, 1539,
	547, 1539,
	548, 1539,
	549, 1539,
	550, 1539,
	551, 1539,
	553, 1539,
	554, 1539,
	556, 1539,
	557, 1539,
	558, 1539,
	559, 1539,
	560, 1539,
	562, 1539,
	564, 1539,
	565, 1539,
	566, 1539,
	567, 1539,
	568, 1539,
	569, 1539,
	570, 1539,
	571, 1539,
	573, 1539,
	574, 1539,
	575, 1539,
	576, 1539,
	577, 1539,
	578, 1539,
	579, 1539,
	582, 1539,
	583, 1539,
	584, 1539,
	585, 1539,
	586, 1539,
	587, 1539,
	588, 1539,
	589, 1539,
	591, 1539,
	594, 1539,
	595, 1539,
	596, 1539,
	597, 1539,
	598, 1539,
	599, 1539,
	601, 1539,
	602, 1539,
	603, 1539,
	604, 1539,
	605, 1539,
	606, 1539,
	607, 1539,
	608, 1539,
	609, 1539,
	614, 1539,
	615, 1539,
	616, 1539,
	617, 1539,
	618, 1539,
	619, 1539,
	-2, 0,
	-1, 846,
	201, 2626,
	561, 2626,
	634, 2626,
	654, 2626,
	-2, 0,
	-1, 847,
	201, 2612,
	561, 2612,
	634, 2612,
	654, 2612,
	-2, 0,
	-1, 849,
	201, 2905,
	561, 2905,
	634, 2905,
	654, 2905,
	-2, 0,
	-1, 852,
	201, 2749,
	561, 2749,
	634, 2749,
	654, 2749,
	-2, 0,
	-1, 853,
	201, 2952,
	561, 2952,
	634, 2952,
	654, 2952,
	-2, 0,
	-1, 861,
	201, 2777,
	561, 2777,
	634, 2777,
	654, 2777,
	-2, 836,
	-1, 877,
	8, 969,
	29, 969,
	642, 969,
	643, 969,
	-2, 974,
	-1, 881,
	1, 2683,
	655, 2683,
	658, 2683,
	-2, 974,
	-1, 882,
	1, 2736,
	655, 2736,
	658, 2736,
	-2, 974,
	-1, 885,
	1, 2782,
	655, 2782,
	658, 2782,
	-2, 967,
	-1, 886,
	1, 2839,
	655, 2839,
	658, 2839,
	-2, 968,
	-1, 887,
	1, 2688,
	655, 2688,
	658, 2688,
	-2, 971,
	-1, 888,
	1, 2598,
	655, 2598,
	658, 2598,
	-2, 972,
	-1, 928,
	654, 2555,
	657, 2555,
	-2, 1200,
	-1, 929,
	654, 2557,
	657, 2557,
	-2, 1201,
	-1, 930,
	654, 2556,
	657, 2556,
	-2, 1202,
	-1, 931,
	657, 2479,
	-2, 1203,
	-1, 956,
	194, 289,
	-2, 0,
	-1, 977,
	46, 2528,
	-2, 0,
	-1, 978,
	601, 1517,
	-2, 1285,
	-1, 995,
	4, 1957,
	21, 1957,
	22, 1957,
	23, 1957,
	24, 1957,
	25, 1957,
	26, 1957,
	27, 1957,
	28, 1957,
	30, 1957,
	31, 1957,
	37, 1957,
	41, 1957,
	43, 1957,
	44, 1957,
	45, 1957,
	47, 1957,
	48, 1957,
	49, 1957,
	50, 1957,
	51, 1957,
	52, 1957,
	53, 1957,
	54, 1957,
	55, 1957,
	57, 1957,
	58, 1957,
	59, 1957,
	60, 1957,
	62, 1957,
	63, 1957,
	64, 1957,
	65, 1957,
	66, 1957,
	67, 1957,
	68, 1957,
	69, 1957,
	73, 1957,
	74, 1957,
	75, 1957,
	76, 1957,
	78, 1957,
	79, 1957,
	80, 1957,
	84, 1957,
	85, 1957,
	86, 1957,
	87, 1957,
	88, 1957,
	89, 1957,
	90, 1957,
	91, 1957,
	94, 1957,
	95, 1957,
	96, 1957,
	97, 1957,
	98, 1957,
	100, 1957,
	102, 1957,
	103, 1957,
	104, 1957,
	105, 1957,
	106, 1957,
	107, 1957,
	108, 1957,
	110, 1957,
	111, 1957,
	112, 1957,
	114, 1957,
	115, 1957,
	116, 1957,
	124, 1957,
	125, 1957,
	126, 1957,
	127, 1957,
	128, 1957,
	130, 1957,
	131, 1957,
	132, 1957,
	133, 1957,
	135, 1957,
	136, 1957,
	137, 1957,
	138, 1957,
	140, 1957,
	141, 1957,
	142, 1957,
	144, 1957,
	145, 1957,
	146, 1957,
	149, 1957,
	150, 1957,
	151, 1957,
	153, 1957,
	154, 1957,
	155, 1957,
	157, 1957,
	158, 1957,
	159, 1957,
	161, 1957,
	162, 1957,
	163, 1957,
	164, 1957,
	165, 1957,
	166, 1957,
	167, 1957,
	168, 1957,
	169, 1957,
	170, 1957,
	171, 1957,
	172, 1957,
	173, 1957,
	174, 1957,
	175, 1957,
	176, 1957,
	177, 1957,
	178, 1957,
	180, 1957,
	186, 1957,
	187, 1957,
	188, 1957,
	189, 1957,
	193, 1957,
	195, 1957,
	196, 1957,
	197, 1957,
	199, 1957,
	200, 1957,
	203, 1957,
	204, 1957,
	205, 1957,
	206, 1957,
	207, 1957,
	208, 1957,
	209, 1957,
	210, 1957,
	211, 1957,
	212, 1957,
	213, 1957,
	214, 1957,
	215, 1957,
	216, 1957,
	218, 1957,
	219, 1957,
	221, 1957,
	222, 1957,
	224, 1957,
	225, 1957,
	226, 1957,
	227, 1957,
	228, 1957,
	229, 1957,
	230, 1957,
	231, 1957,
	232, 1957,
	233, 1957,
	234, 1957,
	236, 1957,
	237, 1957,
	238, 1957,
	240, 1957,
	241, 1957,
	242, 1957,
	243, 1957,
	244, 1957,
	248, 1957,
	249, 1957,
	250, 1957,
	251, 1957,
	254, 1957,
	255, 1957,
	256, 1957,
	257, 1957,
	258, 1957,
	259, 1957,
	261, 1957,
	263, 1957,
	264, 1957,
	265, 1957,
	267, 1957,
	269, 1957,
	270, 1957,
	271, 1957,
	273, 1957,
	277, 1957,
	278, 1957,
	279, 1957,
	280, 1957,
	281, 1957,
	282, 1957,
	284, 1957,
	285, 1957,
	286, 1957,
	288, 1957,
	289, 1957,
	290, 1957,
	292, 1957,
	293, 1957,
	296, 1957,
	297, 1957,
	298, 1957,
	299, 1957,
	300, 1957,
	301, 1957,
	302, 1957,
	305, 1957,
	306, 1957,
	307, 1957,
	308, 1957,
	310, 1957,
	311, 1957,
	312, 1957,
	313, 1957,
	314, 1957,
	315, 1957,
	316, 1957,
	317, 1957,
	318, 1957,
	319, 1957,
	320, 1957,
	321, 1957,
	322, 1957,
	323, 1957,
	324, 1957,
	325, 1957,
	326, 1957,
	327, 1957,
	328, 1957,
	329, 1957,
	330, 1957,
	331, 1957,
	332, 1957,
	334, 1957,
	336, 1957,
	337, 1957,
	338, 1957,
	339, 1957,
	340, 1957,
	341, 1957,
	342, 1957,
	343, 1957,
	344, 1957,
	345, 1957,
	346, 1957,
	347, 1957,
	348, 1957,
	349, 1957,
	350, 1957,
	351, 1957,
	352, 1957,
	354, 1957,
	355, 1957,
	357, 1957,
	359, 1957,
	360, 1957,
	361, 1957,
	362, 1957,
	364, 1957,
	365, 1957,
	366, 1957,
	367, 1957,
	368, 1957,
	371, 1957,
	373, 1957,
	376, 1957,
	377, 1957,
	378, 1957,
	381, 1957,
	382, 1957,
	383, 1957,
	385, 1957,
	387, 1957,
	388, 1957,
	389, 1957,
	390, 1957,
	391, 1957,
	392, 1957,
	393, 1957,
	394, 1957,
	395, 1957,
	396, 1957,
	397, 1957,
	398, 1957,
	399, 1957,
	400, 1957,
	402, 1957,
	403, 1957,
	404, 1957,
	405, 1957,
	406, 1957,
	407, 1957,
	408, 1957,
	409, 1957,
	410, 1957,
	411, 1957,
	412, 1957,
	413, 1957,
	414, 1957,
	415, 1957,
	416, 1957,
	418, 1957,
	419, 1957,
	420, 1957,
	422, 1957,
	423, 1957,
	424, 1957,
	425, 1957,
	426, 1957,
	427, 1957,
	428, 1957,
	429, 1957,
	430, 1957,
	431, 1957,
	432, 1957,
	433, 1957,
	434, 1957,
	435, 1957,
	437, 1957,
	439, 1957,
	440, 1957,
	441, 1957,
	447, 1957,
	448, 1957,
	449, 1957,
	451, 1957,
	452, 1957,
	453, 1957,
	454, 1957,
	455, 1957,
	456, 1957,
	457, 1957,
	458, 1957,
	459, 1957,
	460, 1957,
	461, 1957,
	463, 1957,
	464, 1957,
	465, 1957,
	466, 1957,
	467, 1957,
	469, 1957,
	470, 1957,
	471, 1957,
	472, 1957,
	473, 1957,
	474, 1957,
	475, 1957,
	477, 1957,
	478, 1957,
	479, 1957,
	480, 1957,
	481, 1957,
	482, 1957,
	483, 1957,
	484, 1957,
	485, 1957,
	486, 1957,
	487, 1957,
	488, 1957,
	489, 1957,
	490, 1957,
	492, 1957,
	493, 1957,
	494, 1957,
	495, 1957,
	496, 1957,
	497, 1957,
	499, 1957,
	500, 1957,
	501, 1957,
	502, 1957,
	503, 1957,
	504, 1957,
	505, 1957,
	507, 1957,
	508, 1957,
	509, 1957,
	510, 1957,
	511, 1957,
	512, 1957,
	513, 1957,
	514, 1957,
	516, 1957,
	518, 1957,
	519, 1957,
	520, 1957,
	521, 1957,
	522, 1957,
	523, 1957,
	524, 1957,
	525, 1957,
	526, 1957,
	527, 1957,
	528, 1957,
	529, 1957,
	530, 1957,
	531, 1957,
	532, 1957,
	533, 1957,
	534, 1957,
	535, 1957,
	536, 1957,
	537, 1957,
	538, 1957,
	540, 1957,
	541, 1957,
	543, 1957,
	544, 1957,
	546, 1957,
	547, 1957,
	548, 1957,
	549, 1957,
	550, 1957,
	551, 1957,
	553, 1957,
	554, 1957,
	556, 1957,
	557, 1957,
	558, 1957,
	559, 1957,
	560, 1957,
	562, 1957,
	564, 1957,
	565, 1957,
	566, 1957,
	567, 1957,
	568, 1957,
	569, 1957,
	570, 1957,
	571, 1957,
	573, 1957,
	574, 1957,
	575, 1957,
	576, 1957,
	577, 1957,
	578, 1957,
	579, 1957,
	582, 1957,
	583, 1957,
	584, 1957,
	585, 1957,
	586, 1957,
	587, 1957,
	588, 1957,
	589, 1957,
	591, 1957,
	594, 1957,
	595, 1957,
	596, 1957,
	597, 1957,
	598, 1957,
	599, 1957,
	601, 1957,
	602, 1957,
	603, 1957,
	604, 1957,
	605, 1957,
	606, 1957,
	607, 1957,
	608, 1957,
	609, 1957,
	614, 1957,
	615, 1957,
	616, 1957,
	617, 1957,
	618, 1957,
	619, 1957,
	-2, 0,
	-1, 1005,
	281, 512,
	-2, 0,
	-1, 1083,
	201, 1013,
	-2, 0,
	-1, 1084,
	424, 1066,
	497, 1066,
	544, 1066,
	566, 1066,
	-2, 0,
	-1, 1085,
	424, 1065,
	497, 1065,
	544, 1065,
	566, 1065,
	-2, 987,
	-1, 1089,
	1, 1118,
	651, 1118,
	653, 1118,
	655, 1118,
	658, 1118,
	-2, 0,
	-1, 1091,
	1, 1040,
	651, 1040,
	653, 1040,
	655, 1040,
	658, 1040,
	-2, 0,
	-1, 1092,
	1, 1044,
	651, 1044,
	653, 1044,
	655, 1044,
	658, 1044,
	-2, 0,
	-1, 1093,
	1, 1191,
	194, 1191,
	651, 1191,
	653, 1191,
	655, 1191,
	658, 1191,
	-2, 0,
	-1, 1101,
	1, 1071,
	651, 1071,
	653, 1071,
	655, 1071,
	658, 1071,
	-2, 0,
	-1, 1108,
	1, 1118,
	651, 1118,
	653, 1118,
	655, 1118,
	658, 1118,
	-2, 0,
	-1, 1109,
	1, 1120,
	651, 1120,
	653, 1120,
	655, 1120,
	658, 1120,
	-2, 0,
	-1, 1110,
	1, 1123,
	651, 1123,
	653, 1123,
	655, 1123,
	658, 1123,
	-2, 0,
	-1, 1118,
	1, 1154,
	651, 1154,
	653, 1154,
	655, 1154,
	658, 1154,
	-2, 0,
	-1, 1119,
	1, 1156,
	651, 1156,
	653, 1156,
	655, 1156,
	658, 1156,
	-2, 0,
	-1, 1124,
	1, 1184,
	651, 1184,
	653, 1184,
	655, 1184,
	658, 1184,
	-2, 0,
	-1, 1175,
	181, 1827,
	194, 1827,
	295, 1827,
	369, 1827,
	-2, 1763,
	-1, 1191,
	181, 1826,
	194, 1826,
	295, 1826,
	369, 1826,
	-2, 1760,
	-1, 1220,
	654, 2554,
	-2, 844,
	-1, 1249,
	5, 2546,
	652, 2544,
	-2, 2535,
	-1, 1257,
	5, 2567,
	652, 2564,
	-2, 2555,
	-1, 1258,
	5, 2568,
	652, 2565,
	-2, 2556,
	-1, 1266,
	654, 2552,
	-2, 2534,
	-1, 1267,
	652, 3062,
	-2, 2553,
	-1, 1290,
	5, 2569,
	38, 2569,
	134, 2569,
	634, 2569,
	650, 2569,
	653, 2569,
	654, 2569,
	657, 2569,
	-2, 3061,
	-1, 1291,
	5, 2032,
	-2, 3031,
	-1, 1292,
	5, 2033,
	-2, 3032,
	-1, 1293,
	5, 2034,
	-2, 3047,
	-1, 1294,
	5, 2035,
	-2, 3009,
	-1, 1295,
	5, 2036,
	-2, 3044,
	-1, 1296,
	5, 2044,
	-2, 3022,
	-1, 1297,
	5, 2031,
	-2, 3018,
	-1, 1298,
	5, 2031,
	-2, 3017,
	-1, 1299,
	5, 2031,
	-2, 3037,
	-1, 1300,
	5, 2042,
	-2, 3011,
	-1, 1301,
	5, 2047,
	-2, 3010,
	-1, 1302,
	5, 2049,
	-2, 3057,
	-1, 1305,
	5, 2071,
	-2, 3050,
	-1, 1306,
	5, 2063,
	-2, 3051,
	-1, 1307,
	5, 2071,
	-2, 3052,
	-1, 1308,
	5, 2067,
	-2, 3053,
	-1, 1309,
	5, 2017,
	-2, 3023,
	-1, 1310,
	5, 2018,
	-2, 3024,
	-1, 1311,
	5, 2019,
	-2, 3012,
	-1, 1339,
	5, 2054,
	-2, 3058,
	-1, 1340,
	5, 2055,
	-2, 3048,
	-1, 1341,
	5, 2056,
	602, 2056,
	-2, 3013,
	-1, 1342,
	5, 2057,
	602, 2057,
	-2, 3014,
	-1, 1380,
	652, 2564,
	-2, 2555,
	-1, 1381,
	652, 2565,
	-2, 2556,
	-1, 1482,
	201, 2952,
	561, 2952,
	634, 2952,
	654, 2952,
	-2, 0,
	-1, 1487,
	1, 820,
	655, 820,
	658, 820,
	-2, 1672,
	-1, 1534,
	1, 1667,
	655, 1667,
	658, 1667,
	-2, 1672,
	-1, 1636,
	389, 2529,
	451, 2529,
	499, 2529,
	644, 2529,
	-2, 2517,
	-1, 1642,
	201, 149,
	288, 149,
	354, 149,
	609, 149,
	-2, 2947,
	-1, 1643,
	201, 150,
	288, 150,
	354, 150,
	609, 150,
	-2, 2673,
	-1, 1644,
	201, 151,
	288, 151,
	354, 151,
	609, 151,
	-2, 2862,
	-1, 1650,
	656, 2529,
	-2, 2531,
	-1, 1674,
	1, 1514,
	456, 1468,
	499, 1468,
	626, 1468,
	631, 1468,
	651, 1514,
	653, 1514,
	655, 1514,
	658, 1514,
	-2, 1812,
	-1, 1680,
	217, 1611,
	239, 1611,
	467, 1611,
	-2, 0,
	-1, 1746,
	46, 2527,
	-2, 1247,
	-1, 1753,
	1, 1514,
	651, 1514,
	653, 1514,
	655, 1514,
	658, 1514,
	-2, 1812,
	-1, 1756,
	433, 1284,
	601, 1284,
	-2, 433,
	-1, 1762,
	4, 1539,
	21, 1539,
	22, 1539,
	23, 1539,
	24, 1539,
	25, 1539,
	26, 1539,
	27, 1539,
	28, 1539,
	30, 1539,
	31, 1539,
	37, 1539,
	41, 1539,
	43, 1539,
	44, 1539,
	45, 1539,
	47, 1539,
	48, 1539,
	49, 1539,
	50, 1539,
	51, 1539,
	52, 1539,
	53, 1539,
	54, 1539,
	55, 1539,
	57, 1539,
	58, 1539,
	59, 1539,
	60, 1539,
	62, 1539,
	63, 1539,
	64, 1539,
	65, 1539,
	66, 1539,
	67, 1539,
	68, 1539,
	69, 1539,
	73, 1539,
	74, 1539,
	75, 1539,
	76, 1539,
	78, 1539,
	79, 1539,
	80, 1539,
	84, 1539,
	85, 1539,
	86, 1539,
	87, 1539,
	88, 1539,
	89, 1539,
	90, 1539,
	91, 1539,
	94, 1539,
	95, 1539,
	96, 1539,
	97, 1539,
	98, 1539,
	100, 1539,
	102, 1539,
	103, 1539,
	104, 1539,
	105, 1539,
	106, 1539,
	107, 1539,
	108, 1539,
	110, 1539,
	111, 1539,
	112, 1539,
	114, 1539,
	115, 1539,
	116, 1539,
	124, 1539,
	125, 1539,
	126, 1539,
	127, 1539,
	128, 1539,
	130, 1539,
	131, 1539,
	132, 1539,
	133, 1539,
	135, 1539,
	136, 1539,
	137, 1539,
	138, 1539,
	140, 1539,
	141, 1539,
	142, 1539,
	144, 1539,
	145, 1539,
	146, 1539,
	149, 1539,
	150, 1539,
	151, 1539,
	153, 1539,
	154, 1539,
	155, 1539,
	157, 1539,
	158, 1539,
	159, 1539,
	161, 1539,
	162, 1539,
	163, 1539,
	164, 1539,
	165, 1539,
	166, 1539,
	167, 1539,
	168, 1539,
	169, 1539,
	170, 1539,
	171, 1539,
	172, 1539,
	173, 1539,
	174, 1539,
	175, 1539,
	176, 1539,
	177, 1539,
	178, 1539,
	186, 1539,
	187, 1539,
	188, 1539,
	189, 1539,
	193, 1539,
	195, 1539,
	196, 1539,
	197, 1539,
	199, 1539,
	200, 1539,
	203, 1539,
	204, 1539,
	205, 1539,
	206, 1539,
	207, 1539,
	208, 1539,
	209, 1539,
	210, 1539,
	211, 1539,
	212, 1539,
	213, 1539,
	214, 1539,
	215, 1539,
	216, 1539,
	218, 1539,
	219, 1539,
	221, 1539,
	222, 1539,
	224, 1539,
	225, 1539,
	226, 1539,
	227, 1539,
	228, 1539,
	229, 1539,
	230, 1539,
	231, 1539,
	232, 1539,
	233, 1539,
	234, 1539,
	236, 1539,
	237, 1539,
	238, 1539,
	240, 1539,
	241, 1539,
	242, 1539,
	243, 1539,
	244, 1539,
	249, 1539,
	250, 1539,
	251, 1539,
	254, 1539,
	255, 1539,
	256, 1539,
	257, 1539,
	258, 1539,
	259, 1539,
	261, 1539,
	263, 1539,
	264, 1539,
	265, 1539,
	267, 1539,
	269, 1539,
	270, 1539,
	271, 1539,
	273, 1539,
	277, 1539,
	278, 1539,
	279, 1539,
	280, 1539,
	281, 1539,
	282, 1539,
	284, 1539,
	285, 1539,
	286, 1539,
	288, 1539,
	289, 1539,
	290, 1539,
	292, 1539,
	293, 1539,
	296, 1539,
	297, 1539,
	298, 1539,
	299, 1539,
	300, 1539,
	301, 1539,
	302, 1539,
	305, 1539,
	306, 1539,
	307, 1539,
	308, 1539,
	310, 1539,
	311, 1539,
	312, 1539,
	313, 1539,
	314, 1539,
	315, 1539,
	316, 1539,
	317, 1539,
	318, 1539,
	319, 1539,
	320, 1539,
	321, 1539,
	322, 1539,
	323, 1539,
	324, 1539,
	325, 1539,
	326, 1539,
	327, 1539,
	328, 1539,
	329, 1539,
	330, 1539,
	331, 1539,
	332, 1539,
	334, 1539,
	336, 1539,
	337, 1539,
	338, 1539,
	339, 1539,
	340, 1539,
	341, 1539,
	342, 1539,
	343, 1539,
	344, 1539,
	345, 1539,
	346, 1539,
	347, 1539,
	348, 1539,
	349, 1539,
	350, 1539,
	351, 1539,
	352, 1539,
	354, 1539,
	355, 1539,
	359, 1539,
	360, 1539,
	361, 1539,
	362, 1539,
	364, 1539,
	365, 1539,
	366, 1539,
	367, 1539,
	368, 1539,
	371, 1539,
	373, 1539,
	374, 1539,
	376, 1539,
	377, 1539,
	378, 1539,
	381, 1539,
	382, 1539,
	383, 1539,
	385, 1539,
	387, 1539,
	388, 1539,
	389, 1539,
	390, 1539,
	391, 1539,
	392, 1539,
	393, 1539,
	394, 1539,
	395, 1539,
	396, 1539,
	397, 1539,
	398, 1539,
	399, 1539,
	400, 1539,
	402, 1539,
	403, 1539,
	404, 1539,
	405, 1539,
	406, 1539,
	407, 1539,
	408, 1539,
	409, 1539,
	410, 1539,
	411, 1539,
	412, 1539,
	413, 1539,
	414, 1539,
	415, 1539,
	416, 1539,
	418, 1539,
	419, 1539,
	420, 1539,
	422, 1539,
	423, 1539,
	424, 1539,
	425, 1539,
	426, 1539,
	427, 1539,
	428, 1539,
	429, 1539,
	430, 1539,
	431, 1539,
	432, 1539,
	433, 1539,
	434, 1539,
	435, 1539,
	437, 1539,
	439, 1539,
	440, 1539,
	441, 1539,
	447, 1539,
	448, 1539,
	449, 1539,
	451, 1539,
	452, 1539,
	453, 1539,
	454, 1539,
	455, 1539,
	456, 1539,
	457, 1539,
	458, 1539,
	459, 1539,
	460, 1539,
	461, 1539,
	463, 1539,
	464, 1539,
	465, 1539,
	466, 1539,
	467, 1539,
	469, 1539,
	470, 1539,
	471, 1539,
	472, 1539,
	473, 1539,
	474, 1539,
	475, 1539,
	477, 1539,
	478, 1539,
	479, 1539,
	480, 1539,
	481, 1539,
	482, 1539,
	483, 1539,
	484, 1539,
	485, 1539,
	486, 1539,
	487, 1539,
	488, 1539,
	489, 1539,
	490, 1539,
	492, 1539,
	493, 1539,
	494, 1539,
	495, 1539,
	496, 1539,
	497, 1539,
	499, 1539,
	500, 1539,
	501, 1539,
	502, 1539,
	503, 1539,
	504, 1539,
	505, 1539,
	507, 1539,
	508, 1539,
	509, 1539,
	510, 1539,
	511, 1539,
	512, 1539,
	513, 1539,
	514, 1539,
	516, 1539,
	518, 1539,
	519, 1539,
	520, 1539,
	521, 1539,
	522, 1539,
	523, 1539,
	524, 1539,
	525, 1539,
	526, 1539,
	527, 1539,
	528, 1539,
	529, 1539,
	530, 1539,
	531, 1539,
	532, 1539,
	533, 1539,
	534, 1539,
	535, 1539,
	536, 1539,
	537, 1539,
	538, 1539,
	540, 1539,
	541, 1539,
	543, 1539,
	544, 1539,
	546, 1539,
	547, 1539,
	548, 1539,
	549, 1539,
	550, 1539,
	551, 1539,
	553, 1539,
	554, 1539,
	556, 1539,
	557, 1539,
	558, 1539,
	559, 1539,
	560, 1539,
	562, 1539,
	564, 1539,
	565, 1539,
	566, 1539,
	567, 1539,
	568, 1539,
	569, 1539,
	570, 1539,
	571, 1539,
	573, 1539,
	574, 1539,
	575, 1539,
	576, 1539,
	577, 1539,
	578, 1539,
	579, 1539,
	582, 1539,
	583, 1539,
	584, 1539,
	585, 1539,
	586, 1539,
	587, 1539,
	588, 1539,
	589, 1539,
	591, 1539,
	594, 1539,
	595, 1539,
	596, 1539,
	597, 1539,
	598, 1539,
	599, 1539,
	601, 1539,
	602, 1539,
	603, 1539,
	604, 1539,
	605, 1539,
	606, 1539,
	607, 1539,
	608, 1539,
	609, 1539,
	614, 1539,
	615, 1539,
	616, 1539,
	617, 1539,
	618, 1539,
	619, 1539,
	-2, 0,
	-1, 1785,
	1, 650,
	651, 650,
	653, 650,
	655, 650,
	658, 650,
	-2, 1783,
	-1, 1788,
	4, 3056,
	11, 3056,
	12, 3056,
	14, 3056,
	15, 3056,
	16, 3056,
	17, 3056,
	18, 3056,
	19, 3056,
	21, 3056,
	22, 3056,
	23, 3056,
	24, 3056,
	25, 3056,
	26, 3056,
	27, 3056,
	28, 3056,
	30, 3056,
	31, 3056,
	34, 3056,
	35, 3056,
	37, 3056,
	39, 3056,
	41, 3056,
	43, 3056,
	44, 3056,
	45, 3056,
	47, 3056,
	48, 3056,
	49, 3056,
	50, 3056,
	51, 3056,
	52, 3056,
	53, 3056,
	54, 3056,
	55, 3056,
	57, 3056,
	58, 3056,
	59, 3056,
	60, 3056,
	62, 3056,
	63, 3056,
	64, 3056,
	65, 3056,
	66, 3056,
	67, 3056,
	68, 3056,
	69, 3056,
	72, 3056,
	73, 3056,
	74, 3056,
	75, 3056,
	76, 3056,
	78, 3056,
	79, 3056,
	80, 3056,
	81, 3056,
	84, 3056,
	85, 3056,
	86, 3056,
	87, 3056,
	88, 3056,
	89, 3056,
	90, 3056,
	91, 3056,
	92, 3056,
	94, 3056,
	95, 3056,
	96, 3056,
	97, 3056,
	98, 3056,
	100, 3056,
	101, 3056,
	102, 3056,
	103, 3056,
	104, 3056,
	105, 3056,
	106, 3056,
	107, 3056,
	108, 3056,
	110, 3056,
	111, 3056,
	112, 3056,
	113, 3056,
	114, 3056,
	115, 3056,
	116, 3056,
	124, 3056,
	125, 3056,
	126, 3056,
	127, 3056,
	128, 3056,
	130, 3056,
	131, 3056,
	132, 3056,
	133, 3056,
	135, 3056,
	136, 3056,
	137, 3056,
	138, 3056,
	140, 3056,
	141, 3056,
	142, 3056,
	144, 3056,
	145, 3056,
	146, 3056,
	149, 3056,
	150, 3056,
	151, 3056,
	153, 3056,
	154, 3056,
	155, 3056,
	157, 3056,
	158, 3056,
	159, 3056,
	161, 3056,
	162, 3056,
	163, 3056,
	164, 3056,
	165, 3056,
	166, 3056,
	167, 3056,
	168, 3056,
	169, 3056,
	170, 3056,
	171, 3056,
	172, 3056,
	173, 3056,
	174, 3056,
	175, 3056,
	176, 3056,
	177, 3056,
	178, 3056,
	182, 3056,
	183, 3056,
	184, 3056,
	185, 3056,
	186, 3056,
	187, 3056,
	188, 3056,
	189, 3056,
	192, 3056,
	193, 3056,
	195, 3056,
	196, 3056,
	197, 3056,
	199, 3056,
	200, 3056,
	202, 3056,
	203, 3056,
	204, 3056,
	205, 3056,
	206, 3056,
	207, 3056,
	208, 3056,
	209, 3056,
	210, 3056,
	211, 3056,
	212, 3056,
	213, 3056,
	214, 3056,
	215, 3056,
	216, 3056,
	218, 3056,
	219, 3056,
	221, 3056,
	222, 3056,
	224, 3056,
	225, 3056,
	226, 3056,
	227, 3056,
	228, 3056,
	229, 3056,
	230, 3056,
	231, 3056,
	232, 3056,
	233, 3056,
	234, 3056,
	235, 3056,
	236, 3056,
	237, 3056,
	238, 3056,
	239, 3056,
	240, 3056,
	241, 3056,
	242, 3056,
	243, 3056,
	244, 3056,
	246, 3056,
	247, 3056,
	249, 3056,
	250, 3056,
	251, 3056,
	253, 3056,
	254, 3056,
	255, 3056,
	256, 3056,
	257, 3056,
	258, 3056,
	259, 3056,
	261, 3056,
	263, 3056,
	264, 3056,
	265, 3056,
	266, 3056,
	267, 3056,
	268, 3056,
	269, 3056,
	270, 3056,
	271, 3056,
	272, 3056,
	273, 3056,
	275, 3056,
	276, 3056,
	277, 3056,
	278, 3056,
	279, 3056,
	280, 3056,
	281, 3056,
	282, 3056,
	284, 3056,
	285, 3056,
	286, 3056,
	288, 3056,
	289, 3056,
	290, 3056,
	291, 3056,
	292, 3056,
	293, 3056,
	294, 3056,
	296, 3056,
	297, 3056,
	298, 3056,
	299, 3056,
	300, 3056,
	301, 3056,
	302, 3056,
	305, 3056,
	306, 3056,
	307, 3056,
	308, 3056,
	309, 3056,
	310, 3056,
	311, 3056,
	312, 3056,
	313, 3056,
	314, 3056,
	315, 3056,
	316, 3056,
	317, 3056,
	318, 3056,
	319, 3056,
	320, 3056,
	321, 3056,
	322, 3056,
	323, 3056,
	324, 3056,
	325, 3056,
	326, 3056,
	327, 3056,
	328, 3056,
	329, 3056,
	330, 3056,
	331, 3056,
	332, 3056,
	334, 3056,
	335, 3056,
	336, 3056,
	337, 3056,
	338, 3056,
	339, 3056,
	340, 3056,
	341, 3056,
	342, 3056,
	343, 3056,
	344, 3056,
	345, 3056,
	346, 3056,
	347, 3056,
	348, 3056,
	349, 3056,
	350, 3056,
	351, 3056,
	352, 3056,
	354, 3056,
	355, 3056,
	358, 3056,
	359, 3056,
	360, 3056,
	361, 3056,
	362, 3056,
	364, 3056,
	365, 3056,
	366, 3056,
	367, 3056,
	368, 3056,
	371, 3056,
	373, 3056,
	376, 3056,
	377, 3056,
	378, 3056,
	379, 3056,
	381, 3056,
	382, 3056,
	383, 3056,
	385, 3056,
	387, 3056,
	388, 3056,
	389, 3056,
	390, 3056,
	391, 3056,
	392, 3056,
	393, 3056,
	394, 3056,
	395, 3056,
	396, 3056,
	397, 3056,
	398, 3056,
	399, 3056,
	400, 3056,
	402, 3056,
	403, 3056,
	404, 3056,
	405, 3056,
	406, 3056,
	407, 3056,
	408, 3056,
	409, 3056,
	410, 3056,
	411, 3056,
	412, 3056,
	413, 3056,
	414, 3056,
	415, 3056,
	416, 3056,
	418, 3056,
	419, 3056,
	420, 3056,
	422, 3056,
	423, 3056,
	424, 3056,
	425, 3056,
	426, 3056,
	427, 3056,
	428, 3056,
	429, 3056,
	430, 3056,
	431, 3056,
	432, 3056,
	433, 3056,
	434, 3056,
	435, 3056,
	437, 3056,
	439, 3056,
	440, 3056,
	441, 3056,
	447, 3056,
	448, 3056,
	449, 3056,
	450, 3056,
	451, 3056,
	452, 3056,
	453, 3056,
	454, 3056,
	455, 3056,
	456, 3056,
	457, 3056,
	458, 3056,
	459, 3056,
	460, 3056,
	461, 3056,
	463, 3056,
	464, 3056,
	465, 3056,
	466, 3056,
	467, 3056,
	468, 3056,
	469, 3056,
	470, 3056,
	471, 3056,
	472, 3056,
	473, 3056,
	474, 3056,
	475, 3056,
	476, 3056,
	477, 3056,
	478, 3056,
	479, 3056,
	480, 3056,
	481, 3056,
	482, 3056,
	483, 3056,
	484, 3056,
	485, 3056,
	486, 3056,
	487, 3056,
	488, 3056,
	489, 3056,
	490, 3056,
	492, 3056,
	493, 3056,
	494, 3056,
	495, 3056,
	496, 3056,
	497, 3056,
	499, 3056,
	500, 3056,
	501, 3056,
	502, 3056,
	503, 3056,
	504, 3056,
	505, 3056,
	506, 3056,
	507, 3056,
	508, 3056,
	509, 3056,
	510, 3056,
	511, 3056,
	512, 3056,
	513, 3056,
	514, 3056,
	516, 3056,
	518, 3056,
	519, 3056,
	520, 3056,
	521, 3056,
	522, 3056,
	523, 3056,
	524, 3056,
	525, 3056,
	526, 3056,
	527, 3056,
	528, 3056,
	529, 3056,
	530, 3056,
	531, 3056,
	532, 3056,
	533, 3056,
	534, 3056,
	535, 3056,
	536, 3056,
	537, 3056,
	538, 3056,
	540, 3056,
	541, 3056,
	542, 3056,
	543, 3056,
	544, 3056,
	546, 3056,
	547, 3056,
	548, 3056,
	549, 3056,
	550, 3056,
	551, 3056,
	553, 3056,
	554, 3056,
	556, 3056,
	557, 3056,
	558, 3056,
	559, 3056,
	560, 3056,
	562, 3056,
	564, 3056,
	565, 3056,
	566, 3056,
	567, 3056,
	568, 3056,
	569, 3056,
	570, 3056,
	571, 3056,
	573, 3056,
	574, 3056,
	575, 3056,
	576, 3056,
	577, 3056,
	578, 3056,
	579, 3056,
	582, 3056,
	583, 3056,
	584, 3056,
	585, 3056,
	586, 3056,
	587, 3056,
	588, 3056,
	589, 3056,
	591, 3056,
	594, 3056,
	595, 3056,
	596, 3056,
	597, 3056,
	598, 3056,
	599, 3056,
	601, 3056,
	602, 3056,
	603, 3056,
	604, 3056,
	605, 3056,
	606, 3056,
	607, 3056,
	608, 3056,
	609, 3056,
	614, 3056,
	615, 3056,
	616, 3056,
	617, 3056,
	618, 3056,
	619, 3056,
	620, 3056,
	622, 3056,
	632, 3056,
	633, 3056,
	634, 3056,
	635, 3056,
	636, 3056,
	637, 3056,
	639, 3056,
	640, 3056,
	641, 3056,
	642, 3056,
	643, 3056,
	644, 3056,
	645, 3056,
	646, 3056,
	647, 3056,
	650, 3056,
	653, 3056,
	654, 3056,
	656, 3056,
	657, 3056,
	-2, 0,
	-1, 1793,
	201, 2905,
	561, 2905,
	634, 2905,
	654, 2905,
	-2, 0,
	-1, 1841,
	201, 1014,
	-2, 2896,
	-1, 1842,
	201, 1015,
	-2, 2681,
	-1, 1843,
	201, 1016,
	-2, 2848,
	-1, 1848,
	424, 1066,
	497, 1066,
	544, 1066,
	566, 1066,
	-2, 0,
	-1, 1859,
	1, 1611,
	239, 1611,
	651, 1611,
	653, 1611,
	655, 1611,
	658, 1611,
	-2, 0,
	-1, 1876,
	1, 1061,
	651, 1061,
	653, 1061,
	655, 1061,
	658, 1061,
	-2, 0,
	-1, 1877,
	1, 1105,
	651, 1105,
	653, 1105,
	655, 1105,
	658, 1105,
	-2, 0,
	-1, 1878,
	1, 1113,
	651, 1113,
	653, 1113,
	655, 1113,
	658, 1113,
	-2, 0,
	-1, 1881,
	1, 1070,
	651, 1070,
	653, 1070,
	655, 1070,
	658, 1070,
	-2, 0,
	-1, 1883,
	1, 1076,
	651, 1076,
	653, 1076,
	655, 1076,
	658, 1076,
	-2, 0,
	-1, 1886,
	1, 1072,
	651, 1072,
	653, 1072,
	655, 1072,
	658, 1072,
	-2, 0,
	-1, 1891,
	1, 1086,
	651, 1086,
	653, 1086,
	655, 1086,
	658, 1086,
	-2, 0,
	-1, 1926,
	1, 2886,
	651, 2886,
	653, 2886,
	654, 2886,
	655, 2886,
	658, 2886,
	-2, 0,
	-1, 1930,
	1, 1165,
	651, 1165,
	653, 1165,
	655, 1165,
	658, 1165,
	-2, 0,
	-1, 1950,
	181, 1826,
	194, 1826,
	295, 1826,
	369, 1826,
	-2, 1764,
	-1, 2052,
	160, 1785,
	181, 1785,
	194, 1785,
	260, 1785,
	295, 1785,
	369, 1785,
	380, 1785,
	580, 1785,
	-2, 2236,
	-1, 2113,
	653, 2411,
	-2, 0,
	-1, 2149,
	160, 1785,
	181, 1785,
	194, 1785,
	260, 1785,
	295, 1785,
	369, 1785,
	380, 1785,
	580, 1785,
	-2, 1918,
	-1, 2188,
	654, 2555,
	657, 2555,
	-2, 1192,
	-1, 2189,
	654, 2557,
	657, 2557,
	-2, 1193,
	-1, 2190,
	654, 2556,
	657, 2556,
	-2, 1194,
	-1, 2191,
	657, 2479,
	-2, 1195,
	-1, 2213,
	652, 2059,
	-2, 2047,
	-1, 2245,
	201, 2902,
	654, 2902,
	657, 2902,
	-2, 0,
	-1, 2289,
	1, 822,
	655, 822,
	658, 822,
	-2, 1672,
	-1, 2466,
	239, 284,
	-2, 2563,
	-1, 2467,
	239, 285,
	-2, 343,
	-1, 2581,
	1, 1063,
	651, 1063,
	653, 1063,
	655, 1063,
	658, 1063,
	-2, 0,
	-1, 2582,
	1, 1107,
	651, 1107,
	653, 1107,
	655, 1107,
	658, 1107,
	-2, 0,
	-1, 2583,
	1, 1115,
	651, 1115,
	653, 1115,
	655, 1115,
	658, 1115,
	-2, 0,
	-1, 2584,
	1, 1167,
	651, 1167,
	653, 1167,
	655, 1167,
	658, 1167,
	-2, 0,
	-1, 2625,
	1, 1088,
	651, 1088,
	653, 1088,
	655, 1088,
	658, 1088,
	-2, 0,
	-1, 2648,
	1, 1150,
	651, 1150,
	653, 1150,
	655, 1150,
	658, 1150,
	-2, 0,
	-1, 2696,
	474, 1853,
	475, 1853,
	-2, 2092,
	-1, 2729,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2112,
	-1, 2730,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2113,
	-1, 2731,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2114,
	-1, 2732,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2115,
	-1, 2733,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2116,
	-1, 2734,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2117,
	-1, 2735,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2118,
	-1, 2736,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2119,
	-1, 2748,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2131,
	-1, 2749,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2132,
	-1, 2750,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2133,
	-1, 2754,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2140,
	-1, 2760,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2144,
	-1, 2762,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2152,
	-1, 2763,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2153,
	-1, 2764,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2154,
	-1, 2765,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2155,
	-1, 2939,
	5, 2567,
	201, 2422,
	652, 2564,
	-2, 2555,
	-1, 2940,
	201, 2423,
	-2, 2987,
	-1, 2941,
	201, 2424,
	-2, 2775,
	-1, 2942,
	201, 2425,
	-2, 2645,
	-1, 2943,
	201, 2426,
	-2, 2709,
	-1, 2944,
	201, 2427,
	-2, 2760,
	-1, 2945,
	201, 2428,
	-2, 2899,
	-1, 2946,
	201, 2429,
	-2, 2219,
	-1, 3038,
	1, 1919,
	2, 1919,
	113, 1919,
	160, 1919,
	181, 1919,
	194, 1919,
	202, 1919,
	220, 1919,
	223, 1919,
	253, 1919,
	260, 1919,
	272, 1919,
	291, 1919,
	295, 1919,
	335, 1919,
	369, 1919,
	374, 1919,
	380, 1919,
	462, 1919,
	468, 1919,
	580, 1919,
	592, 1919,
	611, 1919,
	612, 1919,
	613, 1919,
	623, 1919,
	651, 1919,
	653, 1919,
	655, 1919,
	657, 1919,
	658, 1919,
	-2, 1918,
	-1, 3051,
	652, 2536,
	-2, 2550,
	-1, 3053,
	1, 360,
	611, 360,
	658, 360,
	-2, 1812,
	-1, 3088,
	652, 2058,
	-2, 2048,
	-1, 3307,
	1, 1514,
	456, 1468,
	499, 1468,
	626, 1468,
	631, 1468,
	651, 1514,
	653, 1514,
	655, 1514,
	658, 1514,
	-2, 1812,
	-1, 3490,
	375, 1856,
	-2, 3045,
	-1, 3491,
	375, 1857,
	-2, 2883,
	-1, 3495,
	474, 2490,
	475, 2490,
	-2, 2217,
	-1, 3496,
	474, 2494,
	475, 2494,
	-2, 2218,
	-1, 3497,
	474, 2491,
	475, 2491,
	-2, 2217,
	-1, 3498,
	474, 2495,
	475, 2495,
	-2, 2218,
	-1, 3512,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2142,
	-1, 3513,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2146,
	-1, 3519,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2148,
	-1, 3751,
	1, 817,
	651, 817,
	653, 817,
	655, 817,
	658, 817,
	-2, 1672,
	-1, 3935,
	38, 2567,
	134, 2567,
	634, 2567,
	650, 2567,
	653, 2567,
	654, 2567,
	657, 2567,
	-2, 2564,
	-1, 3936,
	38, 2568,
	134, 2568,
	634, 2568,
	650, 2568,
	653, 2568,
	654, 2568,
	657, 2568,
	-2, 2565,
	-1, 3967,
	46, 2527,
	-2, 1248,
	-1, 3972,
	1, 1514,
	651, 1514,
	653, 1514,
	655, 1514,
	658, 1514,
	-2, 1812,
	-1, 4082,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2150,
	-1, 4089,
	266, 0,
	268, 0,
	358, 0,
	-2, 2169,
	-1, 4157,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2198,
	-1, 4158,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2199,
	-1, 4159,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2200,
	-1, 4163,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2204,
	-1, 4164,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2205,
	-1, 4165,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2206,
	-1, 4213,
	652, 2537,
	-2, 2551,
	-1, 4442,
	654, 3163,
	-2, 1738,
	-1, 4501,
	266, 0,
	268, 0,
	358, 0,
	-2, 2170,
	-1, 4504,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2173,
	-1, 4505,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2175,
	-1, 4629,
	654, 2552,
	-2, 1549,
	-1, 4796,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2174,
	-1, 4797,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2176,
	-1, 4808,
	266, 0,
	-2, 2209,
	-1, 5005,
	266, 0,
	-2, 2210,
	-1, 5251,
	54, 0,
	235, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 3008,
}

const sqlPrivate = 57344

const sqlLast = 154175

var sqlAct = [...]int{
	299, 5166, 5392, 5474, 3381, 3261, 5314, 5330, 1463, 5048,
	1004, 10, 5298, 5165, 3231, 3650, 4, 1003, 6, 4870,
	5250, 5237, 5101, 5056, 1200, 195, 5263, 5406, 5119, 5220,
	2463, 4484, 5180, 5264, 1519, 3954, 5177, 5265, 2504, 3953,
	4973, 5156, 4414, 2349, 4950, 5261, 4937, 5197, 5339, 1373,
	2309, 3718, 4122, 5249, 4920, 5009, 4754, 1384, 3160, 4749,
	4743, 4625, 4712, 4680, 4875, 3350, 3778, 4074, 1660, 4817,
	4784, 2555, 2706, 3990, 2155, 2320, 4434, 5086, 1811, 4426,
	4956, 3928, 4339, 3504, 2553, 1453, 930, 784, 4626, 4606,
	3401, 1690, 3161, 2777, 3984, 1363, 1959, 3934, 2971, 4397,
	2200, 4759, 2530, 4370, 3784, 3938, 3781, 1192, 2358, 4372,
	2716, 4017, 3943, 930, 858, 4813, 1540, 3913, 3370, 4019,
	3338, 3365, 3765, 3367, 3945, 3942, 1248, 2707, 3924, 195,
	1460, 3767, 2517, 3906, 3905, 3766, 3673, 3696, 2551, 1633,
	3665, 1856, 4216, 3633, 3396, 3246, 3065, 3842, 796, 4483,
	3654, 1007, 3382, 3432, 2124, 2452, 3926, 1809, 3927, 4540,
	2387, 3703, 1455, 3314, 5315, 2450, 3805, 4183, 2439, 2370,
	2271, 293, 3262, 3656, 2184, 2099, 1685, 1686, 3632, 5010,
	2030, 2790, 2713, 2855, 854, 2060, 3031, 1748, 292, 3488,
	2501, 998, 3395, 2437, 925, 1458, 2429, 2410, 3276, 1446,
	2417, 3351, 2451, 1253, 1502, 2341, 2337, 1534, 2269, 2125,
	1258, 2846, 3070, 3011, 3030, 2774, 2319, 2316, 2968, 1432,
	2678, 1364, 1521, 2695, 2676, 3066, 1662, 1786, 3185, 831,
	3375, 1751, 1744, 2500, 2432, 3186, 1078, 3146, 1489, 1367,
	2849, 3946, 1346, 1402, 2141, 5120, 2935, 2094, 2134, 2901,
	1221, 1960, 2044, 3033, 2677, 1961, 205, 936, 1876, 1891,
	1381, 1443, 932, 931, 3020, 206, 2679, 2144, 2827, 839,
	2460, 978, 1777, 850, 939, 125, 1517, 5331, 1784, 111,
	2441, 1641, 5393, 1234, 936, 1203, 789, 50, 49, 932,
	931, 2981, 2857, 47, 1249, 38, 36, 34, 1369, 1514,
	1344, 939, 785, 1533, 798, 814, 1966, 1941, 3542, 771,
	1696, 121, 1099, 794, 920, 4197, 3536, 2260, 4198, 3652,
	5485, 5466, 3719, 2260, 3010, 2260, 2260, 2260, 979, 5259,
	3603, 3604, 2260, 3621, 3622, 3623, 5477, 5464, 5463, 5428,
	3884, 3010, 3010, 4874, 1260, 5426, 5360, 874, 5316, 4874,
	2472, 5289, 5317, 4499, 5287, 3010, 4843, 5284, 3010, 5281,
	2258, 5285, 4836, 5282, 5247, 3999, 2281, 4835, 2472, 5246,
	5245, 1976, 1977, 2472, 3406, 5235, 5233, 5224, 5223, 4874,
	4874, 4874, 4874, 5175, 5141, 5134, 5133, 4874, 3079, 3010,
	3010, 1745, 5124, 5100, 5097, 2007, 2472, 2472, 4874, 4840,
	5078, 5007, 4987, 1979, 4697, 3079, 4459, 4839, 4952, 4893,
	4892, 3618, 4266, 2472, 2472, 4881, 4880, 1498, 4574, 2472,
	4874, 867, 870, 4873, 4824, 4798, 4769, 4874, 2472, 3079,
	3406, 4737, 2032, 1361, 4736, 3884, 4000, 3736, 3732, 2983,
	1185, 1978, 3603, 3604, 4675, 3621, 3622, 3623, 3010, 4653,
	4503, 2552, 1176, 3010, 3079, 4450, 4444, 1498, 2278, 4012,
	4012, 1175, 2281, 2278, 4394, 1976, 1977, 4297, 4395, 4265,
	4208, 4298, 4206, 4266, 4209, 4190, 4207, 4106, 4102, 3010,
	1196, 2472, 3010, 4011, 2505, 3713, 3102, 4012, 1399, 2007,
	1196, 4187, 3770, 1409, 3649, 3644, 3643, 1979, 3010, 3010,
	3010, 3074, 3884, 3594, 3592, 1347, 1347, 3595, 3593, 3584,
	3582, 3609, 3553, 3585, 3010, 1191, 3010, 3405, 3551, 1197,
	1350, 3406, 1351, 3618, 3552, 3392, 2032, 3391, 3343, 2540,
	3125, 2540, 2852, 3078, 3010, 1978, 3063, 3079, 3055, 1882,
	3010, 2472, 2472, 3009, 2539, 2281, 1998, 3010, 2540, 2281,
	3503, 3010, 1984, 1348, 1379, 5142, 5011, 5002, 4990, 3406,
	4187, 2982, 4747, 4697, 2278, 4654, 3603, 3604, 4459, 4396,
	4384, 257, 3238, 3145, 2295, 2363, 2471, 3136, 2259, 2275,
	3343, 2278, 2281, 3256, 1400, 3625, 3071, 2120, 1400, 1683,
	4315, 4077, 4046, 2142, 2422, 4001, 3047, 3046, 3045, 1858,
	3044, 3043, 1352, 1349, 1184, 257, 2006, 2008, 1183, 1182,
	1181, 1180, 1179, 1178, 1174, 4002, 3360, 1173, 1172, 1171,
	1170, 1169, 1168, 3609, 1167, 259, 1166, 1165, 3619, 1164,
	1163, 2853, 1162, 1161, 1160, 1159, 2001, 2002, 2003, 2004,
	3458, 1710, 1158, 1157, 1976, 1977, 1984, 2009, 2010, 2011,
	2020, 2021, 2022, 1156, 1155, 1142, 1076, 1075, 1074, 259,
	1073, 1072, 1071, 1070, 1069, 1068, 1067, 2013, 2007, 1999,
	3626, 1066, 1065, 1064, 1063, 1062, 1979, 258, 2803, 2804,
	2805, 2822, 2823, 2824, 1061, 1060, 1059, 2026, 1058, 1057,
	1056, 1055, 1054, 251, 1053, 1052, 1051, 3625, 1050, 2825,
	2006, 2008, 252, 1049, 1048, 2032, 1047, 2261, 1046, 2029,
	1045, 258, 1044, 2261, 1978, 2261, 2261, 2261, 2854, 1043,
	2851, 1042, 2261, 1041, 1040, 1998, 1029, 1028, 1027, 1022,
	1021, 1698, 207, 1014, 1995, 4558, 2032, 1013, 1012, 997,
	3619, 1821, 3603, 3604, 996, 955, 954, 3609, 953, 952,
	2029, 943, 942, 941, 940, 4515, 2815, 3010, 1256, 902,
	901, 865, 864, 1999, 863, 2811, 207, 3541, 845, 1689,
	287, 286, 285, 284, 283, 282, 3378, 281, 280, 279,
	278, 277, 276, 3647, 4761, 2278, 3343, 275, 274, 273,
	272, 271, 270, 3603, 3604, 3620, 269, 268, 267, 266,
	265, 264, 263, 262, 261, 260, 4241, 4202, 4050, 2145,
	3153, 4013, 2278, 3699, 3564, 2001, 2002, 2003, 2004, 3547,
	3538, 2029, 3435, 3618, 3324, 1984, 3083, 3052, 3648, 3037,
	2102, 2884, 1465, 1258, 2102, 2882, 2000, 2101, 2868, 2866,
	1973, 2101, 1802, 2668, 2029, 2322, 2816, 2817, 2818, 2819,
	2280, 1689, 5274, 3153, 2168, 2278, 2810, 2071, 1942, 1692,
	1258, 1258, 1258, 2278, 3619, 2062, 1510, 2105, 2017, 5273,
	1709, 2100, 2027, 5270, 1401, 1383, 5248, 5232, 5105, 2006,
	2008, 3603, 3604, 4999, 4865, 4993, 3362, 5014, 1411, 2062,
	2982, 2856, 3999, 1400, 2278, 2982, 4991, 4812, 4767, 2023,
	4746, 2024, 2031, 4582, 2005, 2281, 1543, 3620, 1993, 1994,
	1258, 3112, 1704, 2259, 2278, 2275, 1258, 1665, 1258, 4538,
	2671, 1465, 4537, 3609, 4531, 4530, 4529, 2015, 4522, 1674,
	2000, 4521, 4519, 1698, 4514, 1506, 1507, 1508, 1493, 2820,
	2821, 4511, 1999, 4510, 1697, 2029, 1258, 4407, 1258, 1400,
	1258, 3615, 3616, 3617, 2617, 4393, 4383, 1665, 3614, 3612,
	3613, 3605, 3606, 3607, 3608, 3610, 3611, 4245, 4244, 4243,
	4212, 4178, 2479, 2813, 3609, 4177, 4176, 1255, 1825, 4098,
	1465, 1493, 4093, 3694, 3640, 3631, 1806, 3602, 1753, 1976,
	1977, 2025, 3599, 4303, 3598, 3596, 2031, 1651, 3591, 3603,
	3604, 1665, 1980, 1981, 1982, 1983, 1985, 1986, 1665, 1687,
	4763, 3590, 2014, 2007, 3589, 104, 3586, 1258, 1376, 1258,
	2850, 1979, 3583, 2029, 1665, 3563, 195, 195, 257, 3546,
	3539, 3620, 3537, 1258, 1698, 1258, 3151, 1485, 2064, 2069,
	3619, 2063, 3393, 2061, 2520, 1437, 1440, 3038, 2839, 1973,
	2032, 1360, 2477, 1972, 3092, 1450, 5480, 5414, 5413, 1978,
	5329, 1487, 3609, 3615, 3616, 3617, 5327, 2786, 1758, 1761,
	3614, 3612, 3613, 3605, 3606, 3607, 3608, 3610, 3611, 1385,
	4124, 1646, 259, 2005, 1665, 5167, 4408, 5084, 5068, 5064,
	5063, 1780, 5062, 1989, 1987, 1988, 1980, 1981, 1982, 1983,
	1985, 1986, 5042, 5041, 1258, 936, 5016, 1258, 1638, 2000,
	5039, 3361, 1471, 5013, 5012, 1672, 4985, 2780, 4971, 4968,
	4967, 2029, 939, 1479, 3645, 4948, 1536, 4947, 1630, 1635,
	257, 3724, 4889, 257, 258, 4313, 1698, 4860, 4810, 2018,
	2814, 1703, 4793, 4792, 4732, 4728, 1684, 1884, 3603, 3604,
	251, 3621, 3622, 3623, 4725, 1199, 1524, 1525, 4698, 252,
	3150, 4557, 4536, 4460, 4301, 4300, 4281, 4280, 1668, 4278,
	1984, 4498, 2029, 1746, 3150, 2031, 4193, 1516, 4181, 3619,
	3609, 1526, 1527, 4088, 259, 1764, 2049, 259, 1826, 207,
	4014, 3976, 3966, 1789, 1791, 3612, 3613, 3605, 3606, 3607,
	3608, 3610, 3611, 3150, 3864, 3816, 2031, 3620, 3783, 1258,
	1258, 1258, 1258, 1258, 1258, 1258, 1258, 3726, 3568, 3567,
	3562, 3528, 3337, 1513, 2006, 2008, 3335, 1787, 4408, 3618,
	257, 1493, 3178, 2108, 2107, 2106, 258, 1375, 2103, 258,
	2095, 2093, 1258, 3090, 3089, 3049, 3042, 3008, 1258, 2864,
	1900, 2048, 251, 2016, 2167, 251, 2123, 2117, 2116, 2115,
	2029, 252, 2114, 2113, 252, 1990, 1991, 1997, 2019, 1996,
	1992, 2112, 1989, 1987, 1988, 1980, 1981, 1982, 1983, 1985,
	1986, 2111, 2110, 1951, 259, 5015, 4525, 1999, 4762, 2109,
	4524, 207, 1243, 122, 3377, 2090, 2800, 2801, 2802, 2826,
	2812, 2806, 2089, 2808, 2809, 2807, 2794, 2795, 2796, 2797,
	2798, 2799, 1197, 2088, 2051, 2087, 1831, 2086, 2085, 2084,
	1232, 2083, 2082, 2081, 2080, 2079, 2078, 2077, 1801, 3609,
	2076, 257, 2075, 2064, 257, 2050, 258, 2047, 2042, 1478,
	1406, 1395, 4735, 4578, 1820, 4507, 3620, 4240, 164, 4205,
	4196, 3550, 251, 3040, 1258, 1258, 1258, 3081, 4837, 4580,
	1258, 252, 4239, 2063, 1783, 1947, 45, 1381, 2029, 1381,
	3614, 3612, 3613, 3605, 3606, 3607, 3608, 3610, 3611, 3722,
	2045, 4005, 2163, 1778, 1543, 259, 4385, 3232, 259, 5405,
	4656, 207, 5072, 1503, 3819, 195, 1258, 122, 1849, 2190,
	1465, 257, 5065, 3625, 1520, 2122, 1974, 2218, 2190, 4766,
	1465, 2363, 1885, 1465, 3691, 4701, 3603, 3604, 1505, 4700,
	4699, 4655, 4560, 1952, 3605, 3606, 3607, 3608, 3610, 3611,
	4467, 4466, 4465, 257, 4464, 4463, 4462, 258, 4461, 4267,
	258, 4200, 1520, 257, 1943, 4199, 3619, 1956, 1520, 2315,
	1948, 4016, 4015, 251, 2000, 259, 251, 1176, 2131, 1955,
	3204, 2085, 252, 1520, 3888, 252, 1175, 257, 3886, 3885,
	5266, 5356, 1520, 1465, 5354, 257, 1498, 2171, 1945, 1258,
	5262, 2145, 2883, 2104, 1950, 2361, 2881, 259, 1177, 2867,
	2865, 1504, 207, 1518, 2183, 207, 4411, 259, 2178, 4957,
	1198, 1969, 1970, 1258, 2201, 4075, 1498, 258, 4994, 2128,
	2129, 1543, 3605, 3606, 3607, 3608, 3610, 3611, 4330, 4992,
	2031, 259, 3854, 251, 2102, 1976, 1977, 2029, 4296, 259,
	2196, 2101, 252, 3588, 4864, 3587, 2313, 1520, 2352, 258,
	2247, 2085, 2152, 2250, 3510, 2400, 2096, 2097, 3189, 258,
	1501, 1499, 1365, 1197, 3785, 251, 1153, 1979, 4401, 2453,
	1498, 2177, 207, 2572, 252, 251, 2301, 1493, 1976, 1977,
	936, 2073, 5035, 258, 252, 2193, 2191, 2287, 2505, 936,
	1377, 258, 2241, 2173, 2193, 2191, 2172, 939, 3274, 251,
	3956, 2286, 3955, 2175, 207, 1978, 939, 251, 252, 1347,
	1979, 257, 4814, 2283, 207, 5034, 252, 1154, 2150, 2143,
	1848, 4951, 4261, 3620, 4262, 5295, 4744, 1989, 1987, 1988,
	1980, 1981, 1982, 1983, 1985, 1986, 5035, 1857, 207, 1901,
	3402, 3914, 3607, 3608, 3610, 3611, 207, 2153, 1978, 1782,
	1976, 1977, 4687, 1858, 257, 2454, 2121, 3556, 2419, 4382,
	4336, 4327, 4306, 4042, 3749, 259, 2263, 2521, 2162, 2161,
	2638, 1379, 3652, 1379, 2160, 2147, 2158, 2157, 2156, 2549,
	1976, 1977, 1979, 2485, 4126, 2847, 3088, 2118, 5271, 2098,
	1197, 1495, 1665, 1665, 2176, 3973, 2070, 2197, 4884, 2513,
	2289, 1757, 4856, 1543, 2007, 1679, 1474, 1436, 259, 5286,
	5283, 1359, 1979, 4668, 4666, 4640, 1984, 258, 3995, 3253,
	1978, 3250, 3248, 4637, 4272, 2399, 5057, 4750, 1835, 2468,
	2398, 5174, 3788, 251, 3187, 4291, 3374, 1814, 3897, 5357,
	992, 2032, 252, 5397, 5358, 4887, 2285, 4883, 1202, 5336,
	1978, 4862, 4069, 3753, 1975, 4915, 1665, 2395, 4642, 2404,
	258, 2212, 5272, 1505, 4349, 2414, 1783, 1727, 1898, 3126,
	2464, 2469, 207, 5476, 2362, 1880, 251, 1720, 1500, 3615,
	3616, 3617, 1880, 1151, 3723, 252, 3614, 3612, 3613, 3605,
	3606, 3607, 3608, 3610, 3611, 2308, 5073, 4908, 3234, 1149,
	2409, 1665, 4895, 1665, 2648, 1665, 2359, 2645, 2265, 2307,
	2306, 2267, 1147, 1520, 2315, 207, 3149, 2272, 2302, 1505,
	2406, 2274, 900, 1665, 1665, 2433, 2277, 2329, 2330, 1201,
	2357, 1984, 3147, 1681, 2333, 2334, 1504, 1665, 1899, 897,
	4348, 1496, 1138, 2355, 2544, 2369, 3149, 4690, 2582, 1665,
	3818, 1497, 1665, 1665, 1665, 1877, 993, 4689, 2631, 4347,
	1195, 1984, 3147, 4346, 2409, 936, 4338, 2646, 4321, 4621,
	2629, 4320, 2327, 4318, 2328, 4317, 2190, 1780, 2360, 2532,
	1897, 2532, 939, 4305, 2335, 2336, 2409, 2407, 2533, 2573,
	2456, 2457, 1504, 4264, 2392, 1879, 4386, 2647, 1258, 4263,
	2509, 3903, 1879, 3902, 2686, 3856, 2470, 4614, 3712, 2356,
	3561, 2458, 3755, 3560, 2029, 2006, 2008, 2583, 3559, 2897,
	1833, 3558, 3514, 3852, 1878, 3272, 2391, 2570, 3271, 2514,
	2527, 2388, 2405, 2290, 3255, 3785, 1488, 1258, 2413, 2310,
	3244, 3236, 4885, 2454, 3225, 4636, 4857, 2505, 3434, 3224,
	3216, 2434, 4988, 2896, 2443, 3215, 3214, 2443, 2442, 2547,
	1194, 2442, 2446, 4638, 4615, 3194, 3193, 2684, 3154, 2163,
	2577, 5398, 3064, 1258, 2761, 1258, 2119, 5337, 1999, 3082,
	2198, 2557, 1258, 2718, 1949, 1258, 3316, 2218, 2218, 1543,
	3371, 1258, 1258, 1258, 1258, 1258, 1258, 1258, 1258, 1258,
	1258, 1258, 1258, 1258, 1258, 1258, 1258, 1258, 1258, 1258,
	1258, 1258, 1258, 1258, 1258, 1258, 1258, 1258, 1258, 1258,
	1258, 1258, 1258, 1258, 1258, 1258, 1258, 1787, 1258, 1787,
	1258, 1258, 1258, 1258, 2524, 2537, 4588, 2488, 2516, 2564,
	2660, 1782, 4657, 2535, 990, 1498, 989, 936, 1522, 1523,
	2602, 1722, 2193, 2191, 2529, 2408, 1258, 3210, 3097, 2029,
	1258, 1258, 3611, 1770, 939, 1769, 2312, 2688, 1258, 4791,
	1499, 2563, 1258, 1499, 1258, 1258, 3068, 1479, 2675, 2541,
	1196, 2542, 1543, 5400, 2714, 2715, 1522, 1523, 1258, 1258,
	1258, 1258, 2317, 2318, 1258, 1258, 1258, 1258, 1258, 1258,
	1258, 1258, 1768, 3853, 1767, 1944, 2311, 1522, 1523, 2363,
	894, 3096, 1197, 4043, 1197, 2847, 1522, 1523, 2581, 2408,
	1258, 1258, 1258, 1258, 1258, 1258, 1258, 1258, 1258, 3069,
	1258, 2685, 1682, 2503, 1258, 1376, 122, 1376, 1828, 837,
	2592, 2408, 4598, 2686, 2589, 2000, 1381, 1144, 1723, 3191,
	1731, 1422, 3208, 1543, 2666, 2568, 1940, 2852, 2828, 2829,
	1850, 2659, 1381, 2625, 1896, 1739, 1980, 1981, 1982, 1983,
	1985, 1986, 2828, 2844, 3603, 3604, 3223, 837, 1258, 1543,
	3163, 1522, 1523, 2361, 995, 994, 4610, 5401, 5357, 3133,
	2712, 2402, 2700, 4611, 2657, 3219, 4639, 2699, 3409, 2892,
	1495, 2711, 3453, 1495, 4616, 3054, 2684, 2776, 1911, 1465,
	1470, 2031, 2683, 4597, 1986, 2776, 2674, 5050, 2938, 2938,
	2952, 2687, 2828, 2680, 2623, 2972, 2974, 3076, 2673, 2672,
	3217, 892, 2980, 1176, 195, 3252, 1176, 1176, 3177, 2792,
	2636, 1303, 2703, 1917, 3752, 2704, 2705, 4613, 1858, 122,
	1858, 122, 3486, 122, 3603, 3604, 2853, 4936, 5432, 2843,
	1465, 5399, 2784, 1829, 4275, 2590, 4617, 2586, 3176, 2782,
	3251, 2534, 3249, 3247, 4288, 2133, 3050, 4634, 2758, 1846,
	1193, 1477, 2580, 1982, 1983, 1985, 1986, 1500, 1954, 4055,
	1500, 3220, 1465, 1465, 4302, 2682, 5307, 3073, 3025, 2435,
	3120, 3166, 5268, 1198, 122, 122, 2788, 5403, 2444, 1987,
	1988, 1980, 1981, 1982, 1983, 1985, 1986, 2670, 1834, 3017,
	122, 4054, 122, 1695, 3148, 1702, 3218, 1708, 1915, 3455,
	3501, 2212, 2212, 1543, 783, 2152, 122, 3965, 122, 3075,
	3525, 3758, 2841, 2854, 3099, 2851, 898, 2856, 5025, 5052,
	1496, 2445, 4688, 1496, 1375, 3609, 1375, 2447, 3016, 3067,
	1497, 778, 898, 1497, 2137, 4319, 4790, 2947, 2934, 1197,
	2685, 3115, 3523, 2978, 936, 1146, 936, 1752, 3039, 1197,
	2976, 1038, 2218, 1197, 1347, 898, 1251, 2436, 836, 1493,
	3101, 939, 2963, 939, 1800, 3018, 1805, 5409, 2894, 3094,
	4286, 2150, 898, 2895, 122, 4316, 2898, 2420, 2899, 2900,
	1819, 4612, 1824, 3022, 3023, 2140, 3095, 3072, 2104, 3024,
	2630, 3029, 4249, 3121, 3035, 3036, 836, 936, 3123, 5369,
	3006, 3007, 2628, 1543, 2135, 3609, 1750, 4248, 4234, 4233,
	1379, 4047, 1893, 3909, 939, 3901, 3190, 2317, 2318, 1665,
	3850, 2683, 3118, 2138, 4622, 4623, 1379, 3254, 2658, 2756,
	3213, 3192, 2362, 2759, 2416, 3155, 1465, 3091, 893, 2667,
	2389, 4362, 3619, 1197, 3307, 2394, 3500, 3129, 1883, 3197,
	2476, 2475, 3140, 3114, 3117, 2096, 2097, 1258, 1258, 5384,
	1258, 2656, 3106, 5269, 2415, 5383, 3109, 2136, 3110, 4632,
	3131, 3124, 3100, 1177, 3493, 3494, 4115, 3084, 3062, 838,
	5434, 3836, 3116, 5344, 3152, 3466, 2856, 4635, 2755, 1465,
	3165, 3346, 4048, 5402, 895, 3520, 2046, 3349, 891, 2423,
	4489, 2411, 3211, 4363, 2430, 4488, 3667, 3910, 3265, 3907,
	2772, 2363, 3132, 3127, 2052, 4706, 3992, 838, 2058, 3196,
	2396, 1665, 3619, 2029, 1498, 3462, 3521, 1498, 1756, 2260,
	3526, 5299, 2588, 1665, 3130, 1665, 2360, 2449, 3230, 1730,
	1421, 1665, 2770, 3837, 195, 3827, 3772, 5239, 944, 5240,
	1938, 4361, 1665, 1665, 3993, 3358, 3181, 4925, 3222, 5151,
	4848, 3168, 3171, 3226, 3158, 1912, 2390, 2412, 3849, 3848,
	3195, 3341, 3245, 3385, 1389, 951, 4112, 5267, 1465, 3845,
	1465, 3412, 3413, 3319, 3212, 3397, 3266, 2371, 3321, 3233,
	1391, 3835, 3273, 3420, 3421, 3422, 3139, 3308, 3309, 2448,
	2139, 5058, 1258, 2029, 3107, 2954, 3469, 3828, 5080, 3620,
	3111, 3403, 5051, 2375, 1752, 2850, 1658, 3228, 1386, 3221,
	3400, 3235, 3242, 936, 3122, 2424, 3353, 3399, 3322, 5138,
	2420, 3419, 3202, 3203, 3205, 3206, 3207, 3209, 5407, 2146,
	939, 2149, 3992, 122, 3754, 4633, 3258, 3259, 3260, 2856,
	3311, 1830, 1909, 3800, 3164, 3826, 1715, 3141, 3142, 1030,
	1145, 3143, 3144, 4113, 2624, 1392, 835, 1377, 1859, 1377,
	4722, 3317, 1258, 2372, 3516, 2342, 3407, 3394, 1258, 1258,
	2343, 5322, 2775, 3414, 2384, 3415, 1031, 3867, 1680, 3620,
	1404, 5323, 3404, 1258, 1393, 2766, 2212, 2342, 3410, 3053,
	2757, 1910, 2343, 2403, 2091, 779, 3149, 1795, 3436, 3427,
	3437, 3389, 3312, 3342, 3799, 1913, 3720, 2159, 4287, 2767,
	2783, 4786, 3169, 1810, 3666, 3443, 2768, 3445, 3357, 3447,
	2773, 3449, 3450, 2401, 1916, 3522, 1258, 1258, 2585, 1390,
	5343, 3430, 1258, 3438, 3380, 3524, 2385, 1787, 3390, 1845,
	1847, 1476, 3468, 2579, 3459, 1258, 1258, 5408, 1953, 3908,
	3310, 1258, 1258, 3388, 3892, 1039, 1015, 1258, 3369, 3429,
	3387, 3773, 3614, 3612, 3613, 3605, 3606, 3607, 3608, 3610,
	3611, 2444, 2420, 1840, 3444, 3465, 3446, 4485, 3448, 2353,
	2376, 4803, 5367, 1020, 2383, 780, 3566, 5410, 5185, 5430,
	4669, 2344, 2137, 3317, 2386, 2366, 804, 3442, 3471, 4621,
	3473, 2041, 1258, 1258, 1258, 2401, 945, 946, 1258, 2348,
	2838, 1914, 3021, 2344, 2445, 4375, 4926, 4375, 1258, 2133,
	3806, 4391, 2403, 3517, 5136, 4373, 2856, 4373, 5435, 4924,
	3474, 2348, 3034, 3476, 1196, 1258, 4922, 4614, 4128, 5095,
	781, 4607, 782, 2140, 3613, 3605, 3606, 3607, 3608, 3610,
	3611, 2377, 2378, 2427, 3229, 3492, 2397, 2367, 4490, 4605,
	4785, 2400, 3019, 3481, 1376, 3483, 5416, 4734, 3482, 4609,
	4474, 4693, 5137, 4577, 4235, 1410, 1408, 3808, 2373, 2700,
	1376, 2138, 1207, 4071, 2699, 3487, 3484, 1864, 4568, 4921,
	2345, 2350, 3502, 3467, 4615, 4569, 5087, 4723, 5102, 3509,
	3549, 3544, 3545, 5375, 2393, 2365, 3548, 3540, 2137, 2261,
	5088, 4406, 2345, 2350, 4377, 2425, 4377, 1032, 1033, 4923,
	5305, 5191, 5118, 4970, 4692, 2769, 2374, 1258, 1258, 1258,
	1258, 5300, 4691, 4432, 3980, 2771, 1258, 1258, 1258, 3735,
	4608, 1258, 2402, 3061, 3515, 5089, 5321, 3807, 2499, 4376,
	5342, 4376, 2130, 1258, 1381, 1543, 1407, 1398, 4567, 2140,
	948, 947, 770, 2426, 4916, 1964, 1387, 2635, 4534, 4486,
	1963, 1963, 2702, 2364, 2303, 5440, 3779, 5419, 2135, 1258,
	2346, 1258, 5374, 1958, 3895, 3704, 5306, 4882, 4831, 3896,
	1381, 4979, 3659, 3660, 5032, 2380, 4167, 2138, 2300, 4433,
	4342, 4322, 2346, 4111, 4273, 4271, 3981, 3971, 1543, 3775,
	3359, 4787, 3352, 3339, 2528, 5091, 2522, 2515, 2692, 2507,
	1381, 2484, 2483, 1543, 1016, 1017, 1388, 3555, 5103, 3812,
	3170, 2399, 949, 950, 2353, 1465, 2398, 3269, 3012, 3642,
	5090, 2136, 1724, 1413, 4964, 4182, 4257, 5157, 4371, 4072,
	2218, 2340, 844, 1198, 1543, 1198, 2353, 3153, 2139, 5092,
	2379, 3684, 1197, 5121, 1465, 5310, 2637, 2296, 4435, 3697,
	1963, 3671, 4755, 1465, 4491, 3336, 3198, 3661, 3015, 1424,
	2298, 3737, 4943, 1375, 1962, 1962, 4941, 3693, 4859, 3791,
	3787, 3810, 3786, 3507, 3485, 1258, 2351, 2569, 4195, 1375,
	3664, 3663, 1887, 1886, 2561, 2550, 2481, 1258, 1881, 5376,
	5308, 4229, 3060, 2338, 3059, 1743, 4610, 2352, 2351, 3058,
	3057, 3014, 3056, 4611, 1762, 1465, 3013, 2299, 3698, 1034,
	1035, 2218, 1776, 3774, 4616, 4381, 4374, 1774, 4374, 3811,
	1763, 1037, 1194, 5451, 2381, 5418, 5045, 3721, 1258, 122,
	4713, 3174, 4402, 2352, 3637, 3638, 3639, 2041, 1964, 1964,
	3675, 2339, 3653, 3669, 1465, 3711, 4945, 2326, 4492, 2693,
	3750, 4279, 3824, 2526, 2139, 3762, 3763, 4613, 3917, 3702,
	4871, 1493, 3756, 1745, 1962, 1465, 2440, 1465, 4535, 3706,
	3707, 3708, 3709, 3839, 3730, 3841, 4617, 3789, 3690, 5364,
	3793, 4268, 3668, 883, 5439, 4168, 4846, 1258, 1258, 3670,
	2419, 4844, 5163, 936, 3682, 1543, 4169, 2419, 3855, 5046,
	3685, 3686, 3433, 2618, 3315, 4044, 1465, 4039, 3782, 1177,
	939, 3734, 1177, 1177, 3878, 2347, 1018, 1019, 5377, 5309,
	3776, 884, 5104, 1465, 3733, 4944, 3790, 3715, 1379, 3795,
	3714, 3890, 3797, 3743, 3716, 3408, 3683, 2347, 4963, 1865,
	4258, 3320, 3318, 3676, 3199, 3200, 2554, 2453, 3883, 1838,
	4867, 4854, 4866, 4592, 3868, 4591, 3688, 3870, 3689, 3872,
	3803, 5171, 3876, 5154, 1379, 4541, 3882, 4184, 1465, 1665,
	2778, 1665, 3744, 4872, 2863, 1543, 4834, 3825, 3740, 4236,
	1935, 5193, 930, 1665, 3751, 3893, 3936, 5368, 5164, 2652,
	1198, 1937, 5366, 5288, 1379, 5047, 3674, 3681, 1934, 5076,
	2052, 3759, 4855, 1932, 2052, 3840, 1905, 1465, 5066, 1903,
	1875, 1873, 3821, 4842, 5093, 3972, 4928, 3846, 1871, 1869,
	5094, 4612, 3894, 3705, 1867, 1381, 4809, 4585, 4533, 4380,
	3634, 3961, 3727, 3728, 3680, 3729, 3986, 3028, 3809, 3988,
	3865, 843, 1861, 1855, 3817, 1665, 3941, 3912, 1853, 3915,
	1772, 4087, 4040, 4037, 3857, 3830, 4269, 1665, 3731, 1665,
	3597, 3970, 2325, 3834, 4622, 4623, 195, 195, 3527, 3340,
	3243, 3237, 1775, 3188, 2212, 3851, 3093, 1773, 1365, 2665,
	2438, 1036, 4008, 2661, 2571, 2560, 3397, 2545, 2249, 3860,
	2170, 2166, 1939, 3866, 2149, 3397, 1813, 2627, 3911, 2594,
	3979, 2462, 4590, 3879, 3997, 3635, 1377, 4066, 4045, 3222,
	4065, 3887, 3933, 4057, 1958, 2506, 1543, 3739, 3457, 1543,
	3741, 3742, 1377, 3899, 3891, 3745, 3456, 3746, 3417, 3747,
	2681, 3831, 1892, 2597, 2482, 3832, 2248, 3833, 2246, 2074,
	1827, 3982, 122, 2862, 1343, 5260, 2176, 3964, 4035, 4670,
	3677, 3678, 3679, 936, 1258, 2212, 3898, 4329, 932, 931,
	3900, 1258, 1258, 4328, 2543, 1258, 1258, 1258, 4674, 1258,
	939, 3196, 4748, 4652, 5153, 3989, 3919, 4753, 1258, 2218,
	3869, 2654, 2556, 2558, 3962, 3904, 3968, 1258, 2653, 4679,
	1936, 4236, 1258, 4033, 3967, 4665, 2562, 1933, 1543, 4038,
	4603, 4602, 1931, 5340, 4058, 1904, 4431, 1258, 1902, 1874,
	1872, 2574, 2575, 2576, 4421, 1543, 4036, 1870, 1868, 4345,
	3994, 4324, 3987, 1866, 4294, 2218, 2218, 1258, 1258, 4003,
	1258, 1258, 1258, 4006, 4007, 4063, 4051, 896, 4052, 4292,
	4053, 1860, 1854, 4270, 3975, 3969, 3957, 1852, 1258, 1771,
	3372, 3364, 1258, 3356, 2218, 2218, 1258, 1258, 1258, 1258,
	1258, 1258, 1258, 1258, 1258, 1258, 1258, 1258, 1258, 1258,
	1258, 1258, 1258, 1258, 1258, 1258, 2201, 1258, 4140, 4090,
	4141, 4073, 3348, 3996, 3333, 1258, 1258, 2218, 2215, 2626,
	4064, 2593, 1258, 2461, 3332, 3313, 3113, 3108, 2480, 2478,
	2455, 4100, 4101, 1258, 1129, 2421, 2382, 2368, 2354, 2282,
	2279, 2276, 2273, 4180, 1381, 1381, 4061, 899, 1258, 1379,
	195, 2268, 2714, 4131, 2266, 4067, 2262, 4070, 4068, 1189,
	2212, 2253, 4108, 1216, 3985, 3823, 5335, 3880, 1356, 1197,
	5244, 2182, 2430, 1967, 1832, 3505, 1129, 5358, 2304, 5044,
	1543, 2714, 4146, 2664, 2292, 2293, 3838, 3477, 3478, 3475,
	3306, 5226, 5112, 1465, 1465, 1357, 4768, 4214, 4095, 4097,
	4686, 1189, 4589, 3398, 3757, 2321, 927, 1729, 4981, 3175,
	4974, 4443, 1465, 1465, 4175, 3149, 2190, 1465, 4107, 3149,
	4179, 4201, 1376, 4114, 4116, 4117, 4123, 3877, 2621, 2363,
	2525, 3147, 2584, 2662, 1445, 3172, 1258, 4130, 1444, 1148,
	1150, 2616, 4138, 4230, 3889, 5225, 4139, 2591, 122, 1929,
	1930, 122, 4643, 122, 4681, 3270, 4171, 1130, 1376, 4143,
	1976, 1977, 1188, 2206, 1258, 1851, 4145, 872, 5001, 1976,
	1977, 4869, 1515, 4186, 3179, 4542, 4520, 3804, 3506, 3180,
	3201, 2663, 1971, 1472, 1412, 5352, 1512, 288, 1376, 5296,
	4341, 1968, 4172, 3881, 4418, 3331, 2508, 1258, 1258, 1130,
	1483, 1979, 3250, 122, 3248, 3257, 122, 4188, 4189, 3180,
	5372, 3239, 122, 1358, 2291, 4340, 3182, 4191, 4192, 1024,
	3241, 1445, 3325, 4231, 4232, 3328, 1908, 3330, 5162, 1445,
	1978, 5143, 3184, 5110, 3240, 4118, 5106, 1258, 1258, 1978,
	767, 5043, 4246, 4247, 889, 1258, 3183, 4254, 875, 875,
	4965, 4962, 4847, 2212, 4274, 4203, 4781, 4429, 4137, 4420,
	4405, 4211, 3974, 3379, 3345, 2979, 1665, 1665, 2288, 1665,
	2199, 5404, 4868, 3227, 1678, 1677, 3895, 3376, 1665, 1671,
	3376, 3896, 1190, 1465, 4204, 3717, 2440, 936, 5438, 122,
	4250, 4359, 2193, 2191, 5129, 4307, 3603, 3604, 1689, 2212,
	2212, 5108, 5371, 4354, 939, 1976, 1977, 3936, 2218, 4312,
	4314, 1689, 3895, 4311, 4512, 1135, 1134, 3896, 2332, 3135,
	2331, 3134, 2218, 1688, 1837, 2858, 4238, 1689, 2212, 2212,
	1836, 3460, 2893, 2332, 2331, 5303, 4343, 1907, 1379, 1379,
	1906, 1375, 4428, 4337, 4966, 4909, 1258, 4353, 4683, 4678,
	4677, 4299, 4417, 4570, 4566, 4565, 4304, 1135, 1134, 4508,
	4482, 2212, 4237, 3451, 1131, 4119, 3874, 1665, 3871, 3463,
	2068, 2067, 3480, 1258, 2669, 4364, 4365, 1375, 5423, 5385,
	4436, 1381, 1258, 4331, 3196, 5230, 5147, 5146, 4388, 4390,
	1665, 5145, 5075, 4398, 4445, 1665, 1665, 1665, 5074, 4242,
	5020, 5017, 4939, 4899, 4838, 4833, 1131, 1375, 4832, 4830,
	4829, 4827, 4730, 4705, 4379, 4413, 4360, 4641, 1665, 3782,
	1665, 4579, 4564, 4412, 4563, 1665, 4455, 1543, 4449, 4452,
	4392, 4369, 2778, 3933, 4378, 4437, 3266, 4350, 3385, 4290,
	4282, 4357, 3978, 3977, 3796, 4440, 3738, 3464, 3454, 3426,
	4400, 3397, 4367, 2052, 4368, 4404, 3425, 3424, 1543, 3423,
	3363, 1258, 1258, 3334, 4389, 4387, 4456, 1258, 1258, 2218,
	3173, 3104, 1258, 1258, 3086, 1258, 4439, 3085, 2787, 2655,
	1258, 4255, 2622, 2615, 2614, 4256, 4423, 2613, 4425, 4419,
	2612, 1258, 2611, 2523, 2494, 2493, 4470, 2492, 2491, 1132,
	4416, 2490, 2489, 4476, 4468, 2256, 2255, 1258, 2254, 4471,
	2252, 2181, 2180, 1376, 1928, 1927, 1862, 1738, 4422, 1737,
	1736, 1735, 1734, 4438, 1733, 1732, 1728, 4441, 1133, 1726,
	1725, 4447, 4446, 1655, 4293, 1654, 4295, 4454, 3267, 1653,
	4493, 1132, 1532, 4453, 1531, 1530, 1529, 1528, 1475, 1431,
	1430, 1429, 1428, 1427, 1426, 4469, 1425, 1423, 1418, 1417,
	1416, 1415, 1414, 1338, 2294, 1152, 2201, 1143, 1381, 4502,
	1133, 5049, 4620, 4506, 4619, 4618, 1381, 4472, 4481, 4539,
	1543, 1543, 4479, 1543, 2651, 2502, 195, 1137, 2215, 2215,
	1381, 103, 1721, 97, 4487, 2428, 4289, 5297, 5417, 5447,
	2486, 1665, 1665, 4494, 5202, 5196, 5195, 1136, 5081, 3925,
	3923, 3922, 5302, 4344, 4935, 959, 4780, 1105, 5192, 5079,
	1713, 974, 1543, 5173, 3798, 3275, 2596, 1863, 4959, 1137,
	2598, 3692, 3041, 5135, 4516, 3565, 5008, 4802, 2861, 3697,
	2072, 3646, 99, 1242, 1288, 4721, 4720, 4604, 1258, 1136,
	4276, 2212, 2212, 3944, 4717, 4716, 1365, 2203, 2205, 1381,
	3411, 1381, 4555, 4572, 4573, 4547, 2212, 4532, 1206, 1546,
	2985, 3418, 2987, 1541, 5238, 1379, 2305, 5429, 2314, 3087,
	2937, 1265, 1262, 1266, 1377, 2207, 1465, 2209, 1264, 1263,
	2208, 2092, 1365, 1261, 4651, 2202, 1543, 4427, 1465, 3963,
	3383, 1465, 4593, 4594, 4004, 1781, 4660, 1779, 4627, 4663,
	4627, 1107, 2781, 4546, 4549, 2845, 1258, 3554, 2065, 1543,
	1377, 1222, 4630, 4596, 1244, 4550, 4552, 4556, 4544, 4545,
	2842, 4644, 1375, 2206, 2206, 295, 295, 295, 4559, 773,
	774, 4543, 790, 773, 790, 802, 1405, 1233, 842, 4548,
	1377, 3672, 862, 4631, 3651, 3991, 4210, 869, 869, 869,
	869, 1665, 1665, 4601, 2691, 3936, 1258, 1258, 2218, 295,
	2218, 4571, 4647, 4648, 4358, 984, 4575, 4576, 4586, 3600,
	2848, 4645, 4595, 1394, 4682, 2960, 4684, 2953, 2949, 1011,
	3748, 4583, 4584, 3373, 1946, 4587, 295, 4599, 4816, 1465,
	2342, 2043, 1376, 1376, 3384, 2343, 1509, 4738, 1226, 2779,
	4646, 2056, 1543, 2212, 4685, 3532, 2701, 1665, 3998, 3695,
	3080, 5219, 4127, 3461, 2498, 1355, 1354, 1403, 1353, 5179,
	4756, 4661, 4703, 5176, 4714, 2418, 4724, 3939, 3940, 2297,
	4704, 4664, 1665, 1665, 1665, 1665, 1665, 1665, 1665, 4710,
	3128, 4711, 4667, 2791, 3958, 122, 122, 1238, 122, 3439,
	3440, 4742, 1379, 4745, 4676, 4739, 1543, 4696, 1649, 2642,
	1379, 4059, 3657, 4403, 1740, 4876, 4702, 1250, 1258, 1258,
	1258, 2028, 4695, 4694, 1379, 4757, 3302, 3301, 5038, 1494,
	1492, 3933, 1491, 4707, 1490, 4788, 1543, 5394, 3268, 2431,
	4715, 1258, 4719, 4726, 1258, 1258, 4727, 4285, 4284, 4283,
	4733, 4731, 122, 122, 1258, 122, 4760, 2218, 256, 3499,
	4478, 4773, 1258, 1258, 1965, 4777, 2344, 1957, 253, 3813,
	3814, 255, 3815, 4765, 4741, 773, 773, 4758, 254, 1543,
	4779, 1665, 3802, 295, 2348, 4215, 3701, 1839, 5294, 4309,
	3916, 27, 4771, 1379, 876, 1379, 877, 4751, 4794, 4770,
	878, 3138, 2324, 1511, 4260, 26, 1465, 25, 24, 23,
	126, 48, 29, 291, 28, 5, 22, 168, 166, 143,
	163, 1670, 4789, 2215, 162, 135, 3861, 3862, 1543, 3863,
	161, 4782, 160, 159, 158, 157, 1258, 4799, 165, 156,
	155, 150, 154, 153, 152, 151, 4825, 149, 4826, 1258,
	147, 148, 142, 146, 2201, 145, 144, 4811, 1258, 141,
	140, 1375, 1375, 2218, 139, 2345, 2350, 138, 4805, 137,
	136, 4853, 134, 1258, 167, 133, 1258, 132, 210, 131,
	4822, 4823, 130, 129, 128, 127, 855, 1365, 856, 67,
	1198, 66, 1258, 123, 124, 1258, 21, 46, 16, 71,
	72, 20, 1543, 15, 122, 122, 41, 102, 115, 114,
	1465, 113, 42, 110, 4879, 1377, 40, 19, 4918, 18,
	1665, 1665, 1665, 17, 108, 107, 106, 39, 37, 13,
	4850, 11, 4851, 43, 2352, 4849, 4841, 4858, 4852, 2154,
	14, 7, 200, 199, 202, 198, 1381, 201, 101, 2212,
	197, 4898, 2212, 196, 2212, 2346, 100, 35, 12, 191,
	4888, 4955, 4410, 93, 194, 193, 192, 4927, 2206, 4914,
	190, 189, 188, 94, 1543, 91, 4938, 1665, 4902, 1376,
	4903, 187, 96, 186, 92, 4942, 95, 4900, 33, 4896,
	4975, 2169, 8, 4954, 70, 4627, 9, 4783, 4041, 4932,
	4933, 118, 119, 44, 89, 88, 87, 4946, 86, 2353,
	32, 3941, 4911, 1258, 1258, 69, 4650, 31, 183, 4961,
	234, 233, 4930, 232, 231, 230, 4984, 4929, 4986, 4659,
	1258, 2218, 4662, 4901, 4940, 229, 228, 227, 222, 4958,
	4949, 226, 4934, 4919, 224, 4976, 223, 225, 221, 247,
	246, 245, 2532, 4978, 244, 243, 1465, 1465, 4953, 4960,
	1465, 1465, 237, 1465, 1465, 236, 3760, 242, 241, 240,
	239, 2351, 238, 4977, 4980, 235, 250, 82, 220, 219,
	4983, 1258, 4760, 1258, 218, 1258, 216, 4982, 212, 4904,
	215, 217, 214, 4989, 213, 1381, 211, 2696, 249, 248,
	83, 2212, 181, 182, 81, 180, 179, 178, 1258, 177,
	1381, 4997, 4998, 176, 3761, 5033, 175, 5031, 2323, 4972,
	174, 80, 185, 184, 30, 2, 1, 0, 2201, 0,
	5000, 5006, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4627, 2054, 0, 0, 0, 2059,
	0, 0, 0, 0, 0, 0, 2218, 0, 122, 4627,
	0, 5030, 0, 5029, 0, 0, 1376, 0, 1381, 1381,
	0, 5061, 5060, 0, 1376, 0, 1365, 1365, 0, 0,
	5054, 0, 4996, 5053, 0, 0, 5018, 5019, 1376, 1381,
	5021, 5022, 1381, 5023, 5024, 5109, 1665, 5083, 1375, 5085,
	0, 0, 0, 0, 1377, 1377, 1665, 2212, 0, 0,
	2347, 0, 5069, 0, 5026, 0, 0, 4627, 4627, 0,
	0, 5071, 1258, 1258, 0, 4890, 4891, 0, 0, 5098,
	5099, 0, 1258, 0, 0, 0, 5077, 5082, 4627, 0,
	1379, 4627, 0, 5096, 0, 2955, 0, 0, 0, 0,
	5115, 0, 0, 5117, 0, 0, 5107, 1376, 0, 1376,
	4958, 4910, 0, 4912, 5122, 4913, 0, 5114, 0, 0,
	0, 0, 3920, 0, 5123, 0, 5126, 5127, 0, 0,
	0, 5130, 0, 5128, 0, 1258, 1258, 0, 0, 1258,
	5148, 5149, 0, 1665, 1465, 5140, 0, 1465, 0, 1396,
	2473, 5144, 0, 0, 5131, 0, 5132, 0, 5125, 0,
	790, 0, 5170, 0, 5178, 5181, 5152, 0, 0, 0,
	5139, 0, 0, 0, 790, 0, 5218, 5160, 5161, 0,
	0, 5194, 0, 0, 4010, 1420, 0, 0, 0, 0,
	5169, 5222, 5168, 0, 0, 0, 4034, 295, 0, 295,
	295, 0, 1449, 295, 1459, 5187, 5241, 1258, 1258, 1258,
	5243, 5183, 0, 5221, 0, 1473, 0, 0, 0, 0,
	0, 5188, 0, 862, 0, 2212, 862, 0, 0, 0,
	0, 0, 0, 5182, 0, 1375, 0, 5186, 5227, 1379,
	0, 0, 0, 1375, 5231, 1258, 5234, 0, 0, 869,
	5242, 4917, 0, 0, 1379, 5275, 0, 1375, 5150, 0,
	0, 5255, 5256, 0, 0, 0, 5258, 0, 5257, 5280,
	1665, 0, 0, 0, 5189, 0, 0, 5190, 295, 0,
	295, 295, 1449, 0, 295, 295, 0, 5277, 0, 0,
	0, 0, 0, 1459, 0, 0, 0, 0, 0, 2352,
	5278, 0, 5318, 0, 0, 0, 0, 295, 5320, 1691,
	0, 5291, 1379, 1379, 5301, 5328, 5293, 5319, 2313, 2313,
	0, 0, 1258, 5332, 0, 1711, 1375, 5326, 1375, 5276,
	1465, 0, 1718, 1379, 5311, 5312, 1379, 122, 5304, 0,
	0, 4938, 5341, 5325, 5324, 5070, 5333, 0, 0, 1742,
	2212, 1459, 0, 5334, 5338, 0, 295, 295, 1187, 1449,
	1129, 5359, 0, 1365, 0, 0, 0, 5351, 0, 5355,
	0, 1258, 5353, 5350, 5347, 5348, 0, 0, 0, 0,
	862, 2215, 295, 295, 5178, 1189, 5362, 5181, 5365, 5363,
	5361, 1377, 0, 0, 1807, 0, 0, 5370, 1381, 5381,
	1381, 0, 5380, 122, 0, 1815, 5388, 0, 0, 0,
	1011, 4424, 5390, 0, 0, 0, 0, 5379, 5387, 0,
	0, 0, 5378, 0, 0, 0, 5382, 0, 0, 0,
	0, 0, 0, 5396, 5386, 1188, 2717, 0, 0, 1465,
	0, 0, 0, 0, 0, 0, 5221, 4627, 0, 4627,
	0, 0, 0, 0, 0, 0, 5411, 0, 5412, 5389,
	5349, 5391, 2215, 0, 0, 5421, 0, 0, 5422, 0,
	3529, 3530, 5425, 0, 5433, 1258, 1258, 4473, 0, 5424,
	0, 0, 0, 1130, 1258, 1258, 5420, 0, 5431, 0,
	0, 295, 5445, 1454, 5395, 5436, 5427, 0, 10, 0,
	5450, 5454, 5441, 0, 5449, 6, 5452, 5461, 5458, 5460,
	0, 0, 195, 5457, 0, 5459, 0, 295, 0, 5462,
	5456, 0, 5465, 0, 0, 0, 2206, 5453, 3385, 2859,
	1465, 5455, 0, 5472, 0, 5475, 5469, 0, 5471, 5467,
	0, 5468, 5470, 0, 122, 0, 0, 5473, 0, 0,
	1365, 1258, 0, 5478, 1376, 1976, 1977, 5475, 1365, 5486,
	0, 3385, 0, 0, 0, 5482, 0, 5484, 0, 5415,
	0, 1636, 0, 0, 1650, 1454, 5479, 0, 1377, 2007,
	0, 0, 5442, 5443, 5481, 0, 1377, 1979, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1377, 0, 0, 4029, 0, 0, 0, 2206, 0, 0,
	0, 0, 0, 0, 0, 0, 2032, 4027, 5290, 0,
	0, 5292, 0, 0, 0, 1978, 3051, 4020, 0, 0,
	0, 0, 0, 0, 0, 0, 1998, 2215, 0, 0,
	0, 1135, 1134, 0, 0, 1995, 1454, 1454, 0, 5483,
	0, 0, 3627, 3628, 3629, 3630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1377,
	3293, 1377, 0, 0, 3489, 4351, 4352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4355, 0, 0,
	1131, 0, 1379, 0, 1379, 0, 0, 122, 0, 0,
	0, 0, 0, 1376, 3283, 3281, 0, 0, 0, 0,
	0, 0, 3285, 3287, 3277, 0, 4031, 0, 1376, 773,
	0, 0, 0, 0, 4029, 0, 2001, 2002, 2003, 2004,
	0, 4218, 0, 0, 0, 4022, 1984, 0, 4027, 0,
	295, 0, 295, 0, 0, 0, 295, 0, 4020, 0,
	0, 4021, 0, 0, 0, 0, 3303, 2955, 2955, 1691,
	1449, 1459, 295, 0, 295, 2179, 0, 0, 122, 0,
	0, 4672, 295, 1375, 790, 0, 1376, 1376, 0, 0,
	3137, 295, 2206, 122, 0, 0, 0, 0, 4219, 0,
	2006, 2008, 0, 0, 0, 2785, 0, 1376, 2257, 4451,
	1376, 0, 0, 0, 2556, 4457, 4458, 122, 0, 4030,
	295, 2054, 0, 0, 0, 0, 4220, 295, 4217, 1993,
	1994, 0, 0, 1976, 1977, 1132, 0, 4228, 0, 0,
	2215, 0, 0, 4226, 0, 0, 0, 4031, 0, 0,
	0, 0, 4729, 0, 0, 0, 5444, 2007, 0, 0,
	862, 0, 1186, 1999, 1133, 1979, 4022, 4740, 0, 0,
	0, 0, 0, 0, 0, 0, 1670, 0, 0, 4227,
	0, 0, 4021, 1670, 4223, 0, 2215, 2215, 0, 0,
	0, 4764, 0, 0, 2032, 0, 0, 0, 869, 0,
	869, 0, 0, 1978, 0, 0, 0, 0, 0, 4224,
	869, 869, 0, 0, 0, 2215, 2215, 0, 3279, 0,
	0, 0, 0, 1137, 0, 0, 0, 0, 0, 3295,
	0, 0, 1375, 0, 0, 0, 0, 0, 0, 0,
	4030, 0, 0, 1136, 2029, 0, 0, 1375, 2215, 2955,
	2955, 2955, 2955, 3294, 3284, 3282, 3286, 3288, 3278, 3280,
	3296, 3298, 0, 122, 0, 0, 0, 0, 0, 0,
	0, 3290, 3292, 3300, 0, 0, 0, 0, 0, 0,
	0, 4018, 0, 0, 0, 2206, 0, 0, 0, 0,
	0, 4028, 4023, 4024, 4025, 4026, 0, 0, 0, 0,
	0, 0, 0, 0, 2005, 1375, 1375, 0, 3304, 0,
	0, 0, 0, 0, 1984, 0, 0, 0, 0, 0,
	4561, 4562, 0, 0, 0, 0, 1375, 0, 0, 1375,
	2000, 2206, 2206, 4032, 0, 0, 0, 4845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4221, 0, 0,
	0, 0, 0, 0, 0, 4222, 0, 0, 0, 0,
	2206, 2206, 0, 295, 1650, 0, 0, 295, 2006, 2008,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2206, 0, 0, 2031, 0, 0, 0,
	0, 0, 0, 0, 295, 0, 0, 0, 0, 0,
	4225, 0, 4028, 4023, 4024, 4025, 4026, 1650, 0, 0,
	0, 0, 0, 295, 0, 0, 1377, 0, 0, 0,
	0, 1999, 3297, 0, 295, 0, 0, 0, 0, 2778,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4032, 0, 0, 295, 0, 295,
	0, 0, 0, 773, 0, 295, 1376, 0, 1376, 0,
	0, 0, 0, 0, 0, 0, 0, 862, 0, 0,
	2556, 1011, 0, 0, 0, 0, 0, 0, 0, 0,
	1996, 1992, 0, 1989, 1987, 1988, 1980, 1981, 1982, 1983,
	1985, 1986, 0, 0, 0, 0, 3305, 0, 0, 0,
	0, 0, 2029, 1449, 295, 3289, 3291, 3299, 0, 0,
	0, 4083, 4084, 0, 0, 0, 0, 0, 0, 862,
	0, 0, 0, 0, 0, 0, 295, 0, 2215, 2215,
	0, 0, 0, 0, 2595, 0, 0, 0, 0, 295,
	295, 0, 295, 2215, 295, 0, 295, 0, 295, 0,
	0, 4772, 0, 4774, 4775, 4776, 297, 4778, 0, 0,
	0, 0, 0, 0, 0, 1377, 0, 0, 0, 122,
	0, 0, 0, 2632, 0, 0, 2633, 0, 2634, 0,
	1377, 0, 0, 0, 0, 0, 0, 0, 2000, 0,
	0, 0, 0, 295, 295, 295, 295, 295, 0, 0,
	0, 4147, 4148, 4149, 4150, 4151, 4152, 4153, 4154, 4155,
	4156, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165,
	4166, 0, 4170, 842, 0, 122, 0, 862, 122, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 1377, 1377,
	0, 0, 0, 5067, 0, 0, 0, 0, 85, 0,
	4828, 0, 0, 0, 2031, 0, 0, 0, 0, 1377,
	0, 0, 1377, 0, 0, 0, 90, 3603, 3604, 0,
	3621, 3622, 3623, 2206, 2206, 1375, 0, 1375, 0, 0,
	0, 0, 0, 0, 2487, 0, 0, 0, 2206, 0,
	2215, 0, 0, 0, 0, 0, 0, 0, 0, 5111,
	0, 0, 5113, 0, 0, 0, 0, 0, 98, 0,
	0, 0, 0, 0, 2512, 0, 0, 0, 0, 0,
	0, 0, 2793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3658, 0, 0, 1670, 0, 0, 3618, 0,
	1005, 0, 0, 1988, 1980, 1981, 1982, 1983, 1985, 1986,
	0, 0, 0, 55, 0, 120, 1220, 0, 0, 122,
	0, 104, 117, 122, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4931,
	0, 0, 0, 0, 773, 3687, 0, 0, 2955, 2955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	3700, 0, 0, 0, 0, 0, 0, 0, 773, 0,
	0, 0, 0, 0, 0, 295, 0, 773, 1670, 1670,
	0, 0, 0, 0, 0, 2206, 0, 105, 0, 295,
	0, 3725, 0, 5228, 0, 0, 0, 5229, 3609, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	1459, 0, 0, 0, 0, 0, 295, 0, 295, 1691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2643, 2644, 2955, 2955,
	2955, 2955, 2955, 2955, 2955, 2955, 2955, 2955, 2955, 2955,
	2955, 2955, 2955, 2955, 2955, 2955, 2955, 2955, 0, 2955,
	0, 0, 0, 0, 0, 0, 295, 1459, 0, 295,
	790, 0, 790, 0, 0, 0, 0, 3103, 0, 0,
	0, 0, 0, 295, 0, 0, 295, 0, 0, 0,
	295, 5198, 295, 0, 0, 0, 0, 1449, 0, 295,
	295, 0, 1459, 1459, 3119, 0, 0, 0, 0, 295,
	0, 0, 0, 0, 0, 3619, 0, 0, 5203, 1976,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2215, 0, 0, 2215,
	0, 2215, 0, 2007, 0, 0, 109, 0, 0, 0,
	0, 1979, 0, 869, 869, 0, 0, 869, 869, 5213,
	1670, 1670, 1670, 1670, 0, 0, 3162, 0, 1377, 0,
	1377, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	2032, 0, 0, 0, 0, 0, 0, 0, 0, 1978,
	0, 0, 295, 0, 0, 0, 2029, 0, 0, 0,
	1998, 0, 0, 0, 0, 203, 295, 112, 0, 1995,
	116, 0, 0, 0, 0, 0, 0, 862, 0, 0,
	0, 0, 862, 0, 0, 2556, 0, 5209, 0, 0,
	122, 0, 3700, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 295, 0, 0, 1006, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 3263,
	1691, 0, 0, 0, 0, 0, 0, 4497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2206, 3620, 0, 2206, 0, 2206, 0, 2215, 5206,
	2001, 2002, 2003, 2004, 259, 295, 3323, 0, 0, 1454,
	1984, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 1691, 0, 0, 295, 0, 0, 3263,
	0, 0, 0, 5199, 0, 0, 0, 295, 209, 0,
	0, 0, 5211, 0, 0, 0, 258, 0, 3368, 0,
	0, 0, 0, 0, 2006, 2008, 1454, 0, 3162, 0,
	773, 0, 251, 0, 0, 0, 0, 0, 0, 1011,
	3162, 252, 0, 4060, 0, 204, 1541, 0, 0, 0,
	208, 0, 0, 1993, 1994, 0, 0, 0, 0, 1454,
	1454, 0, 295, 0, 2215, 0, 0, 0, 0, 0,
	0, 207, 0, 0, 0, 0, 0, 0, 5212, 0,
	0, 0, 295, 1449, 295, 0, 0, 1999, 0, 0,
	0, 0, 0, 0, 3441, 295, 0, 0, 1449, 0,
	1449, 0, 1449, 2206, 0, 0, 0, 0, 3615, 3616,
	3617, 0, 0, 5217, 0, 3614, 3612, 3613, 3605, 3606,
	3607, 3608, 3610, 3611, 0, 4104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4120, 0, 0, 0, 0, 0, 0, 0,
	295, 295, 295, 295, 1449, 0, 0, 1449, 0, 0,
	295, 0, 0, 0, 0, 295, 1636, 0, 2029, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 5214, 0, 0,
	0, 0, 0, 0, 295, 1650, 0, 0, 0, 2206,
	0, 0, 5210, 0, 0, 0, 0, 0, 0, 0,
	0, 5216, 0, 1213, 0, 0, 0, 0, 2005, 0,
	0, 0, 2215, 0, 0, 0, 1220, 1220, 1220, 0,
	0, 0, 0, 5207, 0, 0, 0, 0, 0, 0,
	5205, 0, 0, 0, 2000, 0, 0, 0, 5215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4213, 0, 0,
	0, 0, 1627, 0, 0, 0, 0, 0, 0, 0,
	5200, 0, 1976, 1977, 0, 2009, 2010, 2011, 2020, 2021,
	2022, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2013, 2007, 0, 0, 0,
	2031, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	5208, 0, 1691, 0, 5201, 2026, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4808,
	0, 0, 0, 2032, 0, 0, 0, 2215, 0, 0,
	0, 0, 1978, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1998, 1650, 0, 0, 2206, 0, 0,
	0, 0, 1995, 0, 0, 1454, 0, 0, 0, 1670,
	1670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1996, 1992, 0, 1989, 1987, 1988,
	1980, 1981, 1982, 1983, 1985, 1986, 0, 0, 0, 0,
	0, 4861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1650, 0, 1650, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2001, 2002, 2003, 2004, 0, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 295, 0, 1670,
	1670, 1670, 1670, 1670, 1670, 1670, 1670, 1670, 1670, 1670,
	1670, 1670, 1670, 1670, 1670, 1670, 1670, 1670, 1670, 0,
	1670, 0, 2206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 0, 0, 2017, 0, 773, 0,
	2027, 0, 0, 773, 0, 0, 773, 2006, 2008, 773,
	773, 0, 0, 0, 0, 773, 0, 0, 0, 0,
	0, 0, 0, 295, 0, 0, 0, 2023, 0, 2024,
	0, 0, 0, 0, 0, 295, 1993, 1994, 0, 0,
	0, 0, 0, 0, 0, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2015, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1999, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 0, 0, 0, 295, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5005, 999, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2955, 0, 0, 2025,
	3162, 3162, 295, 0, 3768, 3771, 0, 0, 0, 0,
	0, 3162, 0, 2179, 84, 0, 1002, 1001, 0, 0,
	2014, 0, 3162, 2179, 0, 3162, 2179, 0, 0, 2179,
	0, 2029, 3768, 85, 0, 0, 0, 0, 5037, 0,
	0, 0, 0, 0, 295, 295, 3771, 0, 295, 0,
	0, 90, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5059, 0, 0, 0, 3771, 0, 295,
	0, 3844, 0, 3844, 0, 0, 0, 0, 2955, 1449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2005, 0, 98, 0, 0, 0, 0, 0, 0,
	0, 0, 3162, 0, 3162, 0, 3875, 3162, 3771, 0,
	0, 3162, 0, 0, 0, 0, 0, 2000, 0, 0,
	1627, 0, 0, 0, 0, 3771, 0, 0, 862, 0,
	0, 0, 0, 0, 0, 1005, 0, 0, 0, 0,
	4554, 0, 0, 0, 0, 0, 0, 2018, 55, 0,
	120, 0, 0, 0, 0, 0, 104, 117, 0, 0,
	1449, 0, 0, 0, 0, 0, 0, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4581,
	0, 0, 0, 2031, 0, 295, 0, 3921, 0, 0,
	3937, 3162, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 0, 1459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 0,
	0, 0, 105, 3368, 0, 0, 1449, 0, 295, 0,
	0, 3162, 0, 773, 0, 0, 0, 0, 0, 1220,
	3162, 0, 0, 0, 0, 0, 0, 1627, 0, 0,
	0, 0, 0, 0, 0, 0, 1650, 1650, 0, 0,
	0, 2016, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2955, 1990, 1991, 1997, 2019, 1996, 1992, 0,
	1989, 1987, 1988, 1980, 1981, 1982, 1983, 1985, 1986, 4049,
	0, 0, 0, 0, 3578, 0, 0, 0, 3579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4056, 0, 3603, 3604, 1691, 3621, 3622, 3623,
	1449, 295, 0, 295, 0, 2955, 0, 0, 0, 1449,
	0, 0, 1449, 0, 0, 1650, 0, 4092, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2955, 0, 0, 0, 0, 0, 0, 0, 0, 2512,
	0, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3603, 3604, 0, 3621, 3622,
	3623, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3618, 2986, 0, 4091, 0,
	0, 0, 0, 1976, 1977, 0, 2009, 2010, 2011, 2020,
	2021, 2022, 0, 0, 0, 0, 0, 0, 0, 0,
	4125, 0, 0, 1541, 0, 0, 2013, 2007, 0, 1627,
	0, 2984, 0, 0, 0, 1979, 2988, 0, 0, 0,
	203, 0, 112, 0, 0, 116, 2026, 0, 0, 0,
	0, 0, 0, 4800, 0, 0, 3618, 0, 2989, 0,
	0, 0, 0, 0, 2032, 0, 0, 0, 0, 0,
	0, 0, 0, 1978, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 1006, 1998, 0, 0, 0, 0, 164,
	0, 0, 0, 1995, 0, 3609, 4800, 0, 0, 2990,
	0, 0, 0, 0, 0, 0, 0, 0, 1454, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2991, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 773, 773, 0, 2717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3609, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2992, 0, 3625,
	0, 0, 0, 209, 2001, 2002, 2003, 2004, 0, 0,
	0, 258, 0, 0, 1984, 0, 0, 0, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 0, 0, 0,
	204, 0, 3619, 1650, 0, 208, 0, 0, 0, 2717,
	0, 0, 0, 0, 0, 0, 0, 2017, 0, 2993,
	3625, 2027, 0, 0, 0, 0, 1000, 0, 2006, 2008,
	0, 0, 0, 0, 0, 0, 0, 2994, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2995, 2023, 0,
	2024, 0, 0, 0, 0, 0, 0, 1993, 1994, 0,
	0, 0, 862, 3619, 0, 0, 0, 0, 0, 0,
	0, 0, 2996, 0, 0, 0, 2015, 0, 1976, 1977,
	0, 0, 2132, 2029, 2020, 2021, 2022, 0, 0, 4323,
	0, 1999, 4325, 4326, 1976, 1977, 0, 0, 0, 3844,
	0, 1220, 2007, 0, 0, 1627, 0, 0, 0, 0,
	1979, 0, 0, 0, 295, 0, 0, 0, 2007, 0,
	0, 2026, 0, 0, 0, 0, 1979, 0, 3263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2032,
	2025, 0, 0, 0, 2029, 3771, 0, 295, 1978, 0,
	0, 790, 790, 1459, 0, 2032, 0, 1670, 0, 1998,
	0, 2014, 0, 0, 1978, 0, 0, 0, 1995, 3620,
	0, 0, 2029, 2997, 0, 1998, 0, 0, 0, 2012,
	0, 0, 0, 0, 1995, 0, 0, 0, 0, 0,
	0, 295, 3368, 0, 0, 3368, 2179, 0, 1627, 3603,
	3604, 295, 3621, 3622, 3623, 0, 0, 0, 4415, 0,
	3263, 0, 0, 295, 0, 0, 0, 295, 0, 295,
	0, 0, 0, 0, 295, 0, 0, 0, 0, 0,
	3620, 0, 2005, 0, 0, 0, 0, 0, 0, 1670,
	0, 0, 4086, 3162, 295, 2998, 2999, 0, 0, 2001,
	2002, 2003, 2004, 0, 0, 1011, 3162, 0, 2000, 1984,
	0, 0, 0, 0, 0, 2001, 2002, 2003, 2004, 1627,
	0, 0, 3000, 0, 0, 1984, 0, 0, 0, 0,
	3618, 0, 3005, 0, 0, 0, 0, 295, 2018, 0,
	0, 3771, 1205, 0, 3119, 1627, 0, 0, 0, 0,
	0, 0, 2017, 3001, 0, 0, 2027, 0, 0, 0,
	0, 0, 0, 2006, 2008, 0, 0, 0, 3002, 0,
	0, 0, 0, 0, 2031, 3615, 3616, 3617, 0, 2006,
	2008, 0, 3614, 3612, 3613, 3605, 3606, 3607, 3608, 3610,
	3611, 0, 1993, 1994, 0, 0, 0, 0, 0, 0,
	3003, 0, 0, 0, 0, 0, 0, 0, 1993, 1994,
	0, 2015, 0, 0, 0, 0, 0, 0, 4517, 0,
	0, 0, 0, 0, 0, 0, 1999, 0, 0, 0,
	3609, 0, 0, 0, 0, 0, 3615, 3616, 3617, 0,
	3004, 0, 1999, 3614, 3612, 3613, 3605, 3606, 3607, 3608,
	3610, 3611, 2016, 0, 1454, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 1991, 1997, 2019, 1996, 1992,
	0, 1989, 1987, 1988, 1980, 1981, 1982, 1983, 1985, 1986,
	0, 295, 0, 1670, 0, 0, 0, 1691, 0, 295,
	0, 0, 2012, 0, 0, 0, 0, 0, 0, 1627,
	0, 0, 0, 295, 3625, 0, 0, 2029, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2029, 0, 0, 0, 1459, 1459, 0,
	0, 0, 0, 0, 0, 0, 1670, 0, 0, 0,
	0, 0, 1459, 1459, 0, 295, 1459, 3619, 0, 0,
	0, 0, 0, 2512, 0, 0, 0, 3162, 3162, 0,
	3768, 1670, 0, 3844, 3162, 0, 0, 2005, 0, 0,
	0, 0, 4629, 0, 4629, 1691, 0, 0, 0, 0,
	0, 0, 0, 2005, 0, 0, 3162, 0, 2179, 0,
	0, 0, 3768, 2000, 1691, 1691, 295, 3771, 0, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2000,
	3771, 0, 295, 3771, 0, 295, 0, 0, 3844, 0,
	0, 0, 0, 2018, 0, 0, 0, 0, 2029, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3162,
	0, 3162, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2031,
	84, 0, 0, 0, 2012, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2031, 0, 0, 0, 85,
	2012, 0, 0, 0, 0, 0, 0, 0, 0, 3162,
	3162, 0, 0, 0, 0, 3368, 3368, 90, 0, 0,
	0, 0, 3768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3620, 295, 0, 2012, 0, 0,
	0, 0, 0, 2012, 0, 0, 295, 0, 0, 2012,
	0, 84, 0, 0, 0, 0, 0, 2016, 0, 98,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 2019, 1996, 1992, 0, 1989, 1987, 1988, 1980,
	1981, 1982, 1983, 1985, 1986, 0, 0, 0, 90, 1996,
	1992, 0, 1989, 1987, 1988, 1980, 1981, 1982, 1983, 1985,
	1986, 1005, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 120, 0, 0, 0,
	0, 0, 104, 117, 0, 0, 0, 0, 0, 0,
	98, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2012, 0, 0, 0, 0, 2012, 0, 0,
	0, 0, 0, 0, 0, 1454, 0, 0, 0, 0,
	0, 2012, 0, 0, 0, 0, 2012, 0, 0, 0,
	0, 0, 1005, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 55, 0, 120, 105, 0,
	3615, 3616, 3617, 104, 117, 0, 0, 3614, 3612, 3613,
	3605, 3606, 3607, 3608, 3610, 3611, 0, 0, 0, 1220,
	0, 0, 0, 0, 0, 0, 3162, 2179, 0, 2179,
	0, 0, 4415, 0, 0, 2512, 0, 0, 0, 0,
	0, 295, 2012, 0, 0, 0, 0, 0, 2012, 0,
	0, 4877, 0, 4877, 0, 0, 0, 0, 0, 0,
	84, 0, 1454, 0, 0, 0, 0, 0, 0, 105,
	0, 0, 0, 0, 0, 0, 0, 0, 862, 85,
	0, 1976, 1977, 0, 0, 0, 0, 0, 0, 3844,
	1691, 0, 1691, 1449, 0, 1468, 0, 90, 0, 0,
	0, 0, 0, 0, 0, 2007, 0, 0, 0, 0,
	0, 0, 3771, 1979, 295, 0, 0, 0, 0, 0,
	0, 0, 1205, 1205, 1205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3077, 0, 0, 98,
	0, 0, 2032, 0, 0, 0, 4415, 0, 0, 4629,
	0, 1978, 1691, 0, 0, 0, 3162, 109, 0, 0,
	295, 0, 1998, 0, 0, 0, 0, 0, 0, 0,
	0, 1995, 1640, 0, 4969, 0, 0, 0, 1656, 0,
	0, 1005, 0, 0, 0, 0, 1691, 2012, 2012, 2012,
	2012, 2012, 2012, 2012, 2012, 0, 120, 0, 0, 0,
	0, 0, 104, 117, 0, 0, 0, 2012, 1693, 0,
	1699, 0, 1705, 0, 295, 295, 203, 0, 112, 0,
	2012, 116, 0, 0, 0, 0, 0, 0, 109, 4081,
	0, 0, 0, 0, 0, 0, 0, 0, 4125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 2001, 2002, 2003, 2004, 0, 0, 0, 1006,
	0, 0, 1984, 0, 0, 164, 2959, 0, 105, 0,
	3844, 5028, 0, 0, 0, 0, 0, 0, 4415, 1798,
	2012, 1803, 0, 0, 0, 0, 2012, 203, 0, 112,
	0, 1627, 116, 0, 0, 1817, 0, 1822, 4629, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 4629, 0, 0, 2006, 2008, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	1006, 0, 0, 169, 0, 0, 164, 0, 0, 295,
	0, 0, 0, 0, 1627, 1993, 1994, 0, 0, 209,
	0, 0, 790, 0, 0, 0, 0, 258, 0, 1627,
	0, 0, 0, 0, 0, 0, 1888, 0, 0, 1894,
	0, 4629, 4629, 251, 0, 0, 259, 0, 0, 1999,
	0, 0, 252, 0, 0, 0, 204, 0, 0, 0,
	1627, 208, 4629, 0, 295, 4629, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 2179, 0, 0, 0, 0,
	0, 0, 207, 0, 0, 0, 1691, 0, 1691, 0,
	209, 0, 0, 0, 0, 0, 0, 109, 258, 0,
	0, 1220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1220, 251, 0, 0, 0, 0, 1459,
	0, 0, 0, 252, 0, 0, 0, 204, 0, 0,
	2029, 0, 208, 5158, 0, 0, 0, 0, 0, 0,
	0, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 4877,
	0, 0, 295, 1792, 0, 0, 203, 0, 112, 0,
	0, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2053, 1650, 0, 0, 3162, 0,
	2066, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2005, 257, 0, 0, 0, 0, 0, 0, 0, 1006,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 295, 0, 0, 0, 2000, 0, 0, 0,
	0, 1627, 1976, 1977, 0, 2009, 2010, 2011, 2020, 2021,
	2022, 0, 0, 0, 0, 0, 4125, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 2007, 0, 0, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	0, 1691, 0, 0, 0, 2026, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 2031, 2032, 0, 0, 2126, 2126, 2126, 209,
	0, 0, 1978, 0, 0, 0, 0, 258, 0, 1454,
	0, 1627, 0, 1998, 0, 0, 0, 0, 0, 5313,
	0, 0, 1995, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 0, 204, 0, 0, 0,
	0, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 0, 4415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1996, 1992, 0, 1989,
	1987, 1988, 1980, 1981, 1982, 1983, 1985, 1986, 0, 0,
	0, 0, 0, 2001, 2002, 2003, 2004, 0, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	0, 3162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4629, 0, 4629, 0, 0, 1691, 0, 0, 0,
	0, 0, 0, 0, 0, 1205, 0, 0, 0, 0,
	0, 0, 1627, 2012, 0, 1627, 2017, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 2006, 2008, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2012, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1993, 1994, 0, 0,
	0, 0, 0, 3162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2015, 0, 0, 0, 0,
	3263, 0, 0, 0, 2012, 0, 0, 0, 2012, 0,
	1999, 0, 0, 0, 1627, 0, 3162, 0, 0, 0,
	0, 0, 2012, 0, 0, 0, 0, 0, 0, 0,
	3263, 1627, 0, 2012, 2012, 2012, 2012, 2012, 2012, 2012,
	2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012,
	2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012,
	2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, 0,
	0, 0, 0, 0, 2012, 0, 2012, 2012, 2012, 2012,
	0, 0, 0, 0, 0, 0, 0, 0, 2959, 2959,
	84, 2029, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2012, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 90, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2005, 0, 0, 2012, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 1627, 0, 0, 98,
	0, 0, 0, 84, 0, 52, 51, 2000, 0, 0,
	0, 0, 0, 0, 2012, 0, 0, 2012, 0, 0,
	2012, 0, 85, 2012, 0, 0, 78, 0, 0, 2012,
	2012, 2012, 2012, 2012, 2012, 2012, 0, 2018, 0, 0,
	90, 1005, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 55, 0, 120, 0, 54, 0,
	171, 0, 104, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2031, 0, 0, 0, 0, 0, 53,
	0, 0, 98, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2012, 0, 0, 3624, 0,
	2959, 2959, 2959, 2959, 0, 0, 2012, 0, 2012, 0,
	56, 74, 0, 2012, 0, 0, 0, 0, 0, 57,
	0, 0, 0, 0, 63, 0, 0, 0, 105, 79,
	0, 0, 0, 0, 0, 0, 0, 55, 0, 120,
	2619, 0, 0, 0, 0, 104, 117, 0, 0, 0,
	0, 2016, 0, 1259, 75, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 1991, 1997, 2019, 1996, 1992, 0,
	1989, 1987, 1988, 1980, 1981, 1982, 1983, 1985, 1986, 2649,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	58, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 0, 0, 0, 2690, 0, 2694, 0, 0,
	0, 0, 0, 0, 2708, 0, 0, 1205, 0, 0,
	0, 0, 0, 2719, 2720, 2721, 2722, 2723, 2724, 2725,
	2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735,
	2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745,
	2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 0,
	2760, 0, 2762, 2763, 2764, 2765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 76, 0, 0, 0, 0, 0, 2789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2053, 0, 0, 0, 2840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2870, 2873, 2876, 2879, 0, 0, 2885, 2886, 2887, 2888,
	2889, 2890, 2891, 1627, 0, 0, 203, 0, 112, 0,
	0, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2951, 0, 2962, 2964, 2969, 0,
	109, 0, 0, 0, 1627, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 59, 1006,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 62, 0, 0, 0, 0,
	65, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 0, 0, 0, 64, 203,
	0, 112, 0, 0, 116, 259, 0, 0, 0, 0,
	60, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 61, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 257, 0, 0, 0, 0, 0,
	2012, 2012, 68, 2012, 0, 0, 0, 0, 164, 209,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 170, 1627, 1627, 0, 1627,
	0, 0, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 0, 0, 204, 0, 259, 0,
	0, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1254, 1627, 0,
	0, 0, 1790, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 1220, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 0, 0, 294,
	294, 294, 0, 0, 0, 252, 2012, 0, 0, 204,
	0, 0, 0, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 1627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 937, 0, 207, 0, 0, 3, 0,
	0, 0, 0, 0, 0, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	937, 0, 0, 0, 0, 0, 2012, 2012, 0, 2959,
	2959, 0, 0, 2012, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3624, 3624, 0, 0, 2012, 2012, 0,
	0, 0, 0, 0, 0, 0, 0, 2012, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2012, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2012, 0, 0, 0, 0, 0, 2930,
	2931, 2932, 2933, 2926, 2927, 2928, 2929, 0, 1627, 3326,
	3327, 0, 3329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2959,
	2959, 2959, 2959, 2959, 2959, 2959, 2959, 2959, 2959, 2959,
	2959, 2959, 2959, 2959, 2959, 2959, 2959, 2959, 2959, 0,
	2959, 3624, 3624, 3624, 3624, 0, 0, 0, 0, 0,
	0, 0, 1627, 0, 0, 0, 0, 1290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1378, 0, 0,
	0, 0, 0, 0, 0, 0, 2012, 0, 2906, 2907,
	2908, 2909, 1627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2918, 2919, 2920, 2921, 2914, 2915, 2916, 2917,
	2922, 2923, 2924, 2925, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3452, 0, 0, 0, 0, 0,
	0, 0, 0, 1976, 1977, 0, 2009, 2010, 2011, 2020,
	2021, 2022, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1627, 0, 2013, 2007, 0, 0,
	0, 0, 0, 0, 0, 1979, 2902, 2903, 2904, 2905,
	2910, 2911, 2912, 2913, 0, 0, 2026, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2032, 2012, 0, 0, 0, 0,
	2033, 2034, 1220, 1978, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1998, 1205, 0, 0, 0, 0,
	0, 0, 0, 1995, 0, 0, 0, 0, 1627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2012, 2012, 0, 0, 0, 0, 3512, 3513,
	0, 0, 0, 0, 3519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3533, 3534, 0, 0, 0, 0, 2840,
	0, 0, 0, 0, 0, 0, 0, 1382, 0, 0,
	1627, 0, 0, 0, 2001, 2002, 2003, 2004, 0, 1545,
	0, 0, 0, 0, 1984, 0, 0, 0, 0, 0,
	1667, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3557, 1976, 1977, 0, 0, 0, 0, 2017, 0, 0,
	1667, 2027, 0, 0, 0, 0, 0, 3569, 2006, 2008,
	0, 0, 0, 0, 0, 2007, 0, 0, 0, 0,
	0, 0, 0, 1979, 0, 0, 0, 0, 2023, 0,
	2024, 0, 0, 0, 0, 0, 0, 1993, 1994, 0,
	0, 0, 0, 0, 1667, 0, 0, 0, 0, 0,
	0, 1667, 2032, 0, 0, 0, 2015, 0, 0, 0,
	0, 1978, 0, 0, 0, 0, 0, 1667, 0, 0,
	0, 1999, 1998, 0, 0, 0, 0, 0, 0, 0,
	0, 1995, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2969, 2969,
	2969, 0, 2012, 2012, 0, 0, 2012, 3624, 3624, 2012,
	2025, 0, 0, 2012, 0, 2126, 0, 1667, 0, 0,
	2012, 0, 0, 0, 0, 0, 0, 0, 0, 4080,
	0, 2014, 0, 2012, 0, 0, 0, 0, 0, 0,
	0, 0, 2029, 3662, 0, 0, 0, 0, 0, 0,
	0, 0, 2001, 2002, 2003, 2004, 2012, 2012, 2012, 2012,
	2012, 0, 1984, 0, 0, 0, 2012, 0, 2012, 0,
	0, 3624, 3624, 3624, 3624, 3624, 3624, 3624, 3624, 3624,
	3624, 3624, 3624, 3624, 3624, 3624, 3624, 3624, 3624, 3624,
	3624, 0, 0, 0, 3624, 0, 0, 2012, 2012, 0,
	0, 0, 2005, 0, 0, 0, 0, 0, 0, 2012,
	0, 0, 0, 0, 0, 0, 2006, 2008, 2012, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2000, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 1220, 294, 294, 1993, 1994, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1205, 2018, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1999,
	0, 0, 0, 2012, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2031, 0, 0, 0, 0, 0,
	0, 2012, 0, 0, 0, 0, 0, 0, 0, 0,
	3801, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 294, 294, 0, 0, 294, 294,
	0, 0, 2012, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 937, 0, 0, 0, 0, 2012, 2012, 0, 0,
	2029, 0, 0, 0, 0, 0, 0, 0, 0, 3858,
	3859, 0, 2016, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 1991, 1997, 2019, 1996, 1992,
	0, 1989, 1987, 1988, 1980, 1981, 1982, 1983, 1985, 1986,
	294, 294, 0, 0, 0, 2836, 0, 0, 0, 2837,
	0, 0, 0, 0, 0, 0, 0, 1545, 0, 0,
	2005, 0, 0, 0, 0, 0, 294, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2012, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1976, 1977, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2007, 0,
	0, 0, 2031, 0, 0, 0, 1979, 0, 0, 2012,
	2012, 0, 0, 0, 2012, 2012, 0, 0, 2012, 2012,
	0, 0, 0, 2012, 0, 294, 0, 2012, 0, 0,
	0, 0, 2012, 0, 1545, 2032, 0, 0, 0, 0,
	0, 0, 0, 0, 1978, 0, 0, 2959, 0, 0,
	0, 294, 0, 0, 0, 1998, 0, 0, 0, 0,
	0, 0, 0, 1382, 1995, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1382, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1996, 1992, 0, 1989,
	1987, 1988, 1980, 1981, 1982, 1983, 1985, 1986, 0, 0,
	0, 0, 0, 0, 1382, 0, 0, 0, 0, 0,
	0, 0, 3518, 0, 0, 0, 2708, 0, 0, 2959,
	0, 0, 0, 4078, 4079, 0, 0, 4082, 0, 0,
	0, 4085, 0, 0, 0, 2001, 2002, 2003, 2004, 0,
	4089, 0, 0, 0, 0, 1984, 0, 0, 1382, 4096,
	0, 0, 0, 0, 3662, 1382, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4109,
	0, 1382, 0, 0, 0, 0, 0, 2012, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4132,
	4133, 0, 4134, 4135, 4136, 1667, 1667, 0, 0, 2006,
	2008, 0, 0, 0, 0, 0, 1545, 0, 0, 0,
	4142, 0, 2012, 2012, 4144, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1993, 1994,
	0, 1382, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4173, 4174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1667,
	0, 0, 1999, 0, 2148, 4185, 1378, 0, 0, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4194, 0, 0, 0, 0, 0, 294, 2148, 294, 0,
	0, 0, 0, 0, 0, 0, 937, 0, 0, 2012,
	2012, 2012, 0, 0, 1667, 937, 1667, 0, 1667, 0,
	2012, 2012, 3624, 2959, 0, 0, 0, 0, 0, 2012,
	0, 0, 2012, 0, 0, 0, 1667, 1667, 0, 0,
	0, 0, 0, 822, 294, 0, 0, 0, 0, 0,
	1667, 294, 0, 2029, 0, 0, 0, 0, 0, 0,
	0, 0, 1667, 0, 805, 1667, 1667, 1667, 0, 806,
	0, 0, 0, 0, 0, 3624, 2959, 0, 4259, 0,
	0, 0, 0, 0, 0, 0, 1976, 1977, 0, 0,
	0, 0, 2012, 0, 0, 0, 0, 0, 0, 0,
	2012, 2959, 0, 0, 0, 0, 4277, 0, 2012, 0,
	2007, 0, 807, 2005, 0, 0, 0, 0, 1979, 2012,
	0, 2012, 0, 808, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2000,
	4308, 0, 0, 0, 0, 809, 0, 2032, 0, 0,
	0, 0, 0, 0, 0, 0, 1978, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1998, 828, 0,
	0, 0, 0, 0, 0, 0, 1995, 0, 0, 4332,
	4333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1545, 0, 0, 2031, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 811, 0, 0, 0, 3624,
	0, 0, 0, 0, 1382, 0, 1382, 0, 0, 0,
	0, 0, 0, 0, 3511, 0, 0, 0, 0, 812,
	0, 1382, 0, 0, 813, 0, 0, 0, 0, 0,
	2012, 3624, 0, 0, 2012, 0, 0, 2001, 2002, 2003,
	2004, 837, 0, 0, 2219, 0, 0, 1984, 0, 0,
	0, 0, 0, 3624, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 2126, 827,
	0, 937, 0, 0, 0, 1545, 0, 0, 0, 1996,
	1992, 0, 1989, 1987, 1988, 1980, 1981, 1982, 1983, 1985,
	1986, 0, 0, 0, 903, 2126, 0, 0, 0, 0,
	0, 2006, 2008, 0, 4448, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	914, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	1993, 1994, 824, 0, 0, 0, 0, 0, 294, 0,
	0, 916, 0, 0, 0, 294, 1545, 0, 1382, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 294, 1999, 915, 0, 0, 0, 294,
	0, 0, 1545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4495, 4496, 0, 0, 0, 0, 4500,
	4501, 0, 0, 0, 4504, 4505, 0, 0, 0, 0,
	0, 0, 4509, 0, 0, 0, 0, 0, 0, 834,
	0, 815, 0, 4513, 0, 0, 0, 0, 294, 908,
	0, 0, 0, 0, 0, 0, 924, 0, 0, 4518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 913, 835, 0, 816, 2029, 0, 0, 2012, 0,
	0, 0, 0, 937, 294, 0, 294, 0, 294, 0,
	294, 0, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2012, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	836, 0, 0, 0, 0, 912, 0, 0, 817, 0,
	0, 0, 0, 832, 833, 2005, 830, 294, 294, 294,
	294, 294, 837, 825, 0, 0, 818, 0, 0, 1382,
	1382, 0, 0, 0, 0, 0, 1545, 0, 0, 0,
	1382, 2000, 0, 0, 0, 0, 0, 0, 0, 0,
	910, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 819, 0, 826, 2012, 0, 0,
	1205, 0, 0, 0, 0, 820, 0, 0, 0, 0,
	0, 0, 0, 1382, 0, 0, 0, 0, 0, 0,
	0, 821, 0, 0, 0, 0, 829, 2031, 0, 0,
	0, 0, 0, 923, 0, 0, 0, 0, 0, 0,
	0, 838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 823, 0, 0, 0, 1545, 0, 1382, 0,
	1382, 2012, 1382, 0, 0, 0, 0, 0, 4673, 0,
	0, 0, 1667, 0, 0, 0, 0, 0, 0, 0,
	1382, 1382, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1382, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1382, 0, 0, 1382,
	1382, 1382, 0, 0, 0, 0, 905, 0, 4708, 4709,
	0, 1996, 1992, 0, 1989, 1987, 1988, 1980, 1981, 1982,
	1983, 1985, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 909,
	0, 0, 0, 1378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1378,
	0, 0, 0, 0, 1667, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 0, 1667, 0, 1667, 0,
	0, 836, 0, 0, 1667, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 1667, 1667, 919, 0, 0,
	937, 0, 937, 0, 907, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4795, 4796, 4797, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2219, 2219, 1382, 0, 0, 0,
	0, 0, 0, 2708, 0, 0, 4806, 4807, 0, 0,
	294, 0, 822, 937, 0, 0, 0, 904, 0, 0,
	0, 0, 0, 917, 4815, 4818, 0, 294, 0, 0,
	294, 0, 0, 805, 294, 0, 294, 0, 806, 0,
	0, 0, 0, 294, 294, 0, 0, 911, 0, 0,
	0, 1976, 1977, 294, 2009, 2010, 2011, 2020, 2021, 2022,
	0, 0, 838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 906, 2013, 2007, 0, 0, 0, 0,
	0, 807, 0, 1979, 0, 0, 0, 0, 0, 1382,
	0, 0, 808, 0, 2026, 0, 0, 0, 0, 921,
	922, 0, 918, 0, 0, 0, 0, 0, 0, 0,
	0, 4878, 2032, 0, 809, 0, 0, 0, 0, 0,
	4886, 1978, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1998, 0, 0, 4894, 294, 828, 1205, 0,
	0, 1995, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 0, 1382, 4905, 0, 0, 4907, 0, 810,
	1382, 0, 0, 0, 0, 0, 0, 0, 0, 1382,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 811, 0, 1382, 0, 0, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 812, 0,
	0, 0, 0, 813, 0, 0, 0, 0, 0, 0,
	0, 0, 2001, 2002, 2003, 2004, 0, 0, 0, 0,
	837, 0, 1984, 0, 0, 0, 0, 0, 0, 937,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 0, 0, 0, 2017, 0, 0, 0, 2027,
	0, 294, 0, 0, 0, 0, 2006, 2008, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2023, 0, 2024, 0,
	0, 0, 0, 0, 0, 1993, 1994, 0, 0, 0,
	0, 824, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2015, 0, 294, 0, 0, 0,
	1382, 0, 0, 5036, 0, 0, 0, 5040, 0, 1999,
	0, 0, 0, 0, 0, 0, 294, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1545, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2219,
	0, 0, 0, 0, 0, 0, 0, 0, 2025, 0,
	815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2014,
	0, 1545, 0, 0, 294, 294, 294, 294, 0, 0,
	2029, 835, 0, 816, 294, 0, 1545, 0, 0, 294,
	1382, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1382, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1545, 0, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 294, 836,
	0, 0, 0, 0, 0, 2708, 0, 817, 0, 0,
	2005, 0, 832, 833, 4818, 830, 0, 0, 0, 0,
	0, 0, 825, 0, 0, 818, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 0, 2000, 0, 0, 84,
	0, 52, 51, 0, 0, 0, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 0, 0, 0, 0, 2018, 0, 1205, 0,
	0, 0, 0, 819, 0, 826, 90, 0, 1382, 0,
	0, 0, 0, 0, 820, 0, 0, 73, 0, 0,
	1382, 0, 1382, 0, 54, 0, 171, 0, 1382, 0,
	821, 0, 2031, 0, 0, 829, 0, 0, 0, 1382,
	1382, 0, 0, 0, 0, 53, 0, 0, 98, 0,
	838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 823, 0, 0, 929, 0, 0, 0, 0, 5254,
	5254, 5254, 0, 0, 0, 0, 56, 74, 1545, 0,
	0, 0, 0, 0, 0, 57, 0, 0, 0, 0,
	63, 929, 957, 0, 0, 5448, 0, 0, 0, 0,
	0, 0, 0, 55, 0, 120, 0, 5279, 0, 0,
	2016, 104, 117, 960, 0, 0, 0, 0, 961, 0,
	75, 0, 1990, 1991, 1997, 2019, 1996, 1992, 0, 1989,
	1987, 1988, 1980, 1981, 1982, 1983, 1985, 1986, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4523, 0, 0,
	0, 0, 1667, 0, 1667, 0, 58, 0, 1545, 0,
	0, 962, 0, 976, 0, 0, 1667, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 0, 0,
	0, 0, 0, 0, 5254, 0, 0, 0, 0, 963,
	0, 0, 0, 0, 964, 0, 0, 0, 0, 0,
	0, 1378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 985, 0, 0,
	0, 0, 0, 0, 965, 0, 0, 0, 1667, 0,
	0, 0, 0, 5373, 0, 0, 0, 1378, 0, 983,
	1667, 0, 1667, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 76, 0,
	0, 0, 0, 0, 958, 0, 0, 2148, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 966, 937,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1545,
	0, 0, 1545, 0, 0, 987, 0, 0, 0, 0,
	837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 0, 0,
	294, 294, 0, 0, 0, 0, 109, 5254, 5437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 0, 0,
	0, 62, 0, 0, 0, 0, 65, 0, 0, 0,
	0, 1545, 0, 0, 0, 0, 77, 0, 0, 0,
	0, 986, 0, 0, 64, 203, 0, 112, 1545, 0,
	116, 981, 5300, 0, 0, 0, 60, 0, 294, 294,
	172, 0, 294, 0, 0, 0, 0, 0, 61, 2148,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 294, 0, 0, 0, 0, 68, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 0,
	0, 1382, 1382, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 980,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	967, 0, 0, 0, 259, 0, 0, 1382, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1382, 0, 0, 0, 0,
	0, 0, 169, 968, 0, 0, 0, 1382, 0, 0,
	1382, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 294, 0, 1545, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2219, 0, 937,
	0, 1382, 251, 0, 0, 0, 0, 0, 294, 836,
	0, 252, 0, 0, 0, 204, 0, 0, 0, 0,
	208, 0, 956, 0, 0, 977, 0, 0, 0, 0,
	0, 0, 294, 0, 0, 969, 0, 0, 0, 0,
	0, 207, 1378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 975, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2219, 0,
	0, 0, 0, 970, 0, 0, 0, 971, 990, 0,
	989, 0, 0, 0, 972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	973, 0, 0, 0, 0, 982, 0, 0, 0, 0,
	0, 991, 0, 988, 0, 0, 0, 0, 0, 0,
	838, 0, 0, 0, 0, 294, 0, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1382, 0, 0, 0, 0, 0, 0, 1667,
	1667, 0, 1667, 0, 0, 294, 0, 0, 0, 0,
	0, 1667, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1382, 0, 1382, 0,
	0, 0, 1382, 0, 0, 0, 0, 0, 0, 0,
	1382, 0, 0, 0, 0, 0, 1267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1667, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1382, 1667, 0, 0, 0, 0, 1667, 1667,
	1667, 0, 0, 0, 0, 0, 0, 0, 296, 296,
	296, 0, 1382, 0, 0, 0, 0, 0, 0, 0,
	0, 1667, 0, 1667, 1382, 0, 1382, 0, 1667, 0,
	1545, 1378, 1378, 0, 1544, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 0, 1666, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1545, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1382, 0, 1666, 1382, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 937, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1666,
	0, 0, 0, 0, 0, 0, 1666, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2219, 0, 0, 0,
	0, 0, 1666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1382, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1382, 1545, 1545, 0, 1545, 0, 0, 0,
	0, 0, 2219, 2219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1667, 1667, 0, 0, 0, 0,
	0, 0, 1666, 0, 0, 0, 0, 0, 0, 0,
	0, 2219, 2219, 0, 0, 1545, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1382, 1382, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1545,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 1382, 0, 0,
	0, 0, 1545, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 294, 0, 294, 0, 0, 0, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1667, 1667, 0, 0, 1378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 0, 0, 1545, 0, 0, 0, 0,
	1667, 1371, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1667, 1667, 1667, 1667, 1667,
	1667, 1667, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1545,
	0, 0, 0, 290, 290, 769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1545,
	0, 0, 0, 1382, 1382, 0, 1382, 0, 0, 0,
	0, 0, 1544, 0, 0, 1382, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2189, 0, 0,
	0, 0, 0, 0, 0, 0, 2189, 0, 0, 0,
	0, 0, 1545, 0, 1667, 2219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1378, 0, 0, 0, 2219,
	0, 0, 0, 1378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2148, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1545, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1382, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1382, 294,
	0, 0, 0, 0, 0, 0, 0, 1382, 0, 0,
	0, 0, 1382, 1382, 1382, 0, 0, 0, 0, 1544,
	0, 0, 0, 0, 0, 0, 2148, 0, 2148, 0,
	0, 0, 0, 0, 0, 1382, 0, 1382, 0, 0,
	0, 0, 1382, 0, 1382, 1545, 0, 0, 0, 0,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1667, 1667, 1667, 294, 0, 0, 294,
	0, 0, 0, 0, 0, 1382, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1545, 0, 0,
	1667, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 296, 296, 0, 0, 296, 0, 0, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 0, 0, 0, 1382, 0, 0, 0, 0,
	1666, 1666, 0, 1382, 0, 0, 0, 1382, 1382, 0,
	1382, 1544, 0, 0, 0, 0, 0, 1382, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1382, 1382,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1382,
	0, 296, 1547, 296, 296, 0, 0, 296, 296, 0,
	0, 0, 0, 1547, 1666, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 0, 0, 1382, 0, 1382, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1547, 0, 0, 0, 0, 0, 1666,
	0, 1666, 0, 1666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1382, 0, 0, 0, 0, 0, 296,
	296, 1666, 1666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1666, 1382, 1547, 0, 1667,
	0, 0, 0, 0, 1547, 296, 296, 1666, 0, 1667,
	1666, 1666, 1666, 0, 0, 0, 0, 0, 0, 0,
	1547, 0, 0, 0, 0, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 2189, 0, 0, 0, 1382, 1382,
	0, 0, 0, 0, 0, 2219, 0, 2219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1547, 0, 0, 0, 0, 0, 0, 0, 0, 1382,
	0, 0, 0, 0, 1382, 0, 1667, 0, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 0, 0, 0, 1382,
	1382, 1382, 1382, 1382, 1382, 1382, 0, 0, 0, 0,
	0, 0, 0, 2148, 0, 0, 0, 0, 0, 0,
	296, 0, 0, 1382, 294, 0, 0, 1544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1382, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2219, 0, 0, 0, 294, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1382, 0, 1382, 0,
	0, 0, 0, 1667, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1544, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1976, 1977, 0, 2009, 2010, 2011, 2020, 2021, 2022,
	0, 0, 0, 0, 0, 1382, 0, 0, 0, 0,
	0, 0, 0, 0, 2013, 2007, 0, 0, 0, 0,
	0, 0, 2148, 1979, 0, 1435, 0, 1435, 1435, 0,
	0, 0, 0, 0, 2026, 0, 0, 2148, 0, 0,
	2219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1544, 2032, 0, 0, 0, 0, 0, 0, 0,
	0, 1978, 0, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 1998, 0, 0, 0, 0, 1544, 0, 1382,
	0, 1995, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2148, 2148, 1382, 1382, 1382,
	0, 0, 0, 0, 0, 0, 1538, 0, 0, 296,
	0, 0, 1648, 0, 0, 0, 2148, 0, 294, 2148,
	1547, 0, 0, 1382, 0, 296, 296, 296, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 0, 0, 0, 0,
	0, 1382, 0, 0, 1382, 0, 0, 0, 0, 0,
	0, 0, 2001, 2002, 2003, 2004, 0, 0, 0, 0,
	0, 0, 1984, 296, 0, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 2219, 0,
	1796, 1797, 0, 0, 0, 2017, 0, 0, 0, 2027,
	0, 0, 0, 0, 0, 0, 2006, 2008, 0, 0,
	0, 1544, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2023, 1547, 2024, 0,
	0, 0, 0, 0, 0, 1993, 1994, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 0, 0,
	0, 0, 1382, 0, 2015, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1382, 0, 1999,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1918,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1544, 0, 2219, 0, 0, 0, 0, 2025, 0,
	0, 0, 0, 0, 0, 1382, 1382, 1666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2014,
	0, 0, 0, 0, 0, 0, 1382, 0, 0, 1382,
	2029, 0, 0, 1382, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1382, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 1547, 1547,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 1547,
	2005, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1666,
	0, 0, 0, 0, 0, 0, 2000, 296, 0, 0,
	0, 1666, 0, 1666, 0, 0, 0, 0, 0, 1666,
	1382, 0, 0, 0, 0, 2148, 296, 2148, 0, 0,
	1666, 1666, 1547, 0, 0, 0, 2018, 296, 0, 0,
	0, 0, 0, 0, 296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 296, 0, 0, 0, 0, 0, 296, 0,
	0, 0, 2031, 0, 0, 0, 0, 1547, 0, 1547,
	0, 1547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1547,
	1547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1547, 0, 0, 0, 296, 0, 0,
	0, 0, 0, 0, 2164, 1547, 0, 0, 1547, 1547,
	1547, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	2174, 0, 1648, 0, 0, 0, 0, 1382, 0, 0,
	2016, 0, 296, 296, 0, 296, 0, 296, 0, 296,
	0, 296, 1990, 1991, 1997, 2019, 1996, 1992, 0, 1989,
	1987, 1988, 1980, 1981, 1982, 1983, 1985, 1986, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4094, 1435, 0,
	0, 0, 0, 0, 0, 1648, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 296, 296, 296,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1382, 0, 1382, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1976, 1977, 0, 2009, 2010, 2011, 2020, 2021,
	2022, 0, 0, 0, 0, 0, 0, 0, 1547, 0,
	0, 0, 0, 0, 0, 2013, 2007, 0, 0, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2026, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2032, 0, 0, 0, 0, 0, 0,
	0, 0, 1978, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1998, 0, 0, 0, 0, 0, 1547,
	0, 0, 1995, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1544, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 0, 1547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 0, 0, 0, 0, 0, 296,
	0, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2496, 0, 0, 0, 0, 1544, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2519,
	0, 1544, 0, 2001, 2002, 2003, 2004, 0, 0, 0,
	0, 0, 0, 1984, 0, 2531, 0, 2531, 0, 296,
	0, 0, 296, 2538, 0, 0, 0, 0, 0, 0,
	0, 0, 1544, 0, 0, 0, 296, 0, 0, 296,
	0, 0, 0, 296, 0, 296, 0, 0, 0, 0,
	0, 0, 296, 296, 0, 0, 2017, 0, 0, 0,
	2027, 0, 296, 0, 0, 0, 0, 2006, 2008, 0,
	0, 0, 2566, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2023, 0, 2024,
	0, 0, 0, 0, 2587, 0, 1993, 1994, 0, 1547,
	0, 0, 0, 0, 0, 0, 0, 0, 2603, 0,
	2605, 0, 2607, 0, 2609, 2015, 2610, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1999, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 2639, 2640, 2641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2025,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1544, 0, 0, 0, 0, 296, 1547,
	2014, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2029, 0, 0, 0, 1547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1666, 0, 1666,
	0, 2005, 0, 1544, 0, 0, 0, 0, 0, 296,
	929, 1666, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 0, 0, 0, 2000, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1547, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2018, 0, 1547,
	0, 1547, 0, 0, 0, 0, 0, 1547, 0, 0,
	0, 0, 0, 1666, 0, 296, 0, 0, 1547, 1547,
	0, 0, 0, 0, 0, 1666, 0, 1666, 0, 0,
	0, 0, 0, 2031, 0, 296, 0, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3048, 0, 0,
	0, 0, 0, 0, 1544, 0, 0, 1544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 296, 296, 296, 0, 0, 0,
	0, 2016, 0, 296, 0, 0, 0, 0, 296, 0,
	0, 0, 0, 1990, 1991, 1997, 2019, 1996, 1992, 0,
	1989, 1987, 1988, 1980, 1981, 1982, 1983, 1985, 1986, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3581, 296,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 1544, 0, 0, 0,
	0, 3105, 0, 0, 1435, 0, 0, 0, 1435, 0,
	1435, 0, 0, 1544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1544, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2519, 0, 0, 0, 0,
	0, 1547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3416, 0, 0, 0, 1547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1547,
	3428, 0, 3431, 0, 1666, 1666, 0, 1666, 296, 0,
	0, 0, 0, 0, 0, 0, 1666, 0, 296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1976, 1977, 0, 2009, 2010, 2011, 2020, 2021, 2022, 0,
	0, 0, 0, 0, 0, 296, 0, 0, 0, 296,
	296, 0, 0, 2013, 2007, 0, 0, 0, 3470, 1648,
	3472, 1648, 1979, 0, 0, 0, 0, 0, 3479, 0,
	0, 0, 0, 2026, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 0, 0, 0,
	0, 2032, 0, 0, 0, 1666, 0, 0, 0, 0,
	1978, 0, 0, 0, 1435, 0, 0, 0, 0, 0,
	0, 1998, 3508, 0, 0, 0, 0, 0, 1666, 0,
	1995, 0, 0, 1666, 1666, 1666, 0, 296, 296, 0,
	0, 296, 0, 0, 0, 0, 0, 0, 296, 0,
	0, 0, 0, 0, 0, 0, 1666, 0, 1666, 0,
	0, 0, 296, 1666, 0, 1544, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1547, 0, 0, 0, 0, 1544, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2001, 2002, 2003, 2004, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 2017, 1547, 0, 1547, 2027, 0,
	0, 1547, 0, 0, 0, 2006, 2008, 0, 296, 1547,
	0, 0, 1547, 0, 0, 0, 0, 296, 0, 0,
	0, 0, 0, 0, 0, 2023, 0, 2024, 0, 0,
	0, 0, 0, 0, 1993, 1994, 0, 0, 0, 0,
	0, 296, 0, 0, 0, 0, 0, 0, 1544, 1544,
	0, 1544, 0, 2015, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1999, 1666,
	1666, 1547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1547, 0, 1547, 0, 0, 0, 0,
	1544, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2014, 0,
	0, 0, 1547, 0, 296, 1547, 296, 0, 0, 2029,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 0, 1544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3710, 0, 0, 0, 0, 0, 2005,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1547, 0, 0, 0, 0, 1666,
	1666, 0, 0, 0, 0, 2000, 0, 0, 0, 0,
	0, 1547, 0, 0, 0, 0, 0, 0, 0, 0,
	1435, 0, 0, 0, 1648, 1648, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2018, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1544, 0, 0, 0, 0, 1666, 0, 0, 0, 0,
	3764, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2031, 0, 0, 0, 0, 0, 0, 0, 0,
	1666, 1666, 1666, 1666, 1666, 1666, 1666, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3820, 3822, 1544, 0, 2519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1547, 0, 0, 2016,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 1991, 1997, 2019, 1996, 1992, 0, 1989, 1987,
	1988, 1980, 1981, 1982, 1983, 1985, 1986, 1544, 0, 1666,
	0, 0, 296, 0, 0, 0, 3580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1976, 1977, 0, 2009, 2010, 2011, 2020, 2021, 2022,
	0, 0, 0, 0, 0, 0, 1544, 0, 0, 0,
	0, 0, 0, 0, 2013, 2007, 0, 0, 0, 0,
	0, 0, 0, 1979, 0, 0, 0, 0, 0, 0,
	0, 0, 3959, 0, 2026, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2032, 0, 0, 0, 0, 0, 0, 0,
	0, 1978, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1998, 0, 0, 0, 0, 0, 0, 0,
	1544, 1995, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 1666, 1666,
	1666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1547, 1547, 0, 1547, 0, 0, 0, 0,
	0, 0, 0, 0, 1547, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1544, 1547, 0, 1666, 0, 0, 0, 4062,
	0, 1648, 2001, 2002, 2003, 2004, 0, 0, 0, 0,
	0, 0, 1984, 0, 296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 0, 4076,
	296, 0, 296, 0, 0, 0, 0, 296, 0, 0,
	0, 0, 0, 1547, 0, 2017, 0, 0, 0, 2027,
	0, 0, 0, 0, 0, 0, 2006, 2008, 0, 0,
	0, 0, 0, 0, 0, 0, 1547, 0, 0, 0,
	0, 1547, 1547, 1547, 0, 0, 2023, 0, 2024, 0,
	0, 0, 0, 0, 0, 1993, 1994, 0, 0, 0,
	0, 0, 0, 0, 1547, 0, 1547, 0, 0, 0,
	296, 1547, 0, 1547, 2015, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1999,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2014,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2029, 0, 0, 0, 1666, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1666, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1547, 1547, 0, 1547,
	2005, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1547, 1547, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1547, 0,
	0, 1666, 0, 0, 0, 0, 0, 0, 296, 0,
	0, 0, 0, 0, 0, 0, 2018, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2031, 0, 0, 0, 0, 0, 0, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1547, 0, 0, 296, 0, 0, 296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2519, 0, 0, 1666, 0,
	2016, 0, 0, 0, 0, 0, 0, 1547, 1547, 0,
	0, 1547, 1990, 1991, 1997, 2019, 1996, 1992, 0, 1989,
	1987, 1988, 1980, 1981, 1982, 1983, 1985, 1986, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3577, 0, 4399,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 4409,
	0, 0, 0, 0, 0, 0, 0, 0, 1547, 296,
	0, 0, 0, 1547, 0, 2519, 0, 2519, 0, 0,
	0, 0, 4430, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1547, 1547,
	1547, 1547, 1547, 1547, 1547, 0, 0, 0, 0, 0,
	0, 1976, 1977, 0, 2009, 2010, 2011, 2020, 2021, 2022,
	0, 0, 1547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2013, 2007, 0, 0, 0, 0,
	0, 0, 0, 1979, 0, 4475, 0, 0, 0, 0,
	0, 0, 1547, 0, 2026, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2032, 0, 0, 0, 0, 0, 0, 1976,
	1977, 1978, 2009, 2010, 2011, 2020, 2021, 2022, 0, 0,
	0, 0, 1998, 0, 0, 1547, 0, 1547, 0, 0,
	0, 1995, 2013, 2007, 0, 0, 0, 0, 0, 0,
	0, 1979, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2026, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2032, 0, 0, 0, 1547, 0, 0, 0, 0, 1978,
	0, 0, 0, 0, 296, 0, 0, 0, 0, 0,
	1998, 0, 0, 0, 0, 0, 0, 0, 0, 1995,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2001, 2002, 2003, 2004, 0, 0, 0, 0,
	0, 0, 1984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1547, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 0,
	0, 0, 0, 0, 0, 2017, 1547, 1547, 1547, 2027,
	0, 0, 0, 0, 0, 0, 2006, 2008, 0, 0,
	2001, 2002, 2003, 2004, 0, 0, 0, 0, 0, 0,
	1984, 0, 0, 0, 0, 0, 2023, 0, 2024, 0,
	0, 0, 0, 296, 0, 1993, 1994, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1547, 0, 0, 1547, 2015, 0, 0, 0, 0, 0,
	0, 0, 0, 2017, 4649, 0, 0, 2027, 0, 1999,
	0, 0, 0, 0, 2006, 2008, 0, 0, 0, 0,
	2519, 0, 0, 0, 0, 0, 0, 296, 296, 0,
	0, 0, 0, 0, 2023, 0, 2024, 0, 0, 0,
	0, 0, 0, 1993, 1994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2025, 0,
	0, 0, 2015, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1999, 0, 2014,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2029, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2519, 0, 0, 2025, 0, 0, 0,
	0, 0, 0, 0, 4752, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2014, 0, 0,
	2005, 0, 296, 0, 0, 0, 0, 0, 2029, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2018, 296, 0, 0,
	0, 0, 1547, 0, 0, 0, 0, 0, 2005, 0,
	0, 0, 1547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2031, 0, 2000, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2018, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1547,
	2031, 0, 0, 0, 0, 0, 0, 0, 0, 4863,
	2016, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 1991, 1997, 2019, 1996, 1992, 0, 1989,
	1987, 1988, 1980, 1981, 1982, 1983, 1985, 1986, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 3576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2016, 0,
	0, 0, 2519, 0, 0, 0, 0, 0, 0, 0,
	1990, 1991, 1997, 2019, 1996, 1992, 0, 1989, 1987, 1988,
	1980, 1981, 1982, 1983, 1985, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1547, 0, 2531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4995, 1648, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5116, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1542, 0, 0, 0, 0, 0, 0, 0,
	5172, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 1548, 312, 313,
	1549, 1550, 1551, 0, 1552, 713, 1553, 1554, 1555, 314,
	1556, 315, 316, 317, 1321, 318, 319, 320, 321, 322,
	323, 324, 714, 715, 0, 325, 716, 326, 717, 1557,
	718, 327, 328, 329, 330, 331, 332, 333, 1558, 1559,
	5236, 334, 719, 720, 721, 1560, 335, 336, 722, 1561,
	1628, 1562, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 1563, 346, 347, 348, 345, 349, 1564, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 1565, 358, 359,
	360, 1322, 361, 362, 363, 1566, 1567, 1569, 1568, 1570,
	1571, 1572, 364, 365, 366, 367, 368, 0, 369, 371,
	723, 724, 1573, 374, 376, 370, 372, 1574, 375, 373,
	377, 1575, 378, 379, 380, 1576, 1577, 381, 382, 383,
	1578, 384, 385, 386, 1579, 387, 388, 389, 1580, 390,
	391, 725, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 726, 727, 404, 1581, 301, 1582,
	0, 0, 0, 0, 405, 406, 407, 728, 0, 0,
	0, 408, 1583, 409, 410, 411, 1584, 412, 413, 1585,
	1323, 414, 415, 416, 729, 730, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 1586, 426, 731, 1587, 732,
	427, 1588, 428, 429, 430, 431, 432, 433, 434, 733,
	734, 735, 527, 1325, 435, 436, 437, 1589, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	1590, 1324, 736, 446, 528, 447, 737, 738, 1591, 739,
	1592, 448, 449, 451, 1326, 740, 1327, 450, 452, 453,
	1328, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 1593, 461, 463, 462, 1594, 465, 741, 464, 1329,
	466, 467, 1330, 1595, 468, 469, 470, 471, 472, 473,
	476, 1596, 1597, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 1331, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 1332, 520, 508, 1598, 303, 1333, 522, 523, 524,
	525, 1599, 742, 526, 743, 529, 530, 1600, 0, 531,
	0, 532, 1601, 1602, 534, 535, 536, 1603, 1604, 537,
	538, 744, 1334, 539, 1335, 745, 540, 541, 533, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 1605,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	748, 560, 749, 561, 562, 1606, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 750, 574,
	575, 577, 576, 578, 1607, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	1608, 598, 599, 597, 600, 601, 1336, 602, 603, 604,
	605, 606, 751, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 1609,
	626, 627, 625, 628, 629, 630, 1610, 631, 752, 632,
	613, 614, 633, 634, 1337, 635, 636, 637, 638, 639,
	640, 641, 753, 0, 642, 1611, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 754, 652, 653,
	654, 655, 755, 659, 660, 661, 662, 1612, 663, 664,
	0, 658, 649, 1613, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 1614, 673, 756, 757, 758, 759, 1615,
	685, 1616, 674, 676, 677, 678, 679, 760, 680, 761,
	1617, 681, 682, 683, 684, 675, 686, 687, 1618, 1619,
	688, 689, 691, 693, 694, 690, 692, 695, 1620, 696,
	1621, 0, 697, 698, 699, 762, 763, 764, 1622, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 1623, 1624,
	1625, 1626, 708, 709, 766, 710, 711, 712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1542, 0, 0, 0, 0, 0, 0, 3026, 0,
	0, 0, 0, 0, 0, 0, 0, 3027, 304, 305,
	307, 306, 308, 309, 310, 311, 1548, 312, 313, 1549,
	1550, 1551, 0, 1552, 713, 1553, 1554, 1555, 314, 1556,
	315, 316, 317, 1321, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 1557, 718,
	327, 328, 329, 330, 331, 332, 333, 1558, 1559, 0,
	334, 719, 720, 721, 1560, 335, 336, 722, 1561, 1628,
	1562, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	1563, 346, 347, 348, 345, 349, 1564, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 1565, 358, 359, 360,
	1322, 361, 362, 363, 1566, 1567, 1569, 1568, 1570, 1571,
	1572, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 1573, 374, 376, 370, 372, 1574, 375, 373, 377,
	1575, 378, 379, 380, 1576, 1577, 381, 382, 383, 1578,
	384, 385, 386, 1579, 387, 388, 389, 1580, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 1581, 301, 1582, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 1583, 409, 410, 411, 1584, 412, 413, 1585, 1323,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 1586, 426, 731, 1587, 732, 427,
	1588, 428, 429, 430, 431, 432, 433, 434, 733, 734,
	735, 527, 1325, 435, 436, 437, 1589, 438, 439, 440,
	441, 442, 0, 0, 0, 302, 443, 444, 445, 1590,
	1324, 736, 446, 528, 447, 737, 738, 1591, 739, 1592,
	448, 449, 451, 1326, 740, 1327, 450, 452, 453, 1328,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	1593, 461, 463, 462, 1594, 465, 741, 464, 1329, 466,
	467, 1330, 1595, 468, 469, 470, 471, 472, 473, 476,
	1596, 1597, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 1331, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	1332, 520, 508, 1598, 303, 1333, 522, 523, 524, 525,
	1599, 742, 526, 743, 529, 530, 1600, 0, 531, 0,
	532, 1601, 1602, 534, 535, 536, 1603, 1604, 537, 538,
	744, 1334, 539, 1335, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 1605, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 1606, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 1607, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 1608,
	598, 599, 597, 600, 601, 1336, 602, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 1609, 626,
	627, 625, 628, 629, 630, 1610, 631, 752, 632, 613,
	614, 633, 634, 1337, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 1611, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 1612, 663, 664, 0,
	658, 649, 1613, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 1614, 673, 756, 757, 758, 759, 1615, 685,
	1616, 674, 676, 677, 678, 679, 760, 680, 761, 1617,
	681, 682, 683, 684, 675, 686, 687, 1618, 1619, 688,
	689, 691, 693, 694, 690, 692, 695, 1620, 696, 1621,
	0, 697, 698, 699, 762, 763, 764, 1622, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 1623, 1624, 1625,
	1626, 708, 709, 766, 710, 711, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1542, 0, 0,
	0, 4103, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4105, 304, 305, 307, 306, 308, 309,
	310, 311, 1548, 312, 313, 1549, 1550, 1551, 0, 1552,
	713, 1553, 1554, 1555, 314, 1556, 315, 316, 317, 1321,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 1557, 718, 327, 328, 329, 330,
	331, 332, 333, 1558, 1559, 0, 334, 719, 720, 721,
	1560, 335, 336, 722, 1561, 1628, 1562, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 1563, 346, 347, 348,
	345, 349, 1564, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 1565, 358, 359, 360, 1322, 361, 362, 363,
	1566, 1567, 1569, 1568, 1570, 1571, 1572, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 1573, 374, 376,
	370, 372, 1574, 375, 373, 377, 1575, 378, 379, 380,
	1576, 1577, 381, 382, 383, 1578, 384, 385, 386, 1579,
	387, 388, 389, 1580, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 1581, 301, 1582, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 1583, 409, 410,
	411, 1584, 412, 413, 1585, 1323, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	1586, 426, 731, 1587, 732, 427, 1588, 428, 429, 430,
	431, 432, 433, 434, 733, 734, 735, 527, 1325, 435,
	436, 437, 1589, 438, 439, 440, 441, 442, 0, 0,
	0, 302, 443, 444, 445, 1590, 1324, 736, 446, 528,
	447, 737, 738, 1591, 739, 1592, 448, 449, 451, 1326,
	740, 1327, 450, 452, 453, 1328, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 1593, 461, 463, 462,
	1594, 465, 741, 464, 1329, 466, 467, 1330, 1595, 468,
	469, 470, 471, 472, 473, 476, 1596, 1597, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 1331, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 1332, 520, 508, 1598,
	303, 1333, 522, 523, 524, 525, 1599, 742, 526, 743,
	529, 530, 1600, 0, 531, 0, 532, 1601, 1602, 534,
	535, 536, 1603, 1604, 537, 538, 744, 1334, 539, 1335,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 1605, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	1606, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 1607,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 1608, 598, 599, 597, 600,
	601, 1336, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 1609, 626, 627, 625, 628, 629,
	630, 1610, 631, 752, 632, 613, 614, 633, 634, 1337,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	1611, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 1612, 663, 664, 0, 658, 649, 1613, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 1614, 673,
	756, 757, 758, 759, 1615, 685, 1616, 674, 676, 677,
	678, 679, 760, 680, 761, 1617, 681, 682, 683, 684,
	675, 686, 687, 1618, 1619, 688, 689, 691, 693, 694,
	690, 692, 695, 1620, 696, 1621, 0, 697, 698, 699,
	762, 763, 764, 1622, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 1623, 1624, 1625, 1626, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4553, 304, 305, 307, 306, 308, 309,
	310, 311, 1548, 312, 313, 1549, 1550, 1551, 0, 1552,
	713, 1553, 1554, 1555, 314, 1556, 315, 316, 317, 1321,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 1557, 718, 327, 328, 329, 330,
	331, 332, 333, 1558, 1559, 0, 334, 719, 720, 721,
	1560, 335, 336, 722, 1561, 1628, 1562, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 1563, 346, 347, 348,
	345, 349, 1564, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 1565, 358, 359, 360, 1322, 361, 362, 363,
	1566, 1567, 1569, 1568, 1570, 1571, 1572, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 1573, 374, 376,
	370, 372, 1574, 375, 373, 377, 1575, 378, 379, 380,
	1576, 1577, 381, 382, 383, 1578, 384, 385, 386, 1579,
	387, 388, 389, 1580, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 1581, 301, 1582, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 1583, 409, 410,
	411, 1584, 412, 413, 1585, 1323, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	1586, 426, 731, 1587, 732, 427, 1588, 428, 429, 430,
	431, 432, 433, 434, 733, 734, 735, 527, 1325, 435,
	436, 437, 1589, 438, 439, 440, 441, 442, 0, 0,
	0, 302, 443, 444, 445, 1590, 1324, 736, 446, 528,
	447, 737, 738, 1591, 739, 1592, 448, 449, 451, 1326,
	740, 1327, 450, 452, 453, 1328, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 1593, 461, 463, 462,
	1594, 465, 741, 464, 1329, 466, 467, 1330, 1595, 468,
	469, 470, 471, 472, 473, 476, 1596, 1597, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 1331, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 1332, 520, 508, 1598,
	303, 1333, 522, 523, 524, 525, 1599, 742, 526, 743,
	529, 530, 1600, 0, 531, 0, 532, 1601, 1602, 534,
	535, 536, 1603, 1604, 537, 538, 744, 1334, 539, 1335,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 1605, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	1606, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 1607,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 1608, 598, 599, 597, 600,
	601, 1336, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 1609, 626, 627, 625, 628, 629,
	630, 1610, 631, 752, 632, 613, 614, 633, 634, 1337,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	1611, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 1612, 663, 664, 0, 658, 649, 1613, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 1614, 673,
	756, 757, 758, 759, 1615, 685, 1616, 674, 676, 677,
	678, 679, 760, 680, 761, 1617, 681, 682, 683, 684,
	675, 686, 687, 1618, 1619, 688, 689, 691, 693, 694,
	690, 692, 695, 1620, 696, 1621, 0, 697, 698, 699,
	762, 763, 764, 1622, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 1623, 1624, 1625, 1626, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4551, 304, 305, 307, 306, 308, 309,
	310, 311, 1548, 312, 313, 1549, 1550, 1551, 0, 1552,
	713, 1553, 1554, 1555, 314, 1556, 315, 316, 317, 1321,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 1557, 718, 327, 328, 329, 330,
	331, 332, 333, 1558, 1559, 0, 334, 719, 720, 721,
	1560, 335, 336, 722, 1561, 1628, 1562, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 1563, 346, 347, 348,
	345, 349, 1564, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 1565, 358, 359, 360, 1322, 361, 362, 363,
	1566, 1567, 1569, 1568, 1570, 1571, 1572, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 1573, 374, 376,
	370, 372, 1574, 375, 373, 377, 1575, 378, 379, 380,
	1576, 1577, 381, 382, 383, 1578, 384, 385, 386, 1579,
	387, 388, 389, 1580, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 1581, 301, 1582, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 1583, 409, 410,
	411, 1584, 412, 413, 1585, 1323, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	1586, 426, 731, 1587, 732, 427, 1588, 428, 429, 430,
	431, 432, 433, 434, 733, 734, 735, 527, 1325, 435,
	436, 437, 1589, 438, 439, 440, 441, 442, 0, 0,
	0, 302, 443, 444, 445, 1590, 1324, 736, 446, 528,
	447, 737, 738, 1591, 739, 1592, 448, 449, 451, 1326,
	740, 1327, 450, 452, 453, 1328, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 1593, 461, 463, 462,
	1594, 465, 741, 464, 1329, 466, 467, 1330, 1595, 468,
	469, 470, 471, 472, 473, 476, 1596, 1597, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 1331, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 1332, 520, 508, 1598,
	303, 1333, 522, 523, 524, 525, 1599, 742, 526, 743,
	529, 530, 1600, 0, 531, 0, 532, 1601, 1602, 534,
	535, 536, 1603, 1604, 537, 538, 744, 1334, 539, 1335,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 1605, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	1606, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 1607,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 1608, 598, 599, 597, 600,
	601, 1336, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 1609, 626, 627, 625, 628, 629,
	630, 1610, 631, 752, 632, 613, 614, 633, 634, 1337,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	1611, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 1612, 663, 664, 0, 658, 649, 1613, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 1614, 673,
	756, 757, 758, 759, 1615, 685, 1616, 674, 676, 677,
	678, 679, 760, 680, 761, 1617, 681, 682, 683, 684,
	675, 686, 687, 1618, 1619, 688, 689, 691, 693, 694,
	690, 692, 695, 1620, 696, 1621, 0, 697, 698, 699,
	762, 763, 764, 1622, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 1623, 1624, 1625, 1626, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 1542, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4801, 304, 305,
	307, 306, 308, 309, 310, 311, 1548, 312, 313, 1549,
	1550, 1551, 0, 1552, 713, 1553, 1554, 1555, 314, 1556,
	315, 316, 317, 1321, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 1557, 718,
	327, 328, 329, 330, 331, 332, 333, 1558, 1559, 0,
	334, 719, 720, 721, 1560, 335, 336, 722, 1561, 1628,
	1562, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	1563, 346, 347, 348, 345, 349, 1564, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 1565, 358, 359, 360,
	1322, 361, 362, 363, 1566, 1567, 1569, 1568, 1570, 1571,
	1572, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 1573, 374, 376, 370, 372, 1574, 375, 373, 377,
	1575, 378, 379, 380, 1576, 1577, 381, 382, 383, 1578,
	384, 385, 386, 1579, 387, 388, 389, 1580, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 1581, 301, 1582, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 1583, 409, 410, 411, 1584, 412, 413, 1585, 1323,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 1586, 426, 731, 1587, 732, 427,
	1588, 428, 429, 430, 431, 432, 433, 434, 733, 734,
	735, 527, 1325, 435, 436, 437, 1589, 438, 439, 440,
	441, 442, 0, 0, 0, 302, 443, 444, 445, 1590,
	1324, 736, 446, 528, 447, 737, 738, 1591, 739, 1592,
	448, 449, 451, 1326, 740, 1327, 450, 452, 453, 1328,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	1593, 461, 463, 462, 1594, 465, 741, 464, 1329, 466,
	467, 1330, 1595, 468, 469, 470, 471, 472, 473, 476,
	1596, 1597, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 1331, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	1332, 520, 508, 1598, 303, 1333, 522, 523, 524, 525,
	1599, 742, 526, 743, 529, 530, 1600, 0, 531, 0,
	532, 1601, 1602, 534, 535, 536, 1603, 1604, 537, 538,
	744, 1334, 539, 1335, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 1605, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 1606, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 1607, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 1608,
	598, 599, 597, 600, 601, 1336, 602, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 1609, 626,
	627, 625, 628, 629, 630, 1610, 631, 752, 632, 613,
	614, 633, 634, 1337, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 1611, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 1612, 663, 664, 0,
	658, 649, 1613, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 1614, 673, 756, 757, 758, 759, 1615, 685,
	1616, 674, 676, 677, 678, 679, 760, 680, 761, 1617,
	681, 682, 683, 684, 675, 686, 687, 1618, 1619, 688,
	689, 691, 693, 694, 690, 692, 695, 1620, 696, 1621,
	0, 697, 698, 699, 762, 763, 764, 1622, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 1623, 1624, 1625,
	1626, 708, 709, 766, 710, 711, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 1542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4658, 304, 305, 307, 306, 308, 309, 310, 311,
	1548, 312, 313, 1549, 1550, 1551, 0, 1552, 713, 1553,
	1554, 1555, 314, 1556, 315, 316, 317, 1321, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 1557, 718, 327, 328, 329, 330, 331, 332,
	333, 1558, 1559, 0, 334, 719, 720, 721, 1560, 335,
	336, 722, 1561, 1628, 1562, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 1563, 346, 347, 348, 345, 349,
	1564, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	1565, 358, 359, 360, 1322, 361, 362, 363, 1566, 1567,
	1569, 1568, 1570, 1571, 1572, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 1573, 374, 376, 370, 372,
	1574, 375, 373, 377, 1575, 378, 379, 380, 1576, 1577,
	381, 382, 383, 1578, 384, 385, 386, 1579, 387, 388,
	389, 1580, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	1581, 301, 1582, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 1583, 409, 410, 411, 1584,
	412, 413, 1585, 1323, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 1586, 426,
	731, 1587, 732, 427, 1588, 428, 429, 430, 431, 432,
	433, 434, 733, 734, 735, 527, 1325, 435, 436, 437,
	1589, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 1590, 1324, 736, 446, 528, 447, 737,
	738, 1591, 739, 1592, 448, 449, 451, 1326, 740, 1327,
	450, 452, 453, 1328, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 1593, 461, 463, 462, 1594, 465,
	741, 464, 1329, 466, 467, 1330, 1595, 468, 469, 470,
	471, 472, 473, 476, 1596, 1597, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 1331, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 1332, 520, 508, 1598, 303, 1333,
	522, 523, 524, 525, 1599, 742, 526, 743, 529, 530,
	1600, 0, 531, 0, 532, 1601, 1602, 534, 535, 536,
	1603, 1604, 537, 538, 744, 1334, 539, 1335, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 1605, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 1606, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 1607, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 1608, 598, 599, 597, 600, 601, 1336,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 1609, 626, 627, 625, 628, 629, 630, 1610,
	631, 752, 632, 613, 614, 633, 634, 1337, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 1611, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	1612, 663, 664, 0, 658, 649, 1613, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 1614, 673, 756, 757,
	758, 759, 1615, 685, 1616, 674, 676, 677, 678, 679,
	760, 680, 761, 1617, 681, 682, 683, 684, 675, 686,
	687, 1618, 1619, 688, 689, 691, 693, 694, 690, 692,
	695, 1620, 696, 1621, 0, 697, 698, 699, 762, 763,
	764, 1622, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 1623, 1624, 1625, 1626, 708, 709, 766, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 0, 1542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4477, 304, 305, 307, 306,
	308, 309, 310, 311, 1548, 312, 313, 1549, 1550, 1551,
	0, 1552, 713, 1553, 1554, 1555, 314, 1556, 315, 316,
	317, 1321, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 1557, 718, 327, 328,
	329, 330, 331, 332, 333, 1558, 1559, 0, 334, 719,
	720, 721, 1560, 335, 336, 722, 1561, 1628, 1562, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 1563, 346,
	347, 348, 345, 349, 1564, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 1565, 358, 359, 360, 1322, 361,
	362, 363, 1566, 1567, 1569, 1568, 1570, 1571, 1572, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 1573,
	374, 376, 370, 372, 1574, 375, 373, 377, 1575, 378,
	379, 380, 1576, 1577, 381, 382, 383, 1578, 384, 385,
	386, 1579, 387, 388, 389, 1580, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 1581, 301, 1582, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 1583,
	409, 410, 411, 1584, 412, 413, 1585, 1323, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 1586, 426, 731, 1587, 732, 427, 1588, 428,
	429, 430, 431, 432, 433, 434, 733, 734, 735, 527,
	1325, 435, 436, 437, 1589, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 1590, 1324, 736,
	446, 528, 447, 737, 738, 1591, 739, 1592, 448, 449,
	451, 1326, 740, 1327, 450, 452, 453, 1328, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 1593, 461,
	463, 462, 1594, 465, 741, 464, 1329, 466, 467, 1330,
	1595, 468, 469, 470, 471, 472, 473, 476, 1596, 1597,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	1331, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 1332, 520,
	508, 1598, 303, 1333, 522, 523, 524, 525, 1599, 742,
	526, 743, 529, 530, 1600, 0, 531, 0, 532, 1601,
	1602, 534, 535, 536, 1603, 1604, 537, 538, 744, 1334,
	539, 1335, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 1605, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 1606, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 1607, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 1608, 598, 599,
	597, 600, 601, 1336, 602, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 1609, 626, 627, 625,
	628, 629, 630, 1610, 631, 752, 632, 613, 614, 633,
	634, 1337, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 1611, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 1612, 663, 664, 0, 658, 649,
	1613, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	1614, 673, 756, 757, 758, 759, 1615, 685, 1616, 674,
	676, 677, 678, 679, 760, 680, 761, 1617, 681, 682,
	683, 684, 675, 686, 687, 1618, 1619, 688, 689, 691,
	693, 694, 690, 692, 695, 1620, 696, 1621, 0, 697,
	698, 699, 762, 763, 764, 1622, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 1623, 1624, 1625, 1626, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 1542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4121,
	304, 305, 307, 306, 308, 309, 310, 311, 1548, 312,
	313, 1549, 1550, 1551, 0, 1552, 713, 1553, 1554, 1555,
	314, 1556, 315, 316, 317, 1321, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	1557, 718, 327, 328, 329, 330, 331, 332, 333, 1558,
	1559, 0, 334, 719, 720, 721, 1560, 335, 336, 722,
	1561, 1628, 1562, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 1563, 346, 347, 348, 345, 349, 1564, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 1565, 358,
	359, 360, 1322, 361, 362, 363, 1566, 1567, 1569, 1568,
	1570, 1571, 1572, 364, 365, 366, 367, 368, 0, 369,
	371, 723, 724, 1573, 374, 376, 370, 372, 1574, 375,
	373, 377, 1575, 378, 379, 380, 1576, 1577, 381, 382,
	383, 1578, 384, 385, 386, 1579, 387, 388, 389, 1580,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 726, 727, 404, 1581, 301,
	1582, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 1583, 409, 410, 411, 1584, 412, 413,
	1585, 1323, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 1586, 426, 731, 1587,
	732, 427, 1588, 428, 429, 430, 431, 432, 433, 434,
	733, 734, 735, 527, 1325, 435, 436, 437, 1589, 438,
	439, 440, 441, 442, 0, 0, 0, 302, 443, 444,
	445, 1590, 1324, 736, 446, 528, 447, 737, 738, 1591,
	739, 1592, 448, 449, 451, 1326, 740, 1327, 450, 452,
	453, 1328, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 1593, 461, 463, 462, 1594, 465, 741, 464,
	1329, 466, 467, 1330, 1595, 468, 469, 470, 471, 472,
	473, 476, 1596, 1597, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 1331, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 1332, 520, 508, 1598, 303, 1333, 522, 523,
	524, 525, 1599, 742, 526, 743, 529, 530, 1600, 0,
	531, 0, 532, 1601, 1602, 534, 535, 536, 1603, 1604,
	537, 538, 744, 1334, 539, 1335, 745, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	1605, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 748, 560, 749, 561, 562, 1606, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 1607, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 1608, 598, 599, 597, 600, 601, 1336, 602, 603,
	604, 605, 606, 751, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	1609, 626, 627, 625, 628, 629, 630, 1610, 631, 752,
	632, 613, 614, 633, 634, 1337, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 1611, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 755, 659, 660, 661, 662, 1612, 663,
	664, 0, 658, 649, 1613, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 1614, 673, 756, 757, 758, 759,
	1615, 685, 1616, 674, 676, 677, 678, 679, 760, 680,
	761, 1617, 681, 682, 683, 684, 675, 686, 687, 1618,
	1619, 688, 689, 691, 693, 694, 690, 692, 695, 1620,
	696, 1621, 0, 697, 698, 699, 762, 763, 764, 1622,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 1623,
	1624, 1625, 1626, 708, 709, 766, 710, 711, 712, 0,
	0, 0, 0, 0, 0, 0, 0, 1542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3918, 304, 305, 307, 306, 308, 309,
	310, 311, 1548, 312, 313, 1549, 1550, 1551, 0, 1552,
	713, 1553, 1554, 1555, 314, 1556, 315, 316, 317, 1321,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 1557, 718, 327, 328, 329, 330,
	331, 332, 333, 1558, 1559, 0, 334, 719, 720, 721,
	1560, 335, 336, 722, 1561, 1628, 1562, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 1563, 346, 347, 348,
	345, 349, 1564, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 1565, 358, 359, 360, 1322, 361, 362, 363,
	1566, 1567, 1569, 1568, 1570, 1571, 1572, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 1573, 374, 376,
	370, 372, 1574, 375, 373, 377, 1575, 378, 379, 380,
	1576, 1577, 381, 382, 383, 1578, 384, 385, 386, 1579,
	387, 388, 389, 1580, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 1581, 301, 1582, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 1583, 409, 410,
	411, 1584, 412, 413, 1585, 1323, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	1586, 426, 731, 1587, 732, 427, 1588, 428, 429, 430,
	431, 432, 433, 434, 733, 734, 735, 527, 1325, 435,
	436, 437, 1589, 438, 439, 440, 441, 442, 0, 0,
	0, 302, 443, 444, 445, 1590, 1324, 736, 446, 528,
	447, 737, 738, 1591, 739, 1592, 448, 449, 451, 1326,
	740, 1327, 450, 452, 453, 1328, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 1593, 461, 463, 462,
	1594, 465, 741, 464, 1329, 466, 467, 1330, 1595, 468,
	469, 470, 471, 472, 473, 476, 1596, 1597, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 1331, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 1332, 520, 508, 1598,
	303, 1333, 522, 523, 524, 525, 1599, 742, 526, 743,
	529, 530, 1600, 0, 531, 0, 532, 1601, 1602, 534,
	535, 536, 1603, 1604, 537, 538, 744, 1334, 539, 1335,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 1605, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	1606, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 1607,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 1608, 598, 599, 597, 600,
	601, 1336, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 1609, 626, 627, 625, 628, 629,
	630, 1610, 631, 752, 632, 613, 614, 633, 634, 1337,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	1611, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 1612, 663, 664, 0, 658, 649, 1613, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 1614, 673,
	756, 757, 758, 759, 1615, 685, 1616, 674, 676, 677,
	678, 679, 760, 680, 761, 1617, 681, 682, 683, 684,
	675, 686, 687, 1618, 1619, 688, 689, 691, 693, 694,
	690, 692, 695, 1620, 696, 1621, 0, 697, 698, 699,
	762, 763, 764, 1622, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 1623, 1624, 1625, 1626, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 1542, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2860, 304, 305,
	307, 306, 308, 309, 310, 311, 1548, 312, 313, 1549,
	1550, 1551, 0, 1552, 713, 1553, 1554, 1555, 314, 1556,
	315, 316, 317, 1321, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 1557, 718,
	327, 328, 329, 330, 331, 332, 333, 1558, 1559, 0,
	334, 719, 720, 721, 1560, 335, 336, 722, 1561, 1628,
	1562, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	1563, 346, 347, 348, 345, 349, 1564, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 1565, 358, 359, 360,
	1322, 361, 362, 363, 1566, 1567, 1569, 1568, 1570, 1571,
	1572, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 1573, 374, 376, 370, 372, 1574, 375, 373, 377,
	1575, 378, 379, 380, 1576, 1577, 381, 382, 383, 1578,
	384, 385, 386, 1579, 387, 388, 389, 1580, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 1581, 301, 1582, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 1583, 409, 410, 411, 1584, 412, 413, 1585, 1323,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 1586, 426, 731, 1587, 732, 427,
	1588, 428, 429, 430, 431, 432, 433, 434, 733, 734,
	735, 527, 1325, 435, 436, 437, 1589, 438, 439, 440,
	441, 442, 0, 0, 0, 302, 443, 444, 445, 1590,
	1324, 736, 446, 528, 447, 737, 738, 1591, 739, 1592,
	448, 449, 451, 1326, 740, 1327, 450, 452, 453, 1328,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	1593, 461, 463, 462, 1594, 465, 741, 464, 1329, 466,
	467, 1330, 1595, 468, 469, 470, 471, 472, 473, 476,
	1596, 1597, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 1331, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	1332, 520, 508, 1598, 303, 1333, 522, 523, 524, 525,
	1599, 742, 526, 743, 529, 530, 1600, 0, 531, 0,
	532, 1601, 1602, 534, 535, 536, 1603, 1604, 537, 538,
	744, 1334, 539, 1335, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 1605, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 1606, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 1607, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 1608,
	598, 599, 597, 600, 601, 1336, 602, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 1609, 626,
	627, 625, 628, 629, 630, 1610, 631, 752, 632, 613,
	614, 633, 634, 1337, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 1611, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 1612, 663, 664, 0,
	658, 649, 1613, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 1614, 673, 756, 757, 758, 759, 1615, 685,
	1616, 674, 676, 677, 678, 679, 760, 680, 761, 1617,
	681, 682, 683, 684, 675, 686, 687, 1618, 1619, 688,
	689, 691, 693, 694, 690, 692, 695, 1620, 696, 1621,
	0, 697, 698, 699, 762, 763, 764, 1622, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 1623, 1624, 1625,
	1626, 708, 709, 766, 710, 711, 712, 0, 0, 0,
	0, 0, 0, 1539, 0, 1542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2474, 304, 305, 307, 306, 308, 309, 310, 311,
	1548, 312, 313, 1549, 1550, 1551, 0, 1552, 713, 1553,
	1554, 1555, 314, 1556, 315, 316, 317, 1321, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 1557, 718, 327, 328, 329, 330, 331, 332,
	333, 1558, 1559, 0, 334, 719, 720, 721, 1560, 335,
	336, 722, 1561, 1628, 1562, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 1563, 346, 347, 348, 345, 349,
	1564, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	1565, 358, 359, 360, 1322, 361, 362, 363, 1566, 1567,
	1569, 1568, 1570, 1571, 1572, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 1573, 374, 376, 370, 372,
	1574, 375, 373, 377, 1575, 378, 379, 380, 1576, 1577,
	381, 382, 383, 1578, 384, 385, 386, 1579, 387, 388,
	389, 1580, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	1581, 301, 1582, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 1583, 409, 410, 411, 1584,
	412, 413, 1585, 1323, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 1586, 426,
	731, 1587, 732, 427, 1588, 428, 429, 430, 431, 432,
	433, 434, 733, 734, 735, 527, 1325, 435, 436, 437,
	1589, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 1590, 1324, 736, 446, 528, 447, 737,
	738, 1591, 739, 1592, 448, 449, 451, 1326, 740, 1327,
	450, 452, 453, 1328, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 1593, 461, 463, 462, 1594, 465,
	741, 464, 1329, 466, 467, 1330, 1595, 468, 469, 470,
	471, 472, 473, 476, 1596, 1597, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 1331, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 1332, 520, 508, 1598, 303, 1333,
	522, 523, 524, 525, 1599, 742, 526, 743, 529, 530,
	1600, 0, 531, 0, 532, 1601, 1602, 534, 535, 536,
	1603, 1604, 537, 538, 744, 1334, 539, 1335, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 1605, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 1606, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 1607, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 1608, 598, 599, 597, 600, 601, 1336,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 1609, 626, 627, 625, 628, 629, 630, 1610,
	631, 752, 632, 613, 614, 633, 634, 1337, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 1611, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	1612, 663, 664, 0, 658, 649, 1613, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 1614, 673, 756, 757,
	758, 759, 1615, 685, 1616, 674, 676, 677, 678, 679,
	760, 680, 761, 1617, 681, 682, 683, 684, 675, 686,
	687, 1618, 1619, 688, 689, 691, 693, 694, 690, 692,
	695, 1620, 696, 1621, 0, 697, 698, 699, 762, 763,
	764, 1622, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 1623, 1624, 1625, 1626, 708, 709, 766, 710, 711,
	712, 1542, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 1548, 312, 313, 1549,
	1550, 1551, 0, 1552, 713, 1553, 1554, 1555, 314, 1556,
	315, 316, 317, 1321, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 1557, 718,
	327, 328, 329, 330, 331, 332, 333, 1558, 1559, 0,
	334, 719, 720, 721, 1560, 335, 336, 722, 1561, 1628,
	1562, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	1563, 346, 347, 348, 345, 349, 1564, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 1565, 358, 359, 360,
	1322, 361, 362, 363, 1566, 1567, 1569, 1568, 1570, 1571,
	1572, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 1573, 374, 376, 370, 372, 1574, 375, 373, 377,
	1575, 378, 379, 380, 1576, 1577, 381, 382, 383, 1578,
	384, 385, 386, 1579, 387, 388, 389, 1580, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 1581, 301, 1582, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 1583, 409, 410, 411, 1584, 412, 413, 1585, 1323,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 1586, 426, 731, 1587, 732, 427,
	1588, 428, 429, 430, 431, 432, 433, 434, 733, 734,
	735, 527, 1325, 435, 436, 437, 1589, 438, 439, 440,
	441, 442, 0, 0, 0, 302, 443, 444, 445, 1590,
	1324, 736, 446, 528, 447, 737, 738, 1591, 739, 1592,
	448, 449, 451, 1326, 740, 1327, 450, 452, 453, 1328,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	1593, 461, 463, 462, 1594, 465, 741, 464, 1329, 466,
	467, 1330, 1595, 468, 469, 470, 471, 472, 473, 476,
	1596, 1597, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 1331, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	1332, 520, 508, 1598, 303, 1333, 522, 523, 524, 525,
	1599, 742, 526, 743, 529, 530, 1600, 0, 531, 0,
	532, 1601, 1602, 534, 535, 536, 1603, 1604, 537, 538,
	744, 1334, 539, 1335, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 1605, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 1606, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 1607, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 1608,
	598, 599, 597, 600, 601, 1336, 602, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 1609, 626,
	627, 625, 628, 629, 630, 1610, 631, 752, 632, 613,
	614, 633, 634, 1337, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 1611, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 1612, 663, 664, 0,
	658, 649, 1613, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 1614, 673, 756, 757, 758, 759, 1615, 685,
	1616, 674, 676, 677, 678, 679, 760, 680, 761, 1617,
	681, 682, 683, 684, 675, 686, 687, 1618, 1619, 688,
	689, 691, 693, 694, 690, 692, 695, 1620, 696, 1621,
	0, 697, 698, 699, 762, 763, 764, 1622, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 1623, 1624, 1625,
	1626, 708, 709, 766, 710, 711, 712, 2835, 0, 1257,
	1229, 1230, 1231, 1227, 1228, 1240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 2832, 312, 313, 0, 0, 0,
	0, 0, 1281, 1245, 0, 0, 314, 0, 315, 316,
	317, 1321, 318, 319, 320, 321, 322, 323, 324, 714,
	1294, 0, 325, 1301, 326, 1300, 0, 1311, 327, 328,
	329, 330, 331, 332, 333, 1247, 1280, 1212, 334, 1341,
	1342, 721, 0, 335, 336, 1287, 0, 1268, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 1322, 361,
	362, 363, 1271, 1269, 1270, 1277, 1273, 1272, 1276, 364,
	365, 366, 367, 368, 1304, 369, 371, 1298, 1297, 1217,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 2833, 0, 381, 1289, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 1223, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 1312, 1313, 404, 1236, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 1296, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 1323, 414, 415,
	416, 1309, 1310, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 1319, 0, 1246, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 1282, 1283, 1286, 527,
	1325, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 0, 1324, 736,
	446, 528, 447, 1291, 1292, 0, 1252, 0, 448, 449,
	451, 1326, 1284, 1327, 450, 452, 453, 1328, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 1320, 464, 1329, 466, 467, 1330,
	0, 468, 469, 470, 471, 472, 473, 476, 1275, 1274,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	1331, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 1332, 520,
	508, 1214, 303, 1333, 522, 523, 524, 525, 1237, 1285,
	526, 1299, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 1334,
	539, 1335, 1314, 540, 541, 1224, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 1315, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 1295, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 1336, 602, 603, 604, 605, 606, 1225,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 1278, 631, 752, 632, 613, 614, 633,
	634, 1337, 635, 636, 637, 638, 639, 640, 641, 1293,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 1340, 652, 653, 654, 655, 1316,
	659, 660, 661, 662, 0, 663, 664, 1211, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 1305, 1306, 1307, 1308, 0, 685, 0, 674,
	676, 677, 678, 679, 1317, 680, 1318, 1235, 681, 682,
	683, 684, 675, 686, 687, 0, 1218, 688, 689, 691,
	693, 694, 690, 692, 695, 1279, 696, 0, 0, 697,
	698, 699, 762, 1302, 1339, 2831, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 0, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 1215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1210, 0, 0, 0, 0, 0, 0, 1208, 1209, 2834,
	0, 0, 0, 0, 0, 0, 0, 1241, 2830, 0,
	1199, 1239, 1257, 1229, 1230, 1231, 1227, 1228, 1240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 0, 1281, 1245, 0, 0, 314,
	0, 315, 316, 317, 1321, 318, 319, 320, 321, 322,
	323, 324, 714, 1294, 0, 325, 1301, 326, 1300, 0,
	1311, 327, 328, 329, 330, 331, 332, 333, 1247, 1280,
	1212, 334, 1341, 1342, 721, 0, 335, 336, 1287, 0,
	1268, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 1322, 361, 362, 363, 1271, 1269, 1270, 1277, 1273,
	1272, 1276, 364, 365, 366, 367, 368, 1304, 369, 371,
	1298, 1297, 1217, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 1289, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 1223, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 1312, 1313, 404, 1236, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 1296, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	1323, 414, 415, 416, 1309, 1310, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 1319, 0, 1246,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 1282,
	1283, 1286, 527, 1325, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 1324, 736, 446, 528, 447, 1291, 1292, 0, 1252,
	0, 448, 449, 451, 1326, 1284, 1327, 450, 452, 453,
	1328, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 1320, 464, 1329,
	466, 467, 1330, 0, 468, 469, 470, 471, 472, 473,
	476, 1275, 1274, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 1331, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 1332, 520, 508, 1214, 303, 1333, 522, 523, 524,
	525, 1237, 1285, 526, 1299, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 1334, 539, 1335, 1314, 540, 541, 1224, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	1315, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 1295, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 1336, 602, 603, 604,
	605, 606, 1225, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 257,
	626, 627, 625, 628, 629, 630, 1278, 631, 752, 632,
	613, 614, 633, 634, 1337, 635, 636, 637, 638, 639,
	640, 641, 1293, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 1340, 652, 653,
	654, 655, 1316, 659, 660, 661, 662, 0, 663, 664,
	1211, 658, 649, 259, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 1305, 1306, 1307, 1308, 0,
	685, 0, 674, 676, 677, 678, 679, 1317, 680, 1318,
	1235, 681, 682, 683, 684, 675, 686, 687, 0, 1218,
	688, 689, 691, 693, 694, 690, 692, 695, 1279, 696,
	0, 0, 697, 698, 699, 1788, 1302, 1339, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 0, 0,
	0, 251, 708, 709, 766, 710, 711, 712, 1215, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1210, 0, 0, 0, 0, 0, 0,
	1208, 1209, 1257, 1229, 1230, 1231, 1227, 1228, 1240, 0,
	2057, 2055, 0, 0, 1239, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 0, 1281, 1245, 0, 0, 314,
	0, 315, 316, 317, 1321, 318, 319, 320, 321, 322,
	323, 324, 714, 1294, 0, 325, 1301, 326, 1300, 0,
	1311, 327, 328, 329, 330, 331, 332, 333, 1247, 1280,
	1212, 334, 1341, 1342, 721, 0, 335, 336, 1287, 0,
	1268, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 1322, 361, 362, 363, 1271, 1269, 1270, 1277, 1273,
	1272, 1276, 364, 365, 366, 367, 368, 1304, 369, 371,
	1298, 1297, 1217, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 1289, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 1223, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 1312, 1313, 404, 1236, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 1296, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	1323, 414, 415, 416, 1309, 1310, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 1319, 0, 1246,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 1282,
	1283, 1286, 527, 1325, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 1324, 736, 446, 528, 447, 1291, 1292, 0, 1252,
	0, 448, 449, 451, 1326, 1284, 1327, 450, 452, 453,
	1328, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 1320, 464, 1329,
	466, 467, 1330, 0, 468, 469, 470, 471, 472, 473,
	476, 1275, 1274, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 1331, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 1332, 520, 508, 1214, 303, 1333, 522, 523, 524,
	525, 1237, 1285, 526, 1299, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 1334, 539, 1335, 1314, 540, 541, 1224, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	1315, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 1295, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 1336, 602, 603, 604,
	605, 606, 1225, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 257,
	626, 627, 625, 628, 629, 630, 1278, 631, 752, 632,
	613, 614, 633, 634, 1337, 635, 636, 637, 638, 639,
	640, 641, 1293, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 1340, 652, 653,
	654, 655, 1316, 659, 660, 661, 662, 0, 663, 664,
	1211, 658, 649, 259, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 1305, 1306, 1307, 1308, 0,
	685, 0, 674, 676, 677, 678, 679, 1317, 680, 1318,
	1235, 681, 682, 683, 684, 675, 686, 687, 0, 1218,
	688, 689, 691, 693, 694, 690, 692, 695, 1279, 696,
	0, 0, 697, 698, 699, 1788, 1302, 1339, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 0, 0,
	0, 251, 708, 709, 766, 710, 711, 712, 1215, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1210, 0, 0, 0, 0, 0, 0,
	1208, 1209, 1257, 1229, 1230, 1231, 1227, 1228, 1240, 0,
	2057, 3531, 0, 0, 1239, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 0, 1281, 1245, 0, 0, 314,
	0, 315, 316, 317, 1321, 318, 319, 320, 321, 322,
	323, 324, 714, 1294, 0, 325, 1301, 326, 1300, 0,
	1311, 327, 328, 329, 330, 331, 332, 333, 1247, 1280,
	1212, 334, 1341, 1342, 721, 0, 335, 336, 1287, 0,
	1268, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 1322, 361, 362, 363, 1271, 1269, 1270, 1277, 1273,
	1272, 1276, 364, 365, 366, 367, 368, 1304, 369, 371,
	1298, 1297, 1217, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 1289, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 1223, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 1312, 1313, 404, 1236, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 1296, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	1323, 414, 415, 416, 1309, 1310, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 1319, 0, 1246,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 1282,
	1283, 1286, 527, 1325, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 1324, 736, 446, 528, 447, 1291, 1292, 0, 1252,
	0, 448, 449, 451, 1326, 1284, 1327, 450, 452, 453,
	1328, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 1320, 464, 1329,
	466, 467, 1330, 0, 468, 469, 470, 471, 472, 473,
	476, 1275, 1274, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 1331, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 1332, 520, 508, 1214, 303, 1333, 522, 523, 524,
	525, 1237, 1285, 526, 1299, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 1334, 539, 1335, 1314, 540, 541, 1224, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	1315, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 1295, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 1336, 602, 603, 604,
	605, 606, 1225, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 257,
	626, 627, 625, 628, 629, 630, 1278, 631, 752, 632,
	613, 614, 633, 634, 1337, 635, 636, 637, 638, 639,
	640, 641, 1293, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 1340, 652, 653,
	654, 655, 1316, 659, 660, 661, 662, 0, 663, 664,
	1211, 658, 649, 259, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 1305, 1306, 1307, 1308, 0,
	685, 0, 674, 676, 677, 678, 679, 1317, 680, 1318,
	1235, 681, 682, 683, 684, 675, 686, 687, 0, 1218,
	688, 689, 691, 693, 694, 690, 692, 695, 1279, 696,
	0, 0, 697, 698, 699, 1788, 1302, 1339, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 0, 0,
	0, 251, 708, 709, 766, 710, 711, 712, 1215, 0,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1210, 0, 0, 0, 0, 0, 0,
	1208, 1209, 1257, 1229, 1230, 1231, 1227, 1228, 1240, 0,
	2057, 2055, 0, 0, 1239, 0, 0, 0, 0, 304,
	305, 307, 306, 308, 309, 310, 311, 0, 312, 313,
	0, 0, 0, 0, 0, 1281, 1245, 0, 0, 314,
	0, 315, 316, 317, 1321, 318, 319, 320, 321, 322,
	323, 324, 714, 1294, 0, 325, 1301, 326, 1300, 2965,
	1311, 327, 328, 329, 330, 331, 332, 333, 1247, 1280,
	1212, 334, 1341, 1342, 721, 0, 335, 336, 1287, 0,
	1268, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 1322, 361, 362, 363, 1271, 1269, 1270, 1277, 1273,
	1272, 1276, 364, 365, 366, 367, 368, 1304, 369, 371,
	1298, 1297, 1217, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 1289, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 1223, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 1312, 1313, 404, 1236, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 1296, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 2970,
	1323, 414, 415, 416, 1309, 1310, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 1319, 0, 1246,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 1282,
	1283, 1286, 527, 1325, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 1324, 736, 446, 528, 447, 1291, 1292, 0, 1252,
	0, 448, 449, 451, 1326, 1284, 1327, 450, 452, 453,
	1328, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 2966, 465, 1320, 464, 1329,
	466, 467, 1330, 0, 468, 469, 470, 471, 472, 473,
	476, 1275, 1274, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 1331, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 1332, 520, 508, 1214, 303, 1333, 522, 523, 524,
	525, 1237, 1285, 526, 1299, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 1334, 539, 1335, 1314, 540, 541, 1224, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	1315, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 1295, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 1336, 602, 603, 604,
	605, 606, 1225, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 1278, 631, 752, 632,
	613, 614, 633, 634, 1337, 635, 636, 637, 638, 639,
	640, 641, 1293, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 1340, 652, 653,
	654, 655, 1316, 659, 660, 661, 662, 0, 663, 664,
	1211, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 1305, 1306, 1307, 1308, 0,
	685, 2967, 674, 676, 677, 678, 679, 1317, 680, 1318,
	1235, 681, 682, 683, 684, 675, 686, 687, 0, 1218,
	688, 689, 691, 693, 694, 690, 692, 695, 1279, 696,
	0, 0, 697, 698, 699, 762, 1302, 1339, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 0, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 1215, 0,
	0, 0, 0, 2880, 0, 1257, 1229, 1230, 1231, 1227,
	1228, 1240, 0, 1210, 0, 0, 0, 0, 0, 0,
	1208, 1209, 304, 305, 307, 306, 308, 309, 310, 311,
	1241, 312, 313, 0, 1239, 0, 0, 0, 1281, 1245,
	0, 0, 314, 0, 315, 316, 317, 1321, 318, 319,
	320, 321, 322, 323, 324, 714, 1294, 0, 325, 1301,
	326, 1300, 0, 1311, 327, 328, 329, 330, 331, 332,
	333, 1247, 1280, 1212, 334, 1341, 1342, 721, 0, 335,
	336, 1287, 0, 1268, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 1322, 361, 362, 363, 1271, 1269,
	1270, 1277, 1273, 1272, 1276, 364, 365, 366, 367, 368,
	1304, 369, 371, 1298, 1297, 1217, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 1289, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 1223, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 1312, 1313, 404,
	1236, 301, 0, 0, 0, 0, 0, 405, 406, 407,
	1296, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 1323, 414, 415, 416, 1309, 1310, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	1319, 0, 1246, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 1282, 1283, 1286, 527, 1325, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 0, 1324, 736, 446, 528, 447, 1291,
	1292, 0, 1252, 0, 448, 449, 451, 1326, 1284, 1327,
	450, 452, 453, 1328, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	1320, 464, 1329, 466, 467, 1330, 0, 468, 469, 470,
	471, 472, 473, 476, 1275, 1274, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 1331, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 1332, 520, 508, 1214, 303, 1333,
	522, 523, 524, 525, 1237, 1285, 526, 1299, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 1334, 539, 1335, 1314, 540,
	541, 1224, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 1315, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 1295, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 1336,
	602, 603, 604, 605, 606, 1225, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 1278,
	631, 752, 632, 613, 614, 633, 634, 1337, 635, 636,
	637, 638, 639, 640, 641, 1293, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	1340, 652, 653, 654, 655, 1316, 659, 660, 661, 662,
	0, 663, 664, 1211, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 1305, 1306,
	1307, 1308, 0, 685, 0, 674, 676, 677, 678, 679,
	1317, 680, 1318, 1235, 681, 682, 683, 684, 675, 686,
	687, 0, 1218, 688, 689, 691, 693, 694, 690, 692,
	695, 1279, 696, 0, 0, 697, 698, 699, 762, 1302,
	1339, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 0, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 1215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1210, 0, 0, 0,
	0, 0, 0, 1208, 1209, 0, 0, 0, 0, 0,
	0, 0, 0, 1241, 2878, 0, 2877, 1239, 1257, 1229,
	1230, 1231, 1227, 1228, 1240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 307, 306, 308,
	309, 310, 311, 0, 312, 313, 0, 0, 0, 0,
	0, 1281, 1245, 0, 0, 314, 0, 315, 316, 317,
	1321, 318, 319, 320, 321, 322, 323, 324, 714, 1294,
	0, 325, 1301, 326, 1300, 0, 1311, 327, 328, 329,
	330, 331, 332, 333, 1247, 1280, 1212, 334, 1341, 1342,
	721, 0, 335, 336, 1287, 0, 1268, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 1322, 361, 362,
	363, 1271, 1269, 1270, 1277, 1273, 1272, 1276, 364, 365,
	366, 367, 368, 1304, 369, 371, 1298, 1297, 1217, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 1289, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 1223, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	1312, 1313, 404, 1236, 301, 0, 0, 0, 0, 0,
	405, 406, 407, 1296, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 1323, 414, 415, 416,
	1309, 1310, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 1319, 0, 1246, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 1282, 1283, 1286, 527, 1325,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 302, 443, 444, 445, 0, 1324, 736, 446,
	528, 447, 1291, 1292, 0, 1252, 0, 448, 449, 451,
	1326, 1284, 1327, 450, 452, 453, 1328, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 1320, 464, 1329, 466, 467, 1330, 0,
	468, 469, 470, 471, 472, 473, 476, 1275, 1274, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 1331,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 1332, 520, 508,
	1214, 303, 1333, 522, 523, 524, 525, 1237, 1285, 526,
	1299, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 1334, 539,
	1335, 1314, 540, 541, 1224, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 1315, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 1295, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 1336, 602, 603, 604, 605, 606, 1225, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 1278, 631, 752, 632, 613, 614, 633, 634,
	1337, 635, 636, 637, 638, 639, 640, 641, 1293, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 1340, 652, 653, 654, 655, 1316, 659,
	660, 661, 662, 0, 663, 664, 1211, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 1305, 1306, 1307, 1308, 0, 685, 0, 674, 676,
	677, 678, 679, 1317, 680, 1318, 1235, 681, 682, 683,
	684, 675, 686, 687, 0, 1218, 688, 689, 691, 693,
	694, 690, 692, 695, 1279, 696, 0, 0, 697, 698,
	699, 762, 1302, 1339, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 0, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 1215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1210,
	0, 0, 0, 0, 0, 0, 1208, 1209, 0, 0,
	0, 0, 0, 0, 0, 0, 1241, 2875, 0, 2874,
	1239, 1257, 1229, 1230, 1231, 1227, 1228, 1240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 0, 1281, 1245, 0, 0, 314, 0,
	315, 316, 317, 1321, 318, 319, 320, 321, 322, 323,
	324, 714, 1294, 0, 325, 1301, 326, 1300, 0, 1311,
	327, 328, 329, 330, 331, 332, 333, 1247, 1280, 1212,
	334, 1341, 1342, 721, 0, 335, 336, 1287, 0, 1268,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	1322, 361, 362, 363, 1271, 1269, 1270, 1277, 1273, 1272,
	1276, 364, 365, 366, 367, 368, 1304, 369, 371, 1298,
	1297, 1217, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 1289, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	1223, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 1312, 1313, 404, 1236, 301, 0, 0,
	0, 0, 0, 405, 406, 407, 1296, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 1323,
	414, 415, 416, 1309, 1310, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 1319, 0, 1246, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 1282, 1283,
	1286, 527, 1325, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 302, 443, 444, 445, 0,
	1324, 736, 446, 528, 447, 1291, 1292, 0, 1252, 0,
	448, 449, 451, 1326, 1284, 1327, 450, 452, 453, 1328,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 1320, 464, 1329, 466,
	467, 1330, 0, 468, 469, 470, 471, 472, 473, 476,
	1275, 1274, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 1331, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	1332, 520, 508, 1214, 303, 1333, 522, 523, 524, 525,
	1237, 1285, 526, 1299, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 1334, 539, 1335, 1314, 540, 541, 1224, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 1315,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 1295, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 1336, 602, 603, 604, 605,
	606, 1225, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 1278, 631, 752, 632, 613,
	614, 633, 634, 1337, 635, 636, 637, 638, 639, 640,
	641, 1293, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 1340, 652, 653, 654,
	655, 1316, 659, 660, 661, 662, 0, 663, 664, 1211,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 1305, 1306, 1307, 1308, 0, 685,
	0, 674, 676, 677, 678, 679, 1317, 680, 1318, 1235,
	681, 682, 683, 684, 675, 686, 687, 0, 1218, 688,
	689, 691, 693, 694, 690, 692, 695, 1279, 696, 0,
	0, 697, 698, 699, 762, 1302, 1339, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 0, 0, 0,
	0, 708, 709, 766, 710, 711, 712, 1215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1210, 0, 0, 0, 0, 0, 0, 1208,
	1209, 0, 0, 0, 0, 0, 0, 0, 0, 1241,
	2872, 0, 2871, 1239, 1257, 1229, 1230, 1231, 1227, 1228,
	1240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 0, 1281, 1245, 0,
	0, 314, 0, 315, 316, 317, 1321, 318, 319, 320,
	321, 322, 323, 324, 714, 1294, 0, 325, 1301, 326,
	1300, 0, 1311, 327, 328, 329, 330, 331, 332, 333,
	1247, 1280, 1212, 334, 1341, 1342, 721, 0, 335, 336,
	1287, 0, 1268, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 1322, 361, 362, 363, 1271, 1269, 1270,
	1277, 1273, 1272, 1276, 364, 365, 366, 367, 368, 1304,
	369, 371, 1298, 1297, 1217, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	1289, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 1223, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 1312, 1313, 404, 1236,
	301, 0, 0, 0, 0, 0, 405, 406, 407, 1296,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 1323, 414, 415, 416, 1309, 1310, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 1319,
	0, 1246, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 1282, 1283, 1286, 527, 1325, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 302, 443,
	444, 445, 0, 1324, 736, 446, 528, 447, 1291, 1292,
	0, 1252, 0, 448, 449, 451, 1326, 1284, 1327, 450,
	452, 453, 1328, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 1320,
	464, 1329, 466, 467, 1330, 0, 468, 469, 470, 471,
	472, 473, 476, 1275, 1274, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 1331, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 1332, 520, 508, 1214, 303, 1333, 522,
	523, 524, 525, 1237, 1285, 526, 1299, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 1334, 539, 1335, 1314, 540, 541,
	1224, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 1315, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	1295, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 1336, 602,
	603, 604, 605, 606, 1225, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 1278, 631,
	752, 632, 613, 614, 633, 634, 1337, 635, 636, 637,
	638, 639, 640, 641, 1293, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 1340,
	652, 653, 654, 655, 1316, 659, 660, 661, 662, 0,
	663, 664, 1211, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 1305, 1306, 1307,
	1308, 0, 685, 0, 674, 676, 677, 678, 679, 1317,
	680, 1318, 1235, 681, 682, 683, 684, 675, 686, 687,
	0, 1218, 688, 689, 691, 693, 694, 690, 692, 695,
	1279, 696, 0, 0, 697, 698, 699, 762, 1302, 1339,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	0, 0, 0, 0, 708, 709, 766, 710, 711, 712,
	1215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1210, 0, 0, 0, 0,
	0, 0, 1208, 1209, 0, 0, 0, 0, 0, 0,
	0, 0, 1241, 2869, 0, 1890, 1239, 1257, 1229, 1230,
	1231, 1227, 1228, 1240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	1281, 1245, 0, 0, 314, 0, 315, 316, 317, 1321,
	318, 319, 320, 321, 322, 323, 324, 714, 1294, 0,
	325, 1301, 326, 1300, 0, 1311, 327, 328, 329, 330,
	331, 332, 333, 1247, 1280, 1212, 334, 1341, 1342, 721,
	0, 335, 336, 1287, 0, 1268, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 1322, 361, 362, 363,
	1271, 1269, 1270, 1277, 1273, 1272, 1276, 364, 365, 366,
	367, 368, 1304, 369, 371, 1298, 1297, 1217, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 1289, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 1223, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 1312,
	1313, 404, 1236, 301, 0, 0, 0, 0, 0, 405,
	406, 407, 1296, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 1323, 414, 415, 416, 1309,
	1310, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 1319, 0, 1246, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 1282, 1283, 1286, 527, 1325, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 302, 443, 444, 445, 0, 1324, 736, 446, 528,
	447, 1291, 1292, 0, 1252, 0, 448, 449, 451, 1326,
	1284, 1327, 450, 452, 453, 1328, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 1320, 464, 1329, 466, 467, 1330, 0, 468,
	469, 470, 471, 472, 473, 476, 1275, 1274, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 1331, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 1332, 520, 508, 1214,
	303, 1333, 522, 523, 524, 525, 1237, 1285, 526, 1299,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 1334, 539, 1335,
	1314, 540, 541, 1224, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 1315, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 1295, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 1336, 602, 603, 604, 605, 606, 1225, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 1278, 631, 752, 632, 613, 614, 633, 634, 1337,
	635, 636, 637, 638, 639, 640, 641, 1293, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 1340, 652, 653, 654, 655, 1316, 659, 660,
	661, 662, 0, 663, 664, 1211, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	1305, 1306, 1307, 1308, 0, 685, 0, 674, 676, 677,
	678, 679, 1317, 680, 1318, 1235, 681, 682, 683, 684,
	675, 686, 687, 0, 1218, 688, 689, 691, 693, 694,
	690, 692, 695, 1279, 696, 0, 0, 697, 698, 699,
	762, 1302, 1339, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 1889, 0, 0, 0, 708, 709, 766,
	710, 711, 712, 1215, 0, 0, 0, 0, 1204, 0,
	1257, 1229, 1230, 1231, 1227, 1228, 1240, 0, 1210, 0,
	0, 0, 0, 0, 0, 1208, 1209, 304, 305, 307,
	306, 308, 309, 310, 311, 1241, 312, 313, 0, 1239,
	0, 0, 0, 1281, 1245, 0, 0, 314, 0, 315,
	316, 317, 1321, 318, 319, 320, 321, 322, 323, 324,
	714, 1294, 0, 325, 1301, 326, 1300, 0, 1311, 327,
	328, 329, 330, 331, 332, 333, 1247, 1280, 1212, 334,
	1341, 1342, 721, 0, 335, 336, 1287, 0, 1268, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 1322,
	361, 362, 363, 1271, 1269, 1270, 1277, 1273, 1272, 1276,
	364, 365, 366, 367, 368, 1304, 369, 371, 1298, 1297,
	1217, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 1289, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 1223,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 1312, 1313, 404, 1236, 301, 0, 0, 0,
	0, 0, 405, 406, 407, 1296, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 1323, 414,
	415, 416, 1309, 1310, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 1319, 0, 1246, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 1282, 1283, 1286,
	527, 1325, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 302, 443, 444, 445, 0, 1324,
	736, 446, 528, 447, 1291, 1292, 0, 1252, 0, 448,
	449, 451, 1326, 1284, 1327, 450, 452, 453, 1328, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 1320, 464, 1329, 466, 467,
	1330, 0, 468, 469, 470, 471, 472, 473, 476, 1275,
	1274, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 1331, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 1332,
	520, 508, 1214, 303, 1333, 522, 523, 524, 525, 1237,
	1285, 526, 1299, 529, 530, 0, 0, 531, 0, 532,
	1219, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	1334, 539, 1335, 1314, 540, 541, 1224, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 1315, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 1295, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 1336, 602, 603, 604, 605, 606,
	1225, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 1278, 631, 752, 632, 613, 614,
	633, 634, 1337, 635, 636, 637, 638, 639, 640, 641,
	1293, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 1340, 652, 653, 654, 655,
	1316, 659, 660, 661, 662, 0, 663, 664, 1211, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 1305, 1306, 1307, 1308, 0, 685, 0,
	674, 676, 677, 678, 679, 1317, 680, 1318, 1235, 681,
	682, 683, 684, 675, 686, 687, 0, 1218, 688, 689,
	691, 693, 694, 690, 692, 695, 1279, 696, 0, 0,
	697, 698, 699, 762, 1302, 1339, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 0, 0, 0, 0,
	708, 709, 766, 710, 711, 712, 1215, 0, 0, 0,
	0, 0, 0, 1257, 1229, 1230, 1231, 1227, 1228, 1240,
	0, 1210, 0, 0, 0, 0, 0, 0, 1208, 1209,
	304, 305, 307, 306, 308, 309, 310, 311, 1241, 312,
	313, 0, 1239, 0, 0, 0, 1281, 1245, 0, 0,
	314, 0, 315, 316, 317, 1321, 318, 319, 320, 321,
	322, 323, 324, 714, 1294, 0, 325, 1301, 326, 1300,
	0, 1311, 327, 328, 329, 330, 331, 332, 333, 1247,
	1280, 1212, 334, 1341, 1342, 721, 0, 335, 336, 1287,
	0, 1268, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 5184, 356, 357, 0, 358,
	359, 360, 1322, 361, 362, 363, 1271, 1269, 1270, 1277,
	1273, 1272, 1276, 364, 365, 366, 367, 368, 1304, 369,
	371, 1298, 1297, 1217, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 1289,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 1223, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 1312, 1313, 404, 1236, 301,
	0, 0, 0, 0, 0, 405, 406, 407, 1296, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 1323, 414, 415, 416, 1309, 1310, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 1319, 0,
	1246, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	1282, 1283, 1286, 527, 1325, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 302, 443, 444,
	445, 0, 1324, 736, 446, 528, 447, 1291, 1292, 0,
	1252, 0, 448, 449, 451, 1326, 1284, 1327, 450, 452,
	453, 1328, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 1320, 464,
	1329, 466, 467, 1330, 0, 468, 469, 470, 471, 472,
	473, 476, 1275, 1274, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 1331, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 1332, 520, 508, 1214, 303, 1333, 522, 523,
	524, 525, 1237, 1285, 526, 1299, 529, 530, 0, 0,
	531, 0, 532, 1219, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 1334, 539, 1335, 1314, 540, 541, 1224,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 1315, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 1295,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 1336, 602, 603,
	604, 605, 606, 1225, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 1278, 631, 752,
	632, 613, 614, 633, 634, 1337, 635, 636, 637, 638,
	639, 640, 641, 1293, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 1340, 652,
	653, 654, 655, 1316, 659, 660, 661, 662, 0, 663,
	664, 1211, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 1305, 1306, 1307, 1308,
	0, 685, 0, 674, 676, 677, 678, 679, 1317, 680,
	1318, 1235, 681, 682, 683, 684, 675, 686, 687, 0,
	1218, 688, 689, 691, 693, 694, 690, 692, 695, 1279,
	696, 0, 0, 697, 698, 699, 762, 1302, 1339, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 0,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 1215,
	0, 0, 0, 0, 0, 0, 1257, 1229, 1230, 1231,
	1227, 1228, 1240, 0, 1210, 0, 0, 0, 0, 0,
	0, 1208, 1209, 304, 305, 307, 306, 308, 309, 310,
	311, 1241, 312, 313, 0, 1239, 0, 0, 0, 1281,
	1245, 0, 0, 314, 0, 315, 316, 317, 1321, 318,
	319, 320, 321, 322, 323, 324, 714, 1294, 0, 325,
	1301, 326, 1300, 0, 1311, 327, 328, 329, 330, 331,
	332, 333, 1247, 1280, 1212, 334, 1341, 1342, 721, 0,
	335, 336, 1287, 0, 1268, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 1322, 361, 362, 363, 1271,
	1269, 1270, 1277, 1273, 1272, 1276, 364, 365, 366, 367,
	368, 1304, 369, 371, 1298, 1297, 1217, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 1289, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 1223, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 1312, 1313,
	404, 1236, 301, 0, 0, 0, 0, 0, 405, 406,
	407, 1296, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 1323, 414, 415, 416, 1309, 1310,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 1319, 0, 1246, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 1282, 1283, 1286, 527, 1325, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	2710, 443, 444, 445, 0, 1324, 736, 446, 528, 447,
	1291, 1292, 0, 1252, 0, 448, 449, 451, 1326, 1284,
	1327, 450, 452, 453, 1328, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 1320, 464, 1329, 466, 467, 1330, 0, 468, 469,
	470, 471, 472, 473, 476, 1275, 1274, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 1331, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 1332, 520, 508, 1214, 303,
	1333, 522, 523, 524, 525, 1237, 1285, 526, 1299, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 1334, 539, 1335, 1314,
	540, 541, 1224, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 1315, 560, 749, 561, 562, 2709,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 1295, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	1336, 602, 603, 604, 605, 606, 1225, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	1278, 631, 752, 632, 613, 614, 633, 634, 1337, 635,
	636, 637, 638, 639, 640, 641, 1293, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 1340, 652, 653, 654, 655, 1316, 659, 660, 661,
	662, 0, 663, 664, 1211, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 1305,
	1306, 1307, 1308, 0, 685, 0, 674, 676, 677, 678,
	679, 1317, 680, 1318, 1235, 681, 682, 683, 684, 675,
	686, 687, 0, 1218, 688, 689, 691, 693, 694, 690,
	692, 695, 1279, 696, 0, 0, 697, 698, 699, 762,
	1302, 1339, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 0, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 1215, 0, 0, 0, 0, 0, 0, 1257,
	1229, 1230, 1231, 1227, 1228, 1240, 0, 1210, 0, 0,
	0, 0, 0, 0, 1208, 1209, 304, 305, 307, 306,
	308, 309, 310, 311, 1241, 312, 313, 0, 1239, 0,
	0, 0, 1281, 1245, 0, 0, 314, 0, 315, 316,
	317, 1321, 318, 319, 320, 321, 322, 323, 324, 714,
	1294, 0, 325, 1301, 326, 1300, 0, 1311, 327, 328,
	329, 330, 331, 332, 333, 1247, 1280, 1212, 334, 1341,
	1342, 721, 0, 335, 336, 1287, 0, 1268, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 4897, 356, 357, 0, 358, 359, 360, 1322, 361,
	362, 363, 1271, 1269, 1270, 1277, 1273, 1272, 1276, 364,
	365, 366, 367, 368, 1304, 369, 371, 1298, 1297, 1217,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 1289, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 1223, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 1312, 1313, 404, 1236, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 1296, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 1323, 414, 415,
	416, 1309, 1310, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 1319, 0, 1246, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 1282, 1283, 1286, 527,
	1325, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 0, 1324, 736,
	446, 528, 447, 1291, 1292, 0, 1252, 0, 448, 449,
	451, 1326, 1284, 1327, 450, 452, 453, 1328, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 1320, 464, 1329, 466, 467, 1330,
	0, 468, 469, 470, 471, 472, 473, 476, 1275, 1274,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	1331, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 1332, 520,
	508, 1214, 303, 1333, 522, 523, 524, 525, 1237, 1285,
	526, 1299, 529, 530, 0, 0, 531, 0, 532, 1219,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 1334,
	539, 1335, 1314, 540, 541, 1224, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 1315, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 1295, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 1336, 602, 603, 604, 605, 606, 1225,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 1278, 631, 752, 632, 613, 614, 633,
	634, 1337, 635, 636, 637, 638, 639, 640, 641, 1293,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 1340, 652, 653, 654, 655, 1316,
	659, 660, 661, 662, 0, 663, 664, 1211, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 1305, 1306, 1307, 1308, 0, 685, 0, 674,
	676, 677, 678, 679, 1317, 680, 1318, 1235, 681, 682,
	683, 684, 675, 686, 687, 0, 1218, 688, 689, 691,
	693, 694, 690, 692, 695, 1279, 696, 0, 0, 697,
	698, 699, 762, 1302, 1339, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 0, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 1215, 0, 0, 0, 0,
	0, 0, 1257, 1229, 1230, 1231, 1227, 1228, 1240, 0,
	1210, 0, 0, 0, 0, 0, 0, 1208, 1209, 304,
	305, 307, 306, 308, 309, 310, 311, 1241, 312, 313,
	0, 1239, 0, 0, 0, 1281, 1245, 0, 0, 314,
	0, 315, 316, 317, 1321, 318, 319, 320, 321, 322,
	323, 324, 714, 1294, 0, 325, 1301, 326, 1300, 0,
	1311, 327, 328, 329, 330, 331, 332, 333, 1247, 1280,
	1212, 334, 1341, 1342, 721, 0, 335, 336, 1287, 0,
	1268, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 1322, 361, 362, 363, 1271, 1269, 1270, 1277, 1273,
	1272, 1276, 364, 365, 366, 367, 368, 1304, 369, 371,
	1298, 1297, 1217, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 1289, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 1223, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 1312, 1313, 404, 1236, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 1296, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	1323, 414, 415, 416, 1309, 1310, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 1319, 0, 1246,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 1282,
	1283, 1286, 527, 1325, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 1324, 736, 446, 528, 447, 1291, 1292, 0, 1252,
	0, 448, 449, 451, 1326, 1284, 1327, 450, 452, 453,
	1328, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 1320, 464, 1329,
	466, 467, 1330, 0, 468, 469, 470, 471, 472, 473,
	476, 1275, 1274, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 1331, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 1332, 520, 508, 1214, 303, 1333, 522, 523, 524,
	525, 1237, 1285, 526, 1299, 529, 530, 0, 0, 531,
	0, 532, 1219, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 1334, 539, 1335, 1314, 540, 541, 1224, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	1315, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 1295, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 1336, 602, 603, 604,
	605, 606, 1225, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 1278, 631, 752, 632,
	613, 614, 633, 634, 1337, 635, 636, 637, 638, 639,
	640, 641, 1293, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 1340, 652, 653,
	654, 655, 1316, 659, 660, 661, 662, 0, 663, 664,
	1211, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 1305, 1306, 1307, 1308, 0,
	685, 0, 674, 676, 677, 678, 679, 1317, 680, 1318,
	1235, 681, 682, 683, 684, 675, 686, 687, 0, 1218,
	688, 689, 691, 693, 694, 690, 692, 695, 1279, 696,
	0, 0, 697, 698, 699, 762, 1302, 1339, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 0, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 1215, 0,
	0, 0, 0, 0, 0, 1257, 1229, 1230, 1231, 1227,
	1228, 1240, 0, 1210, 0, 0, 0, 0, 0, 0,
	1208, 1209, 304, 305, 307, 306, 308, 309, 310, 311,
	1241, 312, 313, 0, 1239, 0, 0, 0, 1281, 1245,
	0, 0, 314, 0, 315, 316, 317, 1321, 318, 319,
	320, 321, 322, 323, 324, 714, 1294, 0, 325, 1301,
	326, 1300, 0, 1311, 327, 328, 329, 330, 331, 332,
	333, 1247, 1280, 1212, 334, 1341, 1342, 721, 0, 335,
	336, 1287, 0, 1268, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 1322, 361, 362, 363, 1271, 1269,
	1270, 1277, 1273, 1272, 1276, 364, 365, 366, 367, 368,
	1304, 369, 371, 1298, 1297, 1217, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 1289, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 1223, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 1312, 1313, 404,
	1236, 301, 0, 0, 0, 0, 0, 405, 406, 407,
	1296, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 1323, 414, 415, 416, 1309, 1310, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	1319, 0, 1246, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 1282, 1283, 1286, 527, 1325, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 0, 1324, 736, 446, 528, 447, 1291,
	1292, 0, 1252, 0, 448, 449, 451, 1326, 1284, 1327,
	450, 452, 453, 1328, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	1320, 464, 1329, 466, 467, 1330, 0, 468, 469, 470,
	471, 472, 473, 476, 1275, 1274, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 1331, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 1332, 520, 508, 1214, 4442, 1333,
	522, 523, 524, 525, 1237, 1285, 526, 1299, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 1334, 539, 1335, 1314, 540,
	541, 1224, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 1315, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 1295, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 1336,
	602, 603, 604, 605, 606, 1225, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 1278,
	631, 752, 632, 613, 614, 633, 634, 1337, 635, 636,
	637, 638, 639, 640, 641, 1293, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	1340, 652, 653, 654, 655, 1316, 659, 660, 661, 662,
	0, 663, 664, 1211, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 1305, 1306,
	1307, 1308, 0, 685, 0, 674, 676, 677, 678, 679,
	1317, 680, 1318, 1235, 681, 682, 683, 684, 675, 686,
	687, 0, 1218, 688, 689, 691, 693, 694, 690, 692,
	695, 1279, 696, 0, 0, 697, 698, 699, 762, 1302,
	1339, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 0, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 1215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1210, 0, 0, 0,
	0, 0, 0, 1208, 1209, 2127, 1257, 1229, 1230, 1231,
	1227, 1228, 1240, 1241, 0, 0, 0, 1239, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 0, 0, 0, 1281,
	1245, 0, 0, 314, 0, 315, 316, 317, 1321, 318,
	319, 320, 321, 322, 323, 324, 714, 1294, 0, 325,
	1301, 326, 1300, 0, 1311, 327, 328, 329, 330, 331,
	332, 333, 1247, 1280, 1212, 334, 1341, 1342, 721, 0,
	335, 336, 1287, 0, 1268, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 1322, 361, 362, 363, 1271,
	1269, 1270, 1277, 1273, 1272, 1276, 364, 365, 366, 367,
	368, 1304, 369, 371, 1298, 1297, 1217, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 1289, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 1223, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 1312, 1313,
	404, 1236, 301, 0, 0, 0, 0, 0, 405, 406,
	407, 1296, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 1323, 414, 415, 416, 1309, 1310,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 1319, 0, 1246, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 1282, 1283, 1286, 527, 1325, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	302, 443, 444, 445, 0, 1324, 736, 446, 528, 447,
	1291, 1292, 0, 1252, 0, 448, 449, 451, 1326, 1284,
	1327, 450, 452, 453, 1328, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 1320, 464, 1329, 466, 467, 1330, 0, 468, 469,
	470, 471, 472, 473, 476, 1275, 1274, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 1331, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 1332, 520, 508, 1214, 303,
	1333, 522, 523, 524, 525, 1237, 1285, 526, 1299, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 1334, 539, 1335, 1314,
	540, 541, 1224, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 1315, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 1295, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	1336, 602, 603, 604, 605, 606, 1225, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	1278, 631, 752, 632, 613, 614, 633, 634, 1337, 635,
	636, 637, 638, 639, 640, 641, 1293, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 1340, 652, 653, 654, 655, 1316, 659, 660, 661,
	662, 0, 663, 664, 1211, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 1305,
	1306, 1307, 1308, 0, 685, 0, 674, 676, 677, 678,
	679, 1317, 680, 1318, 1235, 681, 682, 683, 684, 675,
	686, 687, 0, 1218, 688, 689, 691, 693, 694, 690,
	692, 695, 1279, 696, 0, 0, 697, 698, 699, 762,
	1302, 1339, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 0, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 1215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1210, 0, 0,
	0, 0, 0, 0, 1208, 1209, 2127, 1257, 1229, 1230,
	1231, 1227, 1228, 1240, 1241, 0, 0, 0, 1239, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	1281, 1245, 0, 0, 314, 0, 315, 316, 317, 1321,
	318, 319, 320, 321, 322, 323, 324, 714, 1294, 0,
	325, 1301, 326, 1300, 0, 1311, 327, 328, 329, 330,
	331, 332, 333, 1247, 1280, 1212, 334, 1341, 1342, 721,
	0, 335, 336, 1287, 0, 1268, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 1322, 361, 362, 363,
	1271, 1269, 1270, 1277, 1273, 1272, 1276, 364, 365, 366,
	367, 368, 1304, 369, 371, 1298, 1297, 1217, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 1289, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 1223, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 1312,
	1313, 404, 1236, 301, 0, 0, 0, 0, 0, 405,
	406, 407, 1296, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 1323, 414, 415, 416, 1309,
	1310, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 1319, 0, 1246, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 1282, 1283, 1286, 527, 1325, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 302, 443, 444, 445, 0, 1324, 736, 446, 528,
	447, 1291, 1292, 0, 1252, 0, 448, 449, 451, 1326,
	1284, 1327, 450, 452, 453, 1328, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 1320, 464, 1329, 466, 467, 1330, 0, 468,
	469, 470, 471, 472, 473, 476, 1275, 1274, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 1331, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 1332, 520, 508, 1214,
	303, 1333, 522, 523, 524, 525, 1237, 1285, 526, 1299,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 1334, 539, 1335,
	1314, 540, 541, 1224, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 1315, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 1295, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 1336, 602, 603, 604, 605, 606, 1225, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 1278, 631, 752, 632, 613, 614, 633, 634, 1337,
	635, 636, 637, 638, 639, 640, 641, 1293, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 1340, 652, 653, 654, 655, 1316, 659, 660,
	661, 662, 0, 663, 664, 1211, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	1305, 1306, 1307, 1308, 0, 685, 0, 674, 676, 677,
	678, 679, 1317, 680, 1318, 1235, 681, 682, 683, 684,
	675, 686, 687, 0, 1218, 688, 689, 691, 693, 694,
	690, 692, 695, 1279, 696, 0, 0, 697, 698, 699,
	762, 1302, 1339, 4099, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 0, 0, 0, 0, 708, 709, 766,
	710, 711, 712, 1215, 0, 0, 0, 0, 0, 0,
	1257, 1229, 1230, 1231, 1227, 1228, 1240, 0, 1210, 0,
	0, 0, 0, 0, 0, 1208, 1209, 304, 305, 307,
	306, 308, 309, 310, 311, 1241, 312, 313, 0, 1239,
	0, 0, 0, 1281, 1245, 0, 0, 314, 0, 315,
	316, 317, 1321, 318, 319, 320, 321, 322, 323, 324,
	714, 1294, 0, 325, 1301, 326, 1300, 0, 1311, 327,
	328, 329, 330, 331, 332, 333, 1247, 1280, 1212, 334,
	1341, 1342, 721, 0, 335, 336, 1287, 0, 1268, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 1322,
	361, 362, 363, 1271, 1269, 1270, 1277, 1273, 1272, 1276,
	364, 365, 366, 367, 368, 1304, 369, 371, 1298, 1297,
	1217, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 1289, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 1223,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 1312, 1313, 404, 1236, 301, 0, 0, 0,
	0, 0, 405, 406, 407, 1296, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 2970, 1323, 414,
	415, 416, 1309, 1310, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 1319, 0, 1246, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 1282, 1283, 1286,
	527, 1325, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 302, 443, 444, 445, 0, 1324,
	736, 446, 528, 447, 1291, 1292, 0, 1252, 0, 448,
	449, 451, 1326, 1284, 1327, 450, 452, 453, 1328, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 1320, 464, 1329, 466, 467,
	1330, 0, 468, 469, 470, 471, 472, 473, 476, 1275,
	1274, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 1331, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 1332,
	520, 508, 1214, 303, 1333, 522, 523, 524, 525, 1237,
	1285, 526, 1299, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	1334, 539, 1335, 1314, 540, 541, 1224, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 1315, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 1295, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 1336, 602, 603, 604, 605, 606,
	1225, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 1278, 631, 752, 632, 613, 614,
	633, 634, 1337, 635, 636, 637, 638, 639, 640, 641,
	1293, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 1340, 652, 653, 654, 655,
	1316, 659, 660, 661, 662, 0, 663, 664, 1211, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 1305, 1306, 1307, 1308, 0, 685, 0,
	674, 676, 677, 678, 679, 1317, 680, 1318, 1235, 681,
	682, 683, 684, 675, 686, 687, 0, 1218, 688, 689,
	691, 693, 694, 690, 692, 695, 1279, 696, 0, 0,
	697, 698, 699, 762, 1302, 1339, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 0, 0, 0, 0,
	708, 709, 766, 710, 711, 712, 1215, 0, 0, 0,
	0, 0, 0, 1257, 1229, 1230, 1231, 1227, 1228, 1240,
	0, 1210, 0, 0, 0, 0, 0, 0, 1208, 1209,
	304, 305, 307, 306, 308, 309, 310, 311, 1241, 312,
	313, 0, 1239, 0, 0, 0, 1281, 1245, 0, 0,
	314, 0, 315, 316, 317, 1321, 318, 319, 320, 321,
	322, 323, 324, 714, 1294, 0, 325, 1301, 326, 1300,
	0, 1311, 327, 328, 329, 330, 331, 332, 333, 1247,
	1280, 1212, 334, 1341, 1342, 721, 0, 335, 336, 1287,
	0, 1268, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 1322, 361, 362, 363, 1271, 1269, 1270, 1277,
	1273, 1272, 1276, 364, 365, 366, 367, 368, 1304, 369,
	371, 1298, 1297, 1217, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 1289,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 1223, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 1312, 1313, 404, 1236, 301,
	0, 0, 0, 0, 0, 405, 406, 407, 1296, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 1323, 414, 415, 416, 1309, 1310, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 1319, 0,
	1246, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	1282, 1283, 1286, 527, 1325, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 302, 443, 444,
	445, 0, 1324, 736, 446, 528, 447, 1291, 1292, 0,
	1252, 0, 448, 449, 451, 1326, 1284, 1327, 450, 452,
	453, 1328, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 1320, 464,
	1329, 466, 467, 1330, 0, 468, 469, 470, 471, 472,
	473, 476, 1275, 1274, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 1331, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 1332, 520, 508, 1214, 303, 1333, 522, 523,
	524, 525, 1237, 1285, 526, 1299, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 1334, 539, 1335, 1314, 540, 541, 1224,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 1315, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 1295,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 1336, 602, 603,
	604, 605, 606, 1225, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 1278, 631, 752,
	632, 613, 614, 633, 634, 1337, 635, 636, 637, 638,
	639, 640, 641, 1293, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 1340, 652,
	653, 654, 655, 1316, 659, 660, 661, 662, 0, 663,
	664, 1211, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 1305, 1306, 1307, 1308,
	0, 685, 0, 674, 676, 677, 678, 679, 1317, 680,
	1318, 1235, 681, 682, 683, 684, 675, 686, 687, 0,
	1218, 688, 689, 691, 693, 694, 690, 692, 695, 1279,
	696, 0, 0, 697, 698, 699, 762, 1302, 1339, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 0,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 1215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1210, 0, 0, 0, 0, 0,
	0, 1208, 1209, 0, 0, 0, 0, 0, 0, 0,
	0, 1241, 2055, 0, 2975, 1239, 1257, 1229, 1230, 1231,
	1227, 1228, 1240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 307, 306, 308, 309, 310,
	311, 0, 312, 313, 0, 0, 0, 0, 0, 1281,
	1245, 0, 0, 314, 0, 315, 316, 317, 1321, 318,
	319, 320, 321, 322, 323, 324, 714, 1294, 0, 325,
	1301, 326, 1300, 0, 1311, 327, 328, 329, 330, 331,
	332, 333, 1247, 1280, 1212, 334, 1341, 1342, 721, 0,
	335, 336, 1287, 0, 1268, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 1322, 361, 362, 363, 1271,
	1269, 1270, 1277, 1273, 1272, 1276, 364, 365, 366, 367,
	368, 1304, 369, 371, 1298, 1297, 1217, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 1289, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 1223, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 1312, 1313,
	404, 1236, 301, 0, 0, 0, 0, 0, 405, 406,
	407, 1296, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 1323, 414, 415, 416, 1309, 1310,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 1319, 0, 1246, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 1282, 1283, 1286, 527, 1325, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	302, 443, 444, 445, 0, 1324, 736, 446, 528, 447,
	1291, 1292, 0, 1252, 0, 448, 449, 451, 1326, 1284,
	1327, 450, 452, 453, 1328, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 1320, 464, 1329, 466, 467, 1330, 0, 468, 469,
	470, 471, 472, 473, 476, 1275, 1274, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 1331, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 1332, 520, 508, 1214, 303,
	1333, 522, 523, 524, 525, 1237, 1285, 526, 1299, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 1334, 539, 1335, 1314,
	540, 541, 1224, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 1315, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 1295, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	1336, 602, 603, 604, 605, 606, 1225, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	1278, 631, 752, 632, 613, 614, 633, 634, 1337, 635,
	636, 637, 638, 639, 640, 641, 1293, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 1340, 652, 653, 654, 655, 1316, 659, 660, 661,
	662, 0, 663, 664, 1211, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 1305,
	1306, 1307, 1308, 0, 685, 0, 674, 676, 677, 678,
	679, 1317, 680, 1318, 1235, 681, 682, 683, 684, 675,
	686, 687, 0, 1218, 688, 689, 691, 693, 694, 690,
	692, 695, 1279, 696, 0, 0, 697, 698, 699, 762,
	1302, 1339, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 0, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 1215, 0, 0, 0, 0, 2973, 0, 1257,
	1229, 1230, 1231, 1227, 1228, 1240, 0, 1210, 0, 0,
	0, 0, 0, 0, 1208, 1209, 304, 305, 307, 306,
	308, 309, 310, 311, 1241, 312, 313, 0, 1239, 0,
	0, 0, 1281, 1245, 0, 0, 314, 0, 315, 316,
	317, 1321, 318, 319, 320, 321, 322, 323, 324, 714,
	1294, 0, 325, 1301, 326, 1300, 0, 1311, 327, 328,
	329, 330, 331, 332, 333, 1247, 1280, 1212, 334, 1341,
	1342, 721, 0, 335, 336, 1287, 0, 1268, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 1322, 361,
	362, 363, 1271, 1269, 1270, 1277, 1273, 1272, 1276, 364,
	365, 366, 367, 368, 1304, 369, 371, 1298, 1297, 1217,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 1289, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 1223, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 1312, 1313, 404, 1236, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 1296, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 1323, 414, 415,
	416, 1309, 1310, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 1319, 0, 1246, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 1282, 1283, 1286, 527,
	1325, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 0, 1324, 736,
	446, 528, 447, 1291, 1292, 0, 1252, 0, 448, 449,
	451, 1326, 1284, 1327, 450, 452, 453, 1328, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 1320, 464, 1329, 466, 467, 1330,
	0, 468, 469, 470, 471, 472, 473, 476, 1275, 1274,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	1331, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 1332, 520,
	508, 1214, 303, 1333, 522, 523, 524, 525, 1237, 1285,
	526, 1299, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 1334,
	539, 1335, 1314, 540, 541, 1224, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 1315, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 1295, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 1336, 602, 603, 604, 605, 606, 1225,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 1278, 631, 752, 632, 613, 614, 633,
	634, 1337, 635, 636, 637, 638, 639, 640, 641, 1293,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 1340, 652, 653, 654, 655, 1316,
	659, 660, 661, 662, 0, 663, 664, 1211, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 1305, 1306, 1307, 1308, 0, 685, 0, 674,
	676, 677, 678, 679, 1317, 680, 1318, 1235, 681, 682,
	683, 684, 675, 686, 687, 0, 1218, 688, 689, 691,
	693, 694, 690, 692, 695, 1279, 696, 0, 0, 697,
	698, 699, 762, 1302, 1339, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 0, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 1215, 0, 0, 0, 0,
	2961, 0, 1257, 1229, 1230, 1231, 1227, 1228, 1240, 0,
	1210, 0, 0, 0, 0, 0, 0, 1208, 1209, 304,
	305, 307, 306, 308, 309, 310, 311, 1241, 312, 313,
	0, 1239, 0, 0, 0, 1281, 1245, 0, 0, 314,
	0, 315, 316, 317, 1321, 318, 319, 320, 321, 322,
	323, 324, 714, 1294, 0, 325, 1301, 326, 1300, 0,
	1311, 327, 328, 329, 330, 331, 332, 333, 1247, 1280,
	1212, 334, 1341, 1342, 721, 0, 335, 336, 1287, 0,
	1268, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 1322, 361, 362, 363, 1271, 1269, 1270, 1277, 1273,
	1272, 1276, 364, 365, 366, 367, 368, 1304, 369, 371,
	1298, 1297, 1217, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 1289, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 1223, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 1312, 1313, 404, 1236, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 1296, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	1323, 414, 415, 416, 1309, 1310, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 1319, 0, 1246,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 1282,
	1283, 1286, 527, 1325, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 1324, 736, 446, 528, 447, 1291, 1292, 0, 1252,
	0, 448, 449, 451, 1326, 1284, 1327, 450, 452, 453,
	1328, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 1320, 464, 1329,
	466, 467, 1330, 0, 468, 469, 470, 471, 472, 473,
	476, 1275, 1274, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 1331, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 1332, 520, 508, 1214, 303, 1333, 522, 523, 524,
	525, 1237, 1285, 526, 1299, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 1334, 539, 1335, 1314, 540, 541, 1224, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	1315, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 1295, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 1336, 602, 603, 604,
	605, 606, 1225, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 1278, 631, 752, 632,
	613, 614, 633, 634, 1337, 635, 636, 637, 638, 639,
	640, 641, 1293, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 1340, 652, 653,
	654, 655, 1316, 659, 660, 661, 662, 0, 663, 664,
	1211, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 1305, 1306, 1307, 1308, 0,
	685, 0, 674, 676, 677, 678, 679, 1317, 680, 1318,
	1235, 681, 682, 683, 684, 675, 686, 687, 0, 1218,
	688, 689, 691, 693, 694, 690, 692, 695, 1279, 696,
	0, 0, 697, 698, 699, 762, 1302, 1339, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 0, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 1215, 0,
	0, 0, 0, 2950, 0, 1257, 1229, 1230, 1231, 1227,
	1228, 1240, 0, 1210, 0, 0, 0, 0, 0, 0,
	1208, 1209, 304, 305, 307, 306, 308, 309, 310, 311,
	1241, 312, 313, 0, 1239, 0, 0, 0, 1281, 1245,
	0, 0, 314, 0, 315, 316, 317, 1321, 318, 319,
	320, 321, 322, 323, 324, 714, 1294, 0, 325, 1301,
	326, 1300, 0, 1311, 327, 328, 329, 330, 331, 332,
	333, 1247, 1280, 1212, 334, 1341, 1342, 721, 0, 335,
	336, 1287, 0, 1268, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 1322, 361, 362, 363, 1271, 1269,
	1270, 1277, 1273, 1272, 1276, 364, 365, 366, 367, 368,
	1304, 369, 371, 1298, 1297, 1217, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 1289, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 1223, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 1312, 1313, 404,
	1236, 301, 0, 0, 0, 0, 0, 405, 406, 407,
	1296, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 1323, 414, 415, 416, 1309, 1310, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	1319, 0, 1246, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 1282, 1283, 1286, 527, 1325, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 0, 1324, 736, 446, 528, 447, 1291,
	1292, 0, 1252, 0, 448, 449, 451, 1326, 1284, 1327,
	450, 452, 453, 1328, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	1320, 464, 1329, 466, 467, 1330, 0, 468, 469, 470,
	471, 472, 473, 476, 1275, 1274, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 1331, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 1332, 520, 508, 1214, 303, 1333,
	522, 523, 524, 525, 1237, 1285, 526, 1299, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 1334, 539, 1335, 1314, 540,
	541, 1224, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 1315, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 1295, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 1336,
	602, 603, 604, 605, 606, 1225, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 1278,
	631, 752, 632, 613, 614, 633, 634, 1337, 635, 636,
	637, 638, 639, 640, 641, 1293, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	1340, 652, 653, 654, 655, 1316, 659, 660, 661, 662,
	0, 663, 664, 1211, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 1305, 1306,
	1307, 1308, 0, 685, 0, 674, 676, 677, 678, 679,
	1317, 680, 1318, 1235, 681, 682, 683, 684, 675, 686,
	687, 0, 1218, 688, 689, 691, 693, 694, 690, 692,
	695, 1279, 696, 0, 0, 697, 698, 699, 762, 1302,
	1339, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 0, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 1215, 0, 0, 0, 0, 2948, 0, 2939, 2946,
	1230, 1231, 1227, 1228, 1240, 0, 1210, 0, 0, 0,
	0, 0, 0, 1208, 1209, 304, 305, 307, 306, 308,
	309, 310, 311, 1241, 312, 313, 0, 1239, 0, 0,
	0, 1281, 1245, 0, 0, 314, 0, 315, 316, 317,
	1321, 318, 319, 320, 321, 322, 323, 324, 714, 1294,
	0, 325, 1301, 326, 1300, 0, 1311, 327, 328, 329,
	330, 331, 332, 333, 1247, 1280, 1212, 334, 1341, 1342,
	721, 0, 335, 336, 1287, 0, 1268, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 1322, 361, 362,
	363, 1271, 1269, 1270, 1277, 1273, 1272, 1276, 364, 365,
	366, 367, 368, 1304, 2942, 371, 1298, 1297, 1217, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 1289, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 1223, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	1312, 1313, 404, 1236, 301, 0, 0, 0, 0, 0,
	405, 406, 407, 1296, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 1323, 414, 415, 416,
	1309, 1310, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 1319, 0, 1246, 427, 0, 428, 429,
	430, 431, 432, 2943, 434, 1282, 1283, 1286, 527, 1325,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 302, 443, 444, 445, 0, 1324, 736, 446,
	528, 447, 1291, 1292, 0, 1252, 0, 448, 449, 451,
	1326, 1284, 1327, 450, 452, 453, 1328, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 1320, 464, 1329, 466, 467, 1330, 0,
	468, 469, 470, 471, 472, 473, 476, 1275, 1274, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	2944, 486, 2941, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 1331,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 1332, 520, 508,
	1214, 303, 1333, 522, 523, 524, 525, 1237, 1285, 526,
	1299, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 1334, 539,
	1335, 1314, 540, 541, 1224, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 1315, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 1295, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 1336, 602, 603, 604, 605, 606, 1225, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 2945, 624, 0, 626, 627, 625, 628,
	629, 630, 1278, 631, 752, 632, 613, 614, 633, 634,
	1337, 635, 636, 637, 638, 639, 640, 641, 1293, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 1340, 652, 653, 654, 655, 1316, 659,
	660, 661, 662, 0, 663, 664, 1211, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 1305, 1306, 1307, 1308, 0, 685, 0, 674, 676,
	677, 678, 679, 1317, 680, 1318, 1235, 681, 682, 683,
	684, 675, 686, 687, 0, 1218, 688, 689, 691, 693,
	694, 690, 692, 695, 1279, 696, 0, 0, 697, 698,
	699, 762, 1302, 1339, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 0, 0, 0, 0, 708, 709,
	766, 710, 2940, 712, 1215, 0, 0, 0, 0, 2936,
	0, 2939, 2946, 1230, 1231, 1227, 1228, 1240, 0, 1210,
	0, 0, 0, 0, 0, 0, 1208, 1209, 304, 305,
	307, 306, 308, 309, 310, 311, 1241, 312, 313, 0,
	1239, 0, 0, 0, 1281, 1245, 0, 0, 314, 0,
	315, 316, 317, 1321, 318, 319, 320, 321, 322, 323,
	324, 714, 1294, 0, 325, 1301, 326, 1300, 0, 1311,
	327, 328, 329, 330, 331, 332, 333, 1247, 1280, 1212,
	334, 1341, 1342, 721, 0, 335, 336, 1287, 0, 1268,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	1322, 361, 362, 363, 1271, 1269, 1270, 1277, 1273, 1272,
	1276, 364, 365, 366, 367, 368, 1304, 2942, 371, 1298,
	1297, 1217, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 1289, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	1223, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 1312, 1313, 404, 1236, 301, 0, 0,
	0, 0, 0, 405, 406, 407, 1296, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 1323,
	414, 415, 416, 1309, 1310, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 1319, 0, 1246, 427,
	0, 428, 429, 430, 431, 432, 2943, 434, 1282, 1283,
	1286, 527, 1325, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 302, 443, 444, 445, 0,
	1324, 736, 446, 528, 447, 1291, 1292, 0, 1252, 0,
	448, 449, 451, 1326, 1284, 1327, 450, 452, 453, 1328,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 1320, 464, 1329, 466,
	467, 1330, 0, 468, 469, 470, 471, 472, 473, 476,
	1275, 1274, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 2944, 486, 2941, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 1331, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	1332, 520, 508, 1214, 303, 1333, 522, 523, 524, 525,
	1237, 1285, 526, 1299, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 1334, 539, 1335, 1314, 540, 541, 1224, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 1315,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 1295, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 1336, 602, 603, 604, 605,
	606, 1225, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 2945, 624, 0, 626,
	627, 625, 628, 629, 630, 1278, 631, 752, 632, 613,
	614, 633, 634, 1337, 635, 636, 637, 638, 639, 640,
	641, 1293, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 1340, 652, 653, 654,
	655, 1316, 659, 660, 661, 662, 0, 663, 664, 1211,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 1305, 1306, 1307, 1308, 0, 685,
	0, 674, 676, 677, 678, 679, 1317, 680, 1318, 1235,
	681, 682, 683, 684, 675, 686, 687, 0, 1218, 688,
	689, 691, 693, 694, 690, 692, 695, 1279, 696, 0,
	0, 697, 698, 699, 762, 1302, 1339, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 0, 0, 0,
	0, 708, 709, 766, 710, 2940, 712, 1215, 0, 0,
	0, 0, 0, 0, 1257, 1229, 1230, 1231, 1227, 1228,
	1240, 0, 1210, 0, 0, 0, 0, 0, 0, 1208,
	1209, 304, 305, 307, 306, 308, 309, 310, 311, 1241,
	312, 313, 0, 1239, 0, 0, 0, 1281, 1245, 0,
	0, 314, 0, 315, 316, 317, 1321, 318, 319, 320,
	321, 322, 323, 324, 714, 1294, 0, 325, 1301, 326,
	1300, 0, 1311, 327, 328, 329, 330, 331, 332, 333,
	1247, 1280, 1212, 334, 1341, 1342, 721, 0, 335, 336,
	1287, 0, 1268, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 1322, 361, 362, 363, 1271, 1269, 1270,
	1277, 1273, 1272, 1276, 364, 365, 366, 367, 368, 1304,
	369, 371, 1298, 1297, 1217, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	1289, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 1223, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 1312, 1313, 404, 1236,
	301, 0, 0, 0, 0, 0, 405, 406, 407, 1296,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 1323, 414, 415, 416, 1309, 1310, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 1319,
	0, 1246, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 1282, 1283, 1286, 527, 1325, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 302, 443,
	444, 445, 0, 1324, 736, 446, 528, 447, 1291, 1292,
	0, 1252, 0, 448, 449, 451, 1326, 1284, 1327, 450,
	452, 453, 1328, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 1320,
	464, 1329, 466, 467, 1330, 0, 468, 469, 470, 471,
	472, 473, 476, 1275, 1274, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 1331, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 1332, 520, 508, 1214, 303, 1333, 522,
	523, 524, 525, 1237, 1285, 526, 1299, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 1334, 539, 1335, 1314, 540, 541,
	1224, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 1315, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	1295, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 1336, 602,
	603, 604, 605, 606, 1225, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 1278, 631,
	752, 632, 613, 614, 633, 634, 1337, 635, 636, 637,
	638, 639, 640, 641, 1293, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 1340,
	652, 653, 654, 655, 1316, 659, 660, 661, 662, 0,
	663, 664, 1211, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 1305, 1306, 1307,
	1308, 0, 685, 0, 674, 676, 677, 678, 679, 1317,
	680, 1318, 1235, 681, 682, 683, 684, 675, 686, 687,
	0, 1218, 688, 689, 691, 693, 694, 690, 692, 695,
	1279, 696, 0, 0, 697, 698, 699, 762, 1302, 1339,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	0, 0, 0, 0, 708, 709, 766, 710, 711, 712,
	1215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1210, 0, 0, 0, 0,
	0, 0, 1208, 1209, 0, 0, 0, 0, 0, 0,
	2063, 0, 1241, 0, 0, 0, 1239, 1257, 1229, 1230,
	1231, 1227, 1228, 1240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 2689, 312, 313, 0, 0, 0, 0, 0,
	1281, 1245, 0, 0, 314, 0, 315, 316, 317, 1321,
	318, 319, 320, 321, 322, 323, 324, 714, 1294, 0,
	325, 1301, 326, 1300, 0, 1311, 327, 328, 329, 330,
	331, 332, 333, 1247, 1280, 1212, 334, 1341, 1342, 721,
	0, 335, 336, 1287, 0, 1268, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 1322, 361, 362, 363,
	1271, 1269, 1270, 1277, 1273, 1272, 1276, 364, 365, 366,
	367, 368, 1304, 369, 371, 1298, 1297, 1217, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 1289, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 1223, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 1312,
	1313, 404, 1236, 301, 0, 0, 0, 0, 0, 405,
	406, 407, 1296, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 1323, 414, 415, 416, 1309,
	1310, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 1319, 0, 1246, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 1282, 1283, 1286, 527, 1325, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 302, 443, 444, 445, 0, 1324, 736, 446, 528,
	447, 1291, 1292, 0, 1252, 0, 448, 449, 451, 1326,
	1284, 1327, 450, 452, 453, 1328, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 1320, 464, 1329, 466, 467, 1330, 0, 468,
	469, 470, 471, 472, 473, 476, 1275, 1274, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 1331, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 1332, 520, 508, 1214,
	303, 1333, 522, 523, 524, 525, 1237, 1285, 526, 1299,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 1334, 539, 1335,
	1314, 540, 541, 1224, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 1315, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 1295, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 1336, 602, 603, 604, 605, 606, 1225, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 1278, 631, 752, 632, 613, 614, 633, 634, 1337,
	635, 636, 637, 638, 639, 640, 641, 1293, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 1340, 652, 653, 654, 655, 1316, 659, 660,
	661, 662, 0, 663, 664, 1211, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	1305, 1306, 1307, 1308, 0, 685, 0, 674, 676, 677,
	678, 679, 1317, 680, 1318, 1235, 681, 682, 683, 684,
	675, 686, 687, 0, 1218, 688, 689, 691, 693, 694,
	690, 692, 695, 1279, 696, 0, 0, 697, 698, 699,
	762, 1302, 1339, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 0, 0, 0, 0, 708, 709, 766,
	710, 711, 712, 1215, 0, 0, 0, 0, 2650, 0,
	1257, 1229, 1230, 1231, 1227, 1228, 1240, 0, 1210, 0,
	0, 0, 0, 0, 0, 1208, 1209, 304, 305, 307,
	306, 308, 309, 310, 311, 1241, 312, 313, 0, 1239,
	0, 0, 0, 1281, 1245, 0, 0, 314, 0, 315,
	316, 317, 1321, 318, 319, 320, 321, 322, 323, 324,
	714, 1294, 0, 325, 1301, 326, 1300, 0, 1311, 327,
	328, 329, 330, 331, 332, 333, 1247, 1280, 1212, 334,
	1341, 1342, 721, 0, 335, 336, 1287, 0, 1268, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 1322,
	361, 362, 363, 1271, 1269, 1270, 1277, 1273, 1272, 1276,
	364, 365, 366, 367, 368, 1304, 369, 371, 1298, 1297,
	1217, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 1289, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 1223,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 1312, 1313, 404, 1236, 301, 0, 0, 0,
	0, 0, 405, 406, 407, 1296, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 1323, 414,
	415, 416, 1309, 1310, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 1319, 0, 1246, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 1282, 1283, 1286,
	527, 1325, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 302, 443, 444, 445, 0, 1324,
	736, 446, 528, 447, 1291, 1292, 0, 1252, 0, 448,
	449, 451, 1326, 1284, 1327, 450, 452, 453, 1328, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 1320, 464, 1329, 466, 467,
	1330, 0, 468, 469, 470, 471, 472, 473, 476, 1275,
	1274, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 1331, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 1332,
	520, 508, 1214, 303, 1333, 522, 523, 524, 525, 1237,
	1285, 526, 1299, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	1334, 539, 1335, 1314, 540, 541, 1224, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 1315, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 1295, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 1336, 602, 603, 604, 605, 606,
	1225, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 1278, 631, 752, 632, 613, 614,
	633, 634, 1337, 635, 636, 637, 638, 639, 640, 641,
	1293, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 1340, 652, 653, 654, 655,
	1316, 659, 660, 661, 662, 0, 663, 664, 1211, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 1305, 1306, 1307, 1308, 0, 685, 0,
	674, 676, 677, 678, 679, 1317, 680, 1318, 1235, 681,
	682, 683, 684, 675, 686, 687, 0, 1218, 688, 689,
	691, 693, 694, 690, 692, 695, 1279, 696, 0, 0,
	697, 698, 699, 762, 1302, 1339, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 0, 0, 0, 0,
	708, 709, 766, 710, 711, 712, 1215, 0, 0, 0,
	0, 2620, 0, 1257, 1229, 1230, 1231, 1227, 1228, 1240,
	0, 1210, 0, 0, 0, 0, 0, 0, 1208, 1209,
	304, 305, 307, 306, 308, 309, 310, 311, 1241, 312,
	313, 0, 1239, 0, 0, 0, 1281, 1245, 0, 0,
	314, 0, 315, 316, 317, 1321, 318, 319, 320, 321,
	322, 323, 324, 714, 1294, 0, 325, 1301, 326, 1300,
	0, 1311, 327, 328, 329, 330, 331, 332, 333, 1247,
	1280, 1212, 334, 1341, 1342, 721, 0, 335, 336, 1287,
	0, 1268, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 1322, 361, 362, 363, 1271, 1269, 1270, 1277,
	1273, 1272, 1276, 364, 365, 366, 367, 368, 1304, 369,
	371, 1298, 1297, 1217, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 1289,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 1223, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 1312, 1313, 404, 1236, 301,
	0, 0, 0, 0, 0, 405, 406, 407, 1296, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 1323, 414, 415, 416, 1309, 1310, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 1319, 0,
	1246, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	1282, 1283, 1286, 527, 1325, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 302, 443, 444,
	445, 0, 1324, 736, 446, 528, 447, 1291, 1292, 0,
	1252, 0, 448, 449, 451, 1326, 1284, 1327, 450, 452,
	453, 1328, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 1320, 464,
	1329, 466, 467, 1330, 0, 468, 469, 470, 471, 472,
	473, 476, 1275, 1274, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 1331, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 1332, 520, 508, 1214, 303, 1333, 522, 523,
	524, 525, 1237, 1285, 526, 1299, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 1334, 539, 1335, 1314, 540, 541, 1224,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 1315, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 1295,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 1336, 602, 603,
	604, 605, 606, 1225, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 1278, 631, 752,
	632, 613, 614, 633, 634, 1337, 635, 636, 637, 638,
	639, 640, 641, 1293, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 1340, 652,
	653, 654, 655, 1316, 659, 660, 661, 662, 0, 663,
	664, 1211, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 1305, 1306, 1307, 1308,
	0, 685, 0, 674, 676, 677, 678, 679, 1317, 680,
	1318, 1235, 681, 682, 683, 684, 675, 686, 687, 0,
	1218, 688, 689, 691, 693, 694, 690, 692, 695, 1279,
	696, 0, 0, 697, 698, 699, 762, 1302, 1339, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 0,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 1215,
	0, 0, 0, 0, 1895, 0, 1257, 1229, 1230, 1231,
	1227, 1228, 1240, 0, 1210, 0, 0, 0, 0, 0,
	0, 1208, 1209, 304, 305, 307, 306, 308, 309, 310,
	311, 1241, 312, 313, 0, 1239, 0, 0, 0, 1281,
	1245, 0, 0, 314, 0, 315, 316, 317, 1321, 318,
	319, 320, 321, 322, 323, 324, 714, 1294, 0, 325,
	1301, 326, 1300, 0, 1311, 327, 328, 329, 330, 331,
	332, 333, 1247, 1280, 1212, 334, 1341, 1342, 721, 0,
	335, 336, 1287, 0, 1268, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 1322, 361, 362, 363, 1271,
	1269, 1270, 1277, 1273, 1272, 1276, 364, 365, 366, 367,
	368, 1304, 369, 371, 1298, 1297, 1217, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 1289, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 1223, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 1312, 1313,
	404, 1236, 301, 0, 0, 0, 0, 0, 405, 406,
	407, 1296, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 1323, 414, 415, 416, 1309, 1310,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 1319, 0, 1246, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 1282, 1283, 1286, 527, 1325, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	302, 443, 444, 445, 0, 1324, 736, 446, 528, 447,
	1291, 1292, 0, 1252, 0, 448, 449, 451, 1326, 1284,
	1327, 450, 452, 453, 1328, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 1320, 464, 1329, 466, 467, 1330, 0, 468, 469,
	470, 471, 472, 473, 476, 1275, 1274, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 1331, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 1332, 520, 508, 1214, 303,
	1333, 522, 523, 524, 525, 1237, 1285, 526, 1299, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 1334, 539, 1335, 1314,
	540, 541, 1224, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 1315, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 1295, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	1336, 602, 603, 604, 605, 606, 1225, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	1278, 631, 752, 632, 613, 614, 633, 634, 1337, 635,
	636, 637, 638, 639, 640, 641, 1293, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 1340, 652, 653, 654, 655, 1316, 659, 660, 661,
	662, 0, 663, 664, 1211, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 1305,
	1306, 1307, 1308, 0, 685, 0, 674, 676, 677, 678,
	679, 1317, 680, 1318, 1235, 681, 682, 683, 684, 675,
	686, 687, 0, 1218, 688, 689, 691, 693, 694, 690,
	692, 695, 1279, 696, 0, 0, 697, 698, 699, 762,
	1302, 1339, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 0, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 1215, 0, 0, 0, 0, 1823, 0, 1257,
	1229, 1230, 1231, 1227, 1228, 1240, 0, 1210, 0, 0,
	0, 0, 0, 0, 1208, 1209, 304, 305, 307, 306,
	308, 309, 310, 311, 1241, 312, 313, 0, 1239, 0,
	0, 0, 1281, 1245, 0, 0, 314, 0, 315, 316,
	317, 1321, 318, 319, 320, 321, 322, 323, 324, 714,
	1294, 0, 325, 1301, 326, 1300, 0, 1311, 327, 328,
	329, 330, 331, 332, 333, 1247, 1280, 1212, 334, 1341,
	1342, 721, 0, 335, 336, 1287, 0, 1268, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 1322, 361,
	362, 363, 1271, 1269, 1270, 1277, 1273, 1272, 1276, 364,
	365, 366, 367, 368, 1304, 369, 371, 1298, 1297, 1217,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 1289, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 1223, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 1312, 1313, 404, 1236, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 1296, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 1323, 414, 415,
	416, 1309, 1310, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 1319, 0, 1246, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 1282, 1283, 1286, 527,
	1325, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 0, 1324, 736,
	446, 528, 447, 1291, 1292, 0, 1252, 0, 448, 449,
	451, 1326, 1284, 1327, 450, 452, 453, 1328, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 1320, 464, 1329, 466, 467, 1330,
	0, 468, 469, 470, 471, 472, 473, 476, 1275, 1274,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	1331, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 1332, 520,
	508, 1214, 303, 1333, 522, 523, 524, 525, 1237, 1285,
	526, 1299, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 1334,
	539, 1335, 1314, 540, 541, 1224, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 1315, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 1295, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 1336, 602, 603, 604, 605, 606, 1225,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 1278, 631, 752, 632, 613, 614, 633,
	634, 1337, 635, 636, 637, 638, 639, 640, 641, 1293,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 1340, 652, 653, 654, 655, 1316,
	659, 660, 661, 662, 0, 663, 664, 1211, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 1305, 1306, 1307, 1308, 0, 685, 0, 674,
	676, 677, 678, 679, 1317, 680, 1318, 1235, 681, 682,
	683, 684, 675, 686, 687, 0, 1218, 688, 689, 691,
	693, 694, 690, 692, 695, 1279, 696, 0, 0, 697,
	698, 699, 762, 1302, 1339, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 0, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 1215, 0, 0, 0, 0,
	1818, 0, 1257, 1229, 1230, 1231, 1227, 1228, 1240, 0,
	1210, 0, 0, 0, 0, 0, 0, 1208, 1209, 304,
	305, 307, 306, 308, 309, 310, 311, 1241, 312, 313,
	0, 1239, 0, 0, 0, 1281, 1245, 0, 0, 314,
	0, 315, 316, 317, 1321, 318, 319, 320, 321, 322,
	323, 324, 714, 1294, 0, 325, 1301, 326, 1300, 0,
	1311, 327, 328, 329, 330, 331, 332, 333, 1247, 1280,
	1212, 334, 1341, 1342, 721, 0, 335, 336, 1287, 0,
	1268, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 1322, 361, 362, 363, 1271, 1269, 1270, 1277, 1273,
	1272, 1276, 364, 365, 366, 367, 368, 1304, 369, 371,
	1298, 1297, 1217, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 1289, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 1223, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 1312, 1313, 404, 1236, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 1296, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	1323, 414, 415, 416, 1309, 1310, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 1319, 0, 1246,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 1282,
	1283, 1286, 527, 1325, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 1324, 736, 446, 528, 447, 1291, 1292, 0, 1252,
	0, 448, 449, 451, 1326, 1284, 1327, 450, 452, 453,
	1328, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 1320, 464, 1329,
	466, 467, 1330, 0, 468, 469, 470, 471, 472, 473,
	476, 1275, 1274, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 1331, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 1332, 520, 508, 1214, 303, 1333, 522, 523, 524,
	525, 1237, 1285, 526, 1299, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 1334, 539, 1335, 1314, 540, 541, 1224, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	1315, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 1295, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 1336, 602, 603, 604,
	605, 606, 1225, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 1278, 631, 752, 632,
	613, 614, 633, 634, 1337, 635, 636, 637, 638, 639,
	640, 641, 1293, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 1340, 652, 653,
	654, 655, 1316, 659, 660, 661, 662, 0, 663, 664,
	1211, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 1305, 1306, 1307, 1308, 0,
	685, 0, 674, 676, 677, 678, 679, 1317, 680, 1318,
	1235, 681, 682, 683, 684, 675, 686, 687, 0, 1218,
	688, 689, 691, 693, 694, 690, 692, 695, 1279, 696,
	0, 0, 697, 698, 699, 762, 1302, 1339, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 0, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 1215, 0,
	0, 0, 0, 1804, 0, 1257, 1229, 1230, 1231, 1227,
	1228, 1240, 0, 1210, 0, 0, 0, 0, 0, 0,
	1208, 1209, 304, 305, 307, 306, 308, 309, 310, 311,
	1241, 312, 313, 0, 1239, 0, 0, 0, 1281, 1245,
	0, 0, 314, 0, 315, 316, 317, 1321, 318, 319,
	320, 321, 322, 323, 324, 714, 1294, 0, 325, 1301,
	326, 1300, 0, 1311, 327, 328, 329, 330, 331, 332,
	333, 1247, 1280, 1212, 334, 1341, 1342, 721, 0, 335,
	336, 1287, 0, 1268, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 1322, 361, 362, 363, 1271, 1269,
	1270, 1277, 1273, 1272, 1276, 364, 365, 366, 367, 368,
	1304, 369, 371, 1298, 1297, 1217, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 1289, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 1223, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 1312, 1313, 404,
	1236, 301, 0, 0, 0, 0, 0, 405, 406, 407,
	1296, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 1323, 414, 415, 416, 1309, 1310, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	1319, 0, 1246, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 1282, 1283, 1286, 527, 1325, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 0, 1324, 736, 446, 528, 447, 1291,
	1292, 0, 1252, 0, 448, 449, 451, 1326, 1284, 1327,
	450, 452, 453, 1328, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	1320, 464, 1329, 466, 467, 1330, 0, 468, 469, 470,
	471, 472, 473, 476, 1275, 1274, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 1331, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 1332, 520, 508, 1214, 303, 1333,
	522, 523, 524, 525, 1237, 1285, 526, 1299, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 1334, 539, 1335, 1314, 540,
	541, 1224, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 1315, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 1295, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 1336,
	602, 603, 604, 605, 606, 1225, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 1278,
	631, 752, 632, 613, 614, 633, 634, 1337, 635, 636,
	637, 638, 639, 640, 641, 1293, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	1340, 652, 653, 654, 655, 1316, 659, 660, 661, 662,
	0, 663, 664, 1211, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 1305, 1306,
	1307, 1308, 0, 685, 0, 674, 676, 677, 678, 679,
	1317, 680, 1318, 1235, 681, 682, 683, 684, 675, 686,
	687, 0, 1218, 688, 689, 691, 693, 694, 690, 692,
	695, 1279, 696, 0, 0, 697, 698, 699, 762, 1302,
	1339, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 0, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 1215, 0, 0, 0, 0, 1799, 0, 1257, 1229,
	1230, 1231, 1227, 1228, 1240, 0, 1210, 0, 0, 0,
	0, 0, 0, 1208, 1209, 304, 305, 307, 306, 308,
	309, 310, 311, 1241, 312, 313, 0, 1239, 0, 0,
	0, 1281, 1245, 0, 0, 314, 0, 315, 316, 317,
	1321, 318, 319, 320, 321, 322, 323, 324, 714, 1294,
	0, 325, 1301, 326, 1300, 0, 1311, 327, 328, 329,
	330, 331, 332, 333, 1247, 1280, 1212, 334, 1341, 1342,
	721, 0, 335, 336, 1287, 0, 1268, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 1322, 361, 362,
	363, 1271, 1269, 1270, 1277, 1273, 1272, 1276, 364, 365,
	366, 367, 368, 1304, 369, 371, 1298, 1297, 1217, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 1289, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 1223, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	1312, 1313, 404, 1236, 301, 0, 0, 0, 0, 0,
	405, 406, 407, 1296, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 1323, 414, 415, 416,
	1309, 1310, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 1319, 0, 1246, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 1282, 1283, 1286, 527, 1325,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 302, 443, 444, 445, 0, 1324, 736, 446,
	528, 447, 1291, 1292, 0, 1252, 0, 448, 449, 451,
	1326, 1284, 1327, 450, 452, 453, 1328, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 1320, 464, 1329, 466, 467, 1330, 0,
	468, 469, 470, 471, 472, 473, 476, 1275, 1274, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 1331,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 1332, 520, 508,
	1214, 303, 1333, 522, 523, 524, 525, 1237, 1285, 526,
	1299, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 1334, 539,
	1335, 1314, 540, 541, 1224, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 1315, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 1295, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 1336, 602, 603, 604, 605, 606, 1225, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 1278, 631, 752, 632, 613, 614, 633, 634,
	1337, 635, 636, 637, 638, 639, 640, 641, 1293, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 1340, 652, 653, 654, 655, 1316, 659,
	660, 661, 662, 0, 663, 664, 1211, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 1305, 1306, 1307, 1308, 0, 685, 0, 674, 676,
	677, 678, 679, 1317, 680, 1318, 1235, 681, 682, 683,
	684, 675, 686, 687, 0, 1218, 688, 689, 691, 693,
	694, 690, 692, 695, 1279, 696, 0, 0, 697, 698,
	699, 762, 1302, 1339, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 0, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 1215, 0, 0, 0, 0, 1707,
	0, 1257, 1229, 1230, 1231, 1227, 1228, 1240, 0, 1210,
	0, 0, 0, 0, 0, 0, 1208, 1209, 304, 305,
	307, 306, 308, 309, 310, 311, 1241, 312, 313, 0,
	1239, 0, 0, 0, 1281, 1245, 0, 0, 314, 0,
	315, 316, 317, 1321, 318, 319, 320, 321, 322, 323,
	324, 714, 1294, 0, 325, 1301, 326, 1300, 0, 1311,
	327, 328, 329, 330, 331, 332, 333, 1247, 1280, 1212,
	334, 1341, 1342, 721, 0, 335, 336, 1287, 0, 1268,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	1322, 361, 362, 363, 1271, 1269, 1270, 1277, 1273, 1272,
	1276, 364, 365, 366, 367, 368, 1304, 369, 371, 1298,
	1297, 1217, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 1289, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	1223, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 1312, 1313, 404, 1236, 301, 0, 0,
	0, 0, 0, 405, 406, 407, 1296, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 1323,
	414, 415, 416, 1309, 1310, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 1319, 0, 1246, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 1706, 1283,
	1286, 527, 1325, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 302, 443, 444, 445, 0,
	1324, 736, 446, 528, 447, 1291, 1292, 0, 1252, 0,
	448, 449, 451, 1326, 1284, 1327, 450, 452, 453, 1328,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 1320, 464, 1329, 466,
	467, 1330, 0, 468, 469, 470, 471, 472, 473, 476,
	1275, 1274, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 1331, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	1332, 520, 508, 1214, 303, 1333, 522, 523, 524, 525,
	1237, 1285, 526, 1299, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 1334, 539, 1335, 1314, 540, 541, 1224, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 1315,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 1295, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 1336, 602, 603, 604, 605,
	606, 1225, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 1278, 631, 752, 632, 613,
	614, 633, 634, 1337, 635, 636, 637, 638, 639, 640,
	641, 1293, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 1340, 652, 653, 654,
	655, 1316, 659, 660, 661, 662, 0, 663, 664, 1211,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 1305, 1306, 1307, 1308, 0, 685,
	0, 674, 676, 677, 678, 679, 1317, 680, 1318, 1235,
	681, 682, 683, 684, 675, 686, 687, 0, 1218, 688,
	689, 691, 693, 694, 690, 692, 695, 1279, 696, 0,
	0, 697, 698, 699, 762, 1302, 1339, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 0, 0, 0,
	0, 708, 709, 766, 710, 711, 712, 1215, 0, 0,
	0, 0, 1701, 0, 1257, 1229, 1230, 1231, 1227, 1228,
	1240, 0, 1210, 0, 0, 0, 0, 0, 0, 1208,
	1209, 304, 305, 307, 306, 308, 309, 310, 311, 1241,
	312, 313, 0, 1239, 0, 0, 0, 1281, 1245, 0,
	0, 314, 0, 315, 316, 317, 1321, 318, 319, 320,
	321, 322, 323, 324, 714, 1294, 0, 325, 1301, 326,
	1300, 0, 1311, 327, 328, 329, 330, 331, 332, 333,
	1247, 1280, 1212, 334, 1341, 1342, 721, 0, 335, 336,
	1287, 0, 1268, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 1322, 361, 362, 363, 1271, 1269, 1270,
	1277, 1273, 1272, 1276, 364, 365, 366, 367, 368, 1304,
	369, 371, 1298, 1297, 1217, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	1289, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 1223, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 1312, 1313, 404, 1236,
	301, 0, 0, 0, 0, 0, 405, 406, 407, 1296,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 1323, 414, 415, 416, 1309, 1310, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 1319,
	0, 1246, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 1700, 1283, 1286, 527, 1325, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 302, 443,
	444, 445, 0, 1324, 736, 446, 528, 447, 1291, 1292,
	0, 1252, 0, 448, 449, 451, 1326, 1284, 1327, 450,
	452, 453, 1328, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 1320,
	464, 1329, 466, 467, 1330, 0, 468, 469, 470, 471,
	472, 473, 476, 1275, 1274, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 1331, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 1332, 520, 508, 1214, 303, 1333, 522,
	523, 524, 525, 1237, 1285, 526, 1299, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 1334, 539, 1335, 1314, 540, 541,
	1224, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 1315, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	1295, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 1336, 602,
	603, 604, 605, 606, 1225, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 1278, 631,
	752, 632, 613, 614, 633, 634, 1337, 635, 636, 637,
	638, 639, 640, 641, 1293, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 1340,
	652, 653, 654, 655, 1316, 659, 660, 661, 662, 0,
	663, 664, 1211, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 1305, 1306, 1307,
	1308, 0, 685, 0, 674, 676, 677, 678, 679, 1317,
	680, 1318, 1235, 681, 682, 683, 684, 675, 686, 687,
	0, 1218, 688, 689, 691, 693, 694, 690, 692, 695,
	1279, 696, 0, 0, 697, 698, 699, 762, 1302, 1339,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	0, 0, 0, 0, 708, 709, 766, 710, 711, 712,
	1215, 0, 0, 0, 0, 1694, 0, 1257, 1229, 1230,
	1231, 1227, 1228, 1240, 0, 1210, 0, 0, 0, 0,
	0, 0, 1208, 1209, 304, 305, 307, 306, 308, 309,
	310, 311, 1241, 312, 313, 0, 1239, 0, 0, 0,
	1281, 1245, 0, 0, 314, 0, 315, 316, 317, 1321,
	318, 319, 320, 321, 322, 323, 324, 714, 1294, 0,
	325, 1301, 326, 1300, 0, 1311, 327, 328, 329, 330,
	331, 332, 333, 1247, 1280, 1212, 334, 1341, 1342, 721,
	0, 335, 336, 1287, 0, 1268, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 1322, 361, 362, 363,
	1271, 1269, 1270, 1277, 1273, 1272, 1276, 364, 365, 366,
	367, 368, 1304, 369, 371, 1298, 1297, 1217, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 1289, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 1223, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 1312,
	1313, 404, 1236, 301, 0, 0, 0, 0, 0, 405,
	406, 407, 1296, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 1323, 414, 415, 416, 1309,
	1310, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 1319, 0, 1246, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 1282, 1283, 1286, 527, 1325, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 302, 443, 444, 445, 0, 1324, 736, 446, 528,
	447, 1291, 1292, 0, 1252, 0, 448, 449, 451, 1326,
	1284, 1327, 450, 452, 453, 1328, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 1320, 464, 1329, 466, 467, 1330, 0, 468,
	469, 470, 471, 472, 473, 476, 1275, 1274, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 1331, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 1332, 520, 508, 1214,
	303, 1333, 522, 523, 524, 525, 1237, 1285, 526, 1299,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 1334, 539, 1335,
	1314, 540, 541, 1224, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 1315, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 1295, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 1336, 602, 603, 604, 605, 606, 1225, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 1278, 631, 752, 632, 613, 614, 633, 634, 1337,
	635, 636, 637, 638, 639, 640, 641, 1293, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 1340, 652, 653, 654, 655, 1316, 659, 660,
	661, 662, 0, 663, 664, 1211, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	1305, 1306, 1307, 1308, 0, 685, 0, 674, 676, 677,
	678, 679, 1317, 680, 1318, 1235, 681, 682, 683, 684,
	675, 686, 687, 0, 1218, 688, 689, 691, 693, 694,
	690, 692, 695, 1279, 696, 0, 0, 697, 698, 699,
	762, 1302, 1339, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 0, 0, 0, 0, 708, 709, 766,
	710, 711, 712, 1215, 0, 0, 0, 0, 1657, 0,
	1257, 1229, 1230, 1231, 1227, 1228, 1240, 0, 1210, 0,
	0, 0, 0, 0, 0, 1208, 1209, 304, 305, 307,
	306, 308, 309, 310, 311, 1241, 312, 313, 0, 1239,
	0, 0, 0, 1281, 1245, 0, 0, 314, 0, 315,
	316, 317, 1321, 318, 319, 320, 321, 322, 323, 324,
	714, 1294, 0, 325, 1301, 326, 1300, 0, 1311, 327,
	328, 329, 330, 331, 332, 333, 1247, 1280, 1212, 334,
	1341, 1342, 721, 0, 335, 336, 1287, 0, 1268, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 1322,
	361, 362, 363, 1271, 1269, 1270, 1277, 1273, 1272, 1276,
	364, 365, 366, 367, 368, 1304, 369, 371, 1298, 1297,
	1217, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 1289, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 1223,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 1312, 1313, 404, 1236, 301, 0, 0, 0,
	0, 0, 405, 406, 407, 1296, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 1323, 414,
	415, 416, 1309, 1310, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 1319, 0, 1246, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 1282, 1283, 1286,
	527, 1325, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 302, 443, 444, 445, 0, 1324,
	736, 446, 528, 447, 1291, 1292, 0, 1252, 0, 448,
	449, 451, 1326, 1284, 1327, 450, 452, 453, 1328, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 1320, 464, 1329, 466, 467,
	1330, 0, 468, 469, 470, 471, 472, 473, 476, 1275,
	1274, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 1331, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 1332,
	520, 508, 1214, 303, 1333, 522, 523, 524, 525, 1237,
	1285, 526, 1299, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	1334, 539, 1335, 1314, 540, 541, 1224, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 1315, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 1295, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 1336, 602, 603, 604, 605, 606,
	1225, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 1278, 631, 752, 632, 613, 614,
	633, 634, 1337, 635, 636, 637, 638, 639, 640, 641,
	1293, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 1340, 652, 653, 654, 655,
	1316, 659, 660, 661, 662, 0, 663, 664, 1211, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 1305, 1306, 1307, 1308, 0, 685, 0,
	674, 676, 677, 678, 679, 1317, 680, 1318, 1235, 681,
	682, 683, 684, 675, 686, 687, 0, 1218, 688, 689,
	691, 693, 694, 690, 692, 695, 1279, 696, 0, 0,
	697, 698, 699, 762, 1302, 1339, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 0, 0, 0, 0,
	708, 709, 766, 710, 711, 712, 1215, 0, 0, 0,
	0, 1639, 0, 1257, 1229, 1230, 1231, 1227, 1228, 1240,
	0, 1210, 0, 0, 0, 0, 0, 0, 1208, 1209,
	304, 305, 307, 306, 308, 309, 310, 311, 1241, 312,
	313, 0, 1239, 0, 0, 0, 1281, 1245, 0, 0,
	314, 0, 315, 316, 317, 1321, 318, 319, 320, 321,
	322, 323, 324, 714, 1294, 0, 325, 1301, 326, 1300,
	0, 1311, 327, 328, 329, 330, 331, 332, 333, 1247,
	1280, 1212, 334, 1341, 1342, 721, 0, 335, 336, 1287,
	0, 1268, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 1322, 361, 362, 363, 1271, 1269, 1270, 1277,
	1273, 1272, 1276, 364, 365, 366, 367, 368, 1304, 369,
	371, 1298, 1297, 1217, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 1289,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 1223, 392, 393, 394, 396, 398, 395, 1643,
	399, 400, 401, 402, 403, 1312, 1313, 404, 1236, 301,
	0, 0, 0, 0, 0, 405, 406, 407, 1296, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 1323, 414, 415, 416, 1309, 1310, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 1319, 0,
	1246, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	1282, 1283, 1286, 527, 1325, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 302, 443, 444,
	445, 0, 1324, 736, 446, 528, 447, 1291, 1292, 0,
	1252, 0, 448, 449, 451, 1326, 1284, 1327, 450, 452,
	453, 1328, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 1320, 464,
	1329, 466, 467, 1330, 0, 468, 469, 470, 471, 472,
	473, 476, 1275, 1274, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 1331, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 1332, 520, 508, 1214, 303, 1333, 522, 523,
	524, 525, 1237, 1285, 526, 1299, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 1334, 539, 1335, 1314, 540, 541, 1224,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 1315, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 1295,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 1644, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 1336, 602, 603,
	604, 605, 606, 1225, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 1278, 631, 752,
	632, 613, 614, 633, 634, 1337, 635, 636, 637, 638,
	639, 640, 641, 1293, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 1340, 652,
	653, 654, 655, 1316, 659, 660, 661, 662, 0, 663,
	664, 1211, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 1642, 672, 0, 673, 1305, 1306, 1307, 1308,
	0, 685, 0, 674, 676, 677, 678, 679, 1317, 680,
	1318, 1235, 681, 682, 683, 684, 675, 686, 687, 0,
	1218, 688, 689, 691, 693, 694, 690, 692, 695, 1279,
	696, 0, 0, 697, 698, 699, 762, 1302, 1339, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 0,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 1215,
	0, 0, 0, 0, 1469, 0, 1257, 1229, 1230, 1231,
	1227, 1228, 1240, 0, 1210, 0, 0, 0, 0, 0,
	0, 1208, 1209, 304, 305, 307, 306, 308, 309, 310,
	311, 1241, 312, 313, 0, 1239, 0, 0, 0, 1281,
	1245, 0, 0, 314, 0, 315, 316, 317, 1321, 318,
	319, 320, 321, 322, 323, 324, 714, 1294, 0, 325,
	1301, 326, 1300, 0, 1311, 327, 328, 329, 330, 331,
	332, 333, 1247, 1280, 1212, 334, 1341, 1342, 721, 0,
	335, 336, 1287, 0, 1268, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 1322, 361, 362, 363, 1271,
	1269, 1270, 1277, 1273, 1272, 1276, 364, 365, 366, 367,
	368, 1304, 369, 371, 1298, 1297, 1217, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 1289, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 1223, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 1312, 1313,
	404, 1236, 301, 0, 0, 0, 0, 0, 405, 406,
	407, 1296, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 1323, 414, 415, 416, 1309, 1310,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 1319, 0, 1246, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 1282, 1283, 1286, 527, 1325, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	302, 443, 444, 445, 0, 1324, 736, 446, 528, 447,
	1291, 1292, 0, 1252, 0, 448, 449, 451, 1326, 1284,
	1327, 450, 452, 453, 1328, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 1320, 464, 1329, 466, 467, 1330, 0, 468, 469,
	470, 471, 472, 473, 476, 1275, 1274, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 1331, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 1332, 520, 508, 1214, 303,
	1333, 522, 523, 524, 525, 1237, 1285, 526, 1299, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 1334, 539, 1335, 1314,
	540, 541, 1224, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 1315, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 1295, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	1336, 602, 603, 604, 605, 606, 1225, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	1278, 631, 752, 632, 613, 614, 633, 634, 1337, 635,
	636, 637, 638, 639, 640, 641, 1293, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 1340, 652, 653, 654, 655, 1316, 659, 660, 661,
	662, 0, 663, 664, 1211, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 1305,
	1306, 1307, 1308, 0, 685, 0, 674, 676, 677, 678,
	679, 1317, 680, 1318, 1235, 681, 682, 683, 684, 675,
	686, 687, 0, 1218, 688, 689, 691, 693, 694, 690,
	692, 695, 1279, 696, 0, 0, 697, 698, 699, 762,
	1302, 1339, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 0, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 1215, 0, 0, 0, 0, 0, 0, 1257,
	1229, 1230, 1231, 1227, 1228, 1240, 0, 1210, 0, 0,
	0, 0, 0, 0, 1208, 1209, 304, 305, 307, 306,
	308, 309, 310, 311, 1241, 312, 313, 0, 1239, 0,
	0, 0, 1281, 1245, 0, 0, 314, 0, 315, 316,
	317, 1321, 318, 319, 320, 321, 322, 323, 324, 714,
	1294, 0, 325, 1301, 326, 1300, 0, 1311, 327, 328,
	329, 330, 331, 332, 333, 1247, 1280, 1212, 334, 1341,
	1342, 721, 0, 335, 336, 1287, 0, 1268, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 1322, 361,
	362, 363, 1271, 1269, 1270, 1277, 1273, 1272, 1276, 364,
	365, 366, 367, 368, 1304, 369, 371, 1298, 1297, 1217,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 1289, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 1223, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 1312, 1313, 404, 1236, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 1296, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 1323, 414, 415,
	416, 1309, 1310, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 1319, 0, 1246, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 1282, 1283, 1286, 527,
	1325, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 0, 1324, 736,
	446, 528, 447, 1291, 1292, 0, 1252, 0, 448, 449,
	451, 1326, 1284, 1327, 450, 452, 453, 1328, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 1320, 464, 1329, 466, 467, 1330,
	0, 468, 469, 470, 471, 472, 473, 476, 1275, 1274,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	1331, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 1332, 520,
	508, 1214, 303, 1333, 522, 523, 524, 525, 1237, 1285,
	526, 1299, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 1334,
	539, 1335, 1314, 540, 541, 1224, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 1315, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 1295, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 1336, 602, 603, 604, 605, 606, 1225,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 1278, 631, 752, 632, 613, 614, 633,
	634, 1337, 635, 636, 637, 638, 639, 640, 641, 1293,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 1340, 652, 653, 654, 655, 1316,
	659, 660, 661, 662, 0, 663, 664, 1211, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 1305, 1306, 1307, 1308, 0, 685, 0, 674,
	676, 677, 678, 679, 1317, 680, 1318, 1235, 681, 682,
	683, 684, 675, 686, 687, 0, 1218, 688, 689, 691,
	693, 694, 690, 692, 695, 1279, 696, 0, 0, 697,
	698, 699, 762, 1302, 1339, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 0, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 1215, 0, 0, 0, 0,
	0, 0, 1257, 1229, 1230, 1231, 1227, 1228, 1240, 0,
	1210, 0, 0, 0, 0, 0, 0, 1208, 1209, 304,
	305, 307, 306, 308, 309, 310, 311, 1241, 312, 313,
	0, 1239, 0, 0, 0, 1281, 1245, 0, 0, 314,
	0, 315, 316, 317, 1321, 318, 319, 320, 321, 322,
	323, 324, 714, 1294, 0, 325, 1301, 326, 1300, 0,
	1311, 327, 328, 329, 330, 331, 332, 333, 1247, 1280,
	1212, 334, 1341, 1342, 721, 0, 335, 336, 1287, 0,
	1268, 0, 337, 338, 339, 340, 341, 342, 343, 344,
	0, 0, 346, 347, 348, 345, 349, 0, 350, 0,
	351, 352, 353, 354, 355, 356, 357, 0, 358, 359,
	360, 1322, 361, 362, 5253, 1271, 1269, 1270, 1277, 1273,
	1272, 1276, 364, 365, 366, 367, 368, 1304, 369, 371,
	1298, 1297, 1217, 374, 376, 370, 372, 0, 375, 373,
	377, 0, 378, 379, 380, 0, 0, 381, 1289, 383,
	0, 384, 385, 386, 0, 387, 388, 389, 0, 390,
	391, 1223, 392, 393, 394, 396, 398, 395, 397, 399,
	400, 401, 402, 403, 1312, 1313, 404, 1236, 301, 0,
	0, 0, 0, 0, 405, 406, 407, 1296, 0, 0,
	0, 408, 0, 409, 410, 411, 0, 412, 413, 0,
	1323, 414, 415, 416, 1309, 1310, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 0, 426, 1319, 0, 1246,
	427, 0, 428, 429, 430, 431, 432, 433, 434, 1282,
	1283, 1286, 527, 1325, 435, 436, 437, 0, 438, 439,
	440, 441, 442, 0, 0, 0, 302, 443, 444, 445,
	0, 1324, 736, 446, 528, 447, 1291, 1292, 0, 1252,
	0, 448, 449, 451, 1326, 1284, 1327, 450, 452, 453,
	1328, 454, 0, 0, 0, 455, 456, 457, 458, 459,
	460, 0, 461, 463, 462, 0, 465, 1320, 464, 1329,
	466, 467, 1330, 0, 468, 469, 470, 471, 472, 473,
	476, 1275, 1274, 474, 475, 477, 478, 0, 479, 480,
	482, 485, 481, 483, 484, 486, 499, 500, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	502, 0, 501, 1331, 503, 504, 505, 506, 507, 514,
	516, 517, 512, 513, 515, 518, 519, 521, 509, 510,
	511, 1332, 520, 508, 1214, 303, 1333, 522, 523, 524,
	525, 1237, 1285, 526, 1299, 529, 530, 0, 0, 531,
	0, 532, 0, 0, 534, 535, 536, 0, 0, 537,
	538, 744, 1334, 539, 1335, 1314, 540, 541, 1224, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 0,
	552, 553, 746, 554, 555, 556, 747, 557, 558, 559,
	1315, 560, 749, 561, 562, 0, 563, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 573, 1295, 574,
	575, 577, 576, 578, 0, 579, 0, 580, 581, 582,
	0, 0, 0, 0, 0, 583, 584, 586, 0, 587,
	588, 589, 590, 585, 591, 592, 593, 594, 595, 596,
	0, 598, 599, 597, 600, 601, 1336, 602, 603, 604,
	605, 606, 1225, 607, 0, 608, 609, 616, 617, 618,
	610, 611, 612, 619, 620, 621, 622, 623, 624, 0,
	626, 627, 625, 628, 629, 630, 1278, 631, 752, 632,
	613, 614, 633, 634, 1337, 635, 636, 637, 638, 639,
	640, 641, 1293, 0, 642, 0, 643, 644, 645, 646,
	647, 648, 650, 615, 651, 656, 657, 1340, 652, 653,
	654, 655, 1316, 659, 660, 661, 662, 0, 663, 664,
	1211, 658, 649, 0, 665, 666, 667, 668, 669, 670,
	0, 671, 672, 0, 673, 1305, 1306, 1307, 1308, 0,
	685, 0, 674, 676, 677, 678, 679, 1317, 680, 1318,
	1235, 681, 682, 683, 684, 675, 5252, 687, 0, 1218,
	688, 689, 691, 693, 694, 690, 692, 695, 1279, 696,
	0, 0, 697, 698, 699, 762, 1302, 1339, 0, 701,
	700, 702, 703, 704, 765, 705, 706, 707, 0, 0,
	0, 0, 708, 709, 766, 710, 711, 712, 1215, 0,
	0, 0, 0, 0, 0, 1257, 1229, 1230, 1231, 1227,
	1228, 1240, 0, 1210, 0, 0, 0, 0, 0, 0,
	1208, 1209, 304, 305, 307, 306, 308, 309, 310, 311,
	1241, 312, 313, 0, 1239, 0, 0, 0, 1281, 1245,
	0, 0, 314, 0, 315, 316, 317, 1321, 318, 319,
	320, 321, 322, 323, 324, 5251, 1294, 0, 325, 1301,
	326, 1300, 0, 1311, 327, 328, 329, 330, 331, 332,
	333, 1247, 1280, 1212, 334, 1341, 1342, 721, 0, 335,
	336, 1287, 0, 1268, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 1322, 361, 362, 5253, 1271, 1269,
	1270, 1277, 1273, 1272, 1276, 364, 365, 366, 367, 368,
	1304, 369, 371, 1298, 1297, 1217, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 1289, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 1223, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 1312, 1313, 404,
	1236, 301, 0, 0, 0, 0, 0, 405, 406, 407,
	1296, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 1323, 414, 415, 416, 1309, 1310, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	1319, 0, 1246, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 1282, 1283, 1286, 527, 1325, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 0, 1324, 736, 446, 528, 447, 1291,
	1292, 0, 1252, 0, 448, 449, 451, 1326, 1284, 1327,
	450, 452, 453, 1328, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	1320, 464, 1329, 466, 467, 1330, 0, 468, 469, 470,
	471, 472, 473, 476, 1275, 1274, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 1331, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 1332, 520, 508, 1214, 303, 1333,
	522, 523, 524, 525, 1237, 1285, 526, 1299, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 1334, 539, 1335, 1314, 540,
	541, 1224, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 1315, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 1295, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 1336,
	602, 603, 604, 605, 606, 1225, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 1278,
	631, 752, 632, 613, 614, 633, 634, 1337, 635, 636,
	637, 638, 639, 640, 641, 1293, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	1340, 652, 653, 654, 655, 1316, 659, 660, 661, 662,
	0, 663, 664, 1211, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 1305, 1306,
	1307, 1308, 0, 685, 0, 674, 676, 677, 678, 679,
	1317, 680, 1318, 1235, 681, 682, 683, 684, 675, 5252,
	687, 0, 1218, 688, 689, 691, 693, 694, 690, 692,
	695, 1279, 696, 0, 0, 697, 698, 699, 762, 1302,
	1339, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 0, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 1215, 0, 0, 0, 0, 0, 0, 1257, 1229,
	1230, 1231, 1227, 1228, 1240, 0, 1210, 0, 0, 0,
	0, 0, 0, 1208, 1209, 304, 305, 307, 306, 308,
	309, 310, 311, 1241, 312, 313, 0, 1239, 0, 0,
	0, 1281, 1245, 0, 0, 314, 0, 315, 316, 317,
	1321, 318, 319, 320, 321, 322, 323, 324, 714, 1294,
	0, 325, 1301, 326, 1300, 0, 1311, 327, 328, 329,
	330, 331, 332, 333, 1247, 1280, 1212, 334, 1341, 1342,
	721, 0, 335, 336, 1287, 0, 1268, 0, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 0, 346, 347,
	348, 345, 349, 0, 350, 0, 351, 352, 353, 354,
	355, 356, 357, 0, 358, 359, 360, 1322, 361, 4820,
	363, 1271, 1269, 1270, 1277, 1273, 1272, 1276, 364, 365,
	366, 367, 368, 1304, 369, 371, 1298, 1297, 1217, 374,
	376, 370, 372, 0, 375, 373, 377, 0, 378, 379,
	380, 0, 0, 381, 1289, 383, 0, 384, 385, 386,
	0, 387, 388, 389, 0, 390, 391, 1223, 392, 393,
	394, 396, 398, 395, 397, 399, 400, 401, 402, 403,
	1312, 1313, 404, 1236, 301, 0, 0, 0, 0, 0,
	405, 406, 407, 1296, 0, 0, 0, 408, 0, 409,
	410, 411, 0, 412, 413, 0, 1323, 414, 415, 416,
	1309, 1310, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 0, 426, 1319, 0, 4821, 427, 0, 428, 429,
	430, 431, 432, 433, 434, 1282, 1283, 1286, 527, 1325,
	435, 436, 437, 0, 438, 439, 440, 441, 442, 0,
	0, 0, 302, 443, 444, 445, 0, 1324, 736, 446,
	528, 447, 1291, 1292, 0, 1252, 0, 448, 449, 451,
	1326, 1284, 1327, 450, 452, 453, 1328, 454, 0, 0,
	0, 455, 456, 457, 458, 459, 460, 0, 461, 463,
	462, 0, 465, 1320, 464, 1329, 466, 467, 1330, 0,
	468, 469, 470, 471, 472, 473, 476, 1275, 1274, 474,
	475, 477, 478, 0, 479, 480, 482, 485, 481, 483,
	484, 486, 499, 500, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 502, 0, 501, 1331,
	503, 504, 505, 506, 507, 514, 516, 517, 512, 513,
	515, 518, 519, 521, 509, 510, 511, 1332, 520, 508,
	1214, 303, 1333, 522, 523, 524, 525, 1237, 1285, 526,
	1299, 529, 530, 0, 0, 531, 0, 532, 0, 0,
	534, 535, 536, 0, 0, 537, 538, 744, 1334, 539,
	1335, 1314, 540, 541, 1224, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 0, 552, 553, 746, 554,
	555, 556, 747, 557, 558, 559, 1315, 560, 749, 561,
	562, 0, 563, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 573, 1295, 574, 575, 577, 576, 578,
	0, 579, 0, 580, 581, 582, 0, 0, 0, 0,
	0, 583, 584, 586, 0, 587, 588, 589, 590, 585,
	591, 592, 593, 594, 595, 596, 0, 598, 599, 597,
	600, 601, 1336, 602, 603, 604, 4819, 606, 1225, 607,
	0, 608, 609, 616, 617, 618, 610, 611, 612, 619,
	620, 621, 622, 623, 624, 0, 626, 627, 625, 628,
	629, 630, 1278, 631, 752, 632, 613, 614, 633, 634,
	1337, 635, 636, 637, 638, 639, 640, 641, 1293, 0,
	642, 0, 643, 644, 645, 646, 647, 648, 650, 615,
	651, 656, 657, 1340, 652, 653, 654, 655, 1316, 659,
	660, 661, 662, 0, 663, 664, 1211, 658, 649, 0,
	665, 666, 667, 668, 669, 670, 0, 671, 672, 0,
	673, 1305, 1306, 1307, 1308, 0, 685, 0, 674, 676,
	677, 678, 679, 1317, 680, 1318, 1235, 681, 682, 683,
	684, 675, 686, 687, 0, 1218, 688, 689, 691, 693,
	694, 690, 692, 695, 1279, 696, 0, 0, 697, 698,
	699, 762, 1302, 1339, 0, 701, 700, 702, 703, 704,
	765, 705, 706, 707, 0, 0, 0, 0, 708, 709,
	766, 710, 711, 712, 1215, 0, 0, 0, 0, 0,
	0, 1257, 1229, 1230, 1231, 3497, 3498, 1240, 0, 1210,
	0, 0, 0, 0, 0, 0, 1208, 1209, 304, 305,
	307, 306, 308, 309, 310, 311, 1241, 312, 313, 0,
	1239, 0, 0, 0, 1281, 1245, 0, 0, 314, 0,
	315, 316, 317, 1321, 318, 319, 320, 321, 322, 323,
	324, 714, 1294, 0, 325, 1301, 326, 1300, 0, 1311,
	327, 328, 329, 330, 331, 332, 333, 1247, 1280, 1212,
	334, 1341, 1342, 721, 0, 335, 336, 1287, 0, 1268,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	1322, 361, 362, 363, 1271, 1269, 1270, 1277, 1273, 1272,
	1276, 364, 365, 366, 367, 368, 1304, 369, 371, 1298,
	1297, 1217, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 1289, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	1223, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 1312, 1313, 404, 1236, 301, 0, 0,
	0, 0, 0, 405, 406, 407, 1296, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 1323,
	414, 415, 416, 1309, 1310, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 1319, 0, 1246, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 1282, 1283,
	1286, 527, 1325, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 302, 443, 444, 445, 0,
	1324, 736, 446, 528, 447, 1291, 1292, 0, 1252, 0,
	448, 449, 451, 1326, 1284, 1327, 450, 452, 453, 1328,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 1320, 464, 1329, 466,
	467, 1330, 0, 468, 469, 470, 471, 472, 473, 476,
	1275, 1274, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 1331, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	1332, 520, 508, 1214, 303, 1333, 522, 523, 524, 525,
	1237, 1285, 526, 1299, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 1334, 539, 1335, 1314, 540, 541, 1224, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 1315,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 1295, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 1336, 602, 603, 604, 605,
	606, 1225, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 1278, 631, 752, 632, 613,
	614, 633, 634, 1337, 635, 636, 637, 638, 639, 640,
	641, 1293, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 1340, 652, 653, 654,
	655, 1316, 659, 660, 661, 662, 0, 663, 664, 1211,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 1305, 1306, 1307, 1308, 0, 685,
	0, 674, 676, 677, 678, 679, 1317, 680, 1318, 1235,
	681, 682, 683, 684, 675, 686, 687, 0, 1218, 688,
	689, 691, 693, 694, 690, 692, 695, 1279, 696, 0,
	0, 697, 698, 699, 762, 1302, 1339, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 0, 0, 0,
	0, 708, 709, 766, 710, 711, 712, 1215, 0, 0,
	0, 0, 0, 0, 1257, 1229, 1230, 1231, 3495, 3496,
	1240, 0, 1210, 0, 0, 0, 0, 0, 0, 1208,
	1209, 304, 305, 307, 306, 308, 309, 310, 311, 1241,
	312, 313, 0, 1239, 0, 0, 0, 1281, 1245, 0,
	0, 314, 0, 315, 316, 317, 1321, 318, 319, 320,
	321, 322, 323, 324, 714, 1294, 0, 325, 1301, 326,
	1300, 0, 1311, 327, 328, 329, 330, 331, 332, 333,
	1247, 1280, 1212, 334, 1341, 1342, 721, 0, 335, 336,
	1287, 0, 1268, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 1322, 361, 362, 363, 1271, 1269, 1270,
	1277, 1273, 1272, 1276, 364, 365, 366, 367, 368, 1304,
	369, 371, 1298, 1297, 1217, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	1289, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 1223, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 1312, 1313, 404, 1236,
	301, 0, 0, 0, 0, 0, 405, 406, 407, 1296,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 1323, 414, 415, 416, 1309, 1310, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 1319,
	0, 1246, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 1282, 1283, 1286, 527, 1325, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 302, 443,
	444, 445, 0, 1324, 736, 446, 528, 447, 1291, 1292,
	0, 1252, 0, 448, 449, 451, 1326, 1284, 1327, 450,
	452, 453, 1328, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 1320,
	464, 1329, 466, 467, 1330, 0, 468, 469, 470, 471,
	472, 473, 476, 1275, 1274, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 1331, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 1332, 520, 508, 1214, 303, 1333, 522,
	523, 524, 525, 1237, 1285, 526, 1299, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 1334, 539, 1335, 1314, 540, 541,
	1224, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 1315, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	1295, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 1336, 602,
	603, 604, 605, 606, 1225, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 0, 626, 627, 625, 628, 629, 630, 1278, 631,
	752, 632, 613, 614, 633, 634, 1337, 635, 636, 637,
	638, 639, 640, 641, 1293, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 1340,
	652, 653, 654, 655, 1316, 659, 660, 661, 662, 0,
	663, 664, 1211, 658, 649, 0, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 1305, 1306, 1307,
	1308, 0, 685, 0, 674, 676, 677, 678, 679, 1317,
	680, 1318, 1235, 681, 682, 683, 684, 675, 686, 687,
	0, 1218, 688, 689, 691, 693, 694, 690, 692, 695,
	1279, 696, 0, 0, 697, 698, 699, 762, 1302, 1339,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	0, 0, 0, 0, 708, 709, 766, 710, 711, 712,
	1215, 0, 0, 0, 0, 0, 0, 1257, 1229, 1230,
	1231, 1227, 1228, 1240, 0, 1210, 0, 0, 0, 0,
	0, 0, 1208, 1209, 304, 305, 307, 306, 308, 309,
	310, 311, 1241, 312, 313, 0, 1239, 0, 0, 0,
	1281, 1245, 0, 0, 314, 0, 315, 316, 317, 1321,
	318, 319, 320, 321, 322, 323, 324, 714, 1294, 0,
	325, 1301, 326, 1300, 0, 1311, 327, 328, 329, 330,
	331, 332, 333, 1247, 1280, 1212, 334, 1341, 1342, 721,
	0, 335, 336, 1287, 0, 1268, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 1322, 361, 362, 363,
	1271, 1269, 1270, 1277, 1273, 1272, 1276, 364, 365, 366,
	367, 368, 1304, 369, 371, 1298, 1297, 1217, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 1289, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 1223, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 1312,
	1313, 404, 1236, 301, 0, 0, 0, 0, 0, 405,
	406, 407, 1296, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 1323, 414, 415, 416, 1309,
	1310, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 1319, 0, 1246, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 1282, 1283, 1286, 527, 1325, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 302, 443, 444, 445, 0, 1324, 736, 446, 528,
	447, 1291, 1292, 0, 1252, 0, 448, 449, 451, 1326,
	1284, 1327, 450, 452, 453, 1328, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 1320, 464, 1329, 466, 467, 1330, 0, 468,
	469, 470, 471, 472, 473, 476, 1275, 1274, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 1331, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 1332, 520, 508, 1214,
	303, 1333, 522, 523, 524, 525, 1237, 1285, 526, 1299,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 1334, 539, 1335,
	1314, 540, 541, 1224, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 1315, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 1295, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 1336, 602, 603, 604, 605, 606, 1225, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 1278, 631, 752, 632, 613, 614, 633, 634, 1337,
	635, 636, 637, 638, 639, 640, 641, 1293, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 1340, 652, 653, 654, 655, 1316, 659, 660,
	661, 662, 0, 663, 664, 1211, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	1305, 1306, 1307, 1308, 0, 685, 0, 674, 676, 677,
	678, 679, 1317, 680, 1318, 1235, 681, 682, 683, 684,
	675, 686, 687, 0, 1218, 688, 689, 691, 693, 694,
	690, 692, 695, 1279, 696, 0, 0, 697, 698, 699,
	762, 1302, 1339, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 0, 0, 0, 0, 708, 709, 766,
	710, 711, 712, 1215, 0, 0, 0, 0, 0, 0,
	1257, 1229, 1230, 1231, 1227, 1228, 1240, 0, 1210, 0,
	0, 0, 0, 0, 0, 2697, 2698, 304, 305, 307,
	306, 308, 309, 310, 311, 1241, 312, 313, 0, 1239,
	0, 0, 0, 1281, 1245, 0, 0, 314, 0, 315,
	316, 317, 1321, 318, 319, 320, 321, 322, 323, 324,
	714, 1294, 0, 325, 1301, 326, 1300, 0, 1311, 327,
	328, 329, 330, 331, 332, 333, 1247, 1280, 0, 334,
	1341, 1342, 721, 0, 335, 336, 1287, 0, 1268, 0,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 0,
	346, 347, 348, 345, 349, 0, 350, 0, 351, 352,
	353, 354, 355, 356, 357, 0, 358, 359, 360, 1322,
	361, 362, 363, 1271, 1269, 1270, 1277, 1273, 1272, 1276,
	364, 365, 366, 367, 368, 1304, 369, 371, 1298, 1297,
	0, 374, 376, 370, 372, 0, 375, 373, 377, 0,
	378, 379, 380, 0, 0, 381, 1289, 383, 0, 384,
	385, 386, 0, 387, 388, 389, 0, 390, 391, 1223,
	392, 393, 394, 396, 398, 395, 397, 399, 400, 401,
	402, 403, 1312, 1313, 404, 1236, 301, 0, 0, 0,
	0, 0, 405, 406, 407, 1296, 0, 0, 0, 408,
	0, 409, 410, 411, 0, 412, 413, 0, 1323, 414,
	415, 416, 1309, 1310, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 0, 426, 1319, 0, 1246, 427, 0,
	428, 429, 430, 431, 432, 433, 434, 1282, 1283, 1286,
	527, 1325, 435, 436, 437, 0, 438, 439, 440, 441,
	442, 0, 0, 0, 302, 443, 444, 445, 0, 1324,
	736, 446, 528, 447, 1291, 1292, 0, 1252, 0, 448,
	449, 451, 1326, 1284, 1327, 450, 452, 453, 1328, 454,
	0, 0, 0, 455, 456, 457, 458, 459, 460, 0,
	461, 463, 462, 0, 465, 1320, 464, 1329, 466, 467,
	1330, 0, 468, 469, 470, 471, 472, 473, 476, 1275,
	1274, 474, 475, 477, 478, 0, 479, 480, 482, 485,
	481, 483, 484, 486, 499, 500, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 502, 0,
	501, 1331, 503, 504, 505, 506, 507, 514, 516, 517,
	512, 513, 515, 518, 519, 521, 509, 510, 511, 1332,
	520, 508, 0, 303, 1333, 522, 523, 524, 525, 1237,
	1285, 526, 1299, 529, 530, 0, 0, 531, 0, 532,
	0, 0, 534, 535, 536, 0, 0, 537, 538, 744,
	1334, 539, 1335, 1314, 540, 541, 1224, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 0, 552, 553,
	746, 554, 555, 556, 747, 557, 558, 559, 1315, 560,
	749, 561, 562, 0, 563, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 1295, 574, 575, 577,
	576, 578, 0, 579, 0, 580, 581, 582, 0, 0,
	0, 0, 0, 583, 584, 586, 0, 587, 588, 589,
	590, 585, 591, 592, 593, 594, 595, 596, 0, 598,
	599, 597, 600, 601, 1336, 602, 603, 604, 605, 606,
	1225, 607, 0, 608, 609, 616, 617, 618, 610, 611,
	612, 619, 620, 621, 622, 623, 624, 0, 626, 627,
	625, 628, 629, 630, 1278, 631, 752, 632, 613, 614,
	633, 634, 1337, 635, 636, 637, 638, 639, 640, 641,
	1293, 0, 642, 0, 643, 644, 645, 646, 647, 648,
	650, 615, 651, 656, 657, 1340, 652, 653, 654, 655,
	1316, 659, 660, 661, 662, 0, 663, 664, 0, 658,
	649, 0, 665, 666, 667, 668, 669, 670, 0, 671,
	672, 0, 673, 1305, 1306, 1307, 1308, 0, 685, 0,
	674, 676, 677, 678, 679, 1317, 680, 1318, 1235, 681,
	682, 683, 684, 675, 686, 687, 0, 0, 688, 689,
	691, 693, 694, 690, 692, 695, 1279, 696, 0, 0,
	697, 698, 699, 762, 1302, 1339, 0, 701, 700, 702,
	703, 704, 765, 705, 706, 707, 0, 0, 0, 0,
	708, 709, 766, 710, 711, 712, 0, 0, 0, 0,
	0, 0, 0, 1257, 1229, 1230, 1231, 1227, 1228, 1240,
	0, 2958, 0, 0, 0, 0, 0, 0, 2956, 2957,
	304, 305, 307, 306, 308, 309, 310, 311, 1241, 312,
	313, 0, 1239, 0, 0, 0, 1281, 1245, 0, 0,
	314, 0, 315, 316, 317, 1321, 318, 319, 320, 321,
	322, 323, 324, 714, 1294, 0, 325, 1301, 326, 1300,
	0, 1311, 327, 328, 329, 330, 331, 332, 333, 1247,
	1280, 0, 334, 1341, 1342, 721, 0, 335, 336, 1287,
	0, 1268, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 1322, 361, 362, 363, 1271, 1269, 1270, 1277,
	1273, 1272, 1276, 364, 365, 366, 367, 368, 1304, 369,
	371, 1298, 1297, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 1289,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 1223, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 1312, 1313, 404, 1236, 301,
	0, 0, 0, 0, 0, 405, 406, 407, 1296, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 1323, 414, 415, 416, 1309, 1310, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 1319, 0,
	1246, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	1282, 1283, 1286, 527, 1325, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 302, 443, 444,
	445, 0, 1324, 736, 446, 528, 447, 1291, 1292, 0,
	1252, 0, 448, 449, 451, 1326, 1284, 1327, 450, 452,
	453, 1328, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 1320, 464,
	1329, 466, 467, 1330, 0, 468, 469, 470, 471, 472,
	473, 476, 1275, 1274, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 1331, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 1332, 520, 508, 0, 303, 1333, 522, 523,
	524, 525, 1237, 1285, 526, 1299, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 1334, 539, 1335, 1314, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 1315, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 1295,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 1336, 602, 603,
	604, 605, 606, 3490, 3491, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 1278, 631, 752,
	632, 613, 614, 633, 634, 1337, 635, 636, 637, 638,
	639, 640, 641, 1293, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 1340, 652,
	653, 654, 655, 1316, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 1305, 1306, 1307, 1308,
	0, 685, 0, 674, 676, 677, 678, 679, 1317, 680,
	1318, 1235, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 1279,
	696, 0, 0, 697, 698, 699, 762, 1302, 1339, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 0,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 0,
	0, 0, 0, 0, 0, 0, 1257, 1229, 1230, 1231,
	1227, 1228, 1240, 0, 0, 0, 0, 0, 0, 0,
	0, 2317, 2318, 304, 305, 307, 306, 308, 309, 310,
	311, 1241, 312, 313, 0, 1239, 0, 0, 0, 1281,
	1245, 0, 0, 314, 0, 315, 316, 317, 1321, 318,
	319, 320, 321, 322, 323, 324, 0, 1294, 0, 325,
	1301, 326, 1300, 0, 1311, 327, 328, 329, 330, 331,
	332, 333, 1247, 1280, 1212, 334, 1341, 1342, 721, 0,
	335, 336, 1287, 0, 1268, 0, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 0, 346, 347, 348, 345,
	349, 0, 350, 0, 351, 352, 353, 354, 355, 356,
	357, 0, 358, 359, 360, 1322, 361, 362, 5253, 1271,
	1269, 1270, 1277, 1273, 1272, 1276, 364, 365, 366, 367,
	368, 1304, 369, 371, 1298, 1297, 1217, 374, 376, 370,
	372, 0, 375, 373, 377, 0, 378, 379, 380, 0,
	0, 381, 1289, 383, 0, 384, 385, 386, 0, 387,
	388, 389, 0, 390, 391, 1223, 392, 393, 394, 396,
	398, 395, 397, 399, 400, 401, 402, 403, 1312, 1313,
	404, 1236, 301, 0, 0, 0, 0, 0, 405, 406,
	407, 1296, 0, 0, 0, 408, 0, 409, 410, 411,
	0, 412, 413, 0, 1323, 414, 415, 416, 1309, 1310,
	417, 418, 419, 420, 421, 422, 423, 424, 425, 0,
	426, 1319, 0, 1246, 427, 0, 428, 429, 430, 431,
	432, 433, 434, 1282, 1283, 1286, 527, 0, 435, 436,
	437, 0, 438, 439, 440, 441, 442, 0, 0, 0,
	302, 443, 444, 445, 0, 1324, 736, 446, 528, 447,
	1291, 1292, 0, 1252, 0, 448, 449, 451, 0, 1284,
	0, 450, 452, 453, 1328, 454, 0, 0, 0, 455,
	456, 457, 458, 459, 460, 0, 461, 463, 462, 0,
	465, 1320, 464, 1329, 466, 467, 0, 0, 468, 469,
	470, 471, 472, 473, 476, 1275, 1274, 474, 475, 477,
	478, 0, 479, 480, 482, 485, 481, 483, 484, 486,
	499, 500, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 502, 0, 501, 1331, 503, 504,
	505, 506, 507, 514, 516, 517, 512, 513, 515, 518,
	519, 521, 509, 510, 511, 1332, 520, 508, 1214, 303,
	0, 522, 523, 524, 525, 1237, 1285, 526, 1299, 529,
	530, 0, 0, 531, 0, 532, 0, 0, 534, 535,
	536, 0, 0, 537, 538, 744, 1334, 539, 1335, 1314,
	540, 541, 1224, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 0, 552, 553, 746, 554, 555, 556,
	747, 557, 558, 559, 1315, 560, 749, 561, 562, 0,
	563, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 573, 1295, 574, 575, 577, 576, 578, 0, 579,
	0, 580, 581, 582, 0, 0, 0, 0, 0, 583,
	584, 586, 0, 587, 588, 589, 590, 585, 591, 592,
	593, 594, 595, 596, 0, 598, 599, 597, 600, 601,
	1336, 602, 603, 604, 605, 606, 1225, 607, 0, 608,
	609, 616, 617, 618, 610, 611, 612, 619, 620, 621,
	622, 623, 624, 0, 626, 627, 625, 628, 629, 630,
	1278, 631, 752, 632, 613, 614, 633, 634, 0, 635,
	636, 637, 638, 639, 640, 641, 1293, 0, 642, 0,
	643, 644, 645, 646, 647, 648, 650, 615, 651, 656,
	657, 1340, 652, 653, 654, 655, 1316, 659, 660, 661,
	662, 0, 663, 664, 1211, 658, 649, 0, 665, 666,
	667, 668, 669, 670, 0, 671, 672, 0, 673, 1305,
	1306, 1307, 1308, 0, 685, 0, 674, 676, 677, 678,
	679, 1317, 680, 1318, 1235, 681, 682, 683, 684, 675,
	5252, 687, 0, 1218, 688, 689, 691, 693, 694, 690,
	692, 695, 1279, 696, 0, 0, 697, 698, 699, 762,
	1302, 1339, 0, 701, 700, 702, 703, 704, 765, 705,
	706, 707, 0, 0, 0, 0, 708, 709, 766, 710,
	711, 712, 0, 0, 0, 0, 0, 2977, 0, 1257,
	1229, 1230, 1231, 1227, 1228, 1240, 0, 0, 0, 0,
	0, 0, 0, 0, 1208, 1209, 304, 305, 307, 306,
	308, 309, 310, 311, 1241, 312, 313, 0, 1239, 0,
	0, 0, 1281, 1245, 0, 0, 314, 0, 315, 316,
	317, 1321, 318, 319, 320, 321, 322, 323, 324, 714,
	1294, 0, 325, 1301, 326, 1300, 0, 1311, 327, 328,
	329, 330, 331, 332, 333, 0, 1280, 0, 334, 1341,
	1342, 721, 0, 335, 336, 1287, 0, 1268, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 1322, 361,
	362, 363, 1271, 1269, 1270, 1277, 1273, 1272, 1276, 364,
	365, 366, 367, 368, 1304, 369, 371, 1298, 1297, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 1289, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 1312, 1313, 404, 1236, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 1296, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 1323, 414, 415,
	416, 1309, 1310, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 1319, 0, 1246, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 1282, 1283, 1286, 527,
	1325, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 0, 1324, 736,
	446, 528, 447, 1291, 1292, 0, 1252, 0, 448, 449,
	451, 1326, 1284, 1327, 450, 452, 453, 1328, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 1320, 464, 1329, 466, 467, 1330,
	0, 468, 469, 470, 471, 472, 473, 476, 1275, 1274,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	1331, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 1332, 520,
	508, 0, 303, 1333, 522, 523, 524, 525, 1237, 1285,
	526, 1299, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 1334,
	539, 1335, 1314, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 1315, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 1295, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 1336, 602, 603, 604, 605, 606, 1225,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 1278, 631, 752, 632, 613, 614, 633,
	634, 1337, 635, 636, 637, 638, 639, 640, 641, 1293,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 1340, 652, 653, 654, 655, 1316,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 1305, 1306, 1307, 1308, 0, 685, 0, 674,
	676, 677, 678, 679, 1317, 680, 1318, 1235, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 1279, 696, 0, 0, 697,
	698, 699, 762, 1302, 1339, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 0, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 1669, 0, 1257,
	1229, 1230, 1231, 1227, 1228, 1240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 1241, 0, 0,
	0, 1239, 1281, 1245, 0, 0, 314, 0, 315, 316,
	317, 1321, 318, 319, 320, 321, 322, 323, 324, 714,
	1294, 0, 325, 1301, 326, 1300, 0, 1311, 327, 328,
	329, 330, 331, 332, 333, 0, 1280, 0, 334, 1341,
	1342, 721, 0, 335, 336, 1287, 0, 1268, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 1322, 361,
	362, 363, 1271, 1269, 1270, 1277, 1273, 1272, 1276, 364,
	365, 366, 367, 368, 1304, 369, 371, 1298, 1297, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 1289, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 1312, 1313, 404, 1236, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 1296, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 1323, 414, 415,
	416, 1309, 1310, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 1319, 0, 1246, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 1282, 1283, 1286, 527,
	1325, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 0, 1324, 736,
	446, 528, 447, 1291, 1292, 0, 1252, 0, 448, 449,
	451, 1326, 1284, 1327, 450, 452, 453, 1328, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 1320, 464, 1329, 466, 467, 1330,
	0, 468, 469, 470, 471, 472, 473, 476, 1275, 1274,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	1331, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 1332, 520,
	508, 0, 303, 1333, 522, 523, 524, 525, 1237, 1285,
	526, 1299, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 1334,
	539, 1335, 1314, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 1315, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 1295, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 1336, 602, 603, 604, 605, 606, 1225,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 1278, 631, 752, 632, 613, 614, 633,
	634, 1337, 635, 636, 637, 638, 639, 640, 641, 1293,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 1340, 652, 653, 654, 655, 1316,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 1305, 1306, 1307, 1308, 0, 685, 0, 674,
	676, 677, 678, 679, 1317, 680, 1318, 1235, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 1279, 696, 0, 0, 697,
	698, 699, 762, 1302, 1339, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 0, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 1199, 0, 1380, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 1241, 0, 0,
	1281, 1239, 0, 0, 314, 0, 315, 316, 317, 1321,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 1280, 0, 334, 719, 720, 721,
	0, 335, 336, 1287, 0, 1268, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 1322, 361, 362, 363,
	1271, 1269, 1270, 1277, 1273, 1272, 1276, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 1312,
	1313, 404, 0, 301, 0, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 1323, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 1319, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 1282, 1283, 1286, 527, 1325, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 302, 443, 444, 445, 0, 1324, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 1326,
	1284, 1327, 450, 452, 453, 1328, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 1366, 461, 463, 462,
	0, 465, 1320, 464, 1329, 466, 467, 1330, 0, 468,
	469, 470, 471, 472, 473, 476, 1275, 1274, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 1331, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 1332, 520, 508, 0,
	303, 1333, 522, 523, 524, 525, 0, 1285, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 1372, 534,
	535, 536, 0, 0, 537, 538, 744, 1334, 539, 1335,
	1314, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 1315, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 1336, 602, 603, 604, 605, 606, 751, 1374, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 257, 626, 627, 625, 628, 629,
	630, 1278, 631, 752, 632, 613, 614, 633, 634, 1337,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 1316, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 259, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 1317, 680, 1318, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 1279, 696, 0, 0, 697, 698, 699,
	1788, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 0, 0, 0, 251, 708, 709, 766,
	710, 711, 712, 1380, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 0, 0, 1370, 0, 2151, 1281, 0, 0, 0,
	314, 0, 315, 316, 317, 1321, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	1280, 0, 334, 719, 720, 721, 0, 335, 336, 1287,
	0, 1268, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 1322, 361, 362, 363, 1271, 1269, 1270, 1277,
	1273, 1272, 1276, 364, 365, 366, 367, 368, 0, 369,
	371, 723, 724, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 1312, 1313, 404, 0, 301,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 1323, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 1319, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	1282, 1283, 1286, 527, 1325, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 302, 443, 444,
	445, 0, 1324, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 1326, 1284, 1327, 450, 452,
	453, 1328, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 1366, 461, 463, 462, 0, 465, 1320, 464,
	1329, 466, 467, 1330, 0, 468, 469, 470, 471, 472,
	473, 476, 1275, 1274, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 1331, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 1332, 520, 508, 0, 303, 1333, 522, 523,
	524, 525, 0, 1285, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 1372, 534, 535, 536, 0, 0,
	537, 538, 744, 1334, 539, 1335, 1314, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 1315, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 1336, 602, 603,
	604, 605, 606, 751, 1374, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	257, 626, 627, 625, 628, 629, 630, 1278, 631, 752,
	632, 613, 614, 633, 634, 1337, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 1316, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 259, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 756, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 1317, 680,
	1318, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 1279,
	696, 0, 0, 697, 698, 699, 1788, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 0,
	0, 0, 251, 708, 709, 766, 710, 711, 712, 0,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3655, 0, 1380, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1370,
	0, 2151, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 1281, 0,
	0, 0, 314, 0, 315, 316, 317, 1321, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 1280, 0, 334, 719, 720, 721, 0, 335,
	336, 1287, 0, 1268, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 1322, 361, 362, 363, 1271, 1269,
	1270, 1277, 1273, 1272, 1276, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 1312, 1313, 404,
	0, 301, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 1323, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	1319, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 1282, 1283, 1286, 527, 1325, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 0, 1324, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 1326, 1284, 1327,
	450, 452, 453, 1328, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 1366, 461, 463, 462, 0, 465,
	1320, 464, 1329, 466, 467, 1330, 0, 468, 469, 470,
	471, 472, 473, 476, 1275, 1274, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 1331, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 1332, 520, 508, 0, 303, 1333,
	522, 523, 524, 525, 0, 1285, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 1372, 534, 535, 536,
	0, 0, 537, 538, 744, 1334, 539, 1335, 1314, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 1315, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 1336,
	602, 603, 604, 605, 606, 751, 1374, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 1278,
	631, 752, 632, 613, 614, 633, 634, 1337, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 1316, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	1317, 680, 1318, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 1279, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 0, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 1362, 0, 1380, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 1370, 0, 1368, 0, 0, 1281, 0, 0, 0,
	314, 0, 315, 316, 317, 1321, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	1280, 0, 334, 719, 720, 721, 0, 335, 336, 1287,
	0, 1268, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 1322, 361, 362, 363, 1271, 1269, 1270, 1277,
	1273, 1272, 1276, 364, 365, 366, 367, 368, 0, 369,
	371, 723, 724, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 1312, 1313, 404, 0, 301,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 1323, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 1319, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	1282, 1283, 1286, 527, 1325, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 302, 443, 444,
	445, 0, 1324, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 1326, 1284, 1327, 450, 452,
	453, 1328, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 1366, 461, 463, 462, 0, 465, 1320, 464,
	1329, 466, 467, 1330, 0, 468, 469, 470, 471, 472,
	473, 476, 1275, 1274, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 1331, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 1332, 520, 508, 0, 303, 1333, 522, 523,
	524, 525, 0, 1285, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 1372, 534, 535, 536, 0, 0,
	537, 538, 744, 1334, 539, 1335, 1314, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 1315, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 1336, 602, 603,
	604, 605, 606, 751, 1374, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 1278, 631, 752,
	632, 613, 614, 633, 634, 1337, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 1316, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 756, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 1317, 680,
	1318, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 1279,
	696, 0, 0, 697, 698, 699, 762, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 0,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 1380,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 1370,
	0, 1368, 1281, 0, 0, 0, 314, 0, 315, 316,
	317, 1321, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 1280, 0, 334, 719,
	720, 721, 0, 335, 336, 1287, 0, 1268, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 1322, 361,
	362, 363, 1271, 1269, 1270, 1277, 1273, 1272, 1276, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 1312, 1313, 404, 0, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 1323, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 1319, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 1282, 1283, 1286, 527,
	1325, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 0, 1324, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 1326, 1284, 1327, 450, 452, 453, 1328, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 1366, 461,
	463, 462, 0, 465, 1320, 464, 1329, 466, 467, 1330,
	0, 468, 469, 470, 471, 472, 473, 476, 1275, 1274,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	1331, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 1332, 520,
	508, 0, 303, 1333, 522, 523, 524, 525, 0, 1285,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	1372, 534, 535, 536, 0, 0, 537, 538, 744, 1334,
	539, 1335, 1314, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 1315, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 1336, 602, 603, 604, 605, 606, 751,
	1374, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 1278, 631, 752, 632, 613, 614, 633,
	634, 1337, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 1316,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 1317, 680, 1318, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 1279, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 0, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 1380, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 1370, 0, 1368, 1281, 0,
	0, 0, 314, 0, 315, 316, 317, 1321, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 1280, 0, 334, 719, 720, 721, 0, 335,
	336, 1287, 0, 1268, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 1322, 361, 362, 363, 1271, 1269,
	1270, 1277, 1273, 1272, 1276, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 1312, 1313, 404,
	0, 301, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 1323, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	1319, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 1282, 1283, 1286, 527, 1325, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 0, 1324, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 1326, 1284, 1327,
	450, 452, 453, 1328, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	1320, 464, 1329, 466, 467, 1330, 0, 468, 469, 470,
	471, 472, 473, 476, 1275, 1274, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 1331, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 1332, 520, 508, 0, 303, 1333,
	522, 523, 524, 525, 0, 1285, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 1334, 539, 1335, 1314, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 1315, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 1336,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 1278,
	631, 752, 632, 613, 614, 633, 634, 1337, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 1316, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	1317, 680, 1318, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 1279, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 0, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 1380, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 4628, 1281, 0, 0, 0, 314, 0,
	315, 316, 317, 1321, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 0, 718,
	327, 328, 329, 330, 331, 332, 333, 0, 1280, 0,
	334, 719, 720, 721, 0, 335, 336, 1287, 0, 1268,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	1322, 361, 362, 363, 1271, 1269, 1270, 1277, 1273, 1272,
	1276, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 1312, 1313, 404, 0, 301, 0, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 1323,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 1319, 0, 732, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 1282, 1283,
	1286, 527, 1325, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 302, 443, 444, 445, 0,
	1324, 736, 446, 528, 447, 737, 738, 0, 739, 0,
	448, 449, 451, 1326, 1284, 1327, 450, 452, 453, 1328,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 1320, 464, 1329, 466,
	467, 1330, 0, 468, 469, 470, 471, 472, 473, 476,
	1275, 1274, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 1331, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	1332, 520, 508, 0, 303, 1333, 522, 523, 524, 525,
	0, 1285, 526, 743, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 1334, 539, 1335, 1314, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 1315,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 1336, 602, 603, 604, 605,
	606, 751, 1374, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 1278, 631, 752, 632, 613,
	614, 633, 634, 1337, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 1316, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 756, 757, 758, 759, 0, 685,
	0, 674, 676, 677, 678, 679, 1317, 680, 1318, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 1279, 696, 0,
	0, 697, 698, 699, 762, 763, 764, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 298, 0, 0,
	0, 708, 709, 766, 710, 711, 712, 2803, 2804, 2805,
	2822, 2823, 2824, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 2825, 0,
	713, 0, 0, 0, 314, 0, 315, 316, 317, 2047,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 2032, 334, 719, 720, 721,
	0, 335, 336, 722, 0, 0, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 2815, 0, 346, 347, 348,
	345, 349, 0, 350, 2811, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 0, 0, 2816, 2817, 2818, 2819, 405,
	406, 407, 728, 0, 0, 2810, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 0, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 733, 734, 735, 527, 0, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 0, 443, 444, 445, 0, 0, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 0,
	740, 0, 450, 452, 453, 0, 454, 0, 2820, 2821,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 741, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 2813, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 0, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 0, 520, 508, 0,
	0, 0, 522, 523, 524, 525, 0, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 0, 539, 0,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 0, 602, 603, 604, 605, 606, 751, 607, 2814,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 0,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 2031, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	762, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 0, 0, 0, 0, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1199, 0, 1664, 2800, 2801, 2802, 2826, 2812,
	2806, 0, 2808, 2809, 2807, 2794, 2795, 2796, 2797, 2798,
	2799, 304, 305, 307, 306, 308, 309, 310, 311, 0,
	312, 313, 0, 0, 0, 0, 0, 713, 0, 0,
	0, 314, 0, 315, 316, 317, 1321, 318, 319, 320,
	321, 322, 323, 324, 714, 715, 0, 325, 716, 326,
	717, 0, 718, 327, 328, 329, 330, 331, 332, 333,
	0, 0, 0, 334, 719, 720, 721, 0, 335, 336,
	722, 0, 1628, 0, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 0, 346, 347, 348, 345, 349, 0,
	350, 0, 351, 352, 353, 354, 355, 356, 357, 0,
	358, 359, 360, 1322, 361, 362, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 367, 368, 0,
	369, 371, 723, 724, 0, 374, 376, 370, 372, 0,
	375, 373, 377, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 0, 384, 385, 386, 0, 387, 388, 389,
	0, 390, 391, 725, 392, 393, 394, 396, 398, 395,
	397, 399, 400, 401, 402, 403, 726, 727, 404, 0,
	301, 0, 0, 0, 0, 0, 405, 406, 407, 728,
	0, 0, 0, 408, 0, 409, 410, 411, 0, 412,
	413, 0, 1323, 414, 415, 416, 729, 730, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 0, 426, 731,
	0, 732, 427, 0, 428, 429, 430, 431, 432, 433,
	434, 733, 734, 735, 527, 1325, 435, 436, 437, 0,
	438, 439, 440, 441, 442, 0, 0, 0, 0, 443,
	444, 445, 0, 1324, 736, 446, 528, 447, 737, 738,
	0, 739, 0, 448, 449, 451, 1326, 740, 1327, 450,
	452, 453, 1328, 454, 0, 0, 0, 455, 456, 457,
	458, 459, 460, 0, 461, 463, 462, 0, 465, 741,
	464, 1329, 466, 467, 1330, 0, 468, 469, 470, 471,
	472, 473, 476, 0, 0, 474, 475, 477, 478, 0,
	479, 480, 482, 485, 481, 483, 484, 486, 499, 500,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 502, 0, 501, 1331, 503, 504, 505, 506,
	507, 514, 516, 517, 512, 513, 515, 518, 519, 521,
	509, 510, 511, 1332, 520, 508, 0, 0, 1333, 522,
	523, 524, 525, 0, 742, 526, 743, 529, 530, 0,
	0, 531, 0, 532, 0, 0, 534, 535, 536, 0,
	0, 537, 538, 744, 1334, 539, 1335, 745, 540, 541,
	533, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 0, 552, 553, 746, 554, 555, 556, 747, 557,
	558, 559, 748, 560, 749, 561, 562, 0, 563, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 573,
	750, 574, 575, 577, 576, 578, 0, 579, 0, 580,
	581, 582, 0, 0, 0, 0, 0, 583, 584, 586,
	0, 587, 588, 589, 590, 585, 591, 592, 593, 594,
	595, 596, 0, 598, 599, 597, 600, 601, 1336, 602,
	603, 604, 605, 606, 751, 607, 0, 608, 609, 616,
	617, 618, 610, 611, 612, 619, 620, 621, 622, 623,
	624, 257, 626, 627, 625, 628, 629, 630, 0, 631,
	752, 632, 613, 614, 633, 634, 1337, 635, 636, 637,
	638, 639, 640, 641, 753, 0, 642, 0, 643, 644,
	645, 646, 647, 648, 650, 615, 651, 656, 657, 754,
	652, 653, 654, 655, 755, 659, 660, 661, 662, 0,
	663, 664, 0, 658, 649, 259, 665, 666, 667, 668,
	669, 670, 0, 671, 672, 0, 673, 756, 757, 758,
	759, 0, 685, 0, 674, 676, 677, 678, 679, 760,
	680, 761, 0, 681, 682, 683, 684, 675, 686, 687,
	0, 0, 688, 689, 691, 693, 694, 690, 692, 695,
	0, 696, 0, 0, 697, 698, 699, 1788, 763, 764,
	0, 701, 700, 702, 703, 704, 765, 705, 706, 707,
	0, 0, 0, 251, 708, 709, 766, 710, 711, 712,
	0, 1785, 252, 1664, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 0, 207, 0, 0, 0, 713, 0, 0, 0,
	314, 0, 315, 316, 317, 1321, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	0, 0, 334, 719, 720, 721, 0, 335, 336, 722,
	0, 1628, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 1322, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 367, 368, 0, 369,
	371, 723, 724, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 726, 727, 404, 0, 301,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 1323, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 731, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	733, 734, 735, 527, 1325, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 0, 443, 444,
	445, 0, 1324, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 1326, 740, 1327, 450, 452,
	453, 1328, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 741, 464,
	1329, 466, 467, 1330, 0, 468, 469, 470, 471, 472,
	473, 476, 0, 0, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 1331, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 1332, 520, 508, 0, 0, 1333, 522, 523,
	524, 525, 0, 742, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 1334, 539, 1335, 745, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 748, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 1336, 602, 603,
	604, 605, 606, 751, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	257, 626, 627, 625, 628, 629, 630, 0, 631, 752,
	632, 613, 614, 633, 634, 1337, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 755, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 259, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 756, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 760, 680,
	761, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 0,
	696, 0, 0, 697, 698, 699, 1788, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 0,
	0, 0, 251, 708, 709, 766, 710, 711, 712, 1664,
	1663, 252, 0, 0, 0, 1661, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 207, 713, 0, 0, 0, 314, 0, 315, 316,
	317, 1321, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 721, 0, 335, 336, 722, 0, 1628, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 1322, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 1323, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 731, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 733, 734, 735, 527,
	1325, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 0, 443, 444, 445, 0, 1324, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 1326, 740, 1327, 450, 452, 453, 1328, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 1329, 466, 467, 1330,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	1331, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 1332, 520,
	508, 0, 0, 1333, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 1334,
	539, 1335, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 1336, 602, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 1337, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 0, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 1664, 1663, 0, 0, 0,
	0, 1661, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 1812, 713, 0,
	0, 0, 314, 0, 315, 316, 317, 1321, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 0, 335,
	336, 722, 0, 1628, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 1322, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 301, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 1323, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 733, 734, 735, 527, 1325, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 0,
	443, 444, 445, 0, 1324, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 1326, 740, 1327,
	450, 452, 453, 1328, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	741, 464, 1329, 466, 467, 1330, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 1331, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 1332, 520, 508, 0, 0, 1333,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 1334, 539, 1335, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 1336,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 1337, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 0, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 1664, 1663, 0, 0, 0, 0, 1661, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 4009, 713, 0, 0, 0, 314, 0,
	315, 316, 317, 1321, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 0, 718,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 719, 720, 721, 0, 335, 336, 722, 0, 1628,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	1322, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 0, 301, 0, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 1323,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 731, 0, 732, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 733, 734,
	735, 527, 1325, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 0, 443, 444, 445, 0,
	1324, 736, 446, 528, 447, 737, 738, 0, 739, 0,
	448, 449, 451, 1326, 740, 1327, 450, 452, 453, 1328,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 741, 464, 1329, 466,
	467, 1330, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 1331, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	1332, 520, 508, 0, 0, 1333, 522, 523, 524, 525,
	0, 742, 526, 743, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 1334, 539, 1335, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 2559, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 1336, 602, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 0, 631, 752, 632, 613,
	614, 633, 634, 1337, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 756, 757, 758, 759, 0, 685,
	0, 674, 676, 677, 678, 679, 760, 680, 761, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 762, 763, 764, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 0, 0, 0,
	0, 708, 709, 766, 710, 711, 712, 1664, 2466, 0,
	0, 0, 0, 2467, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 1812,
	713, 0, 0, 0, 314, 0, 315, 316, 317, 1321,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 719, 720, 721,
	0, 335, 336, 722, 0, 1628, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 1322, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 301, 0, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 1323, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 733, 734, 735, 527, 1325, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 0, 443, 444, 445, 0, 1324, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 1326,
	740, 1327, 450, 452, 453, 1328, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 2465, 463, 462,
	0, 465, 741, 464, 1329, 466, 467, 1330, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 1331, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 1332, 520, 508, 0,
	0, 1333, 522, 523, 524, 525, 0, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 1334, 539, 1335,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 1336, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 1337,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	762, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 0, 0, 0, 0, 708, 709, 766,
	710, 711, 712, 1664, 1663, 0, 0, 0, 0, 1661,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 0, 0, 0, 0, 1812, 713, 0, 0, 0,
	314, 0, 315, 316, 317, 1321, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	0, 0, 334, 719, 720, 721, 0, 335, 336, 722,
	0, 1628, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 1322, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 367, 368, 0, 369,
	371, 723, 724, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 726, 727, 404, 0, 301,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 1323, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 731, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	733, 734, 735, 527, 1325, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 0, 443, 444,
	445, 0, 1324, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 1326, 740, 1327, 450, 452,
	453, 1328, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 741, 464,
	1329, 466, 467, 1330, 0, 468, 469, 470, 471, 472,
	473, 476, 0, 0, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 1331, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 1332, 520, 508, 0, 0, 1333, 522, 523,
	524, 525, 0, 742, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 1334, 539, 1335, 745, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 748, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 1336, 602, 603,
	604, 605, 606, 751, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 0, 631, 752,
	632, 613, 614, 633, 634, 1337, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 755, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 756, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 760, 680,
	761, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 0,
	696, 0, 0, 697, 698, 699, 762, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 0,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 1199,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 1794, 0, 0, 713, 0, 0, 0, 314, 0,
	315, 316, 317, 0, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 0, 718,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 719, 720, 721, 0, 335, 336, 722, 0, 0,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 0,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 731, 0, 732, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 733, 734,
	735, 527, 0, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 0, 443, 444, 445, 0,
	0, 736, 446, 528, 447, 737, 738, 0, 739, 0,
	448, 449, 451, 0, 740, 0, 450, 452, 453, 0,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 741, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 0, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	0, 520, 508, 0, 0, 0, 522, 523, 524, 525,
	0, 742, 526, 743, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 0, 539, 0, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 0, 602, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 257, 626,
	627, 625, 628, 629, 630, 0, 631, 752, 632, 613,
	614, 633, 634, 0, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 259, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 756, 757, 758, 759, 0, 685,
	0, 674, 676, 677, 678, 679, 760, 680, 761, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 1788, 763, 764, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 298, 0, 0,
	251, 708, 709, 766, 710, 711, 712, 0, 0, 252,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 314, 0, 315, 316, 317, 207,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 719, 720, 721,
	0, 335, 336, 722, 0, 0, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 301, 0, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 0, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 733, 734, 735, 527, 0, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 302, 443, 444, 445, 0, 0, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 0,
	740, 0, 450, 452, 453, 0, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 741, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 0, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 0, 520, 508, 0,
	303, 0, 522, 523, 524, 525, 0, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 0, 539, 0,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 0, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 0,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	762, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 298, 3264, 0, 0, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 0, 0, 0, 0, 0, 713, 0, 0, 0,
	314, 0, 315, 316, 317, 2165, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	0, 0, 334, 719, 720, 721, 0, 335, 336, 722,
	0, 0, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 367, 368, 0, 369,
	371, 723, 724, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 726, 727, 404, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 0, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 731, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	733, 734, 735, 527, 0, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 0, 443, 444,
	445, 0, 0, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 0, 740, 0, 450, 452,
	453, 0, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 741, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 471, 472,
	473, 476, 0, 0, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 0, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 0, 520, 508, 0, 0, 0, 522, 523,
	524, 525, 0, 742, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 0, 539, 0, 745, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 748, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 0, 602, 603,
	604, 605, 606, 751, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 0, 631, 752,
	632, 613, 614, 633, 634, 0, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 755, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 756, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 760, 680,
	761, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 0,
	696, 0, 0, 697, 698, 699, 762, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 298,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 314, 0, 315, 316,
	317, 5446, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 721, 0, 335, 336, 722, 0, 0, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 0, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 731, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 733, 734, 735, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 0, 0, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 0, 740, 0, 450, 452, 453, 0, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	0, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 0, 520,
	508, 0, 303, 0, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 0,
	539, 0, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 0, 602, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 0, 0, 298, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 314, 1782, 315, 316, 317, 0,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 719, 720, 721,
	0, 335, 336, 722, 0, 0, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 301, 0, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 0, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 733, 734, 735, 527, 0, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 302, 443, 444, 445, 0, 0, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 0,
	740, 0, 450, 452, 453, 0, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 741, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 0, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 0, 520, 508, 0,
	303, 0, 522, 523, 524, 525, 0, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 0, 539, 0,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 0, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 0,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	762, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 0, 0, 298, 0, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 713, 0,
	0, 0, 314, 3960, 315, 316, 317, 0, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 0, 335,
	336, 722, 0, 0, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 0, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 733, 734, 735, 527, 0, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 0,
	443, 444, 445, 0, 0, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 0, 740, 0,
	450, 452, 453, 0, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	741, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 0, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 0, 520, 508, 0, 0, 0,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 0, 539, 0, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 0,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 0, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 0, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 3935, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 3386, 0, 0, 0, 0, 314, 0,
	315, 316, 317, 1321, 318, 319, 320, 321, 322, 323,
	324, 0, 2223, 0, 325, 2213, 326, 2229, 0, 2236,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 2239, 2240, 0, 0, 335, 336, 0, 0, 1628,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	1322, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 367, 368, 1304, 369, 371, 2227,
	2226, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 1289, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	0, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 0, 0, 404, 0, 301, 0, 0,
	0, 0, 0, 405, 406, 407, 2225, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 1323,
	414, 415, 416, 2234, 2235, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 0, 0, 0, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 0, 0,
	0, 527, 1325, 435, 436, 437, 3929, 438, 439, 440,
	441, 442, 0, 0, 0, 0, 443, 444, 445, 0,
	1324, 3931, 446, 528, 447, 2220, 2221, 0, 2216, 0,
	448, 449, 451, 1326, 0, 1327, 450, 452, 453, 1328,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 0, 464, 1329, 466,
	467, 1330, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 1331, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	1332, 520, 508, 0, 0, 1333, 522, 523, 524, 525,
	0, 0, 526, 2228, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	3930, 1334, 539, 1335, 0, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 2210, 554, 555, 556, 2211, 557, 558, 559, 0,
	560, 0, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 2224, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 1336, 602, 603, 604, 605,
	606, 0, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 0, 631, 0, 632, 613,
	614, 633, 634, 1337, 635, 636, 637, 638, 639, 640,
	641, 2222, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 2238, 652, 653, 654,
	655, 0, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 2230, 2231, 2232, 2233, 0, 685,
	0, 674, 676, 677, 678, 679, 0, 680, 0, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 0, 2214, 2237, 3932, 701, 700,
	702, 703, 704, 0, 705, 706, 707, 0, 0, 0,
	0, 708, 709, 0, 710, 711, 712, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	713, 0, 0, 2204, 314, 0, 315, 316, 317, 0,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 719, 720, 721,
	0, 335, 336, 722, 0, 0, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 0, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 733, 734, 735, 527, 0, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 0, 443, 444, 445, 0, 0, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 0,
	740, 0, 450, 452, 453, 0, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 741, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 0, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 0, 520, 508, 0,
	0, 0, 522, 523, 524, 525, 0, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 0, 539, 0,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 0, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 0,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	762, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 298, 0, 0, 0, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 0, 0, 0, 0, 0, 713, 0, 0, 0,
	314, 0, 315, 316, 317, 4124, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	0, 0, 334, 719, 720, 721, 0, 335, 336, 722,
	0, 0, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 367, 368, 0, 369,
	371, 723, 724, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 726, 727, 404, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 0, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 731, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	733, 734, 735, 527, 0, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 0, 443, 444,
	445, 0, 0, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 0, 740, 0, 450, 452,
	453, 0, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 741, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 471, 472,
	473, 476, 0, 0, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 0, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 0, 520, 508, 0, 0, 0, 522, 523,
	524, 525, 0, 742, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 0, 539, 0, 745, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 748, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 0, 602, 603,
	604, 605, 606, 751, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 0, 631, 752,
	632, 613, 614, 633, 634, 0, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 755, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 756, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 760, 680,
	761, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 0,
	696, 0, 0, 697, 698, 699, 762, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 0,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 1380,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 2546, 1281, 0, 0, 0, 314, 0, 315, 316,
	317, 1321, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 1280, 0, 334, 719,
	720, 721, 0, 335, 336, 1287, 0, 1268, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 1322, 361,
	362, 363, 1271, 1269, 1270, 1277, 1273, 1272, 1276, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 1312, 1313, 404, 0, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 1323, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 1319, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 1282, 1283, 1286, 527,
	1325, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 0, 1324, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 1326, 1284, 1327, 450, 452, 453, 1328, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 1320, 464, 1329, 466, 467, 1330,
	0, 468, 469, 470, 471, 472, 473, 476, 1275, 1274,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	1331, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 1332, 520,
	508, 0, 303, 1333, 522, 523, 524, 525, 0, 1285,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 1334,
	539, 1335, 1314, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 1315, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 1336, 602, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 1278, 631, 752, 632, 613, 614, 633,
	634, 1337, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 1316,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 1317, 680, 1318, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 1279, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 2217, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 315, 316, 317, 1321, 318, 319,
	320, 321, 322, 323, 324, 0, 2223, 0, 325, 2213,
	326, 2229, 0, 2236, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 2239, 2240, 0, 0, 335,
	336, 0, 0, 1628, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 1322, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	1304, 369, 371, 2227, 2226, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 1289, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 0, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 0, 0, 404,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 407,
	2225, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 1323, 414, 415, 416, 2234, 2235, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	0, 0, 0, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 0, 0, 0, 527, 1325, 435, 436, 437,
	3929, 438, 439, 440, 441, 442, 0, 0, 0, 0,
	443, 444, 445, 0, 1324, 3931, 446, 528, 447, 2220,
	2221, 0, 2216, 0, 448, 449, 451, 1326, 0, 1327,
	450, 452, 453, 1328, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	0, 464, 1329, 466, 467, 1330, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 1331, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 1332, 520, 508, 0, 0, 1333,
	522, 523, 524, 525, 0, 0, 526, 2228, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 3930, 1334, 539, 1335, 0, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 2210, 554, 555, 556, 2211,
	557, 558, 559, 0, 560, 0, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 2224, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 1336,
	602, 603, 604, 605, 606, 0, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 0,
	631, 0, 632, 613, 614, 633, 634, 1337, 635, 636,
	637, 638, 639, 640, 641, 2222, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	2238, 652, 653, 654, 655, 0, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 2230, 2231,
	2232, 2233, 0, 685, 0, 674, 676, 677, 678, 679,
	0, 680, 0, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 0, 2214,
	2237, 3932, 701, 700, 702, 703, 704, 0, 705, 706,
	707, 0, 0, 0, 0, 708, 709, 0, 710, 711,
	712, 1026, 0, 928, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 0, 0, 0, 0, 0, 713, 2204, 0, 0,
	314, 0, 315, 316, 317, 0, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	0, 0, 334, 719, 720, 721, 0, 335, 336, 722,
	0, 0, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 935, 368, 0, 369,
	371, 723, 724, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 726, 727, 404, 0, 301,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	1023, 0, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 731, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	733, 734, 735, 527, 0, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 302, 443, 444,
	445, 0, 0, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 0, 740, 0, 450, 452,
	453, 0, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 741, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 471, 472,
	473, 476, 0, 0, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 0, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 0, 520, 508, 0, 303, 0, 522, 523,
	524, 525, 0, 742, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 0, 539, 0, 745, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 748, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 0, 602, 603,
	604, 605, 606, 751, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 0, 631, 752,
	632, 613, 614, 633, 634, 0, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 755, 659, 660, 661, 662, 0, 663,
	1025, 0, 658, 649, 933, 665, 666, 667, 668, 669,
	934, 0, 671, 672, 0, 673, 756, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 760, 680,
	761, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 0,
	696, 0, 0, 697, 698, 699, 762, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 2188,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 4253, 312, 313, 0, 0, 0,
	0, 0, 713, 938, 0, 0, 314, 0, 315, 316,
	317, 0, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 721, 0, 335, 336, 722, 0, 0, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 2195, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 0, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 731, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 733, 734, 735, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 0, 0, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 0, 740, 0, 450, 452, 453, 0, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	0, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 0, 520,
	508, 0, 303, 0, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 0,
	539, 0, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 0, 602, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	4252, 620, 621, 622, 623, 624, 0, 2192, 627, 625,
	628, 629, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	2194, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	4251, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 2188, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	2244, 312, 313, 0, 0, 0, 0, 0, 713, 938,
	0, 0, 314, 0, 315, 316, 317, 0, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 0, 335,
	336, 722, 0, 0, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 2195, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 301, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 0, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 733, 734, 735, 527, 0, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 0, 0, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 0, 740, 0,
	450, 452, 453, 0, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	741, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 0, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 0, 520, 508, 0, 303, 0,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 0, 539, 0, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 0,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 2243, 620, 621, 622,
	623, 624, 0, 2245, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 0, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 2194, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 2242, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 2188, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 2187, 312, 313, 0,
	0, 0, 0, 0, 713, 938, 0, 0, 314, 0,
	315, 316, 317, 0, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 0, 718,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 719, 720, 721, 0, 335, 336, 722, 0, 0,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 2195, 368, 0, 369, 371, 723,
	724, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 0, 301, 0, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 0,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 731, 0, 732, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 733, 734,
	735, 527, 0, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 302, 443, 444, 445, 0,
	0, 736, 446, 528, 447, 737, 738, 0, 739, 0,
	448, 449, 451, 0, 740, 0, 450, 452, 453, 0,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 741, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 0, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	0, 520, 508, 0, 303, 0, 522, 523, 524, 525,
	0, 742, 526, 743, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 0, 539, 0, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 0, 602, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 2186, 620, 621, 622, 623, 624, 0, 2192,
	627, 625, 628, 629, 630, 0, 631, 752, 632, 613,
	614, 633, 634, 0, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 2194, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 756, 757, 758, 759, 0, 685,
	0, 674, 676, 677, 678, 679, 760, 680, 761, 0,
	681, 682, 2185, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 762, 763, 764, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 926, 0, 928,
	0, 708, 709, 766, 710, 711, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 938, 713, 0, 0, 0, 314, 0, 315, 316,
	317, 0, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 721, 0, 335, 336, 722, 0, 0, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 935, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 0, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 731, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 733, 734, 735, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 0, 0, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 0, 740, 0, 450, 452, 453, 0, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	0, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 0, 520,
	508, 0, 303, 0, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 0,
	539, 0, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 0, 602, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	933, 665, 666, 667, 668, 669, 934, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 3935, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 0, 938,
	0, 0, 314, 0, 315, 316, 317, 1321, 318, 319,
	320, 321, 322, 323, 324, 0, 2223, 0, 325, 2213,
	326, 2229, 0, 2236, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 2239, 2240, 0, 0, 335,
	336, 0, 0, 1628, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 1322, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	1304, 369, 371, 2227, 2226, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 1289, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 0, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 0, 0, 404,
	0, 301, 0, 0, 0, 0, 0, 405, 406, 407,
	2225, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 1323, 414, 415, 416, 2234, 2235, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	0, 0, 0, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 0, 0, 0, 527, 1325, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 0,
	443, 444, 445, 0, 1324, 0, 446, 528, 447, 2220,
	2221, 0, 2216, 0, 448, 449, 451, 1326, 0, 1327,
	450, 452, 453, 1328, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	0, 464, 1329, 466, 467, 1330, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 1331, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 1332, 520, 508, 0, 0, 1333,
	522, 523, 524, 525, 0, 0, 526, 2228, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 0, 1334, 539, 1335, 0, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 2210, 554, 555, 556, 2211,
	557, 558, 559, 0, 560, 0, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 2224, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 1336,
	602, 603, 604, 605, 606, 0, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 0,
	631, 0, 632, 613, 614, 633, 634, 1337, 635, 636,
	637, 638, 639, 640, 641, 2222, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	2238, 652, 653, 654, 655, 0, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 2230, 2231,
	2232, 2233, 0, 685, 0, 674, 676, 677, 678, 679,
	0, 680, 0, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 0, 2214,
	2237, 0, 701, 700, 702, 703, 704, 0, 705, 706,
	707, 0, 0, 0, 0, 708, 709, 0, 710, 711,
	712, 928, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 0, 713, 0, 0, 2204, 314, 0,
	315, 316, 317, 0, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 0, 718,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 719, 720, 721, 0, 335, 336, 722, 0, 0,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 935, 368, 0, 369, 371, 723,
	724, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 0, 301, 0, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 0,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 731, 0, 732, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 733, 734,
	735, 527, 0, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 302, 443, 444, 445, 0,
	0, 736, 446, 528, 447, 737, 738, 0, 739, 0,
	448, 449, 451, 0, 740, 0, 450, 452, 453, 0,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 741, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 0, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	0, 520, 508, 0, 303, 0, 522, 523, 524, 525,
	0, 742, 526, 743, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 0, 539, 0, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 0, 602, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 0, 631, 752, 632, 613,
	614, 633, 634, 0, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 933, 665, 666, 667, 668, 669, 934, 0,
	671, 672, 0, 673, 756, 757, 758, 759, 0, 685,
	0, 674, 676, 677, 678, 679, 760, 680, 761, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 762, 763, 764, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 3098, 0, 298,
	0, 708, 709, 766, 710, 711, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 938, 713, 0, 0, 0, 314, 0, 315, 316,
	317, 0, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 721, 0, 335, 336, 722, 0, 0, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 0, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 731, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 733, 734, 735, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 0, 0, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 0, 740, 0, 450, 452, 453, 0, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	0, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 0, 520,
	508, 0, 303, 0, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 0,
	539, 0, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 0, 602, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 2188, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 713, 938,
	0, 0, 314, 0, 315, 316, 317, 0, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 0, 335,
	336, 722, 0, 0, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 2195, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 301, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 0, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 733, 734, 735, 527, 0, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 0, 0, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 0, 740, 0,
	450, 452, 453, 0, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	741, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 0, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 0, 520, 508, 0, 303, 0,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 0, 539, 0, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 0,
	2599, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 2600, 620, 621, 622,
	623, 624, 0, 2192, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 0, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 2194, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 2601, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 2217, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 0, 0, 938, 0, 0, 314, 0,
	315, 316, 317, 1321, 318, 319, 320, 321, 322, 323,
	324, 0, 2223, 0, 325, 2213, 326, 2229, 0, 2236,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 2239, 2240, 0, 0, 335, 336, 0, 0, 1628,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	1322, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 367, 368, 1304, 369, 371, 2227,
	2226, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 1289, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	0, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 0, 0, 404, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 407, 2225, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 1323,
	414, 415, 416, 2234, 2235, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 0, 0, 0, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 0, 0,
	0, 527, 1325, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 0, 443, 444, 445, 0,
	1324, 0, 446, 528, 447, 2220, 2221, 0, 2216, 0,
	448, 449, 451, 1326, 0, 1327, 450, 452, 453, 1328,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 0, 464, 1329, 466,
	467, 1330, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 1331, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	1332, 520, 508, 0, 0, 1333, 522, 523, 524, 525,
	0, 0, 526, 2228, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	0, 1334, 539, 1335, 0, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 2210, 554, 555, 556, 2211, 557, 558, 559, 0,
	560, 0, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 2224, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 1336, 602, 603, 604, 605,
	606, 0, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 0, 631, 0, 632, 613,
	614, 633, 634, 1337, 635, 636, 637, 638, 639, 640,
	641, 2222, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 2238, 652, 653, 654,
	655, 0, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 2230, 2231, 2232, 2233, 0, 685,
	0, 674, 676, 677, 678, 679, 0, 680, 0, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 0, 2214, 2237, 0, 701, 700,
	702, 703, 704, 0, 705, 706, 707, 0, 0, 0,
	0, 708, 709, 0, 710, 711, 712, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	713, 0, 0, 2204, 314, 0, 315, 316, 317, 0,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 719, 720, 721,
	0, 335, 336, 722, 0, 0, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 301, 0, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 0, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 733, 734, 735, 527, 0, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 302, 443, 444, 445, 0, 0, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 0,
	740, 0, 450, 452, 453, 0, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 741, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 0, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 0, 520, 508, 0,
	303, 0, 522, 523, 524, 525, 0, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 0, 539, 0,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 0, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 0,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	762, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 298, 0, 0, 0, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 0, 0, 0, 0, 0, 713, 938, 0, 0,
	314, 0, 315, 316, 317, 0, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	0, 0, 334, 719, 720, 721, 0, 335, 336, 722,
	0, 0, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 367, 368, 0, 369,
	371, 723, 724, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 726, 727, 404, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 0, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 731, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	733, 734, 735, 527, 0, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 0, 443, 444,
	445, 0, 0, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 0, 740, 0, 450, 452,
	453, 0, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 741, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 471, 472,
	473, 476, 0, 0, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 0, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 0, 520, 508, 0, 0, 0, 522, 523,
	524, 525, 0, 742, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 0, 539, 0, 745, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 748, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 0, 602, 603,
	604, 605, 606, 751, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 0, 631, 752,
	632, 613, 614, 633, 634, 0, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 755, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 756, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 760, 680,
	761, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 0,
	696, 0, 0, 697, 698, 699, 762, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 0,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 0,
	0, 0, 0, 0, 0, 0, 0, 1664, 1663, 0,
	0, 0, 0, 1661, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4480, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 314, 0, 315, 316, 317, 1321,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 719, 720, 721,
	0, 335, 336, 722, 0, 1628, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 1322, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 301, 0, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 1323, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 733, 734, 735, 527, 1325, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 0, 443, 444, 445, 0, 1324, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 1326,
	740, 1327, 450, 452, 453, 1328, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 741, 464, 1329, 466, 467, 1330, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 1331, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 1332, 520, 508, 0,
	0, 1333, 522, 523, 524, 525, 4356, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 1334, 539, 1335,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 1336, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 1337,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	762, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 0, 0, 0, 0, 708, 709, 766,
	710, 711, 712, 1844, 0, 1664, 1663, 0, 0, 0,
	0, 1661, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 713, 0,
	0, 0, 314, 0, 315, 316, 317, 1321, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 0, 335,
	336, 722, 0, 1628, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 1322, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 301, 0, 0, 0, 0, 0, 1842, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 1323, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 733, 734, 735, 527, 1325, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 0,
	443, 444, 445, 0, 1324, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 1326, 740, 1327,
	450, 452, 453, 1328, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	741, 464, 1329, 466, 467, 1330, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 1331, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 1332, 520, 508, 0, 0, 1333,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 1334, 539, 1335, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 1843,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 1336,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 1841, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 1337, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 0, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 1714, 0, 1664, 1663, 0, 0, 0, 0, 1661,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 0, 0, 0, 0, 0, 713, 0, 0, 0,
	314, 0, 315, 316, 317, 1321, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	0, 0, 334, 719, 720, 721, 0, 335, 336, 722,
	0, 1628, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 1322, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 367, 368, 0, 369,
	371, 723, 724, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 726, 727, 404, 0, 301,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 1323, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 731, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	1716, 734, 735, 527, 1325, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 0, 443, 444,
	445, 0, 1324, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 1326, 740, 1327, 450, 452,
	453, 1328, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 741, 464,
	1329, 466, 467, 1330, 0, 468, 469, 470, 471, 472,
	473, 476, 0, 0, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 1331, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 1332, 520, 508, 0, 0, 1333, 522, 523,
	524, 525, 0, 742, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 1334, 539, 1335, 745, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 748, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 1336, 602, 603,
	604, 605, 606, 751, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 0, 631, 752,
	632, 613, 614, 633, 634, 1337, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 755, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 756, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 760, 680,
	761, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 0,
	696, 0, 0, 697, 698, 699, 762, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 0,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 1659,
	0, 1664, 1663, 0, 0, 0, 0, 1661, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 314, 0,
	315, 316, 317, 1321, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 0, 718,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 719, 720, 721, 0, 335, 336, 722, 0, 1628,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	1322, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 0, 301, 0, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 1323,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 731, 0, 732, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 733, 734,
	735, 527, 1325, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 0, 443, 444, 445, 0,
	1324, 736, 446, 528, 447, 737, 738, 0, 739, 0,
	448, 449, 451, 1326, 740, 1327, 450, 452, 453, 1328,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 741, 464, 1329, 466,
	467, 1330, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 1331, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	1332, 520, 508, 0, 0, 1333, 522, 523, 524, 525,
	0, 742, 526, 743, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 1334, 539, 1335, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 1336, 602, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 0, 631, 752, 632, 613,
	614, 633, 634, 1337, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 756, 757, 758, 759, 0, 685,
	0, 674, 676, 677, 678, 679, 760, 680, 761, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 762, 763, 764, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 0, 0, 0,
	0, 708, 709, 766, 710, 711, 712, 1664, 1663, 0,
	0, 0, 0, 1661, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 314, 0, 315, 316, 317, 1321,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 719, 720, 721,
	0, 335, 336, 722, 0, 1628, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 1322, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 301, 0, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 1323, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 733, 734, 735, 527, 1325, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 0, 443, 444, 445, 0, 1324, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 1326,
	740, 1327, 450, 452, 453, 1328, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 741, 464, 1329, 466, 467, 1330, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 1331, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 1332, 520, 508, 0,
	0, 1333, 522, 523, 524, 525, 0, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 1334, 539, 1335,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 1336, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 1337,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	762, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 1664, 1663, 0, 0, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 0, 0, 0, 0, 0, 713, 0, 0, 0,
	314, 0, 315, 316, 317, 1321, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	0, 0, 334, 719, 720, 721, 0, 335, 336, 722,
	0, 1628, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 1322, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 367, 368, 0, 369,
	371, 723, 724, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 726, 727, 404, 0, 301,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 1323, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 731, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	733, 734, 735, 527, 1325, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 0, 443, 444,
	445, 0, 1324, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 1326, 740, 1327, 450, 452,
	453, 1328, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 741, 464,
	1329, 466, 467, 1330, 0, 468, 469, 470, 471, 472,
	473, 476, 0, 0, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 1331, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 1332, 520, 508, 0, 0, 1333, 522, 523,
	524, 525, 0, 742, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 1334, 539, 1335, 745, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 748, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 1336, 602, 603,
	604, 605, 606, 751, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 0, 631, 752,
	632, 613, 614, 633, 634, 1337, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 755, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 756, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 760, 680,
	761, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 0,
	696, 0, 0, 697, 698, 699, 762, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 1664,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 314, 0, 315, 316,
	317, 1321, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 721, 0, 335, 336, 722, 0, 1628, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 1322, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 1323, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 731, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 733, 734, 735, 527,
	1325, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 0, 443, 444, 445, 0, 1324, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 1326, 740, 1327, 450, 452, 453, 1328, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 1329, 466, 467, 1330,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	1331, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 1332, 520,
	508, 0, 0, 1333, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 1334,
	539, 1335, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 1336, 602, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 1337, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 298, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 713, 0,
	0, 0, 314, 0, 315, 316, 317, 0, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 3163, 335,
	336, 722, 0, 0, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	3952, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 3167, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 3951, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 3166,
	412, 413, 0, 0, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 733, 734, 735, 527, 0, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 3948,
	443, 444, 445, 0, 0, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 3950, 451, 0, 740, 0,
	450, 452, 453, 0, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	741, 464, 0, 466, 467, 3947, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 0, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 0, 520, 508, 0, 0, 0,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 0, 539, 0, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 3165, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 0,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 0, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 3949, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 298, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 314, 0,
	315, 316, 317, 0, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 0, 718,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 719, 720, 721, 3163, 335, 336, 722, 0, 0,
	3157, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 3159, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 3167, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 0, 409, 410, 411, 3166, 412, 413, 0, 0,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 731, 0, 732, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 3156, 734,
	735, 527, 0, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 0, 443, 444, 445, 0,
	0, 736, 446, 528, 447, 737, 738, 0, 739, 0,
	448, 449, 451, 0, 740, 0, 450, 452, 453, 0,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 741, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 0, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	0, 520, 508, 0, 0, 0, 522, 523, 524, 525,
	0, 742, 526, 743, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 0, 539, 0, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 3165, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 0, 602, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 0, 631, 752, 632, 613,
	614, 633, 634, 0, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 756, 757, 758, 759, 0, 685,
	0, 674, 676, 677, 678, 679, 760, 680, 761, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 3164, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 762, 763, 764, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 1925, 0, 298,
	0, 708, 709, 766, 710, 711, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 1924, 312, 313, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 314, 0, 315, 316,
	317, 0, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 721, 0, 335, 336, 722, 0, 0, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 1922, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 0, 1923, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 731, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 733, 734, 735, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 0, 0, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 0, 740, 0, 450, 452, 453, 0, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	0, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 0, 520,
	508, 0, 303, 0, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 0,
	539, 0, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 0, 602, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 1926, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 1921, 627, 625,
	628, 629, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	1919, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 1920, 700, 702, 703,
	704, 765, 705, 706, 707, 1632, 0, 298, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 314, 0, 315, 316, 317, 0,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 719, 720, 721,
	0, 335, 336, 722, 0, 0, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 301, 0, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 0, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 1634, 734, 735, 527, 0, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 302, 443, 444, 445, 0, 0, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 0,
	740, 0, 450, 452, 453, 0, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 741, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 0, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 0, 520, 508, 0,
	303, 0, 522, 523, 524, 525, 0, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 1372, 534,
	535, 536, 0, 0, 537, 538, 744, 0, 539, 0,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 0, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 0,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	762, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 1629, 0, 298, 0, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 713, 0,
	0, 0, 314, 0, 315, 316, 317, 0, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 0, 335,
	336, 722, 0, 0, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 301, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 0, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 1631, 734, 735, 527, 0, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 0, 0, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 0, 740, 0,
	450, 452, 453, 0, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	741, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 0, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 0, 520, 508, 0, 303, 0,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 1372, 534, 535, 536,
	0, 0, 537, 538, 744, 0, 539, 0, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 0,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 0, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 1535, 0, 298, 0, 708, 709, 766, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 0, 0, 0, 0, 0, 713, 0, 0, 0,
	314, 0, 315, 316, 317, 0, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	0, 0, 334, 719, 720, 721, 0, 335, 336, 722,
	0, 0, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 367, 368, 0, 369,
	371, 723, 724, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 726, 727, 404, 0, 301,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 0, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 731, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	1537, 734, 735, 527, 0, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 302, 443, 444,
	445, 0, 0, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 0, 740, 0, 450, 452,
	453, 0, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 741, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 471, 472,
	473, 476, 0, 0, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 0, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 0, 520, 508, 0, 303, 0, 522, 523,
	524, 525, 0, 742, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 1372, 534, 535, 536, 0, 0,
	537, 538, 744, 0, 539, 0, 745, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 748, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 0, 602, 603,
	604, 605, 606, 751, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 0, 631, 752,
	632, 613, 614, 633, 634, 0, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 755, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 756, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 760, 680,
	761, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 0,
	696, 0, 0, 697, 698, 699, 762, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 801,
	0, 298, 0, 708, 709, 766, 710, 711, 712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 799, 310, 311, 788, 312, 313, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 314, 0,
	315, 316, 317, 0, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 0, 718,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 719, 720, 721, 0, 335, 336, 722, 0, 0,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 791, 358, 359, 360,
	0, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 0,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 797, 426, 731, 0, 732, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 733, 734,
	735, 527, 0, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 0, 443, 444, 445, 0,
	0, 736, 446, 528, 447, 737, 738, 0, 739, 0,
	448, 449, 451, 0, 740, 0, 450, 452, 453, 0,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 741, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 0, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	0, 520, 508, 0, 0, 0, 522, 523, 524, 525,
	0, 742, 526, 743, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 0, 539, 0, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 0, 602, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 793, 626,
	627, 625, 628, 629, 630, 0, 631, 752, 632, 613,
	614, 633, 634, 0, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 0, 663, 800, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 756, 757, 758, 759, 0, 685,
	0, 674, 676, 677, 678, 679, 760, 680, 761, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 762, 763, 764, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 787, 0, 298,
	0, 708, 709, 766, 710, 711, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 788, 312, 313, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 314, 0, 315, 316,
	317, 0, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 721, 0, 335, 336, 722, 0, 0, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 791, 358, 359, 360, 0, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 0, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 792, 426, 731, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 733, 734, 735, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 0, 443, 444, 445, 0, 0, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 0, 740, 0, 450, 452, 453, 0, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	0, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 0, 520,
	508, 0, 0, 0, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 0,
	539, 0, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 0, 602, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 793, 626, 627, 625,
	628, 629, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 786, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 298, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	788, 312, 313, 0, 0, 0, 0, 0, 713, 0,
	0, 0, 314, 0, 315, 316, 317, 0, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 0, 335,
	336, 722, 0, 0, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	791, 358, 359, 360, 0, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 0, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 792, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 733, 734, 735, 527, 0, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 0,
	443, 444, 445, 0, 0, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 0, 740, 0,
	450, 452, 453, 0, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	741, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 0, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 0, 520, 508, 0, 0, 0,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 0, 539, 0, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 0,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 793, 626, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 0, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 298, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 788, 312, 313, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 314, 0,
	315, 316, 317, 0, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 0, 718,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 719, 720, 721, 0, 335, 336, 722, 0, 0,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 791, 358, 359, 360,
	0, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 0,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 4366, 426, 731, 0, 732, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 733, 734,
	735, 527, 0, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 0, 443, 444, 445, 0,
	0, 736, 446, 528, 447, 737, 738, 0, 739, 0,
	448, 449, 451, 0, 740, 0, 450, 452, 453, 0,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 741, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 0, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	0, 520, 508, 0, 0, 0, 522, 523, 524, 525,
	0, 742, 526, 743, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 0, 539, 0, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 0, 602, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 793, 626,
	627, 625, 628, 629, 630, 0, 631, 752, 632, 613,
	614, 633, 634, 0, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 756, 757, 758, 759, 0, 685,
	0, 674, 676, 677, 678, 679, 760, 680, 761, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 762, 763, 764, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 298, 0, 0,
	0, 708, 709, 766, 710, 711, 712, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 314, 0, 315, 316, 317, 0,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 719, 720, 721,
	0, 335, 336, 722, 0, 0, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 301, 0, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 0, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 733, 734, 735, 527, 0, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 302, 443, 444, 445, 0, 0, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 0,
	740, 0, 450, 452, 453, 0, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 741, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 0, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 0, 520, 508, 0,
	303, 0, 522, 523, 524, 525, 0, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 1372, 534,
	535, 536, 0, 0, 537, 538, 744, 0, 539, 0,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 0, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 0,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	762, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 298, 0, 0, 0, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 0, 0, 0, 0, 0, 713, 0, 0, 0,
	314, 0, 315, 316, 317, 0, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	0, 0, 334, 719, 720, 721, 0, 335, 336, 722,
	0, 0, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 367, 368, 0, 369,
	371, 723, 724, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 726, 727, 404, 0, 301,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 0, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 731, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	733, 734, 735, 527, 0, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 302, 443, 444,
	445, 0, 0, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 0, 740, 0, 450, 452,
	453, 0, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 741, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 471, 472,
	473, 476, 0, 0, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 0, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 3829, 520, 508, 0, 303, 0, 522, 523,
	524, 525, 0, 742, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 0, 539, 0, 745, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 748, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 0, 602, 603,
	604, 605, 606, 751, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 0, 631, 752,
	632, 613, 614, 633, 634, 0, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 755, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 756, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 760, 680,
	761, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 0,
	696, 0, 0, 697, 698, 699, 762, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 3355,
	0, 298, 0, 708, 709, 766, 710, 711, 712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 314, 0,
	315, 316, 317, 0, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 0, 718,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 719, 720, 721, 0, 335, 336, 722, 0, 0,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 0, 301, 0, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 0,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 731, 0, 732, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 3354, 734,
	735, 527, 0, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 302, 443, 444, 445, 0,
	0, 736, 446, 528, 447, 737, 738, 0, 739, 0,
	448, 449, 451, 0, 740, 0, 450, 452, 453, 0,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 741, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 0, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	0, 520, 508, 0, 303, 0, 522, 523, 524, 525,
	0, 742, 526, 743, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 0, 539, 0, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 0, 602, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 0, 631, 752, 632, 613,
	614, 633, 634, 0, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 756, 757, 758, 759, 0, 685,
	0, 674, 676, 677, 678, 679, 760, 680, 761, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 762, 763, 764, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 2567, 0, 298,
	0, 708, 709, 766, 710, 711, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 314, 0, 315, 316,
	317, 0, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 721, 0, 335, 336, 722, 0, 0, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 0, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 731, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 733, 734, 735, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 0, 0, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 0, 740, 0, 450, 452, 453, 0, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	0, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 0, 520,
	508, 0, 303, 0, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 0,
	539, 0, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 0, 602, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 2511, 0, 298, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 314, 0, 315, 316, 317, 0,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 719, 720, 721,
	0, 335, 336, 722, 0, 0, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 301, 0, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 0, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 2510, 734, 735, 527, 0, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 302, 443, 444, 445, 0, 0, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 0,
	740, 0, 450, 452, 453, 0, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 741, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 0, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 0, 520, 508, 0,
	303, 0, 522, 523, 524, 525, 0, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 0, 539, 0,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 0, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 0,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	762, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 2495, 0, 298, 0, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 713, 0,
	0, 0, 314, 0, 315, 316, 317, 0, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 0, 335,
	336, 722, 0, 0, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 301, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 0, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 2497, 734, 735, 527, 0, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 0, 0, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 0, 740, 0,
	450, 452, 453, 0, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	741, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 0, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 0, 520, 508, 0, 303, 0,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 0, 539, 0, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 0,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 0, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 298, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 314, 0,
	315, 316, 317, 0, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 0, 718,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 719, 720, 721, 0, 335, 336, 722, 0, 0,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 0, 301, 0, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 0,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 731, 0, 732, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 2459, 734,
	735, 527, 0, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 302, 443, 444, 445, 0,
	0, 736, 446, 528, 447, 737, 738, 0, 739, 0,
	448, 449, 451, 0, 740, 0, 450, 452, 453, 0,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 741, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 0, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	0, 520, 508, 0, 303, 0, 522, 523, 524, 525,
	0, 742, 526, 743, 529, 530, 0, 0, 531, 0,
	532, 0, 1372, 534, 535, 536, 0, 0, 537, 538,
	744, 0, 539, 0, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 0, 602, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 0, 631, 752, 632, 613,
	614, 633, 634, 0, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 756, 757, 758, 759, 0, 685,
	0, 674, 676, 677, 678, 679, 760, 680, 761, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 762, 763, 764, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 1760, 0, 298,
	0, 708, 709, 766, 710, 711, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 314, 0, 315, 316,
	317, 0, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 721, 0, 335, 336, 722, 0, 0, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 0, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 731, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 1759, 734, 735, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 0, 0, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 0, 740, 0, 450, 452, 453, 0, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	0, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 0, 520,
	508, 0, 303, 0, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 0,
	539, 0, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 0, 602, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 1652, 0, 298, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 314, 0, 315, 316, 317, 0,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 719, 720, 721,
	0, 335, 336, 722, 0, 0, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 301, 0, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 0, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 733, 734, 735, 527, 0, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 302, 443, 444, 445, 0, 0, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 0,
	740, 0, 450, 452, 453, 0, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 741, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 0, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 0, 520, 508, 0,
	303, 0, 522, 523, 524, 525, 0, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 0, 539, 0,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 0, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 0,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	762, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 1645, 0, 298, 0, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 713, 0,
	0, 0, 314, 0, 315, 316, 317, 0, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 0, 335,
	336, 722, 0, 0, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 301, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 0, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 1647, 734, 735, 527, 0, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 0, 0, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 0, 740, 0,
	450, 452, 453, 0, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	741, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 0, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 0, 520, 508, 0, 303, 0,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 0, 539, 0, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 0,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 0, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 1452, 0, 298, 0, 708, 709, 766, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 0, 0, 0, 0, 0, 713, 0, 0, 0,
	314, 0, 315, 316, 317, 0, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	0, 0, 334, 719, 720, 721, 0, 335, 336, 722,
	0, 0, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 367, 368, 0, 369,
	371, 723, 724, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 726, 727, 404, 0, 301,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 0, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 731, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	1451, 734, 735, 527, 0, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 302, 443, 444,
	445, 0, 0, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 0, 740, 0, 450, 452,
	453, 0, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 741, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 471, 472,
	473, 476, 0, 0, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 0, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 0, 520, 508, 0, 303, 0, 522, 523,
	524, 525, 0, 742, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 0, 539, 0, 745, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 748, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 0, 602, 603,
	604, 605, 606, 751, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 0, 631, 752,
	632, 613, 614, 633, 634, 0, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 755, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 756, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 760, 680,
	761, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 0,
	696, 0, 0, 697, 698, 699, 762, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 1442,
	0, 298, 0, 708, 709, 766, 710, 711, 712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 314, 0,
	315, 316, 317, 0, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 0, 718,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 719, 720, 721, 0, 335, 336, 722, 0, 0,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 0, 301, 0, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 0,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 731, 0, 732, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 1441, 734,
	735, 527, 0, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 302, 443, 444, 445, 0,
	0, 736, 446, 528, 447, 737, 738, 0, 739, 0,
	448, 449, 451, 0, 740, 0, 450, 452, 453, 0,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 741, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 0, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	0, 520, 508, 0, 303, 0, 522, 523, 524, 525,
	0, 742, 526, 743, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 0, 539, 0, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 0, 602, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 0, 631, 752, 632, 613,
	614, 633, 634, 0, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 756, 757, 758, 759, 0, 685,
	0, 674, 676, 677, 678, 679, 760, 680, 761, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 762, 763, 764, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 1439, 0, 298,
	0, 708, 709, 766, 710, 711, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 314, 0, 315, 316,
	317, 0, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 721, 0, 335, 336, 722, 0, 0, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 0, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 731, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 1438, 734, 735, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 0, 0, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 0, 740, 0, 450, 452, 453, 0, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	0, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 0, 520,
	508, 0, 303, 0, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 0,
	539, 0, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 0, 602, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 1434, 0, 298, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 314, 0, 315, 316, 317, 0,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 719, 720, 721,
	0, 335, 336, 722, 0, 0, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 301, 0, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 0, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 1433, 734, 735, 527, 0, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 302, 443, 444, 445, 0, 0, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 0,
	740, 0, 450, 452, 453, 0, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 741, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 0, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 0, 520, 508, 0,
	303, 0, 522, 523, 524, 525, 0, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 0, 539, 0,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 0, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 0,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	762, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 768, 0, 298, 0, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 713, 0,
	0, 0, 314, 0, 315, 316, 317, 0, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 0, 335,
	336, 722, 0, 0, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 301, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 0, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 733, 734, 735, 527, 0, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 0, 0, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 0, 740, 0,
	450, 452, 453, 0, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	741, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 0, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 0, 520, 508, 0, 303, 0,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 0, 539, 0, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 0,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 0, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 289, 0, 298, 0, 708, 709, 766, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 0, 0, 0, 0, 0, 713, 0, 0, 0,
	314, 0, 315, 316, 317, 0, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	0, 0, 334, 719, 720, 721, 0, 335, 336, 722,
	0, 0, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 367, 368, 0, 369,
	371, 723, 724, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 726, 727, 404, 0, 301,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 0, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 731, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	733, 734, 735, 527, 0, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 302, 443, 444,
	445, 0, 0, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 0, 740, 0, 450, 452,
	453, 0, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 741, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 471, 472,
	473, 476, 0, 0, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 0, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 0, 520, 508, 0, 303, 0, 522, 523,
	524, 525, 0, 742, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 0, 539, 0, 745, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 748, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 0, 602, 603,
	604, 605, 606, 751, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 0, 631, 752,
	632, 613, 614, 633, 634, 0, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 755, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 756, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 760, 680,
	761, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 0,
	696, 0, 0, 697, 698, 699, 762, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 298,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 314, 0, 315, 316,
	317, 0, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 721, 0, 335, 336, 722, 0, 0, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 0, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 731, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 733, 734, 735, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 0, 0, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 0, 740, 0, 450, 452, 453, 0, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	0, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 0, 520,
	508, 0, 303, 0, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 0,
	539, 0, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 0, 602, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 298, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 713, 0,
	0, 0, 314, 0, 315, 316, 317, 0, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 0, 335,
	336, 722, 0, 0, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	791, 358, 359, 360, 0, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 0, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 792, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 733, 734, 735, 527, 0, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 0,
	443, 444, 445, 0, 0, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 0, 740, 0,
	450, 452, 453, 0, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	741, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 0, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 0, 520, 508, 0, 0, 0,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 0, 539, 0, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 0,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 793, 626, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 0, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 298, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 314, 0,
	315, 316, 317, 0, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 0, 718,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 719, 720, 721, 0, 335, 336, 722, 0, 0,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 2608, 368, 0, 369, 371, 723,
	724, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 0, 301, 0, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 0,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 731, 0, 732, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 733, 734,
	735, 527, 0, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 302, 443, 444, 445, 0,
	0, 736, 446, 528, 447, 737, 738, 0, 739, 0,
	448, 449, 451, 0, 740, 0, 450, 452, 453, 0,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 741, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 0, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	0, 520, 508, 0, 303, 0, 522, 523, 524, 525,
	0, 742, 526, 743, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 0, 539, 0, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 0, 602, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 0, 631, 752, 632, 613,
	614, 633, 634, 0, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 756, 757, 758, 759, 0, 685,
	0, 674, 676, 677, 678, 679, 760, 680, 761, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 762, 763, 764, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 298, 0, 0,
	0, 708, 709, 766, 710, 711, 712, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 314, 0, 315, 316, 317, 0,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 719, 720, 721,
	0, 335, 336, 722, 0, 0, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	2606, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 301, 0, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 0, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 733, 734, 735, 527, 0, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 302, 443, 444, 445, 0, 0, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 0,
	740, 0, 450, 452, 453, 0, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 741, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 0, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 0, 520, 508, 0,
	303, 0, 522, 523, 524, 525, 0, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 0, 539, 0,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 0, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 0,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	762, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 298, 0, 0, 0, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 0, 0, 0, 0, 0, 713, 0, 0, 0,
	314, 0, 315, 316, 317, 0, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	0, 0, 334, 719, 720, 721, 0, 335, 336, 722,
	0, 0, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 2604, 368, 0, 369,
	371, 723, 724, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 726, 727, 404, 0, 301,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 0, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 731, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	733, 734, 735, 527, 0, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 302, 443, 444,
	445, 0, 0, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 0, 740, 0, 450, 452,
	453, 0, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 741, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 471, 472,
	473, 476, 0, 0, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 0, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 0, 520, 508, 0, 303, 0, 522, 523,
	524, 525, 0, 742, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 0, 539, 0, 745, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 748, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 0, 602, 603,
	604, 605, 606, 751, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 0, 631, 752,
	632, 613, 614, 633, 634, 0, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 755, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 756, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 760, 680,
	761, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 0,
	696, 0, 0, 697, 698, 699, 762, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 298,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 314, 0, 315, 316,
	317, 0, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 721, 0, 335, 336, 722, 0, 0, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 301, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 0, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 731, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 2518, 734, 735, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 302, 443, 444, 445, 0, 0, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 0, 740, 0, 450, 452, 453, 0, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	0, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 0, 520,
	508, 0, 303, 0, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 0,
	539, 0, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 0, 602, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 298, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 713, 0,
	0, 0, 314, 0, 315, 316, 317, 0, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 0, 335,
	336, 722, 0, 0, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 301, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 0, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 2270, 734, 735, 527, 0, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 302,
	443, 444, 445, 0, 0, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 0, 740, 0,
	450, 452, 453, 0, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	741, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 0, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 0, 520, 508, 0, 303, 0,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 0, 539, 0, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 0,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 0, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 298, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 314, 0,
	315, 316, 317, 0, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 0, 718,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 719, 720, 721, 0, 335, 336, 722, 0, 0,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 0, 301, 0, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 0,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 731, 0, 732, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 2264, 734,
	735, 527, 0, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 302, 443, 444, 445, 0,
	0, 736, 446, 528, 447, 737, 738, 0, 739, 0,
	448, 449, 451, 0, 740, 0, 450, 452, 453, 0,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 741, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 0, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	0, 520, 508, 0, 303, 0, 522, 523, 524, 525,
	0, 742, 526, 743, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 0, 539, 0, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 0, 602, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 0, 631, 752, 632, 613,
	614, 633, 634, 0, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 756, 757, 758, 759, 0, 685,
	0, 674, 676, 677, 678, 679, 760, 680, 761, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 762, 763, 764, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 1010, 0, 298,
	0, 708, 709, 766, 710, 711, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 314, 0, 315, 316,
	317, 0, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 721, 0, 335, 336, 722, 0, 0, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 0, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 731, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 733, 734, 735, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 0, 443, 444, 445, 0, 0, 736,
	446, 528, 447, 737, 738, 0, 739, 1009, 448, 449,
	451, 0, 740, 0, 450, 452, 453, 0, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	0, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 0, 520,
	508, 0, 0, 0, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 0,
	539, 0, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 0, 602, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	1008, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 890, 0, 298, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 879, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 314, 0, 315, 316, 317, 0,
	318, 319, 320, 321, 888, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 719, 720, 721,
	0, 335, 336, 722, 0, 0, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 881, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 887, 413, 883, 0, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 733, 734, 735, 527, 0, 435,
	436, 437, 884, 438, 439, 440, 441, 442, 0, 0,
	0, 0, 443, 444, 445, 0, 0, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 0,
	740, 0, 450, 452, 453, 0, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 882, 0, 461, 463, 462,
	0, 465, 741, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 0, 503,
	504, 505, 885, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 0, 520, 508, 0,
	0, 0, 522, 523, 524, 525, 0, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 0, 539, 0,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	0, 886, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 880, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 0, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 0,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	762, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 873, 0, 298, 0, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 879, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 713, 0,
	0, 0, 314, 0, 315, 316, 317, 0, 318, 319,
	320, 321, 888, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 0, 335,
	336, 722, 0, 0, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 881,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	887, 413, 883, 0, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 733, 734, 735, 527, 0, 435, 436, 437,
	884, 438, 439, 440, 441, 442, 0, 0, 0, 0,
	443, 444, 445, 0, 0, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 0, 740, 0,
	450, 452, 453, 0, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 882, 0, 461, 463, 462, 0, 465,
	741, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 0, 503, 504, 505,
	885, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 0, 520, 508, 0, 0, 0,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 0, 539, 0, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 0, 886,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 880,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 0,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 0, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 298, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 314, 0,
	315, 316, 317, 0, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 0, 718,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 719, 720, 721, 0, 335, 336, 722, 0, 0,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 0, 3951, 0, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 0,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 731, 0, 732, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 733, 734,
	735, 527, 0, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 0, 443, 444, 445, 0,
	0, 736, 446, 528, 447, 737, 738, 0, 739, 0,
	448, 449, 451, 0, 740, 0, 450, 452, 453, 0,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 741, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 0, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	0, 520, 508, 0, 0, 0, 522, 523, 524, 525,
	0, 742, 526, 743, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 0, 539, 0, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 4718, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 0, 602, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 0, 631, 752, 632, 613,
	614, 633, 634, 0, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 756, 757, 758, 759, 0, 685,
	0, 674, 676, 677, 678, 679, 760, 680, 761, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 762, 763, 764, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 1480, 0, 298,
	0, 708, 709, 766, 710, 711, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 314, 0, 315, 316,
	317, 1483, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 1481, 0, 335, 336, 722, 0, 0, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 0, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 731, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 733, 734, 735, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 0, 443, 444, 445, 0, 0, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 0, 740, 0, 450, 452, 453, 0, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 861,
	0, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 0, 520,
	508, 0, 0, 0, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 0,
	539, 0, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 0, 860, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	859, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 1484, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 857, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 1480, 0, 298, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 314, 0, 315, 316, 317, 1483,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 719, 720, 1481,
	0, 335, 336, 722, 0, 0, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 0, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 733, 734, 735, 527, 0, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 0, 443, 444, 445, 0, 0, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 0,
	740, 0, 450, 452, 453, 0, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 741, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 861, 0, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 0, 520, 508, 0,
	0, 0, 522, 523, 524, 525, 0, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 0, 539, 0,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 0, 860, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 859, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 1484,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 0,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	857, 757, 758, 759, 0, 685, 0, 674, 1482, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	762, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 868, 0, 298, 0, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	866, 312, 313, 0, 0, 0, 0, 0, 713, 0,
	0, 0, 314, 0, 315, 316, 317, 0, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 0, 335,
	336, 722, 0, 0, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 0, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 733, 734, 735, 527, 0, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 0,
	443, 444, 445, 0, 0, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 0, 740, 0,
	450, 452, 453, 0, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	741, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 0, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 0, 520, 508, 0, 0, 0,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 0, 539, 0, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 0,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 0, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 777, 0, 298, 0, 708, 709, 766, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 776, 312,
	313, 0, 0, 0, 0, 0, 713, 0, 0, 0,
	314, 0, 315, 316, 317, 0, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	0, 0, 334, 719, 720, 721, 0, 335, 336, 722,
	0, 0, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 367, 368, 0, 369,
	371, 723, 724, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 726, 727, 404, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 0, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 731, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	733, 734, 735, 527, 0, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 0, 443, 444,
	445, 0, 0, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 0, 740, 0, 450, 452,
	453, 0, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 741, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 471, 472,
	473, 476, 0, 0, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 0, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 0, 520, 508, 0, 0, 0, 522, 523,
	524, 525, 0, 742, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 0, 539, 0, 745, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 748, 560, 749, 775, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 0, 602, 603,
	604, 605, 606, 751, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 0, 631, 752,
	632, 613, 614, 633, 634, 0, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 755, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 756, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 760, 680,
	761, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 0,
	696, 0, 0, 697, 698, 699, 762, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 298,
	3264, 0, 0, 708, 709, 766, 710, 711, 712, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 314, 0, 315, 316,
	317, 0, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 721, 0, 335, 336, 722, 0, 0, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 0, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 731, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 733, 734, 735, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 0, 443, 444, 445, 0, 0, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 0, 740, 0, 450, 452, 453, 0, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	0, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 0, 520,
	508, 0, 0, 0, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 0,
	539, 0, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 0, 602, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 298, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 713, 0,
	0, 0, 314, 0, 315, 316, 317, 0, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 0, 335,
	336, 722, 0, 0, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 0, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 733, 734, 735, 527, 0, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 0,
	443, 444, 445, 0, 0, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 0, 740, 0,
	450, 452, 453, 0, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	741, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 0, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 0, 520, 508, 0, 0, 0,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 0, 539, 0, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 5027, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 0,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 0, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 298, 3769, 0, 0, 708, 709, 766, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 314, 0,
	315, 316, 317, 0, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 0, 718,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 719, 720, 721, 0, 335, 336, 722, 0, 0,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 0,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 731, 0, 732, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 733, 734,
	735, 527, 0, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 0, 443, 444, 445, 0,
	0, 736, 446, 528, 447, 737, 738, 0, 739, 0,
	448, 449, 451, 0, 740, 0, 450, 452, 453, 0,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 741, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 0, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	0, 520, 508, 0, 0, 0, 522, 523, 524, 525,
	0, 742, 526, 743, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 0, 539, 0, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 0, 602, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 0, 631, 752, 632, 613,
	614, 633, 634, 0, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 756, 757, 758, 759, 0, 685,
	0, 674, 676, 677, 678, 679, 760, 680, 761, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 762, 763, 764, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 298, 0, 0,
	0, 708, 709, 766, 710, 711, 712, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 314, 0, 315, 316, 317, 0,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 719, 720, 721,
	0, 335, 336, 722, 0, 0, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 0, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 733, 734, 735, 527, 0, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 0, 443, 444, 445, 0, 0, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 0,
	740, 0, 450, 452, 453, 0, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 741, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 0, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 0, 520, 508, 0,
	0, 0, 522, 523, 524, 525, 0, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 0, 539, 0,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	4600, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 0, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 0,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	762, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 298, 0, 0, 0, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 0, 0, 0, 0, 0, 713, 0, 0, 0,
	314, 0, 315, 316, 317, 0, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	0, 0, 334, 719, 720, 721, 0, 335, 336, 722,
	0, 0, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 367, 368, 0, 369,
	371, 723, 724, 4310, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 726, 727, 404, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 0, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 731, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	733, 734, 735, 527, 0, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 0, 443, 444,
	445, 0, 0, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 0, 740, 0, 450, 452,
	453, 0, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 741, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 471, 472,
	473, 476, 0, 0, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 0, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 0, 520, 508, 0, 0, 0, 522, 523,
	524, 525, 0, 742, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 0, 539, 0, 745, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 748, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 0, 602, 603,
	604, 605, 606, 751, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 0, 631, 752,
	632, 613, 614, 633, 634, 0, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 755, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 756, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 760, 680,
	761, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 0,
	696, 0, 0, 697, 698, 699, 762, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 298,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 0, 713, 0, 3032, 0, 314, 0, 315, 316,
	317, 0, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 721, 0, 335, 336, 722, 0, 0, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 0, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 731, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 733, 734, 735, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 0, 443, 444, 445, 0, 0, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 0, 740, 0, 450, 452, 453, 0, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	0, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 0, 520,
	508, 0, 0, 0, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 0,
	539, 0, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 0, 602, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 298, 3264, 0, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 713, 0,
	0, 0, 314, 0, 315, 316, 317, 0, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 0, 335,
	336, 722, 0, 0, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 0, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 733, 734, 735, 527, 0, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 0,
	443, 444, 445, 0, 0, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 0, 740, 0,
	450, 452, 453, 0, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	741, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 0, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 0, 520, 508, 0, 0, 0,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 3347,
	0, 0, 537, 538, 744, 0, 539, 0, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 0,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 0, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 298, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 314, 0,
	315, 316, 317, 0, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 0, 718,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 719, 720, 721, 0, 335, 336, 722, 0, 0,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 0,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 731, 0, 732, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 733, 734,
	735, 527, 0, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 0, 443, 444, 445, 0,
	0, 736, 446, 528, 447, 737, 738, 0, 739, 0,
	448, 449, 451, 0, 740, 0, 450, 452, 453, 0,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 741, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 0, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	0, 520, 508, 0, 0, 0, 522, 523, 524, 525,
	0, 742, 526, 743, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 0, 539, 0, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 2403, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 0, 860, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 859, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 0, 631, 752, 632, 613,
	614, 633, 634, 0, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 857, 757, 758, 759, 0, 685,
	0, 674, 676, 677, 678, 679, 760, 680, 761, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 762, 763, 764, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 298, 0, 0,
	0, 708, 709, 766, 710, 711, 712, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 2578, 312, 313, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 314, 0, 315, 316, 317, 0,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 719, 720, 721,
	0, 335, 336, 722, 0, 0, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 0, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 733, 734, 735, 527, 0, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 0, 443, 444, 445, 0, 0, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 0,
	740, 0, 450, 452, 453, 0, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 741, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 0, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 0, 520, 508, 0,
	0, 0, 522, 523, 524, 525, 0, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 0, 539, 0,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 0, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 0,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	762, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 2565, 0, 298, 0, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 713, 0,
	0, 0, 314, 0, 315, 316, 317, 0, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 0, 335,
	336, 722, 0, 0, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 0, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 733, 734, 735, 527, 0, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 0,
	443, 444, 445, 0, 0, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 0, 740, 0,
	450, 452, 453, 0, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	741, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 0, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 0, 520, 508, 0, 0, 0,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 0, 539, 0, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 0,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 0, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 1816, 0, 298, 0, 708, 709, 766, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 0, 0, 0, 0, 0, 713, 0, 0, 0,
	314, 0, 315, 316, 317, 0, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	0, 0, 334, 719, 720, 721, 0, 335, 336, 722,
	0, 0, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 367, 368, 0, 369,
	371, 723, 724, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 726, 727, 404, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 0, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 731, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	733, 734, 735, 527, 0, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 0, 443, 444,
	445, 0, 0, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 0, 740, 0, 450, 452,
	453, 0, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 741, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 471, 472,
	473, 476, 0, 0, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 0, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 0, 520, 508, 0, 0, 0, 522, 523,
	524, 525, 0, 742, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 0, 539, 0, 745, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 748, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 0, 602, 603,
	604, 605, 606, 751, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 0, 631, 752,
	632, 613, 614, 633, 634, 0, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 755, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 756, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 760, 680,
	761, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 0,
	696, 0, 0, 697, 698, 699, 762, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 1808,
	0, 298, 0, 708, 709, 766, 710, 711, 712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 314, 0,
	315, 316, 317, 0, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 0, 718,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 719, 720, 721, 0, 335, 336, 722, 0, 0,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 0,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 731, 0, 732, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 733, 734,
	735, 527, 0, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 0, 443, 444, 445, 0,
	0, 736, 446, 528, 447, 737, 738, 0, 739, 0,
	448, 449, 451, 0, 740, 0, 450, 452, 453, 0,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 741, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 0, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	0, 520, 508, 0, 0, 0, 522, 523, 524, 525,
	0, 742, 526, 743, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 0, 539, 0, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 0, 602, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 0, 631, 752, 632, 613,
	614, 633, 634, 0, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 756, 757, 758, 759, 0, 685,
	0, 674, 676, 677, 678, 679, 760, 680, 761, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 762, 763, 764, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 851, 0, 298,
	0, 708, 709, 766, 710, 711, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 314, 0, 315, 316,
	317, 0, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 721, 0, 335, 847, 722, 0, 0, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 0, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 731, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 733, 734, 735, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 0, 443, 444, 445, 0, 0, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 0, 740, 0, 450, 452, 453, 0, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 852, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 861,
	0, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 0, 520,
	508, 0, 0, 0, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 0,
	539, 0, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 0, 860, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	859, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 1793, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 857, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 1766, 0, 298, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 314, 0, 315, 316, 317, 0,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 719, 720, 721,
	0, 335, 336, 722, 0, 0, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 0, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 1765, 734, 735, 527, 0, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 0, 443, 444, 445, 0, 0, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 0,
	740, 0, 450, 452, 453, 0, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 741, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 0, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 0, 520, 508, 0,
	0, 0, 522, 523, 524, 525, 0, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 0, 539, 0,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 0, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 0,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	762, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 1749, 0, 298, 0, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 713, 0,
	0, 0, 314, 0, 315, 316, 317, 0, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 0, 335,
	336, 722, 0, 0, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 0, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 1747, 734, 735, 527, 0, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 0,
	443, 444, 445, 0, 0, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 0, 740, 0,
	450, 452, 453, 0, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	741, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 0, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 0, 520, 508, 0, 0, 0,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 0, 539, 0, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 0,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 0, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 1741, 0, 298, 0, 708, 709, 766, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 0, 0, 0, 0, 0, 713, 0, 0, 0,
	314, 0, 315, 316, 317, 0, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	0, 0, 334, 719, 720, 721, 0, 335, 336, 722,
	0, 0, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 367, 368, 0, 369,
	371, 723, 724, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 726, 727, 404, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 0, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 731, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	733, 734, 735, 527, 0, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 0, 443, 444,
	445, 0, 0, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 0, 740, 0, 450, 452,
	453, 0, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 741, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 471, 472,
	473, 476, 0, 0, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 0, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 0, 520, 508, 0, 0, 0, 522, 523,
	524, 525, 0, 742, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 0, 539, 0, 745, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 748, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 0, 602, 603,
	604, 605, 606, 751, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 0, 631, 752,
	632, 613, 614, 633, 634, 0, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 755, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 756, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 760, 680,
	761, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 0,
	696, 0, 0, 697, 698, 699, 762, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 1719,
	0, 298, 0, 708, 709, 766, 710, 711, 712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 314, 0,
	315, 316, 317, 0, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 0, 718,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 719, 720, 721, 0, 335, 336, 722, 0, 0,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 0,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 731, 0, 732, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 1717, 734,
	735, 527, 0, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 0, 443, 444, 445, 0,
	0, 736, 446, 528, 447, 737, 738, 0, 739, 0,
	448, 449, 451, 0, 740, 0, 450, 452, 453, 0,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 741, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 0, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	0, 520, 508, 0, 0, 0, 522, 523, 524, 525,
	0, 742, 526, 743, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 0, 539, 0, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 0, 602, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 0, 631, 752, 632, 613,
	614, 633, 634, 0, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 756, 757, 758, 759, 0, 685,
	0, 674, 676, 677, 678, 679, 760, 680, 761, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 762, 763, 764, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 1712, 0, 298,
	0, 708, 709, 766, 710, 711, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 314, 0, 315, 316,
	317, 0, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 721, 0, 335, 336, 722, 0, 0, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 0, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 731, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 733, 734, 735, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 0, 443, 444, 445, 0, 0, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 0, 740, 0, 450, 452, 453, 0, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	0, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 0, 520,
	508, 0, 0, 0, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 0,
	539, 0, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 0, 602, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 1673, 0, 298, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 314, 0, 315, 316, 317, 0,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 719, 720, 721,
	0, 335, 336, 722, 0, 0, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 0, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 733, 734, 735, 527, 0, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 0, 443, 444, 445, 0, 0, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 0,
	740, 0, 450, 452, 453, 0, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 741, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 0, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 0, 520, 508, 0,
	0, 0, 522, 523, 524, 525, 0, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 0, 539, 0,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 0, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 0,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	762, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 1637, 0, 298, 0, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 713, 0,
	0, 0, 314, 0, 315, 316, 317, 0, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 0, 335,
	336, 722, 0, 0, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 0, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 733, 734, 735, 527, 0, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 0,
	443, 444, 445, 0, 0, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 0, 740, 0,
	450, 452, 453, 0, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	741, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 0, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 0, 520, 508, 0, 0, 0,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 0, 539, 0, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 0,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 0, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 1486, 0, 298, 0, 708, 709, 766, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 0, 0, 0, 0, 0, 713, 0, 0, 0,
	314, 0, 315, 316, 317, 0, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	0, 0, 334, 719, 720, 721, 0, 335, 336, 722,
	0, 0, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 367, 368, 0, 369,
	371, 723, 724, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 726, 727, 404, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 0, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 731, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	733, 734, 735, 527, 0, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 0, 443, 444,
	445, 0, 0, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 0, 740, 0, 450, 452,
	453, 0, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 741, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 471, 472,
	473, 476, 0, 0, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 0, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 0, 520, 508, 0, 0, 0, 522, 523,
	524, 525, 0, 742, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 0, 539, 0, 745, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 748, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 0, 860, 603,
	604, 605, 606, 751, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 859, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 0, 631, 752,
	632, 613, 614, 633, 634, 0, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 755, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 857, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 760, 680,
	761, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 0,
	696, 0, 0, 697, 698, 699, 762, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 1457,
	0, 298, 0, 708, 709, 766, 710, 711, 712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 314, 0,
	315, 316, 317, 0, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 0, 718,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 719, 720, 721, 0, 335, 336, 722, 0, 0,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 0,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 731, 0, 732, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 1456, 734,
	735, 527, 0, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 0, 443, 444, 445, 0,
	0, 736, 446, 528, 447, 737, 738, 0, 739, 0,
	448, 449, 451, 0, 740, 0, 450, 452, 453, 0,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 741, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 0, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	0, 520, 508, 0, 0, 0, 522, 523, 524, 525,
	0, 742, 526, 743, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 0, 539, 0, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 0, 602, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 0, 631, 752, 632, 613,
	614, 633, 634, 0, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 756, 757, 758, 759, 0, 685,
	0, 674, 676, 677, 678, 679, 760, 680, 761, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 762, 763, 764, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 1448, 0, 298,
	0, 708, 709, 766, 710, 711, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 314, 0, 315, 316,
	317, 0, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 721, 0, 335, 336, 722, 0, 0, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 0, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 731, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 1447, 734, 735, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 0, 443, 444, 445, 0, 0, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 0, 740, 0, 450, 452, 453, 0, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	0, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 0, 520,
	508, 0, 0, 0, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 0,
	539, 0, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 0, 602, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 298, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	1397, 312, 313, 0, 0, 0, 0, 0, 713, 0,
	0, 0, 314, 0, 315, 316, 317, 0, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 0, 335,
	336, 722, 0, 0, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 0, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 733, 734, 735, 527, 0, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 0,
	443, 444, 445, 0, 0, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 0, 740, 0,
	450, 452, 453, 0, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	741, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 0, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 0, 520, 508, 0, 0, 0,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 0, 539, 0, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 0,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 0, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 871, 0, 298, 0, 708, 709, 766, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 0, 0, 0, 0, 0, 713, 0, 0, 0,
	314, 0, 315, 316, 317, 0, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	0, 0, 334, 719, 720, 721, 0, 335, 336, 722,
	0, 0, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 367, 368, 0, 369,
	371, 723, 724, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 726, 727, 404, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 0, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 731, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	733, 734, 735, 527, 0, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 0, 443, 444,
	445, 0, 0, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 0, 740, 0, 450, 452,
	453, 0, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 741, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 471, 472,
	473, 476, 0, 0, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 0, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 0, 520, 508, 0, 0, 0, 522, 523,
	524, 525, 0, 742, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 0, 539, 0, 745, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 748, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 0, 602, 603,
	604, 605, 606, 751, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 0, 631, 752,
	632, 613, 614, 633, 634, 0, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 755, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 756, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 760, 680,
	761, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 0,
	696, 0, 0, 697, 698, 699, 762, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 851,
	0, 298, 0, 708, 709, 766, 710, 711, 712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 314, 0,
	315, 316, 317, 0, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 0, 718,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 719, 720, 721, 0, 335, 847, 722, 0, 0,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 846, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 0,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 731, 0, 732, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 733, 734,
	735, 527, 0, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 0, 443, 444, 445, 0,
	0, 736, 446, 528, 447, 737, 738, 0, 739, 0,
	448, 449, 451, 0, 740, 0, 450, 452, 453, 0,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 741, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 471, 472, 852, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 861, 0, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	0, 520, 508, 0, 0, 0, 522, 523, 524, 525,
	0, 742, 526, 743, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 0, 539, 0, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 0, 860, 603, 604, 605,
	606, 848, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 859, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 849, 630, 0, 631, 752, 632, 613,
	614, 633, 634, 0, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 857, 757, 758, 759, 0, 685,
	0, 674, 853, 677, 678, 679, 760, 680, 761, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 762, 763, 764, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 840, 0, 298,
	0, 708, 709, 766, 710, 711, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 314, 0, 315, 316,
	317, 0, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 721, 0, 335, 336, 722, 0, 0, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 0, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 731, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 733, 734, 735, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 0, 443, 444, 445, 0, 0, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 0, 740, 0, 450, 452, 453, 0, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	0, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 0, 520,
	508, 0, 0, 0, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 0,
	539, 0, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 0, 602, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 841, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 803, 0, 298, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 314, 0, 315, 316, 317, 0,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 719, 720, 721,
	0, 335, 336, 722, 0, 0, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 0, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 733, 734, 735, 527, 0, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 0, 443, 444, 445, 0, 0, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 0,
	740, 0, 450, 452, 453, 0, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 741, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 0, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 0, 520, 508, 0,
	0, 0, 522, 523, 524, 525, 0, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 0, 539, 0,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 0, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 0,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	762, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 795, 0, 298, 0, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 713, 0,
	0, 0, 314, 0, 315, 316, 317, 0, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 0, 335,
	336, 722, 0, 0, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 0, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 733, 734, 735, 527, 0, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 0,
	443, 444, 445, 0, 0, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 0, 740, 0,
	450, 452, 453, 0, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	741, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 0, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 0, 520, 508, 0, 0, 0,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 0, 539, 0, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 0,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 0, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 772, 0, 298, 0, 708, 709, 766, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 0, 0, 0, 0, 0, 713, 0, 0, 0,
	314, 0, 315, 316, 317, 0, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	0, 0, 334, 719, 720, 721, 0, 335, 336, 722,
	0, 0, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 367, 368, 0, 369,
	371, 723, 724, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 726, 727, 404, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 0, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 731, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	733, 734, 735, 527, 0, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 0, 443, 444,
	445, 0, 0, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 0, 740, 0, 450, 452,
	453, 0, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 741, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 471, 472,
	473, 476, 0, 0, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 0, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 0, 520, 508, 0, 0, 0, 522, 523,
	524, 525, 0, 742, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 0, 539, 0, 745, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 748, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 0, 602, 603,
	604, 605, 606, 751, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 0, 631, 752,
	632, 613, 614, 633, 634, 0, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 755, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 756, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 760, 680,
	761, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 0,
	696, 0, 0, 697, 698, 699, 762, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 298,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 314, 0, 315, 316,
	317, 0, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 721, 0, 335, 336, 722, 0, 0, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 0, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 731, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 733, 734, 735, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 0, 443, 444, 445, 0, 0, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 0, 740, 0, 450, 452, 453, 0, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	0, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 0, 520,
	508, 0, 0, 0, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 0,
	539, 0, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 0, 602, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 298, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 713, 0,
	0, 0, 314, 0, 315, 316, 317, 0, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 0, 335,
	336, 722, 0, 0, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 0, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 3983, 734, 735, 527, 0, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 0,
	443, 444, 445, 0, 0, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 0, 740, 0,
	450, 452, 453, 0, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	741, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 0, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 0, 520, 508, 0, 0, 0,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 0, 539, 0, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 0,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 0, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 298, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 314, 0,
	315, 316, 317, 0, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 0, 718,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 719, 720, 721, 0, 335, 336, 722, 0, 0,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 0,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 731, 0, 732, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 733, 734,
	735, 527, 0, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 0, 443, 444, 445, 0,
	0, 736, 446, 528, 447, 737, 738, 0, 739, 0,
	448, 449, 451, 0, 740, 0, 450, 452, 453, 0,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 741, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 0, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	0, 520, 508, 0, 0, 0, 522, 523, 524, 525,
	0, 742, 526, 743, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 0, 539, 0, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 0, 860, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 859, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 0, 631, 752, 632, 613,
	614, 633, 634, 0, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 857, 757, 758, 759, 0, 685,
	0, 674, 676, 677, 678, 679, 760, 680, 761, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 762, 763, 764, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 298, 0, 0,
	0, 708, 709, 766, 710, 711, 712, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 314, 0, 315, 316, 317, 0,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 719, 720, 721,
	0, 335, 336, 722, 0, 0, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 0, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 3873, 734, 735, 527, 0, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 0, 443, 444, 445, 0, 0, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 0,
	740, 0, 450, 452, 453, 0, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 741, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 0, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 0, 520, 508, 0,
	0, 0, 522, 523, 524, 525, 0, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 0, 539, 0,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 0, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 0,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	762, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 298, 0, 0, 0, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 0, 0, 0, 0, 0, 713, 0, 0, 0,
	314, 0, 315, 316, 317, 0, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	0, 0, 334, 719, 720, 721, 0, 335, 336, 722,
	0, 0, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 367, 368, 0, 369,
	371, 723, 724, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 726, 727, 404, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 0, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 731, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	3847, 734, 735, 527, 0, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 0, 443, 444,
	445, 0, 0, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 0, 740, 0, 450, 452,
	453, 0, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 741, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 471, 472,
	473, 476, 0, 0, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 0, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 0, 520, 508, 0, 0, 0, 522, 523,
	524, 525, 0, 742, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 0, 539, 0, 745, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 748, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 0, 602, 603,
	604, 605, 606, 751, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 0, 631, 752,
	632, 613, 614, 633, 634, 0, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 755, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 756, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 760, 680,
	761, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 0,
	696, 0, 0, 697, 698, 699, 762, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 298,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 314, 0, 315, 316,
	317, 0, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 721, 0, 335, 336, 722, 0, 0, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 0, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 731, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 3843, 734, 735, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 0, 443, 444, 445, 0, 0, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 0, 740, 0, 450, 452, 453, 0, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	0, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 0, 520,
	508, 0, 0, 0, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 0,
	539, 0, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 0, 602, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 298, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 713, 0,
	0, 0, 314, 0, 315, 316, 317, 0, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 0, 335,
	336, 722, 0, 0, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 0, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 3794, 734, 735, 527, 0, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 0,
	443, 444, 445, 0, 0, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 0, 740, 0,
	450, 452, 453, 0, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	741, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 0, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 0, 520, 508, 0, 0, 0,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 0, 539, 0, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 0,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 0, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 298, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 314, 0,
	315, 316, 317, 0, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 0, 718,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 719, 720, 721, 0, 335, 336, 722, 0, 0,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 0,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 731, 0, 732, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 3792, 734,
	735, 527, 0, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 0, 443, 444, 445, 0,
	0, 736, 446, 528, 447, 737, 738, 0, 739, 0,
	448, 449, 451, 0, 740, 0, 450, 452, 453, 0,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 741, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 0, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	0, 520, 508, 0, 0, 0, 522, 523, 524, 525,
	0, 742, 526, 743, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 0, 539, 0, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 0, 602, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 0, 631, 752, 632, 613,
	614, 633, 634, 0, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 756, 757, 758, 759, 0, 685,
	0, 674, 676, 677, 678, 679, 760, 680, 761, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 762, 763, 764, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 298, 0, 0,
	0, 708, 709, 766, 710, 711, 712, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 314, 0, 315, 316, 317, 0,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 719, 720, 721,
	0, 335, 336, 722, 0, 0, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 0, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 3780, 734, 735, 527, 0, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 0, 443, 444, 445, 0, 0, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 0,
	740, 0, 450, 452, 453, 0, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 741, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 0, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 0, 520, 508, 0,
	0, 0, 522, 523, 524, 525, 0, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 0, 539, 0,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 0, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 0,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	762, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 298, 0, 0, 0, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 0, 0, 0, 0, 0, 713, 0, 0, 0,
	314, 0, 315, 316, 317, 0, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	0, 0, 334, 719, 720, 721, 0, 335, 336, 722,
	0, 0, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 367, 368, 0, 369,
	371, 723, 724, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 726, 727, 404, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 0, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 731, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	3777, 734, 735, 527, 0, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 0, 443, 444,
	445, 0, 0, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 0, 740, 0, 450, 452,
	453, 0, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 741, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 471, 472,
	473, 476, 0, 0, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 0, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 0, 520, 508, 0, 0, 0, 522, 523,
	524, 525, 0, 742, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 0, 539, 0, 745, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 748, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 0, 602, 603,
	604, 605, 606, 751, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 0, 631, 752,
	632, 613, 614, 633, 634, 0, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 755, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 756, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 760, 680,
	761, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 0,
	696, 0, 0, 697, 698, 699, 762, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 298,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 314, 0, 315, 316,
	317, 0, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 721, 0, 335, 336, 722, 0, 0, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 0, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 731, 0, 732, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 3366, 734, 735, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 0, 443, 444, 445, 0, 0, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 0, 740, 0, 450, 452, 453, 0, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	0, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 0, 520,
	508, 0, 0, 0, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 0,
	539, 0, 745, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 0, 602, 603, 604, 605, 606, 751,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 298, 0, 0, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 713, 0,
	0, 0, 314, 0, 315, 316, 317, 0, 318, 319,
	320, 321, 322, 323, 324, 714, 715, 0, 325, 716,
	326, 717, 0, 718, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 719, 720, 721, 0, 335,
	336, 722, 0, 0, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 367, 368,
	0, 369, 371, 723, 724, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 725, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 726, 727, 404,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 407,
	728, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 0, 414, 415, 416, 729, 730, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	731, 0, 732, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 733, 734, 735, 527, 0, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 0,
	443, 444, 445, 0, 0, 736, 446, 528, 447, 737,
	738, 0, 739, 0, 448, 449, 451, 0, 740, 0,
	450, 452, 453, 0, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	741, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 0, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 0, 520, 508, 0, 0, 0,
	522, 523, 524, 525, 0, 742, 526, 743, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 744, 0, 539, 0, 745, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 746, 554, 555, 556, 747,
	557, 558, 559, 748, 560, 749, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 750, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 0,
	602, 603, 604, 605, 606, 751, 607, 0, 608, 609,
	841, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 0,
	631, 752, 632, 613, 614, 633, 634, 0, 635, 636,
	637, 638, 639, 640, 641, 753, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	754, 652, 653, 654, 655, 755, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 756, 757,
	758, 759, 0, 685, 0, 674, 676, 677, 678, 679,
	760, 680, 761, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 762, 763,
	764, 0, 701, 700, 702, 703, 704, 765, 705, 706,
	707, 298, 0, 0, 0, 708, 709, 766, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 0, 713, 0, 2536, 0, 314, 0,
	315, 316, 317, 0, 318, 319, 320, 321, 322, 323,
	324, 714, 715, 0, 325, 716, 326, 717, 0, 718,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 719, 720, 721, 0, 335, 336, 722, 0, 0,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 367, 368, 0, 369, 371, 723,
	724, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	725, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 726, 727, 404, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 407, 728, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 0,
	414, 415, 416, 729, 730, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 731, 0, 732, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 733, 734,
	735, 527, 0, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 0, 443, 444, 445, 0,
	0, 736, 446, 528, 447, 737, 738, 0, 739, 0,
	448, 449, 451, 0, 740, 0, 450, 452, 453, 0,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 741, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 0, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	0, 520, 508, 0, 0, 0, 522, 523, 524, 525,
	0, 742, 526, 743, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	744, 0, 539, 0, 745, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 746, 554, 555, 556, 747, 557, 558, 559, 748,
	560, 749, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 750, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 0, 602, 603, 604, 605,
	606, 751, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 0, 0, 752, 632, 613,
	614, 633, 634, 0, 635, 636, 637, 638, 639, 640,
	641, 753, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 754, 652, 653, 654,
	655, 755, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 756, 757, 758, 759, 0, 685,
	0, 674, 676, 677, 678, 679, 760, 680, 761, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 762, 763, 764, 0, 701, 700,
	702, 703, 704, 765, 705, 706, 707, 298, 0, 0,
	0, 708, 709, 766, 710, 711, 712, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	713, 0, 0, 0, 314, 0, 315, 316, 317, 0,
	318, 319, 320, 321, 322, 323, 324, 714, 715, 0,
	325, 716, 326, 717, 0, 718, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 719, 720, 721,
	0, 335, 336, 722, 0, 0, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	367, 368, 0, 369, 371, 723, 724, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 725, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 726,
	727, 404, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 407, 728, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 0, 414, 415, 416, 729,
	730, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 731, 0, 732, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 1419, 734, 735, 527, 0, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 0, 443, 444, 445, 0, 0, 736, 446, 528,
	447, 737, 738, 0, 739, 0, 448, 449, 451, 0,
	740, 0, 450, 452, 453, 0, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 741, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 0, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 0, 520, 508, 0,
	0, 0, 522, 523, 524, 525, 0, 742, 526, 743,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 744, 0, 539, 0,
	745, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 746, 554, 555,
	556, 747, 557, 558, 559, 748, 560, 749, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 750, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 0, 602, 603, 604, 605, 606, 751, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 0, 631, 752, 632, 613, 614, 633, 634, 0,
	635, 636, 637, 638, 639, 640, 641, 753, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 754, 652, 653, 654, 655, 755, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	756, 757, 758, 759, 0, 685, 0, 674, 676, 677,
	678, 679, 760, 680, 761, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	762, 763, 764, 0, 701, 700, 702, 703, 704, 765,
	705, 706, 707, 298, 0, 0, 0, 708, 709, 766,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 0, 0, 0, 0, 0, 713, 0, 0, 0,
	314, 0, 315, 316, 317, 0, 318, 319, 320, 321,
	322, 323, 324, 714, 715, 0, 325, 716, 326, 717,
	0, 718, 327, 328, 329, 330, 331, 332, 333, 0,
	0, 0, 334, 719, 720, 721, 0, 335, 336, 722,
	0, 0, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 367, 368, 0, 369,
	371, 723, 724, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 725, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 726, 727, 404, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 407, 728, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 0, 414, 415, 416, 729, 730, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 731, 0,
	732, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	733, 734, 735, 527, 0, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 0, 443, 444,
	445, 0, 0, 736, 446, 528, 447, 737, 738, 0,
	739, 0, 448, 449, 451, 0, 740, 0, 450, 452,
	453, 0, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 741, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 471, 472,
	473, 476, 0, 0, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 0, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 0, 520, 508, 0, 0, 0, 522, 523,
	524, 525, 0, 742, 526, 743, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 744, 0, 539, 0, 745, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 746, 554, 555, 556, 747, 557, 558,
	559, 748, 560, 749, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 750,
	574, 575, 1345, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 0, 602, 603,
	604, 605, 606, 751, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 0, 631, 752,
	632, 613, 614, 633, 634, 0, 635, 636, 637, 638,
	639, 640, 641, 753, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 754, 652,
	653, 654, 655, 755, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 756, 757, 758, 759,
	0, 685, 0, 674, 676, 677, 678, 679, 760, 680,
	761, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 0,
	696, 0, 0, 697, 698, 699, 762, 763, 764, 0,
	701, 700, 702, 703, 704, 765, 705, 706, 707, 298,
	0, 0, 0, 708, 709, 766, 710, 711, 712, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 0, 713, 0, 0, 0, 314, 0, 315, 316,
	317, 0, 318, 319, 320, 321, 322, 323, 324, 714,
	715, 0, 325, 716, 326, 717, 0, 718, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 719,
	720, 721, 0, 335, 336, 722, 0, 0, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 367, 368, 0, 369, 371, 723, 724, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 725, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 726, 727, 404, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 407, 728, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 0, 414, 415,
	416, 729, 730, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 731, 0, 732, 0, 0, 428,
	429, 430, 431, 432, 433, 434, 733, 734, 735, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 0, 443, 444, 445, 0, 0, 736,
	446, 528, 447, 737, 738, 0, 739, 0, 448, 449,
	451, 0, 740, 0, 450, 452, 453, 0, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 741, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	0, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 0, 520,
	508, 0, 0, 0, 522, 523, 524, 525, 0, 742,
	526, 743, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 744, 0,
	539, 0, 745, 540, 541, 533, 542, 543, 544, 0,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 746,
	554, 555, 556, 747, 557, 558, 559, 748, 560, 749,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 0, 572, 573, 750, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 0, 602, 603, 604, 605, 606, 751,
	0, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 0, 631, 752, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 753,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 754, 652, 653, 654, 655, 755,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 756, 757, 758, 759, 0, 685, 0, 674,
	676, 677, 678, 679, 760, 680, 761, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 762, 763, 764, 0, 701, 700, 702, 703,
	704, 765, 705, 706, 707, 1755, 0, 1464, 0, 708,
	709, 766, 710, 711, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 307, 306, 308, 309,
	310, 311, 0, 312, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 315, 316, 317, 0,
	318, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 0, 326, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 0, 0, 0, 334, 0, 0, 0,
	0, 335, 336, 0, 0, 0, 0, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 0, 346, 347, 348,
	345, 349, 0, 350, 0, 351, 352, 353, 354, 355,
	356, 357, 0, 358, 359, 360, 0, 361, 362, 363,
	0, 0, 0, 0, 0, 0, 1466, 364, 365, 366,
	367, 368, 0, 369, 371, 0, 0, 0, 374, 376,
	370, 372, 0, 375, 373, 377, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 0, 384, 385, 386, 0,
	387, 388, 389, 0, 390, 391, 0, 392, 393, 394,
	396, 398, 395, 397, 399, 400, 401, 402, 403, 0,
	0, 404, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 407, 0, 0, 0, 0, 408, 0, 409, 410,
	411, 0, 412, 413, 0, 0, 414, 415, 416, 0,
	0, 417, 418, 419, 420, 421, 422, 423, 424, 425,
	0, 426, 0, 0, 0, 427, 0, 428, 429, 430,
	431, 432, 433, 434, 1754, 0, 0, 527, 0, 435,
	436, 437, 0, 438, 439, 440, 441, 442, 0, 0,
	0, 0, 443, 444, 445, 0, 0, 0, 446, 528,
	447, 0, 0, 0, 0, 0, 448, 449, 451, 0,
	0, 0, 450, 452, 453, 0, 454, 0, 0, 0,
	455, 456, 457, 458, 459, 460, 0, 461, 463, 462,
	0, 465, 0, 464, 0, 466, 467, 0, 0, 468,
	469, 470, 471, 472, 473, 476, 0, 0, 474, 475,
	477, 478, 0, 479, 480, 482, 485, 481, 483, 484,
	486, 499, 500, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 502, 0, 501, 0, 503,
	504, 505, 506, 507, 514, 516, 517, 512, 513, 515,
	518, 519, 521, 509, 510, 511, 0, 520, 508, 0,
	0, 0, 522, 523, 524, 525, 0, 0, 526, 0,
	529, 530, 0, 0, 531, 0, 532, 0, 0, 534,
	535, 536, 0, 0, 537, 538, 0, 0, 539, 0,
	0, 540, 541, 533, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 0, 552, 553, 0, 554, 555,
	556, 0, 557, 558, 559, 0, 560, 0, 561, 562,
	0, 563, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 0, 574, 575, 577, 576, 578, 0,
	579, 0, 580, 581, 582, 0, 0, 0, 0, 0,
	583, 584, 586, 0, 587, 588, 589, 590, 585, 591,
	592, 593, 594, 595, 596, 0, 598, 599, 597, 600,
	601, 0, 602, 603, 604, 605, 606, 0, 607, 0,
	608, 609, 616, 617, 618, 610, 611, 612, 619, 620,
	621, 622, 623, 624, 0, 626, 627, 625, 628, 629,
	630, 1467, 631, 0, 632, 613, 614, 633, 634, 0,
	635, 636, 637, 638, 639, 640, 641, 0, 0, 642,
	0, 643, 644, 645, 646, 647, 648, 650, 615, 651,
	656, 657, 0, 652, 653, 654, 655, 0, 659, 660,
	661, 662, 0, 663, 664, 0, 658, 649, 0, 665,
	666, 667, 668, 669, 670, 0, 671, 672, 0, 673,
	0, 0, 0, 0, 0, 685, 0, 674, 676, 677,
	678, 679, 0, 680, 0, 0, 681, 682, 683, 684,
	675, 686, 687, 0, 0, 688, 689, 691, 693, 694,
	690, 692, 695, 0, 696, 0, 0, 697, 698, 699,
	0, 0, 0, 0, 701, 700, 702, 703, 704, 0,
	705, 706, 707, 1676, 0, 1464, 0, 708, 709, 0,
	710, 711, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 307, 306, 308, 309, 310, 311,
	0, 312, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 315, 316, 317, 0, 318, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 0,
	326, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 0, 0, 0, 334, 0, 0, 0, 0, 335,
	336, 0, 0, 0, 0, 337, 338, 339, 340, 341,
	342, 343, 344, 0, 0, 346, 347, 348, 345, 349,
	0, 350, 0, 351, 352, 353, 354, 355, 356, 357,
	0, 358, 359, 360, 0, 361, 362, 363, 0, 0,
	0, 0, 0, 0, 1466, 364, 365, 366, 367, 368,
	0, 369, 371, 0, 0, 0, 374, 376, 370, 372,
	0, 375, 373, 377, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 0, 384, 385, 386, 0, 387, 388,
	389, 0, 390, 391, 0, 392, 393, 394, 396, 398,
	395, 397, 399, 400, 401, 402, 403, 0, 0, 404,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 407,
	0, 0, 0, 0, 408, 0, 409, 410, 411, 0,
	412, 413, 0, 0, 414, 415, 416, 0, 0, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 0, 426,
	0, 0, 0, 427, 0, 428, 429, 430, 431, 432,
	433, 434, 1675, 0, 0, 527, 0, 435, 436, 437,
	0, 438, 439, 440, 441, 442, 0, 0, 0, 0,
	443, 444, 445, 0, 0, 0, 446, 528, 447, 0,
	0, 0, 0, 0, 448, 449, 451, 0, 0, 0,
	450, 452, 453, 0, 454, 0, 0, 0, 455, 456,
	457, 458, 459, 460, 0, 461, 463, 462, 0, 465,
	0, 464, 0, 466, 467, 0, 0, 468, 469, 470,
	471, 472, 473, 476, 0, 0, 474, 475, 477, 478,
	0, 479, 480, 482, 485, 481, 483, 484, 486, 499,
	500, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 502, 0, 501, 0, 503, 504, 505,
	506, 507, 514, 516, 517, 512, 513, 515, 518, 519,
	521, 509, 510, 511, 0, 520, 508, 0, 0, 0,
	522, 523, 524, 525, 0, 0, 526, 0, 529, 530,
	0, 0, 531, 0, 532, 0, 0, 534, 535, 536,
	0, 0, 537, 538, 0, 0, 539, 0, 0, 540,
	541, 533, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 552, 553, 0, 554, 555, 556, 0,
	557, 558, 559, 0, 560, 0, 561, 562, 0, 563,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	573, 0, 574, 575, 577, 576, 578, 0, 579, 0,
	580, 581, 582, 0, 0, 0, 0, 0, 583, 584,
	586, 0, 587, 588, 589, 590, 585, 591, 592, 593,
	594, 595, 596, 0, 598, 599, 597, 600, 601, 0,
	602, 603, 604, 605, 606, 0, 607, 0, 608, 609,
	616, 617, 618, 610, 611, 612, 619, 620, 621, 622,
	623, 624, 0, 626, 627, 625, 628, 629, 630, 1467,
	631, 0, 632, 613, 614, 633, 634, 0, 635, 636,
	637, 638, 639, 640, 641, 0, 0, 642, 0, 643,
	644, 645, 646, 647, 648, 650, 615, 651, 656, 657,
	0, 652, 653, 654, 655, 0, 659, 660, 661, 662,
	0, 663, 664, 0, 658, 649, 0, 665, 666, 667,
	668, 669, 670, 0, 671, 672, 0, 673, 0, 0,
	0, 0, 0, 685, 0, 674, 676, 677, 678, 679,
	0, 680, 0, 0, 681, 682, 683, 684, 675, 686,
	687, 0, 0, 688, 689, 691, 693, 694, 690, 692,
	695, 0, 696, 0, 0, 697, 698, 699, 0, 0,
	0, 0, 701, 700, 702, 703, 704, 0, 705, 706,
	707, 1462, 0, 1464, 0, 708, 709, 0, 710, 711,
	712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 307, 306, 308, 309, 310, 311, 0, 312,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 315, 316, 317, 0, 318, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 0, 326, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 0,
	0, 0, 334, 0, 0, 0, 0, 335, 336, 0,
	0, 0, 0, 337, 338, 339, 340, 341, 342, 343,
	344, 0, 0, 346, 347, 348, 345, 349, 0, 350,
	0, 351, 352, 353, 354, 355, 356, 357, 0, 358,
	359, 360, 0, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 1466, 364, 365, 366, 367, 368, 0, 369,
	371, 0, 0, 0, 374, 376, 370, 372, 0, 375,
	373, 377, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 0, 384, 385, 386, 0, 387, 388, 389, 0,
	390, 391, 0, 392, 393, 394, 396, 398, 395, 397,
	399, 400, 401, 402, 403, 0, 0, 404, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 407, 0, 0,
	0, 0, 408, 0, 409, 410, 411, 0, 412, 413,
	0, 0, 414, 415, 416, 0, 0, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 0, 426, 0, 0,
	0, 427, 0, 428, 429, 430, 431, 432, 433, 434,
	1461, 0, 0, 527, 0, 435, 436, 437, 0, 438,
	439, 440, 441, 442, 0, 0, 0, 0, 443, 444,
	445, 0, 0, 0, 446, 528, 447, 0, 0, 0,
	0, 0, 448, 449, 451, 0, 0, 0, 450, 452,
	453, 0, 454, 0, 0, 0, 455, 456, 457, 458,
	459, 460, 0, 461, 463, 462, 0, 465, 0, 464,
	0, 466, 467, 0, 0, 468, 469, 470, 471, 472,
	473, 476, 0, 0, 474, 475, 477, 478, 0, 479,
	480, 482, 485, 481, 483, 484, 486, 499, 500, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 502, 0, 501, 0, 503, 504, 505, 506, 507,
	514, 516, 517, 512, 513, 515, 518, 519, 521, 509,
	510, 511, 0, 520, 508, 0, 0, 0, 522, 523,
	524, 525, 0, 0, 526, 0, 529, 530, 0, 0,
	531, 0, 532, 0, 0, 534, 535, 536, 0, 0,
	537, 538, 0, 0, 539, 0, 0, 540, 541, 533,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	0, 552, 553, 0, 554, 555, 556, 0, 557, 558,
	559, 0, 560, 0, 561, 562, 0, 563, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	574, 575, 577, 576, 578, 0, 579, 0, 580, 581,
	582, 0, 0, 0, 0, 0, 583, 584, 586, 0,
	587, 588, 589, 590, 585, 591, 592, 593, 594, 595,
	596, 0, 598, 599, 597, 600, 601, 0, 602, 603,
	604, 605, 606, 0, 607, 0, 608, 609, 616, 617,
	618, 610, 611, 612, 619, 620, 621, 622, 623, 624,
	0, 626, 627, 625, 628, 629, 630, 1467, 631, 0,
	632, 613, 614, 633, 634, 0, 635, 636, 637, 638,
	639, 640, 641, 0, 0, 642, 0, 643, 644, 645,
	646, 647, 648, 650, 615, 651, 656, 657, 0, 652,
	653, 654, 655, 0, 659, 660, 661, 662, 0, 663,
	664, 0, 658, 649, 0, 665, 666, 667, 668, 669,
	670, 0, 671, 672, 0, 673, 0, 0, 0, 0,
	0, 685, 0, 674, 676, 677, 678, 679, 0, 680,
	0, 0, 681, 682, 683, 684, 675, 686, 687, 0,
	0, 688, 689, 691, 693, 694, 690, 692, 695, 0,
	696, 0, 0, 697, 698, 699, 0, 0, 0, 0,
	701, 700, 702, 703, 704, 0, 705, 706, 707, 2284,
	0, 1464, 0, 708, 709, 0, 710, 711, 712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	315, 316, 317, 0, 318, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 0, 326, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 0, 0, 0, 0, 335, 336, 0, 0, 0,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	1466, 364, 365, 366, 367, 368, 0, 369, 371, 0,
	0, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	0, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 0, 0, 404, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 407, 0, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 0,
	414, 415, 416, 0, 0, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 0, 0, 0, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 0, 0,
	0, 527, 0, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 0, 443, 444, 445, 0,
	0, 0, 446, 528, 447, 0, 0, 0, 0, 0,
	448, 449, 451, 0, 0, 0, 450, 452, 453, 0,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 0, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 0, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	0, 520, 508, 0, 0, 0, 522, 523, 524, 525,
	0, 0, 526, 0, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	0, 0, 539, 0, 0, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 0, 554, 555, 556, 0, 557, 558, 559, 0,
	560, 0, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 0, 602, 603, 604, 605,
	606, 0, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 1467, 631, 0, 632, 613,
	614, 633, 634, 0, 635, 636, 637, 638, 639, 640,
	641, 0, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 0, 652, 653, 654,
	655, 0, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 0, 0, 0, 0, 0, 685,
	0, 674, 676, 677, 678, 679, 0, 680, 0, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 0, 0, 0, 0, 701, 700,
	702, 703, 704, 0, 705, 706, 707, 2251, 0, 1464,
	0, 708, 709, 0, 710, 711, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 307, 306,
	308, 309, 310, 311, 0, 312, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 315, 316,
	317, 0, 318, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 0, 326, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 0, 0, 0, 334, 0,
	0, 0, 0, 335, 336, 0, 0, 0, 0, 337,
	338, 339, 340, 341, 342, 343, 344, 0, 0, 346,
	347, 348, 345, 349, 0, 350, 0, 351, 352, 353,
	354, 355, 356, 357, 0, 358, 359, 360, 0, 361,
	362, 363, 0, 0, 0, 0, 0, 0, 1466, 364,
	365, 366, 367, 368, 0, 369, 371, 0, 0, 0,
	374, 376, 370, 372, 0, 375, 373, 377, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 0, 384, 385,
	386, 0, 387, 388, 389, 0, 390, 391, 0, 392,
	393, 394, 396, 398, 395, 397, 399, 400, 401, 402,
	403, 0, 0, 404, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 407, 0, 0, 0, 0, 408, 0,
	409, 410, 411, 0, 412, 413, 0, 0, 414, 415,
	416, 0, 0, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 0, 426, 0, 0, 0, 427, 0, 428,
	429, 430, 431, 432, 433, 434, 0, 0, 0, 527,
	0, 435, 436, 437, 0, 438, 439, 440, 441, 442,
	0, 0, 0, 0, 443, 444, 445, 0, 0, 0,
	446, 528, 447, 0, 0, 0, 0, 0, 448, 449,
	451, 0, 0, 0, 450, 452, 453, 0, 454, 0,
	0, 0, 455, 456, 457, 458, 459, 460, 0, 461,
	463, 462, 0, 465, 0, 464, 0, 466, 467, 0,
	0, 468, 469, 470, 471, 472, 473, 476, 0, 0,
	474, 475, 477, 478, 0, 479, 480, 482, 485, 481,
	483, 484, 486, 499, 500, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 502, 0, 501,
	0, 503, 504, 505, 506, 507, 514, 516, 517, 512,
	513, 515, 518, 519, 521, 509, 510, 511, 0, 520,
	508, 0, 0, 0, 522, 523, 524, 525, 0, 0,
	526, 0, 529, 530, 0, 0, 531, 0, 532, 0,
	0, 534, 535, 536, 0, 0, 537, 538, 0, 0,
	539, 0, 0, 540, 541, 533, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 0, 552, 553, 0,
	554, 555, 556, 0, 557, 558, 559, 0, 560, 0,
	561, 562, 0, 563, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 573, 0, 574, 575, 577, 576,
	578, 0, 579, 0, 580, 581, 582, 0, 0, 0,
	0, 0, 583, 584, 586, 0, 587, 588, 589, 590,
	585, 591, 592, 593, 594, 595, 596, 0, 598, 599,
	597, 600, 601, 0, 602, 603, 604, 605, 606, 0,
	607, 0, 608, 609, 616, 617, 618, 610, 611, 612,
	619, 620, 621, 622, 623, 624, 0, 626, 627, 625,
	628, 629, 630, 1467, 631, 0, 632, 613, 614, 633,
	634, 0, 635, 636, 637, 638, 639, 640, 641, 0,
	0, 642, 0, 643, 644, 645, 646, 647, 648, 650,
	615, 651, 656, 657, 0, 652, 653, 654, 655, 0,
	659, 660, 661, 662, 0, 663, 664, 0, 658, 649,
	0, 665, 666, 667, 668, 669, 670, 0, 671, 672,
	0, 673, 0, 0, 0, 0, 0, 685, 0, 674,
	676, 677, 678, 679, 0, 680, 0, 0, 681, 682,
	683, 684, 675, 686, 687, 0, 0, 688, 689, 691,
	693, 694, 690, 692, 695, 0, 696, 0, 0, 697,
	698, 699, 0, 0, 0, 0, 701, 700, 702, 703,
	704, 1464, 705, 706, 707, 0, 0, 0, 0, 708,
	709, 0, 710, 711, 712, 0, 0, 0, 304, 305,
	307, 306, 308, 309, 310, 311, 0, 312, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	315, 316, 317, 0, 318, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 0, 326, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 0, 0, 0,
	334, 0, 0, 0, 0, 335, 336, 0, 0, 0,
	0, 337, 338, 339, 340, 341, 342, 343, 344, 0,
	0, 346, 347, 348, 345, 349, 0, 350, 0, 351,
	352, 353, 354, 355, 356, 357, 0, 358, 359, 360,
	0, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	1466, 364, 365, 366, 367, 368, 0, 369, 371, 0,
	0, 0, 374, 376, 370, 372, 0, 375, 373, 377,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 0,
	384, 385, 386, 0, 387, 388, 389, 0, 390, 391,
	0, 392, 393, 394, 396, 398, 395, 397, 399, 400,
	401, 402, 403, 0, 0, 404, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 407, 0, 0, 0, 0,
	408, 0, 409, 410, 411, 0, 412, 413, 0, 0,
	414, 415, 416, 0, 0, 417, 418, 419, 420, 421,
	422, 423, 424, 425, 0, 426, 0, 0, 0, 427,
	0, 428, 429, 430, 431, 432, 433, 434, 0, 0,
	0, 527, 0, 435, 436, 437, 0, 438, 439, 440,
	441, 442, 0, 0, 0, 0, 443, 444, 445, 0,
	0, 0, 446, 528, 447, 0, 0, 0, 0, 0,
	448, 449, 451, 0, 0, 0, 450, 452, 453, 0,
	454, 0, 0, 0, 455, 456, 457, 458, 459, 460,
	0, 461, 463, 462, 0, 465, 0, 464, 0, 466,
	467, 0, 0, 468, 469, 470, 471, 472, 473, 476,
	0, 0, 474, 475, 477, 478, 0, 479, 480, 482,
	485, 481, 483, 484, 486, 499, 500, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 502,
	0, 501, 0, 503, 504, 505, 506, 507, 514, 516,
	517, 512, 513, 515, 518, 519, 521, 509, 510, 511,
	0, 520, 508, 0, 0, 0, 522, 523, 524, 525,
	0, 0, 526, 0, 529, 530, 0, 0, 531, 0,
	532, 0, 0, 534, 535, 536, 0, 0, 537, 538,
	0, 0, 539, 0, 0, 540, 541, 533, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 0, 552,
	553, 0, 554, 555, 556, 0, 557, 558, 559, 0,
	560, 0, 561, 562, 0, 563, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 573, 0, 574, 575,
	577, 576, 578, 0, 579, 0, 580, 581, 582, 0,
	0, 0, 0, 0, 583, 584, 586, 0, 587, 588,
	589, 590, 585, 591, 592, 593, 594, 595, 596, 0,
	598, 599, 597, 600, 601, 0, 602, 603, 604, 605,
	606, 0, 607, 0, 608, 609, 616, 617, 618, 610,
	611, 612, 619, 620, 621, 622, 623, 624, 0, 626,
	627, 625, 628, 629, 630, 1467, 631, 0, 632, 613,
	614, 633, 634, 0, 635, 636, 637, 638, 639, 640,
	641, 0, 0, 642, 0, 643, 644, 645, 646, 647,
	648, 650, 615, 651, 656, 657, 0, 652, 653, 654,
	655, 0, 659, 660, 661, 662, 0, 663, 664, 0,
	658, 649, 0, 665, 666, 667, 668, 669, 670, 0,
	671, 672, 0, 673, 0, 0, 0, 0, 0, 685,
	0, 674, 676, 677, 678, 679, 0, 680, 0, 0,
	681, 682, 683, 684, 675, 686, 687, 0, 0, 688,
	689, 691, 693, 694, 690, 692, 695, 0, 696, 0,
	0, 697, 698, 699, 0, 0, 0, 0, 701, 700,
	702, 703, 704, 0, 705, 706, 707, 0, 0, 0,
	0, 708, 709, 0, 710, 711, 712, 1976, 1977, 0,
	2009, 2010, 2011, 2020, 2021, 2022, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2013, 2007, 0, 0, 0, 0, 0, 0, 0, 1979,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2026, 1976, 1977, 0, 2009, 2010, 2011, 2020, 2021, 2022,
	0, 0, 0, 0, 0, 0, 0, 0, 2032, 0,
	0, 0, 0, 0, 2013, 2007, 0, 1978, 0, 0,
	0, 0, 0, 1979, 0, 0, 0, 0, 1998, 0,
	0, 0, 0, 0, 2026, 1976, 1977, 1995, 2009, 2010,
	2011, 2020, 2021, 2022, 0, 0, 0, 0, 0, 0,
	0, 0, 2032, 0, 0, 0, 0, 0, 2013, 2007,
	0, 1978, 0, 0, 0, 0, 0, 1979, 0, 0,
	0, 0, 1998, 0, 0, 0, 0, 0, 2026, 0,
	0, 1995, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2032, 0, 0, 0,
	0, 0, 0, 0, 0, 1978, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1998, 0, 2001, 2002,
	2003, 2004, 0, 0, 0, 1995, 0, 0, 1984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2001, 2002, 2003, 2004, 0, 0, 0, 0,
	0, 2017, 1984, 0, 0, 2027, 0, 0, 0, 0,
	0, 0, 2006, 2008, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2023, 0, 2024, 0, 2001, 2002, 2003, 2004,
	0, 1993, 1994, 0, 0, 2017, 1984, 0, 0, 2027,
	0, 0, 0, 0, 0, 0, 2006, 2008, 0, 0,
	2015, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1999, 2023, 0, 2024, 0,
	0, 0, 0, 0, 0, 1993, 1994, 0, 0, 2017,
	0, 0, 0, 2027, 0, 0, 0, 0, 0, 0,
	2006, 2008, 0, 0, 2015, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1999,
	2023, 0, 2024, 0, 2025, 0, 0, 0, 0, 1993,
	1994, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2014, 0, 0, 2015, 0,
	0, 0, 0, 0, 0, 0, 2029, 0, 0, 0,
	0, 0, 0, 1999, 0, 0, 0, 0, 2025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2014,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2029, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2025, 0, 0, 0, 2005, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2014, 0, 0, 0, 0, 0, 0,
	0, 0, 2000, 0, 2029, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2005, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2018, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 1976, 1977,
	0, 2009, 2010, 2011, 2020, 2021, 2022, 0, 0, 0,
	0, 0, 0, 0, 2005, 0, 0, 0, 2031, 0,
	0, 2013, 2007, 0, 0, 0, 2018, 0, 0, 0,
	1979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2000, 2026, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2032,
	0, 0, 2031, 0, 0, 0, 0, 0, 1978, 0,
	2018, 0, 0, 0, 0, 0, 0, 0, 0, 1998,
	0, 0, 0, 0, 0, 0, 0, 0, 1995, 0,
	0, 0, 0, 0, 0, 0, 2016, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2031, 0, 1990, 1991,
	1997, 2019, 1996, 1992, 0, 1989, 1987, 1988, 1980, 1981,
	1982, 1983, 1985, 1986, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2837, 0, 0, 0, 0, 0, 0,
	2016, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 1991, 1997, 2019, 1996, 1992, 0, 1989,
	1987, 1988, 1980, 1981, 1982, 1983, 1985, 1986, 0, 2001,
	2002, 2003, 2004, 5159, 0, 0, 0, 0, 0, 1984,
	0, 0, 0, 0, 2016, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 1991, 1997, 2019,
	1996, 1992, 0, 1989, 1987, 1988, 1980, 1981, 1982, 1983,
	1985, 1986, 0, 0, 0, 0, 0, 5155, 0, 0,
	0, 0, 2017, 0, 1976, 1977, 2027, 2009, 2010, 2011,
	2020, 2021, 2022, 2006, 2008, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2013, 2007, 0,
	0, 0, 0, 2023, 0, 2024, 1979, 0, 0, 0,
	0, 0, 1993, 1994, 0, 0, 0, 2026, 1976, 1977,
	0, 2009, 2010, 2011, 2020, 2021, 2022, 0, 0, 0,
	0, 2015, 0, 0, 0, 2032, 0, 0, 0, 0,
	0, 2013, 2007, 0, 1978, 0, 1999, 0, 0, 0,
	1979, 0, 0, 0, 0, 1998, 0, 0, 0, 0,
	0, 2026, 0, 0, 1995, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2032,
	0, 0, 0, 0, 0, 0, 0, 0, 1978, 0,
	0, 0, 0, 0, 0, 2025, 0, 0, 0, 1998,
	0, 0, 0, 0, 0, 0, 0, 0, 1995, 0,
	0, 0, 0, 0, 0, 0, 2014, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2029, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2001, 2002, 2003, 2004, 0,
	0, 0, 0, 0, 0, 1984, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2005, 0, 2001,
	2002, 2003, 2004, 0, 0, 0, 0, 0, 2017, 1984,
	0, 0, 2027, 0, 0, 0, 0, 0, 0, 2006,
	2008, 0, 0, 2000, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2023,
	0, 2024, 0, 0, 0, 0, 0, 0, 1993, 1994,
	0, 0, 2017, 2018, 1976, 1977, 2027, 2009, 2010, 2011,
	2020, 2021, 2022, 2006, 2008, 0, 0, 2015, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2013, 2007, 0,
	0, 0, 1999, 2023, 0, 2024, 1979, 0, 0, 2031,
	0, 0, 1993, 1994, 0, 0, 0, 2026, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2015, 0, 0, 0, 2032, 0, 0, 0, 0,
	0, 0, 0, 0, 1978, 0, 1999, 0, 0, 0,
	0, 2025, 0, 0, 0, 1998, 0, 0, 0, 0,
	0, 0, 0, 0, 1995, 0, 0, 0, 0, 0,
	0, 0, 2014, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2029, 0, 0, 0, 2016, 0, 0,
	0, 0, 0, 0, 0, 2025, 0, 0, 0, 1990,
	1991, 1997, 2019, 1996, 1992, 0, 1989, 1987, 1988, 1980,
	1981, 1982, 1983, 1985, 1986, 0, 2014, 0, 0, 0,
	5055, 0, 0, 0, 0, 0, 0, 2029, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2005, 0, 2001, 2002, 2003, 2004, 0,
	0, 0, 0, 0, 0, 1984, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2000,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2005, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2017, 2018,
	0, 0, 2027, 0, 0, 0, 0, 0, 0, 2006,
	2008, 0, 0, 2000, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2023,
	0, 2024, 0, 0, 0, 2031, 0, 0, 1993, 1994,
	0, 0, 0, 2018, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2015, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1999, 0, 0, 0, 0, 0, 0, 2031,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2016, 0, 0, 0, 0, 0, 0,
	0, 2025, 0, 0, 0, 1990, 1991, 1997, 2019, 1996,
	1992, 0, 1989, 1987, 1988, 1980, 1981, 1982, 1983, 1985,
	1986, 0, 2014, 0, 0, 0, 5004, 0, 0, 0,
	0, 0, 0, 2029, 0, 0, 0, 2016, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	1991, 1997, 2019, 1996, 1992, 0, 1989, 1987, 1988, 1980,
	1981, 1982, 1983, 1985, 1986, 0, 0, 0, 0, 0,
	5003, 1976, 1977, 0, 2009, 2010, 2011, 2020, 2021, 2022,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2005, 2013, 2007, 0, 0, 0, 0,
	0, 0, 0, 1979, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2026, 0, 0, 0, 0, 2000,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2032, 0, 0, 0, 0, 0, 0, 1976,
	1977, 1978, 2009, 2010, 2011, 2020, 2021, 2022, 0, 2018,
	0, 0, 1998, 0, 0, 0, 0, 0, 0, 0,
	0, 1995, 2013, 2007, 0, 0, 0, 0, 0, 0,
	0, 1979, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2026, 0, 0, 2031, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2032, 0, 0, 0, 0, 0, 0, 0, 0, 1978,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1998, 0, 0, 0, 0, 0, 0, 0, 0, 1995,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2001, 2002, 2003, 2004, 0, 0, 0, 0,
	0, 0, 1984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2016, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 1991, 1997, 2019, 1996,
	1992, 0, 1989, 1987, 1988, 1980, 1981, 1982, 1983, 1985,
	1986, 0, 0, 0, 0, 2017, 4804, 0, 0, 2027,
	0, 0, 0, 0, 0, 0, 2006, 2008, 0, 0,
	2001, 2002, 2003, 2004, 0, 0, 0, 0, 0, 0,
	1984, 0, 0, 0, 0, 0, 2023, 0, 2024, 0,
	0, 0, 0, 0, 0, 1993, 1994, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2015, 0, 0, 0, 0, 0,
	0, 0, 0, 2017, 0, 0, 0, 2027, 0, 1999,
	0, 0, 0, 0, 2006, 2008, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2023, 0, 2024, 0, 0, 0,
	0, 0, 0, 1993, 1994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2025, 0,
	0, 0, 2015, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1999, 0, 2014,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2029, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2014, 0, 0,
	2005, 0, 0, 0, 0, 0, 0, 0, 2029, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1976, 1977, 0, 2009, 2010, 2011, 2020, 2021,
	2022, 0, 0, 0, 0, 0, 2018, 0, 0, 0,
	0, 0, 0, 0, 0, 2013, 2007, 0, 2005, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2026, 0, 0, 0, 0,
	0, 0, 2031, 0, 2000, 0, 0, 0, 0, 0,
	0, 0, 0, 2032, 0, 0, 0, 0, 0, 0,
	0, 0, 1978, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1998, 2018, 0, 0, 0, 0, 0,
	0, 0, 1995, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2031, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2016, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 1991, 1997, 2019, 1996, 1992, 0, 1989,
	1987, 1988, 1980, 1981, 1982, 1983, 1985, 1986, 0, 0,
	0, 0, 0, 4624, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2001, 2002, 2003, 2004, 0, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2016, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 1991, 1997, 2019, 1996, 1992, 0, 1989, 1987, 1988,
	1980, 1981, 1982, 1983, 1985, 1986, 2017, 0, 0, 0,
	2027, 4528, 0, 0, 0, 0, 0, 2006, 2008, 0,
	0, 1976, 1977, 0, 2009, 2010, 2011, 2020, 2021, 2022,
	0, 0, 0, 0, 0, 0, 0, 2023, 0, 2024,
	0, 0, 0, 0, 2013, 2007, 1993, 1994, 0, 0,
	0, 0, 0, 1979, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2026, 2015, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1999, 0, 2032, 0, 0, 0, 0, 0, 0, 0,
	0, 1978, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1998, 0, 0, 0, 0, 0, 0, 0,
	0, 1995, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2025,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2014, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2029, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2001, 2002, 2003, 2004, 0, 0, 0, 0,
	0, 0, 1984, 0, 0, 0, 0, 0, 0, 1976,
	1977, 0, 2009, 2010, 2011, 2020, 2021, 2022, 0, 0,
	0, 2005, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2013, 2007, 0, 0, 0, 0, 0, 0,
	0, 1979, 0, 0, 0, 2017, 0, 2000, 0, 2027,
	0, 0, 2026, 0, 0, 0, 2006, 2008, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2032, 0, 0, 0, 0, 0, 2023, 2018, 2024, 1978,
	0, 0, 0, 0, 0, 1993, 1994, 0, 0, 0,
	1998, 0, 0, 0, 0, 0, 0, 0, 0, 1995,
	0, 0, 0, 0, 2015, 0, 0, 0, 0, 0,
	0, 0, 0, 2031, 0, 0, 0, 0, 0, 1999,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2001, 2002, 2003, 2004, 0, 0, 0, 0, 0, 2014,
	1984, 2016, 0, 0, 0, 0, 0, 0, 0, 0,
	2029, 0, 0, 1990, 1991, 1997, 2019, 1996, 1992, 0,
	1989, 1987, 1988, 1980, 1981, 1982, 1983, 1985, 1986, 0,
	0, 0, 0, 0, 4527, 0, 0, 0, 0, 0,
	0, 0, 0, 2017, 0, 0, 0, 2027, 0, 0,
	0, 0, 0, 0, 2006, 2008, 0, 0, 1976, 1977,
	0, 2009, 2010, 2011, 2020, 2021, 2022, 0, 0, 0,
	2005, 0, 0, 0, 2023, 0, 2024, 0, 0, 0,
	0, 2013, 2007, 1993, 1994, 0, 0, 0, 0, 0,
	1979, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 2026, 2015, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1999, 0, 2032,
	0, 0, 0, 0, 0, 0, 2018, 0, 1978, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1998,
	0, 0, 0, 0, 0, 0, 0, 0, 1995, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2031, 0, 0, 0, 2025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2014, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2029, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	2002, 2003, 2004, 0, 0, 0, 0, 0, 0, 1984,
	2016, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 1991, 1997, 2019, 1996, 1992, 2005, 1989,
	1987, 1988, 1980, 1981, 1982, 1983, 1985, 1986, 0, 0,
	0, 0, 0, 4526, 0, 0, 0, 0, 0, 0,
	0, 0, 2017, 0, 2000, 0, 2027, 0, 0, 0,
	0, 0, 0, 2006, 2008, 0, 0, 1976, 1977, 0,
	2009, 2010, 2011, 2020, 2021, 2022, 0, 0, 0, 0,
	0, 0, 0, 2023, 2018, 2024, 0, 0, 0, 0,
	2013, 2007, 1993, 1994, 0, 0, 0, 0, 0, 1979,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2026, 2015, 0, 0, 0, 0, 0, 0, 0, 0,
	2031, 0, 0, 0, 0, 0, 1999, 0, 2032, 0,
	0, 0, 0, 0, 0, 0, 0, 1978, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1998, 0,
	0, 0, 0, 0, 0, 0, 0, 1995, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2025, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2014, 0, 2016, 0,
	0, 0, 0, 0, 0, 0, 0, 2029, 0, 0,
	1990, 1991, 1997, 2019, 1996, 1992, 0, 1989, 1987, 1988,
	1980, 1981, 1982, 1983, 1985, 1986, 0, 0, 0, 0,
	0, 4129, 0, 0, 0, 0, 0, 0, 2001, 2002,
	2003, 2004, 0, 0, 0, 0, 0, 0, 1984, 0,
	0, 0, 0, 0, 0, 1976, 1977, 0, 2009, 2010,
	2011, 2020, 2021, 2022, 0, 0, 0, 2005, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2013, 2007,
	0, 0, 0, 0, 0, 0, 0, 1979, 0, 0,
	0, 2017, 0, 2000, 0, 2027, 0, 0, 2026, 0,
	0, 0, 2006, 2008, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2032, 0, 0, 0,
	0, 0, 2023, 2018, 2024, 1978, 0, 0, 0, 0,
	0, 1993, 1994, 0, 0, 0, 1998, 0, 0, 0,
	0, 0, 0, 0, 0, 1995, 0, 0, 0, 0,
	2015, 0, 0, 0, 0, 0, 0, 0, 0, 2031,
	0, 0, 0, 0, 0, 1999, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2025, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2001, 2002, 2003, 2004,
	0, 0, 0, 0, 0, 2014, 1984, 2016, 0, 0,
	0, 0, 0, 0, 0, 0, 2029, 0, 0, 1990,
	1991, 1997, 2019, 1996, 1992, 0, 1989, 1987, 1988, 1980,
	1981, 1982, 1983, 1985, 1986, 0, 0, 0, 0, 0,
	3573, 0, 0, 0, 0, 0, 0, 0, 0, 2017,
	0, 0, 0, 2027, 0, 0, 0, 0, 0, 0,
	2006, 2008, 0, 0, 1976, 1977, 0, 2009, 2010, 2011,
	2020, 2021, 2022, 0, 0, 0, 2005, 0, 0, 0,
	2023, 0, 2024, 0, 0, 0, 0, 2013, 2007, 1993,
	1994, 0, 0, 0, 0, 0, 1979, 0, 0, 0,
	0, 0, 2000, 0, 0, 0, 0, 2026, 2015, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1999, 0, 2032, 0, 0, 0, 0,
	0, 0, 2018, 0, 1978, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1998, 0, 0, 0, 0,
	0, 0, 0, 0, 1995, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 0,
	0, 0, 2025, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2014, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2029, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2001, 2002, 2003, 2004, 0,
	0, 0, 0, 0, 0, 1984, 2016, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 1991,
	1997, 2019, 1996, 1992, 2005, 1989, 1987, 1988, 1980, 1981,
	1982, 1983, 1985, 1986, 0, 0, 0, 0, 0, 3572,
	0, 0, 0, 0, 0, 0, 0, 0, 2017, 0,
	2000, 0, 2027, 0, 0, 0, 0, 0, 0, 2006,
	2008, 0, 0, 1976, 1977, 0, 2009, 2010, 2011, 2020,
	2021, 2022, 0, 0, 0, 0, 0, 0, 0, 2023,
	2018, 2024, 0, 0, 0, 0, 2013, 2007, 1993, 1994,
	0, 0, 0, 0, 0, 1979, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2026, 2015, 0, 0,
	0, 0, 0, 0, 0, 0, 2031, 0, 0, 0,
	0, 0, 1999, 0, 2032, 0, 0, 0, 0, 0,
	0, 0, 0, 1978, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1998, 0, 0, 0, 0, 0,
	0, 0, 0, 1995, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2025, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2014, 0, 2016, 0, 0, 0, 0, 0,
	0, 0, 0, 2029, 0, 0, 1990, 1991, 1997, 2019,
	1996, 1992, 0, 1989, 1987, 1988, 1980, 1981, 1982, 1983,
	1985, 1986, 0, 0, 0, 0, 0, 3571, 0, 0,
	0, 0, 0, 0, 2001, 2002, 2003, 2004, 0, 0,
	0, 0, 0, 0, 1984, 0, 0, 0, 0, 0,
	0, 1976, 1977, 0, 2009, 2010, 2011, 2020, 2021, 2022,
	0, 0, 0, 2005, 0, 2433, 0, 0, 0, 0,
	0, 0, 0, 0, 2013, 2007, 0, 0, 0, 0,
	0, 0, 0, 1979, 0, 0, 0, 2017, 0, 2000,
	0, 2027, 0, 0, 2026, 0, 0, 0, 2006, 2008,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2032, 0, 0, 0, 0, 0, 2023, 2018,
	2024, 1978, 0, 0, 0, 0, 0, 1993, 1994, 0,
	0, 0, 1998, 0, 0, 0, 0, 0, 0, 0,
	0, 1995, 0, 0, 0, 0, 2015, 0, 0, 0,
	0, 0, 0, 0, 0, 2031, 0, 0, 0, 0,
	0, 1999, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2001, 2002, 2003, 2004, 0, 0, 0, 0,
	0, 2014, 1984, 2016, 0, 0, 0, 0, 0, 0,
	0, 0, 2029, 0, 0, 1990, 1991, 1997, 2019, 1996,
	1992, 0, 1989, 1987, 1988, 1980, 1981, 1982, 1983, 1985,
	1986, 0, 0, 0, 0, 0, 3570, 0, 0, 0,
	0, 0, 0, 0, 0, 2017, 0, 0, 0, 2027,
	0, 0, 0, 0, 0, 0, 2006, 2008, 0, 0,
	1976, 1977, 0, 2009, 2010, 2011, 2020, 2021, 2022, 0,
	0, 0, 2005, 0, 0, 0, 2023, 0, 2024, 0,
	0, 0, 0, 2013, 2007, 1993, 1994, 0, 0, 0,
	0, 0, 1979, 0, 0, 0, 0, 0, 2000, 0,
	0, 0, 0, 2026, 2015, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1999,
	0, 2032, 0, 0, 0, 0, 0, 0, 2018, 0,
	1978, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1998, 0, 0, 0, 2363, 0, 0, 0, 0,
	1995, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2031, 0, 0, 0, 2025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2014,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2029, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2001, 2002, 2003, 2004, 0, 0, 0, 0, 0,
	0, 1984, 2016, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 1991, 1997, 2019, 1996, 1992,
	2005, 1989, 1987, 1988, 1980, 1981, 1982, 1983, 1985, 1986,
	0, 0, 0, 3535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2017, 0, 2000, 0, 2027, 0,
	0, 0, 0, 0, 0, 2006, 2008, 0, 0, 1976,
	1977, 0, 2009, 2010, 2011, 2020, 2021, 2022, 0, 2435,
	0, 0, 0, 0, 0, 2023, 2018, 2024, 0, 0,
	0, 0, 2013, 2007, 1993, 1994, 0, 0, 0, 0,
	0, 1979, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2026, 2015, 0, 0, 0, 0, 0, 0,
	0, 0, 2031, 0, 0, 0, 0, 0, 1999, 0,
	2032, 0, 0, 0, 0, 0, 0, 0, 0, 1978,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1998, 0, 0, 0, 0, 0, 0, 0, 0, 1995,
	0, 0, 0, 0, 0, 0, 0, 2436, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2014, 0,
	2016, 0, 0, 0, 0, 0, 0, 0, 0, 2029,
	0, 0, 1990, 1991, 1997, 2019, 1996, 1992, 0, 1989,
	1987, 1988, 1980, 1981, 1982, 1983, 1985, 1986, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2001, 2002, 2003, 2004, 0, 0, 0, 0, 0, 0,
	1984, 5346, 0, 0, 0, 0, 0, 1976, 1977, 0,
	2009, 2010, 2011, 2020, 2021, 2022, 0, 0, 2362, 2005,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2013, 2007, 0, 0, 0, 0, 0, 0, 0, 1979,
	0, 0, 0, 2017, 0, 2000, 0, 2027, 0, 0,
	2026, 0, 0, 0, 2006, 2008, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2032, 0,
	0, 0, 0, 0, 2023, 2018, 2024, 1978, 0, 0,
	0, 0, 0, 1993, 1994, 0, 0, 0, 1998, 0,
	0, 0, 0, 0, 0, 0, 0, 1995, 0, 0,
	0, 0, 2015, 0, 0, 0, 0, 0, 0, 0,
	0, 2031, 0, 0, 0, 0, 0, 1999, 0, 0,
	0, 0, 2360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2001, 2002,
	2003, 2004, 0, 0, 0, 0, 0, 2014, 1984, 2016,
	3635, 0, 0, 0, 0, 0, 0, 3634, 2029, 0,
	0, 1990, 1991, 1997, 2019, 1996, 1992, 0, 1989, 1987,
	1988, 1980, 1981, 1982, 1983, 1985, 1986, 0, 0, 0,
	0, 5345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2017, 0, 0, 0, 2027, 0, 0, 0, 0,
	0, 0, 2006, 2008, 0, 0, 1976, 1977, 0, 2009,
	2010, 2011, 2020, 2021, 2022, 0, 0, 0, 2005, 0,
	0, 0, 2023, 0, 2024, 0, 0, 0, 0, 2013,
	2007, 1993, 1994, 0, 0, 3505, 0, 0, 1979, 0,
	0, 0, 0, 0, 2000, 0, 0, 0, 0, 2026,
	2015, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1999, 0, 2032, 0, 0,
	0, 0, 0, 0, 2018, 0, 1978, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1998, 0, 0,
	0, 0, 0, 0, 0, 0, 1995, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2031, 0, 0, 0, 2025, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2014, 0, 0, 3506, 0,
	0, 0, 0, 0, 0, 0, 2029, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2001, 2002, 2003,
	2004, 0, 0, 0, 0, 0, 0, 1984, 2016, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 1991, 1997, 2019, 1996, 1992, 2005, 1989, 1987, 1988,
	1980, 1981, 1982, 1983, 1985, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2017, 0, 2000, 0, 2027, 0, 0, 0, 0, 0,
	0, 2006, 2008, 0, 0, 1976, 1977, 0, 2009, 2010,
	2011, 2020, 2021, 2022, 0, 0, 0, 0, 0, 0,
	0, 2023, 2018, 2024, 0, 0, 0, 0, 2013, 2007,
	1993, 1994, 0, 0, 0, 0, 0, 1979, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2026, 2015,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 0,
	0, 0, 0, 0, 1999, 0, 2032, 0, 0, 0,
	0, 0, 0, 0, 0, 1978, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1998, 0, 0, 0,
	0, 0, 0, 0, 0, 1995, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2025, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2014, 0, 2016, 0, 0, 0,
	0, 0, 0, 0, 0, 2029, 0, 0, 1990, 1991,
	1997, 2019, 1996, 1992, 0, 1989, 1987, 1988, 1980, 1981,
	1982, 1983, 1985, 1986, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2001, 2002, 2003, 2004,
	0, 0, 0, 0, 0, 0, 1984, 0, 4906, 0,
	0, 0, 0, 1976, 1977, 0, 2009, 2010, 2011, 2020,
	2021, 2022, 0, 0, 0, 2005, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2013, 2007, 0, 0,
	0, 0, 0, 0, 0, 1979, 0, 0, 0, 2017,
	0, 2000, 0, 2027, 0, 0, 2026, 0, 0, 0,
	2006, 2008, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2032, 0, 0, 0, 0, 0,
	2023, 2018, 2024, 1978, 0, 0, 0, 0, 0, 1993,
	1994, 0, 0, 0, 1998, 0, 0, 0, 0, 0,
	0, 0, 0, 1995, 0, 0, 0, 0, 2015, 0,
	0, 0, 0, 0, 0, 0, 0, 2031, 0, 0,
	0, 0, 0, 1999, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2025, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2001, 2002, 2003, 2004, 0, 0,
	0, 0, 0, 2014, 1984, 2016, 0, 0, 0, 0,
	0, 0, 0, 0, 2029, 0, 0, 1990, 1991, 1997,
	2019, 1996, 1992, 0, 1989, 1987, 1988, 1980, 1981, 1982,
	1983, 1985, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2017, 0, 0,
	0, 2027, 0, 0, 0, 0, 0, 0, 2006, 2008,
	0, 0, 1976, 1977, 0, 2009, 2010, 2011, 2020, 2021,
	2022, 0, 0, 0, 2005, 0, 0, 0, 2023, 0,
	2024, 0, 0, 0, 0, 2013, 2007, 1993, 1994, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	2000, 0, 0, 0, 0, 2026, 2015, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1999, 0, 2032, 0, 0, 0, 0, 0, 0,
	2018, 0, 1978, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1998, 0, 0, 0, 0, 0, 0,
	0, 0, 1995, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2031, 0, 0, 0,
	2025, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2014, 1196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2029, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2001, 2002, 2003, 2004, 0, 0, 0,
	0, 0, 0, 1984, 2016, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 1991, 1997, 2019,
	1996, 1992, 2005, 1989, 1987, 1988, 1980, 1981, 1982, 1983,
	1985, 1986, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2017, 0, 2000, 0,
	2027, 0, 0, 0, 0, 0, 0, 2006, 2008, 0,
	0, 1976, 1977, 0, 2009, 2010, 2011, 2020, 2021, 2022,
	0, 0, 0, 0, 0, 0, 0, 2023, 2018, 2024,
	0, 0, 0, 0, 2013, 2007, 1993, 1994, 0, 0,
	0, 0, 0, 1979, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2026, 2015, 0, 0, 0, 0,
	0, 0, 0, 0, 2031, 0, 0, 0, 0, 0,
	1999, 0, 2032, 0, 0, 0, 0, 0, 0, 0,
	0, 1978, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1998, 0, 0, 0, 0, 0, 0, 0,
	0, 1995, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2025,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2014, 0, 2016, 0, 0, 0, 0, 0, 0, 0,
	0, 2029, 0, 0, 1990, 1991, 1997, 2019, 1996, 1992,
	0, 1989, 1987, 1988, 1980, 1981, 1982, 1983, 1985, 1986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2001, 2002, 2003, 2004, 0, 0, 0, 0,
	1976, 1977, 1984, 2009, 2010, 2011, 2020, 2021, 2022, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2005, 0, 2013, 2007, 0, 0, 0, 0, 0,
	0, 0, 1979, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2026, 0, 2017, 0, 2000, 0, 2027,
	0, 0, 0, 0, 0, 0, 2006, 2008, 0, 0,
	0, 2032, 0, 0, 0, 0, 0, 0, 0, 0,
	1978, 0, 0, 0, 0, 0, 2023, 2018, 2024, 0,
	0, 1998, 0, 0, 0, 1993, 1994, 0, 0, 0,
	1995, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2015, 0, 0, 0, 0, 0,
	0, 0, 0, 2031, 0, 0, 0, 0, 0, 1999,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4671, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2025, 0,
	0, 2001, 2002, 2003, 2004, 0, 0, 0, 0, 0,
	0, 1984, 0, 4334, 0, 0, 0, 0, 0, 2014,
	0, 2016, 0, 0, 0, 0, 0, 0, 0, 0,
	2029, 0, 0, 1990, 1991, 1997, 2019, 1996, 1992, 0,
	1989, 1987, 1988, 1980, 1981, 1982, 1983, 1985, 1986, 0,
	0, 0, 0, 0, 2017, 0, 0, 0, 2027, 0,
	0, 0, 0, 0, 0, 2006, 2008, 0, 0, 1976,
	1977, 0, 2009, 2010, 2011, 2020, 2021, 2022, 0, 0,
	0, 0, 0, 0, 0, 2023, 0, 2024, 0, 0,
	2005, 0, 2013, 2007, 1993, 1994, 0, 0, 0, 0,
	0, 1979, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2026, 2015, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1999, 0,
	2032, 0, 0, 0, 0, 0, 0, 0, 0, 1978,
	0, 0, 0, 0, 0, 0, 2018, 0, 0, 0,
	1998, 0, 0, 0, 0, 0, 0, 0, 0, 1995,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2025, 0, 0,
	0, 0, 2031, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2014, 0,
	0, 4335, 0, 0, 0, 0, 0, 0, 0, 2029,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2001, 2002, 2003, 2004, 0, 0, 0, 0, 0, 0,
	1984, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2016, 0, 0, 0, 0, 0, 0, 0, 0, 2005,
	0, 0, 1990, 1991, 1997, 2019, 1996, 1992, 0, 1989,
	1987, 1988, 1980, 1981, 1982, 1983, 1985, 1986, 0, 0,
	0, 0, 0, 2017, 0, 2000, 0, 2027, 0, 0,
	0, 0, 0, 0, 2006, 2008, 0, 0, 1976, 1977,
	0, 2009, 2010, 2011, 2020, 2021, 2022, 0, 0, 0,
	0, 0, 0, 0, 2023, 2018, 2024, 0, 0, 0,
	0, 2013, 2007, 1993, 1994, 0, 0, 0, 0, 0,
	1979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2026, 2015, 0, 0, 0, 0, 0, 0, 0,
	0, 2031, 0, 0, 0, 0, 0, 1999, 0, 2032,
	0, 0, 0, 0, 0, 0, 0, 0, 1978, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1998,
	0, 0, 0, 0, 0, 0, 0, 0, 1995, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2014, 0, 2016,
	0, 0, 0, 0, 0, 0, 0, 0, 2029, 0,
	0, 1990, 1991, 1997, 2019, 1996, 1992, 0, 1989, 1987,
	1988, 1980, 1981, 1982, 1983, 1985, 1986, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	2002, 2003, 2004, 0, 0, 0, 0, 1976, 1977, 1984,
	2009, 2010, 2011, 2020, 2021, 2022, 0, 0, 3641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2005, 0,
	2013, 2007, 0, 0, 0, 3636, 0, 0, 0, 1979,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2026, 0, 2017, 0, 2000, 0, 2027, 0, 0, 0,
	0, 0, 0, 2006, 2008, 0, 0, 0, 2032, 0,
	0, 0, 0, 0, 0, 0, 0, 1978, 0, 0,
	0, 0, 0, 2023, 2018, 2024, 0, 0, 1998, 0,
	0, 0, 1993, 1994, 0, 0, 0, 1995, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2015, 0, 0, 0, 0, 0, 0, 0, 0,
	2031, 0, 0, 0, 0, 0, 1999, 0, 0, 0,
	0, 0, 0, 4110, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2025, 0, 0, 2001, 2002,
	2003, 2004, 0, 0, 0, 0, 0, 0, 1984, 0,
	0, 0, 0, 0, 0, 0, 2014, 0, 2016, 0,
	0, 0, 0, 0, 0, 0, 0, 2029, 0, 0,
	1990, 1991, 1997, 2019, 1996, 1992, 0, 1989, 1987, 1988,
	1980, 1981, 1982, 1983, 1985, 1986, 0, 0, 0, 0,
	0, 2017, 0, 0, 0, 2027, 0, 0, 0, 0,
	0, 0, 2006, 2008, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2023, 0, 2024, 0, 0, 2005, 0, 0,
	0, 1993, 1994, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2015, 0, 0, 2000, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1999, 1976, 1977, 0, 2009,
	2010, 2011, 2020, 2021, 2022, 0, 0, 0, 0, 0,
	0, 0, 0, 2018, 0, 0, 0, 0, 0, 2013,
	2007, 0, 0, 0, 0, 0, 0, 0, 1979, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2026,
	0, 0, 0, 0, 2025, 0, 0, 0, 0, 2031,
	0, 0, 0, 0, 0, 0, 0, 2032, 0, 0,
	0, 0, 0, 0, 0, 2014, 1978, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2029, 1998, 0, 0,
	0, 0, 0, 0, 0, 0, 1995, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2016, 0, 0,
	0, 0, 0, 0, 0, 0, 2005, 0, 0, 1990,
	1991, 1997, 2019, 1996, 1992, 0, 1989, 1987, 1988, 1980,
	1981, 1982, 1983, 1985, 1986, 0, 0, 0, 0, 0,
	0, 0, 2000, 0, 0, 0, 0, 2001, 2002, 2003,
	2004, 0, 0, 0, 0, 1976, 1977, 1984, 2009, 2010,
	2011, 2020, 2021, 2022, 0, 0, 0, 0, 0, 0,
	0, 0, 2018, 0, 0, 0, 0, 0, 2013, 2007,
	0, 0, 0, 3574, 0, 0, 0, 1979, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2026, 0,
	2017, 0, 0, 0, 2027, 0, 0, 0, 2031, 0,
	0, 2006, 2008, 0, 0, 0, 2032, 0, 0, 0,
	0, 0, 0, 0, 0, 1978, 0, 0, 0, 0,
	0, 2023, 0, 2024, 0, 0, 1998, 0, 0, 0,
	1993, 1994, 0, 0, 0, 1995, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2015,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1999, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2016, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 1991,
	1997, 2019, 1996, 1992, 0, 1989, 1987, 1988, 1980, 1981,
	1982, 1983, 1985, 1986, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2025, 0, 0, 2001, 2002, 2003, 2004,
	0, 0, 0, 0, 0, 0, 1984, 0, 0, 0,
	0, 0, 0, 0, 2014, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2029, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2017,
	0, 0, 0, 2027, 0, 0, 0, 0, 0, 0,
	2006, 2008, 0, 0, 1976, 1977, 0, 2009, 2010, 2011,
	2020, 2021, 2022, 0, 0, 0, 0, 0, 0, 0,
	2023, 0, 2024, 0, 0, 2005, 0, 2013, 2007, 1993,
	1994, 0, 0, 0, 0, 0, 1979, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2026, 2015, 0,
	0, 2000, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1999, 0, 2032, 0, 0, 0, 0,
	0, 0, 0, 0, 1978, 0, 0, 0, 0, 0,
	0, 2018, 0, 0, 0, 1998, 0, 0, 0, 0,
	0, 0, 0, 0, 1995, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2025, 0, 0, 0, 0, 2031, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2014, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2029, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2001, 2002, 2003, 2004, 0,
	0, 0, 0, 0, 0, 1984, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2016, 0, 0, 0, 0,
	0, 0, 0, 0, 2005, 0, 0, 1990, 1991, 1997,
	2019, 1996, 1992, 0, 1989, 1987, 1988, 1980, 1981, 1982,
	1983, 1985, 1986, 0, 0, 0, 0, 0, 2017, 0,
	2000, 0, 2027, 0, 0, 0, 0, 0, 0, 2006,
	2008, 0, 0, 1976, 1977, 0, 2009, 2010, 2011, 2020,
	2021, 2022, 0, 0, 0, 0, 0, 0, 0, 2023,
	2018, 2024, 0, 0, 0, 0, 2013, 2007, 1993, 1994,
	0, 0, 0, 0, 0, 1979, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2026, 2015, 0, 0,
	0, 0, 0, 0, 0, 0, 2031, 0, 0, 0,
	0, 0, 1999, 0, 2032, 0, 0, 0, 0, 0,
	0, 0, 0, 1978, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1998, 0, 0, 0, 0, 0,
	0, 0, 0, 1995, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2025, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2014, 0, 2016, 0, 0, 0, 0, 0,
	0, 0, 0, 2029, 0, 0, 1990, 1991, 1997, 2019,
	1996, 1992, 0, 1989, 1987, 1988, 1980, 1981, 1982, 1983,
	1985, 1986, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2001, 2002, 2003, 2004, 0, 0,
	0, 0, 1976, 1977, 1984, 2009, 2010, 2011, 2020, 2021,
	2022, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2005, 0, 2013, 2007, 0, 0, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2026, 0, 2017, 0, 2000,
	0, 2027, 0, 0, 0, 0, 0, 0, 2006, 2008,
	0, 0, 0, 2032, 0, 0, 0, 0, 0, 0,
	0, 0, 1978, 0, 0, 0, 0, 0, 2023, 2018,
	2024, 0, 0, 1998, 0, 0, 0, 1993, 1994, 0,
	0, 0, 1995, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2015, 0, 0, 0,
	0, 0, 0, 0, 0, 2031, 0, 0, 0, 0,
	0, 1999, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 0, 0, 2001, 2002, 2003, 2004, 0, 0, 0,
	0, 0, 0, 1984, 0, 0, 2548, 0, 0, 0,
	0, 2014, 0, 2016, 0, 0, 0, 0, 0, 0,
	0, 0, 2029, 0, 0, 1990, 1991, 1997, 2019, 1996,
	1992, 0, 1989, 1987, 1988, 1980, 1981, 1982, 1983, 1985,
	1986, 0, 0, 0, 0, 0, 2017, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 2006, 2008, 0,
	0, 1976, 1977, 0, 2009, 2010, 2011, 2020, 2021, 2022,
	0, 0, 0, 0, 0, 0, 0, 2023, 0, 2024,
	0, 0, 2005, 0, 0, 2007, 1993, 1994, 0, 0,
	0, 0, 0, 1979, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2026, 2015, 0, 0, 2000, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1999, 0, 2032, 0, 0, 0, 0, 0, 0, 0,
	0, 1978, 0, 0, 0, 0, 0, 0, 2018, 0,
	0, 0, 1998, 0, 0, 0, 0, 0, 0, 0,
	0, 1995, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2025,
	0, 0, 0, 0, 2031, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2029, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2001, 2002, 2003, 2004, 0, 0, 0, 0,
	0, 0, 1984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2016, 0, 0, 0, 0, 0, 0, 0,
	0, 2005, 0, 0, 1990, 1991, 1997, 2019, 1996, 1992,
	0, 1989, 1987, 1988, 1980, 1981, 1982, 1983, 1985, 1986,
	0, 0, 0, 0, 0, 2017, 0, 2000, 0, 2027,
	0, 0, 0, 0, 0, 0, 2006, 2008, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1077, 0, 1129,
	0, 0, 0, 0, 0, 0, 2023, 2018, 2024, 0,
	0, 0, 0, 0, 0, 1993, 1994, 0, 0, 0,
	0, 0, 0, 0, 1085, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2015, 0, 0, 0, 0, 0,
	0, 0, 1100, 2031, 1083, 1082, 0, 0, 0, 1999,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1102, 0,
	0, 0, 0, 0, 1084, 0, 0, 0, 0, 1087,
	0, 0, 0, 0, 1141, 0, 1112, 0, 0, 0,
	0, 0, 0, 0, 1097, 1098, 0, 0, 2025, 0,
	0, 0, 0, 0, 1117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2016, 1130, 1089, 0, 0, 0, 0, 0, 1090,
	2029, 0, 0, 1990, 1991, 1997, 2019, 1996, 1992, 0,
	1989, 1987, 1988, 1980, 1981, 1982, 1983, 1985, 1986, 0,
	0, 0, 0, 1091, 0, 0, 0, 0, 0, 0,
	0, 0, 1127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2005, 0, 0, 0, 0, 0, 0, 1128, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1093, 0, 0, 2000, 0, 0, 0,
	0, 0, 1081, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1094, 1095, 0, 2018, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1103, 1101, 0, 0, 0,
	0, 0, 0, 1096, 0, 0, 0, 1113, 0, 0,
	1135, 1134, 2031, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1138, 1126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2016, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 1991, 1997, 2019, 1996, 1992, 0, 1989,
	1987, 1988, 1980, 1981, 1982, 1983, 1985, 1986, 0, 0,
	1088, 0, 0, 1140, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1086, 0, 0,
	0, 0, 1121, 1122, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1132, 1119, 0, 0, 0, 0,
	0, 0, 0, 1139, 1114, 0, 0, 1106, 1104, 0,
	0, 1109, 0, 0, 0, 0, 0, 0, 1110, 0,
	0, 1079, 0, 1133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1080,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1125, 0, 0, 1123, 0, 1111, 0, 0, 0, 0,
	0, 1108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1137, 0, 0, 0, 0, 0, 0, 0,
	1115, 0, 1116, 0, 0, 0, 0, 0, 0, 0,
	0, 1092, 1136, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1118, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1120,
}

var sqlPact = [...]int{
	9863, -1000, -1000, -1000, -1000, -1000, -1000, 150, -1000, -1000,
	149, 148, 147, 146, 145, 144, 143, 142, 141, 137,
	136, -1000, -1000, 135, 134, 133, 132, -1000, 127, 126,
	-1000, 125, -1000, -1000, 124, -1000, 123, 122, 120, -1000,
	-1000, 119, -1000, 118, -1000, -1000, -1000, -1000, 117, 116,
	115, 103739, 103131, 104345, 2618, 131669, 113449, 2322, 92805, 131061,
	92197, 130453, 2438, 11861, 129845, 3080, 113, -1000, 129237, 109,
	107, 106, -1000, 112841, 128629, 110411, 109803, 1973, 1827, 1810,
	-1000, 105, 104, -1000, 12132, 79375, 99, 98, 97, 96,
	2566, 94, -1000, 93, 91, -1000, 90, -1000, 13300, 1589,
	-1000, 89, 84, -1000, 7434, 109195, 83, 82, 78, 2784,
	75, 74, 76949, 73, 72, 71, 2677, 3169, -1000, -1000,
	2298, -1000, -1000, 69, 68, 66, 64, 57, 55, 53,
	51, 49, 48, 43, 41, 40, -1000, 39, 37, 36,
	35, 34, -1000, 33, 31, 30, -1000, 29, -1000, 20,
	19, 18, 17, 16, 11, 10, 9, 8, 7, 6,
	5, 3, 2, 1, 153555, -1000, -1000, 0, -1000, 2135,
	1800, 1787, 1771, 991, -1, -2, -12, -13, -20, -21,
	-22, -23, -25, -26, -28, -29, -31, -33, -34, -35,
	-36, -37, -38, -41, -1000, 114, -42, -43, -44, -45,
	-46, -47, -51, 5286, 3873, -1000, 1690, 1153, 1242, 34096,
	3300, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 140759, 132275, -52, -135, -53, -1000, 3686, 1049, 62839,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 221, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 427,
	2511, 689, -1000, -1000, -1000, 128021, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2613, -73, 93411, -1000, 2290, -1000,
	-1000, -1000, -1000, -1000, 688, -1000, 2612, 2529, 292, 2528,
	93411, -1000, -1000, -1000, 3740, 2758, 4180, 4179, 4178, 4177,
	4176, 140153, 2015, 4175, 2828, 4174, 4172, 4171, 4170, 4169,
	4168, 4167, -1000, 102523, 1096, 101915, 101307, 3756, 127415, 100699,
	126807, 143189, 52882, 1110, 3739, -1000, -1000, -1000, -1000, -1000,
	-1000, 132275, -1000, 1095, -1000, -1000, 4166, 2269, 687, 112233,
	-1000, -1000, 126199, 1924, -1000, -1000, -1000, 931, 1192, 36588,
	36588, 36588, 212, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3749, -1000, -1000, -1000, -1000, 132275, 3032, 3032, 1464, 1455,
	1455, 3032, 3032, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 4165, 4164, 4163, 4162, 4160, 1412, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 91589, 26431, 90981, 90373, 125591, 52259,
	100091, 99483, 4157, 4153, 4151, 51636, 86117, 60355, 3870, 124983,
	142581, 3866, 3865, 1094, 2288, 1561, -1000, -1000, -1000, -1000,
	-1000, -1000, -68, 83033, 3939, 132275, -1000, 205, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 51013, 942, 50390, 910, 49767,
	639, 124375, -1000, -1000, -1000, -1000, 85499, -1000, 123767, 1564,
	2757, 4148, 4147, 1187, 4144, 3623, 2014, 4143, 4142, 4140,
	4139, 4138, 4137, 4135, 1610, 123159, 2951, 122551, 1934, 141973,
	2095, 1090, 98875, 104345, 2906, 121943, 1544, 1505, -1000, -1000,
	-1000, -1000, 3398, 3165, 3160, 1381, -1000, -1000, -1000, -1000,
	66539, 9780, 8711, -1000, -1000, 12670, 121335, 69619, 104345, 104345,
	-1000, -1000, -1000, -1000, -1000, -1000, 49144, 840, 48521, 984,
	120727, -1000, -1000, 67155, 3245, 1136, -1000, -1000, -1000, -1000,
	-1000, 120119, 47898, 739, 47275, 976, 132275, -1000, 3296, 2126,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3692,
	1716, 3942, 3060, 84881, 2267, 1531, 3706, 3396, 3391, 1625,
	2268, 3390, 4134, 2915, 3372, 3367, 3366, 3359, 3358, 1348,
	2867, 537, 2862, 33473, 3288, 1949, 46652, 1590, 1627, 3357,
	3354, 3955, 3803, 2247, 2196, 2316, 2231, 89765, 4133, 4132,
	3675, 3351, 3346, 3114, 3339, 2129, -1000, 3241, 1601, 204,
	-1000, -1000, -1000, -1000, -1000, -1000, 204, 1476, -1000, -1000,
	-1000, -1000, -1000, 94623, -1000, -1000, 1412, -1000, -1000, -1000,
	1413, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1690, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3650, -1000, 2276, -1000,
	-1000, -1000, 2819, 3664, 3664, 3664, 3738, 400, 396, -1000,
	114, 857, 1167, -1000, -1000, 152882, -1000, -1000, 53505, 53505,
	53505, 53505, 53505, 53505, 53505, 53505, 2445, -1000, 686, -1000,
	-1000, 730, -1000, 685, 599, 534, -1000, -1000, -1000, -1000,
	-1000, -1000, 683, -1000, -1000, -1000, -1000, -1000, -1000, 3923,
	-1000, 29598, -1000, -1000, -1000, 391, 681, 53505, -1000, -1000,
	3986, 3985, 1034, -1000, 203, 957, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3295, 680,
	678, -1000, 675, 674, 673, 672, 671, -1000, 670, -1000,
	669, 667, 666, 665, 663, 661, 650, 643, -1000, 2310,
	-1000, -1000, -1000, -1000, -1000, -1000, 589, 588, 588, 588,
	-1000, 1077, -1000, -1000, -1000, 219, 586, 215, 583, 582,
	581, -1000, 637, 630, 629, 619, 611, 610, 607, 606,
	605, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1075, -1000,
	-1000, -1000, -1000, 1415, -70, 132275, -1000, 427, -70, -1000,
	-1000, 604, -1000, 37852, 37852, 37852, -1000, -1000, 2608, 53505,
	-1000, 2736, -1000, -63, -63, 859, 64687, -1000, 61589, 859,
	843, 738, 70843, -1000, 3240, -1000, -1000, 602, 200, -1000,
	-1000, -1000, -1000, 27047, 3239, 132275, 132275, 132275, 104345, 104345,
	104345, 132275, 4130, 4129, 3545, 53505, -1000, -1000, 78767, 145007,
	104951, 1409, -69, -1000, -1000, 3851, 82417, 78161, 3294, 145007,
	3292, 3237, 144405, 4128, -1000, -1000, -1000, -1000, -1000, 3518,
	4126, 4124, 4123, -1000, 132275, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 256, 3513, -1000, -1000, 108587, 256, 3511, -1000,
	256, 3508, -1000, 107981, -1000, -1000, 2480, 3499, -1000, -1000,
	258, 3498, -1000, -1000, -1000, 257, 3497, -1000, -1000, 196,
	-108, 3496, -1000, -1000, -1000, -1000, -1000, -1000, 152882, -1000,
	-1000, -1000, 143797, -1000, 3661, -1000, 132275, -1000, 53505, -1000,
	-1000, 3849, 1921, 3700, 3774, -1000, -1000, -83, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2804, 2802, 1191, 2637, -1000,
	3559, 1795, 36588, 3609, -1000, -1000, -1000, -1000, -1000, 191,
	27047, 3156, -1000, -1000, 132275, -1000, 132275, 3032, 3032, -1000,
	-1000, -1000, 3946, 3945, 3032, 3032, 132275, 132275, -1000, -1000,
	-1000, -1000, -1000, -1000, -83, -1000, 2692, 3495, 1315, -1000,
	2636, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2436, 3494, -1000, 2568, 3493, 2315, -1000, -1000, 2435, -1000,
	149519, 1522, -1000, -1000, -1000, -1000, 2003, 3492, -62, -1000,
	-1000, 2494, -1000, -1000, -1000, -1000, 149280, -1000, 3191, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1842, -1000,
	-1000, 2345, 2168, -1000, 1320, 3487, -1000, 3058, 3058, 98267,
	3449, 69003, 67155, 83033, -81, -1000, -1000, -1000, -1000, -1000,
	-116, -1000, 25807, 152882, -1000, -1000, -1000, -1000, 1988, 152882,
	889, -1000, -1000, 3486, -1000, 152882, 809, -1000, -1000, 3485,
	-1000, 2865, -1000, 3290, -1000, -1000, 2696, 2695, 1060, -1000,
	104345, 2265, 4120, -1000, 4119, -1000, -1000, 4116, -1000, 4115,
	4113, 4112, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 97661,
	2604, -1000, -1000, 1578, 965, 86733, -1000, 2693, 3770, -1000,
	97053, 1088, -1000, 1032, 2691, -1000, 1486, 107375, 1005, 2690,
	-1000, 4111, 3748, 2955, 1032, 2688, -1000, -1000, -1000, -1000,
	-1000, 989, -1000, 72055, -1000, 72055, -1000, 1762, -1000, 139547,
	-63, 104345, 3923, -1000, -109, -1000, -1000, -1000, 1049, -1000,
	65920, -1000, 65920, 111625, 86733, 965, 3236, 75109, 152643, -1000,
	1056, -1000, -1000, 152882, -1000, -1000, -1000, 2864, -1000, -206,
	3057, -1000, 86733, 68387, 3234, 2863, -1000, 152882, -1000, -1000,
	-1000, -1000, 152882, -1000, -1000, -1000, 86733, 1578, -1000, 119511,
	96445, -1000, -1000, 1600, 2854, -1000, -1000, -1000, 67155, 3233,
	1324, 86733, 86733, 86733, -1000, 118903, -1000, -1000, 2270, 1341,
	3657, 2255, 104345, -1000, 2007, -1000, -1000, -1000, 3682, 3447,
	132275, -1000, -1000, 3289, -1000, 81811, 106769, -1000, 106163, -1000,
	105557, -1000, 104345, -1000, 104345, -1000, 4110, 4108, 4105, -1000,
	-1000, 4102, -1000, 4101, 3671, -1000, 952, 46029, 152882, 3658,
	-1000, 4100, 2165, 3288, 152882, -1000, 3445, 1858, 1846, 132275,
	-1000, -1000, 132275, -1000, 132275, -1000, -1000, -1000, 2628, 1706,
	-1000, -1000, 2803, -1000, -1000, -1000, 1047, -1000, -1000, 104345,
	104345, 104345, 104345, 104345, 1311, -1000, 45406, -1000, -1000, 3337,
	4097, 1936, -1000, 1903, -1000, 3232, 3674, -1000, 3228, 1599,
	1979, 189, 3990, 189, -1000, -1000, 263, -1000, -1000, 138941,
	-1000, 2819, -1000, 132275, -1000, 2820, 3270, 3286, 1856, 2626,
	2919, -1000, 44783, 2860, 57243, 2635, 114, -1000, -1000, 114,
	114, 35342, -1000, -1000, 36588, 857, 82417, 82417, 27047, 1416,
	53505, 53505, 53505, 53505, 53505, 53505, 53505, 53505, 53505, 53505,
	53505, 53505, 53505, 53505, 53505, 53505, 53505, 53505, 53505, 53505,
	53505, 53505, 53505, 53505, 53505, 53505, 53505, 53505, 53505, 53505,
	53505, 53505, 53505, 53505, 53505, 53505, 2214, 53505, 1403, 53505,
	53505, 53505, 53505, 2383, -1000, -1000, 2163, 465, 2223, 599,
	-1000, -1000, -1000, 3914, 3914, 3914, 1514, 1514, 1514, 153300,
	153300, 415, 4096, 730, -1000, 53505, -1000, 80, 65293, 53505,
	27665, -1000, 396, 10762, 2801, -1000, 395, 28318, -1000, -1000,
	-1000, 29598, 534, 44130, 53505, 1065, 152882, -1000, -1000, 2017,
	3937, 25183, 3306, 3104, 597, 837, 836, 32820, 32167, 31514,
	30861, 833, 829, 53505, 53505, 53505, 53505, 53505, 53505, 53505,
	53505, -1000, -1000, 3944, -1000, 3937, -1000, -1000, -1000, -1000,
	3937, 1386, 1352, 3937, -1000, 3937, 3937, 10402, 10402, 43507,
	42884, 42261, 57866, 41638, 53505, 30238, 41015, 40392, -1000, 59735,
	132275, -70, 3846, 53505, 238, -1000, 7842, -1000, 238, 238,
	595, -110, 152882, 2844, 2844, 63455, 2620, 2458, 2458, 2458,
	-1000, 859, 19528, 859, 117085, 2481, 859, 859, 175, 187,
	394, 60973, 2736, 117085, 702, 594, -54, -55, -57, -1000,
	-1000, -58, -59, -1000, -1000, 104345, 593, 27665, 27047, 173,
	2193, -115, 2886, 2884, 2883, 2878, -1000, 2876, 2599, -1000,
	-1000, -1000, 2023, -117, 1401, 104345, 132275, 1573, -1000, -1000,
	-1000, -1000, 83033, -71, 83033, 132275, -112, -1000, 145007, 8640,
	-120, -1000, 1319, 172, 3937, -1000, -1000, -1000, -1000, -1000,
	4095, 4092, -1000, 1074, 592, 591, 402, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 589, 588, 588, 588, -1000,
	219, 586, 215, 583, 582, 581, -1000, -1000, -1000, -1000,
	-1000, 3225, 104345, 132275, 1555, 81205, 93411, -108, 104951, 145007,
	-75, -1000, -1000, 132275, -1000, -1000, -1000, 4089, -1000, 104345,
	-1000, -1000, 104345, 256, 3484, -1000, 104345, -1000, 104345, 254,
	3483, -1000, -1000, 132275, -1000, 104345, 104345, -1000, 132275, 132275,
	132275, 145007, 145007, 248, -1000, 104345, 857, -123, 1194, -83,
	-1000, -1000, -1000, -1000, 1412, -1000, 2038, -1000, -1000, -1000,
	-1000, -1000, -1000, 1638, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1034, -1000, -1000, -1000, -1000, 3932, 3930, -80,
	-1000, -1000, 27047, -1000, 2132, -1000, -1000, -1000, -1000, 132275,
	132275, -1000, -1000, 132275, 132275, -1000, -1000, -84, 1753, 551,
	1397, -1000, 89157, 2643, 3656, 4088, 2931, 3630, 1759, -1000,
	1704, 580, -1000, 3765, 94623, 3793, 3823, 1436, -1000, 3222,
	-1000, -1000, -1000, 929, 1891, 1966, 1395, 1394, 94623, 2568,
	-1000, 82417, -1000, 2981, 3736, 1455, 1396, 1455, 1455, 1529,
	1434, -1000, 94623, 1965, 1385, 1384, 1379, -1000, -1000, 1781,
	1746, -1000, -1000, 118297, 1631, -1000, 1378, 1373, 133487, 3864,
	3650, 2424, 753, 2170, -1000, 1500, 1370, 3220, -1000, -1000,
	-85, 3788, 3811, 1436, -1000, 3219, 1369, -1000, -1000, -1000,
	3735, 104345, 27047, 1667, 1666, 1664, 1962, 1363, -74, -1000,
	3780, 1790, -1000, 1578, 1578, 114055, 132275, 3881, 86733, -1000,
	2729, -1000, -1000, -1000, 3703, 3696, -1000, -1000, 1357, 1354,
	-1000, 1089, 5532, 3583, -1000, 145007, 1089, 1089, 2281, 3482,
	3015, 1947, -1000, 3053, 853, 3052, -1000, -1000, -1000, 853,
	-81, 83033, 132275, 170, -1000, 80, 53505, 53505, 80, 53505,
	80, -1000, 3766, 3481, 3471, 4081, 574, -1000, 2824, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 570, 2687, 3218, 132275,
	129, -1000, 104345, -1000, 3845, 117691, -1000, 3469, 145007, 2568,
	2686, -1000, -1000, 95837, -1000, 3440, 2201, 427, 2684, -1000,
	459, 4078, 3438, -1000, 138335, -1000, 3661, 1431, 3437, 1134,
	642, 3844, -1000, 642, 73271, -1000, 132275, -1000, -63, 6229,
	87945, -126, -128, 389, -1000, 132275, 132275, 3597, 2216, 2209,
	-1000, 1017, 67155, -1000, 67155, -136, -1000, -206, 3046, 1661,
	67155, -1000, 965, -129, 853, -1000, 853, -1000, 104345, 3284,
	-1000, 86733, 67155, -1000, 965, 965, 965, -1000, -1000, -1000,
	-1000, 4077, 4075, 4074, 4067, -1000, -1000, 1030, 104345, 132275,
	104345, -1000, 3013, 1909, -1000, 168, -1000, 145007, -1000, 145007,
	132275, 104345, -1000, 1030, 132275, 1030, 132275, 1030, 132275, 1030,
	1030, -1000, -1000, -1000, -1000, -1000, 80, -1000, -1000, 152882,
	-1000, 53505, -1000, -1000, 1668, 4066, 1823, -1000, 3282, -1000,
	3274, -1000, -14, -1000, -1000, 3943, 2083, -1000, 3984, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4065, 152882,
	-1000, 2378, -1000, -1000, -1000, -1000, 104345, 104345, 104345, 104345,
	132275, 3582, -1000, 132275, 3579, 3581, 104345, -1000, 3988, -1000,
	-1000, 94623, -1000, 2820, 3270, -1000, -1000, -1000, -1000, -1000,
	-1000, 1617, 2541, -1000, 2847, -1000, 1738, -1000, -1000, -1000,
	152882, 58489, -1000, -1000, 152882, 2020, -1000, 56620, 55997, -1000,
	-1000, 1958, 104345, 2912, -1000, 2912, -107, -1000, 150185, 2846,
	104345, -80, 36588, -1000, -1000, -1000, -1000, -1000, 925, 1629,
	1629, 1557, 1557, 1557, 1557, 3778, 5742, 360, 1659, 8127,
	8127, 454, 454, 454, 454, 454, 8127, 978, 1514, 1514,
	978, 978, 978, 978, 978, 1514, 1514, 1514, 8127, 8127,
	8127, 1514, 153300, 153061, 11895, 53505, 53505, 1351, 2155, 465,
	11483, 53505, 5474, 5474, 5474, 5474, -1000, 2183, -1000, -1000,
	-1000, -1000, 3217, 569, 57866, 57866, -1000, -1000, -1000, -1000,
	28958, 53505, -1000, -1000, -1000, -1000, 39739, -1000, -1000, 149092,
	-345, 379, -1000, 166, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 377, -106, 110,
	-1000, 53505, 53505, 53505, 376, -1000, 165, 53505, 132275, -1000,
	145616, 700, -133, -1000, -141, 1495, -1000, 53505, -1000, -1000,
	1350, -1000, 1347, 1342, 1339, -1000, 568, 372, -1000, 160,
	-1000, 2431, 567, 566, 53505, -1000, -1000, -1000, -1000, -1000,
	148853, -1000, -1000, 148614, -1000, -1000, 148426, -1000, -1000, 148187,
	-1000, -1000, -1000, -1000, -1000, 152404, 18548, 18480, 17770, 7091,
	17099, 16061, -143, 369, -144, 363, 916, 914, 361, 358,
	345, -149, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -150, 342, -1000, 3209, -106, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 341, -1000, 339,
	-1000, 152225, -106, 334, 431, -1000, 57866, 57866, 57866, 57866,
	332, -1000, 149946, -1000, 151926, 39116, 39116, 39116, 331, 151747,
	53505, -106, -157, -1000, -158, -1000, -1000, -1000, -1000, 472,
	-159, 1051, 37852, 62221, 27047, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1051, 1051, 53505, -1000,
	53505, 2859, -1000, -1000, -1000, -1000, 2858, 2152, 2844, 63455,
	-1000, -1000, -1000, -1000, 117085, -1000, 3923, 3150, -1000, 117085,
	-1000, -1000, 132275, 427, -1000, 117085, 117085, 27047, 859, -1000,
	859, 117085, 761, -1000, -1000, -1000, -1000, -1000, 330, 75725,
	110, 159, 27047, 1032, -1000, -1000, 3010, 3010, 3010, 3010,
	3010, 104345, -1000, -1000, 145007, 1337, -78, -76, 3041, 3038,
	-81, 83033, -81, -116, 3879, -291, -1000, 2334, -1000, 82417,
	-1000, 729, 1123, 27047, -1000, -1000, -1000, 565, -1000, 3937,
	3937, -1000, 3937, 145007, 3207, 237, 3035, 3022, -1000, 2595,
	236, -108, 145007, 4064, -1000, -1000, 256, -1000, 104345, 256,
	256, -1000, 104345, 104345, 2480, -1000, 258, -1000, 257, -1000,
	-1000, -108, -1000, 1041, 36588, -1000, 1412, -1000, -1000, 1655,
	-1000, 2235, -1000, 1345, -1000, -1000, 36588, -1000, 3600, -1000,
	1847, -1000, -1000, -1000, -1000, 4395, 132275, 132275, 104345, -1000,
	115267, 132275, -1000, 2351, 145007, -1000, 2683, 137729, 2650, 137123,
	82417, -1000, -1000, 556, 939, 2845, 2843, 1130, 132275, 132275,
	2842, 136517, 135911, -1000, 4062, 132275, 2305, 53505, 115267, 3733,
	2550, 2670, 80, 80, -1000, 80, -1000, -1000, 553, 1248,
	104345, 104345, 132275, 145007, 104345, 2176, -1000, -1000, -1000, -1000,
	-1000, 95229, -1000, -1000, 1455, -1000, -1000, -1000, 1455, -1000,
	1455, 2568, 2112, 132275, 145007, 104345, 145007, 135305, 2160, 134699,
	2150, -1000, -1000, 2149, 1955, 132275, -1000, -1000, -1000, -1000,
	-1000, 1474, -1000, 753, 1334, 3203, 53505, 53505, 2408, 80,
	80, -1000, 80, 552, 27047, 2256, -1000, 3299, 132275, 3983,
	134093, 3981, 132275, 132275, 132275, 145007, 3662, 132275, -1000, -129,
	-77, -155, -1000, 835, 834, -116, -1000, 3881, -1000, 830,
	2269, 132275, 145007, -1000, 133487, 5532, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2388, 3009, 1140, 132275, 1320, -1000, -1000,
	1950, 1332, 1330, 94623, 2312, 1948, 2057, 145007, 67155, 1018,
	67155, 2965, -1000, -1000, 24559, -1000, 152882, 152882, -1000, 152882,
	-1000, 80597, 86733, 132275, -1000, 73887, 132275, 88551, 977, 3433,
	72663, -116, 965, 1578, 3317, 1836, -155, 540, 132275, -1000,
	-1000, 2568, 3432, 427, 2681, -1000, 145007, 1084, 3843, 3431,
	539, 4061, 4060, -1000, 104345, 2590, 2680, -1000, -1000, 132881,
	3531, 753, 132275, 1051, 63455, 2200, -1000, 70237, 1111, 132275,
	2074, 235, -1000, -1000, -1000, -39, 132275, -1000, 737, -1000,
	-1000, 6229, 6229, 965, 67771, -170, -1000, 157, 538, 818,
	817, -1000, 5523, -1000, -206, -1000, 86733, 1017, 67155, 3202,
	-206, 3018, 3201, -1000, -1000, 1040, -1000, 1558, 3016, 965,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -64, -1000, 1946, 2042, 132275, -108, -108, -93, -1000,
	-1000, 154, -78, -1000, 1030, -1000, 1030, -1000, 1030, -1000,
	-1000, -1000, 152882, -1000, -1000, -1000, 1815, 1783, 132275, -1000,
	3269, -1000, 132275, -1000, -1000, 27047, 132275, 104345, 27047, 104345,
	3266, 3263, -1000, -1000, -1000, 132275, -1000, -1000, 132275, -1000,
	-1000, -1000, -1000, -1000, -1000, 1157, -1000, 2020, 2538, -1000,
	534, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2774, -1000, -79, 35342, 884, -1000, -1000, 104345, -65, -80,
	53505, 53505, 10980, 8950, 53505, 57866, 57866, -1000, 53505, 8143,
	-1000, -1000, -1000, -1000, -1000, 3200, 531, 53505, 82417, 7814,
	7753, -1000, 329, 15260, 978, -1000, 53505, -1000, 664, -1000,
	326, 38493, -1000, 150612, 100, -175, -1000, 20167, -106, -176,
	-1000, -1000, 713, -1000, 3526, -1000, 53505, 151508, 2715, 2367,
	2180, 1848, 3937, 3980, 23935, -1000, 74503, 1063, 2488, 147948,
	-1000, -1000, -1000, -1000, 82417, 82417, 53505, 53505, -1000, 53505,
	53505, 53505, -1000, -1000, -1000, 3937, 909, -1000, -1000, -1000,
	909, -1000, -1000, 1455, -1000, 1455, -1000, 53505, -1000, -1000,
	3179, 53505, -1000, 82417, 82417, 57866, 57866, 57866, 57866, 57866,
	57866, 57866, 57866, 57866, 57866, 57866, 57866, 57866, 57866, 57866,
	57866, 57866, 57866, 57866, 57866, 2879, 57866, 3905, 3905, 3905,
	782, -1000, 3261, 3179, 53505, 53505, 82417, 323, 322, 318,
	-1000, 53505, -106, -1000, -1000, 8910, 526, -1000, 2764, -1000,
	3097, -1000, 53505, -1000, -166, -1000, 2736, -1000, -1000, 3097,
	3097, -178, 152882, 63455, 63455, -1000, 524, 53505, 2856, -1000,
	-1000, 699, -342, -1000, 811, -1000, -1000, -1000, -1000, -1000,
	-1000, 807, -1000, 427, -1000, -1000, -1000, 153, 117085, 117085,
	698, -1000, -181, -1000, -1000, -183, -1000, 3842, 317, 27047,
	-1000, 1051, 5604, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2875, -291, 145007, 145007, 1944, 1943, -81, 2527, -1000, 3112,
	3977, -1000, 3938, 712, 696, 152, 3937, 316, 315, 314,
	-108, 145007, 145007, 1942, 1927, 77555, 145007, -1000, -1000, -1000,
	256, -1000, -1000, -1000, 254, -1000, -1000, -1000, -1000, 2950,
	-1000, -83, -1000, -1000, -1000, 53505, -1000, 999, -1000, -1000,
	3652, 522, 1328, 1322, -1000, -184, -1000, 805, -1000, -1000,
	-1000, -1000, -1000, 3167, -1000, 3430, -1000, 2679, -1000, 1120,
	2678, 2093, -1000, 53505, 517, 2953, 515, 514, 4058, 2239,
	4057, 1133, 3426, 2480, 3411, 2480, -1000, -1000, -1000, 911,
	-1000, 152882, -186, -1000, 2550, -1000, 513, 512, -1000, -84,
	1723, 508, 1312, 1039, -1000, -1000, 53505, 53505, 116479, -1000,
	479, 3653, -66, -1000, -1000, -1000, 1910, 1304, 1302, -1000,
	-1000, -1000, -1000, -1000, 2568, 1870, 1300, 1297, -1000, -1000,
	-1000, -1000, -1000, 2675, -1000, 132275, -1000, 3408, 132275, 132275,
	1038, -1000, 3335, 3329, 899, 132275, 53505, 53505, 151269, 151090,
	-1000, 1037, -1000, -1000, 53505, -1000, -85, 1295, 3783, 2674,
	104345, -1000, 2480, 3406, 1292, -1000, 1288, -1000, -1000, -1000,
	3779, 3777, 1255, -1000, 114055, 86733, 86733, 3881, 67155, -1000,
	-1000, -1000, 3927, -1000, -1000, -1000, -1000, 84263, -1000, -1000,
	1089, 132275, 145007, 104345, 2072, -1000, -1000, 93411, 94017, 132275,
	3015, -108, 853, -1000, 2700, 853, 1018, 3178, -1000, 2903,
	-1000, 1036, 303, -87, -1000, 1252, 79981, 76331, -1000, 2468,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 4048, 302, -189,
	-88, 82417, -1000, -1000, -1000, -1000, 2650, 104345, 132275, 1310,
	2934, 132275, 132275, 3841, -1000, 2570, 576, 104345, 883, -1000,
	3923, -1000, -1000, -1000, 132275, 37852, 114055, -1000, 3768, 104345,
	3840, 3401, 1032, 104345, 80, 104345, 3957, -1000, -1000, 3838,
	104345, 3393, 2589, 2673, 2812, 753, 87339, 1032, 2484, -97,
	-1000, 2074, 37211, 3634, -197, -1000, -1000, -1000, 1051, 73271,
	63455, 53505, 4046, -198, -1000, -1000, -1000, -1000, -1000, 86733,
	965, 132275, 132275, 4044, 86733, 86733, 86733, -89, 511, -1000,
	804, 802, 801, -1000, -1000, -1000, -1000, -1000, -1000, 800,
	798, 797, 796, 1017, -1000, -1000, -206, 67155, 1017, 67155,
	80, -1000, 2522, 104345, 67155, -1000, 23311, 132275, 3013, -1000,
	83639, -1000, -1000, -1000, -1000, -1000, 1030, 3975, -116, -1000,
	-1000, -1000, 2413, 2632, 2413, 2051, 2046, -1000, -1000, -1000,
	2513, -1000, -1000, -1000, -1000, 2916, 3655, 27047, 3769, 5474,
	53505, 53505, 6588, 1137, 319, 5474, 53505, 53505, 82417, 9421,
	-203, 53505, 53505, -1000, 53505, 694, 152882, -1000, 3974, 53505,
	290, 288, -1000, -1000, -1000, 3926, -1000, -1000, -1000, 152882,
	53505, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 281, -1000,
	101, -1000, -1000, -1000, 141365, -1000, 53505, 279, 3732, -1000,
	278, 275, 12700, 633, 147760, 147521, 147108, 273, -1000, -1000,
	272, 271, 152882, 3261, 152882, -1000, -1000, 988, 988, 1405,
	1405, 1405, 1405, 3905, 2233, 870, 555, 731, 731, 731,
	2153, 782, 782, 731, 731, 731, 782, 3177, 2851, 510,
	8248, -1000, -1000, 152882, 152882, 269, -1000, -1000, -1000, -106,
	266, 8910, -1000, 3092, 3731, 152882, -1000, 63455, 3092, 3092,
	-1000, -1000, 2152, 132275, 152882, 63455, -1000, 3150, -1000, 21433,
	20803, -1000, 27047, -1000, -1000, -1000, -1000, 3923, -1000, 75725,
	-1000, 509, -1000, 81, -1000, 5604, -1000, 788, -1000, -1000,
	86733, 86733, 4042, 4040, -1000, 3970, 3969, 2562, 3968, 3010,
	-1000, -291, -195, 132275, 132275, -1000, 2526, -1000, 692, 4039,
	709, 27047, 250, -1000, -1000, -1000, -108, -108, 132275, 132275,
	3176, 104345, 132275, 1480, -108, -1000, -1000, -1000, 3596, 152882,
	3258, 3077, 3075, 132275, 132275, -1000, 115267, 36588, 1658, 115873,
	132275, 3388, -1000, 3387, -1000, 1130, 2790, 147040, 64071, -1000,
	64071, 132275, -1000, -1000, -1000, -1000, 2133, 1579, 4035, 1173,
	-1000, 3688, 132275, -1000, 132275, -1000, -1000, -1000, 115267, -1000,
	132275, 132275, 104345, 132275, -1000, 145007, 3352, -204, 152882, -92,
	-1000, 787, -1000, 1388, -1000, 22687, 132275, 145007, 104345, 132275,
	145007, 104345, 3382, 1107, 132275, -1000, 1106, 2428, -1000, -1000,
	3321, -1000, 152882, 150851, 80, 53505, 3347, -209, 27047, -1000,
	3965, 3964, 3376, 3693, -1000, 132275, 3963, 132275, 104345, 3594,
	-1000, -1000, -1000, 1029, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1857, 1286, 1276, 2588, 2580, 2524, -93, 2312, 1018,
	-94, 506, -1000, 786, -1000, -1000, 785, 781, 1018, -1000,
	86733, 67155, 4031, 2071, 73887, 53505, 53505, 82417, -1000, 82417,
	-1000, -1000, -1000, 2930, -1000, 111017, 88551, 2510, -1000, -1000,
	502, 132275, 132275, 493, -1000, 80, -1000, 4030, 115267, 492,
	-1000, 2519, -1000, 691, -1000, -1000, 233, -222, 145007, 2568,
	80, 104345, -1000, 427, 1003, 427, 247, -95, -1000, 3365,
	1125, 27047, 104345, 3364, 2817, 753, 87339, -1000, 1431, 2919,
	-1000, -96, -1000, 636, 80, 2484, -1000, -97, 152882, -1000,
	775, 245, -1000, 3590, -1000, -1000, -227, -1000, -1000, 5402,
	5402, 86733, 67155, 86733, 86733, 86733, 67155, 86733, -1000, 1017,
	3837, -1000, -206, -1000, 2642, -1000, 965, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 27047, 1811, -1000, 491, 490,
	-1000, -1000, -1000, -1000, 3655, 5474, 5474, 53505, 53505, 53505,
	5474, 9421, -228, -1000, 5474, 5474, -106, -1000, -1000, 150612,
	-1000, -1000, -1000, 152882, -1000, 22063, 2417, -1000, 146623, -1000,
	35342, -1000, -1000, 53505, 53505, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 57866, 3175, 486, 82417, -1000, -1000, 244,
	990, 53505, 55374, 2736, 990, 990, -1000, -229, -1000, -1000,
	-1000, 3923, -1000, 3923, 81, -1000, -1000, 4029, 27047, -1000,
	86733, -1000, -1000, -1000, -1000, -1000, 4028, 4027, 2655, 4026,
	4023, -1000, -1000, -1000, 3324, -194, -199, -1000, 708, -1000,
	4022, -1000, -1000, 206, 198, 145007, 3162, 155, 3002, -1000,
	80, -1000, -1000, -1000, -1000, -1000, -1000, 2997, 3833, -1000,
	2141, -1000, 132275, 132275, -1000, 132275, -1000, 27047, 132275, 3121,
	1329, -1000, 939, 2841, 485, 57866, 1156, 104345, 882, 3072,
	3070, -1000, 3861, 3727, 3071, -230, -1000, 132275, 53505, 132275,
	-237, -238, 2654, -1000, -1000, 1152, 1325, 53505, 1150, -1000,
	-1000, -1000, 82417, 480, 2480, 2480, -1000, -243, -244, -1000,
	-1000, -1000, 53505, 1231, 132275, 35965, -1000, 4021, 3653, -1000,
	-1000, -1000, -1000, -1000, -1000, 132275, 132275, -1000, 132275, 132275,
	-1000, 53505, -1000, 150424, 53505, 1226, -1000, -1000, -1000, 3960,
	2480, 27047, 2480, -1000, 2480, 3693, 1170, 2621, 132275, 145007,
	104345, 2373, 2373, 3172, -1000, -1000, -1000, 2702, 2702, 86733,
	67155, 67155, -1000, -98, 1018, -1000, 1747, -1000, 152882, 152882,
	-1000, -1000, 2415, 4020, -1000, -1000, -1000, -1000, 2839, -1000,
	-1000, -1000, 132275, 2835, 3034, 64071, 475, 473, 132275, 998,
	-1000, -245, 88551, 977, 937, -1000, 72055, -1000, -1000, -1000,
	-1000, 427, 3832, -1000, 2948, 3831, -1000, 3959, 468, 467,
	132275, 2579, 466, 27047, 3632, 753, 87339, -1000, 3531, 2074,
	-1000, 2664, 132275, 3629, -1000, 2919, 465, 965, 464, 965,
	-1000, -251, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1391, 1017, -99, -1000, 867, 856, -1000, -1000, -1000,
	104345, 104345, 53505, 53505, -1000, 5474, 5474, 5474, -1000, 230,
	-1000, -1000, 2484, 3724, -1000, -100, 146397, 146353, 6286, 57866,
	82417, -252, -1000, -1000, 132275, 152882, -101, -1000, 152882, 462,
	461, 386, -1000, -1000, -1000, 634, 455, -1000, -1000, -1000,
	-1000, 4019, -1000, -1000, -1000, 145007, 145007, 4018, -1000, 145007,
	145007, -108, 145007, 145007, 1853, -1000, 114661, 132275, -1000, -1000,
	2093, 1820, -1000, -1000, 132275, 2668, -1000, -1000, -1000, 1013,
	53505, 8248, 57866, 458, 53505, -1000, 451, 450, 3822, 3565,
	-1000, 2924, 3109, 2099, 64071, -1000, 3655, -1000, 146127, -1000,
	1124, 2185, -1000, -1000, -1000, -1000, 152882, 57866, 3693, 64071,
	-1000, -1000, 440, 438, 152882, 437, 768, 3157, -1000, -1000,
	-1000, -1000, -116, -116, -1000, 152882, 80, 152882, 436, 3783,
	-1000, -1000, -1000, -1000, 2480, 104345, 758, -1000, -1000, -1000,
	1225, -1000, -1000, -1000, -1000, 4016, 4010, 3148, 93411, -1000,
	-253, -1000, -1000, -1000, 2194, 82417, -1000, 977, -1000, -1000,
	2510, 435, -1000, 959, 2840, 2840, -259, 64071, 64071, -260,
	2554, 2932, -1000, 225, 3817, 937, -1000, 3912, -1000, 1051,
	-1000, 3814, 80, 3586, -1000, 80, -1000, 3957, 64071, -1000,
	104345, 64071, 2578, 2306, 2798, 87339, -1000, 2812, -1000, -1000,
	-261, 132275, 2074, -1000, -1000, 86733, -1000, -1000, 3910, -1000,
	2642, -1000, 132275, -1000, 132275, -1000, -1000, -267, -268, -1000,
	2427, 53505, 35342, -1000, -1000, 6286, -269, -1000, -102, -1000,
	3812, 55374, 4009, 4005, 4004, -1000, -1000, -1000, -291, -291,
	-1000, -108, -108, -108, -108, 132275, -1000, 2140, -1000, 2650,
	-1000, -1000, 3361, -1000, 3089, 434, 145704, 8248, 2767, 132275,
	145660, 2568, 2568, -1000, 3809, 3102, -1000, -1000, 2408, 433,
	-1000, -1000, -1000, -1000, 884, 132275, 959, 3087, 104345, 8248,
	1129, -270, 2413, 2413, 53505, 34719, 2426, -1000, 53505, -1000,
	-1000, 3693, 67155, 145007, -1000, -1000, 145007, 2577, -1000, 3129,
	3927, 6532, -1000, 2554, 132275, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1124, -275, -276,
	-1000, -1000, 3678, -1000, 3585, 2930, 80, -1000, -1000, -1000,
	80, -1000, 4003, 1003, 224, -277, 1125, -278, 104345, 2128,
	-1000, 753, -1000, 2817, 1051, 3542, -1000, -283, -1000, -1000,
	-1000, -284, -289, -1000, -1000, 223, 54751, 54751, 54751, -106,
	-107, -1000, 132275, 428, -1000, -1000, -1000, -1000, -1000, -1000,
	128, -1000, -1000, 3315, 858, -1000, 841, 2090, 220, 1146,
	216, 199, -1000, -1000, -1000, 3071, -1000, 132275, -1000, -1000,
	-1000, 858, 427, -1000, 53505, 1124, -294, -1000, 1103, -296,
	-1000, 1102, -299, -1000, 3142, -1000, -302, 2480, -1000, -291,
	248, 2373, 1002, 3760, -1000, 2498, 6532, -1000, 3950, 87339,
	-1000, -1000, -1000, 2576, 2653, -1000, -1000, -1000, -1000, 1796,
	3004, -1000, 2805, 1440, 1440, 132275, -1000, -1000, 2785, -305,
	-1000, -1000, 2099, 1124, 2408, 2560, -1000, 2415, 998, -1000,
	-1000, -1000, -1000, 1124, 414, 2099, 408, 1644, 753, -1000,
	-1000, 1455, 3632, 3538, 1382, 965, -1000, -1000, -1000, 3392,
	-1000, 59112, 2567, 2029, 149758, 3392, 3392, -1000, -1000, 145007,
	132275, 959, 3746, -1000, 845, 842, 1593, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1051, -307, -1000, 2767, 152882,
	959, -1000, 2413, 2990, -1000, 2413, 3141, -1000, 2420, -1000,
	-1000, -1000, -1000, 3136, -1000, 1937, 3891, -1000, -1000, 3786,
	53505, -1000, -1000, -1000, -1000, 2649, 2559, 3003, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 959, 132275, 2408, 2099,
	959, 2010, 2004, 3997, 977, 2554, 2099, 64071, 2408, 64071,
	2353, -1000, 132275, -1000, 2306, 1376, -1000, 1752, -1000, -1000,
	1957, 3857, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -108,
	-1000, -1000, 755, -1000, 3556, -1000, 1144, 2318, 2318, -1000,
	-1000, 841, -1000, -1000, 406, -1000, 405, -1000, 145007, 2518,
	-1000, -1000, -1000, 152882, 2920, 2644, -1000, -1000, -1000, -1000,
	959, 2408, 1051, -1000, 3996, -1000, 2554, -1000, 2408, -308,
	959, -314, 2430, -1000, -1000, -116, 2128, -1000, 1749, 73271,
	2026, -1000, -1000, 2476, 54128, 53505, -1000, 3884, -1000, -1000,
	2871, -1000, 3071, 53505, 53505, 248, 71449, 13149, -1000, 2918,
	1051, 959, -1000, -1000, 2785, 959, 1124, 1051, 2099, -1000,
	753, 1644, 73271, -292, -1000, -1000, -1000, 152882, -1000, -1000,
	-1000, -1000, -315, -316, -1000, -155, 114055, -337, -1000, -1000,
	-1000, -1000, -1000, 1051, -1000, 1051, 2099, -1000, 2408, 145007,
	2353, -292, -1000, 2408, 1202, -317, -1000, -1000, -1000, 2408,
	959, -1000, -1000, -1000, -1000, -1000, 404, -1000, 959, 1051,
	53505, 1051, -1000, -333, -1000, 2408, -1000,
}

var sqlPgo = [...]int{
	0, 4906, 4905, 16, 4904, 4903, 4902, 4901, 4900, 4896,
	4893, 4889, 4887, 4886, 4885, 4884, 160, 4883, 4882, 4880,
	4879, 4878, 4876, 4874, 4872, 4871, 4870, 4868, 4866, 4864,
	4859, 4858, 4857, 4856, 4855, 4852, 4850, 4849, 4848, 4847,
	4845, 4842, 4835, 4834, 4831, 4830, 4829, 4828, 4827, 4826,
	4824, 4821, 4818, 4817, 4816, 4815, 4805, 4804, 4803, 4801,
	4800, 4798, 4797, 4795, 4790, 4788, 4786, 4785, 4784, 4783,
	4782, 4781, 4778, 4777, 70, 4776, 4774, 4772, 4768, 4766,
	4764, 4763, 4762, 4761, 4755, 4753, 4752, 4751, 4750, 4746,
	4745, 4744, 4743, 4742, 4741, 80, 4739, 297, 4738, 4737,
	4736, 4733, 4730, 4728, 4727, 4725, 4724, 4723, 4722, 4721,
	296, 4720, 17, 191, 4719, 4713, 10, 4711, 4709, 295,
	4708, 4707, 4706, 4705, 4704, 310, 4703, 4699, 4697, 4696,
	4693, 279, 4692, 4691, 4689, 4688, 4687, 4686, 78, 157,
	4683, 4681, 1366, 4680, 4679, 4678, 4677, 4676, 4674, 4673,
	275, 280, 4671, 4669, 4668, 273, 184, 4666, 293, 4665,
	4664, 4663, 4662, 4659, 4658, 4657, 4655, 4654, 4652, 4650,
	4649, 4647, 4644, 4640, 4639, 4636, 4635, 4633, 4632, 4631,
	4630, 4627, 4625, 4624, 4623, 4622, 4621, 4620, 4619, 4618,
	4615, 4614, 4613, 4612, 4610, 4605, 4604, 4600, 4599, 4598,
	4597, 258, 236, 161, 4596, 4595, 4594, 4592, 4591, 288,
	287, 4590, 4589, 4588, 4587, 4585, 3787, 4584, 4583, 4582,
	4581, 4580, 4576, 4574, 4571, 4570, 172, 5, 38, 4569,
	4568, 117, 109, 103, 90, 119, 111, 4567, 4566, 142,
	4565, 151, 131, 4562, 135, 122, 39, 35, 311, 265,
	1292, 256, 4558, 4551, 4548, 266, 220, 4547, 255, 4544,
	4539, 4538, 4529, 4528, 4527, 83, 67, 234, 4519, 4518,
	168, 193, 205, 206, 200, 197, 360, 66, 118, 94,
	76, 56, 21, 147, 245, 28, 2, 282, 4517, 277,
	7, 164, 6, 40, 4514, 4512, 4510, 4509, 4303, 123,
	4508, 286, 269, 198, 4507, 4506, 4501, 1320, 4497, 4495,
	63, 347, 199, 145, 121, 58, 144, 4494, 179, 202,
	42, 4493, 253, 106, 4492, 4491, 116, 110, 10427, 14481,
	4489, 4488, 139, 85, 132, 4593, 188, 171, 225, 492,
	153, 195, 187, 4480, 162, 4479, 176, 177, 203, 294,
	4477, 102, 4474, 3807, 170, 208, 180, 7033, 4473, 4470,
	4459, 105, 4458, 120, 4457, 4456, 77, 22, 3, 1,
	166, 46, 43, 13, 4455, 31, 149, 62, 36, 4453,
	32, 4449, 4448, 4447, 4446, 60, 4445, 57, 192, 4444,
	4443, 308, 4442, 107, 72, 61, 4441, 91, 243, 4440,
	291, 150, 4439, 4438, 212, 219, 4436, 98, 268, 4435,
	4431, 4429, 4428, 4426, 307, 154, 4, 152, 4424, 4421,
	167, 4418, 69, 254, 224, 4414, 73, 4413, 4410, 201,
	65, 169, 306, 141, 264, 140, 248, 213, 246, 4408,
	4407, 4405, 218, 4403, 4400, 240, 183, 4399, 4395, 261,
	312, 104, 59, 96, 251, 101, 223, 189, 4384, 230,
	4376, 4375, 303, 207, 238, 45, 23, 9, 112, 125,
	4374, 15, 252, 181, 244, 136, 4371, 8142, 2625, 2912,
	250, 4367, 178, 143, 93, 159, 185, 283, 100, 4366,
	4350, 3683, 4344, 4341, 4338, 4337, 211, 4335, 4332, 50,
	186, 214, 267, 4331, 127, 88, 64, 29, 173, 95,
	298, 137, 239, 221, 272, 4327, 4325, 4324, 209, 4320,
	84, 138, 232, 4319, 227, 278, 79, 4317, 97, 4315,
	182, 2376, 82, 175, 4313, 247, 4311, 4310, 4309, 4308,
	4307, 4305, 4302, 2231, 249, 4301, 4300, 4299, 34, 222,
	4298, 217, 292, 276, 74, 75, 216, 114, 3387, 126,
	344, 226, 68, 8, 4297, 130, 4296, 1719, 71, 4294,
	0, 10043, 10677, 14016, 4292, 4290, 13188, 4289, 6186, 4288,
	4278, 4277, 241, 92, 4275, 4274, 4273, 124, 4270, 99,
	4267, 4266, 89, 4265, 41, 26, 27, 37, 33, 977,
	758, 4264, 4263, 49, 155, 24, 4262, 300, 242, 4261,
	4260, 4258, 4257, 115, 4256, 55, 4255, 52, 4254, 4253,
	53, 20, 48, 4252, 4251, 233, 190, 3726, 194, 174,
	4250, 146, 4248, 4247, 4246, 87, 165, 4245, 4244, 281,
	228, 235, 108, 4243, 271, 4241, 229, 4240, 4239, 30,
	4238, 4237, 259, 134, 133, 51, 270, 163, 54, 4236,
	4235, 4234, 158, 4232, 4231, 4230, 128, 4229, 4228, 81,
	4226, 4225, 47, 4224, 156, 4220, 12, 4219, 4218, 4217,
	204, 237, 4216, 4215, 196, 4213, 4212, 305, 4211, 4205,
	3792, 299, 4204, 44, 4195, 4194, 4192, 19, 4191, 4187,
	231, 3587, 4185, 4184, 14, 4183, 215,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 8, 8, 8, 8, 8,
	8, 8, 8, 8, 8, 8, 14, 14, 10, 10,
	10, 10, 11, 11, 11, 11, 11, 58, 58, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 41, 43, 42, 36, 36, 37, 37,
	38, 39, 39, 44, 46, 45, 13, 13, 13, 9,
	9, 9, 9, 9, 9, 9, 9, 22, 22, 47,
	47, 23, 23, 49, 49, 24, 24, 50, 50, 639,
	639, 639, 640, 640, 641, 641, 641, 27, 52, 20,
	21, 21, 21, 21, 642, 642, 642, 642, 40, 28,
	53, 33, 33, 33, 33, 33, 229, 229, 229, 229,
	26, 26, 48, 48, 273, 273, 272, 272, 272, 272,
	272, 272, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 272, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 272, 272, 272, 272, 272, 638, 638, 275, 275,
	274, 262, 262, 263, 263, 264, 264, 643, 643, 276,
	276, 276, 277, 277, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 532, 532, 532, 563, 563, 563,
	563, 565, 565, 683, 683, 684, 684, 684, 684, 684,
	141, 141, 428, 428, 428, 62, 62, 62, 62, 62,
	628, 628, 231, 231, 231, 233, 233, 232, 232, 232,
	232, 232, 85, 85, 649, 649, 648, 647, 647, 647,
	650, 650, 650, 230, 230, 230, 137, 137, 137, 137,
	137, 137, 137, 137, 138, 138, 139, 139, 659, 659,
	659, 234, 234, 234, 236, 236, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 241,
	19, 19, 19, 120, 120, 120, 120, 120, 120, 120,
	115, 115, 567, 567, 568, 568, 225, 225, 226, 226,
	226, 226, 227, 227, 228, 228, 228, 77, 77, 238,
	238, 240, 240, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 65, 65, 65, 65,
	65, 66, 66, 66, 66, 66, 66, 67, 67, 67,
	67, 67, 67, 68, 68, 75, 75, 75, 75, 75,
	75, 75, 75, 203, 203, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 82, 82, 82,
	82, 82, 91, 660, 660, 661, 661, 675, 664, 664,
	665, 665, 666, 666, 666, 667, 667, 667, 667, 667,
	674, 674, 674, 674, 674, 669, 668, 670, 670, 671,
	671, 672, 672, 672, 672, 672, 673, 673, 673, 673,
	673, 673, 673, 673, 673, 673, 673, 673, 673, 673,
	673, 673, 673, 663, 676, 677, 677, 678, 678, 679,
	679, 679, 685, 685, 685, 685, 685, 685, 685, 685,
	685, 685, 685, 685, 685, 685, 685, 685, 685, 686,
	686, 687, 687, 688, 688, 688, 688, 688, 688, 688,
	688, 688, 688, 688, 688, 688, 688, 688, 688, 688,
	688, 688, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	92, 92, 389, 389, 352, 352, 93, 93, 93, 94,
	94, 95, 95, 79, 79, 79, 625, 625, 626, 632,
	689, 689, 523, 523, 522, 522, 97, 97, 427, 427,
	98, 98, 98, 98, 98, 98, 99, 99, 99, 99,
	99, 99, 99, 100, 100, 100, 100, 100, 100, 100,
	100, 100, 100, 100, 100, 100, 100, 107, 107, 107,
	107, 107, 108, 108, 108, 105, 105, 105, 102, 102,
	102, 101, 101, 101, 106, 106, 106, 631, 338, 338,
	104, 104, 104, 103, 103, 103, 405, 405, 109, 109,
	109, 109, 353, 110, 110, 110, 110, 110, 110, 110,
	110, 113, 113, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 525, 525, 5, 5,
	268, 268, 267, 267, 267, 267, 6, 6, 6, 271,
	271, 270, 269, 111, 111, 111, 489, 489, 116, 116,
	116, 443, 443, 117, 117, 117, 117, 117, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 140, 140,
	140, 140, 140, 140, 140, 140, 140, 140, 140, 140,
	140, 140, 635, 635, 398, 398, 301, 301, 301, 301,
	129, 129, 129, 129, 130, 130, 130, 130, 131, 131,
	211, 211, 147, 147, 147, 147, 146, 146, 146, 146,
	146, 146, 146, 146, 69, 69, 69, 70, 70, 71,
	71, 72, 72, 73, 73, 74, 74, 74, 74, 74,
	150, 150, 32, 32, 32, 32, 151, 151, 680, 680,
	153, 149, 149, 149, 149, 149, 149, 149, 148, 148,
	152, 152, 152, 152, 154, 156, 156, 156, 156, 156,
	155, 155, 155, 155, 155, 157, 157, 557, 557, 413,
	413, 555, 555, 579, 579, 556, 556, 359, 359, 359,
	359, 359, 360, 360, 360, 566, 566, 566, 566, 566,
	566, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 212, 212, 212,
	213, 213, 218, 218, 219, 219, 219, 220, 220, 220,
	217, 217, 217, 214, 214, 215, 215, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 223, 223, 221,
	221, 222, 222, 691, 691, 690, 690, 224, 224, 224,
	224, 224, 184, 184, 184, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 414, 414,
	187, 187, 187, 171, 171, 159, 159, 159, 159, 159,
	159, 159, 159, 237, 237, 237, 237, 164, 164, 164,
	164, 164, 164, 164, 164, 165, 165, 165, 160, 160,
	173, 173, 173, 173, 173, 166, 166, 167, 167, 167,
	168, 168, 168, 168, 195, 195, 170, 170, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 161, 161, 161,
	161, 175, 175, 175, 175, 450, 450, 450, 201, 201,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 198, 198, 198, 198,
	198, 198, 651, 651, 652, 652, 652, 191, 191, 191,
	191, 191, 191, 503, 503, 185, 185, 185, 185, 190,
	190, 190, 190, 193, 193, 193, 193, 433, 433, 182,
	182, 182, 183, 183, 183, 188, 188, 200, 189, 390,
	390, 186, 186, 192, 192, 192, 192, 194, 194, 194,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	163, 163, 163, 163, 196, 196, 181, 181, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 692,
	692, 177, 177, 177, 176, 176, 176, 176, 179, 179,
	180, 180, 180, 180, 180, 180, 180, 178, 169, 199,
	633, 633, 629, 629, 629, 629, 629, 629, 629, 629,
	627, 627, 627, 627, 627, 627, 627, 627, 627, 630,
	630, 630, 630, 630, 634, 634, 121, 121, 121, 121,
	121, 121, 121, 132, 132, 132, 132, 132, 132, 132,
	135, 135, 122, 122, 122, 122, 122, 122, 122, 125,
	125, 123, 123, 123, 123, 124, 124, 86, 86, 86,
	86, 86, 18, 18, 18, 87, 87, 292, 292, 246,
	246, 246, 377, 377, 247, 247, 367, 367, 367, 367,
	242, 242, 243, 243, 244, 245, 245, 88, 88, 693,
	693, 693, 644, 644, 644, 645, 645, 645, 645, 645,
	645, 361, 361, 362, 362, 469, 469, 469, 469, 469,
	365, 365, 365, 366, 366, 366, 366, 366, 366, 366,
	366, 366, 375, 376, 376, 368, 368, 374, 373, 373,
	372, 372, 371, 371, 369, 370, 370, 370, 379, 379,
	378, 381, 381, 380, 468, 588, 588, 590, 590, 590,
	590, 590, 590, 590, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 451, 451, 694, 694, 695, 696, 586, 586, 586,
	587, 582, 582, 583, 583, 583, 583, 583, 363, 363,
	364, 364, 364, 364, 584, 585, 396, 396, 507, 589,
	589, 591, 591, 593, 697, 697, 697, 697, 697, 697,
	698, 698, 698, 467, 467, 466, 466, 465, 465, 387,
	387, 594, 594, 594, 594, 595, 595, 595, 595, 595,
	598, 597, 596, 596, 596, 596, 596, 90, 90, 90,
	430, 430, 429, 429, 431, 431, 431, 431, 431, 431,
	431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
	431, 431, 208, 208, 304, 304, 304, 84, 84, 84,
	15, 15, 15, 15, 15, 15, 15, 319, 319, 16,
	16, 16, 16, 646, 646, 646, 89, 89, 89, 89,
	89, 89, 385, 385, 385, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 637, 637, 636, 636, 305, 305, 700, 700, 96,
	96, 96, 96, 96, 96, 96, 96, 526, 526, 527,
	527, 83, 83, 83, 83, 83, 452, 452, 449, 449,
	448, 448, 395, 395, 505, 505, 505, 506, 309, 309,
	310, 310, 265, 265, 265, 35, 34, 25, 25, 29,
	29, 30, 30, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 31, 31, 55, 55, 55, 55, 56, 56,
	56, 56, 59, 59, 60, 60, 54, 54, 54, 54,
	57, 57, 51, 51, 61, 61, 61, 61, 61, 653,
	655, 655, 654, 654, 658, 658, 658, 658, 658, 658,
	656, 656, 340, 340, 657, 657, 681, 681, 682, 682,
	128, 128, 133, 133, 133, 133, 133, 134, 134, 134,
	134, 136, 136, 136, 136, 145, 145, 204, 204, 204,
	204, 204, 204, 204, 63, 63, 76, 76, 143, 702,
	702, 702, 144, 144, 144, 205, 205, 205, 205, 206,
	206, 207, 207, 701, 701, 302, 302, 462, 462, 463,
	463, 703, 703, 464, 464, 464, 464, 464, 295, 294,
	296, 296, 297, 297, 81, 81, 81, 285, 285, 284,
	286, 286, 287, 287, 282, 282, 569, 569, 289, 289,
	289, 290, 290, 278, 278, 279, 279, 280, 280, 281,
	281, 293, 293, 564, 564, 704, 704, 119, 119, 119,
	210, 210, 351, 351, 351, 459, 459, 459, 388, 388,
	316, 316, 461, 461, 461, 461, 461, 426, 426, 426,
	209, 209, 403, 403, 416, 416, 417, 417, 519, 519,
	418, 126, 126, 127, 127, 142, 142, 250, 250, 248,
	248, 248, 248, 248, 248, 248, 248, 255, 255, 256,
	256, 257, 257, 258, 259, 259, 259, 259, 406, 406,
	260, 260, 260, 249, 249, 249, 251, 251, 251, 251,
	251, 251, 251, 254, 254, 254, 254, 261, 261, 261,
	253, 253, 605, 605, 605, 607, 607, 609, 609, 608,
	608, 604, 604, 606, 606, 699, 699, 432, 432, 432,
	384, 386, 382, 382, 383, 383, 393, 393, 391, 392,
	392, 394, 394, 504, 504, 504, 266, 266, 266, 423,
	423, 423, 423, 424, 424, 455, 455, 453, 453, 453,
	453, 454, 454, 456, 456, 456, 457, 457, 458, 458,
	420, 420, 421, 421, 422, 422, 422, 422, 485, 485,
	252, 252, 252, 400, 400, 400, 401, 401, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 476,
	476, 474, 474, 474, 474, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 509, 510, 510, 402, 402, 511,
	460, 460, 623, 623, 623, 624, 624, 502, 502, 512,
	512, 512, 512, 512, 512, 500, 500, 501, 501, 520,
	521, 521, 436, 436, 436, 436, 434, 434, 437, 437,
	437, 437, 437, 435, 435, 513, 513, 513, 513, 425,
	425, 514, 514, 514, 514, 515, 516, 516, 517, 517,
	470, 471, 471, 528, 528, 528, 528, 530, 399, 399,
	399, 399, 399, 581, 580, 580, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 544, 544, 544,
	544, 544, 544, 544, 544, 544, 544, 545, 545, 545,
	545, 545, 545, 545, 531, 531, 531, 531, 531, 535,
	535, 535, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 536, 536, 541, 541, 542, 542, 542,
	537, 538, 543, 543, 543, 543, 705, 705, 547, 547,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 533,
	533, 533, 540, 540, 540, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 444, 444,
	446, 446, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 479, 479, 479, 479, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 599, 599, 599, 599, 599, 599, 599, 599,
	481, 481, 602, 602, 603, 603, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 610, 610, 611,
	611, 613, 613, 614, 614, 615, 616, 616, 616, 617,
	618, 618, 612, 612, 619, 619, 619, 619, 620, 620,
	621, 621, 621, 621, 621, 622, 622, 622, 622, 622,
	491, 491, 492, 492, 498, 498, 498, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 358, 358, 357, 306, 306, 306, 306, 306,
	306, 411, 411, 409, 409, 409, 412, 412, 410, 410,
	408, 408, 407, 407, 488, 488, 486, 486, 490, 490,
	438, 438, 546, 546, 546, 546, 546, 546, 546, 546,
	439, 439, 439, 447, 440, 440, 441, 441, 441, 441,
	441, 482, 483, 442, 442, 442, 484, 484, 493, 497,
	497, 496, 495, 495, 494, 494, 472, 472, 473, 473,
	419, 419, 706, 706, 415, 415, 518, 518, 518, 518,
	575, 575, 355, 355, 404, 404, 354, 354, 346, 346,
	347, 347, 347, 347, 397, 397, 499, 499, 548, 548,
	549, 549, 550, 550, 551, 551, 552, 553, 554, 487,
	487, 327, 326, 313, 314, 325, 324, 323, 312, 315,
	320, 321, 322, 317, 318, 334, 333, 332, 283, 288,
	339, 341, 341, 344, 344, 345, 343, 342, 342, 329,
	330, 331, 524, 311, 348, 348, 349, 349, 349, 350,
	350, 350, 350, 307, 307, 308, 308, 335, 335, 336,
	337, 337, 328, 328, 328, 298, 298, 298, 299, 299,
	300, 300, 562, 562, 559, 559, 559, 560, 560, 560,
	662, 561, 561, 561, 561, 558, 558, 558, 558, 558,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 571, 571, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 573, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 578, 578,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 3, 4, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 4, 4, 6, 9, 6, 8,
	4, 4, 5, 9, 7, 9, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 1, 1, 1, 1, 0, 1, 6, 6, 4,
	8, 7, 10, 9, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 4, 4, 6, 5, 6, 5, 6,
	4, 8, 3, 8, 4, 2, 3, 10, 3, 6,
	4, 3, 1, 3, 4, 4, 2, 1, 1, 3,
	1, 3, 2, 4, 3, 2, 3, 2, 0, 1,
	1, 0, 2, 0, 7, 10, 6, 8, 6, 6,
	6, 9, 4, 3, 2, 2, 0, 1, 1, 1,
	1, 1, 3, 1, 3, 6, 4, 6, 7, 9,
	6, 2, 2, 3, 0, 8, 6, 8, 7, 2,
	0, 1, 2, 5, 0, 1, 3, 3, 1, 1,
	3, 3, 12, 3, 1, 1, 2, 1, 4, 0,
	3, 3, 0, 4, 6, 0, 5, 7, 6, 8,
	7, 9, 8, 2, 1, 3, 1, 3, 3, 3,
	0, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 1,
	3, 3, 3, 6, 4, 9, 7, 12, 9, 2,
	7, 2, 1, 1, 1, 3, 3, 0, 3, 1,
	3, 1, 1, 3, 2, 5, 0, 7, 5, 2,
	0, 1, 2, 3, 1, 1, 2, 2, 2, 2,
	1, 2, 3, 3, 4, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 4, 3, 6, 6, 6, 6, 6,
	8, 4, 4, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 6, 3, 8,
	5, 3, 12, 2, 0, 1, 0, 1, 1, 0,
	1, 3, 1, 3, 3, 3, 3, 2, 2, 1,
	1, 1, 1, 2, 1, 1, 1, 1, 0, 1,
	2, 2, 2, 1, 1, 1, 4, 5, 1, 1,
	1, 1, 3, 3, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 1, 2, 1, 1, 3, 0, 1,
	4, 0, 4, 3, 3, 4, 3, 4, 4, 4,
	7, 3, 3, 4, 3, 3, 3, 3, 3, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 1,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 10, 5, 1, 3, 3, 1,
	1, 0, 2, 0, 2, 0, 9, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 6, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 1, 1, 3,
	4, 6, 3, 3, 5, 3, 1, 3, 2, 2,
	2, 2, 1, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 4, 3,
	1, 2, 3, 2, 2, 2, 4, 6, 3, 1,
	2, 2, 7, 5, 7, 2, 3, 0, 3, 5,
	2, 3, 0, 2, 3, 2, 3, 2, 7, 4,
	7, 8, 8, 9, 11, 11, 6, 2, 6, 9,
	4, 7, 7, 10, 7, 10, 10, 10, 13, 5,
	5, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 2, 4, 3,
	2, 2, 1, 2, 1, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 4, 4, 3, 4, 1, 1, 1, 1,
	5, 4, 5, 3, 3, 2, 2, 6, 3, 3,
	3, 3, 4, 4, 3, 1, 3, 3, 2, 2,
	1, 3, 3, 3, 1, 2, 1, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 1, 1, 1, 2, 1, 2, 2, 2,
	9, 2, 1, 0, 1, 1, 0, 1, 2, 0,
	2, 2, 0, 2, 2, 2, 2, 1, 2, 3,
	3, 4, 4, 4, 4, 3, 3, 1, 1, 1,
	0, 1, 1, 1, 0, 1, 1, 3, 3, 3,
	3, 3, 2, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 3,
	5, 7, 3, 3, 3, 4, 8, 6, 4, 5,
	5, 5, 3, 0, 1, 1, 1, 4, 4, 3,
	4, 4, 3, 4, 4, 1, 4, 4, 5, 3,
	5, 5, 5, 7, 3, 3, 3, 5, 7, 4,
	2, 6, 4, 3, 2, 3, 4, 3, 5, 3,
	6, 5, 6, 3, 5, 6, 3, 5, 3, 5,
	3, 3, 4, 4, 5, 0, 1, 1, 1, 1,
	3, 2, 3, 4, 3, 4, 3, 5, 3, 4,
	4, 3, 4, 5, 3, 4, 3, 4, 4, 5,
	3, 3, 1, 1, 0, 2, 3, 5, 4, 6,
	4, 6, 4, 1, 0, 3, 4, 4, 5, 7,
	5, 3, 3, 3, 4, 4, 5, 2, 0, 4,
	2, 3, 4, 2, 3, 3, 3, 7, 5, 2,
	0, 3, 3, 4, 3, 3, 3, 5, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 3,
	4, 5, 4, 4, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 4, 3, 4, 4, 5, 1,
	1, 10, 10, 3, 5, 5, 5, 3, 5, 6,
	4, 4, 5, 5, 2, 6, 3, 2, 5, 4,
	2, 0, 1, 1, 1, 1, 2, 3, 2, 2,
	1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 2, 0, 1, 2, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 7, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 3, 3, 6, 5,
	8, 3, 6, 6, 3, 12, 15, 1, 0, 1,
	2, 3, 0, 2, 0, 4, 0, 4, 5, 4,
	1, 1, 1, 3, 3, 1, 3, 10, 13, 0,
	2, 3, 1, 1, 0, 1, 2, 2, 2, 2,
	1, 1, 0, 1, 3, 1, 1, 1, 2, 3,
	3, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 0, 1, 0, 1, 1, 0,
	1, 4, 1, 0, 3, 7, 7, 1, 1, 3,
	7, 1, 3, 11, 3, 2, 0, 3, 1, 2,
	2, 3, 2, 6, 2, 1, 2, 2, 3, 6,
	4, 2, 3, 5, 5, 5, 2, 5, 5, 2,
	2, 2, 0, 1, 1, 3, 4, 10, 11, 9,
	5, 3, 1, 5, 9, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 6, 1, 3, 1, 2,
	0, 1, 2, 3, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 3, 0, 4, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 2,
	3, 1, 4, 2, 3, 2, 2, 4, 7, 3,
	4, 6, 5, 7, 5, 5, 3, 3, 0, 2,
	2, 2, 2, 1, 1, 1, 8, 10, 11, 8,
	11, 5, 4, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 3, 0, 1, 8,
	11, 3, 6, 6, 5, 3, 4, 1, 0, 1,
	3, 16, 19, 15, 18, 4, 2, 0, 1, 0,
	1, 0, 1, 3, 2, 4, 2, 3, 1, 0,
	2, 0, 1, 1, 0, 9, 6, 6, 8, 6,
	8, 5, 7, 2, 6, 7, 4, 4, 5, 2,
	4, 6, 6, 8, 6, 7, 8, 9, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 6, 8, 8, 4, 7,
	3, 0, 7, 10, 1, 1, 1, 1, 2, 2,
	3, 0, 3, 0, 3, 0, 1, 0, 2, 0,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 3, 2, 2, 2, 2, 1,
	1, 0, 2, 4, 2, 1, 2, 1, 2, 3,
	2, 2, 2, 1, 0, 2, 1, 1, 0, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 2, 3,
	2, 2, 1, 2, 14, 16, 3, 1, 0, 4,
	1, 0, 2, 2, 3, 0, 1, 1, 4, 4,
	5, 1, 0, 3, 0, 3, 0, 3, 0, 3,
	0, 4, 0, 3, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 4, 8, 11, 7, 10, 2, 2, 0,
	10, 3, 2, 0, 1, 3, 1, 1, 3, 3,
	5, 6, 4, 5, 4, 1, 1, 3, 3, 1,
	2, 4, 4, 2, 3, 5, 5, 1, 3, 1,
	0, 1, 2, 3, 2, 4, 2, 3, 0, 2,
	0, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 8, 8, 8, 2, 4, 4, 4,
	2, 2, 2, 2, 3, 1, 3, 1, 2, 6,
	7, 1, 0, 1, 0, 1, 0, 1, 1, 0,
	1, 5, 1, 0, 1, 0, 1, 0, 3, 3,
	5, 1, 3, 3, 4, 5, 2, 2, 0, 2,
	2, 1, 1, 1, 0, 1, 0, 2, 2, 5,
	4, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 3, 1, 3, 3, 3, 2, 0,
	4, 2, 5, 3, 2, 0, 1, 3, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 1,
	3, 2, 4, 4, 0, 4, 4, 3, 4, 1,
	5, 3, 4, 5, 5, 1, 5, 1, 3, 2,
	0, 3, 0, 2, 3, 1, 3, 2, 0, 3,
	5, 6, 4, 6, 4, 3, 2, 1, 0, 5,
	1, 0, 2, 2, 2, 1, 1, 0, 1, 1,
	1, 1, 0, 4, 2, 1, 2, 2, 4, 1,
	3, 1, 2, 3, 2, 4, 1, 0, 1, 0,
	2, 1, 0, 2, 5, 7, 2, 1, 2, 4,
	3, 5, 0, 1, 3, 5, 1, 2, 1, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 6, 6, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 3, 0, 5, 4, 1, 2, 1,
	4, 1, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 2, 5, 1, 4, 2, 5, 1, 4, 3,
	3, 0, 1, 2, 4, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 1, 0,
	1, 4, 1, 3, 3, 3, 5, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 3, 3, 2, 2,
	3, 5, 4, 6, 3, 5, 4, 6, 4, 6,
	5, 7, 3, 3, 3, 3, 3, 4, 3, 2,
	4, 2, 3, 3, 4, 3, 4, 3, 4, 5,
	6, 6, 7, 6, 7, 6, 7, 3, 4, 4,
	1, 3, 1, 3, 3, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 5,
	6, 6, 7, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 6, 1, 1, 1, 1, 1, 1, 2,
	1, 5, 5, 6, 3, 1, 1, 1, 2, 2,
	2, 4, 3, 5, 6, 8, 6, 5, 4, 3,
	2, 2, 4, 1, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 6, 6,
	8, 8, 6, 4, 6, 6, 6, 4, 1, 3,
	3, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 3, 3, 3, 4,
	3, 4, 3, 4, 3, 4, 4, 3, 6, 5,
	5, 5, 4, 4, 3, 4, 3, 5, 0, 5,
	0, 2, 0, 1, 3, 3, 2, 2, 0, 6,
	1, 0, 3, 0, 3, 3, 3, 0, 1, 4,
	2, 2, 2, 2, 2, 3, 2, 2, 3, 0,
	4, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 7, 1,
	7, 5, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 0,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 655, -3, -205, -112, -109, -77, -75,
	-116, -117, -98, -118, -111, -140, -145, -126, -127, -128,
	-141, -147, -204, -212, -213, -214, -215, -224, -206, -207,
	-4, -62, -64, -78, -97, -99, -110, -120, -119, -121,
	-129, -137, -132, -115, -69, -142, -146, -158, -208, -209,
	-210, 33, 32, 106, 85, 164, 137, 146, 217, 415,
	467, 479, 432, 151, 455, 437, -152, -153, 499, -63,
	-76, -144, -143, 78, 138, 181, 319, 447, 53, 156,
	-7, -15, -32, -19, 30, 49, -65, -66, -67, -68,
	67, -84, -80, -92, -85, -79, -82, -685, 109, -606,
	-100, -103, -136, -688, 172, 238, -122, -123, -124, 397,
	-130, -131, 458, -133, -134, -135, 461, 173, -71, -70,
	166, -248, -250, -149, -148, -150, -211, -159, -160, -161,
	-162, -163, -165, -166, -168, -195, -169, -170, -171, -172,
	-173, -174, -178, -198, -175, -176, -177, -180, -179, -181,
	-186, -182, -183, -184, -185, -187, -188, -190, -191, -192,
	-193, -194, -196, -197, 505, -189, -199, -167, -200, 573,
	522, 87, 471, 21, -8, -9, -10, -11, -12, -13,
	-14, -18, -17, -61, -5, -6, -81, -83, -86, -87,
	-88, -96, -89, -90, -91, -605, -101, -102, -105, -107,
	-108, -104, -106, 456, 626, -251, -249, 652, 631, 589,
	-164, -22, -27, -23, -24, -26, -28, -25, -29, -30,
	-31, -47, -52, -49, -50, -48, -51, -53, -54, -55,
	-56, -57, -58, -59, -60, -34, -40, -41, -35, -36,
	-37, -38, -39, -42, -43, -44, -45, -46, -20, -21,
	-33, 613, 622, -254, -252, -253, -261, 491, 597, 545,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, -353, 2,
	-329, -335, -336, -337, -328, -298, -573, -578, 4, -570,
	-576, 180, 248, 357, 21, 22, 24, 23, 25, 26,
	27, 28, 30, 31, 41, 43, 44, 45, 47, 48,
	49, 50, 51, 52, 53, 57, 59, 63, 64, 65,
	66, 67, 68, 69, 73, 78, 79, 84, 85, 86,
	87, 88, 89, 90, 91, 97, 94, 95, 96, 98,
	100, 102, 103, 104, 105, 106, 107, 108, 110, 111,
	112, 114, 115, 116, 124, 125, 126, 127, 128, 130,
	137, 131, 138, 141, 135, 140, 136, 142, 144, 145,
	146, 149, 150, 151, 153, 154, 155, 157, 158, 159,
	161, 162, 164, 165, 166, 169, 167, 170, 168, 171,
	172, 173, 174, 175, 178, 186, 187, 188, 193, 195,
	196, 197, 199, 200, 203, 204, 205, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 218, 222, 224, 225,
	226, 227, 228, 229, 230, 236, 237, 238, 240, 241,
	242, 243, 244, 249, 250, 251, 255, 257, 263, 264,
	269, 265, 270, 271, 273, 277, 278, 279, 280, 281,
	282, 284, 286, 285, 290, 288, 292, 293, 296, 297,
	298, 299, 300, 301, 305, 306, 302, 307, 308, 310,
	311, 314, 312, 315, 316, 313, 317, 320, 321, 322,
	323, 324, 325, 326, 327, 328, 329, 330, 331, 318,
	319, 334, 332, 336, 337, 338, 339, 340, 355, 350,
	351, 352, 344, 345, 341, 346, 342, 343, 347, 348,
	354, 349, 359, 360, 361, 362, 365, 234, 256, 367,
	368, 371, 373, 390, 376, 377, 378, 381, 382, 385,
	388, 389, 391, 392, 393, 394, 395, 396, 397, 398,
	399, 400, 402, 403, 405, 406, 407, 409, 410, 411,
	413, 415, 416, 418, 419, 420, 422, 423, 424, 425,
	426, 427, 428, 429, 431, 432, 434, 433, 435, 437,
	439, 440, 441, 447, 448, 455, 449, 451, 452, 453,
	454, 456, 457, 458, 459, 460, 461, 465, 463, 464,
	466, 467, 469, 470, 471, 472, 473, 475, 477, 478,
	482, 483, 484, 502, 503, 525, 479, 480, 481, 485,
	486, 487, 488, 489, 490, 494, 492, 493, 495, 496,
	497, 499, 501, 504, 505, 507, 508, 509, 510, 511,
	512, 513, 516, 518, 519, 520, 521, 522, 523, 544,
	524, 526, 530, 531, 532, 533, 527, 528, 543, 535,
	536, 537, 538, 540, 541, 546, 547, 548, 549, 550,
	551, 553, 554, 556, 564, 577, 565, 566, 567, 568,
	570, 573, 574, 575, 576, 562, 578, 579, 582, 583,
	587, 584, 588, 585, 586, 589, 591, 594, 595, 596,
	602, 601, 603, 604, 605, 607, 608, 609, 614, 615,
	617, 618, 619, 37, 54, 55, 58, 60, 62, 74,
	75, 76, 80, 132, 133, 163, 176, 177, 189, 206,
	207, 219, 221, 231, 232, 233, 254, 258, 259, 261,
	267, 289, 364, 366, 383, 387, 404, 408, 412, 414,
	430, 474, 500, 514, 529, 534, 557, 558, 559, 560,
	569, 571, 597, 598, 599, 606, 616, -353, 2, -329,
	374, -322, 2, -298, -298, 415, 29, 2, 29, 403,
	493, 548, 550, 2, -635, -398, 541, 2, 29, -301,
	-298, 109, 217, 491, -322, 2, -635, 217, -398, 26,
	541, 2, -298, 2, 388, 23, 28, 71, 82, 104,
	149, 174, 198, 203, -687, 390, 423, 477, 495, 543,
	554, 570, 2, 601, 311, 492, 545, 248, 127, 575,
	485, -646, 482, 483, 388, 421, 469, 220, 590, -302,
	2, 479, -298, 311, 2, 655, 100, 79, 474, 496,
	-155, 2, 301, 565, -156, -157, -154, 557, -557, 485,
	469, 334, -298, 655, 655, 655, 29, -311, 2, -298,
	-311, 2, -216, 2, -311, -690, -223, -222, -221, 22,
	448, 188, 282, 201, 239, 339, 418, 199, 51, -216,
	2, 545, 248, 485, 127, 541, -701, 2, 565, -701,
	2, 655, 655, 2, 545, 394, 601, 492, 127, 427,
	248, 575, 203, 149, 28, 73, 49, 551, 630, 485,
	-646, 627, 628, 311, 134, -628, 2, -627, 4, -576,
	-570, -347, -346, 545, 551, 127, -337, -328, 644, -336,
	655, 655, 655, 655, 2, 270, 271, 425, 424, 496,
	497, 29, 655, 655, 655, 655, 482, 2, 174, -660,
	23, 28, 71, 99, 104, 134, 198, 390, 423, 495,
	543, 547, 554, 570, -645, 524, 73, 485, -644, -646,
	379, 311, 575, 149, -448, 127, 301, 215, 583, 550,
	548, 581, 141, 257, 586, 585, 655, 655, -113, 2,
	652, 33, 32, -112, -116, 151, 499, -241, 545, 262,
	2, -298, 655, 655, 655, 2, 270, 271, 482, 483,
	29, 655, 655, 201, -627, 541, 2, 655, 655, 655,
	2, 29, 270, 271, 482, 483, 262, 2, 73, 487,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 2, -202, 496,
	524, 227, 50, 49, 79, 29, 422, 84, 395, 128,
	134, 158, 576, 218, 248, 249, 278, 99, 100, -450,
	47, 271, 73, 270, 483, -651, 482, -503, 546, 486,
	493, 540, 91, 282, 479, 565, 567, 109, 591, 470,
	619, 427, 428, 538, 441, 535, 302, 167, 202, 4,
	127, 334, 469, 498, 286, 285, 577, 557, 301, 478,
	398, 89, 655, -699, 2, 545, 565, 2, -701, 2,
	-701, 2, -702, 565, 616, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, -249, -251, -250, 655, 655,
	655, 655, 655, 655, 655, -202, 496, 2, 79, 29,
	29, -391, -393, 580, 260, 160, 380, -248, -250, 2,
	-605, 577, 496, -555, 2, -477, -579, -479, 642, 643,
	635, 542, 72, -357, 356, 620, -491, 134, 581, 374,
	-578, -480, -493, 163, 390, 474, -412, 8, 9, 5,
	6, 7, -307, -481, -487, 572, 179, 363, -350, 656,
	10, 652, -602, -250, -492, 38, 221, 70, -559, -349,
	-308, -531, 261, -348, -328, -599, -600, 4, -570, -571,
	-560, -534, -542, -538, -539, -545, -298, -573, 82, 118,
	119, 117, 122, 121, 304, 303, 123, 120, 498, 590,
	71, 37, 231, 232, 267, 364, 233, 80, -601, 150,
	-572, 258, 259, 514, 55, 430, 189, 133, 132, 366,
	60, 58, 598, -543, 129, 557, 558, 559, 560, 206,
	207, 62, 176, 177, 387, 412, 534, 569, 571, 219,
	289, 46, 113, 202, 253, 235, 266, 268, 272, 291,
	294, 335, 353, 358, 384, 386, 468, 506, -705, 599,
	529, 74, 75, 194, -607, 433, -608, -322, -607, 655,
	655, 657, 655, -382, -384, -386, 2, 29, 147, 652,
	2, -508, 2, -509, -513, -250, 283, -512, 652, -510,
	650, -329, 375, -603, 475, -599, -600, -307, -328, -349,
	4, -570, -572, 654, -387, 652, 127, 485, 545, 83,
	248, 99, 174, 203, -443, 652, -298, 29, 374, 561,
	657, -635, -398, -383, 420, -489, 652, 374, 377, 201,
	377, -635, 64, 315, 2, 2, 2, 2, 2, 231,
	-298, 545, 126, 2, 281, 2, 2, 2, 2, 2,
	2, 2, -405, 231, 2, -329, 601, -405, 231, 2,
	-405, 231, 2, -449, 2, 93, -312, 231, 2, -298,
	-338, 231, 2, -333, -335, -344, 231, 2, -341, -298,
	-565, 231, 2, -563, 4, -570, 123, 498, -477, 2,
	-142, 2, 64, -298, 601, 2, 502, 2, 652, -155,
	2, 76, 565, 46, 496, -156, 2, -463, 2, -464,
	-294, -295, -296, -520, -297, 269, 419, 429, 623, 139,
	356, 619, -680, 201, 634, 561, -555, -555, -555, -413,
	654, -218, 57, -311, -691, -690, -691, -553, 29, -548,
	8, -549, 642, 643, -553, -553, -691, -691, 2, 2,
	2, 2, 2, -462, -463, 2, -513, 231, -329, 2,
	-326, -558, 4, -570, -576, -571, -577, -573, 29, 32,
	33, 34, 36, 38, 39, 40, 42, 61, 70, 71,
	77, 81, 83, 93, 99, 109, 117, 118, 120, 119,
	121, 122, 123, 134, 139, 143, 147, 148, 152, 156,
	160, 179, 181, 194, 198, 201, 217, 220, 223, 239,
	252, 260, 262, 283, 287, 295, 303, 304, 356, 363,
	369, 374, 375, 379, 380, 401, 417, 436, 462, 491,
	498, 517, 539, 545, 555, 561, 563, 572, 580, 581,
	590, 592, 600, 610, 611, 612, 613, -578, 82, 2,
	-513, 231, 2, -332, 231, -513, -335, 2, -312, 2,
	-477, -639, 553, 170, 449, 2, -354, 231, -329, -331,
	-335, -333, 2, 2, 2, 2, -477, 2, -567, 2,
	-562, 10, -561, 5, 4, -570, -576, -571, -480, 2,
	-491, 29, -341, 2, -563, 231, 2, 29, 29, 601,
	420, 262, 561, 657, -404, -346, -347, -554, 4, 8,
	-397, -298, 654, -477, 2, -142, -125, 2, 194, -477,
	231, 2, -142, 231, 2, -477, 231, 2, -142, 231,
	2, -298, 2, -647, 2, -567, 231, 231, -298, 2,
	203, -686, 477, 574, 315, 2, 2, 570, 2, 104,
	545, 126, 2, 2, 2, 2, 2, 2, 2, 545,
	-317, 2, -298, 194, -522, 262, -341, 231, -342, 2,
	492, -700, 433, -563, 231, 2, 453, 601, -333, 231,
	2, -333, 248, 264, -312, 231, 2, 550, 548, 550,
	548, 201, 2, 262, 2, 262, 2, -514, 2, -515,
	-509, -516, 650, 375, -525, 2, -524, -561, 597, -113,
	652, -113, 652, 496, 652, -567, -329, -329, -477, 2,
	-142, -125, 2, -477, 2, -142, 2, -298, 2, -139,
	-567, -138, 652, 201, 591, -298, 2, -477, 2, -142,
	-125, 2, -477, 2, -142, 2, -241, 194, 2, 127,
	545, -202, 2, 194, 592, 2, 8, 2, 239, -237,
	-567, 486, 186, 428, 2, 502, 2, 503, 79, -450,
	619, 79, 201, 2, 201, 2, -433, 2, 613, 420,
	201, 2, 2, -633, 2, 374, 201, 2, 201, 2,
	201, 2, 201, 2, 201, 2, -201, 497, 566, 544,
	424, 271, 2, -142, 610, -125, 271, 270, -477, 610,
	2, -652, 194, 483, -477, 2, 564, 280, 168, 201,
	-433, 2, 201, 2, 201, 2, 5, 2, 43, 425,
	525, 2, 269, 419, 525, 2, 523, 2, -329, 545,
	601, 492, 127, 203, 29, 2, 482, 2, 2, 94,
	95, 201, 2, 201, 2, 216, 201, 2, 441, 201,
	545, -414, 654, -414, 619, 2, -425, -513, -462, 561,
	-391, -393, -202, 502, 2, -255, -423, -257, 194, -453,
	-454, -258, 295, 181, 369, -259, -432, 29, 147, -432,
	-432, 64, 653, 653, -680, 577, 11, 12, 81, 43,
	642, 643, 644, 645, 192, 646, 647, 640, 641, 639,
	632, 633, 637, 275, 276, 101, 636, 634, 92, 309,
	476, 182, 183, 184, 185, 450, 246, 35, 247, 14,
	15, 16, -357, 34, 379, 294, 620, 235, 506, 635,
	17, 18, 19, 266, 268, 358, 54, 239, -306, 390,
	-356, 542, 72, -477, -477, -477, -477, -477, -477, -477,
	-477, 386, 652, -419, -472, 650, -250, 652, 652, 652,
	652, -554, -250, -477, -491, 653, -410, 652, -250, -491,
	-486, 652, 474, 650, 652, -494, -477, 5, 5, 5,
	652, 654, -610, 614, 194, 652, 652, 652, 652, 652,
	652, 652, 652, 652, 652, 652, 652, 652, 652, 652,
	652, 414, -536, 652, -535, 652, -535, -535, 602, -533,
	652, 622, 615, 652, -533, 652, 652, 652, 652, 652,
	652, 652, 652, 652, 652, 652, 652, 652, 602, 551,
	657, -607, -387, 652, -415, -518, -477, 644, -415, -415,
	374, -407, -477, 113, -436, 272, 335, 202, 291, 468,
	253, -474, 656, -474, -502, 622, -250, -510, -328, -250,
	-512, 652, -508, -502, -114, -554, -97, -110, -119, -142,
	-158, -209, -210, 644, -329, 652, 201, 652, 654, -558,
	201, -397, -312, -341, -329, -348, -349, -354, -323, -298,
	2, 2, 146, -407, -629, 575, 485, 29, 4, -576,
	-570, -347, 492, -346, 545, 127, -565, -301, 561, 39,
	-488, -528, -529, -581, 656, -580, -531, -541, -537, -540,
	404, 408, -560, 58, 598, -543, 261, 4, -570, -572,
	258, 259, 514, 55, 430, 189, 133, 132, 366, 60,
	557, 558, 559, 560, 206, 207, 62, 599, 529, 74,
	75, -629, 575, 485, 29, 492, 194, -565, 194, 201,
	-565, 2, 2, 163, 2, 2, 2, -298, -276, 657,
	69, 459, 163, -405, 231, -276, 163, -276, 163, -355,
	231, -354, -276, 163, -276, 657, 163, -276, 657, 163,
	654, 657, 163, -565, 2, -449, -557, -407, 39, -463,
	2, 134, 4, 5, -703, 657, 293, -360, 308, 355,
	226, 375, 617, 367, 139, -566, 5, 4, -487, -499,
	134, 301, 261, -548, -550, 9, -551, 642, 643, -556,
	-555, 116, 654, -558, -219, 256, 41, -311, -311, -691,
	-691, 8, 8, -691, -691, -311, -311, -273, 451, 499,
	389, -272, 25, 30, 151, 250, 340, 595, 169, -372,
	251, 456, -369, 394, 163, 518, 584, -639, -642, 481,
	553, 170, 449, 96, 367, 499, 389, 451, 163, -429,
	-431, 39, 125, 340, 388, 65, 242, 313, 314, 522,
	457, 606, 163, 499, 389, 451, 389, -16, -287, 25,
	151, -289, -284, 499, 30, -642, 105, 451, 631, 626,
	456, 400, 537, 417, -642, -639, 288, -641, 609, 354,
	-275, 518, 584, -639, -642, 481, 451, -274, -374, -369,
	394, 163, 656, 25, 151, 451, 499, 389, -683, -684,
	30, -268, -267, 25, 151, 499, 587, -271, 239, -270,
	25, -151, -131, -150, 456, 499, -151, 2, 451, 389,
	-636, -319, -604, 239, 613, 163, -319, -319, -513, 231,
	-656, 194, 2, -649, -138, 284, 5, 10, -567, -138,
	-404, 657, 657, -558, 644, 483, 482, 163, 163, 163,
	163, 271, 194, 356, 356, 613, -675, -335, -687, 2,
	2, 2, 2, 2, 2, 2, -329, 231, -389, 374,
	-625, -626, -689, 545, -228, 613, -567, 356, 46, -332,
	231, 2, -335, 601, -636, 356, -644, -334, 231, -329,
	39, 652, 356, 2, -449, 2, 248, -604, 356, -514,
	-351, -329, -509, -351, 499, -322, 39, -474, -329, 653,
	657, -525, -525, -567, -228, 201, 652, -241, 613, 613,
	271, -521, 657, -520, 239, -568, -567, -139, -567, 454,
	201, 271, -567, -625, -312, 2, -329, 2, 545, 273,
	-138, 201, 239, -228, -567, -567, -567, -557, 29, 503,
	2, -201, 497, 566, 95, 503, 2, -329, 545, 127,
	248, 85, -656, 194, 2, -298, -634, 194, -630, 469,
	485, 575, -629, -329, 127, -329, 127, -329, 127, -329,
	-329, 2, 2, 2, 2, 2, 90, 2, -142, -477,
	2, 90, 2, 49, 519, -652, 194, 2, 564, 2,
	564, 2, -298, -298, -298, 369, 524, 293, 613, -329,
	-329, -329, -330, -335, -335, 486, 546, 576, 483, -477,
	2, -692, 2, 201, 194, 2, 545, 248, 545, 248,
	127, 201, 79, 127, 29, 201, 545, 480, 654, 4,
	-276, 657, -302, -255, -423, -557, -424, -423, -256, -255,
	-258, 194, 429, 585, 340, 504, 277, -454, -453, 29,
	-477, -458, 188, 339, -477, -456, -479, 642, 643, -549,
	-551, -406, 367, -249, -249, -249, -394, -504, -477, 417,
	248, -556, -680, -530, -528, -528, -327, -558, 557, -477,
	-477, -477, -477, -477, -477, -477, -477, -477, -477, -477,
	-477, -477, -477, -477, -477, -477, -477, -477, -477, -477,
	-477, -477, -477, -477, -477, -477, -477, -477, -477, -477,
	-477, -477, -477, -477, -477, 294, 235, 506, 54, 239,
	-477, 561, -477, -477, -477, -477, 332, 356, 363, 572,
	179, 582, 147, 367, -706, 539, 42, -484, -250, -411,
	652, -498, 36, 517, 29, -491, 652, 2, -472, -477,
	-473, -358, -356, -298, 642, 643, 644, 645, 646, 647,
	632, 633, 634, 14, 15, 16, 637, 641, 639, 640,
	192, 101, 636, 309, 476, 92, 182, 183, 184, 185,
	275, 276, 17, 18, 19, 35, 635, -408, -407, -407,
	653, 600, 29, 147, 644, 2, 653, 657, 39, 653,
	-477, -408, -490, -486, -407, -497, -496, 610, -444, -445,
	618, 318, 130, 229, 316, -446, 489, -552, 8, -558,
	644, -611, 187, 220, 652, 653, 2, 653, 2, 653,
	-477, 2, 653, -477, 2, 653, -477, 2, 653, -477,
	2, 653, 2, 653, 2, -477, -477, -477, -477, -477,
	-477, -477, -407, 8, -552, -552, 557, 557, -552, -552,
	-552, -544, 404, 405, 406, 407, 296, 297, 298, 299,
	408, 409, 410, 411, 324, 325, 326, 327, 320, 321,
	322, 323, 328, 329, 330, 331, 211, 212, 213, 214,
	207, 208, 209, 210, -544, -438, 2, -546, -407, 4,
	618, 318, 130, 229, 316, 489, 5, -438, 2, -439,
	2, -477, -407, -440, -478, -479, 642, 643, 635, -357,
	-441, 2, -477, -408, -477, 61, 287, 563, -442, -477,
	201, -407, -407, 2, -407, 2, -480, 2, -608, 39,
	-407, -400, 657, 201, 39, -575, 4, -574, 44, 66,
	107, 136, 175, 237, 255, 265, 290, 391, 463, 464,
	490, 521, 536, 568, 608, 500, -400, -400, 652, 653,
	657, -437, 224, 312, 307, 264, -437, -508, -436, 272,
	-434, 384, -434, -434, -502, -313, 650, 659, -558, -502,
	-501, -500, 39, -322, 381, -502, -502, 654, 653, -501,
	651, -623, 652, 655, 655, 655, 655, 655, -329, 652,
	-407, -558, 654, 526, 2, 653, 266, 266, 266, 266,
	266, 374, 475, 653, 561, -631, -338, -344, 493, 546,
	-404, 657, -404, -397, 613, -565, -112, 376, 653, 657,
	-399, 38, 650, 654, -552, 2, 2, -547, 602, 652,
	652, -445, 652, 201, -631, -344, 546, 493, 2, -635,
	-398, -565, 561, -298, 2, -329, -405, -276, 163, -405,
	-405, -276, 657, 163, -312, -333, -338, -341, -344, -298,
	-563, -565, -276, -334, -680, 653, 565, -464, -359, 429,
	516, 452, 494, 541, 9, 9, 657, -558, -220, 484,
	340, -311, -311, -311, -311, 657, -681, 99, 561, 83,
	652, 485, -291, 302, 561, -468, 231, 83, -582, 99,
	-315, -583, -298, 77, 581, 417, 198, 161, -681, 99,
	417, -681, 99, 2, 250, 99, 499, 524, 652, 29,
	64, -513, 43, 43, 29, -640, -641, 288, 201, 619,
	545, 248, 485, 561, 561, -513, -431, -528, 125, 313,
	314, 64, -553, -553, 64, -553, -553, -553, 613, -553,
	613, -332, -513, 485, 561, 561, 561, 439, 535, 439,
	535, -284, -156, 535, 561, 561, -156, 29, -202, 460,
	134, -704, 634, 439, 288, -641, 561, 201, 657, 43,
	43, 29, -640, 201, 561, -354, -313, 596, 45, 596,
	45, 596, 561, 45, 485, 561, 657, 45, -267, -625,
	-625, -227, -226, -298, 5, -397, -270, -567, -269, 338,
	79, 561, 561, -16, 499, -637, -303, 112, 346, 306,
	347, 103, 343, 102, 342, 110, 344, 111, 345, 603,
	359, 604, 360, 68, 341, 317, 348, 520, 349, 605,
	361, -304, -305, 154, 396, 594, 127, -563, -16, -16,
	499, 389, 451, 163, -657, 239, 29, -646, 239, -521,
	239, -521, -346, -298, 654, -142, -477, -477, -142, -477,
	-142, 49, 163, 163, 2, 652, 281, 652, -363, 356,
	201, -397, -522, 657, -329, 39, -227, 378, 163, -563,
	-430, -429, 356, -334, 231, 2, 163, -700, -387, 356,
	157, 652, 427, 2, 163, -314, 231, -299, -298, -449,
	-278, 549, 163, -427, 592, -459, -142, 652, 134, 39,
	-459, -416, -417, -519, -418, -315, 652, -322, -474, -113,
	-524, 653, 653, 653, -241, -388, -316, -315, 126, 431,
	431, -234, 613, -138, -139, 653, 657, -521, 239, 527,
	-139, -567, -228, -228, -521, -521, -329, 194, -567, -138,
	-228, -228, -228, 2, 2, 2, 2, -433, -329, -312,
	-354, -329, -340, 239, 29, 654, -565, -565, -344, -345,
	-343, -298, -338, -433, -312, -433, -312, -433, -312, -433,
	-433, -142, -477, 524, 2, 496, 194, 194, 654, -433,
	8, -390, 462, 5, 2, 427, 127, 545, 394, 248,
	-329, -354, -329, -354, -312, 127, -312, 128, 127, -329,
	4, -513, -424, -256, 375, 277, 504, -456, -457, -479,
	474, 475, -457, 474, 475, 8, 9, 8, 9, -260,
	508, 362, -405, 657, -265, 40, 143, 277, -329, -556,
	619, 159, -477, -477, 561, -706, 539, -484, 159, -477,
	332, 363, 572, 179, 582, 147, 367, 201, 652, -478,
	-478, 653, -409, -477, -477, 651, 661, 653, 654, 653,
	-393, 657, -391, -477, -407, -407, 653, 654, -407, -397,
	651, 651, 657, 653, -495, -496, 152, -477, 561, 561,
	561, 561, 652, 653, 654, -616, 385, 652, 652, -477,
	653, 653, 653, 653, 39, 657, 657, 657, 653, 657,
	657, 657, 653, 653, 653, 657, 653, 619, 619, 653,
	653, 653, 653, 657, 653, 657, 653, 201, 653, 653,
	-447, 401, 653, 11, 12, 642, 643, 644, 645, 192,
	646, 647, 640, 641, 639, 632, 633, 634, 92, 309,
	476, 14, 15, 16, -357, 266, 239, -478, -478, -478,
	-478, 653, -482, -483, 201, 194, 39, -442, -442, -442,
	653, 201, -407, 653, 653, 652, -609, 311, 356, 653,
	-471, -470, 611, -518, -401, 2, -508, -324, -558, -471,
	-471, -407, -477, 272, 272, -435, 592, 374, -437, -508,
	-501, -554, -476, -475, 196, 40, 143, 350, 351, 352,
	234, 197, -501, -322, -387, -501, -501, -558, -502, -502,
	-500, 653, -624, -554, 653, -402, -511, -603, -393, 654,
	-558, -238, -604, -203, 5, 363, -203, -203, -203, -203,
	-329, -565, 561, 561, 239, 239, -404, 26, -655, 613,
	402, -528, 650, 651, 8, -558, 652, -552, -552, -552,
	-565, 201, 201, 239, 239, 374, 201, -563, 2, -276,
	-405, -276, -276, -354, -355, -276, -276, -276, -428, 613,
	-555, -463, 579, 88, 429, 557, -555, 124, 484, -272,
	451, 499, -315, -315, -329, -245, -244, -242, -298, 5,
	-339, -298, 215, 440, -563, 356, -468, 231, -277, 356,
	231, -323, -528, 652, -451, 615, 277, 277, 592, -315,
	-323, 277, 231, -315, 231, -323, 2, -323, -638, 429,
	368, -477, -243, -242, 64, -370, 300, 427, 357, -273,
	451, 499, 389, -142, -142, -142, 652, -680, 592, 146,
	-329, -354, -329, -339, -563, -334, 499, 389, 451, 353,
	-348, -553, -553, -553, -429, 499, 389, 451, -339, -563,
	-332, -563, -283, 231, -298, 439, -283, 231, 439, 439,
	485, -312, 439, 619, 48, -704, 561, 201, -477, -477,
	-274, -142, -142, -142, 652, -313, -275, 451, 5, 231,
	-315, 5, -315, 231, 5, -298, -315, -339, -563, -684,
	25, 151, -315, -228, 657, 634, 634, -271, 634, -339,
	-563, -303, 396, -649, 363, 5, 10, 588, -312, -636,
	-319, 485, 561, 561, -513, -653, -654, 217, 467, 485,
	470, -565, -138, -231, 613, -138, -225, 243, 644, -628,
	-567, -298, -664, -665, -666, -667, -674, -662, -669, 239,
	383, 254, 600, -559, -528, 4, -570, -298, -361, -364,
	-362, -315, -469, -468, -586, -587, -582, 294, 248, 581,
	264, 180, 99, -246, -247, 615, 613, 163, -352, -329,
	650, -228, -626, -523, 180, 491, 652, -341, -342, 163,
	-387, 356, -563, 601, 39, 163, 652, 2, 2, -333,
	374, 356, -314, 231, -279, 153, -704, -312, -471, -401,
	-426, -461, 462, 374, -388, 597, -322, -426, -403, 657,
	201, 634, 654, -388, -517, 644, -113, -113, -228, 652,
	-567, 653, 657, 654, 652, 634, 634, -236, 378, -235,
	155, 279, 263, 510, 511, 512, 513, 145, 509, 131,
	337, 244, 551, -521, -567, -234, -139, 201, -521, 239,
	201, -72, 613, 545, 239, -228, 656, 485, 470, -298,
	654, -433, -433, -433, 496, 496, -298, 194, -397, -325,
	-558, -312, -329, -326, -354, 194, 194, -312, -312, 585,
	-457, 375, 305, -504, -266, 621, -329, 656, -477, -477,
	159, 159, -477, -478, -478, -477, 159, 201, 652, -477,
	-488, 34, 34, 653, 657, -473, -477, -356, 653, 600,
	-393, -393, 653, 644, -558, 656, 653, -486, 156, -477,
	555, 318, 229, 316, -446, 316, -446, -446, -552, 5,
	-558, 644, -617, -318, 652, -298, 611, -392, 380, 653,
	-530, -528, -477, -477, -477, -477, -477, -552, -533, -533,
	-548, -548, -477, -482, -477, -530, -528, -478, -478, -478,
	-478, -478, -478, -478, -478, -478, -478, -478, -478, -478,
	-478, -478, -478, -478, -478, -478, -478, 147, 356, 367,
	-478, -483, -482, -477, -477, -528, 653, 653, 653, -407,
	-112, 652, 311, -420, 220, -477, -521, 657, -420, -420,
	653, -508, -508, 652, -477, 272, 651, 657, 660, 634,
	634, -387, 654, -500, -501, 651, 653, 657, 653, 657,
	-460, 39, 653, -558, -471, -240, -239, 144, 57, 114,
	142, 363, 371, 200, 225, 426, 159, 195, 153, 266,
	-655, -565, -565, 485, 485, 377, 217, 5, 8, 650,
	651, 654, -552, 653, 653, 653, -565, -565, 485, 485,
	-629, 575, 485, 29, -565, -276, -276, 126, 340, -477,
	-217, 613, 615, 561, 561, 653, 657, 634, 64, 239,
	163, 356, 594, 356, -583, 161, -588, -477, 652, 248,
	652, 652, 2, -262, -263, -264, 151, 499, 25, -682,
	2, 592, 163, -276, 163, -276, 617, 653, 657, -370,
	652, 652, 561, 485, -291, 561, 613, -407, -477, -229,
	134, -557, -642, 656, -642, 656, 485, 561, 561, 485,
	561, 561, 356, -298, 163, -298, -298, 613, 178, 178,
	619, -283, -477, -477, 194, 561, 613, -407, 561, -532,
	52, 27, 356, -333, -276, 163, 561, 561, 575, 499,
	-226, -567, -567, -138, -649, -567, 363, -16, -339, -563,
	-334, 499, 389, 451, -635, -635, 217, -344, -657, -521,
	-233, 378, -232, 155, 466, 145, 279, 244, -521, -231,
	201, 262, 613, 653, 657, 134, 634, -662, -669, -674,
	-669, 383, 2, 653, 653, 657, 657, -589, -277, -329,
	-314, 248, 248, -321, -299, 39, 371, 371, 652, -329,
	-93, 613, -520, -554, -320, -298, -415, -227, 46, -332,
	39, 163, -636, -334, -142, -334, -526, -527, 5, 39,
	-329, 163, 374, 356, -280, 286, -704, -562, -604, -393,
	-426, -415, 357, 97, 653, -471, -417, -401, -477, 2,
	653, -567, -228, -241, -316, 2, -568, -567, -567, 657,
	652, 634, 634, 634, 634, 634, 634, 634, -234, -521,
	-138, -234, -139, -142, 378, -329, -138, 644, -339, -340,
	644, -433, 5, -376, -375, 394, 367, -376, 474, 474,
	375, 188, 282, -265, -313, -477, -477, 159, 34, 34,
	-477, -477, -488, 653, -477, -477, -407, 651, 5, -477,
	653, 653, 8, -477, 653, 654, -618, -298, -477, 653,
	64, 653, 653, 657, 657, 653, 653, 653, 653, 653,
	653, 653, -483, 201, 147, 367, 652, 653, 653, -112,
	-485, 223, 64, -508, -485, -485, -435, -397, -508, -475,
	-313, 650, -313, 650, -558, -554, -511, 652, 654, -239,
	634, -567, -567, 2, 2, 5, 5, 426, 356, 363,
	5, -203, -655, -655, 613, -344, -344, 377, 651, 2,
	650, -558, 653, -344, -344, 201, -631, -344, 546, 126,
	194, 228, 228, -315, -315, -244, -555, 545, 474, -283,
	417, -468, 163, 163, -590, 99, -592, 81, 180, 109,
	356, 363, 581, 417, 77, 134, 374, 436, -694, -695,
	-696, 39, 624, 625, 653, -395, -505, -603, 652, -298,
	-395, -397, 356, 532, 134, 374, 356, 134, 374, 607,
	126, 2, 575, 84, -315, -323, -242, -397, -397, -329,
	-339, -563, 171, 653, 657, 634, 2, 644, 644, -339,
	-563, -334, -339, -563, -332, 163, 597, -283, 597, 392,
	178, 561, -142, -477, 171, 653, -313, 5, 5, 163,
	-310, 81, -315, 5, -315, -333, 126, 613, 485, 561,
	561, 374, 374, 377, -653, -654, -231, 657, 652, 634,
	634, 634, -231, -568, -138, 2, 464, -666, -477, -477,
	-669, -669, -377, 250, -315, -587, -584, -585, 417, -469,
	-591, -593, 180, 417, -365, 652, -314, -299, 652, -142,
	2, -245, 652, -363, 378, 651, 201, 653, -563, -430,
	-142, -334, -387, -385, 613, -387, 653, 657, 157, -452,
	592, -313, -329, 163, -281, 285, -704, -562, -278, -455,
	-453, 148, 652, 374, -142, -393, 634, 653, 126, 653,
	-235, -236, -567, -138, -567, -567, -567, -138, -567, -234,
	-659, 39, -521, -73, -74, 248, 99, 399, -228, -326,
	545, 248, 652, 652, -265, -477, -477, -477, 653, -393,
	-558, 644, -612, 394, 653, -504, -477, -477, -478, 201,
	652, -488, 653, -613, 612, -477, -421, -422, -477, 472,
	115, 221, -613, -613, 653, -554, -554, 2, -567, 2,
	2, 363, 2, 2, 2, 561, 561, 650, 2, 201,
	201, -565, 201, 201, 239, -142, 239, 39, 439, -468,
	-323, -323, -327, -320, 180, 231, 363, 607, -451, 277,
	652, -478, 585, -329, 652, 2, 230, 230, 31, 64,
	-697, 139, 252, 653, 657, -506, -309, -298, -477, -506,
	653, 653, 363, 585, 363, 607, -477, 585, -528, 652,
	-276, -276, 653, 653, -477, 561, -557, 106, -555, 2,
	-642, -283, -397, -397, -312, -477, 194, -477, 561, 5,
	-276, -327, -276, -276, -310, 575, 373, -339, -563, -334,
	-658, 546, 493, 576, 486, 204, 473, -658, 194, -232,
	-233, -567, -138, -138, -231, -661, 500, -371, -372, 2,
	-589, 277, -320, 277, 241, 162, -395, 652, 652, -397,
	-693, 613, 653, -361, -246, -94, -95, 562, -520, -632,
	-351, -387, 39, 340, 126, 39, 5, 652, 652, -298,
	374, 652, -313, -293, 98, -704, -562, -279, -426, 357,
	-397, 99, -455, -484, -228, 652, -228, 653, 551, -234,
	657, 29, 652, 29, 652, -329, -354, -407, -407, 653,
	-393, 64, 657, 653, 653, -478, -488, 653, -614, -615,
	-318, 657, 652, 652, 501, 651, 651, 2, -565, -565,
	2, -565, -565, -565, -565, 485, -283, 417, -298, -583,
	-592, -320, 356, -247, 592, 613, -477, -478, -300, 652,
	-477, 652, 652, 39, 134, 252, 140, 236, -467, -698,
	108, 533, 240, -505, -265, 653, -466, 592, 436, -478,
	-310, -395, 652, 652, 652, 634, 201, -142, 652, -532,
	-276, -333, 634, 561, 2, 2, 201, -635, 653, -648,
	434, -668, -669, -246, 652, -247, -366, 86, 100, 135,
	230, 205, 249, 524, 530, 29, -366, 653, -395, -395,
	653, -367, 374, 126, 340, 653, 39, -95, 9, -471,
	39, -142, 126, -142, -526, -395, -329, -395, 374, -285,
	-284, 295, -562, -280, 653, -323, -426, -568, -554, 4,
	-74, -397, -397, 653, 653, -619, 427, 475, 222, -407,
	-394, 653, 657, 39, -422, 2, 2, 2, -655, -655,
	-344, 439, -277, 163, 224, 653, -594, 310, -298, 653,
	-430, -430, 39, 140, 236, -373, -369, 652, -266, -506,
	-247, 224, -329, -643, 592, 653, -379, -378, -375, -381,
	-380, -375, -407, -555, 106, 392, -407, -310, -138, -565,
	-565, 374, -650, 202, -649, -670, -671, -672, 39, 281,
	568, 612, -673, 66, 464, 528, 237, 521, 608, 175,
	490, 290, 356, 107, 475, 536, 499, 391, -367, -396,
	-507, -315, -466, 653, 653, 87, 126, -377, -142, -142,
	2, -385, 653, 653, -452, 653, -329, -282, -569, 439,
	441, -704, -281, -471, 148, 653, 653, 653, 653, -620,
	-621, 54, 578, 116, -477, -620, -620, -615, -617, 201,
	180, -465, 622, -595, -598, -597, 629, 507, 202, 393,
	653, 532, 606, 653, 653, -697, -397, -465, -387, -477,
	-466, 653, 657, 597, 653, 657, 597, 653, 201, 653,
	-276, -655, -276, -658, -230, 613, 49, -679, -676, 53,
	463, -672, -663, 5, -562, 374, 363, 490, 136, 265,
	290, -499, -499, -298, -292, -291, 653, 657, -467, -466,
	-373, 416, 141, 151, -371, -693, -466, 652, -467, 652,
	-290, -289, -704, -548, -293, 148, 357, 585, -228, -622,
	161, -621, 413, 193, 474, 413, 193, -622, -622, -565,
	-320, -247, 59, -597, 629, -598, 629, 585, 141, -471,
	653, -594, -247, -378, 239, -380, 201, 392, 201, 482,
	-649, 31, 44, -477, 363, 374, 136, 265, -247, -507,
	-373, -467, -247, 475, 475, 2, -246, -367, -467, -395,
	-373, -395, -286, -287, -288, -397, -285, 357, 585, 499,
	116, 220, 556, 340, 34, 634, -596, 340, 459, 69,
	499, -596, -595, 652, 652, -565, 378, -678, 255, 363,
	-247, -373, -471, 2, -367, -373, 653, -247, 653, -564,
	389, -282, 499, -416, 474, 382, -621, -477, 24, 363,
	134, -697, -407, -407, -276, -227, 652, -677, 156, -3,
	-676, 255, -471, -247, -292, -247, -466, -471, -467, -704,
	-290, -416, -471, 653, 653, -227, 658, -471, -471, -467,
	-373, -563, -286, -471, -368, -369, 561, 653, -373, -247,
	652, -247, -471, -407, -471, 653, -368,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 1655, 1657,
	653, 654, 656, 657, 658, 660, 661, 663, 665, 667,
	668, 669, 671, 672, 674, 675, 676, 677, 678, 680,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 772, 774, 0, 1637,
	1639, 1641, 1643, 0, 0, -2, -2, 0, -2, -2,
	44, 45, 47, 49, 0, -2, 377, 379, 381, 383,
	0, 415, 417, 418, 420, 422, 423, 425, -2, 0,
	586, 587, 589, 591, -2, 0, 1216, 1218, 1220, 0,
	760, 762, 0, 1223, 1225, 1227, 0, 0, 784, 785,
	0, 1755, -2, 776, 778, 780, 782, 861, 863, 865,
	867, 869, 871, 873, 875, 877, 879, 880, 882, 884,
	886, 888, 890, 891, 893, 895, 897, 898, 900, 901,
	903, 905, 907, 909, 911, 913, 915, 917, 919, 921,
	923, 925, 927, 929, -2, 932, 933, 934, 936, -2,
	0, -2, -2, 1651, 51, 53, 55, 57, 59, 61,
	63, 65, 67, 69, 71, 73, 532, 534, 536, 538,
	540, 543, 545, 547, 549, 1813, 593, 595, 597, 599,
	601, 603, 605, 0, 0, -2, 1827, 0, 0, 0,
	1025, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 129, 130, 131, 132, 133, 134, 135, 88, 89,
	90, 92, 93, 94, 95, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 126, 127,
	86, 0, 0, 1786, 1788, 1790, 1792, -2, 0, 0,
	8, 12, 14, 16, 18, 20, 22, 24, 26, 28,
	30, 32, 36, 38, 40, 42, 1656, 1658, 655, 659,
	662, 664, 666, 670, 673, 679, 681, 683, 638, 639,
	642, 2529, 2547, 2548, 2549, 2552, 2553, 2554, 2555, 2556,
	2557, 3081, 3162, 3163, 2580, 2581, 2582, 2583, 2584, 2585,
	2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595,
	2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605,
	2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615,
	2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625,
	2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635,
	2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645,
	2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655,
	2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665,
	2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675,
	2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685,
	2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695,
	2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705,
	2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715,
	2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725,
	2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735,
	2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745,
	2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755,
	2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765,
	2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775,
	2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785,
	2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795,
	2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805,
	2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815,
	2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825,
	2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835,
	2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845,
	2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855,
	2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865,
	2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875,
	2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885,
	2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895,
	2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905,
	2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914, 2915,
	2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923, 2924, 2925,
	2926, 2927, 2928, 2929, 2930, 2931, 2932, 2933, 2934, 2935,
	2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944, 2945,
	2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2954, 2955,
	2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964, 2965,
	2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975,
	2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985,
	2986, 2987, 2988, 3007, 3008, 3009, 3010, 3011, 3012, 3013,
	3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023,
	3024, 3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033,
	3034, 3035, 3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043,
	3044, 3045, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053,
	3054, 3055, 3056, 3057, 3058, 3059, 3060, 640, 641, 1410,
	0, 722, 720, 2512, 723, 2837, 725, 727, 580, 581,
	582, 583, 584, 585, 0, 753, 2940, 737, 1825, 754,
	756, 757, 758, 759, 717, 715, 0, 758, 753, 2585,
	2940, 751, 1635, 1636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 592, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 511, 1473, 1474, 1475, 1620,
	1621, 2892, 1666, 0, 261, 773, -2, -2, 3045, -2,
	815, 816, -2, -2, 830, 834, 825, 3050, 0, 2895,
	2878, -2, 837, 1638, 1640, 1642, 937, 938, 939, 2533,
	943, 941, 953, 954, 957, 0, 974, -2, 0, 2581,
	2860, -2, -2, 975, 976, -2, -2, -2, -2, 955,
	956, 0, 0, 0, 0, 0, 1668, 1660, 1663, 1661,
	1662, 46, 48, 50, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 271, -2, -2,
	-2, -2, 0, 0, 2946, 2643, 2480, 2549, 2483, 2478,
	378, 380, 382, 384, 385, 0, 0, 0, 0, 0,
	0, 0, 416, 419, 421, 424, -2, 426, 0, 510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 575, -2, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1290, 1282,
	1283, 1540, 0, 0, 0, -2, 588, 590, 643, 644,
	0, 1814, 1814, 651, 652, -2, 0, 0, 0, 0,
	339, 329, 1217, 1219, 1221, 1222, 0, 0, 0, 0,
	0, 761, 763, 0, 0, 2940, 303, 1224, 1226, 1228,
	1229, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	777, 779, 781, 783, 862, 864, 866, 868, 870, 872,
	874, 876, 878, 881, 883, 885, 887, 889, 892, 894,
	896, 899, 902, 904, 906, 908, 910, 912, 914, 916,
	918, 920, 922, 924, 926, 928, 930, 931, 982, 0,
	0, 0, 0, -2, -2, -2, 0, 0, 0, -2,
	0, -2, -2, -2, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 0, 1094, 0, 0, 0, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, -2, 0, 1187, 0, 0, 985,
	988, 989, 990, 991, 992, 993, 994, 0, 1067, 1092,
	1093, 1103, 935, 0, 1453, 1815, 1668, 1645, 1646, 1647,
	1652, 1654, 1648, 1649, 1650, 52, 54, 56, 58, 60,
	62, 64, 66, 68, 70, 72, 74, 533, 535, 537,
	539, 541, 544, 546, 548, -2, 1784, 1785, 594, 596,
	598, 600, 602, 604, 606, 764, 0, 767, 0, 987,
	766, -2, 0, 1819, 1819, 1819, 0, 0, 1785, 1783,
	0, 0, 0, 770, 771, 841, 842, 2092, 0, 0,
	0, 0, 0, 0, 0, 0, 2352, 2180, 0, 843,
	-2, 2213, 2215, 3019, 2809, 3045, 2351, 2217, 2218, 2219,
	2220, 2221, 0, 2223, 2224, 2225, 2226, 2227, 2228, 0,
	2230, 0, 2235, 2236, 2237, 0, 3026, 2455, 2543, -2,
	0, 0, 3033, 2539, 0, 2318, 2253, -2, -2, 2566,
	2545, 2024, 2025, 2026, 2027, 2028, -2, -2, 3064, 2257,
	2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267,
	0, 3007, 3027, 3028, 3034, 3036, 3029, 3016, 2278, 2658,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 2051, 2060, -2, -2, -2, -2, -2,
	-2, -2, 3020, 3021, 3039, 3042, 3049, 3054, 3055, 3025,
	3035, 3063, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3072,
	3073, 3074, 3075, 3076, 3077, 3078, 3079, 3080, 2052, -2,
	-2, -2, -2, 0, 1802, 2853, 1805, 1410, 1803, 1787,
	1789, 0, 1791, 0, 0, 0, 1796, 1822, 1820, 0,
	1871, 1800, 1801, 1894, 1894, 1918, 0, 1899, 0, 1918,
	1814, 1945, 0, 1905, 2883, 2254, 2255, 0, 2549, 2544,
	-2, -2, 3061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 718, 0, 724, 726, 0, 0,
	0, 0, 753, 752, 1824, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 514, 515, 516, 517, 518, 3027,
	0, 0, 0, 523, 0, 525, 526, 527, 528, 529,
	530, 531, 231, 3027, 611, 636, 0, 231, 3027, 614,
	231, 3027, 617, 0, 620, 1538, 231, 3027, 623, 2508,
	231, 3027, 626, 628, 2516, 231, 3027, 632, 2523, 2521,
	633, 0, 635, 251, 247, 248, 249, 250, 1631, 1632,
	1633, 1634, 0, 1665, 1539, 775, 0, 801, 0, 813,
	814, 3015, -2, 0, 2905, 818, 819, -2, 821, 1669,
	1673, 1674, 1675, 1676, 1677, 0, 0, 0, 0, 1682,
	0, 0, 0, 0, 808, 809, 828, 829, 835, 838,
	0, 946, 942, 958, 0, 973, 0, 974, 974, 2497,
	2488, 2489, 0, 0, 974, 974, 0, 0, 977, 978,
	979, 980, 981, 1659, -2, 85, 0, 3027, 1945, 87,
	0, 2502, 2575, 2576, 2577, 2578, 2579, 3062, 3082, 3083,
	3084, 3085, 3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093,
	3094, 3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103,
	3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113,
	3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123,
	3124, 3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133,
	3134, 3135, 3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143,
	3144, 3145, 3146, 3147, 3148, 3149, 3150, 3151, 3152, 3153,
	3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161, 3064, 91,
	0, 3027, 96, 0, 3027, 0, -2, 112, 0, 128,
	0, 155, -2, -2, -2, 136, 0, 3027, 0, 2477,
	-2, 0, 243, 330, 331, 332, 0, 699, 0, 708,
	342, 343, 2562, 2563, 2571, 2572, 2573, 2574, 0, 804,
	2352, 0, 0, 1254, -2, 0, 1466, 1468, 1468, 0,
	-2, 0, 0, 0, 1205, 2474, 2479, 1206, 1207, 2498,
	1208, 2484, 0, 386, 387, 388, 389, 390, 0, 391,
	3027, 393, 394, 0, 396, 397, 3027, 399, 400, 0,
	402, 0, 404, 0, 283, 287, 3027, 3027, 428, 431,
	0, 512, 0, 509, 0, 493, 494, 0, 496, 0,
	0, 0, 501, 502, 504, 505, 506, 507, 508, 0,
	553, 551, 2513, 571, 356, 0, -2, 3027, 0, 1251,
	0, 0, 1518, -2, 0, 1459, -2, 0, 1525, 3027,
	1521, 0, -2, 0, 1812, 3027, 1686, 1286, 1287, 1288,
	1289, 1957, 577, 0, 1719, 0, 1721, 0, 1741, 1951,
	1894, 0, 0, 1956, 0, -2, 696, 2532, -2, 646,
	0, 647, 0, -2, 0, 356, 0, 0, 1232, 1234,
	1235, 1237, 1238, 1241, 1242, 1243, 1244, 0, 1246, 1931,
	304, 306, 0, 0, 0, 0, 1231, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 0, 571, 786, 0,
	0, 983, 984, 0, 0, 1002, 1003, 1004, 0, 0,
	356, -2, -2, -2, 1012, 0, 1019, 1022, -2, 0,
	0, 0, 0, 1029, 0, 1034, 1035, 1036, 0, -2,
	0, 1043, 1045, 1215, 1047, 0, 0, 1049, 0, 1053,
	0, 1056, 0, 1058, 0, 1060, -2, -2, -2, 1068,
	1069, -2, 1074, -2, 0, 1078, -2, 0, 1081, 0,
	1084, -2, 0, 1094, 1090, 1091, 0, 0, 0, 0,
	1111, 1112, 0, 1121, 0, 1124, 1125, 1126, 0, 0,
	1131, 1132, 0, 1134, 1135, 1136, 1138, 1139, 1140, 0,
	2977, 2902, 2643, 2690, 0, 1149, -2, 1155, 1157, 0,
	-2, 0, 1173, 0, 1177, 0, 0, 1186, 0, 0,
	0, 986, 0, 995, 996, 997, 231, 1949, 1644, 0,
	-2, 0, 765, 0, 769, 1844, 1770, 1767, 0, 1841,
	1842, 1771, 0, 0, 0, 1778, 0, 1817, 1818, 0,
	0, 0, 1757, 1758, 0, 0, 0, 0, 0, 0,
	2357, 2358, 2359, 2360, 2373, 2361, 2362, 2372, 2370, 2371,
	2363, 2364, 2369, 2383, 2384, 2374, 2375, 2365, 2378, 2376,
	2377, 2379, 2380, 2381, 2382, 0, 0, 2388, 0, 2366,
	2367, 2368, 2396, 0, 0, 2397, 0, 2399, 0, 2389,
	2385, 2386, 2387, 0, 2159, 2161, 2463, 0, 0, 0,
	2395, 2390, 2391, 2097, 2098, 2099, 2100, 2101, 2134, 2138,
	2139, 0, 0, 2214, 2460, 2459, 2216, 0, 0, 2411,
	0, 2229, -2, 0, 2352, 2406, 0, 0, 2238, 2239,
	2240, 0, 0, 2411, 0, 0, 2454, 2250, 2251, 2089,
	0, 0, 2320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 2037, 0, 2039, 0, 2040, 2041, 2048, 2061,
	0, 0, 0, 0, 2065, 0, 0, 0, 0, 0,
	0, 0, 2435, -2, 0, 0, 0, 0, 2053, 0,
	0, 1804, 0, 0, 1875, 2464, 2468, 2469, 1875, 1875,
	0, 0, 2412, 1942, 1942, 0, 0, 1937, 1937, 1937,
	1935, 1918, 0, 1918, 1928, 0, 1918, 1918, 0, -2,
	1899, 0, 0, 1928, 0, 1912, 684, 686, 688, 690,
	691, 692, 694, 1946, 1947, 0, 0, 0, 0, 2550,
	0, 0, 0, 0, 0, 0, 2535, 0, 0, 2507,
	411, 412, 0, 0, 0, 2959, 2895, 0, -2, -2,
	-2, -2, 2902, 0, 0, 2643, 729, 755, 0, 1814,
	0, 2414, 1972, 1976, 0, 1978, 1979, 1980, 1981, 1982,
	0, 0, 1973, -2, 2049, 2051, 2072, 2567, 2568, 2569,
	2032, 2033, 2034, 2035, 2036, 2044, 2031, 2031, 2031, 2042,
	2071, 2063, 2071, 2067, 2017, 2018, 2019, 2054, 2055, 2056,
	2057, 0, 2959, 2895, 0, -2, 0, 740, 0, 0,
	0, 1752, 513, 0, 520, 521, 522, 0, 607, 0,
	229, 230, 0, 231, 3027, 612, 0, 615, 0, 231,
	3027, 2472, 621, 0, 624, 0, 0, 630, 0, 0,
	0, 0, 0, 231, 1754, 0, 0, 0, 0, -2,
	823, 831, 832, 833, 0, 1671, 0, 1678, 852, 853,
	854, 1680, 1681, 0, 1683, 826, 855, 856, 857, 858,
	859, 860, 0, 2486, 2487, 2492, 2493, 0, 0, 824,
	845, 827, 0, 839, 949, 944, 945, 959, 960, 0,
	0, 2490, 2491, 0, 0, 965, 966, 137, 1617, 0,
	0, 184, 0, 1617, 1617, 0, 0, 0, 0, 212,
	0, 0, 1320, 0, 0, 0, 0, 155, 169, 180,
	149, 150, 151, 0, 0, 0, 0, 0, 0, 97,
	1432, 0, 1435, 0, 0, 0, 0, 0, 0, 0,
	1448, 1451, 0, 0, 0, 0, 0, 114, 115, 0,
	0, 120, 121, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 1716, 0, 159, 155, 0, 0, 154, 156,
	139, 0, 0, 155, 170, 182, 0, 218, 220, 1317,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 253,
	0, 698, 700, 571, 571, 0, 0, 706, 0, 709,
	0, 802, 806, 807, 0, 0, 803, 805, 0, 0,
	1460, 0, 0, 0, 1811, 0, 0, 0, 0, 3027,
	1615, 0, 1598, 0, 1931, 2737, -2, -2, 304, 1931,
	1204, 0, 0, 2550, 2482, 0, 0, 0, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 437, 0, 503,
	492, 495, 497, 498, 499, 542, 1379, 3027, 0, 0,
	575, 566, 0, 570, 0, 0, 574, 0, 0, 1431,
	3027, 1429, 2517, 0, 1457, 0, 1517, 1410, 3027, 2515,
	0, 0, 0, 1526, 2559, 1535, 1539, 1704, 0, 579,
	0, 1722, 1724, 0, 0, 1952, 0, 1954, 1894, 1814,
	0, 0, 0, 0, 334, 0, 0, 0, 0, 0,
	1245, 313, 0, 1930, 0, 0, 344, 1931, 304, 2866,
	0, 1230, 356, 356, 1931, 788, 1931, 790, 0, 0,
	1005, 0, 0, 1008, 356, 356, 356, 1017, 1018, 1020,
	1021, -2, -2, -2, -2, 1023, 1024, 1118, 0, 0,
	0, 1117, 1613, 0, 1039, 1042, 1046, 0, 1190, 2878,
	2895, 2959, 1213, 1118, 2643, 1118, 2643, 1118, 2643, 1118,
	1118, 1062, 1106, 1114, 1073, 1080, 0, 1075, 1079, 1082,
	1085, 0, 1087, 1095, 0, -2, 0, 1098, 0, 1100,
	0, 1102, 1118, 1119, 1122, 0, 1130, 1133, 0, 1141,
	1142, 1143, 1144, 2530, 1145, 1146, 1147, 1148, -2, 1152,
	1153, 0, 1164, 1169, 1170, 1166, 0, 0, 0, 0,
	0, 0, 1180, 1181, 0, 0, 0, 1189, 0, 998,
	1452, 0, 1653, 1844, 1770, 768, 1761, 1843, 1762, 1769,
	1772, 0, 0, 1774, 0, 1776, 0, 1839, 1840, 1847,
	1848, 0, 1858, 1859, 1851, 0, -2, 0, 0, 1854,
	1855, 1780, 0, 1797, 1798, 1799, 1828, 1831, 1554, 0,
	3162, 811, 0, 2093, 1967, 2094, 2095, 2501, 0, 2102,
	2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, -2,
	-2, -2, -2, -2, -2, -2, -2, 2120, 2121, 2122,
	2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, -2, -2,
	-2, 2135, 2136, 2137, -2, 2398, 2400, 0, 2463, 0,
	-2, 0, -2, -2, -2, -2, 2156, 0, 2158, 2163,
	2165, 2167, 0, 0, 0, 0, 2462, 2177, 2446, 2447,
	0, 0, 2354, 2355, 2356, 2162, 0, 2181, 2461, 2458,
	0, 0, 2392, 0, 2357, 2358, 2359, 2360, 2361, 2362,
	2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372,
	2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382,
	2383, 2384, 2385, 2386, 2387, 2388, 2389, 0, 2410, 1827,
	2242, 0, 0, 0, 0, 2249, 2234, 2408, 0, 2407,
	0, 0, 0, 2418, 0, 2453, 2449, 0, 2499, 2088,
	2075, 2076, 2077, 2078, 2079, 2080, 2090, 0, 2496, 2536,
	2542, 2328, 0, 0, 0, 2279, 2280, 2281, 2282, 2283,
	0, 2285, 2286, 0, 2288, 2289, 0, 2291, 2292, 0,
	2294, 2295, 2296, 2297, 2298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992,
	1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
	2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,
	2013, 2014, 2015, 2016, 0, 0, 2300, 0, 2421, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 2302, 0,
	2304, 2412, 2432, 0, 0, 2182, 0, 0, 0, 0,
	0, 2307, 2412, 2440, 0, 0, 0, 0, 0, 2412,
	0, 2445, 0, 2314, 0, 2316, 1026, 1027, 1806, 0,
	0, 1962, 0, 0, 0, 2467, 2470, 2471, 2989, 2990,
	2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999, 3000,
	3001, 3002, 3003, 3004, 3005, 3006, 1962, 1962, 0, 1870,
	0, 0, 1938, 1939, 1940, 1941, 0, 0, 1942, 0,
	1932, 1936, 1933, 1934, 1928, 1891, 0, 0, 2503, 1928,
	1897, 1927, 0, 1410, 1917, 1928, 1928, 0, -2, 1901,
	1918, 0, 0, 685, 687, 689, 693, 695, 0, 0,
	1827, -2, 0, -2, 358, 1409, 0, 0, 0, 0,
	0, 0, 719, 721, 0, 0, 627, 0, 0, 0,
	1196, 0, 1198, 1199, 0, 1601, 713, 0, 716, 0,
	1963, 1966, 0, 0, 1977, 1983, 1984, 0, -2, 0,
	0, 2073, 0, 0, 0, 0, 0, 0, 750, 0,
	0, 749, 0, 0, 524, 637, 231, 609, 0, 231,
	231, 618, 0, 0, 231, 629, 231, 2524, 231, 2522,
	252, 634, 1753, 264, 0, 810, 0, 1670, 1679, 0,
	849, 0, 851, 0, 2494, 2495, 0, 840, 0, 947,
	0, 961, 962, 963, 964, 0, 0, 0, 0, 1616,
	0, 0, 1561, 0, 0, 188, 3027, 0, 233, 0,
	0, 1372, 2509, 0, 1362, 0, 0, 2666, 0, 0,
	0, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 0, 152, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 1433, 1434, 1436, 1443,
	1445, 0, 1439, 1440, 0, 1442, 1444, 1446, 0, 1449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 122, 1469, 0, 0, 0, 1470, 1471, 1472, 1692,
	1693, 0, 1715, 1716, 0, 0, 0, 0, 0, 0,
	0, 148, 0, 0, 0, 0, 2476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 701, 356,
	703, 704, 352, 349, 351, 705, 710, 0, 711, 0,
	0, 0, 0, 1462, 0, 1513, 1511, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 0, 0, 0, 0, -2, 1464, 1465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 347, 2475, 2485, 0, 1239, 1240, 392, 395, 398,
	401, 270, 0, 0, 430, 439, 0, 1292, 1264, 0,
	0, 552, 356, 571, 573, 0, 354, 2812, 2528, 1249,
	1427, 1430, 0, 1410, 3027, 1481, 0, 0, 0, 0,
	0, 0, 0, 1524, 0, 0, 3027, 2504, 2558, 2559,
	1706, 1716, 0, 1962, 0, 1739, 1725, 0, 0, 0,
	1739, 1743, 1744, 1746, 1747, 0, 0, 1953, 1959, 645,
	697, 1814, 1814, 356, 0, 0, 1728, 1730, 0, 0,
	0, 296, 0, 307, 1931, 305, 0, 313, 0, 0,
	1931, 304, 0, 565, 787, 792, 1000, 0, 0, 356,
	1009, 1010, 1011, 1064, 1108, 1116, 1168, 1028, 1030, 1031,
	1032, 0, 1037, 0, 0, 0, 1214, 1209, 1210, 1211,
	2525, 2521, 1212, 1048, 1118, 1051, 1118, 1054, 1118, 1057,
	1059, 1077, 1083, 1096, 1089, 1097, 0, 0, 0, 1110,
	0, 1128, 0, 1137, 1151, 0, 0, 0, 0, 0,
	0, 0, 1174, 1175, 1176, 1178, 1183, 1182, 0, 1188,
	999, 1950, 1765, 1766, 1768, 0, 1777, 0, 0, 1853,
	-2, -2, 1852, 1856, 1857, -2, -2, -2, -2, 1773,
	0, 1782, 1779, 0, 1838, 1552, 1553, 0, 0, 812,
	0, 0, -2, -2, 0, 0, 0, 2178, 0, -2,
	2157, 2160, 2164, 2166, 2168, 0, 0, 0, 0, 0,
	0, 2401, 0, 2403, 2179, 2456, 2459, 2394, 0, 2350,
	0, 0, 1826, 1827, 1827, 0, 2248, 0, 2409, 0,
	2416, 2417, 0, 2241, 0, 2450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2252, 0, 0, 0, 0,
	2284, 2287, 2290, 2293, 0, 0, 0, 0, 2273, 0,
	0, 0, 2277, 2043, 2029, 0, 2071, 2069, 2070, 2064,
	2071, 2068, 2021, 0, 2020, 0, 2299, 0, 2301, 2303,
	0, 0, 2305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2185, 2186, 2187,
	2207, 2306, 2438, 2439, 0, 0, 0, 0, 0, 0,
	2312, 0, 2444, 2313, 2315, 1814, 0, 1807, 0, 1872,
	1861, 1961, 0, 2465, 1931, 1874, 1876, 2466, 2506, 1861,
	1861, 0, 2413, 0, 0, 1922, 0, 0, 0, 1924,
	1895, 0, 0, 1889, 0, 1880, 1881, 1882, 1883, 1884,
	1885, 1886, 1896, 1410, 1926, 1898, 1902, 2536, 0, 1928,
	0, 1913, 0, 1915, 1948, 0, 1907, 1910, 0, 0,
	2551, 1962, 0, 405, 413, 414, 406, 407, 408, 409,
	0, 1601, 0, 0, 0, 0, 1197, 0, 736, 0,
	0, 2415, 0, 1968, 0, 1974, 0, 0, 0, 0,
	738, 0, 0, 0, 0, 0, 0, 1751, 519, 608,
	231, 613, 616, 2473, 231, 622, 625, 631, 260, 0,
	800, -2, 847, 848, 850, 0, 846, 952, 948, 185,
	1617, 0, 0, 0, 1557, 0, 1275, 0, 1270, 1271,
	1559, 2520, 1563, 1569, 1572, 0, 190, 3027, 202, 0,
	3027, 0, 1336, 0, 0, 0, 0, 0, 0, 1619,
	0, 0, 3027, 231, 3027, 231, 206, 208, 211, 0,
	217, 213, 0, 1272, 0, 1324, 0, 0, 1327, 138,
	1617, 0, 0, 141, 145, 157, 0, 0, 0, 167,
	0, 0, 0, 1574, 1578, 1586, 0, 0, 0, 1437,
	1438, 1441, 1447, 1450, 98, 0, 0, 0, 1582, 1584,
	1590, 113, 116, 3027, 2518, 0, 118, 3027, 0, 0,
	0, 1556, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 143, 147, 158, 0, 1592, 140, 0, 246, 0,
	0, 236, 231, 3027, 0, 238, 0, 239, 240, 254,
	0, 0, 0, 702, 0, 0, 0, 707, 0, 1252,
	1253, 1512, 0, 1455, 1456, 284, 285, 0, 1467, 1461,
	0, 0, 0, 0, 0, 1594, 1595, 0, 0, 0,
	1615, 1610, 1931, 266, 0, 1931, 274, 0, 2481, 0,
	288, 427, 0, 438, 440, 442, 0, 0, 449, 450,
	451, 452, 454, 2570, 455, -2, -2, 0, 0, 0,
	1291, 1390, 1293, 1295, 1296, 1297, 233, 0, 2559, 1362,
	2725, 2559, 0, 0, 1259, 0, 0, 0, 558, 554,
	0, 563, 567, 568, 0, 0, 0, -2, 0, 0,
	0, 0, -2, 0, 0, 0, 1528, 1522, 1523, 0,
	0, 0, 0, 3027, 1708, 1716, 0, 1812, 1827, 578,
	1717, 1739, 0, 0, 0, 1727, 1723, 1720, 1962, 0,
	0, 0, 0, 0, 1955, 1958, 648, 649, 333, 0,
	356, 0, 0, 0, 0, 0, 0, 311, 0, 314,
	0, 0, 0, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 0, 313, 345, 298, 1931, 0, 313, 0,
	0, 789, 0, 0, 0, 1007, 0, 0, 1613, 1041,
	0, 1050, 1052, 1055, 1099, 1101, 1118, 0, 1129, 1158,
	2505, 1159, 1314, 0, 1314, 0, 0, 1179, 1185, 1775,
	0, 1850, 1781, 1832, 1833, 0, 1554, 0, 2096, 2141,
	0, 0, -2, 0, 0, 2145, 0, 0, 0, -2,
	0, 0, 0, 2402, 2404, 0, 2458, 2393, 2243, 0,
	0, 0, 2247, 2231, 2232, 0, 2353, 2419, 2448, 2452,
	0, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 0, 2500,
	2537, 2541, 2326, 2327, 2331, 2514, 0, 0, 0, 2256,
	0, 0, 0, 0, 0, 0, 0, 0, 2062, 2066,
	0, 0, 2420, 2431, 2433, 2183, 2184, 2188, 2189, 2190,
	2191, 2192, 2193, 2194, 2195, 2196, 2197, -2, -2, -2,
	2201, 2202, 2203, -2, -2, -2, 2208, 0, 0, 0,
	2434, 2436, 2437, 2441, 2442, 0, 2309, 2310, 2311, 2443,
	0, 1814, 1808, 1869, 0, 1960, 1873, 0, 1869, 1869,
	1821, 1920, 0, 0, 1944, 0, 1892, 0, 1893, 0,
	0, 1925, 0, 1900, 1903, 1904, 1914, 0, 1906, 0,
	1909, 0, 2243, -2, 357, 359, 361, 0, 364, 365,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	728, 1601, 1601, 0, 0, 730, 0, 714, 0, 0,
	1970, 0, 0, 2046, 2050, 2074, 742, 744, 0, 0,
	0, 2959, 2895, 0, 741, 610, 619, 262, 0, 1929,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 232, 0, 1371, 0, 1334, 0, 0, 1361,
	0, 0, 1377, 192, 193, 194, 0, 0, 0, 0,
	204, 0, 0, 200, 0, 210, 216, 215, 0, 1321,
	0, 0, 0, 0, 1562, 0, 0, 0, 164, 165,
	166, 0, 171, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 1698, 1699,
	0, 1689, 161, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 0, 1551, 256, 0, 0, 0, 0, 0,
	353, 348, 350, 0, 1454, 1515, 1516, 1463, 1575, 1579,
	1587, 0, 0, 0, 0, 0, 758, 1614, 0, 274,
	272, 0, 275, 0, 278, 279, 0, 0, 274, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 448, 0,
	447, 453, 500, 1262, 1378, 0, 0, 1380, 1298, 1302,
	0, 2559, 2559, 0, 2511, 0, 1260, 0, 0, 1379,
	550, 0, 557, 0, 572, 2510, 0, 0, 0, 1431,
	0, 0, 1458, 1410, 1484, 1410, 0, 1527, 1529, 0,
	1537, 0, 0, 0, 1710, 1716, 0, 1703, 1704, 1846,
	1718, 1737, -2, 0, 0, 1827, 1745, 1742, 1748, 1749,
	0, 0, 336, 0, 1729, 1731, 0, 1233, 1236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 313,
	310, 300, 1931, 340, 0, 1001, 356, 1033, 1612, 1038,
	2526, 1109, 1127, 1160, 1313, 0, 0, 1162, 0, 0,
	1849, 1836, 1837, 1834, 1554, 2143, 2147, 0, 0, 0,
	2149, -2, 0, 2171, -2, -2, 2405, 2457, 2222, 1827,
	2244, 2246, 2233, 2451, 2091, 0, 2333, 2330, 0, 2317,
	0, 2268, 2269, 0, 0, 2272, 2274, 2275, 2276, 2030,
	2023, 2022, 2430, 0, 0, 0, 0, 2308, 1809, 0,
	2322, 0, 0, 1877, 2322, 2322, 1921, 0, 1923, 1890,
	1878, 0, 1887, 0, 2537, 1916, 1908, 0, 0, 362,
	0, 366, 367, 368, 369, 371, 0, 0, 0, 0,
	0, 410, 731, 732, 0, 0, 0, 1600, 1964, 1969,
	0, 1975, 2045, 0, 0, 0, 0, 0, 0, 263,
	0, 950, 951, 186, 187, 1276, 1274, 1566, 1570, 1567,
	0, 189, 0, 0, 1335, 0, 1338, 0, 0, 0,
	0, 1345, 1362, 0, 0, 0, 0, 0, 0, 1364,
	0, 1363, 0, 0, 1394, 0, 1542, 1549, 0, -2,
	0, 0, 0, 196, 222, 0, 0, 0, 0, 225,
	1618, 198, 0, 0, 231, 231, 1273, 0, 0, 1558,
	1560, 1573, 0, 0, 0, 0, 174, 0, 0, 1576,
	1580, 1588, 1583, 1585, 1591, 0, 0, 119, 0, 0,
	1700, 0, 160, 0, 0, 0, 1593, 244, 245, 0,
	231, 0, 231, 237, 231, 1551, 0, 0, 0, 0,
	0, 0, 0, 0, 1596, 1597, 265, 0, 0, 0,
	0, 0, 267, 346, 274, 429, 436, 441, 443, 444,
	445, 446, 1323, 0, 1390, 1382, 1383, 1384, 0, 1294,
	1389, 1391, 0, 0, 1299, 0, 0, 0, 0, 1279,
	1261, 0, 1292, 1264, 0, 555, 0, 355, 1250, 1428,
	1476, 1410, 0, 1479, 0, 0, 1519, 0, 0, 0,
	0, 0, 0, 0, 1712, 1716, 0, 1705, 1706, 1739,
	1845, 0, 0, 0, 1726, 1846, 0, 356, 0, 356,
	315, 0, 316, 317, 318, 325, 326, 327, 328, 299,
	302, 0, 313, 791, 793, 0, 0, 799, 1006, 1312,
	0, 0, 0, 0, 1835, 2151, -2, -2, 2172, 0,
	2538, 2540, 1827, 0, 2319, 1829, 0, 0, -2, 0,
	0, 0, 1810, 1793, 0, 1868, 1860, 1862, 1864, 2881,
	2638, 3026, 1794, 1795, 1943, 0, 0, 1911, 363, 372,
	373, 0, 375, 376, 733, 0, 0, 0, 1971, 0,
	0, 739, 0, 0, 0, 940, 0, 0, 1568, 191,
	0, 0, 1339, 1340, 1342, 0, 1344, 1346, 1347, 1264,
	0, 1351, 0, 2561, 0, 1356, 1359, 1360, 0, 0,
	1373, 1395, 0, 1404, 0, 1544, 1554, 1548, 0, 1546,
	1406, 0, 195, 224, 197, 226, 221, 0, 1551, 0,
	199, 209, 0, 0, 142, 0, 0, 2631, 177, 175,
	173, 117, 123, 125, 1555, 163, 0, 144, 0, 246,
	255, 1550, 257, 241, 231, 0, 0, 1577, 1581, 1589,
	0, 1604, 1605, 1606, 1607, 0, 0, 0, 0, 276,
	0, 277, 280, 281, 0, 0, 435, 1264, 1322, 1263,
	1381, 0, 1392, 1264, 0, 0, 0, 0, 0, 0,
	1266, 0, 1265, 0, 0, 556, 559, 0, 562, 1962,
	569, 0, 0, 0, 1483, 0, 1530, 1528, 0, 1536,
	0, 0, 0, 1688, 0, 0, 1707, 1708, 576, 1732,
	0, 0, 1739, 1750, 335, 0, 338, 312, 0, 301,
	0, 795, 0, 797, 0, 1161, 1163, 0, 0, 2245,
	2337, 0, 0, 2270, 2271, -2, 0, 2211, 2321, 2323,
	0, 0, 0, 0, 0, 1879, 1888, 374, 1601, 1601,
	1965, 746, 747, 743, 745, 0, 1564, 0, 1571, 233,
	1337, 1341, 0, 1348, 0, 0, 0, 1352, 1414, 0,
	0, 1431, 1431, 1365, 0, 0, 1398, 1399, 1319, 0,
	1400, 1401, 1402, 1543, 1838, 1549, 1264, 0, 0, 223,
	228, 0, 0, 0, 0, 0, 0, 162, 0, 235,
	258, 1551, 0, 0, 1608, 1609, 0, 0, 273, 292,
	0, 458, 456, 1266, 0, 1393, 1300, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1301, 1406, 0, 0,
	1370, 1277, 0, 1280, 0, 1262, 0, 560, 561, 564,
	0, 1477, 0, 1484, 0, 0, 1537, 0, 0, 1695,
	1687, 1716, 1709, 1710, 1962, 0, 1740, 0, 308, 309,
	794, 0, 0, 1171, 1172, 0, 0, 0, 0, 2332,
	1830, 2212, 0, 0, 1863, 1865, 1866, 1867, 734, 735,
	0, 1565, 203, 0, 1408, 1350, 1419, 0, 0, 0,
	0, 0, 1366, 1396, 1397, 1394, 1318, 0, 1547, 1545,
	1375, 1408, 1410, 201, 0, 1406, 0, 1328, 0, 0,
	1331, 0, 0, 178, 2631, 176, 0, 231, 712, 1601,
	231, 0, 295, 0, 286, 491, 457, 459, 0, 0,
	463, 464, 465, 0, 0, 468, 469, 470, 471, 0,
	0, 476, 0, 0, 0, 0, 481, 482, 1258, 0,
	1386, 1388, 1404, 1406, 1319, 0, 1281, 1323, 1279, 1478,
	1482, 1480, 1520, 1406, 0, 1404, 0, 1702, 1716, 1696,
	1697, 0, 1712, 0, 0, 356, 796, 798, 2329, 2349,
	2338, -2, 2962, 2639, 0, 2349, 2349, 2324, 2325, 0,
	0, 1264, 0, 1353, 1415, 1416, 0, 1411, 1412, 1413,
	2560, 1354, 1355, 1357, 1358, 1962, 0, 1405, 1414, 227,
	1264, 1325, 0, 0, 1326, 0, 0, 181, 0, 183,
	259, 1599, 1602, 0, 282, 0, 0, 432, 489, 0,
	0, 460, 461, 483, 462, 0, 0, 0, 474, 475,
	477, 478, 479, 480, 1255, 1257, 1264, 0, 1319, 1404,
	1264, 0, 0, 0, 1264, 1266, 1404, 0, 1319, 0,
	1691, 1701, 0, 1711, 1688, 0, 1735, 0, 337, 2334,
	0, 0, 2340, 2341, 2342, 2343, 2344, 2335, 2336, 748,
	1343, 1349, 0, 1417, 0, 1418, 0, 0, 0, 1374,
	1403, 1419, 207, 1329, 0, 1332, 0, 179, 0, 0,
	290, 291, 488, 484, 0, 0, 472, 473, 1385, 1387,
	1264, 1319, 1962, 1267, 0, 1269, 1266, 1278, 1319, 0,
	1264, 0, 1714, 1690, 1694, 2519, 1695, 1733, 0, 0,
	0, 2346, 2347, 0, 0, 0, 1420, 0, 1423, 1424,
	0, 1421, 1394, 0, 0, 231, 0, 1814, 466, 0,
	1962, 1264, 1369, 1268, 1258, 1264, 1406, 1962, 1404, 1684,
	1716, 1702, 0, 1962, 2345, 2348, 2339, 1407, 1422, 1425,
	1426, 1376, 0, 0, 1603, 293, 0, 0, 490, 485,
	486, 467, 1367, 1962, 1256, 1962, 1404, 1533, 1319, 0,
	1691, 1962, 1736, 1316, 0, 0, 487, 1368, 1531, 1319,
	1264, 1713, 1685, 1734, 1330, 1315, 0, 294, 1264, 1962,
	0, 1962, 1534, 0, 1532, 1316, 1333,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 640, 3, 646, 641, 3,
	652, 653, 644, 642, 657, 643, 654, 645, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 661, 658,
	632, 634, 633, 637, 656, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 650, 3, 651, 647, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 659, 639, 660, 635,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 636,
	57975, 638, 57976, 648, 57977, 649, 57978, 655, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1613
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1618
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1622
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1628
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1631
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1632
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1633
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1634
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1635
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1636
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1637
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1638
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1639
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1640
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1641
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1644
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1645
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1646
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1647
		{
			return helpWith(sqllex, "MOVE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1655
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1656
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1658
		{
			return helpWith(sqllex, "ALTER")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1661
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1662
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1663
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1664
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1665
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1666
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1667
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1668
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1669
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1670
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1671
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1672
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1733
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 87:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1759
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1773
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1793
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1797
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1801
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1837
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1848
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1860
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1877
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1887
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1913
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1920
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1929
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1939
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1948
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1978
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2010
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2014
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2018
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2024
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2028
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2034
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2043
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2054
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2058
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2064
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2072
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2082
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2086
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2098
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2104
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2108
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2113
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 157:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2119
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2131
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2152
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 160:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2172
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2181
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2192
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2201
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2214
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2219
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2223
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2228
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2234
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2242
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2253
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 171:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2263
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 172:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2273
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2282
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 174:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2293
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 175:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2299
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2307
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2311
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 179:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2325
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2330
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2345
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2351
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2362
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2367
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2372
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2377
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2382
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2387
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2392
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2402
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2407
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2412
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2417
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2421
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2435
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2447
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2457
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2465
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2475
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2478
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2484
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 207:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2491
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2499
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2524
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2529
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2536
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2543
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2549
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2565
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2571
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2579
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2589
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = nil
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2599
		{
			sqlVAL.union.val = true
		}
	case 226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = false
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2609
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = nil
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2620
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2634
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2638
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 234:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2674
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2694
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2704
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2713
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2722
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2731
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2735
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2738
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2742
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2749
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2762
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2794
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 260:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2822
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2826
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2830
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2834
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2877
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2889
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2899
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2919
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2923
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2927
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2935
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2954
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2963
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2967
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2971
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2975
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2979
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3072
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3077
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3081
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3097
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3101
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3105
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3114
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3118
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3122
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3128
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 294:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = nil
		}
	case 296:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3183
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3202
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3212
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3221
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3231
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.backupTargetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsTenant: sqlDollar[8].union.asTenantClause(),
			}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3238
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3242
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3252
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3256
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3263
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3271
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3285
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3289
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3300
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3304
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3321
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3325
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3329
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3337
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3341
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3353
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3361
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3367
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3373
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3377
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3381
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3408
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3417
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3423
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3428
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3433
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3437
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3454
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3457
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3461
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3465
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3473
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3477
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3483
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3487
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3493
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3497
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3501
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3511
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3521
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3525
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3529
		{
			sqlVAL.union.val = nil
		}
	case 357:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3541
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3555
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3561
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3571
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3575
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3583
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3587
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3591
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3595
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3599
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3603
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3607
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3611
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3615
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3619
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3623
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3627
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3631
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3635
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3643
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3644
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3645
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3646
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3647
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3657
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3665
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3674
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3693
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3701
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3703
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3710
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3729
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3737
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3739
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3743
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3746
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3754
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3757
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3761
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3765
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3769
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3773
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3786
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3791
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3794
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3795
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3799
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3804
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3816
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3818
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3822
		{
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3823
		{
			return helpWith(sqllex, "CREATE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3833
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3837
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3840
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3843
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3848
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Args:        sqlDollar[6].union.functionArgs(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3865
		{
			sqlVAL.union.val = true
		}
	case 434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3866
		{
			sqlVAL.union.val = false
		}
	case 435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3869
		{
			sqlVAL.union.val = true
		}
	case 436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = false
		}
	case 438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3876
		{
			sqlVAL.union.val = sqlDollar[1].union.functionArgs()
		}
	case 439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3877
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3880
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3889
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3895
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3903
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3911
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionArgClass(),
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3919
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3927
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3934
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3942
		{
			sqlVAL.union.val = tree.FunctionArgIn
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3943
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3944
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3945
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3946
		{
			return unimplemented(sqllex, "create function with 'VARIADIC' argument class")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3956
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3967
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3971
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3978
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3979
		{
			return unimplemented(sqllex, "create window function")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3981
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3987
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 467:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3991
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3995
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3999
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4003
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4007
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4011
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4015
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4019
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4023
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4027
		{
			sqlVAL.union.val = tree.FunctionLeakProof(true)
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4031
		{
			sqlVAL.union.val = tree.FunctionLeakProof(false)
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4035
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4039
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4043
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4049
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4050
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4069
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4073
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4079
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4085
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4091
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4096
		{
			return unimplemented(sqllex, "create access method")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4097
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4098
		{
			return unimplemented(sqllex, "create cast")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4099
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4100
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4101
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4102
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4103
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4104
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4105
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4106
		{
			return unimplemented(sqllex, "create publication")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4107
		{
			return unimplemented(sqllex, "create rule")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4108
		{
			return unimplemented(sqllex, "create server")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4109
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4110
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4111
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4112
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4115
		{
		}
	case 510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4116
		{
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4119
		{
		}
	case 512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4120
		{
		}
	case 513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4123
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4124
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4125
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4126
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4127
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4128
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4129
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4130
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4131
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4132
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4133
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4134
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4135
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4136
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4137
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4138
		{
			return unimplemented(sqllex, "drop server")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4139
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4140
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4141
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4145
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4146
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4147
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4150
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4151
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4152
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4153
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4164
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4172
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4176
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 553:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4180
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4186
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4190
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4199
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4206
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4212
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4218
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4222
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4233
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4245
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4269
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4287
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4297
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4307
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4318
		{
		}
	case 571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4320
		{
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4324
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4328
		{
			sqlVAL.str = ""
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4334
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4338
		{

			sqlVAL.union.val = nil
		}
	case 576:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4362
		{
			return helpWith(sqllex, "DELETE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4365
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4366
		{
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4377
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4378
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4379
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4380
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4381
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4390
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4391
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4392
		{
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4393
		{
			return helpWith(sqllex, "DROP")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4396
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4397
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4398
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4399
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4400
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4401
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4402
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4410
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4418
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4427
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4435
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4443
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4447
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4450
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4458
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4462
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4465
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4473
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4490
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4498
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4513
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4528
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4535
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4566
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4573
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4581
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4585
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4588
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4592
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4597
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4610
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4615
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4617
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4622
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4626
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4649
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4656
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4658
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4666
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4674
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4682
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4690
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4701
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4709
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4712
		{
			return helpWith(sqllex, "DELETE")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4714
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4715
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4716
		{
			return helpWith(sqllex, "INSERT")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4719
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4721
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4724
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4729
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4730
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4731
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4736
		{
			return helpWith(sqllex, "DELETE")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4737
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4738
		{
			return helpWith(sqllex, "INSERT")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4740
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4744
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4745
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4749
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4753
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4763
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4769
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4773
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4777
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4784
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4798
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4804
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4823
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4830
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4837
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4841
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4845
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4851
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4859
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4872
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4880
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4892
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4906
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4913
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4921
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4925
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 722:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4929
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4943
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4951
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4954
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4977
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4981
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4985
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4989
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5004
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5008
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5020
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5032
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5042
		{
			return helpWith(sqllex, "GRANT")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5065
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5069
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5073
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5081
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5085
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5089
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5100
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5123
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5135
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5147
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5157
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5160
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5166
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5170
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5180
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5184
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5198
		{
			return helpWith(sqllex, "RESET")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5199
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5207
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5211
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5215
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5218
		{
			return helpWith(sqllex, "RESET")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5226
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5229
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5243
		{
			return helpWith(sqllex, "USE")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5247
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5248
		{
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5249
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5253
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5254
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5255
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5256
		{
			return helpWith(sqllex, "USE")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5272
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5290
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5308
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5316
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5320
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 792:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5330
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5334
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5340
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5344
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5348
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5367
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5370
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5380
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5388
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5395
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5396
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5410
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5426
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5432
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5441
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5446
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5449
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5463
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5468
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5485
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5488
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5493
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5497
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5509
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5513
		{
			return unimplemented(sqllex, "set from current")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5517
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5522
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5531
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5536
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5540
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5552
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5557
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5564
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5568
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5574
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5578
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5585
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5616
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5620
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5624
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5628
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5632
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5638
		{
			sqlVAL.union.val = tree.Low
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5642
		{
			sqlVAL.union.val = tree.Normal
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5646
		{
			sqlVAL.union.val = tree.High
		}
	case 855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5661
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5665
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5670
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5690
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5691
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5692
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5693
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5694
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5695
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5696
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5697
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5698
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5700
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5701
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5702
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5703
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5704
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5706
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5707
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5708
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5710
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5712
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5713
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5714
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5715
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5716
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5717
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5718
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5719
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5720
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5721
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5722
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5723
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5724
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5725
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5726
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5727
		{
			return helpWith(sqllex, "SHOW")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5730
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5739
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5745
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5750
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5760
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5770
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5774
		{
			sqlVAL.union.val = true
		}
	case 943:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5778
		{
			sqlVAL.union.val = false
		}
	case 944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5784
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5788
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 946:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5792
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5798
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5802
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5806
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5812
		{
			sqlVAL.union.val = true
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5816
		{
			sqlVAL.union.val = false
		}
	case 952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5820
		{
			sqlVAL.union.val = false
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5830
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5835
		{
			return helpWith(sqllex, "FETCH")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5843
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5848
		{
			return helpWith(sqllex, "MOVE")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5852
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5859
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5880
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5887
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5907
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5915
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5922
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5930
		{
			sqlVAL.union.val = int64(1)
		}
	case 968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5931
		{
			sqlVAL.union.val = int64(-1)
		}
	case 969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 970:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5935
		{
			sqlVAL.union.val = int64(1)
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5938
		{
			sqlVAL.union.val = int64(1)
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5939
		{
			sqlVAL.union.val = int64(-1)
		}
	case 973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5942
		{
		}
	case 974:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5943
		{
		}
	case 975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5946
		{
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5947
		{
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5951
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5956
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5961
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5966
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5971
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5981
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5982
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5983
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5998
		{
			sqlVAL.str = "client_encoding"
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6003
		{
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6005
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6010
		{
			sqlVAL.str = "timezone"
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6011
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6015
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6035
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6039
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6043
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6054
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6062
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6095
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6103
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6119
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6126
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6130
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6138
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6142
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6158
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6161
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6166
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6172
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6175
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6181
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6195
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6203
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6206
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6222
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6226
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6229
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6237
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6240
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6246
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6252
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6258
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6265
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6279
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6288
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6295
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6298
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6311
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6319
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6327
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6330
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6343
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6345
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6349
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6352
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6360
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6363
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6365
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6368
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6379
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6381
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6384
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = true
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6390
		{
			sqlVAL.union.val = true
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = false
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6420
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6421
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6422
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6428
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6432
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6436
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6439
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6449
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6465
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6466
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6476
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6482
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6484
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6490
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6492
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6498
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6502
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6506
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6516
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6520
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6534
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6539
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6541
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6545
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6548
		{
			sqlVAL.union.val = true
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = false
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6560
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6565
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6596
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6603
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6606
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6608
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6611
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6614
		{
			sqlVAL.union.val = true
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6615
		{
			sqlVAL.union.val = false
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6626
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6629
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6640
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6643
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6650
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6654
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6658
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6668
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6679
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6690
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6693
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6701
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6706
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6711
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6715
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6722
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6729
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6745
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6750
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6755
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6760
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6765
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6774
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6778
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6782
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6785
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6798
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6803
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6811
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6814
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6825
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6835
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6839
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6843
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6851
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6859
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6872
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6877
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6882
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6886
		{
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6895
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6903
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6909
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6918
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6923
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6927
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6930
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6939
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6971
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6984
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6996
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7006
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7013
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7019
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7146
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7150
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7154
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7201
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7206
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7210
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7238
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7249
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7257
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7266
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7312
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7313
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7314
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7315
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7325
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7326
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7327
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7328
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7336
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7339
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7349
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7367
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7380
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7412
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7420
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7431
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7453
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7467
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7478
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7495
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7531
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7546
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7563
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7567
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7574
		{

			sqlVAL.union.val = nil
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7580
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7586
		{
			sqlVAL.str = ""
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7590
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = nil
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7613
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7617
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7627
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7637
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7643
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7647
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7653
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7666
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7680
		{
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7681
		{
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7682
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7700
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7701
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7702
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7706
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7707
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7709
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7710
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7721
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7725
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7731
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7737
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7750
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7759
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7763
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7769
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7774
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7775
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7777
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7778
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7779
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7780
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7781
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7794
		{
			sqlVAL.str = ""
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7801
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7807
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7815
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7843
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7849
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7862
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7869
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7885
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7919
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7934
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7982
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8014
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8018
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8026
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8061
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8065
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8071
		{

			sqlVAL.union.val = true
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8076
		{
			sqlVAL.union.val = false
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8081
		{
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8085
		{
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8088
		{
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8131
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8143
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8148
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8161
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8185
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8196
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8213
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8223
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8234
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8238
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8245
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8251
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8273
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8289
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8306
		{
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8307
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8308
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8309
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8310
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8311
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8329
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8345
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8385
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8393
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8397
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8478
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8487
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8495
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8506
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8520
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8522
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8524
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8534
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8536
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8538
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8540
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8543
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8545
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8546
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8548
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8551
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8553
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8564
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8567
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8571
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8581
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8598
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8625
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8632
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8636
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.str = ""
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8652
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8663
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8671
		{
			sqlVAL.union.val = true
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8675
		{

			sqlVAL.union.val = true
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = false
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8692
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8706
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8718
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8730
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8741
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8752
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.union.val = false
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = true
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = true
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8774
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8782
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8786
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8790
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8822
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8826
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8830
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8834
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8838
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8842
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8846
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8850
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8854
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8858
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8870
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8874
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8880
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqlVAL.union.val = nil
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8890
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8894
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8899
		{
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8900
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8909
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8925
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8927
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8929
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8931
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8933
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8935
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8970
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8987
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:9005
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:9021
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9037
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9041
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.union.val = false
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = true
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = false
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = true
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = false
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9082
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9086
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9095
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9101
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9107
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9115
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.str = ""
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.str = ""
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9168
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9174
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9204
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9214
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9233
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9246
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9344
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9353
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9399
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9405
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9417
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9423
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9437
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9443
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9455
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9476
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9502
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9517
		{
			sqlVAL.union.val = true
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9521
		{
			sqlVAL.union.val = false
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9535
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9562
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9566
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9581
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.str = ""
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9601
		{
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9602
		{
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9605
		{
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9606
		{
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9617
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9627
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9635
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9637
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9644
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9665
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9673
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9694
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9702
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9713
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9717
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9718
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9719
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9738
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9748
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9751
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9760
		{
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9761
		{
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9762
		{
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9772
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9779
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9785
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9786
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9793
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9800
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9804
		{
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9805
		{
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9829
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9833
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9846
		{
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9848
		{
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9852
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9857
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9861
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9865
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9911
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9942
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.str = ""
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9952
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9965
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9970
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9977
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9987
		{

		}
	case 1698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9994
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9998
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10002
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.str = ""
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10031
		{
			sqlVAL.str = ""
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.str = ""
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.str = ""
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10057
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10082
		{
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10083
		{
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10098
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10112
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10123
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10130
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10134
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10143
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10192
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10203
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10237
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10275
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10307
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10328
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10343
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10451
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10455
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10470
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10480
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10481
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10487
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10522
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10523
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10524
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10546
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10585
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10589
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10629
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10645
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = true
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = false
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10676
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10698
		{
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10699
		{
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = nil
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10712
		{
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10713
		{
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10717
		{
			sqlVAL.union.val = true
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = false
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = false
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10731
		{
			sqlVAL.union.val = true
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10737
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10742
		{
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10743
		{
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10746
		{
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10747
		{
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10751
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10755
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10761
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10771
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10788
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10800
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10805
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10817
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10821
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10831
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10840
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10851
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10856
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10860
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10864
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10882
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10890
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10897
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10919
		{
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10920
		{
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10923
		{
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10924
		{
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10958
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10959
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10960
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10990
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10992
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11004
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11007
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11009
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11029
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11034
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11039
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11060
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11076
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11088
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11107
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11149
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11159
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11194
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11205
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11235
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11268
		{
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11270
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = nil
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11274
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11275
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11279
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11283
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = true
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11293
		{
			sqlVAL.union.val = false
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11313
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11317
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11321
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11325
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11329
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11333
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11343
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11369
		{
			sqlVAL.str = tree.AstFull
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11373
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11377
		{
			sqlVAL.str = tree.AstRight
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11381
		{
			sqlVAL.str = tree.AstInner
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11387
		{
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11388
		{
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11412
		{
			sqlVAL.str = tree.AstHash
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11416
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11420
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.str = ""
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11441
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11450
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11451
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11453
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11457
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11462
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11480
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11486
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11492
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11502
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11512
		{
			sqlVAL.union.val = true
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = false
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = true
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11526
		{
			sqlVAL.union.val = false
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11551
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11564
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11572
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11573
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11583
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11590
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11591
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11593
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11601
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11602
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11614
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11621
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11630
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11670
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11682
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11683
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11686
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11687
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11688
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11689
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11690
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11691
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11692
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11693
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11695
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11696
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11697
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11699
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11701
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11702
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11704
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11705
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11706
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11708
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11709
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11710
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11711
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11712
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11713
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11714
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11715
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11716
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11720
		{
			sqlVAL.union.val = types.Geography
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11721
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11722
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11724
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11728
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11732
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11740
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11766
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11774
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11782
		{
			sqlVAL.union.val = nil
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11789
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11793
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11797
		{
			sqlVAL.union.val = types.Int2
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11801
		{
			sqlVAL.union.val = types.Int
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11805
		{
			sqlVAL.union.val = types.Float4
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11809
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11813
		{
			sqlVAL.union.val = types.Float
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11817
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11825
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11833
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11841
		{
			sqlVAL.union.val = types.Bool
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11847
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11860
		{
			sqlVAL.union.val = types.Float
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11866
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11872
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11880
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11884
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11888
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11894
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11906
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11912
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11916
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11920
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11924
		{
			sqlVAL.union.val = types.String
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.union.val = true
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.union.val = false
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11939
		{
			sqlVAL.union.val = types.Date
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11943
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11951
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11965
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11974
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11982
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11995
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11999
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12009
		{
			sqlVAL.union.val = true
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12010
		{
			sqlVAL.union.val = false
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12011
		{
			sqlVAL.union.val = false
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12015
		{
			sqlVAL.union.val = types.Interval
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12019
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12023
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12058
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12066
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12074
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12080
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12089
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12098
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12107
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12113
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12122
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12128
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.union.val = nil
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12144
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12152
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12193
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12197
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12212
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12225
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12229
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12233
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12237
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12241
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12249
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12253
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12257
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12261
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12265
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12269
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12273
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12277
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12281
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12285
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12289
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12293
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12297
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12301
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12305
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12309
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12313
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12317
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12321
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12325
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12329
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12333
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12337
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12341
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12345
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12357
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12361
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12369
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12379
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12383
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12387
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12391
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12395
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12399
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12403
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12407
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12411
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12415
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12419
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12423
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12427
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12431
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12435
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12439
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12443
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12447
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12451
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12455
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12459
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12467
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12475
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12479
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12483
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12487
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12491
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12504
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12508
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12512
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12516
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12520
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12524
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12528
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12532
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12536
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12540
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12544
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12548
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12552
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12556
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12560
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12564
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12568
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12585
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12590
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12602
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12606
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12610
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12614
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12618
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12622
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12626
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12630
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12634
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12638
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12642
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12646
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12650
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12654
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12658
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12662
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12666
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12670
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12674
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12678
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12682
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12686
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12690
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12694
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12698
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12706
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12716
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12720
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12724
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12728
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12742
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12750
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12786
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12790
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12794
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12798
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12802
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12807
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12809
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12813
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12817
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12821
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12825
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12829
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12833
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12842
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12849
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12853
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12857
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12867
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12872
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12876
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12880
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12884
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12888
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12891
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12895
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12899
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12902
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12903
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12905
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12911
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12915
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12918
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12927
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12980
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12993
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13005
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13014
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13015
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13020
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13024
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13028
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13034
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13038
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13042
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13046
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13050
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13054
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13060
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13064
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13068
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13072
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13076
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13080
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13084
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13088
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13092
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13096
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13100
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13104
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13108
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13115
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13118
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13120
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13123
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13125
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13129
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13132
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13134
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13138
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13141
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13143
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13147
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13150
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13152
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13156
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13159
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13161
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13164
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13166
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13169
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13171
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13174
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13176
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13179
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13181
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13184
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13186
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13190
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13193
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13194
		{
			return unimplemented(sqllex, "treat")
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13196
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13200
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13204
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13208
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13212
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13215
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13217
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13220
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13226
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13230
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13236
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13240
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13247
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13251
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13257
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13261
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13267
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13275
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13279
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13283
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13290
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13310
		{
			sqlVAL.str = ""
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13316
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13320
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13326
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13334
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13342
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13350
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13356
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13369
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13397
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13401
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13405
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13409
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13416
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13425
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13429
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13433
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13437
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13442
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13455
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13459
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13466
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13478
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13482
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13486
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13502
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13503
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13504
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13505
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13506
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13507
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13508
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13509
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13510
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13511
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13512
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13513
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13515
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13516
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13517
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13518
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13519
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13520
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13521
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13522
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13523
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13524
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13525
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13526
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13527
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13528
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13529
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13530
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13531
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13532
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13533
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13534
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13535
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13536
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13537
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13542
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13558
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13565
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13566
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13567
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13568
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13591
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13595
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13601
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13605
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13609
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13620
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13624
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13630
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13634
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13641
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13647
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13651
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13657
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13661
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13667
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13671
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13677
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13681
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13687
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13691
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13714
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13718
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13722
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13728
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13735
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13739
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13756
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13760
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13764
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13768
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13772
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13778
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13784
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13790
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13794
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13798
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13804
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13816
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13823
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13827
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13833
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13839
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13843
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13850
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13856
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13860
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13867
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13873
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13877
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13882
		{
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13883
		{
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13887
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13891
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13897
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13906
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13910
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13914
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13926
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13930
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13936
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13940
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13959
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13967
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13990
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13999
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14003
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14007
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14011
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14017
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14021
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14036
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14040
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14052
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14056
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14065
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14076
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14085
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14093
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2500:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14110
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14195
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14203
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14207
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14213
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14217
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14223
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14229
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14236
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14263
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14270
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2537:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14274
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2538:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14278
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2540:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14292
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14296
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14300
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14313
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14322
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14340
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14353
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2551:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14360
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2559:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14385
		{
			sqlVAL.str = ""
		}
	case 2560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14391
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2561:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14395
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
